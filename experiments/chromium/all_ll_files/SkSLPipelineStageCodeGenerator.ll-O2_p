; ModuleID = '../../third_party/skia/src/sksl/codegen/SkSLPipelineStageCodeGenerator.cpp'
source_filename = "../../third_party/skia/src/sksl/codegen/SkSLPipelineStageCodeGenerator.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.SkSL::PipelineStage::PipelineStageCodeGenerator" = type <{ %"struct.SkSL::Program"*, i8*, i8*, %"class.SkSL::PipelineStage::Callbacks"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.133", %"class.std::__1::unordered_map.161", %"class.SkSL::StringStream"*, i8, [7 x i8] }>
%"struct.SkSL::Program" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.4", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.49", %"class.std::__1::unique_ptr.50", %"struct.SkSL::Program::Inputs", %"class.std::__1::vector.62", %"class.std::__1::vector.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.88" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::String"* }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.SkSL::ProgramConfig"* }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector"* }
%"class.std::__1::vector" = type opaque
%"class.std::__1::shared_ptr" = type { %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10" }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.SkSL::Type"* }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector.13", i32, i32, %"class.std::__1::vector.19", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.21" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.SkSL::Type::Field"* }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.30", %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.44", %"class.std::__1::__compressed_pair.46", [4 x i8] }>
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32", %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { i64 }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { float }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.49" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr.49", %"class.std::__1::vector.189", i8, %"class.std::__1::vector.197", %"class.std::__1::forward_list", %class.SkTHashMap.210, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.std::__1::vector.197" = type { %"class.std::__1::__vector_base.198" }
%"class.std::__1::__vector_base.198" = type { %"class.std::__1::unique_ptr.199"*, %"class.std::__1::unique_ptr.199"*, %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.std::__1::unique_ptr.199"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap.210 = type { %class.SkTHashTable.211 }
%class.SkTHashTable.211 = type { i32, i32, %class.SkAutoTArray.212 }
%class.SkAutoTArray.212 = type { %"class.std::__1::unique_ptr.213" }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair.297" }
%"struct.std::__1::pair.297" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.SkSL::Pool"* }
%"class.SkSL::Pool" = type { %"class.std::__1::unique_ptr.53" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %class.GrMemoryPool* }
%class.GrMemoryPool = type { %class.GrBlockAllocator }
%class.GrBlockAllocator = type { %"class.GrBlockAllocator::Block"*, i64, %"class.GrBlockAllocator::Block" }
%"class.GrBlockAllocator::Block" = type { %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32, i32, i32, i32 }
%"struct.SkSL::Program::Inputs" = type { i8, i8 }
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"*, %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.SkSL::ProgramElement"* }
%"class.SkSL::ProgramElement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.std::__1::unique_ptr.64"* }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"**, %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.SkSL::ProgramElement"** }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.SkSL::ModifiersPool"* }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.SkSL::ProgramUsage"* }
%"class.SkSL::ProgramUsage" = type { %class.SkTHashMap, %class.SkTHashMap.97 }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.91" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair", i32, [4 x i8] }
%"struct.SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.base.299", [4 x i8] }
%"struct.std::__1::pair.base.299" = type <{ %"class.SkSL::Variable"*, %"struct.SkSL::ProgramUsage::VariableCounts" }>
%"class.SkSL::Variable" = type <{ %"class.SkSL::Symbol", %"class.SkSL::VarDeclaration"*, %"struct.SkSL::Modifiers"*, i8, i8, [6 x i8] }>
%"class.SkSL::VarDeclaration" = type { %"class.SkSL::Statement", %"class.SkSL::Variable"*, %"class.SkSL::Type"*, i32, %"class.std::__1::unique_ptr.256" }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.SkSL::Expression"* }
%"class.SkSL::Expression" = type { %"class.SkSL::IRNode", %"class.SkSL::Type"* }
%"struct.SkSL::ProgramUsage::VariableCounts" = type { i32, i32, i32 }
%class.SkTHashMap.97 = type { %class.SkTHashTable.98 }
%class.SkTHashTable.98 = type { i32, i32, %class.SkAutoTArray.99 }
%class.SkAutoTArray.99 = type { %"class.std::__1::unique_ptr.100" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair", i32, [4 x i8] }
%"struct.SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.base.301", [4 x i8] }
%"struct.std::__1::pair.base.301" = type <{ %"class.SkSL::FunctionDeclaration"*, i32 }>
%"class.SkSL::FunctionDeclaration" = type { %"class.SkSL::Symbol", %"class.SkSL::FunctionDefinition"*, %"struct.SkSL::Modifiers"*, %"class.std::__1::vector.254", %"class.SkSL::Type"*, i8, i8, i32 }
%"class.SkSL::FunctionDefinition" = type { %"class.SkSL::ProgramElement", %"class.SkSL::FunctionDeclaration"*, i8, %"class.std::__1::unique_ptr.219", %"class.std::__1::unordered_set.225", %"struct.SkSL::ASTNode"* }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.SkSL::Statement"* }
%"class.std::__1::unordered_set.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.244", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.SkSL::ASTNode" = type { %"class.std::__1::vector.247"*, %"struct.SkSL::ASTNode::NodeData", i32, i32, %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID" }
%"class.std::__1::vector.247" = type { %"class.std::__1::__vector_base.248" }
%"class.std::__1::__vector_base.248" = type { %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"*, %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"struct.SkSL::ASTNode"* }
%"struct.SkSL::ASTNode::NodeData" = type { [128 x i8], i32 }
%"class.SkSL::ASTNode::ID" = type { i32 }
%"class.std::__1::vector.254" = type { %"class.std::__1::__vector_base.255" }
%"class.std::__1::__vector_base.255" = type { %"class.SkSL::Variable"**, %"class.SkSL::Variable"**, %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.SkSL::Variable"** }
%"class.SkSL::PipelineStage::Callbacks" = type { i32 (...)** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.109" }
%"class.std::__1::__hash_table.109" = type <{ %"class.std::__1::unique_ptr.110", %"class.std::__1::__compressed_pair.120", %"class.std::__1::__compressed_pair.125", %"class.std::__1::__compressed_pair.128", [4 x i8] }>
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112", %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"struct.std::__1::__hash_node_base.113"** }
%"struct.std::__1::__hash_node_base.113" = type { %"struct.std::__1::__hash_node_base.113"* }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.std::__1::__bucket_list_deallocator.115" }
%"class.std::__1::__bucket_list_deallocator.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"struct.std::__1::__hash_node_base.113" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::unordered_map.133" = type { %"class.std::__1::__hash_table.134" }
%"class.std::__1::__hash_table.134" = type <{ %"class.std::__1::unique_ptr.135", %"class.std::__1::__compressed_pair.145", %"class.std::__1::__compressed_pair.150", %"class.std::__1::__compressed_pair.155", [4 x i8] }>
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137", %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"struct.std::__1::__hash_node_base.138"** }
%"struct.std::__1::__hash_node_base.138" = type { %"struct.std::__1::__hash_node_base.138"* }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.std::__1::__bucket_list_deallocator.140" }
%"class.std::__1::__bucket_list_deallocator.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"struct.std::__1::__hash_node_base.138" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::unordered_map.161" = type { %"class.std::__1::__hash_table.162" }
%"class.std::__1::__hash_table.162" = type <{ %"class.std::__1::unique_ptr.163", %"class.std::__1::__compressed_pair.173", %"class.std::__1::__compressed_pair.178", %"class.std::__1::__compressed_pair.183", [4 x i8] }>
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165", %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base.166"** }
%"struct.std::__1::__hash_node_base.166" = type { %"struct.std::__1::__hash_node_base.166"* }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.std::__1::__bucket_list_deallocator.168" }
%"class.std::__1::__bucket_list_deallocator.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.std::__1::__hash_node_base.166" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.SkSL::StringStream" = type { %"class.SkSL::OutputStream", %class.SkDynamicMemoryWStream, %"class.SkSL::String" }
%"class.SkSL::OutputStream" = type { i32 (...)** }
%class.SkDynamicMemoryWStream = type { %class.SkWStream, %"struct.SkDynamicMemoryWStream::Block"*, %"struct.SkDynamicMemoryWStream::Block"*, i64 }
%class.SkWStream = type { i32 (...)** }
%"struct.SkDynamicMemoryWStream::Block" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.SkSL::FunctionCall" = type { %"class.SkSL::Expression", %"class.SkSL::FunctionDeclaration"*, %class.SkSTArray }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [16 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr.256"*, i64 }
%"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer" = type { %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"*, %"class.SkSL::StringStream"*, %"class.SkSL::StringStream" }
%"class.SkSL::Operator" = type { i32 }
%"class.SkSL::BinaryExpression" = type { %"class.SkSL::Expression", %"class.std::__1::unique_ptr.256", %"class.SkSL::Operator", %"class.std::__1::unique_ptr.256" }
%"class.SkSL::AnyConstructor" = type { %"class.SkSL::Expression", %"class.std::__1::unique_ptr.256" }
%"class.SkSL::FieldAccess" = type { %"class.SkSL::Expression", i32, i8, %"class.std::__1::unique_ptr.256" }
%"class.SkSL::VariableReference" = type <{ %"class.SkSL::Expression", %"class.SkSL::Variable"*, i8, [7 x i8] }>
%"class.SkSL::TernaryExpression" = type { %"class.SkSL::Expression", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.256" }
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.SkSL::IfStatement" = type <{ %"class.SkSL::Statement", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.219", i8, [7 x i8] }>
%"class.SkSL::Block" = type <{ %"class.SkSL::Statement", %class.SkSTArray.271, %"class.std::__1::shared_ptr.49", i8, [7 x i8] }>
%class.SkSTArray.271 = type { %class.SkAlignedSTStorage.272, %class.SkTArray.273 }
%class.SkAlignedSTStorage.272 = type { [16 x i8] }
%class.SkTArray.273 = type { %"class.std::__1::unique_ptr.219"*, i64 }
%"class.SkSL::ForStatement" = type { %"class.SkSL::Statement", %"class.std::__1::shared_ptr.49", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.219" }
%"class.SkSL::ReturnStatement" = type { %"class.SkSL::Statement", %"class.std::__1::unique_ptr.256" }
%"struct.std::__1::pair" = type { %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::String" }
%"class.SkSL::GlobalVarDeclaration" = type { %"class.SkSL::ProgramElement", %"class.std::__1::unique_ptr.219" }
%"struct.std::__1::pair.270" = type { %"class.SkSL::Variable"*, %"class.SkSL::String" }
%"class.SkSL::StructDefinition" = type { %"class.SkSL::ProgramElement", %"class.SkSL::Type"* }
%"struct.std::__1::pair.283" = type { %"class.SkSL::Type"*, %"class.SkSL::String" }
%"class.SkSL::PrefixExpression" = type { %"class.SkSL::Expression", %"class.SkSL::Operator", %"class.std::__1::unique_ptr.256" }
%"class.SkSL::PostfixExpression" = type <{ %"class.SkSL::Expression", %"class.std::__1::unique_ptr.256", %"class.SkSL::Operator", [4 x i8] }>
%"struct.SkSL::Swizzle" = type { %"class.SkSL::Expression", %"class.std::__1::unique_ptr.256", %class.SkSTArray.284 }
%class.SkSTArray.284 = type { %class.SkAlignedSTStorage.285, %class.SkTArray.286 }
%class.SkAlignedSTStorage.285 = type { [4 x i8] }
%class.SkTArray.286 = type { i8*, i64 }
%"struct.SkSL::IndexExpression" = type { %"class.SkSL::Expression", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.256" }
%"class.SkSL::DoStatement" = type { %"class.SkSL::Statement", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.256" }

$_ZNK4SkSL12StringStream3strEv = comdat any

$_ZN4SkSL13PipelineStage26PipelineStageCodeGeneratorD2Ev = comdat any

$_ZNK4SkSL12OutputStream7isValidEv = comdat any

$_ZN4SkSL12StringStream6write8Eh = comdat any

$_ZN4SkSL12StringStream9writeTextEPKc = comdat any

$_ZN4SkSL12StringStream5writeEPKvm = comdat any

$_ZN4SkSL12StringStreamD2Ev = comdat any

$_ZN4SkSL12StringStreamD0Ev = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JNS_4pairIKS5_S6_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JNS_4pairIKS5_S6_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4TypeENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JNS_4pairIKS5_S6_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4TypeENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4TypeENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm = comdat any

$_ZTVN4SkSL12StringStreamE = comdat any

@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"sample\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.4 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"@\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"if (\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c") \00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c" else \00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"half4(\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"%s%s%s %s(\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"inline \00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"noinline \00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c"%s%s%s %s\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c" = \00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c";\0A\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"struct \00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c" {\0A\00", align 1
@.str.22 = private unnamed_addr constant [4 x i8] c"};\0A\00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.24 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.25 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c"x\00y\00z\00w\00\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c" ? \00", align 1
@.str.28 = private unnamed_addr constant [4 x i8] c" : \00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"const \00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"inout \00", align 1
@.str.31 = private unnamed_addr constant [4 x i8] c"in \00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"out \00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c"break;\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"continue;\00", align 1
@.str.35 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@.str.36 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"do \00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c" while (\00", align 1
@.str.39 = private unnamed_addr constant [3 x i8] c");\00", align 1
@.str.40 = private unnamed_addr constant [8 x i8] c"while (\00", align 1
@.str.41 = private unnamed_addr constant [6 x i8] c"for (\00", align 1
@.str.42 = private unnamed_addr constant [3 x i8] c"; \00", align 1
@__const._ZN4SkSL13PipelineStage14ConvertProgramERKNS_7ProgramEPKcS5_PNS0_9CallbacksE.generator = private unnamed_addr constant %"class.SkSL::PipelineStage::PipelineStageCodeGenerator" <{ %"struct.SkSL::Program"* inttoptr (i64 -6148914691236517206 to %"struct.SkSL::Program"*), i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), %"class.SkSL::PipelineStage::Callbacks"* inttoptr (i64 -6148914691236517206 to %"class.SkSL::PipelineStage::Callbacks"*), %"class.std::__1::unordered_map" { %"class.std::__1::__hash_table.109" <{ %"class.std::__1::unique_ptr.110" { %"class.std::__1::__compressed_pair.111" { %"struct.std::__1::__compressed_pair_elem.112" { %"struct.std::__1::__hash_node_base.113"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.113"**) }, %"struct.std::__1::__compressed_pair_elem.114" { %"class.std::__1::__bucket_list_deallocator.115" { %"class.std::__1::__compressed_pair.116" { %"struct.std::__1::__compressed_pair_elem.35" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.120" { %"struct.std::__1::__compressed_pair_elem.121" { %"struct.std::__1::__hash_node_base.113" { %"struct.std::__1::__hash_node_base.113"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.113"*) } } }, %"class.std::__1::__compressed_pair.125" { %"struct.std::__1::__compressed_pair_elem.35" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.128" { %"struct.std::__1::__compressed_pair_elem.47" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.133" { %"class.std::__1::__hash_table.134" <{ %"class.std::__1::unique_ptr.135" { %"class.std::__1::__compressed_pair.136" { %"struct.std::__1::__compressed_pair_elem.137" { %"struct.std::__1::__hash_node_base.138"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.138"**) }, %"struct.std::__1::__compressed_pair_elem.139" { %"class.std::__1::__bucket_list_deallocator.140" { %"class.std::__1::__compressed_pair.141" { %"struct.std::__1::__compressed_pair_elem.35" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.145" { %"struct.std::__1::__compressed_pair_elem.146" { %"struct.std::__1::__hash_node_base.138" { %"struct.std::__1::__hash_node_base.138"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.138"*) } } }, %"class.std::__1::__compressed_pair.150" { %"struct.std::__1::__compressed_pair_elem.35" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.155" { %"struct.std::__1::__compressed_pair_elem.47" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.161" { %"class.std::__1::__hash_table.162" <{ %"class.std::__1::unique_ptr.163" { %"class.std::__1::__compressed_pair.164" { %"struct.std::__1::__compressed_pair_elem.165" { %"struct.std::__1::__hash_node_base.166"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.166"**) }, %"struct.std::__1::__compressed_pair_elem.167" { %"class.std::__1::__bucket_list_deallocator.168" { %"class.std::__1::__compressed_pair.169" { %"struct.std::__1::__compressed_pair_elem.35" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.173" { %"struct.std::__1::__compressed_pair_elem.174" { %"struct.std::__1::__hash_node_base.166" { %"struct.std::__1::__hash_node_base.166"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.166"*) } } }, %"class.std::__1::__compressed_pair.178" { %"struct.std::__1::__compressed_pair_elem.35" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.183" { %"struct.std::__1::__compressed_pair_elem.47" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.SkSL::StringStream"* inttoptr (i64 -6148914691236517206 to %"class.SkSL::StringStream"*), i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, align 8
@_ZTVN4SkSL12StringStreamE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.SkSL::OutputStream"*)* @_ZNK4SkSL12OutputStream7isValidEv to i8*), i8* bitcast (void (%"class.SkSL::StringStream"*, i8)* @_ZN4SkSL12StringStream6write8Eh to i8*), i8* bitcast (void (%"class.SkSL::StringStream"*, i8*)* @_ZN4SkSL12StringStream9writeTextEPKc to i8*), i8* bitcast (void (%"class.SkSL::StringStream"*, i8*, i64)* @_ZN4SkSL12StringStream5writeEPKvm to i8*), i8* bitcast (void (%"class.SkSL::StringStream"*)* @_ZN4SkSL12StringStreamD2Ev to i8*), i8* bitcast (void (%"class.SkSL::StringStream"*)* @_ZN4SkSL12StringStreamD0Ev to i8*)] }, comdat, align 8
@_ZTV22SkDynamicMemoryWStream = external unnamed_addr constant { [7 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator5writeEPKc(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %4 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %3, align 8
  %5 = bitcast %"class.SkSL::StringStream"* %4 to void (%"class.SkSL::StringStream"*, i8*)***
  %6 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %6, i64 2
  %8 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %7, align 8
  tail call void %8(%"class.SkSL::StringStream"* %4, i8* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator9writeLineEPKc(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %6 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %5, align 8
  %7 = bitcast %"class.SkSL::StringStream"* %6 to void (%"class.SkSL::StringStream"*, i8*)***
  %8 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %8, i64 2
  %10 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %9, align 8
  tail call void %10(%"class.SkSL::StringStream"* %6, i8* nonnull %1) #11
  br label %11

11:                                               ; preds = %2, %4
  %12 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %13 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %12, align 8
  %14 = bitcast %"class.SkSL::StringStream"* %13 to void (%"class.SkSL::StringStream"*, i8*)***
  %15 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %15, i64 2
  %17 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %16, align 8
  tail call void %17(%"class.SkSL::StringStream"* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator5writeERKNS_6StringE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* nocapture readonly, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %4 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %3, align 8
  %5 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.SkSL::String"* %1 to i8*
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i8* %10, i8* %13
  %16 = select i1 %8, i64 %12, i64 %14
  %17 = bitcast %"class.SkSL::StringStream"* %4 to void (%"class.SkSL::StringStream"*, i8*, i64)***
  %18 = load void (%"class.SkSL::StringStream"*, i8*, i64)**, void (%"class.SkSL::StringStream"*, i8*, i64)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %18, i64 3
  %20 = load void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %19, align 8
  tail call void %20(%"class.SkSL::StringStream"* %4, i8* %15, i64 %16) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator5writeENS_14StringFragmentE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* nocapture readonly, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %5 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %4, align 8
  %6 = bitcast %"class.SkSL::StringStream"* %5 to void (%"class.SkSL::StringStream"*, i8*, i64)***
  %7 = load void (%"class.SkSL::StringStream"*, i8*, i64)**, void (%"class.SkSL::StringStream"*, i8*, i64)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %7, i64 3
  %9 = load void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %8, align 8
  tail call void %9(%"class.SkSL::StringStream"* %5, i8* %1, i64 %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator17writeFunctionCallERKNS_12FunctionCallE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"*, %"class.SkSL::FunctionCall"* nocapture readonly dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 1
  %11 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %10, align 8
  %12 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %11, i64 0, i32 5
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #11
  br i1 %14, label %233, label %16

16:                                               ; preds = %2
  %17 = bitcast <2 x i64>* %3 to %"struct.SkSL::StringFragment"*
  %18 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %11, i64 0, i32 0, i32 1, i32 0
  %19 = bitcast i8** %18 to <2 x i64>*
  %20 = load <2 x i64>, <2 x i64>* %19, align 8
  store <2 x i64> %20, <2 x i64>* %3, align 16
  %21 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqEPKc(%"struct.SkSL::StringFragment"* nonnull %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #11
  br i1 %21, label %22, label %234

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %24 = bitcast i8* %23 to %"class.std::__1::unique_ptr.256"**
  %25 = load %"class.std::__1::unique_ptr.256"*, %"class.std::__1::unique_ptr.256"** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.256"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %26, align 8
  %28 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 0
  %29 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %28, align 8
  %30 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %29, i64 0, i32 6
  %31 = bitcast %"class.std::__1::vector.62"* %30 to i64*
  %32 = load i64, i64* %31, align 8, !noalias !3
  %33 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %29, i64 0, i32 6, i32 0, i32 1
  %34 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %29, i64 0, i32 7
  %35 = bitcast %"class.std::__1::vector.75"* %34 to i64*
  %36 = load i64, i64* %35, align 8, !noalias !3
  %37 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %29, i64 0, i32 7, i32 0, i32 1
  %38 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %37, align 8, !noalias !3
  %39 = load %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"** %33, align 8, !noalias !6
  %40 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %27, i64 1
  %41 = bitcast %"class.SkSL::Expression"* %40 to %"class.SkSL::Variable"**
  %42 = inttoptr i64 %32 to %"class.std::__1::unique_ptr.64"*
  %43 = icmp eq %"class.std::__1::unique_ptr.64"* %39, %42
  %44 = inttoptr i64 %36 to %"class.SkSL::ProgramElement"**
  %45 = icmp eq %"class.SkSL::ProgramElement"** %38, %44
  %46 = and i1 %43, %45
  br i1 %46, label %90, label %47

47:                                               ; preds = %22, %77
  %48 = phi i1 [ %88, %77 ], [ %45, %22 ]
  %49 = phi %"class.SkSL::ProgramElement"** [ %87, %77 ], [ %44, %22 ]
  %50 = phi %"class.std::__1::unique_ptr.64"* [ %85, %77 ], [ %42, %22 ]
  %51 = phi i32 [ %78, %77 ], [ 0, %22 ]
  %52 = phi i64 [ %84, %77 ], [ %36, %22 ]
  %53 = phi i64 [ %83, %77 ], [ %32, %22 ]
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %50, i64 0, i32 0, i32 0, i32 0
  %55 = select i1 %48, %"class.SkSL::ProgramElement"** %54, %"class.SkSL::ProgramElement"** %49
  %56 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %55, align 8
  %57 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %56, i64 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 4
  br i1 %59, label %60, label %77

60:                                               ; preds = %47
  %61 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %56, i64 1
  %62 = bitcast %"class.SkSL::ProgramElement"* %61 to %"class.SkSL::VarDeclaration"**
  %63 = load %"class.SkSL::VarDeclaration"*, %"class.SkSL::VarDeclaration"** %62, align 8
  %64 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %63, i64 0, i32 1
  %65 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %64, align 8
  %66 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %41, align 8
  %67 = icmp eq %"class.SkSL::Variable"* %65, %66
  br i1 %67, label %90, label %68

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %65, i64 0, i32 0, i32 2
  %70 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %69, align 8
  %71 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %70, i64 0, i32 3
  %72 = load i32, i32* %71, align 8
  %73 = add i32 %72, -13
  %74 = icmp ult i32 %73, 2
  %75 = zext i1 %74 to i32
  %76 = add nsw i32 %51, %75
  br label %77

77:                                               ; preds = %47, %68
  %78 = phi i32 [ %51, %47 ], [ %76, %68 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %50, i64 1
  %80 = ptrtoint %"class.std::__1::unique_ptr.64"* %79 to i64
  %81 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %49, i64 1
  %82 = ptrtoint %"class.SkSL::ProgramElement"** %81 to i64
  %83 = select i1 %48, i64 %80, i64 %53
  %84 = select i1 %48, i64 %52, i64 %82
  %85 = inttoptr i64 %83 to %"class.std::__1::unique_ptr.64"*
  %86 = icmp eq %"class.std::__1::unique_ptr.64"* %39, %85
  %87 = inttoptr i64 %84 to %"class.SkSL::ProgramElement"**
  %88 = icmp eq %"class.SkSL::ProgramElement"** %38, %87
  %89 = and i1 %86, %88
  br i1 %89, label %90, label %47

90:                                               ; preds = %60, %77, %22
  %91 = phi i32 [ 0, %22 ], [ %51, %60 ], [ %78, %77 ]
  %92 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #11
  %93 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 0, i64 24, i1 false) #11
  %94 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #11
  %95 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 0, i64 24, i1 false) #11
  %96 = bitcast %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %96) #11
  %97 = getelementptr inbounds %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer", %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer"* %6, i64 0, i32 0
  store %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"** %97, align 8
  %98 = getelementptr inbounds %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer", %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer"* %6, i64 0, i32 2
  %99 = bitcast %"class.SkSL::StringStream"* %98 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %99, align 8
  %100 = getelementptr inbounds %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer", %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer"* %6, i64 0, i32 2, i32 1, i32 1
  %101 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %100 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 48, i1 false) #11
  %102 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %103 = bitcast %"class.SkSL::StringStream"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer", %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer"* %6, i64 0, i32 1
  %106 = bitcast %"class.SkSL::StringStream"** %105 to i64*
  store i64 %104, i64* %106, align 8
  store %"class.SkSL::StringStream"* %98, %"class.SkSL::StringStream"** %102, align 8
  %107 = load %"class.std::__1::unique_ptr.256"*, %"class.std::__1::unique_ptr.256"** %24, align 8
  %108 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 24
  %109 = bitcast i8* %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = lshr i64 %110, 1
  %112 = and i64 %111, 2147483647
  %113 = add nsw i64 %112, -1
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.256"* %107, i64 %113, i32 0, i32 0, i32 0
  %115 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %114, align 8
  call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %115, i32 17)
  %116 = bitcast %"class.SkSL::Expression"* %27 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %117 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %116, align 8
  %118 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %117, i64 3
  %119 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %118, align 8
  %120 = call dereferenceable(184) %"class.SkSL::Type"* %119(%"class.SkSL::Expression"* %27) #11
  %121 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %120, i64 0, i32 3
  %122 = load i32, i32* %121, align 8
  %123 = icmp eq i32 %122, 14
  %124 = call dereferenceable(24) %"class.SkSL::String"* @_ZNK4SkSL12StringStream3strEv(%"class.SkSL::StringStream"* %98)
  br i1 %123, label %125, label %141

125:                                              ; preds = %90
  %126 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0
  %127 = icmp eq %"class.SkSL::String"* %5, %124
  br i1 %127, label %157, label %128

128:                                              ; preds = %125
  %129 = bitcast %"class.SkSL::String"* %124 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  %131 = load i8, i8* %130, align 1
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %135, label %133

133:                                              ; preds = %128
  %134 = bitcast %"class.SkSL::String"* %124 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %94, i8* align 8 %134, i64 24, i1 false) #11
  br label %157

135:                                              ; preds = %128
  %136 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load i8*, i8** %136, align 8
  %138 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %139 = load i64, i64* %138, align 8
  %140 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %126, i8* %137, i64 %139) #11
  br label %157

141:                                              ; preds = %90
  %142 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0
  %143 = icmp eq %"class.SkSL::String"* %4, %124
  br i1 %143, label %157, label %144

144:                                              ; preds = %141
  %145 = bitcast %"class.SkSL::String"* %124 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %146 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %145, i64 0, i32 1, i32 0
  %147 = load i8, i8* %146, align 1
  %148 = icmp slt i8 %147, 0
  br i1 %148, label %151, label %149

149:                                              ; preds = %144
  %150 = bitcast %"class.SkSL::String"* %124 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %92, i8* align 8 %150, i64 24, i1 false) #11
  br label %157

151:                                              ; preds = %144
  %152 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  %154 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %155 = load i64, i64* %154, align 8
  %156 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %142, i8* %153, i64 %155) #11
  br label %157

157:                                              ; preds = %151, %149, %141, %135, %133, %125
  %158 = load i64, i64* %106, align 8
  %159 = load %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"*, %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"** %97, align 8
  %160 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %159, i64 0, i32 7
  %161 = bitcast %"class.SkSL::StringStream"** %160 to i64*
  store i64 %158, i64* %161, align 8
  %162 = getelementptr inbounds %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer", %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer"* %6, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %162, align 8
  %163 = getelementptr inbounds %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer", %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer"* %6, i64 0, i32 2, i32 2, i32 0
  %164 = bitcast %"class.std::__1::basic_string"* %163 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %165 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %164, i64 0, i32 1, i32 0
  %166 = load i8, i8* %165, align 1
  %167 = icmp slt i8 %166, 0
  br i1 %167, label %168, label %171

168:                                              ; preds = %157
  %169 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %163, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load i8*, i8** %169, align 8
  call void @_ZdlPv(i8* %170) #12
  br label %171

171:                                              ; preds = %157, %168
  %172 = getelementptr inbounds %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer", %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer"* %6, i64 0, i32 2, i32 1
  call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %172) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %96) #11
  %173 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %173) #11
  %174 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 3
  %175 = load %"class.SkSL::PipelineStage::Callbacks"*, %"class.SkSL::PipelineStage::Callbacks"** %174, align 8
  %176 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %176, i8* nonnull align 8 %94, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 0, i64 24, i1 false) #11
  %177 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %177, i8* nonnull align 8 %92, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 0, i64 24, i1 false) #11
  %178 = bitcast %"class.SkSL::PipelineStage::Callbacks"* %175 to void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i32, %"class.SkSL::String"*, %"class.SkSL::String"*)***
  %179 = load void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i32, %"class.SkSL::String"*, %"class.SkSL::String"*)**, void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i32, %"class.SkSL::String"*, %"class.SkSL::String"*)*** %178, align 8
  %180 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i32, %"class.SkSL::String"*, %"class.SkSL::String"*)*, void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i32, %"class.SkSL::String"*, %"class.SkSL::String"*)** %179, i64 7
  %181 = load void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i32, %"class.SkSL::String"*, %"class.SkSL::String"*)*, void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i32, %"class.SkSL::String"*, %"class.SkSL::String"*)** %180, align 8
  call void %181(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::PipelineStage::Callbacks"* %175, i32 %91, %"class.SkSL::String"* nonnull %8, %"class.SkSL::String"* nonnull %9) #11
  %182 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %102, align 8
  %183 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %184 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %183, i64 0, i32 1, i32 0
  %185 = load i8, i8* %184, align 1
  %186 = icmp slt i8 %185, 0
  %187 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load i8*, i8** %187, align 8
  %189 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %190 = load i64, i64* %189, align 8
  %191 = zext i8 %185 to i64
  %192 = select i1 %186, i8* %188, i8* %173
  %193 = select i1 %186, i64 %190, i64 %191
  %194 = bitcast %"class.SkSL::StringStream"* %182 to void (%"class.SkSL::StringStream"*, i8*, i64)***
  %195 = load void (%"class.SkSL::StringStream"*, i8*, i64)**, void (%"class.SkSL::StringStream"*, i8*, i64)*** %194, align 8
  %196 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %195, i64 3
  %197 = load void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %196, align 8
  call void %197(%"class.SkSL::StringStream"* %182, i8* %192, i64 %193) #11
  %198 = load i8, i8* %184, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %202

200:                                              ; preds = %171
  %201 = load i8*, i8** %187, align 8
  call void @_ZdlPv(i8* %201) #12
  br label %202

202:                                              ; preds = %171, %200
  %203 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %204 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %203, i64 0, i32 1, i32 0
  %205 = load i8, i8* %204, align 1
  %206 = icmp slt i8 %205, 0
  br i1 %206, label %207, label %210

207:                                              ; preds = %202
  %208 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load i8*, i8** %208, align 8
  call void @_ZdlPv(i8* %209) #12
  br label %210

210:                                              ; preds = %202, %207
  %211 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %212 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %211, i64 0, i32 1, i32 0
  %213 = load i8, i8* %212, align 1
  %214 = icmp slt i8 %213, 0
  br i1 %214, label %215, label %218

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load i8*, i8** %216, align 8
  call void @_ZdlPv(i8* %217) #12
  br label %218

218:                                              ; preds = %210, %215
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %173) #11
  %219 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %220 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %219, i64 0, i32 1, i32 0
  %221 = load i8, i8* %220, align 1
  %222 = icmp slt i8 %221, 0
  br i1 %222, label %223, label %225

223:                                              ; preds = %218
  %224 = load i8*, i8** %95, align 8
  call void @_ZdlPv(i8* %224) #12
  br label %225

225:                                              ; preds = %218, %223
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #11
  %226 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %227 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %226, i64 0, i32 1, i32 0
  %228 = load i8, i8* %227, align 1
  %229 = icmp slt i8 %228, 0
  br i1 %229, label %230, label %232

230:                                              ; preds = %225
  %231 = load i8*, i8** %93, align 8
  call void @_ZdlPv(i8* %231) #12
  br label %232

232:                                              ; preds = %225, %230
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #11
  br label %392

233:                                              ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #11
  br label %248

234:                                              ; preds = %16
  %235 = load i8, i8* %12, align 8, !range !2
  %236 = icmp eq i8 %235, 0
  br i1 %236, label %248, label %237

237:                                              ; preds = %234
  %238 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %11, i64 0, i32 0, i32 1, i32 0
  %239 = load i8*, i8** %238, align 8
  %240 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %11, i64 0, i32 0, i32 1, i32 1
  %241 = load i64, i64* %240, align 8
  %242 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %243 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %242, align 8
  %244 = bitcast %"class.SkSL::StringStream"* %243 to void (%"class.SkSL::StringStream"*, i8*, i64)***
  %245 = load void (%"class.SkSL::StringStream"*, i8*, i64)**, void (%"class.SkSL::StringStream"*, i8*, i64)*** %244, align 8
  %246 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %245, i64 3
  %247 = load void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %246, align 8
  call void %247(%"class.SkSL::StringStream"* %243, i8* %239, i64 %241) #11
  br label %336

248:                                              ; preds = %233, %234
  %249 = ptrtoint %"class.SkSL::FunctionDeclaration"* %11 to i64
  %250 = lshr i64 %249, 32
  %251 = shl i64 %249, 3
  %252 = and i64 %251, 4294967288
  %253 = add nuw nsw i64 %252, 8
  %254 = xor i64 %253, %250
  %255 = mul i64 %254, -7070675565921424023
  %256 = lshr i64 %255, 47
  %257 = xor i64 %255, %250
  %258 = xor i64 %257, %256
  %259 = mul i64 %258, -7070675565921424023
  %260 = lshr i64 %259, 47
  %261 = xor i64 %260, %259
  %262 = mul i64 %261, -7070675565921424023
  %263 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %264 = load i64, i64* %263, align 8
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %314, label %266

266:                                              ; preds = %248
  %267 = call i64 @llvm.ctpop.i64(i64 %264) #11, !range !9
  %268 = icmp ugt i64 %267, 1
  br i1 %268, label %272, label %269

269:                                              ; preds = %266
  %270 = add i64 %264, -1
  %271 = and i64 %270, %262
  br label %276

272:                                              ; preds = %266
  %273 = icmp ult i64 %262, %264
  br i1 %273, label %276, label %274

274:                                              ; preds = %272
  %275 = urem i64 %262, %264
  br label %276

276:                                              ; preds = %274, %272, %269
  %277 = phi i64 [ %271, %269 ], [ %275, %274 ], [ %262, %272 ]
  %278 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %278, align 8
  %280 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %279, i64 %277
  %281 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %280, align 8
  %282 = icmp eq %"struct.std::__1::__hash_node_base.138"* %281, null
  br i1 %282, label %314, label %283

283:                                              ; preds = %276
  %284 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %281, i64 0, i32 0
  %285 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %284, align 8
  %286 = icmp eq %"struct.std::__1::__hash_node_base.138"* %285, null
  br i1 %286, label %314, label %287

287:                                              ; preds = %283
  %288 = add i64 %264, -1
  br label %289

289:                                              ; preds = %310, %287
  %290 = phi %"struct.std::__1::__hash_node_base.138"* [ %285, %287 ], [ %312, %310 ]
  %291 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %290, i64 1
  %292 = bitcast %"struct.std::__1::__hash_node_base.138"* %291 to i64*
  %293 = load i64, i64* %292, align 8
  %294 = icmp eq i64 %293, %262
  br i1 %294, label %305, label %295

295:                                              ; preds = %289
  br i1 %268, label %298, label %296

296:                                              ; preds = %295
  %297 = and i64 %293, %288
  br label %302

298:                                              ; preds = %295
  %299 = icmp ult i64 %293, %264
  br i1 %299, label %302, label %300

300:                                              ; preds = %298
  %301 = urem i64 %293, %264
  br label %302

302:                                              ; preds = %300, %298, %296
  %303 = phi i64 [ %297, %296 ], [ %301, %300 ], [ %293, %298 ]
  %304 = icmp eq i64 %303, %277
  br i1 %304, label %310, label %314

305:                                              ; preds = %289
  %306 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %290, i64 2
  %307 = bitcast %"struct.std::__1::__hash_node_base.138"* %306 to %"class.SkSL::FunctionDeclaration"**
  %308 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %307, align 8
  %309 = icmp eq %"class.SkSL::FunctionDeclaration"* %308, %11
  br i1 %309, label %314, label %310

310:                                              ; preds = %305, %302
  %311 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %290, i64 0, i32 0
  %312 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %311, align 8
  %313 = icmp eq %"struct.std::__1::__hash_node_base.138"* %312, null
  br i1 %313, label %314, label %289

314:                                              ; preds = %302, %305, %310, %248, %276, %283
  %315 = phi %"struct.std::__1::__hash_node_base.138"* [ null, %276 ], [ null, %248 ], [ null, %283 ], [ %290, %305 ], [ null, %310 ], [ null, %302 ]
  %316 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %315, i64 3
  %317 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %318 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %317, align 8
  %319 = bitcast %"struct.std::__1::__hash_node_base.138"* %316 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %320 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %319, i64 0, i32 1, i32 0
  %321 = load i8, i8* %320, align 1
  %322 = icmp slt i8 %321, 0
  %323 = bitcast %"struct.std::__1::__hash_node_base.138"* %316 to i8**
  %324 = load i8*, i8** %323, align 8
  %325 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %315, i64 4
  %326 = bitcast %"struct.std::__1::__hash_node_base.138"* %325 to i64*
  %327 = load i64, i64* %326, align 8
  %328 = bitcast %"struct.std::__1::__hash_node_base.138"* %316 to i8*
  %329 = zext i8 %321 to i64
  %330 = select i1 %322, i8* %324, i8* %328
  %331 = select i1 %322, i64 %327, i64 %329
  %332 = bitcast %"class.SkSL::StringStream"* %318 to void (%"class.SkSL::StringStream"*, i8*, i64)***
  %333 = load void (%"class.SkSL::StringStream"*, i8*, i64)**, void (%"class.SkSL::StringStream"*, i8*, i64)*** %332, align 8
  %334 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %333, i64 3
  %335 = load void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %334, align 8
  call void %335(%"class.SkSL::StringStream"* %318, i8* %330, i64 %331) #11
  br label %336

336:                                              ; preds = %314, %237
  %337 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %338 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %337, align 8
  %339 = bitcast %"class.SkSL::StringStream"* %338 to void (%"class.SkSL::StringStream"*, i8*)***
  %340 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %339, align 8
  %341 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %340, i64 2
  %342 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %341, align 8
  call void %342(%"class.SkSL::StringStream"* %338, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #11
  %343 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %344 = bitcast i8* %343 to %"class.std::__1::unique_ptr.256"**
  %345 = load %"class.std::__1::unique_ptr.256"*, %"class.std::__1::unique_ptr.256"** %344, align 8
  %346 = icmp eq %"class.std::__1::unique_ptr.256"* %345, null
  br i1 %346, label %347, label %353

347:                                              ; preds = %336
  %348 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %337, align 8
  %349 = bitcast %"class.SkSL::StringStream"* %348 to void (%"class.SkSL::StringStream"*, i8*)***
  %350 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %349, align 8
  %351 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %350, i64 2
  %352 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %351, align 8
  br label %376

353:                                              ; preds = %336
  %354 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 24
  %355 = bitcast i8* %354 to i64*
  %356 = load i64, i64* %355, align 8
  %357 = lshr i64 %356, 1
  %358 = and i64 %357, 2147483647
  %359 = getelementptr inbounds %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.256"* %345, i64 %358
  %360 = icmp eq i64 %358, 0
  %361 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %337, align 8
  %362 = bitcast %"class.SkSL::StringStream"* %361 to void (%"class.SkSL::StringStream"*, i8*)***
  %363 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %362, align 8
  %364 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %363, i64 2
  %365 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %364, align 8
  br i1 %360, label %376, label %366

366:                                              ; preds = %353
  call void %365(%"class.SkSL::StringStream"* %361, i8* nonnull getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)) #11
  %367 = getelementptr inbounds %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.256"* %345, i64 0, i32 0, i32 0, i32 0
  %368 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %367, align 8
  call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %368, i32 17)
  %369 = getelementptr inbounds %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.256"* %345, i64 1
  %370 = icmp eq i64 %358, 1
  %371 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %337, align 8
  %372 = bitcast %"class.SkSL::StringStream"* %371 to void (%"class.SkSL::StringStream"*, i8*)***
  %373 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %372, align 8
  %374 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %373, i64 2
  %375 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %374, align 8
  br i1 %370, label %376, label %379

376:                                              ; preds = %366, %379, %347, %353
  %377 = phi %"class.SkSL::StringStream"* [ %361, %353 ], [ %348, %347 ], [ %371, %366 ], [ %387, %379 ]
  %378 = phi void (%"class.SkSL::StringStream"*, i8*)* [ %365, %353 ], [ %352, %347 ], [ %375, %366 ], [ %391, %379 ]
  call void %378(%"class.SkSL::StringStream"* %377, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #11
  br label %392

379:                                              ; preds = %366, %379
  %380 = phi void (%"class.SkSL::StringStream"*, i8*)* [ %391, %379 ], [ %375, %366 ]
  %381 = phi %"class.SkSL::StringStream"* [ %387, %379 ], [ %371, %366 ]
  %382 = phi %"class.std::__1::unique_ptr.256"* [ %385, %379 ], [ %369, %366 ]
  call void %380(%"class.SkSL::StringStream"* %381, i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0)) #11
  %383 = getelementptr inbounds %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.256"* %382, i64 0, i32 0, i32 0, i32 0
  %384 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %383, align 8
  call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %384, i32 17)
  %385 = getelementptr inbounds %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.256"* %382, i64 1
  %386 = icmp eq %"class.std::__1::unique_ptr.256"* %385, %359
  %387 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %337, align 8
  %388 = bitcast %"class.SkSL::StringStream"* %387 to void (%"class.SkSL::StringStream"*, i8*)***
  %389 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %388, align 8
  %390 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %389, i64 2
  %391 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %390, align 8
  br i1 %386, label %376, label %379, !llvm.loop !10

392:                                              ; preds = %376, %232
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK4SkSL14StringFragmenteqEPKc(%"struct.SkSL::StringFragment"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"*, %"class.SkSL::Expression"* dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::Operator", align 4
  %5 = alloca %"class.SkSL::Operator", align 4
  %6 = alloca %"class.SkSL::String", align 8
  %7 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %204 [
    i32 30, label %9
    i32 31, label %11
    i32 45, label %11
    i32 43, label %11
    i32 33, label %40
    i32 34, label %40
    i32 35, label %40
    i32 36, label %40
    i32 37, label %40
    i32 38, label %40
    i32 39, label %40
    i32 40, label %40
    i32 44, label %42
    i32 47, label %82
    i32 49, label %84
    i32 50, label %115
    i32 52, label %145
    i32 55, label %182
    i32 53, label %184
    i32 48, label %186
  ]

9:                                                ; preds = %3
  %10 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::BinaryExpression"*
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator21writeBinaryExpressionERKNS_16BinaryExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::BinaryExpression"* dereferenceable(48) %10, i32 %2)
  br label %204

11:                                               ; preds = %3, %3, %3
  %12 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0
  %14 = bitcast %"class.SkSL::Expression"* %1 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %15 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %15, i64 2
  %17 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %16, align 8
  call void %17(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::IRNode"* %13) #11
  %18 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %19 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %18, align 8
  %20 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = zext i8 %22 to i64
  %29 = select i1 %23, i8* %25, i8* %12
  %30 = select i1 %23, i64 %27, i64 %28
  %31 = bitcast %"class.SkSL::StringStream"* %19 to void (%"class.SkSL::StringStream"*, i8*, i64)***
  %32 = load void (%"class.SkSL::StringStream"*, i8*, i64)**, void (%"class.SkSL::StringStream"*, i8*, i64)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %32, i64 3
  %34 = load void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %33, align 8
  call void %34(%"class.SkSL::StringStream"* %19, i8* %29, i64 %30) #11
  %35 = load i8, i8* %21, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %11
  %38 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %38) #12
  br label %39

39:                                               ; preds = %11, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  br label %204

40:                                               ; preds = %3, %3, %3, %3, %3, %3, %3, %3
  %41 = tail call dereferenceable(32) %"class.SkSL::AnyConstructor"* @_ZNK4SkSL10Expression16asAnyConstructorEv(%"class.SkSL::Expression"* %1) #11
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator19writeAnyConstructorERKNS_14AnyConstructorENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::AnyConstructor"* dereferenceable(32) %41, i32 undef)
  br label %204

42:                                               ; preds = %3
  %43 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::FieldAccess"*
  %44 = getelementptr inbounds %"class.SkSL::FieldAccess", %"class.SkSL::FieldAccess"* %43, i64 0, i32 2
  %45 = load i8, i8* %44, align 4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %57

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1, i32 0, i32 1
  %49 = bitcast i32* %48 to %"class.SkSL::Expression"**
  %50 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %49, align 8
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %50, i32 2) #11
  %51 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %52 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %51, align 8
  %53 = bitcast %"class.SkSL::StringStream"* %52 to void (%"class.SkSL::StringStream"*, i8*)***
  %54 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %54, i64 2
  %56 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %55, align 8
  tail call void %56(%"class.SkSL::StringStream"* %52, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0)) #11
  br label %57

57:                                               ; preds = %42, %47
  %58 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1, i32 0, i32 1
  %59 = bitcast i32* %58 to %"class.SkSL::Expression"**
  %60 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %59, align 8
  %61 = bitcast %"class.SkSL::Expression"* %60 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %62 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %61, align 8
  %63 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %62, i64 3
  %64 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %63, align 8
  %65 = tail call dereferenceable(184) %"class.SkSL::Type"* %64(%"class.SkSL::Expression"* %60) #11
  %66 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %67 = bitcast %"class.SkSL::Expression"* %66 to i32*
  %68 = load i32, i32* %67, align 8
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %65, i64 0, i32 10, i32 0, i32 0
  %71 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %70, align 8
  %72 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %71, i64 %69, i32 1, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %71, i64 %69, i32 1, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %77 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %76, align 8
  %78 = bitcast %"class.SkSL::StringStream"* %77 to void (%"class.SkSL::StringStream"*, i8*, i64)***
  %79 = load void (%"class.SkSL::StringStream"*, i8*, i64)**, void (%"class.SkSL::StringStream"*, i8*, i64)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %79, i64 3
  %81 = load void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %80, align 8
  tail call void %81(%"class.SkSL::StringStream"* %77, i8* %73, i64 %75) #11
  br label %204

82:                                               ; preds = %3
  %83 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::FunctionCall"*
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator17writeFunctionCallERKNS_12FunctionCallE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::FunctionCall"* dereferenceable(64) %83)
  br label %204

84:                                               ; preds = %3
  %85 = icmp slt i32 %2, 4
  br i1 %85, label %86, label %93

86:                                               ; preds = %84
  %87 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %88 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %87, align 8
  %89 = bitcast %"class.SkSL::StringStream"* %88 to void (%"class.SkSL::StringStream"*, i8*)***
  %90 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %90, i64 2
  %92 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %91, align 8
  tail call void %92(%"class.SkSL::StringStream"* %88, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #11
  br label %93

93:                                               ; preds = %86, %84
  %94 = bitcast %"class.SkSL::Operator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %94) #11
  %95 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %96 = bitcast %"class.SkSL::Expression"* %95 to i32*
  %97 = load i32, i32* %96, align 8
  %98 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %4, i64 0, i32 0
  store i32 %97, i32* %98, align 4
  %99 = call i8* @_ZNK4SkSL8Operator12operatorNameEv(%"class.SkSL::Operator"* nonnull %4) #11
  %100 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %101 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %100, align 8
  %102 = bitcast %"class.SkSL::StringStream"* %101 to void (%"class.SkSL::StringStream"*, i8*)***
  %103 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %103, i64 2
  %105 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %104, align 8
  call void %105(%"class.SkSL::StringStream"* %101, i8* %99) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %94) #11
  %106 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1, i32 0, i32 1
  %107 = bitcast i32* %106 to %"class.SkSL::Expression"**
  %108 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %107, align 8
  call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %108, i32 3) #11
  br i1 %85, label %109, label %204

109:                                              ; preds = %93
  %110 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %100, align 8
  %111 = bitcast %"class.SkSL::StringStream"* %110 to void (%"class.SkSL::StringStream"*, i8*)***
  %112 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %112, i64 2
  %114 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %113, align 8
  call void %114(%"class.SkSL::StringStream"* %110, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #11
  br label %204

115:                                              ; preds = %3
  %116 = icmp slt i32 %2, 3
  br i1 %116, label %117, label %124

117:                                              ; preds = %115
  %118 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %119 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %118, align 8
  %120 = bitcast %"class.SkSL::StringStream"* %119 to void (%"class.SkSL::StringStream"*, i8*)***
  %121 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %121, i64 2
  %123 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %122, align 8
  tail call void %123(%"class.SkSL::StringStream"* %119, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #11
  br label %124

124:                                              ; preds = %117, %115
  %125 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %126 = bitcast %"class.SkSL::Expression"* %125 to %"class.SkSL::Expression"**
  %127 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %126, align 8
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %127, i32 2) #11
  %128 = bitcast %"class.SkSL::Operator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %128) #11
  %129 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1, i32 0, i32 1
  %130 = load i32, i32* %129, align 8
  %131 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %5, i64 0, i32 0
  store i32 %130, i32* %131, align 4
  %132 = call i8* @_ZNK4SkSL8Operator12operatorNameEv(%"class.SkSL::Operator"* nonnull %5) #11
  %133 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %134 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %133, align 8
  %135 = bitcast %"class.SkSL::StringStream"* %134 to void (%"class.SkSL::StringStream"*, i8*)***
  %136 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %135, align 8
  %137 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %136, i64 2
  %138 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %137, align 8
  call void %138(%"class.SkSL::StringStream"* %134, i8* %132) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %128) #11
  br i1 %116, label %139, label %204

139:                                              ; preds = %124
  %140 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %133, align 8
  %141 = bitcast %"class.SkSL::StringStream"* %140 to void (%"class.SkSL::StringStream"*, i8*)***
  %142 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %141, align 8
  %143 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %142, i64 2
  %144 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %143, align 8
  call void %144(%"class.SkSL::StringStream"* %140, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #11
  br label %204

145:                                              ; preds = %3
  %146 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %147 = bitcast %"class.SkSL::Expression"* %146 to %"class.SkSL::Expression"**
  %148 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %147, align 8
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %148, i32 2) #11
  %149 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %150 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %149, align 8
  %151 = bitcast %"class.SkSL::StringStream"* %150 to void (%"class.SkSL::StringStream"*, i8*)***
  %152 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %152, i64 2
  %154 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %153, align 8
  tail call void %154(%"class.SkSL::StringStream"* %150, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0)) #11
  %155 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1, i32 0, i32 1
  %156 = getelementptr inbounds i32, i32* %155, i64 2
  %157 = bitcast i32* %156 to i8**
  %158 = load i8*, i8** %157, align 8
  %159 = icmp eq i8* %158, null
  br i1 %159, label %204, label %160

160:                                              ; preds = %145
  %161 = getelementptr inbounds i32, i32* %155, i64 4
  %162 = bitcast i32* %161 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = lshr i64 %163, 1
  %165 = and i64 %164, 2147483647
  %166 = getelementptr inbounds i8, i8* %158, i64 %165
  %167 = icmp eq i64 %165, 0
  br i1 %167, label %204, label %168

168:                                              ; preds = %160, %168
  %169 = phi i8* [ %180, %168 ], [ %158, %160 ]
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = shl nsw i32 %171, 1
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds [9 x i8], [9 x i8]* @.str.26, i64 0, i64 %173
  %175 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %149, align 8
  %176 = bitcast %"class.SkSL::StringStream"* %175 to void (%"class.SkSL::StringStream"*, i8*)***
  %177 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %176, align 8
  %178 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %177, i64 2
  %179 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %178, align 8
  tail call void %179(%"class.SkSL::StringStream"* %175, i8* %174) #11
  %180 = getelementptr inbounds i8, i8* %169, i64 1
  %181 = icmp eq i8* %180, %166
  br i1 %181, label %204, label %168

182:                                              ; preds = %3
  %183 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::VariableReference"*
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator22writeVariableReferenceERKNS_17VariableReferenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::VariableReference"* dereferenceable(40) %183)
  br label %204

184:                                              ; preds = %3
  %185 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::TernaryExpression"*
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator22writeTernaryExpressionERKNS_17TernaryExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::TernaryExpression"* dereferenceable(48) %185, i32 %2)
  br label %204

186:                                              ; preds = %3
  %187 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %188 = bitcast %"class.SkSL::Expression"* %187 to %"class.SkSL::Expression"**
  %189 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %188, align 8
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %189, i32 2) #11
  %190 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %191 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %190, align 8
  %192 = bitcast %"class.SkSL::StringStream"* %191 to void (%"class.SkSL::StringStream"*, i8*)***
  %193 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %192, align 8
  %194 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %193, i64 2
  %195 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %194, align 8
  tail call void %195(%"class.SkSL::StringStream"* %191, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0)) #11
  %196 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1, i32 0, i32 1
  %197 = bitcast i32* %196 to %"class.SkSL::Expression"**
  %198 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %197, align 8
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %198, i32 17) #11
  %199 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %190, align 8
  %200 = bitcast %"class.SkSL::StringStream"* %199 to void (%"class.SkSL::StringStream"*, i8*)***
  %201 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %200, align 8
  %202 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %201, i64 2
  %203 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %202, align 8
  tail call void %203(%"class.SkSL::StringStream"* %199, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0)) #11
  br label %204

204:                                              ; preds = %168, %145, %160, %139, %124, %109, %93, %3, %186, %184, %182, %82, %57, %40, %39, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.SkSL::String"* @_ZNK4SkSL12StringStream3strEv(%"class.SkSL::StringStream"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.sk_sp, align 8
  %3 = alloca %"class.SkSL::String", align 8
  %4 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 2
  %5 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %1
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %66

17:                                               ; preds = %14
  %18 = bitcast %class.sk_sp* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %19, align 8
  %20 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1
  call void @_ZN22SkDynamicMemoryWStream12detachAsDataEv(%class.sk_sp* nonnull sret %2, %class.SkDynamicMemoryWStream* %20) #11
  %21 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  %22 = load %class.SkData*, %class.SkData** %19, align 8
  %23 = getelementptr inbounds %class.SkData, %class.SkData* %22, i64 0, i32 3
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %class.SkData, %class.SkData* %22, i64 0, i32 4
  %26 = load i64, i64* %25, align 8
  %27 = icmp ugt i64 %26, -17
  br i1 %27, label %28, label %30

28:                                               ; preds = %17
  %29 = bitcast %"class.SkSL::String"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %29) #13
  unreachable

30:                                               ; preds = %17
  %31 = icmp ult i64 %26, 23
  br i1 %31, label %40, label %32

32:                                               ; preds = %30
  %33 = add nuw i64 %26, 16
  %34 = and i64 %33, -16
  %35 = call i8* @_Znwm(i64 %34) #12
  %36 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %35, i8** %36, align 8
  %37 = or i64 %34, -9223372036854775808
  %38 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %26, i64* %39, align 8
  br label %45

40:                                               ; preds = %30
  %41 = trunc i64 %26 to i8
  %42 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  store i8 %41, i8* %43, align 1
  %44 = icmp eq i64 %26, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %40, %32
  %46 = phi i8* [ %35, %32 ], [ %21, %40 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %46, i8* align 1 %24, i64 %26, i1 false) #11
  br label %47

47:                                               ; preds = %40, %45
  %48 = phi i8* [ %21, %40 ], [ %46, %45 ]
  %49 = getelementptr inbounds i8, i8* %48, i64 %26
  store i8 0, i8* %49, align 1
  %50 = load i8, i8* %6, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %54) #12
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* nonnull align 8 %21, i64 24, i1 false) #11
  %57 = load %class.SkData*, %class.SkData** %19, align 8
  %58 = bitcast %class.SkData* %57 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  %59 = icmp eq %class.SkData* %57, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %class.SkData, %class.SkData* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %65

64:                                               ; preds = %60
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %57) #11
  call void @_ZN6SkDatadlEPv(i8* nonnull %58) #11
  br label %65

65:                                               ; preds = %55, %60, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  br label %66

66:                                               ; preds = %14, %65
  ret %"class.SkSL::String"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator22writeVariableReferenceERKNS_17VariableReferenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* nocapture readonly, %"class.SkSL::VariableReference"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::VariableReference", %"class.SkSL::VariableReference"* %1, i64 0, i32 1
  %4 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %3, align 8
  %5 = ptrtoint %"class.SkSL::Variable"* %4 to i64
  %6 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %4, i64 0, i32 2
  %7 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %6, align 8
  %8 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %7, i64 0, i32 0, i32 6
  %9 = load i32, i32* %8, align 8
  switch i32 %9, label %28 [
    i32 10009, label %10
    i32 10010, label %19
  ]

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %14 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %13, align 8
  %15 = bitcast %"class.SkSL::StringStream"* %14 to void (%"class.SkSL::StringStream"*, i8*)***
  %16 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %16, i64 2
  %18 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %17, align 8
  tail call void %18(%"class.SkSL::StringStream"* %14, i8* %12) #11
  br label %125

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 2
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %23 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %22, align 8
  %24 = bitcast %"class.SkSL::StringStream"* %23 to void (%"class.SkSL::StringStream"*, i8*)***
  %25 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %25, i64 2
  %27 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %26, align 8
  tail call void %27(%"class.SkSL::StringStream"* %23, i8* %21) #11
  br label %125

28:                                               ; preds = %2
  %29 = lshr i64 %5, 32
  %30 = shl i64 %5, 3
  %31 = and i64 %30, 4294967288
  %32 = add nuw nsw i64 %31, 8
  %33 = xor i64 %32, %29
  %34 = mul i64 %33, -7070675565921424023
  %35 = lshr i64 %34, 47
  %36 = xor i64 %34, %29
  %37 = xor i64 %36, %35
  %38 = mul i64 %37, -7070675565921424023
  %39 = lshr i64 %38, 47
  %40 = xor i64 %39, %38
  %41 = mul i64 %40, -7070675565921424023
  %42 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %114, label %45

45:                                               ; preds = %28
  %46 = tail call i64 @llvm.ctpop.i64(i64 %43) #11, !range !9
  %47 = icmp ugt i64 %46, 1
  br i1 %47, label %51, label %48

48:                                               ; preds = %45
  %49 = add i64 %43, -1
  %50 = and i64 %49, %41
  br label %55

51:                                               ; preds = %45
  %52 = icmp ult i64 %41, %43
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = urem i64 %41, %43
  br label %55

55:                                               ; preds = %53, %51, %48
  %56 = phi i64 [ %50, %48 ], [ %54, %53 ], [ %41, %51 ]
  %57 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %57, align 8
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %58, i64 %56
  %60 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node_base.113"* %60, null
  br i1 %61, label %114, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %60, i64 0, i32 0
  %64 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %63, align 8
  %65 = icmp eq %"struct.std::__1::__hash_node_base.113"* %64, null
  br i1 %65, label %114, label %66

66:                                               ; preds = %62
  %67 = add i64 %43, -1
  br label %68

68:                                               ; preds = %89, %66
  %69 = phi %"struct.std::__1::__hash_node_base.113"* [ %64, %66 ], [ %91, %89 ]
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %69, i64 1
  %71 = bitcast %"struct.std::__1::__hash_node_base.113"* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, %41
  br i1 %73, label %84, label %74

74:                                               ; preds = %68
  br i1 %47, label %77, label %75

75:                                               ; preds = %74
  %76 = and i64 %72, %67
  br label %81

77:                                               ; preds = %74
  %78 = icmp ult i64 %72, %43
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = urem i64 %72, %43
  br label %81

81:                                               ; preds = %79, %77, %75
  %82 = phi i64 [ %76, %75 ], [ %80, %79 ], [ %72, %77 ]
  %83 = icmp eq i64 %82, %56
  br i1 %83, label %89, label %114

84:                                               ; preds = %68
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %69, i64 2
  %86 = bitcast %"struct.std::__1::__hash_node_base.113"* %85 to %"class.SkSL::Variable"**
  %87 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %86, align 8
  %88 = icmp eq %"class.SkSL::Variable"* %87, %4
  br i1 %88, label %93, label %89

89:                                               ; preds = %84, %81
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %69, i64 0, i32 0
  %91 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %90, align 8
  %92 = icmp eq %"struct.std::__1::__hash_node_base.113"* %91, null
  br i1 %92, label %114, label %68

93:                                               ; preds = %84
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %69, i64 3
  %95 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %96 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %95, align 8
  %97 = bitcast %"struct.std::__1::__hash_node_base.113"* %94 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  %101 = bitcast %"struct.std::__1::__hash_node_base.113"* %94 to i8**
  %102 = load i8*, i8** %101, align 8
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %69, i64 4
  %104 = bitcast %"struct.std::__1::__hash_node_base.113"* %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"struct.std::__1::__hash_node_base.113"* %94 to i8*
  %107 = zext i8 %99 to i64
  %108 = select i1 %100, i8* %102, i8* %106
  %109 = select i1 %100, i64 %105, i64 %107
  %110 = bitcast %"class.SkSL::StringStream"* %96 to void (%"class.SkSL::StringStream"*, i8*, i64)***
  %111 = load void (%"class.SkSL::StringStream"*, i8*, i64)**, void (%"class.SkSL::StringStream"*, i8*, i64)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %111, i64 3
  %113 = load void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %112, align 8
  tail call void %113(%"class.SkSL::StringStream"* %96, i8* %108, i64 %109) #11
  br label %125

114:                                              ; preds = %81, %89, %55, %28, %62
  %115 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %4, i64 0, i32 0, i32 1, i32 0
  %116 = load i8*, i8** %115, align 8
  %117 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %4, i64 0, i32 0, i32 1, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %120 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %119, align 8
  %121 = bitcast %"class.SkSL::StringStream"* %120 to void (%"class.SkSL::StringStream"*, i8*, i64)***
  %122 = load void (%"class.SkSL::StringStream"*, i8*, i64)**, void (%"class.SkSL::StringStream"*, i8*, i64)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %122, i64 3
  %124 = load void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %123, align 8
  tail call void %124(%"class.SkSL::StringStream"* %120, i8* %116, i64 %118) #11
  br label %125

125:                                              ; preds = %93, %114, %19, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator16writeIfStatementERKNS_11IfStatementE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"*, %"class.SkSL::IfStatement"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::IfStatement", %"class.SkSL::IfStatement"* %1, i64 0, i32 4
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %8 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %7, align 8
  %9 = bitcast %"class.SkSL::StringStream"* %8 to void (%"class.SkSL::StringStream"*, i8*)***
  %10 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %10, i64 2
  %12 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %11, align 8
  tail call void %12(%"class.SkSL::StringStream"* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #11
  br label %13

13:                                               ; preds = %2, %6
  %14 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %15 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %14, align 8
  %16 = bitcast %"class.SkSL::StringStream"* %15 to void (%"class.SkSL::StringStream"*, i8*)***
  %17 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %17, i64 2
  %19 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %18, align 8
  tail call void %19(%"class.SkSL::StringStream"* %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0)) #11
  %20 = getelementptr inbounds %"class.SkSL::IfStatement", %"class.SkSL::IfStatement"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %20, align 8
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %21, i32 17)
  %22 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %14, align 8
  %23 = bitcast %"class.SkSL::StringStream"* %22 to void (%"class.SkSL::StringStream"*, i8*)***
  %24 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %24, i64 2
  %26 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %25, align 8
  tail call void %26(%"class.SkSL::StringStream"* %22, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #11
  %27 = getelementptr inbounds %"class.SkSL::IfStatement", %"class.SkSL::IfStatement"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %28 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %27, align 8
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %28)
  %29 = getelementptr inbounds %"class.SkSL::IfStatement", %"class.SkSL::IfStatement"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %29, align 8
  %31 = icmp eq %"class.SkSL::Statement"* %30, null
  br i1 %31, label %39, label %32

32:                                               ; preds = %13
  %33 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %14, align 8
  %34 = bitcast %"class.SkSL::StringStream"* %33 to void (%"class.SkSL::StringStream"*, i8*)***
  %35 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %35, i64 2
  %37 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %36, align 8
  tail call void %37(%"class.SkSL::StringStream"* %33, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0)) #11
  %38 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %29, align 8
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %38)
  br label %39

39:                                               ; preds = %13, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"*, %"class.SkSL::Statement"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %109 [
    i32 16, label %5
    i32 17, label %7
    i32 18, label %14
    i32 21, label %21
    i32 20, label %31
    i32 22, label %54
    i32 23, label %56
    i32 26, label %58
    i32 29, label %100
    i32 25, label %102
    i32 24, label %102
  ]

5:                                                ; preds = %2
  %6 = bitcast %"class.SkSL::Statement"* %1 to %"class.SkSL::Block"*
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator10writeBlockERKNS_5BlockE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Block"* dereferenceable(72) %6)
  br label %109

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %9 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %8, align 8
  %10 = bitcast %"class.SkSL::StringStream"* %9 to void (%"class.SkSL::StringStream"*, i8*)***
  %11 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %11, i64 2
  %13 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %12, align 8
  tail call void %13(%"class.SkSL::StringStream"* %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #11
  br label %109

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %16 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %15, align 8
  %17 = bitcast %"class.SkSL::StringStream"* %16 to void (%"class.SkSL::StringStream"*, i8*)***
  %18 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %18, i64 2
  %20 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %19, align 8
  tail call void %20(%"class.SkSL::StringStream"* %16, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i64 0, i64 0)) #11
  br label %109

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 1
  %23 = bitcast %"class.SkSL::Statement"* %22 to %"class.SkSL::Expression"**
  %24 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %23, align 8
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %24, i32 17)
  %25 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %26 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %25, align 8
  %27 = bitcast %"class.SkSL::StringStream"* %26 to void (%"class.SkSL::StringStream"*, i8*)***
  %28 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %28, i64 2
  %30 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %29, align 8
  tail call void %30(%"class.SkSL::StringStream"* %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #11
  br label %109

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %33 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %32, align 8
  %34 = bitcast %"class.SkSL::StringStream"* %33 to void (%"class.SkSL::StringStream"*, i8*)***
  %35 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %35, i64 2
  %37 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %36, align 8
  tail call void %37(%"class.SkSL::StringStream"* %33, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0)) #11
  %38 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 1
  %39 = bitcast %"class.SkSL::Statement"* %38 to %"class.SkSL::Statement"**
  %40 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %39, align 8
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %40) #11
  %41 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %32, align 8
  %42 = bitcast %"class.SkSL::StringStream"* %41 to void (%"class.SkSL::StringStream"*, i8*)***
  %43 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %43, i64 2
  %45 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %44, align 8
  tail call void %45(%"class.SkSL::StringStream"* %41, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i64 0, i64 0)) #11
  %46 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 1, i32 0, i32 1
  %47 = bitcast i32* %46 to %"class.SkSL::Expression"**
  %48 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %47, align 8
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %48, i32 17) #11
  %49 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %32, align 8
  %50 = bitcast %"class.SkSL::StringStream"* %49 to void (%"class.SkSL::StringStream"*, i8*)***
  %51 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %51, i64 2
  %53 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %52, align 8
  tail call void %53(%"class.SkSL::StringStream"* %49, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i64 0, i64 0)) #11
  ret void

54:                                               ; preds = %2
  %55 = bitcast %"class.SkSL::Statement"* %1 to %"class.SkSL::ForStatement"*
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator17writeForStatementERKNS_12ForStatementE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::ForStatement"* dereferenceable(64) %55)
  br label %109

56:                                               ; preds = %2
  %57 = bitcast %"class.SkSL::Statement"* %1 to %"class.SkSL::IfStatement"*
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator16writeIfStatementERKNS_11IfStatementE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::IfStatement"* dereferenceable(48) %57)
  br label %109

58:                                               ; preds = %2
  %59 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %60 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %59, align 8
  %61 = bitcast %"class.SkSL::StringStream"* %60 to void (%"class.SkSL::StringStream"*, i8*)***
  %62 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %62, i64 2
  %64 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %63, align 8
  tail call void %64(%"class.SkSL::StringStream"* %60, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0)) #11
  %65 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 1
  %66 = bitcast %"class.SkSL::Statement"* %65 to %"class.SkSL::Expression"**
  %67 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %66, align 8
  %68 = icmp eq %"class.SkSL::Expression"* %67, null
  br i1 %68, label %94, label %69

69:                                               ; preds = %58
  %70 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %59, align 8
  %71 = bitcast %"class.SkSL::StringStream"* %70 to void (%"class.SkSL::StringStream"*, i8*)***
  %72 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %72, i64 2
  %74 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %73, align 8
  tail call void %74(%"class.SkSL::StringStream"* %70, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #11
  %75 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 8
  %76 = load i8, i8* %75, align 8, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %84, label %78

78:                                               ; preds = %69
  %79 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %59, align 8
  %80 = bitcast %"class.SkSL::StringStream"* %79 to void (%"class.SkSL::StringStream"*, i8*)***
  %81 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %81, i64 2
  %83 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %82, align 8
  tail call void %83(%"class.SkSL::StringStream"* %79, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0)) #11
  br label %84

84:                                               ; preds = %78, %69
  %85 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %66, align 8
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %85, i32 17) #11
  %86 = load i8, i8* %75, align 8, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %94, label %88

88:                                               ; preds = %84
  %89 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %59, align 8
  %90 = bitcast %"class.SkSL::StringStream"* %89 to void (%"class.SkSL::StringStream"*, i8*)***
  %91 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %91, i64 2
  %93 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %92, align 8
  tail call void %93(%"class.SkSL::StringStream"* %89, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #11
  br label %94

94:                                               ; preds = %58, %84, %88
  %95 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %59, align 8
  %96 = bitcast %"class.SkSL::StringStream"* %95 to void (%"class.SkSL::StringStream"*, i8*)***
  %97 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %97, i64 2
  %99 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %98, align 8
  tail call void %99(%"class.SkSL::StringStream"* %95, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #11
  br label %109

100:                                              ; preds = %2
  %101 = bitcast %"class.SkSL::Statement"* %1 to %"class.SkSL::VarDeclaration"*
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator19writeVarDeclarationERKNS_14VarDeclarationE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::VarDeclaration"* dereferenceable(48) %101)
  br label %109

102:                                              ; preds = %2, %2
  %103 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %104 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %103, align 8
  %105 = bitcast %"class.SkSL::StringStream"* %104 to void (%"class.SkSL::StringStream"*, i8*)***
  %106 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %106, i64 2
  %108 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %107, align 8
  tail call void %108(%"class.SkSL::StringStream"* %104, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #11
  br label %109

109:                                              ; preds = %2, %102, %100, %94, %56, %54, %21, %14, %7, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator20writeReturnStatementERKNS_15ReturnStatementE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"*, %"class.SkSL::ReturnStatement"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %4 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %3, align 8
  %5 = bitcast %"class.SkSL::StringStream"* %4 to void (%"class.SkSL::StringStream"*, i8*)***
  %6 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %6, i64 2
  %8 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %7, align 8
  tail call void %8(%"class.SkSL::StringStream"* %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0)) #11
  %9 = getelementptr inbounds %"class.SkSL::ReturnStatement", %"class.SkSL::ReturnStatement"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %9, align 8
  %11 = icmp eq %"class.SkSL::Expression"* %10, null
  br i1 %11, label %37, label %12

12:                                               ; preds = %2
  %13 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %3, align 8
  %14 = bitcast %"class.SkSL::StringStream"* %13 to void (%"class.SkSL::StringStream"*, i8*)***
  %15 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %15, i64 2
  %17 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %16, align 8
  tail call void %17(%"class.SkSL::StringStream"* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #11
  %18 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 8
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %27, label %21

21:                                               ; preds = %12
  %22 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %3, align 8
  %23 = bitcast %"class.SkSL::StringStream"* %22 to void (%"class.SkSL::StringStream"*, i8*)***
  %24 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %24, i64 2
  %26 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %25, align 8
  tail call void %26(%"class.SkSL::StringStream"* %22, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0)) #11
  br label %27

27:                                               ; preds = %12, %21
  %28 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %9, align 8
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %28, i32 17)
  %29 = load i8, i8* %18, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %27
  %32 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %3, align 8
  %33 = bitcast %"class.SkSL::StringStream"* %32 to void (%"class.SkSL::StringStream"*, i8*)***
  %34 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %34, i64 2
  %36 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %35, align 8
  tail call void %36(%"class.SkSL::StringStream"* %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #11
  br label %37

37:                                               ; preds = %2, %27, %31
  %38 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %3, align 8
  %39 = bitcast %"class.SkSL::StringStream"* %38 to void (%"class.SkSL::StringStream"*, i8*)***
  %40 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %40, i64 2
  %42 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %41, align 8
  tail call void %42(%"class.SkSL::StringStream"* %38, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator13writeFunctionERKNS_18FunctionDefinitionE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"*, %"class.SkSL::FunctionDefinition"* nocapture readonly dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"struct.std::__1::pair", align 8
  %12 = bitcast %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer", %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer"* %3, i64 0, i32 0
  store %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"** %13, align 8
  %14 = getelementptr inbounds %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer", %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer"* %3, i64 0, i32 2
  %15 = bitcast %"class.SkSL::StringStream"* %14 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %15, align 8
  %16 = getelementptr inbounds %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer", %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer"* %3, i64 0, i32 2, i32 1, i32 1
  %17 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 48, i1 false) #11
  %18 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %19 = bitcast %"class.SkSL::StringStream"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer", %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer"* %3, i64 0, i32 1
  %22 = bitcast %"class.SkSL::StringStream"** %21 to i64*
  store i64 %20, i64* %22, align 8
  store %"class.SkSL::StringStream"* %14, %"class.SkSL::StringStream"** %18, align 8
  %23 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %1, i64 0, i32 1
  %24 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %23, align 8
  %25 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %24, i64 0, i32 6
  %26 = load i8, i8* %25, align 1, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 8
  store i8 1, i8* %29, align 8
  br label %30

30:                                               ; preds = %2, %28
  %31 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = bitcast %"class.SkSL::Statement"** %31 to %"class.SkSL::Block"**
  %33 = load %"class.SkSL::Block"*, %"class.SkSL::Block"** %32, align 8
  %34 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %33, i64 0, i32 1, i32 0, i32 0, i64 16
  %35 = bitcast i8* %34 to %"class.std::__1::unique_ptr.219"**
  %36 = load %"class.std::__1::unique_ptr.219"*, %"class.std::__1::unique_ptr.219"** %35, align 8
  %37 = icmp eq %"class.std::__1::unique_ptr.219"* %36, null
  br i1 %37, label %46, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %33, i64 0, i32 1, i32 0, i32 0, i64 24
  %40 = bitcast i8* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = lshr i64 %41, 1
  %43 = and i64 %42, 2147483647
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.219"* %36, i64 %43
  %45 = icmp eq i64 %43, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %49, %30, %38
  %47 = load i8, i8* %25, align 1, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %63, label %60

49:                                               ; preds = %38, %49
  %50 = phi %"class.std::__1::unique_ptr.219"* [ %58, %49 ], [ %36, %38 ]
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.219"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %51, align 8
  call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %52)
  %53 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %18, align 8
  %54 = bitcast %"class.SkSL::StringStream"* %53 to void (%"class.SkSL::StringStream"*, i8*)***
  %55 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %55, i64 2
  %57 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %56, align 8
  call void %57(%"class.SkSL::StringStream"* %53, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #11
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.219"* %50, i64 1
  %59 = icmp eq %"class.std::__1::unique_ptr.219"* %58, %44
  br i1 %59, label %46, label %49

60:                                               ; preds = %46
  %61 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 8
  store i8 0, i8* %61, align 8
  %62 = load i8, i8* %25, align 1, !range !2
  br label %63

63:                                               ; preds = %46, %60
  %64 = phi i8 [ 0, %46 ], [ %62, %60 ]
  %65 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #11
  %66 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %69 = icmp eq i8 %64, 0
  %70 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 -86, i64 24, i1 false)
  br i1 %69, label %96, label %71

71:                                               ; preds = %63
  %72 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %24, i64 0, i32 0, i32 1, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %24, i64 0, i32 0, i32 1, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = icmp ugt i64 %75, -17
  br i1 %76, label %77, label %79

77:                                               ; preds = %71
  %78 = bitcast %"class.SkSL::String"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %78) #13
  unreachable

79:                                               ; preds = %71
  %80 = icmp ult i64 %75, 23
  br i1 %80, label %86, label %81

81:                                               ; preds = %79
  %82 = add nuw i64 %75, 16
  %83 = and i64 %82, -16
  %84 = call i8* @_Znwm(i64 %83) #12
  store i8* %84, i8** %66, align 8
  %85 = or i64 %83, -9223372036854775808
  store i64 %85, i64* %68, align 8
  store i64 %75, i64* %67, align 8
  br label %91

86:                                               ; preds = %79
  %87 = trunc i64 %75 to i8
  %88 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  store i8 %87, i8* %89, align 1
  %90 = icmp eq i64 %75, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %86, %81
  %92 = phi i8* [ %84, %81 ], [ %65, %86 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %92, i8* align 1 %73, i64 %75, i1 false) #11
  br label %93

93:                                               ; preds = %86, %91
  %94 = phi i8* [ %65, %86 ], [ %92, %91 ]
  %95 = getelementptr inbounds i8, i8* %94, i64 %75
  store i8 0, i8* %95, align 1
  br label %145

96:                                               ; preds = %63
  %97 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 3
  %98 = load %"class.SkSL::PipelineStage::Callbacks"*, %"class.SkSL::PipelineStage::Callbacks"** %97, align 8
  %99 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #11
  %100 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %24, i64 0, i32 0, i32 1, i32 0
  %101 = load i8*, i8** %100, align 8
  %102 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %24, i64 0, i32 0, i32 1, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = icmp ugt i64 %103, -17
  br i1 %104, label %105, label %107

105:                                              ; preds = %96
  %106 = bitcast %"class.SkSL::String"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %106) #13
  unreachable

107:                                              ; preds = %96
  %108 = icmp ult i64 %103, 23
  br i1 %108, label %118, label %109

109:                                              ; preds = %107
  %110 = add nuw i64 %103, 16
  %111 = and i64 %110, -16
  %112 = call i8* @_Znwm(i64 %111) #12
  %113 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %112, i8** %113, align 8
  %114 = or i64 %111, -9223372036854775808
  %115 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %103, i64* %116, align 8
  %117 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %123

118:                                              ; preds = %107
  %119 = trunc i64 %103 to i8
  %120 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  store i8 %119, i8* %121, align 1
  %122 = icmp eq i64 %103, 0
  br i1 %122, label %126, label %123

123:                                              ; preds = %118, %109
  %124 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %120, %118 ], [ %117, %109 ]
  %125 = phi i8* [ %99, %118 ], [ %112, %109 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %125, i8* align 1 %101, i64 %103, i1 false) #11
  br label %126

126:                                              ; preds = %118, %123
  %127 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %120, %118 ], [ %124, %123 ]
  %128 = phi i8* [ %99, %118 ], [ %125, %123 ]
  %129 = getelementptr inbounds i8, i8* %128, i64 %103
  store i8 0, i8* %129, align 1
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %127, i64 0, i32 1, i32 0
  %131 = load i8, i8* %130, align 1
  %132 = icmp slt i8 %131, 0
  %133 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  %135 = select i1 %132, i8* %134, i8* %99
  %136 = bitcast %"class.SkSL::PipelineStage::Callbacks"* %98 to void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i8*)***
  %137 = load void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i8*)**, void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i8*)*** %136, align 8
  %138 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i8*)*, void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i8*)** %137, i64 2
  %139 = load void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i8*)*, void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i8*)** %138, align 8
  call void %139(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::PipelineStage::Callbacks"* %98, i8* %135) #11
  %140 = load i8, i8* %130, align 1
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %126
  %143 = load i8*, i8** %133, align 8
  call void @_ZdlPv(i8* %143) #12
  br label %144

144:                                              ; preds = %126, %142
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #11
  br label %145

145:                                              ; preds = %93, %144
  %146 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %146) #11
  %147 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %24, i64 0, i32 2
  %149 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %149, i8 -86, i64 24, i1 false)
  %150 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %148, align 8
  %151 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %150, i64 0, i32 1
  %152 = load i32, i32* %151, align 8
  %153 = and i32 %152, 256
  %154 = icmp eq i32 %153, 0
  %155 = select i1 %154, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0)
  %156 = and i32 %152, 512
  %157 = icmp eq i32 %156, 0
  %158 = select i1 %157, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i64 0, i64 0)
  %159 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %159) #11
  %160 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %24, i64 0, i32 4
  %161 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %160, align 8
  call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %161)
  %162 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  %164 = load i8, i8* %163, align 1
  %165 = icmp slt i8 %164, 0
  %166 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load i8*, i8** %166, align 8
  %168 = select i1 %165, i8* %167, i8* %159
  %169 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %170 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %169, i64 0, i32 1, i32 0
  %171 = load i8, i8* %170, align 1
  %172 = icmp slt i8 %171, 0
  %173 = load i8*, i8** %66, align 8
  %174 = select i1 %172, i8* %173, i8* %65
  call void (%"class.SkSL::String"*, i8*, ...) @_ZN4SkSL6String6printfEPKcz(%"class.SkSL::String"* nonnull sret %6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* %155, i8* %158, i8* %168, i8* %174) #11
  %175 = load i8, i8* %163, align 1
  %176 = icmp slt i8 %175, 0
  br i1 %176, label %177, label %179

177:                                              ; preds = %145
  %178 = load i8*, i8** %166, align 8
  call void @_ZdlPv(i8* %178) #12
  br label %179

179:                                              ; preds = %145, %177
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %159) #11
  %180 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %24, i64 0, i32 3, i32 0, i32 0
  %181 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %180, align 8
  %182 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %24, i64 0, i32 3, i32 0, i32 1
  %183 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %182, align 8
  %184 = icmp eq %"class.SkSL::Variable"** %181, %183
  br i1 %184, label %201, label %185

185:                                              ; preds = %179
  %186 = bitcast %"class.SkSL::String"* %8 to i8*
  %187 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0
  %188 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %188, i64 0, i32 1, i32 0
  %190 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = bitcast %"class.SkSL::String"* %9 to i8*
  %192 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %193 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %192, i64 0, i32 1, i32 0
  %194 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = bitcast %"class.SkSL::String"* %10 to i8*
  %196 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %198 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %199 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %200 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %199, i64 0, i32 1, i32 0
  br label %269

201:                                              ; preds = %346, %179
  %202 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0
  %203 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %202, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #11
  %204 = bitcast %"struct.std::__1::pair"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %204) #11
  %205 = ptrtoint %"class.SkSL::FunctionDeclaration"* %24 to i64
  %206 = bitcast %"struct.std::__1::pair"* %11 to i64*
  store i64 %205, i64* %206, align 8
  %207 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 0, i32 1
  %208 = bitcast %"class.SkSL::String"* %207 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %208, i8* nonnull align 8 %65, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 24, i1 false) #11
  %209 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 5, i32 0
  %210 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 0, i32 0
  %211 = call { %"struct.std::__1::__hash_node_base.138"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JNS_4pairIKS5_S6_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.134"* %209, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %210, %"struct.std::__1::pair"* nonnull dereferenceable(32) %11) #11
  %212 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 0, i32 1, i32 0
  %213 = bitcast %"class.std::__1::basic_string"* %212 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %214 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %213, i64 0, i32 1, i32 0
  %215 = load i8, i8* %214, align 1
  %216 = icmp slt i8 %215, 0
  br i1 %216, label %217, label %220

217:                                              ; preds = %201
  %218 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %212, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load i8*, i8** %218, align 8
  call void @_ZdlPv(i8* %219) #12
  br label %220

220:                                              ; preds = %201, %217
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %204) #11
  %221 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 3
  %222 = load %"class.SkSL::PipelineStage::Callbacks"*, %"class.SkSL::PipelineStage::Callbacks"** %221, align 8
  %223 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %224 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %223, i64 0, i32 1, i32 0
  %225 = load i8, i8* %224, align 1
  %226 = icmp slt i8 %225, 0
  %227 = load i8*, i8** %147, align 8
  %228 = select i1 %226, i8* %227, i8* %146
  %229 = call dereferenceable(24) %"class.SkSL::String"* @_ZNK4SkSL12StringStream3strEv(%"class.SkSL::StringStream"* %14)
  %230 = bitcast %"class.SkSL::String"* %229 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %231 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %230, i64 0, i32 1, i32 0
  %232 = load i8, i8* %231, align 1
  %233 = icmp slt i8 %232, 0
  %234 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %229, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = load i8*, i8** %234, align 8
  %236 = bitcast %"class.SkSL::String"* %229 to i8*
  %237 = select i1 %233, i8* %235, i8* %236
  %238 = load i8, i8* %25, align 1, !range !2
  %239 = icmp ne i8 %238, 0
  %240 = bitcast %"class.SkSL::PipelineStage::Callbacks"* %222 to void (%"class.SkSL::PipelineStage::Callbacks"*, i8*, i8*, i1)***
  %241 = load void (%"class.SkSL::PipelineStage::Callbacks"*, i8*, i8*, i1)**, void (%"class.SkSL::PipelineStage::Callbacks"*, i8*, i8*, i1)*** %240, align 8
  %242 = getelementptr inbounds void (%"class.SkSL::PipelineStage::Callbacks"*, i8*, i8*, i1)*, void (%"class.SkSL::PipelineStage::Callbacks"*, i8*, i8*, i1)** %241, i64 3
  %243 = load void (%"class.SkSL::PipelineStage::Callbacks"*, i8*, i8*, i1)*, void (%"class.SkSL::PipelineStage::Callbacks"*, i8*, i8*, i1)** %242, align 8
  call void %243(%"class.SkSL::PipelineStage::Callbacks"* %222, i8* %228, i8* %237, i1 zeroext %239) #11
  %244 = load i8, i8* %224, align 1
  %245 = icmp slt i8 %244, 0
  br i1 %245, label %246, label %248

246:                                              ; preds = %220
  %247 = load i8*, i8** %147, align 8
  call void @_ZdlPv(i8* %247) #12
  br label %248

248:                                              ; preds = %220, %246
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %146) #11
  %249 = load i8, i8* %170, align 1
  %250 = icmp slt i8 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %248
  %252 = load i8*, i8** %66, align 8
  call void @_ZdlPv(i8* %252) #12
  br label %253

253:                                              ; preds = %248, %251
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #11
  %254 = load i64, i64* %22, align 8
  %255 = load %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"*, %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"** %13, align 8
  %256 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %255, i64 0, i32 7
  %257 = bitcast %"class.SkSL::StringStream"** %256 to i64*
  store i64 %254, i64* %257, align 8
  %258 = getelementptr inbounds %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer", %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer"* %3, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %258, align 8
  %259 = getelementptr inbounds %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer", %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer"* %3, i64 0, i32 2, i32 2, i32 0
  %260 = bitcast %"class.std::__1::basic_string"* %259 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %261 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %260, i64 0, i32 1, i32 0
  %262 = load i8, i8* %261, align 1
  %263 = icmp slt i8 %262, 0
  br i1 %263, label %264, label %267

264:                                              ; preds = %253
  %265 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %259, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = load i8*, i8** %265, align 8
  call void @_ZdlPv(i8* %266) #12
  br label %267

267:                                              ; preds = %253, %264
  %268 = getelementptr inbounds %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer", %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer"* %3, i64 0, i32 2, i32 1
  call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %268) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %12) #11
  ret void

269:                                              ; preds = %185, %346
  %270 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), %185 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), %346 ]
  %271 = phi %"class.SkSL::Variable"** [ %181, %185 ], [ %347, %346 ]
  %272 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %271, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %186) #11
  %273 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %272, i64 0, i32 2
  %274 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %273, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %186, i8 0, i64 24, i1 false) #11, !alias.scope !12
  %275 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %274, i64 0, i32 1
  %276 = load i32, i32* %275, align 8, !noalias !12
  %277 = and i32 %276, 1
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %282, label %279

279:                                              ; preds = %269
  %280 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %187, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i64 0, i64 0)) #11
  %281 = load i32, i32* %275, align 8, !noalias !12
  br label %282

282:                                              ; preds = %279, %269
  %283 = phi i32 [ %276, %269 ], [ %281, %279 ]
  %284 = and i32 %283, 6
  %285 = icmp eq i32 %284, 6
  br i1 %285, label %292, label %286

286:                                              ; preds = %282
  %287 = and i32 %283, 2
  %288 = icmp eq i32 %287, 0
  %289 = and i32 %283, 6
  %290 = icmp eq i32 %289, 0
  %291 = select i1 %288, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0)
  br i1 %290, label %295, label %292

292:                                              ; preds = %286, %282
  %293 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0), %282 ], [ %291, %286 ]
  %294 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %187, i8* %293) #11
  br label %295

295:                                              ; preds = %286, %292
  %296 = load i8, i8* %189, align 1
  %297 = icmp slt i8 %296, 0
  %298 = load i8*, i8** %190, align 8
  %299 = select i1 %297, i8* %298, i8* %186
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %191) #11
  %300 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %272, i64 0, i32 0, i32 2
  %301 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %300, align 8
  call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %9, %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %301)
  %302 = load i8, i8* %193, align 1
  %303 = icmp slt i8 %302, 0
  %304 = load i8*, i8** %194, align 8
  %305 = select i1 %303, i8* %304, i8* %191
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %195) #11
  %306 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %272, i64 0, i32 0, i32 1, i32 0
  %307 = load i8*, i8** %306, align 8
  %308 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %272, i64 0, i32 0, i32 1, i32 1
  %309 = load i64, i64* %308, align 8
  %310 = icmp ugt i64 %309, -17
  br i1 %310, label %311, label %313

311:                                              ; preds = %295
  %312 = bitcast %"class.SkSL::String"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %312) #13
  unreachable

313:                                              ; preds = %295
  %314 = icmp ult i64 %309, 23
  br i1 %314, label %320, label %315

315:                                              ; preds = %313
  %316 = add nuw i64 %309, 16
  %317 = and i64 %316, -16
  %318 = call i8* @_Znwm(i64 %317) #12
  store i8* %318, i8** %196, align 8
  %319 = or i64 %317, -9223372036854775808
  store i64 %319, i64* %197, align 8
  store i64 %309, i64* %198, align 8
  br label %323

320:                                              ; preds = %313
  %321 = trunc i64 %309 to i8
  store i8 %321, i8* %200, align 1
  %322 = icmp eq i64 %309, 0
  br i1 %322, label %325, label %323

323:                                              ; preds = %320, %315
  %324 = phi i8* [ %318, %315 ], [ %195, %320 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %324, i8* align 1 %307, i64 %309, i1 false) #11
  br label %325

325:                                              ; preds = %320, %323
  %326 = phi i8* [ %195, %320 ], [ %324, %323 ]
  %327 = getelementptr inbounds i8, i8* %326, i64 %309
  store i8 0, i8* %327, align 1
  %328 = load i8, i8* %200, align 1
  %329 = icmp slt i8 %328, 0
  %330 = load i8*, i8** %196, align 8
  %331 = select i1 %329, i8* %330, i8* %195
  call void (%"class.SkSL::String"*, i8*, ...) @_ZN4SkSL6String7appendfEPKcz(%"class.SkSL::String"* nonnull %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0), i8* %270, i8* %299, i8* %305, i8* %331) #11
  %332 = load i8, i8* %200, align 1
  %333 = icmp slt i8 %332, 0
  br i1 %333, label %334, label %336

334:                                              ; preds = %325
  %335 = load i8*, i8** %196, align 8
  call void @_ZdlPv(i8* %335) #12
  br label %336

336:                                              ; preds = %325, %334
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %195) #11
  %337 = load i8, i8* %193, align 1
  %338 = icmp slt i8 %337, 0
  br i1 %338, label %339, label %341

339:                                              ; preds = %336
  %340 = load i8*, i8** %194, align 8
  call void @_ZdlPv(i8* %340) #12
  br label %341

341:                                              ; preds = %336, %339
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %191) #11
  %342 = load i8, i8* %189, align 1
  %343 = icmp slt i8 %342, 0
  br i1 %343, label %344, label %346

344:                                              ; preds = %341
  %345 = load i8*, i8** %190, align 8
  call void @_ZdlPv(i8* %345) #12
  br label %346

346:                                              ; preds = %341, %344
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %186) #11
  %347 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %271, i64 1
  %348 = icmp eq %"class.SkSL::Variable"** %347, %183
  br i1 %348, label %201, label %269
}

declare void @_ZN4SkSL6String6printfEPKcz(%"class.SkSL::String"* sret, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* noalias sret, %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* nocapture readonly, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %30

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 6
  %10 = bitcast %"class.SkSL::String"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 -86, i64 24, i1 false)
  %11 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %9, align 8
  %12 = icmp eq %"class.SkSL::Type"* %11, null
  %13 = select i1 %12, %"class.SkSL::Type"* %2, %"class.SkSL::Type"* %11
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* sret %0, %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %1, %"class.SkSL::Type"* dereferenceable(184) %13)
  %14 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %14, i8 signext 91) #11
  %15 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 8
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %29, label %18

18:                                               ; preds = %8
  %19 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %4, i32 %16) #11
  %20 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %4) #11
  %21 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %27) #12
  br label %28

28:                                               ; preds = %18, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  br label %29

29:                                               ; preds = %8, %28
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %14, i8 signext 93) #11
  br label %141

30:                                               ; preds = %3
  %31 = ptrtoint %"class.SkSL::Type"* %2 to i64
  %32 = lshr i64 %31, 32
  %33 = shl i64 %31, 3
  %34 = and i64 %33, 4294967288
  %35 = add nuw nsw i64 %34, 8
  %36 = xor i64 %35, %32
  %37 = mul i64 %36, -7070675565921424023
  %38 = lshr i64 %37, 47
  %39 = xor i64 %37, %32
  %40 = xor i64 %39, %38
  %41 = mul i64 %40, -7070675565921424023
  %42 = lshr i64 %41, 47
  %43 = xor i64 %42, %41
  %44 = mul i64 %43, -7070675565921424023
  %45 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %112, label %48

48:                                               ; preds = %30
  %49 = tail call i64 @llvm.ctpop.i64(i64 %46) #11, !range !9
  %50 = icmp ugt i64 %49, 1
  br i1 %50, label %54, label %51

51:                                               ; preds = %48
  %52 = add i64 %46, -1
  %53 = and i64 %52, %44
  br label %58

54:                                               ; preds = %48
  %55 = icmp ult i64 %44, %46
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %44, %46
  br label %58

58:                                               ; preds = %56, %54, %51
  %59 = phi i64 [ %53, %51 ], [ %57, %56 ], [ %44, %54 ]
  %60 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %60, align 8
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %61, i64 %59
  %63 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base.166"* %63, null
  br i1 %64, label %112, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %63, i64 0, i32 0
  %67 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %66, align 8
  %68 = icmp eq %"struct.std::__1::__hash_node_base.166"* %67, null
  br i1 %68, label %112, label %69

69:                                               ; preds = %65
  %70 = add i64 %46, -1
  br label %71

71:                                               ; preds = %92, %69
  %72 = phi %"struct.std::__1::__hash_node_base.166"* [ %67, %69 ], [ %94, %92 ]
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %72, i64 1
  %74 = bitcast %"struct.std::__1::__hash_node_base.166"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = icmp eq i64 %75, %44
  br i1 %76, label %87, label %77

77:                                               ; preds = %71
  br i1 %50, label %80, label %78

78:                                               ; preds = %77
  %79 = and i64 %75, %70
  br label %84

80:                                               ; preds = %77
  %81 = icmp ult i64 %75, %46
  br i1 %81, label %84, label %82

82:                                               ; preds = %80
  %83 = urem i64 %75, %46
  br label %84

84:                                               ; preds = %82, %80, %78
  %85 = phi i64 [ %79, %78 ], [ %83, %82 ], [ %75, %80 ]
  %86 = icmp eq i64 %85, %59
  br i1 %86, label %92, label %112

87:                                               ; preds = %71
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %72, i64 2
  %89 = bitcast %"struct.std::__1::__hash_node_base.166"* %88 to %"class.SkSL::Type"**
  %90 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %89, align 8
  %91 = icmp eq %"class.SkSL::Type"* %90, %2
  br i1 %91, label %96, label %92

92:                                               ; preds = %87, %84
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %72, i64 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %93, align 8
  %95 = icmp eq %"struct.std::__1::__hash_node_base.166"* %94, null
  br i1 %95, label %112, label %71

96:                                               ; preds = %87
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %72, i64 3
  %98 = bitcast %"struct.std::__1::__hash_node_base.166"* %97 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %96
  %103 = bitcast %"class.SkSL::String"* %0 to i8*
  %104 = bitcast %"struct.std::__1::__hash_node_base.166"* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 24, i1 false) #11
  br label %141

105:                                              ; preds = %96
  %106 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0
  %107 = bitcast %"struct.std::__1::__hash_node_base.166"* %97 to i8**
  %108 = load i8*, i8** %107, align 8
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %72, i64 4
  %110 = bitcast %"struct.std::__1::__hash_node_base.166"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %106, i8* %108, i64 %111) #11
  br label %141

112:                                              ; preds = %84, %92, %58, %30, %65
  %113 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 0, i32 1, i32 0
  %114 = load i8*, i8** %113, align 8
  %115 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 0, i32 1, i32 1
  %116 = load i64, i64* %115, align 8
  %117 = icmp ugt i64 %116, -17
  br i1 %117, label %118, label %120

118:                                              ; preds = %112
  %119 = bitcast %"class.SkSL::String"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %119) #13
  unreachable

120:                                              ; preds = %112
  %121 = icmp ult i64 %116, 23
  br i1 %121, label %130, label %122

122:                                              ; preds = %120
  %123 = add nuw i64 %116, 16
  %124 = and i64 %123, -16
  %125 = tail call i8* @_Znwm(i64 %124) #12
  %126 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %125, i8** %126, align 8
  %127 = or i64 %124, -9223372036854775808
  %128 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %116, i64* %129, align 8
  br label %136

130:                                              ; preds = %120
  %131 = trunc i64 %116 to i8
  %132 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %132, i64 0, i32 1, i32 0
  store i8 %131, i8* %133, align 1
  %134 = bitcast %"class.SkSL::String"* %0 to i8*
  %135 = icmp eq i64 %116, 0
  br i1 %135, label %138, label %136

136:                                              ; preds = %130, %122
  %137 = phi i8* [ %125, %122 ], [ %134, %130 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %137, i8* align 1 %114, i64 %116, i1 false) #11
  br label %138

138:                                              ; preds = %130, %136
  %139 = phi i8* [ %134, %130 ], [ %137, %136 ]
  %140 = getelementptr inbounds i8, i8* %139, i64 %116
  store i8 0, i8* %140, align 1
  br label %141

141:                                              ; preds = %138, %102, %105, %29
  ret void
}

declare void @_ZN4SkSL6String7appendfEPKcz(%"class.SkSL::String"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator14modifierStringERKNS_9ModifiersE(%"class.SkSL::String"* noalias sret, %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* nocapture readnone, %"struct.SkSL::Modifiers"* nocapture readonly dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #11
  %5 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %2, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0
  %11 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i64 0, i64 0)) #11
  %12 = load i32, i32* %5, align 8
  br label %13

13:                                               ; preds = %3, %9
  %14 = phi i32 [ %6, %3 ], [ %12, %9 ]
  %15 = and i32 %14, 6
  %16 = icmp eq i32 %15, 6
  br i1 %16, label %23, label %17

17:                                               ; preds = %13
  %18 = and i32 %14, 2
  %19 = icmp eq i32 %18, 0
  %20 = and i32 %14, 6
  %21 = icmp eq i32 %20, 0
  %22 = select i1 %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0)
  br i1 %21, label %27, label %23

23:                                               ; preds = %17, %13
  %24 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0), %13 ], [ %22, %17 ]
  %25 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0
  %26 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %25, i8* %24) #11
  br label %27

27:                                               ; preds = %17, %23
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator25writeGlobalVarDeclarationERKNS_20GlobalVarDeclarationE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"*, %"class.SkSL::GlobalVarDeclaration"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"struct.std::__1::pair.270", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer", align 8
  %11 = alloca %"struct.std::__1::pair.270", align 8
  %12 = getelementptr inbounds %"class.SkSL::GlobalVarDeclaration", %"class.SkSL::GlobalVarDeclaration"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = bitcast %"class.SkSL::Statement"** %12 to %"class.SkSL::VarDeclaration"**
  %14 = load %"class.SkSL::VarDeclaration"*, %"class.SkSL::VarDeclaration"** %13, align 8
  %15 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %14, i64 0, i32 1
  %16 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %15, align 8
  %17 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %16, i64 0, i32 4
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %245

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %16, i64 0, i32 0, i32 2
  %22 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %21, align 8
  %23 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %22, i64 0, i32 3
  %24 = load i32, i32* %23, align 8
  switch i32 %24, label %25 [
    i32 13, label %245
    i32 2, label %245
    i32 5, label %245
    i32 6, label %245
    i32 7, label %245
    i32 14, label %245
    i32 10, label %245
    i32 12, label %245
  ]

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %16, i64 0, i32 2
  %27 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %26, align 8
  %28 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %27, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %66, label %32

32:                                               ; preds = %25
  %33 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 3
  %36 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false)
  %37 = load %"class.SkSL::PipelineStage::Callbacks"*, %"class.SkSL::PipelineStage::Callbacks"** %35, align 8
  %38 = bitcast %"class.SkSL::PipelineStage::Callbacks"* %37 to void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, %"class.SkSL::VarDeclaration"*)***
  %39 = load void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, %"class.SkSL::VarDeclaration"*)**, void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, %"class.SkSL::VarDeclaration"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, %"class.SkSL::VarDeclaration"*)*, void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, %"class.SkSL::VarDeclaration"*)** %39, i64 6
  %41 = load void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, %"class.SkSL::VarDeclaration"*)*, void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, %"class.SkSL::VarDeclaration"*)** %40, align 8
  call void %41(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::PipelineStage::Callbacks"* %37, %"class.SkSL::VarDeclaration"* %14) #11
  %42 = bitcast %"struct.std::__1::pair.270"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #11
  %43 = ptrtoint %"class.SkSL::Variable"* %16 to i64
  %44 = bitcast %"struct.std::__1::pair.270"* %4 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 1
  %46 = bitcast %"class.SkSL::String"* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* nonnull align 8 %33, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 24, i1 false) #11
  %47 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 4, i32 0
  %48 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 0
  %49 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JNS_4pairIKS5_S6_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %47, %"class.SkSL::Variable"** nonnull dereferenceable(8) %48, %"struct.std::__1::pair.270"* nonnull dereferenceable(32) %4) #11
  %50 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %4, i64 0, i32 1, i32 0
  %51 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %32
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #12
  br label %58

58:                                               ; preds = %32, %55
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #11
  %59 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %58
  %64 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %58, %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #11
  br label %245

66:                                               ; preds = %25
  %67 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #11
  %68 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 3
  %70 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 -86, i64 24, i1 false)
  %71 = load %"class.SkSL::PipelineStage::Callbacks"*, %"class.SkSL::PipelineStage::Callbacks"** %69, align 8
  %72 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #11
  %73 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %16, i64 0, i32 0, i32 1, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %16, i64 0, i32 0, i32 1, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = icmp ugt i64 %76, -17
  br i1 %77, label %78, label %80

78:                                               ; preds = %66
  %79 = bitcast %"class.SkSL::String"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %79) #13
  unreachable

80:                                               ; preds = %66
  %81 = icmp ult i64 %76, 23
  br i1 %81, label %91, label %82

82:                                               ; preds = %80
  %83 = add nuw i64 %76, 16
  %84 = and i64 %83, -16
  %85 = tail call i8* @_Znwm(i64 %84) #12
  %86 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %85, i8** %86, align 8
  %87 = or i64 %84, -9223372036854775808
  %88 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %76, i64* %89, align 8
  %90 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %96

91:                                               ; preds = %80
  %92 = trunc i64 %76 to i8
  %93 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  store i8 %92, i8* %94, align 1
  %95 = icmp eq i64 %76, 0
  br i1 %95, label %99, label %96

96:                                               ; preds = %91, %82
  %97 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %93, %91 ], [ %90, %82 ]
  %98 = phi i8* [ %72, %91 ], [ %85, %82 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %98, i8* align 1 %74, i64 %76, i1 false) #11
  br label %99

99:                                               ; preds = %91, %96
  %100 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %93, %91 ], [ %97, %96 ]
  %101 = phi i8* [ %72, %91 ], [ %98, %96 ]
  %102 = getelementptr inbounds i8, i8* %101, i64 %76
  store i8 0, i8* %102, align 1
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  %106 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  %108 = select i1 %105, i8* %107, i8* %72
  %109 = bitcast %"class.SkSL::PipelineStage::Callbacks"* %71 to void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i8*)***
  %110 = load void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i8*)**, void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i8*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i8*)*, void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i8*)** %110, i64 2
  %112 = load void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i8*)*, void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i8*)** %111, align 8
  call void %112(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::PipelineStage::Callbacks"* %71, i8* %108) #11
  %113 = load i8, i8* %103, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %99
  %116 = load i8*, i8** %106, align 8
  call void @_ZdlPv(i8* %116) #12
  br label %117

117:                                              ; preds = %99, %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #11
  %118 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #11
  %119 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = bitcast %"class.SkSL::String"* %8 to i8*
  %121 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #11
  %122 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %26, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %120, i8 0, i64 24, i1 false) #11, !alias.scope !15
  %123 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %122, i64 0, i32 1
  %124 = load i32, i32* %123, align 8, !noalias !15
  %125 = and i32 %124, 1
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %131, label %127

127:                                              ; preds = %117
  %128 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0
  %129 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %128, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i64 0, i64 0)) #11
  %130 = load i32, i32* %123, align 8, !noalias !15
  br label %131

131:                                              ; preds = %127, %117
  %132 = phi i32 [ %124, %117 ], [ %130, %127 ]
  %133 = and i32 %132, 6
  %134 = icmp eq i32 %133, 6
  br i1 %134, label %141, label %135

135:                                              ; preds = %131
  %136 = and i32 %132, 2
  %137 = icmp eq i32 %136, 0
  %138 = and i32 %132, 6
  %139 = icmp eq i32 %138, 0
  %140 = select i1 %137, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0)
  br i1 %139, label %145, label %141

141:                                              ; preds = %135, %131
  %142 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0), %131 ], [ %140, %135 ]
  %143 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0
  %144 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %143, i8* %142) #11
  br label %145

145:                                              ; preds = %135, %141
  %146 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %146) #11
  %147 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %21, align 8
  %148 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %149 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %148, i64 0, i32 1, i32 0
  %150 = load i8, i8* %149, align 1
  %151 = icmp slt i8 %150, 0
  %152 = load i8*, i8** %68, align 8
  %153 = select i1 %151, i8* %152, i8* %67
  %154 = call i64 @strlen(i8* %153) #14
  call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator13typedVariableERKNS_4TypeENS_14StringFragmentE(%"class.SkSL::String"* nonnull sret %9, %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %147, i8* %153, i64 %154)
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::String"* nonnull %8, %"class.SkSL::String"* nonnull dereferenceable(24) %9) #11
  %155 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %156 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %155, i64 0, i32 1, i32 0
  %157 = load i8, i8* %156, align 1
  %158 = icmp slt i8 %157, 0
  br i1 %158, label %159, label %162

159:                                              ; preds = %145
  %160 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load i8*, i8** %160, align 8
  call void @_ZdlPv(i8* %161) #12
  br label %162

162:                                              ; preds = %145, %159
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %146) #11
  %163 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %164 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %163, i64 0, i32 1, i32 0
  %165 = load i8, i8* %164, align 1
  %166 = icmp slt i8 %165, 0
  br i1 %166, label %167, label %170

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i8*, i8** %168, align 8
  call void @_ZdlPv(i8* %169) #12
  br label %170

170:                                              ; preds = %162, %167
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #11
  %171 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %14, i64 0, i32 4, i32 0, i32 0, i32 0
  %172 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %171, align 8
  %173 = icmp eq %"class.SkSL::Expression"* %172, null
  br i1 %173, label %205, label %174

174:                                              ; preds = %170
  %175 = bitcast %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %175) #11
  %176 = getelementptr inbounds %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer", %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer"* %10, i64 0, i32 0
  store %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"** %176, align 8
  %177 = getelementptr inbounds %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer", %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer"* %10, i64 0, i32 2
  %178 = bitcast %"class.SkSL::StringStream"* %177 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %178, align 8
  %179 = getelementptr inbounds %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer", %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer"* %10, i64 0, i32 2, i32 1, i32 1
  %180 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %179 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %180, i8 0, i64 48, i1 false) #11
  %181 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %182 = bitcast %"class.SkSL::StringStream"** %181 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = getelementptr inbounds %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer", %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer"* %10, i64 0, i32 1
  %185 = bitcast %"class.SkSL::StringStream"** %184 to i64*
  store i64 %183, i64* %185, align 8
  store %"class.SkSL::StringStream"* %177, %"class.SkSL::StringStream"** %181, align 8
  %186 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %171, align 8
  call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %186, i32 17)
  %187 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* nonnull %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0)) #11
  %188 = call dereferenceable(24) %"class.SkSL::String"* @_ZNK4SkSL12StringStream3strEv(%"class.SkSL::StringStream"* %177)
  %189 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* nonnull %7, %"class.SkSL::String"* dereferenceable(24) %188) #11
  %190 = load i64, i64* %185, align 8
  %191 = load %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"*, %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"** %176, align 8
  %192 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %191, i64 0, i32 7
  %193 = bitcast %"class.SkSL::StringStream"** %192 to i64*
  store i64 %190, i64* %193, align 8
  %194 = getelementptr inbounds %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer", %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer"* %10, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %194, align 8
  %195 = getelementptr inbounds %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer", %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer"* %10, i64 0, i32 2, i32 2, i32 0
  %196 = bitcast %"class.std::__1::basic_string"* %195 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %196, i64 0, i32 1, i32 0
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %174
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %195, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load i8*, i8** %201, align 8
  call void @_ZdlPv(i8* %202) #12
  br label %203

203:                                              ; preds = %174, %200
  %204 = getelementptr inbounds %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer", %"struct.SkSL::PipelineStage::PipelineStageCodeGenerator::AutoOutputBuffer"* %10, i64 0, i32 2, i32 1
  call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %204) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %175) #11
  br label %205

205:                                              ; preds = %170, %203
  %206 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* nonnull %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0)) #11
  %207 = load %"class.SkSL::PipelineStage::Callbacks"*, %"class.SkSL::PipelineStage::Callbacks"** %69, align 8
  %208 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %209 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %208, i64 0, i32 1, i32 0
  %210 = load i8, i8* %209, align 1
  %211 = icmp slt i8 %210, 0
  %212 = load i8*, i8** %119, align 8
  %213 = select i1 %211, i8* %212, i8* %118
  %214 = bitcast %"class.SkSL::PipelineStage::Callbacks"* %207 to void (%"class.SkSL::PipelineStage::Callbacks"*, i8*)***
  %215 = load void (%"class.SkSL::PipelineStage::Callbacks"*, i8*)**, void (%"class.SkSL::PipelineStage::Callbacks"*, i8*)*** %214, align 8
  %216 = getelementptr inbounds void (%"class.SkSL::PipelineStage::Callbacks"*, i8*)*, void (%"class.SkSL::PipelineStage::Callbacks"*, i8*)** %215, i64 5
  %217 = load void (%"class.SkSL::PipelineStage::Callbacks"*, i8*)*, void (%"class.SkSL::PipelineStage::Callbacks"*, i8*)** %216, align 8
  call void %217(%"class.SkSL::PipelineStage::Callbacks"* %207, i8* %213) #11
  %218 = bitcast %"struct.std::__1::pair.270"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %218) #11
  %219 = ptrtoint %"class.SkSL::Variable"* %16 to i64
  %220 = bitcast %"struct.std::__1::pair.270"* %11 to i64*
  store i64 %219, i64* %220, align 8
  %221 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 0, i32 1
  %222 = bitcast %"class.SkSL::String"* %221 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* nonnull align 8 %67, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 0, i64 24, i1 false) #11
  %223 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 4, i32 0
  %224 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 0, i32 0
  %225 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JNS_4pairIKS5_S6_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %223, %"class.SkSL::Variable"** nonnull dereferenceable(8) %224, %"struct.std::__1::pair.270"* nonnull dereferenceable(32) %11) #11
  %226 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %11, i64 0, i32 1, i32 0
  %227 = bitcast %"class.std::__1::basic_string"* %226 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %228 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %227, i64 0, i32 1, i32 0
  %229 = load i8, i8* %228, align 1
  %230 = icmp slt i8 %229, 0
  br i1 %230, label %231, label %234

231:                                              ; preds = %205
  %232 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %226, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load i8*, i8** %232, align 8
  call void @_ZdlPv(i8* %233) #12
  br label %234

234:                                              ; preds = %205, %231
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %218) #11
  %235 = load i8, i8* %209, align 1
  %236 = icmp slt i8 %235, 0
  br i1 %236, label %237, label %239

237:                                              ; preds = %234
  %238 = load i8*, i8** %119, align 8
  call void @_ZdlPv(i8* %238) #12
  br label %239

239:                                              ; preds = %234, %237
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #11
  %240 = load i8, i8* %149, align 1
  %241 = icmp slt i8 %240, 0
  br i1 %241, label %242, label %244

242:                                              ; preds = %239
  %243 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %243) #12
  br label %244

244:                                              ; preds = %239, %242
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #11
  br label %245

245:                                              ; preds = %2, %20, %20, %20, %20, %20, %20, %20, %20, %65, %244
  ret void
}

declare void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* sret, %"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator13typedVariableERKNS_4TypeENS_14StringFragmentE(%"class.SkSL::String"* noalias sret, %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* nocapture readonly, %"class.SkSL::Type"* dereferenceable(184), i8*, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %19

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 6
  %16 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %15, align 8
  %17 = icmp eq %"class.SkSL::Type"* %16, null
  %18 = select i1 %17, %"class.SkSL::Type"* %2, %"class.SkSL::Type"* %16
  br label %19

19:                                               ; preds = %5, %14
  %20 = phi %"class.SkSL::Type"* [ %18, %14 ], [ %2, %5 ]
  %21 = bitcast %"class.SkSL::String"* %6 to i8*
  %22 = bitcast %"class.SkSL::String"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  %23 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #11
  call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %1, %"class.SkSL::Type"* dereferenceable(184) %20)
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::String"* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #11
  call void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %6, i8* %3, i64 %4) #11
  %24 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %30) #12
  br label %31

31:                                               ; preds = %19, %28
  %32 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %38) #12
  br label %39

39:                                               ; preds = %31, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  %40 = load i32, i32* %11, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %73

42:                                               ; preds = %39
  %43 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #11
  %44 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #11
  %45 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #11
  %46 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 8
  %47 = load i32, i32* %46, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %10, i32 %47) #11
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %10) #11
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %8, %"class.SkSL::String"* nonnull %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0)) #11
  %48 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %8) #11
  %49 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %42
  %54 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %55) #12
  br label %56

56:                                               ; preds = %42, %53
  %57 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %63) #12
  br label %64

64:                                               ; preds = %56, %61
  %65 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #12
  br label %72

72:                                               ; preds = %64, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #11
  br label %73

73:                                               ; preds = %39, %72
  ret void
}

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"*, i8*) local_unnamed_addr #2

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator21writeStructDefinitionERKNS_16StructDefinitionE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"*, %"class.SkSL::StructDefinition"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"struct.std::__1::pair.283", align 8
  %10 = getelementptr inbounds %"class.SkSL::StructDefinition", %"class.SkSL::StructDefinition"* %1, i64 0, i32 1
  %11 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %10, align 8
  %12 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 3
  %15 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  %16 = load %"class.SkSL::PipelineStage::Callbacks"*, %"class.SkSL::PipelineStage::Callbacks"** %14, align 8
  %17 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %11, i64 0, i32 0, i32 1, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %11, i64 0, i32 0, i32 1, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp ugt i64 %21, -17
  br i1 %22, label %23, label %25

23:                                               ; preds = %2
  %24 = bitcast %"class.SkSL::String"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %24) #13
  unreachable

25:                                               ; preds = %2
  %26 = icmp ult i64 %21, 23
  br i1 %26, label %36, label %27

27:                                               ; preds = %25
  %28 = add nuw i64 %21, 16
  %29 = and i64 %28, -16
  %30 = tail call i8* @_Znwm(i64 %29) #12
  %31 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %30, i8** %31, align 8
  %32 = or i64 %29, -9223372036854775808
  %33 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %21, i64* %34, align 8
  %35 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %41

36:                                               ; preds = %25
  %37 = trunc i64 %21 to i8
  %38 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  store i8 %37, i8* %39, align 1
  %40 = icmp eq i64 %21, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %36, %27
  %42 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %38, %36 ], [ %35, %27 ]
  %43 = phi i8* [ %17, %36 ], [ %30, %27 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %43, i8* align 1 %19, i64 %21, i1 false) #11
  br label %44

44:                                               ; preds = %36, %41
  %45 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %38, %36 ], [ %42, %41 ]
  %46 = phi i8* [ %17, %36 ], [ %43, %41 ]
  %47 = getelementptr inbounds i8, i8* %46, i64 %21
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  %51 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = select i1 %50, i8* %52, i8* %17
  %54 = bitcast %"class.SkSL::PipelineStage::Callbacks"* %16 to void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i8*)***
  %55 = load void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i8*)**, void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i8*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i8*)*, void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i8*)** %55, i64 2
  %57 = load void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i8*)*, void (%"class.SkSL::String"*, %"class.SkSL::PipelineStage::Callbacks"*, i8*)** %56, align 8
  call void %57(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::PipelineStage::Callbacks"* %16, i8* %53) #11
  %58 = load i8, i8* %48, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %44
  %61 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %61) #12
  br label %62

62:                                               ; preds = %44, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #11
  %63 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #11
  %64 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.SkSL::String"* %6 to i8*
  %66 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #11
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %3) #11
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::String"* nonnull %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0)) #11
  %67 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %62
  %72 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %73) #12
  br label %74

74:                                               ; preds = %62, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #11
  %75 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %11, i64 0, i32 10, i32 0, i32 0
  %76 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %75, align 8
  %77 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %11, i64 0, i32 10, i32 0, i32 1
  %78 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %77, align 8
  %79 = icmp eq %"struct.SkSL::Type::Field"* %76, %78
  br i1 %79, label %89, label %80

80:                                               ; preds = %74
  %81 = bitcast %"class.SkSL::String"* %7 to i8*
  %82 = bitcast %"class.SkSL::String"* %8 to i8*
  %83 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %131

89:                                               ; preds = %149, %74
  %90 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* nonnull %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i64 0, i64 0)) #11
  %91 = bitcast %"struct.std::__1::pair.283"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %91) #11
  %92 = ptrtoint %"class.SkSL::Type"* %11 to i64
  %93 = bitcast %"struct.std::__1::pair.283"* %9 to i64*
  store i64 %92, i64* %93, align 8
  %94 = getelementptr inbounds %"struct.std::__1::pair.283", %"struct.std::__1::pair.283"* %9, i64 0, i32 1
  %95 = bitcast %"class.SkSL::String"* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* nonnull align 8 %12, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #11
  %96 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 6, i32 0
  %97 = getelementptr inbounds %"struct.std::__1::pair.283", %"struct.std::__1::pair.283"* %9, i64 0, i32 0
  %98 = call { %"struct.std::__1::__hash_node_base.166"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4TypeENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JNS_4pairIKS5_S6_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.162"* %96, %"class.SkSL::Type"** nonnull dereferenceable(8) %97, %"struct.std::__1::pair.283"* nonnull dereferenceable(32) %9) #11
  %99 = getelementptr inbounds %"struct.std::__1::pair.283", %"struct.std::__1::pair.283"* %9, i64 0, i32 1, i32 0
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %89
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  call void @_ZdlPv(i8* %106) #12
  br label %107

107:                                              ; preds = %89, %104
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %91) #11
  %108 = load %"class.SkSL::PipelineStage::Callbacks"*, %"class.SkSL::PipelineStage::Callbacks"** %14, align 8
  %109 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %109, i64 0, i32 1, i32 0
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  %113 = load i8*, i8** %64, align 8
  %114 = select i1 %112, i8* %113, i8* %63
  %115 = bitcast %"class.SkSL::PipelineStage::Callbacks"* %108 to void (%"class.SkSL::PipelineStage::Callbacks"*, i8*)***
  %116 = load void (%"class.SkSL::PipelineStage::Callbacks"*, i8*)**, void (%"class.SkSL::PipelineStage::Callbacks"*, i8*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.SkSL::PipelineStage::Callbacks"*, i8*)*, void (%"class.SkSL::PipelineStage::Callbacks"*, i8*)** %116, i64 4
  %118 = load void (%"class.SkSL::PipelineStage::Callbacks"*, i8*)*, void (%"class.SkSL::PipelineStage::Callbacks"*, i8*)** %117, align 8
  call void %118(%"class.SkSL::PipelineStage::Callbacks"* %108, i8* %114) #11
  %119 = load i8, i8* %110, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %107
  %122 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %122) #12
  br label %123

123:                                              ; preds = %107, %121
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #11
  %124 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %130

128:                                              ; preds = %123
  %129 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %129) #12
  br label %130

130:                                              ; preds = %123, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  ret void

131:                                              ; preds = %80, %149
  %132 = phi %"struct.SkSL::Type::Field"* [ %76, %80 ], [ %150, %149 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #11
  %133 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %132, i64 0, i32 2
  %134 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %133, align 8
  %135 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %132, i64 0, i32 1, i32 0
  %136 = load i8*, i8** %135, align 8
  %137 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %132, i64 0, i32 1, i32 1
  %138 = load i64, i64* %137, align 8
  call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator13typedVariableERKNS_4TypeENS_14StringFragmentE(%"class.SkSL::String"* nonnull sret %8, %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %134, i8* %136, i64 %138)
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::String"* nonnull %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0)) #11
  %139 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* nonnull %5, %"class.SkSL::String"* nonnull dereferenceable(24) %7) #11
  %140 = load i8, i8* %84, align 1
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %131
  %143 = load i8*, i8** %85, align 8
  call void @_ZdlPv(i8* %143) #12
  br label %144

144:                                              ; preds = %131, %142
  %145 = load i8, i8* %87, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %149

147:                                              ; preds = %144
  %148 = load i8*, i8** %88, align 8
  call void @_ZdlPv(i8* %148) #12
  br label %149

149:                                              ; preds = %144, %147
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #11
  %150 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %132, i64 1
  %151 = icmp eq %"struct.SkSL::Type::Field"* %150, %78
  br i1 %151, label %89, label %131
}

declare void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* sret, i8*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator19writeProgramElementERKNS_14ProgramElementE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"*, %"class.SkSL::ProgramElement"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %11 [
    i32 4, label %5
    i32 2, label %7
    i32 8, label %9
  ]

5:                                                ; preds = %2
  %6 = bitcast %"class.SkSL::ProgramElement"* %1 to %"class.SkSL::GlobalVarDeclaration"*
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator25writeGlobalVarDeclarationERKNS_20GlobalVarDeclarationE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::GlobalVarDeclaration"* dereferenceable(24) %6)
  br label %11

7:                                                ; preds = %2
  %8 = bitcast %"class.SkSL::ProgramElement"* %1 to %"class.SkSL::FunctionDefinition"*
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator13writeFunctionERKNS_18FunctionDefinitionE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::FunctionDefinition"* dereferenceable(88) %8)
  br label %11

9:                                                ; preds = %2
  %10 = bitcast %"class.SkSL::ProgramElement"* %1 to %"class.SkSL::StructDefinition"*
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator21writeStructDefinitionERKNS_16StructDefinitionE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::StructDefinition"* dereferenceable(24) %10)
  br label %11

11:                                               ; preds = %2, %9, %7, %5
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #2

declare void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* sret, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator9writeTypeERKNS_4TypeE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* nocapture readonly, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #11
  call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1)
  %5 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %6 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %5, align 8
  %7 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %9 to i64
  %16 = select i1 %10, i8* %12, i8* %4
  %17 = select i1 %10, i64 %14, i64 %15
  %18 = bitcast %"class.SkSL::StringStream"* %6 to void (%"class.SkSL::StringStream"*, i8*, i64)***
  %19 = load void (%"class.SkSL::StringStream"*, i8*, i64)**, void (%"class.SkSL::StringStream"*, i8*, i64)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %19, i64 3
  %21 = load void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %20, align 8
  call void %21(%"class.SkSL::StringStream"* %6, i8* %16, i64 %17) #11
  %22 = load i8, i8* %8, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %2
  %25 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %25) #12
  br label %26

26:                                               ; preds = %2, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator21writeBinaryExpressionERKNS_16BinaryExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"*, %"class.SkSL::BinaryExpression"* nocapture readonly dereferenceable(48), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::Operator", align 4
  %5 = getelementptr inbounds %"class.SkSL::BinaryExpression", %"class.SkSL::BinaryExpression"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %5, align 8
  %7 = getelementptr inbounds %"class.SkSL::BinaryExpression", %"class.SkSL::BinaryExpression"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %7, align 8
  %9 = bitcast %"class.SkSL::Operator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %4, i64 0, i32 0
  %11 = getelementptr inbounds %"class.SkSL::BinaryExpression", %"class.SkSL::BinaryExpression"* %1, i64 0, i32 2, i32 0
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %10, align 4
  %13 = call i32 @_ZNK4SkSL8Operator19getBinaryPrecedenceEv(%"class.SkSL::Operator"* nonnull %4) #11
  %14 = icmp slt i32 %13, %2
  br i1 %14, label %43, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %17 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %16, align 8
  %18 = bitcast %"class.SkSL::StringStream"* %17 to void (%"class.SkSL::StringStream"*, i8*)***
  %19 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %19, i64 2
  %21 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %20, align 8
  call void %21(%"class.SkSL::StringStream"* %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #11
  call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %6, i32 %13)
  %22 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %16, align 8
  %23 = bitcast %"class.SkSL::StringStream"* %22 to void (%"class.SkSL::StringStream"*, i8*)***
  %24 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %24, i64 2
  %26 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %25, align 8
  call void %26(%"class.SkSL::StringStream"* %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #11
  %27 = call i8* @_ZNK4SkSL8Operator12operatorNameEv(%"class.SkSL::Operator"* nonnull %4) #11
  %28 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %16, align 8
  %29 = bitcast %"class.SkSL::StringStream"* %28 to void (%"class.SkSL::StringStream"*, i8*)***
  %30 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %30, i64 2
  %32 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %31, align 8
  call void %32(%"class.SkSL::StringStream"* %28, i8* %27) #11
  %33 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %16, align 8
  %34 = bitcast %"class.SkSL::StringStream"* %33 to void (%"class.SkSL::StringStream"*, i8*)***
  %35 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %35, i64 2
  %37 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %36, align 8
  call void %37(%"class.SkSL::StringStream"* %33, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #11
  call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %8, i32 %13)
  %38 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %16, align 8
  %39 = bitcast %"class.SkSL::StringStream"* %38 to void (%"class.SkSL::StringStream"*, i8*)***
  %40 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %40, i64 2
  %42 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %41, align 8
  call void %42(%"class.SkSL::StringStream"* %38, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #11
  br label %61

43:                                               ; preds = %3
  call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %6, i32 %13)
  %44 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %45 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %44, align 8
  %46 = bitcast %"class.SkSL::StringStream"* %45 to void (%"class.SkSL::StringStream"*, i8*)***
  %47 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %47, i64 2
  %49 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %48, align 8
  call void %49(%"class.SkSL::StringStream"* %45, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #11
  %50 = call i8* @_ZNK4SkSL8Operator12operatorNameEv(%"class.SkSL::Operator"* nonnull %4) #11
  %51 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %44, align 8
  %52 = bitcast %"class.SkSL::StringStream"* %51 to void (%"class.SkSL::StringStream"*, i8*)***
  %53 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %53, i64 2
  %55 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %54, align 8
  call void %55(%"class.SkSL::StringStream"* %51, i8* %50) #11
  %56 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %44, align 8
  %57 = bitcast %"class.SkSL::StringStream"* %56 to void (%"class.SkSL::StringStream"*, i8*)***
  %58 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %58, i64 2
  %60 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %59, align 8
  call void %60(%"class.SkSL::StringStream"* %56, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #11
  call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %8, i32 %13)
  br label %61

61:                                               ; preds = %43, %15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator19writeAnyConstructorERKNS_14AnyConstructorENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"*, %"class.SkSL::AnyConstructor"* dereferenceable(32), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = getelementptr inbounds %"class.SkSL::AnyConstructor", %"class.SkSL::AnyConstructor"* %1, i64 0, i32 0
  %6 = bitcast %"class.SkSL::AnyConstructor"* %1 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %7 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %7, i64 3
  %9 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %8, align 8
  %10 = tail call dereferenceable(184) %"class.SkSL::Type"* %9(%"class.SkSL::Expression"* %5) #11
  %11 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %10) #11
  %12 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %13 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %12, align 8
  %14 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %16 to i64
  %23 = select i1 %17, i8* %19, i8* %11
  %24 = select i1 %17, i64 %21, i64 %22
  %25 = bitcast %"class.SkSL::StringStream"* %13 to void (%"class.SkSL::StringStream"*, i8*, i64)***
  %26 = load void (%"class.SkSL::StringStream"*, i8*, i64)**, void (%"class.SkSL::StringStream"*, i8*, i64)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %26, i64 3
  %28 = load void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %27, align 8
  call void %28(%"class.SkSL::StringStream"* %13, i8* %23, i64 %24) #11
  %29 = load i8, i8* %15, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %3
  %32 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %32) #12
  br label %33

33:                                               ; preds = %3, %31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  %34 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %12, align 8
  %35 = bitcast %"class.SkSL::StringStream"* %34 to void (%"class.SkSL::StringStream"*, i8*)***
  %36 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %36, i64 2
  %38 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %37, align 8
  call void %38(%"class.SkSL::StringStream"* %34, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #11
  %39 = bitcast %"class.SkSL::AnyConstructor"* %1 to { %"class.std::__1::unique_ptr.256"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %40 = load { %"class.std::__1::unique_ptr.256"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr.256"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %39, align 8
  %41 = getelementptr inbounds { %"class.std::__1::unique_ptr.256"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.256"*, i64 } (%"class.SkSL::AnyConstructor"*)** %40, i64 12
  %42 = load { %"class.std::__1::unique_ptr.256"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.256"*, i64 } (%"class.SkSL::AnyConstructor"*)** %41, align 8
  %43 = call { %"class.std::__1::unique_ptr.256"*, i64 } %42(%"class.SkSL::AnyConstructor"* %1) #11
  %44 = extractvalue { %"class.std::__1::unique_ptr.256"*, i64 } %43, 0
  %45 = extractvalue { %"class.std::__1::unique_ptr.256"*, i64 } %43, 1
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.256"* %44, i64 %45
  %47 = icmp eq i64 %45, 0
  %48 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %12, align 8
  %49 = bitcast %"class.SkSL::StringStream"* %48 to void (%"class.SkSL::StringStream"*, i8*)***
  %50 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %50, i64 2
  %52 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %51, align 8
  br i1 %47, label %63, label %53

53:                                               ; preds = %33
  call void %52(%"class.SkSL::StringStream"* %48, i8* nonnull getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)) #11
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.256"* %44, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %54, align 8
  call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %55, i32 17)
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.256"* %44, i64 1
  %57 = icmp eq i64 %45, 1
  %58 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %12, align 8
  %59 = bitcast %"class.SkSL::StringStream"* %58 to void (%"class.SkSL::StringStream"*, i8*)***
  %60 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %60, i64 2
  %62 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %61, align 8
  br i1 %57, label %63, label %66

63:                                               ; preds = %53, %66, %33
  %64 = phi %"class.SkSL::StringStream"* [ %48, %33 ], [ %58, %53 ], [ %74, %66 ]
  %65 = phi void (%"class.SkSL::StringStream"*, i8*)* [ %52, %33 ], [ %62, %53 ], [ %78, %66 ]
  call void %65(%"class.SkSL::StringStream"* %64, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #11
  ret void

66:                                               ; preds = %53, %66
  %67 = phi void (%"class.SkSL::StringStream"*, i8*)* [ %78, %66 ], [ %62, %53 ]
  %68 = phi %"class.SkSL::StringStream"* [ %74, %66 ], [ %58, %53 ]
  %69 = phi %"class.std::__1::unique_ptr.256"* [ %72, %66 ], [ %56, %53 ]
  call void %67(%"class.SkSL::StringStream"* %68, i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0)) #11
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.256"* %69, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %70, align 8
  call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %71, i32 17)
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.256"* %69, i64 1
  %73 = icmp eq %"class.std::__1::unique_ptr.256"* %72, %46
  %74 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %12, align 8
  %75 = bitcast %"class.SkSL::StringStream"* %74 to void (%"class.SkSL::StringStream"*, i8*)***
  %76 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %76, i64 2
  %78 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %77, align 8
  br i1 %73, label %63, label %66, !llvm.loop !18
}

declare dereferenceable(32) %"class.SkSL::AnyConstructor"* @_ZNK4SkSL10Expression16asAnyConstructorEv(%"class.SkSL::Expression"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator16writeFieldAccessERKNS_11FieldAccessE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"*, %"class.SkSL::FieldAccess"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::FieldAccess", %"class.SkSL::FieldAccess"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %15

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::FieldAccess", %"class.SkSL::FieldAccess"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %7, align 8
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %8, i32 2)
  %9 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %10 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %9, align 8
  %11 = bitcast %"class.SkSL::StringStream"* %10 to void (%"class.SkSL::StringStream"*, i8*)***
  %12 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %12, i64 2
  %14 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %13, align 8
  tail call void %14(%"class.SkSL::StringStream"* %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0)) #11
  br label %15

15:                                               ; preds = %6, %2
  %16 = getelementptr inbounds %"class.SkSL::FieldAccess", %"class.SkSL::FieldAccess"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %16, align 8
  %18 = bitcast %"class.SkSL::Expression"* %17 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %19 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %19, i64 3
  %21 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %20, align 8
  %22 = tail call dereferenceable(184) %"class.SkSL::Type"* %21(%"class.SkSL::Expression"* %17) #11
  %23 = getelementptr inbounds %"class.SkSL::FieldAccess", %"class.SkSL::FieldAccess"* %1, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %22, i64 0, i32 10, i32 0, i32 0
  %27 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %26, align 8
  %28 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %27, i64 %25, i32 1, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %27, i64 %25, i32 1, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %33 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %32, align 8
  %34 = bitcast %"class.SkSL::StringStream"* %33 to void (%"class.SkSL::StringStream"*, i8*, i64)***
  %35 = load void (%"class.SkSL::StringStream"*, i8*, i64)**, void (%"class.SkSL::StringStream"*, i8*, i64)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %35, i64 3
  %37 = load void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %36, align 8
  tail call void %37(%"class.SkSL::StringStream"* %33, i8* %29, i64 %31) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator21writePrefixExpressionERKNS_16PrefixExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"*, %"class.SkSL::PrefixExpression"* nocapture readonly dereferenceable(40), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::Operator", align 4
  %5 = icmp slt i32 %2, 4
  br i1 %5, label %6, label %13

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %8 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %7, align 8
  %9 = bitcast %"class.SkSL::StringStream"* %8 to void (%"class.SkSL::StringStream"*, i8*)***
  %10 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %10, i64 2
  %12 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %11, align 8
  tail call void %12(%"class.SkSL::StringStream"* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #11
  br label %13

13:                                               ; preds = %6, %3
  %14 = bitcast %"class.SkSL::Operator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.SkSL::PrefixExpression", %"class.SkSL::PrefixExpression"* %1, i64 0, i32 1, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %4, i64 0, i32 0
  store i32 %16, i32* %17, align 4
  %18 = call i8* @_ZNK4SkSL8Operator12operatorNameEv(%"class.SkSL::Operator"* nonnull %4) #11
  %19 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %20 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %19, align 8
  %21 = bitcast %"class.SkSL::StringStream"* %20 to void (%"class.SkSL::StringStream"*, i8*)***
  %22 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %22, i64 2
  %24 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %23, align 8
  call void %24(%"class.SkSL::StringStream"* %20, i8* %18) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #11
  %25 = getelementptr inbounds %"class.SkSL::PrefixExpression", %"class.SkSL::PrefixExpression"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %26 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %25, align 8
  call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %26, i32 3)
  br i1 %5, label %27, label %33

27:                                               ; preds = %13
  %28 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %19, align 8
  %29 = bitcast %"class.SkSL::StringStream"* %28 to void (%"class.SkSL::StringStream"*, i8*)***
  %30 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %30, i64 2
  %32 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %31, align 8
  call void %32(%"class.SkSL::StringStream"* %28, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #11
  br label %33

33:                                               ; preds = %27, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator22writePostfixExpressionERKNS_17PostfixExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"*, %"class.SkSL::PostfixExpression"* nocapture readonly dereferenceable(40), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::Operator", align 4
  %5 = icmp slt i32 %2, 3
  br i1 %5, label %6, label %13

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %8 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %7, align 8
  %9 = bitcast %"class.SkSL::StringStream"* %8 to void (%"class.SkSL::StringStream"*, i8*)***
  %10 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %10, i64 2
  %12 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %11, align 8
  tail call void %12(%"class.SkSL::StringStream"* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #11
  br label %13

13:                                               ; preds = %6, %3
  %14 = getelementptr inbounds %"class.SkSL::PostfixExpression", %"class.SkSL::PostfixExpression"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %14, align 8
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %15, i32 2)
  %16 = bitcast %"class.SkSL::Operator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.SkSL::PostfixExpression", %"class.SkSL::PostfixExpression"* %1, i64 0, i32 2, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %4, i64 0, i32 0
  store i32 %18, i32* %19, align 4
  %20 = call i8* @_ZNK4SkSL8Operator12operatorNameEv(%"class.SkSL::Operator"* nonnull %4) #11
  %21 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %22 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %21, align 8
  %23 = bitcast %"class.SkSL::StringStream"* %22 to void (%"class.SkSL::StringStream"*, i8*)***
  %24 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %24, i64 2
  %26 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %25, align 8
  call void %26(%"class.SkSL::StringStream"* %22, i8* %20) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #11
  br i1 %5, label %27, label %33

27:                                               ; preds = %13
  %28 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %21, align 8
  %29 = bitcast %"class.SkSL::StringStream"* %28 to void (%"class.SkSL::StringStream"*, i8*)***
  %30 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %30, i64 2
  %32 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %31, align 8
  call void %32(%"class.SkSL::StringStream"* %28, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #11
  br label %33

33:                                               ; preds = %27, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator12writeSwizzleERKNS_7SwizzleE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"*, %"struct.SkSL::Swizzle"* nocapture readonly dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %4, i32 2)
  %5 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %6 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %5, align 8
  %7 = bitcast %"class.SkSL::StringStream"* %6 to void (%"class.SkSL::StringStream"*, i8*)***
  %8 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %8, i64 2
  %10 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %9, align 8
  tail call void %10(%"class.SkSL::StringStream"* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0)) #11
  %11 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %1, i64 0, i32 2, i32 0, i32 0, i64 8
  %12 = bitcast i8* %11 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = lshr i64 %18, 1
  %20 = and i64 %19, 2147483647
  %21 = getelementptr inbounds i8, i8* %13, i64 %20
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %24, %2, %15
  ret void

24:                                               ; preds = %15, %24
  %25 = phi i8* [ %36, %24 ], [ %13, %15 ]
  %26 = load i8, i8* %25, align 1
  %27 = sext i8 %26 to i32
  %28 = shl nsw i32 %27, 1
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [9 x i8], [9 x i8]* @.str.26, i64 0, i64 %29
  %31 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %5, align 8
  %32 = bitcast %"class.SkSL::StringStream"* %31 to void (%"class.SkSL::StringStream"*, i8*)***
  %33 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %33, i64 2
  %35 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %34, align 8
  tail call void %35(%"class.SkSL::StringStream"* %31, i8* %30) #11
  %36 = getelementptr inbounds i8, i8* %25, i64 1
  %37 = icmp eq i8* %36, %21
  br i1 %37, label %23, label %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator22writeTernaryExpressionERKNS_17TernaryExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"*, %"class.SkSL::TernaryExpression"* nocapture readonly dereferenceable(48), i32) local_unnamed_addr #0 align 2 {
  %4 = icmp slt i32 %2, 16
  br i1 %4, label %5, label %12

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %7 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %6, align 8
  %8 = bitcast %"class.SkSL::StringStream"* %7 to void (%"class.SkSL::StringStream"*, i8*)***
  %9 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %9, i64 2
  %11 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %10, align 8
  tail call void %11(%"class.SkSL::StringStream"* %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #11
  br label %12

12:                                               ; preds = %5, %3
  %13 = getelementptr inbounds %"class.SkSL::TernaryExpression", %"class.SkSL::TernaryExpression"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %13, align 8
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %14, i32 15)
  %15 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %16 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %15, align 8
  %17 = bitcast %"class.SkSL::StringStream"* %16 to void (%"class.SkSL::StringStream"*, i8*)***
  %18 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %18, i64 2
  %20 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %19, align 8
  tail call void %20(%"class.SkSL::StringStream"* %16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0)) #11
  %21 = getelementptr inbounds %"class.SkSL::TernaryExpression", %"class.SkSL::TernaryExpression"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %21, align 8
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %22, i32 15)
  %23 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %15, align 8
  %24 = bitcast %"class.SkSL::StringStream"* %23 to void (%"class.SkSL::StringStream"*, i8*)***
  %25 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %25, i64 2
  %27 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %26, align 8
  tail call void %27(%"class.SkSL::StringStream"* %23, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0)) #11
  %28 = getelementptr inbounds %"class.SkSL::TernaryExpression", %"class.SkSL::TernaryExpression"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %28, align 8
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %29, i32 15)
  br i1 %4, label %30, label %36

30:                                               ; preds = %12
  %31 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %15, align 8
  %32 = bitcast %"class.SkSL::StringStream"* %31 to void (%"class.SkSL::StringStream"*, i8*)***
  %33 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %33, i64 2
  %35 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %34, align 8
  tail call void %35(%"class.SkSL::StringStream"* %31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #11
  br label %36

36:                                               ; preds = %30, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator20writeIndexExpressionERKNS_15IndexExpressionE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"*, %"struct.SkSL::IndexExpression"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::IndexExpression", %"struct.SkSL::IndexExpression"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %4, i32 2)
  %5 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %6 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %5, align 8
  %7 = bitcast %"class.SkSL::StringStream"* %6 to void (%"class.SkSL::StringStream"*, i8*)***
  %8 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %8, i64 2
  %10 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %9, align 8
  tail call void %10(%"class.SkSL::StringStream"* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0)) #11
  %11 = getelementptr inbounds %"struct.SkSL::IndexExpression", %"struct.SkSL::IndexExpression"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %11, align 8
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %12, i32 17)
  %13 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %5, align 8
  %14 = bitcast %"class.SkSL::StringStream"* %13 to void (%"class.SkSL::StringStream"*, i8*)***
  %15 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %15, i64 2
  %17 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %16, align 8
  tail call void %17(%"class.SkSL::StringStream"* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0)) #11
  ret void
}

declare i32 @_ZNK4SkSL8Operator19getBinaryPrecedenceEv(%"class.SkSL::Operator"*) local_unnamed_addr #2

declare i8* @_ZNK4SkSL8Operator12operatorNameEv(%"class.SkSL::Operator"*) local_unnamed_addr #2

declare void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator19writeVarDeclarationERKNS_14VarDeclarationE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"*, %"class.SkSL::VarDeclaration"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %1, i64 0, i32 1
  %7 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %6, align 8
  %8 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %7, i64 0, i32 2
  %9 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %8, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #11, !alias.scope !19
  %10 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 8, !noalias !19
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0
  %16 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i64 0, i64 0)) #11
  %17 = load i32, i32* %10, align 8, !noalias !19
  br label %18

18:                                               ; preds = %14, %2
  %19 = phi i32 [ %11, %2 ], [ %17, %14 ]
  %20 = and i32 %19, 6
  %21 = icmp eq i32 %20, 6
  br i1 %21, label %28, label %22

22:                                               ; preds = %18
  %23 = and i32 %19, 2
  %24 = icmp eq i32 %23, 0
  %25 = and i32 %19, 6
  %26 = icmp eq i32 %25, 0
  %27 = select i1 %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0)
  br i1 %26, label %32, label %28

28:                                               ; preds = %22, %18
  %29 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0), %18 ], [ %27, %22 ]
  %30 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0
  %31 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %30, i8* %29) #11
  br label %32

32:                                               ; preds = %22, %28
  %33 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %34 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %33, align 8
  %35 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = zext i8 %37 to i64
  %44 = select i1 %38, i8* %40, i8* %5
  %45 = select i1 %38, i64 %42, i64 %43
  %46 = bitcast %"class.SkSL::StringStream"* %34 to void (%"class.SkSL::StringStream"*, i8*, i64)***
  %47 = load void (%"class.SkSL::StringStream"*, i8*, i64)**, void (%"class.SkSL::StringStream"*, i8*, i64)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %47, i64 3
  %49 = load void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %48, align 8
  call void %49(%"class.SkSL::StringStream"* %34, i8* %44, i64 %45) #11
  %50 = load i8, i8* %36, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %32
  %53 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %53) #12
  br label %54

54:                                               ; preds = %32, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  %55 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #11
  %56 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %6, align 8
  %57 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %56, i64 0, i32 0, i32 2
  %58 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %57, align 8
  %59 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %56, i64 0, i32 0, i32 1, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %56, i64 0, i32 0, i32 1, i32 1
  %62 = load i64, i64* %61, align 8
  call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator13typedVariableERKNS_4TypeENS_14StringFragmentE(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %58, i8* %60, i64 %62)
  %63 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %33, align 8
  %64 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  %68 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = zext i8 %66 to i64
  %73 = select i1 %67, i8* %69, i8* %55
  %74 = select i1 %67, i64 %71, i64 %72
  %75 = bitcast %"class.SkSL::StringStream"* %63 to void (%"class.SkSL::StringStream"*, i8*, i64)***
  %76 = load void (%"class.SkSL::StringStream"*, i8*, i64)**, void (%"class.SkSL::StringStream"*, i8*, i64)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %76, i64 3
  %78 = load void (%"class.SkSL::StringStream"*, i8*, i64)*, void (%"class.SkSL::StringStream"*, i8*, i64)** %77, align 8
  call void %78(%"class.SkSL::StringStream"* %63, i8* %73, i64 %74) #11
  %79 = load i8, i8* %65, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %54
  %82 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %82) #12
  br label %83

83:                                               ; preds = %54, %81
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #11
  %84 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %85 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %84, align 8
  %86 = icmp eq %"class.SkSL::Expression"* %85, null
  br i1 %86, label %94, label %87

87:                                               ; preds = %83
  %88 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %33, align 8
  %89 = bitcast %"class.SkSL::StringStream"* %88 to void (%"class.SkSL::StringStream"*, i8*)***
  %90 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %90, i64 2
  %92 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %91, align 8
  call void %92(%"class.SkSL::StringStream"* %88, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0)) #11
  %93 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %84, align 8
  call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %93, i32 17)
  br label %94

94:                                               ; preds = %83, %87
  %95 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %33, align 8
  %96 = bitcast %"class.SkSL::StringStream"* %95 to void (%"class.SkSL::StringStream"*, i8*)***
  %97 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %97, i64 2
  %99 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %98, align 8
  call void %99(%"class.SkSL::StringStream"* %95, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator10writeBlockERKNS_5BlockE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"*, %"class.SkSL::Block"* nocapture readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %1, i64 0, i32 3
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %31

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %1, i64 0, i32 1, i32 0, i32 0, i64 16
  %8 = bitcast i8* %7 to %"class.std::__1::unique_ptr.219"**
  %9 = load %"class.std::__1::unique_ptr.219"*, %"class.std::__1::unique_ptr.219"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.219"* %9, null
  br i1 %10, label %31, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %1, i64 0, i32 1, i32 0, i32 0, i64 24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = lshr i64 %14, 1
  %16 = and i64 %15, 2147483647
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.219"* %9, i64 %16
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %31, label %21

19:                                               ; preds = %21
  %20 = icmp eq %"class.std::__1::unique_ptr.219"* %30, %17
  br i1 %20, label %31, label %21

21:                                               ; preds = %11, %19
  %22 = phi %"class.std::__1::unique_ptr.219"* [ %30, %19 ], [ %9, %11 ]
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.219"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %23, align 8
  %25 = bitcast %"class.SkSL::Statement"* %24 to i1 (%"class.SkSL::Statement"*)***
  %26 = load i1 (%"class.SkSL::Statement"*)**, i1 (%"class.SkSL::Statement"*)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.SkSL::Statement"*)*, i1 (%"class.SkSL::Statement"*)** %26, i64 3
  %28 = load i1 (%"class.SkSL::Statement"*)*, i1 (%"class.SkSL::Statement"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.SkSL::Statement"* %24) #11
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.219"* %22, i64 1
  br i1 %29, label %19, label %43

31:                                               ; preds = %19, %2, %11, %6
  %32 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %33 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %32, align 8
  %34 = bitcast %"class.SkSL::StringStream"* %33 to void (%"class.SkSL::StringStream"*, i8*)***
  %35 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %35, i64 2
  %37 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %36, align 8
  tail call void %37(%"class.SkSL::StringStream"* %33, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0)) #11
  %38 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %32, align 8
  %39 = bitcast %"class.SkSL::StringStream"* %38 to void (%"class.SkSL::StringStream"*, i8*)***
  %40 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %40, i64 2
  %42 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %41, align 8
  tail call void %42(%"class.SkSL::StringStream"* %38, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #11
  br label %43

43:                                               ; preds = %21, %31
  %44 = phi i1 [ true, %31 ], [ false, %21 ]
  %45 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %1, i64 0, i32 1, i32 0, i32 0, i64 16
  %46 = bitcast i8* %45 to %"class.std::__1::unique_ptr.219"**
  %47 = load %"class.std::__1::unique_ptr.219"*, %"class.std::__1::unique_ptr.219"** %46, align 8
  %48 = icmp eq %"class.std::__1::unique_ptr.219"* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %1, i64 0, i32 1, i32 0, i32 0, i64 24
  %51 = bitcast i8* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = lshr i64 %52, 1
  %54 = and i64 %53, 2147483647
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.219"* %47, i64 %54
  %56 = icmp eq i64 %54, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %49
  %58 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  br label %60

59:                                               ; preds = %76, %43, %49
  br i1 %44, label %79, label %86

60:                                               ; preds = %57, %76
  %61 = phi %"class.std::__1::unique_ptr.219"* [ %47, %57 ], [ %77, %76 ]
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.219"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %62, align 8
  %64 = bitcast %"class.SkSL::Statement"* %63 to i1 (%"class.SkSL::Statement"*)***
  %65 = load i1 (%"class.SkSL::Statement"*)**, i1 (%"class.SkSL::Statement"*)*** %64, align 8
  %66 = getelementptr inbounds i1 (%"class.SkSL::Statement"*)*, i1 (%"class.SkSL::Statement"*)** %65, i64 3
  %67 = load i1 (%"class.SkSL::Statement"*)*, i1 (%"class.SkSL::Statement"*)** %66, align 8
  %68 = tail call zeroext i1 %67(%"class.SkSL::Statement"* %63) #11
  br i1 %68, label %76, label %69

69:                                               ; preds = %60
  %70 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %62, align 8
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %70)
  %71 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %58, align 8
  %72 = bitcast %"class.SkSL::StringStream"* %71 to void (%"class.SkSL::StringStream"*, i8*)***
  %73 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %73, i64 2
  %75 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %74, align 8
  tail call void %75(%"class.SkSL::StringStream"* %71, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #11
  br label %76

76:                                               ; preds = %69, %60
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.219"* %61, i64 1
  %78 = icmp eq %"class.std::__1::unique_ptr.219"* %77, %55
  br i1 %78, label %59, label %60

79:                                               ; preds = %59
  %80 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %81 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %80, align 8
  %82 = bitcast %"class.SkSL::StringStream"* %81 to void (%"class.SkSL::StringStream"*, i8*)***
  %83 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %83, i64 2
  %85 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %84, align 8
  tail call void %85(%"class.SkSL::StringStream"* %81, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36, i64 0, i64 0)) #11
  br label %86

86:                                               ; preds = %79, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator16writeDoStatementERKNS_11DoStatementE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"*, %"class.SkSL::DoStatement"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %4 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %3, align 8
  %5 = bitcast %"class.SkSL::StringStream"* %4 to void (%"class.SkSL::StringStream"*, i8*)***
  %6 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %6, i64 2
  %8 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %7, align 8
  tail call void %8(%"class.SkSL::StringStream"* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0)) #11
  %9 = getelementptr inbounds %"class.SkSL::DoStatement", %"class.SkSL::DoStatement"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %9, align 8
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %10)
  %11 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %3, align 8
  %12 = bitcast %"class.SkSL::StringStream"* %11 to void (%"class.SkSL::StringStream"*, i8*)***
  %13 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %13, i64 2
  %15 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %14, align 8
  tail call void %15(%"class.SkSL::StringStream"* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i64 0, i64 0)) #11
  %16 = getelementptr inbounds %"class.SkSL::DoStatement", %"class.SkSL::DoStatement"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %17 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %16, align 8
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %17, i32 17)
  %18 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %3, align 8
  %19 = bitcast %"class.SkSL::StringStream"* %18 to void (%"class.SkSL::StringStream"*, i8*)***
  %20 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %20, i64 2
  %22 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %21, align 8
  tail call void %22(%"class.SkSL::StringStream"* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i64 0, i64 0)) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator17writeForStatementERKNS_12ForStatementE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"*, %"class.SkSL::ForStatement"* nocapture readonly dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::ForStatement", %"class.SkSL::ForStatement"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %3, align 8
  %5 = icmp eq %"class.SkSL::Statement"* %4, null
  br i1 %5, label %6, label %27

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::ForStatement", %"class.SkSL::ForStatement"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %7, align 8
  %9 = icmp eq %"class.SkSL::Expression"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.SkSL::ForStatement", %"class.SkSL::ForStatement"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %11, align 8
  %13 = icmp eq %"class.SkSL::Expression"* %12, null
  br i1 %13, label %14, label %27

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %16 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %15, align 8
  %17 = bitcast %"class.SkSL::StringStream"* %16 to void (%"class.SkSL::StringStream"*, i8*)***
  %18 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %18, i64 2
  %20 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %19, align 8
  tail call void %20(%"class.SkSL::StringStream"* %16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40, i64 0, i64 0)) #11
  %21 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %7, align 8
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %21, i32 17)
  %22 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %15, align 8
  %23 = bitcast %"class.SkSL::StringStream"* %22 to void (%"class.SkSL::StringStream"*, i8*)***
  %24 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %24, i64 2
  %26 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %25, align 8
  tail call void %26(%"class.SkSL::StringStream"* %22, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #11
  br label %71

27:                                               ; preds = %10, %6, %2
  %28 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 7
  %29 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %28, align 8
  %30 = bitcast %"class.SkSL::StringStream"* %29 to void (%"class.SkSL::StringStream"*, i8*)***
  %31 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %31, i64 2
  %33 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %32, align 8
  tail call void %33(%"class.SkSL::StringStream"* %29, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0)) #11
  %34 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %3, align 8
  %35 = icmp eq %"class.SkSL::Statement"* %34, null
  br i1 %35, label %44, label %36

36:                                               ; preds = %27
  %37 = bitcast %"class.SkSL::Statement"* %34 to i1 (%"class.SkSL::Statement"*)***
  %38 = load i1 (%"class.SkSL::Statement"*)**, i1 (%"class.SkSL::Statement"*)*** %37, align 8
  %39 = getelementptr inbounds i1 (%"class.SkSL::Statement"*)*, i1 (%"class.SkSL::Statement"*)** %38, i64 3
  %40 = load i1 (%"class.SkSL::Statement"*)*, i1 (%"class.SkSL::Statement"*)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.SkSL::Statement"* nonnull %34) #11
  br i1 %41, label %44, label %42

42:                                               ; preds = %36
  %43 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %3, align 8
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %43)
  br label %50

44:                                               ; preds = %27, %36
  %45 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %28, align 8
  %46 = bitcast %"class.SkSL::StringStream"* %45 to void (%"class.SkSL::StringStream"*, i8*)***
  %47 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %47, i64 2
  %49 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %48, align 8
  tail call void %49(%"class.SkSL::StringStream"* %45, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i64 0, i64 0)) #11
  br label %50

50:                                               ; preds = %44, %42
  %51 = getelementptr inbounds %"class.SkSL::ForStatement", %"class.SkSL::ForStatement"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %52 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %51, align 8
  %53 = icmp eq %"class.SkSL::Expression"* %52, null
  br i1 %53, label %55, label %54

54:                                               ; preds = %50
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* nonnull dereferenceable(24) %52, i32 17)
  br label %55

55:                                               ; preds = %50, %54
  %56 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %28, align 8
  %57 = bitcast %"class.SkSL::StringStream"* %56 to void (%"class.SkSL::StringStream"*, i8*)***
  %58 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %58, i64 2
  %60 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %59, align 8
  tail call void %60(%"class.SkSL::StringStream"* %56, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i64 0, i64 0)) #11
  %61 = getelementptr inbounds %"class.SkSL::ForStatement", %"class.SkSL::ForStatement"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %62 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %61, align 8
  %63 = icmp eq %"class.SkSL::Expression"* %62, null
  br i1 %63, label %65, label %64

64:                                               ; preds = %55
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Expression"* nonnull dereferenceable(24) %62, i32 17)
  br label %65

65:                                               ; preds = %55, %64
  %66 = load %"class.SkSL::StringStream"*, %"class.SkSL::StringStream"** %28, align 8
  %67 = bitcast %"class.SkSL::StringStream"* %66 to void (%"class.SkSL::StringStream"*, i8*)***
  %68 = load void (%"class.SkSL::StringStream"*, i8*)**, void (%"class.SkSL::StringStream"*, i8*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %68, i64 2
  %70 = load void (%"class.SkSL::StringStream"*, i8*)*, void (%"class.SkSL::StringStream"*, i8*)** %69, align 8
  tail call void %70(%"class.SkSL::StringStream"* %66, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #11
  br label %71

71:                                               ; preds = %65, %14
  %72 = getelementptr inbounds %"class.SkSL::ForStatement", %"class.SkSL::ForStatement"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %73 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %72, align 8
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %73)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator12generateCodeEv(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 0
  %3 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %2, align 8
  %4 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %3, i64 0, i32 6
  %5 = bitcast %"class.std::__1::vector.62"* %4 to i64*
  %6 = load i64, i64* %5, align 8, !noalias !22
  %7 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %3, i64 0, i32 6, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %3, i64 0, i32 7
  %9 = bitcast %"class.std::__1::vector.75"* %8 to i64*
  %10 = load i64, i64* %9, align 8, !noalias !22
  %11 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %3, i64 0, i32 7, i32 0, i32 1
  %12 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %11, align 8, !noalias !22
  %13 = load %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"** %7, align 8, !noalias !25
  %14 = inttoptr i64 %6 to %"class.std::__1::unique_ptr.64"*
  %15 = icmp eq %"class.std::__1::unique_ptr.64"* %13, %14
  %16 = inttoptr i64 %10 to %"class.SkSL::ProgramElement"**
  %17 = icmp eq %"class.SkSL::ProgramElement"** %12, %16
  %18 = and i1 %15, %17
  br i1 %18, label %19, label %36

19:                                               ; preds = %51, %1
  %20 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %2, align 8
  %21 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %20, i64 0, i32 6
  %22 = bitcast %"class.std::__1::vector.62"* %21 to i64*
  %23 = load i64, i64* %22, align 8, !noalias !28
  %24 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %20, i64 0, i32 6, i32 0, i32 1
  %25 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %20, i64 0, i32 7
  %26 = bitcast %"class.std::__1::vector.75"* %25 to i64*
  %27 = load i64, i64* %26, align 8, !noalias !28
  %28 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %20, i64 0, i32 7, i32 0, i32 1
  %29 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %28, align 8, !noalias !28
  %30 = load %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"** %24, align 8, !noalias !31
  %31 = inttoptr i64 %23 to %"class.std::__1::unique_ptr.64"*
  %32 = icmp eq %"class.std::__1::unique_ptr.64"* %30, %31
  %33 = inttoptr i64 %27 to %"class.SkSL::ProgramElement"**
  %34 = icmp eq %"class.SkSL::ProgramElement"** %29, %33
  %35 = and i1 %32, %34
  br i1 %35, label %63, label %64

36:                                               ; preds = %1, %51
  %37 = phi i1 [ %61, %51 ], [ %17, %1 ]
  %38 = phi %"class.SkSL::ProgramElement"** [ %60, %51 ], [ %16, %1 ]
  %39 = phi %"class.std::__1::unique_ptr.64"* [ %58, %51 ], [ %14, %1 ]
  %40 = phi i64 [ %57, %51 ], [ %10, %1 ]
  %41 = phi i64 [ %56, %51 ], [ %6, %1 ]
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %39, i64 0, i32 0, i32 0, i32 0
  %43 = select i1 %37, %"class.SkSL::ProgramElement"** %42, %"class.SkSL::ProgramElement"** %38
  %44 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %43, align 8
  %45 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %44, i64 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  switch i32 %46, label %51 [
    i32 8, label %49
    i32 4, label %47
  ]

47:                                               ; preds = %36
  %48 = bitcast %"class.SkSL::ProgramElement"* %44 to %"class.SkSL::GlobalVarDeclaration"*
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator25writeGlobalVarDeclarationERKNS_20GlobalVarDeclarationE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::GlobalVarDeclaration"* dereferenceable(24) %48) #11
  br label %51

49:                                               ; preds = %36
  %50 = bitcast %"class.SkSL::ProgramElement"* %44 to %"class.SkSL::StructDefinition"*
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator21writeStructDefinitionERKNS_16StructDefinitionE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::StructDefinition"* dereferenceable(24) %50) #11
  br label %51

51:                                               ; preds = %36, %49, %47
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %39, i64 1
  %53 = ptrtoint %"class.std::__1::unique_ptr.64"* %52 to i64
  %54 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %38, i64 1
  %55 = ptrtoint %"class.SkSL::ProgramElement"** %54 to i64
  %56 = select i1 %37, i64 %53, i64 %41
  %57 = select i1 %37, i64 %40, i64 %55
  %58 = inttoptr i64 %56 to %"class.std::__1::unique_ptr.64"*
  %59 = icmp eq %"class.std::__1::unique_ptr.64"* %13, %58
  %60 = inttoptr i64 %57 to %"class.SkSL::ProgramElement"**
  %61 = icmp eq %"class.SkSL::ProgramElement"** %12, %60
  %62 = and i1 %59, %61
  br i1 %62, label %19, label %36

63:                                               ; preds = %78, %19
  ret void

64:                                               ; preds = %19, %78
  %65 = phi i1 [ %88, %78 ], [ %34, %19 ]
  %66 = phi %"class.SkSL::ProgramElement"** [ %87, %78 ], [ %33, %19 ]
  %67 = phi %"class.std::__1::unique_ptr.64"* [ %85, %78 ], [ %31, %19 ]
  %68 = phi i64 [ %84, %78 ], [ %23, %19 ]
  %69 = phi i64 [ %83, %78 ], [ %27, %19 ]
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %67, i64 0, i32 0, i32 0, i32 0
  %71 = select i1 %65, %"class.SkSL::ProgramElement"** %70, %"class.SkSL::ProgramElement"** %66
  %72 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %71, align 8
  %73 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %72, i64 0, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 2
  br i1 %75, label %76, label %78

76:                                               ; preds = %64
  %77 = bitcast %"class.SkSL::ProgramElement"* %72 to %"class.SkSL::FunctionDefinition"*
  tail call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator13writeFunctionERKNS_18FunctionDefinitionE(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, %"class.SkSL::FunctionDefinition"* dereferenceable(88) %77) #11
  br label %78

78:                                               ; preds = %76, %64
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %67, i64 1
  %80 = ptrtoint %"class.std::__1::unique_ptr.64"* %79 to i64
  %81 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %66, i64 1
  %82 = ptrtoint %"class.SkSL::ProgramElement"** %81 to i64
  %83 = select i1 %65, i64 %69, i64 %82
  %84 = select i1 %65, i64 %80, i64 %68
  %85 = inttoptr i64 %84 to %"class.std::__1::unique_ptr.64"*
  %86 = icmp eq %"class.std::__1::unique_ptr.64"* %30, %85
  %87 = inttoptr i64 %83 to %"class.SkSL::ProgramElement"**
  %88 = icmp eq %"class.SkSL::ProgramElement"** %29, %87
  %89 = and i1 %86, %88
  br i1 %89, label %63, label %64
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL13PipelineStage14ConvertProgramERKNS_7ProgramEPKcS5_PNS0_9CallbacksE(%"struct.SkSL::Program"* dereferenceable(128), i8*, i8*, %"class.SkSL::PipelineStage::Callbacks"*) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", align 8
  %6 = bitcast %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %6) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 bitcast (%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* @__const._ZN4SkSL13PipelineStage14ConvertProgramERKNS_7ProgramEPKcS5_PNS0_9CallbacksE.generator to i8*), i64 168, i1 false)
  %7 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %5, i64 0, i32 0
  store %"struct.SkSL::Program"* %0, %"struct.SkSL::Program"** %7, align 8
  %8 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %5, i64 0, i32 1
  store i8* %1, i8** %8, align 8
  %9 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %5, i64 0, i32 2
  store i8* %2, i8** %9, align 8
  %10 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %5, i64 0, i32 3
  store %"class.SkSL::PipelineStage::Callbacks"* %3, %"class.SkSL::PipelineStage::Callbacks"** %10, align 8
  %11 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %5, i64 0, i32 4
  %12 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %5, i64 0, i32 4, i32 0, i32 3
  %13 = bitcast %"class.std::__1::__compressed_pair.128"* %12 to i32*
  %14 = bitcast %"class.std::__1::unordered_map"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %13, align 8
  %15 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %5, i64 0, i32 5
  %16 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %5, i64 0, i32 5, i32 0, i32 3
  %17 = bitcast %"class.std::__1::__compressed_pair.155"* %16 to i32*
  %18 = bitcast %"class.std::__1::unordered_map.133"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %17, align 8
  %19 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %5, i64 0, i32 6
  %20 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %5, i64 0, i32 6, i32 0, i32 3
  %21 = bitcast %"class.std::__1::__compressed_pair.183"* %20 to i32*
  %22 = bitcast %"class.std::__1::unordered_map.161"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %21, align 8
  %23 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %5, i64 0, i32 7
  store %"class.SkSL::StringStream"* null, %"class.SkSL::StringStream"** %23, align 8
  %24 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %5, i64 0, i32 8
  store i8 0, i8* %24, align 8
  call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator12generateCodeEv(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* nonnull %5)
  call void @_ZN4SkSL13PipelineStage26PipelineStageCodeGeneratorD2Ev(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %6) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL13PipelineStage26PipelineStageCodeGeneratorD2Ev(%"class.SkSL::PipelineStage::PipelineStageCodeGenerator"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.166"* %3, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %1, %17
  %6 = phi %"struct.std::__1::__hash_node_base.166"* [ %8, %17 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %6, i64 3
  %10 = bitcast %"struct.std::__1::__hash_node_base.166"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %5
  %15 = bitcast %"struct.std::__1::__hash_node_base.166"* %9 to i8**
  %16 = load i8*, i8** %15, align 8
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %14, %5
  %18 = bitcast %"struct.std::__1::__hash_node_base.166"* %6 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  %19 = icmp eq %"struct.std::__1::__hash_node_base.166"* %8, null
  br i1 %19, label %20, label %5

20:                                               ; preds = %17, %1
  %21 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %21, align 8
  store %"struct.std::__1::__hash_node_base.166"** null, %"struct.std::__1::__hash_node_base.166"*** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.166"** %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = bitcast %"struct.std::__1::__hash_node_base.166"** %22 to i8*
  tail call void @_ZdlPv(i8* %25) #12
  br label %26

26:                                               ; preds = %20, %24
  %27 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.138"* %28, null
  br i1 %29, label %45, label %30

30:                                               ; preds = %26, %42
  %31 = phi %"struct.std::__1::__hash_node_base.138"* [ %33, %42 ], [ %28, %26 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %31, i64 3
  %35 = bitcast %"struct.std::__1::__hash_node_base.138"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %30
  %40 = bitcast %"struct.std::__1::__hash_node_base.138"* %34 to i8**
  %41 = load i8*, i8** %40, align 8
  tail call void @_ZdlPv(i8* %41) #12
  br label %42

42:                                               ; preds = %39, %30
  %43 = bitcast %"struct.std::__1::__hash_node_base.138"* %31 to i8*
  tail call void @_ZdlPv(i8* %43) #12
  %44 = icmp eq %"struct.std::__1::__hash_node_base.138"* %33, null
  br i1 %44, label %45, label %30

45:                                               ; preds = %42, %26
  %46 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %46, align 8
  store %"struct.std::__1::__hash_node_base.138"** null, %"struct.std::__1::__hash_node_base.138"*** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.138"** %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %45
  %50 = bitcast %"struct.std::__1::__hash_node_base.138"** %47 to i8*
  tail call void @_ZdlPv(i8* %50) #12
  br label %51

51:                                               ; preds = %45, %49
  %52 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base.113"* %53, null
  br i1 %54, label %70, label %55

55:                                               ; preds = %51, %67
  %56 = phi %"struct.std::__1::__hash_node_base.113"* [ %58, %67 ], [ %53, %51 ]
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %56, i64 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %57, align 8
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %56, i64 3
  %60 = bitcast %"struct.std::__1::__hash_node_base.113"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %55
  %65 = bitcast %"struct.std::__1::__hash_node_base.113"* %59 to i8**
  %66 = load i8*, i8** %65, align 8
  tail call void @_ZdlPv(i8* %66) #12
  br label %67

67:                                               ; preds = %64, %55
  %68 = bitcast %"struct.std::__1::__hash_node_base.113"* %56 to i8*
  tail call void @_ZdlPv(i8* %68) #12
  %69 = icmp eq %"struct.std::__1::__hash_node_base.113"* %58, null
  br i1 %69, label %70, label %55

70:                                               ; preds = %67, %51
  %71 = getelementptr inbounds %"class.SkSL::PipelineStage::PipelineStageCodeGenerator", %"class.SkSL::PipelineStage::PipelineStageCodeGenerator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %71, align 8
  store %"struct.std::__1::__hash_node_base.113"** null, %"struct.std::__1::__hash_node_base.113"*** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.113"** %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %70
  %75 = bitcast %"struct.std::__1::__hash_node_base.113"** %72 to i8*
  tail call void @_ZdlPv(i8* %75) #12
  br label %76

76:                                               ; preds = %70, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL12OutputStream7isValidEv(%"class.SkSL::OutputStream"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12StringStream6write8Eh(%"class.SkSL::StringStream"*, i8 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #11
  store i8 %1, i8* %3, align 1
  %5 = bitcast %class.SkWStream* %4 to i1 (%class.SkWStream*, i8*, i64)***
  %6 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %6, i64 2
  %8 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %7, align 8
  %9 = call zeroext i1 %8(%class.SkWStream* %4, i8* nonnull %3, i64 1) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12StringStream9writeTextEPKc(%"class.SkSL::StringStream"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1, i32 0
  %4 = tail call i64 @strlen(i8* %1) #14
  %5 = bitcast %class.SkWStream* %3 to i1 (%class.SkWStream*, i8*, i64)***
  %6 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %6, i64 2
  %8 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.SkWStream* %3, i8* %1, i64 %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12StringStream5writeEPKvm(%"class.SkSL::StringStream"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1
  %5 = tail call zeroext i1 @_ZN22SkDynamicMemoryWStream5writeEPKvm(%class.SkDynamicMemoryWStream* %4, i8* %1, i64 %2) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12StringStreamD2Ev(%"class.SkSL::StringStream"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 2, i32 0
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %12) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12StringStreamD0Ev(%"class.SkSL::StringStream"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 2, i32 0
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %12) #11
  %13 = bitcast %"class.SkSL::StringStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #12
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

declare zeroext i1 @_ZN22SkDynamicMemoryWStream5writeEPKvm(%class.SkDynamicMemoryWStream*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZN22SkDynamicMemoryWStream12detachAsDataEv(%class.sk_sp* sret, %class.SkDynamicMemoryWStream*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.138"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JNS_4pairIKS5_S6_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.134"*, %"class.SkSL::FunctionDeclaration"** dereferenceable(8), %"struct.std::__1::pair"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.SkSL::FunctionDeclaration"** %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  %22 = inttoptr i64 %5 to %"class.SkSL::FunctionDeclaration"*
  br i1 %21, label %67, label %23

23:                                               ; preds = %3
  %24 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !9
  %25 = icmp ugt i64 %24, 1
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = add i64 %20, -1
  %28 = and i64 %18, %27
  br label %33

29:                                               ; preds = %23
  %30 = icmp ult i64 %18, %20
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = urem i64 %18, %20
  br label %33

33:                                               ; preds = %26, %29, %31
  %34 = phi i64 [ %28, %26 ], [ %32, %31 ], [ %18, %29 ]
  %35 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %36, i64 %34
  %38 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.138"* %38, null
  br i1 %39, label %67, label %40

40:                                               ; preds = %33
  %41 = add i64 %20, -1
  br label %42

42:                                               ; preds = %40, %62
  %43 = phi %"struct.std::__1::__hash_node_base.138"* [ %45, %62 ], [ %38, %40 ]
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.138"* %45, null
  br i1 %46, label %67, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %45, i64 1
  %49 = bitcast %"struct.std::__1::__hash_node_base.138"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %18
  br i1 %51, label %62, label %52

52:                                               ; preds = %47
  br i1 %25, label %55, label %53

53:                                               ; preds = %52
  %54 = and i64 %50, %41
  br label %59

55:                                               ; preds = %52
  %56 = icmp ult i64 %50, %20
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = urem i64 %50, %20
  br label %59

59:                                               ; preds = %53, %55, %57
  %60 = phi i64 [ %54, %53 ], [ %58, %57 ], [ %50, %55 ]
  %61 = icmp eq i64 %60, %34
  br i1 %61, label %62, label %67

62:                                               ; preds = %47, %59
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %45, i64 2
  %64 = bitcast %"struct.std::__1::__hash_node_base.138"* %63 to %"class.SkSL::FunctionDeclaration"**
  %65 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %64, align 8
  %66 = icmp eq %"class.SkSL::FunctionDeclaration"* %65, %22
  br i1 %66, label %158, label %42

67:                                               ; preds = %42, %59, %33, %3
  %68 = phi i64 [ %34, %33 ], [ -6148914691236517206, %3 ], [ %34, %59 ], [ %34, %42 ]
  %69 = tail call i8* @_Znwm(i64 48) #12, !noalias !34
  %70 = getelementptr inbounds i8, i8* %69, i64 16
  %71 = bitcast %"struct.std::__1::pair"* %2 to i64*
  %72 = load i64, i64* %71, align 8, !noalias !34
  %73 = bitcast i8* %70 to i64*
  store i64 %72, i64* %73, align 8, !noalias !34
  %74 = getelementptr inbounds i8, i8* %69, i64 24
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %76 = bitcast %"class.SkSL::String"* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %76, i64 24, i1 false) #11, !noalias !34
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 24, i1 false) #11, !noalias !34
  %77 = getelementptr inbounds i8, i8* %69, i64 8
  %78 = bitcast i8* %77 to i64*
  store i64 %18, i64* %78, align 8, !noalias !34
  %79 = bitcast i8* %69 to %"struct.std::__1::__hash_node_base.138"**
  store %"struct.std::__1::__hash_node_base.138"* null, %"struct.std::__1::__hash_node_base.138"** %79, align 8, !noalias !34
  %80 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 2, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = add i64 %81, 1
  %83 = uitofp i64 %82 to float
  %84 = uitofp i64 %20 to float
  %85 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 3, i32 0, i32 0
  %86 = load float, float* %85, align 4
  %87 = fmul float %86, %84
  %88 = fcmp olt float %87, %83
  %89 = or i1 %21, %88
  br i1 %89, label %90, label %113

90:                                               ; preds = %67
  %91 = shl i64 %20, 1
  %92 = icmp ult i64 %20, 3
  %93 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !9
  %94 = icmp ugt i64 %93, 1
  %95 = or i1 %92, %94
  %96 = zext i1 %95 to i64
  %97 = or i64 %91, %96
  %98 = fdiv float %83, %86
  %99 = tail call float @llvm.ceil.f32(float %98) #11
  %100 = fptoui float %99 to i64
  %101 = icmp ult i64 %97, %100
  %102 = select i1 %101, i64 %100, i64 %97
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.134"* %0, i64 %102)
  %103 = load i64, i64* %19, align 8
  %104 = tail call i64 @llvm.ctpop.i64(i64 %103) #11, !range !9
  %105 = icmp ugt i64 %104, 1
  br i1 %105, label %109, label %106

106:                                              ; preds = %90
  %107 = add i64 %103, -1
  %108 = and i64 %107, %18
  br label %113

109:                                              ; preds = %90
  %110 = icmp ult i64 %18, %103
  br i1 %110, label %113, label %111

111:                                              ; preds = %109
  %112 = urem i64 %18, %103
  br label %113

113:                                              ; preds = %111, %109, %106, %67
  %114 = phi i64 [ %20, %67 ], [ %103, %106 ], [ %103, %109 ], [ %103, %111 ]
  %115 = phi i64 [ %68, %67 ], [ %108, %106 ], [ %18, %109 ], [ %112, %111 ]
  %116 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %117 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %116, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %117, i64 %115
  %119 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %118, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base.138"* %119, null
  br i1 %120, label %121, label %147

121:                                              ; preds = %113
  %122 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 1, i32 0, i32 0
  %123 = bitcast %"struct.std::__1::__hash_node_base.138"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i8* %69 to i64*
  store i64 %124, i64* %125, align 8
  %126 = bitcast %"struct.std::__1::__hash_node_base.138"* %122 to i8**
  store i8* %69, i8** %126, align 8
  store %"struct.std::__1::__hash_node_base.138"* %122, %"struct.std::__1::__hash_node_base.138"** %118, align 8
  %127 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %79, align 8
  %128 = icmp eq %"struct.std::__1::__hash_node_base.138"* %127, null
  br i1 %128, label %154, label %129

129:                                              ; preds = %121
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %127, i64 1
  %131 = bitcast %"struct.std::__1::__hash_node_base.138"* %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = tail call i64 @llvm.ctpop.i64(i64 %114) #11, !range !9
  %134 = icmp ugt i64 %133, 1
  br i1 %134, label %138, label %135

135:                                              ; preds = %129
  %136 = add i64 %114, -1
  %137 = and i64 %132, %136
  br label %142

138:                                              ; preds = %129
  %139 = icmp ult i64 %132, %114
  br i1 %139, label %142, label %140

140:                                              ; preds = %138
  %141 = urem i64 %132, %114
  br label %142

142:                                              ; preds = %135, %138, %140
  %143 = phi i64 [ %137, %135 ], [ %141, %140 ], [ %132, %138 ]
  %144 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %116, align 8
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %144, i64 %143
  %146 = bitcast %"struct.std::__1::__hash_node_base.138"** %145 to i8**
  br label %152

147:                                              ; preds = %113
  %148 = bitcast %"struct.std::__1::__hash_node_base.138"* %119 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast i8* %69 to i64*
  store i64 %149, i64* %150, align 8
  %151 = bitcast %"struct.std::__1::__hash_node_base.138"* %119 to i8**
  br label %152

152:                                              ; preds = %142, %147
  %153 = phi i8** [ %151, %147 ], [ %146, %142 ]
  store i8* %69, i8** %153, align 8
  br label %154

154:                                              ; preds = %152, %121
  %155 = bitcast i8* %69 to %"struct.std::__1::__hash_node_base.138"*
  %156 = load i64, i64* %80, align 8
  %157 = add i64 %156, 1
  store i64 %157, i64* %80, align 8
  br label %158

158:                                              ; preds = %62, %154
  %159 = phi i8 [ 1, %154 ], [ 0, %62 ]
  %160 = phi %"struct.std::__1::__hash_node_base.138"* [ %155, %154 ], [ %45, %62 ]
  %161 = insertvalue { %"struct.std::__1::__hash_node_base.138"*, i8 } undef, %"struct.std::__1::__hash_node_base.138"* %160, 0
  %162 = insertvalue { %"struct.std::__1::__hash_node_base.138"*, i8 } %161, i8 %159, 1
  ret { %"struct.std::__1::__hash_node_base.138"*, i8 } %162
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.134"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !9
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.134"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !9
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !9
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.134"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.134"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.134"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.138"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.138"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.140", %"class.std::__1::__bucket_list_deallocator.140"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.138"* null, %"struct.std::__1::__hash_node_base.138"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !37

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.138"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.138"* null, %"struct.std::__1::__hash_node_base.138"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.138"* null, %"struct.std::__1::__hash_node_base.138"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.138"* null, %"struct.std::__1::__hash_node_base.138"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.138"* null, %"struct.std::__1::__hash_node_base.138"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.138"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !9
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.138"* %36, %"struct.std::__1::__hash_node_base.138"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.138"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.138"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.138"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.138"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.138"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.138"* %101 to %"class.SkSL::FunctionDeclaration"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.138"* %82, %"struct.std::__1::__hash_node_base.138"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.138"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.138"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.138"* %110 to %"class.SkSL::FunctionDeclaration"**
  %112 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %102, align 8
  %113 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %111, align 8
  %114 = icmp eq %"class.SkSL::FunctionDeclaration"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.138"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.138"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.138"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.138"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.138"* %80, %"struct.std::__1::__hash_node_base.138"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.138"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.138"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.138"** null, %"struct.std::__1::__hash_node_base.138"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.138"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.138"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.140", %"class.std::__1::__bucket_list_deallocator.140"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JNS_4pairIKS5_S6_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"*, %"class.SkSL::Variable"** dereferenceable(8), %"struct.std::__1::pair.270"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.SkSL::Variable"** %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.109", %"class.std::__1::__hash_table.109"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  %22 = inttoptr i64 %5 to %"class.SkSL::Variable"*
  br i1 %21, label %67, label %23

23:                                               ; preds = %3
  %24 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !9
  %25 = icmp ugt i64 %24, 1
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = add i64 %20, -1
  %28 = and i64 %18, %27
  br label %33

29:                                               ; preds = %23
  %30 = icmp ult i64 %18, %20
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = urem i64 %18, %20
  br label %33

33:                                               ; preds = %26, %29, %31
  %34 = phi i64 [ %28, %26 ], [ %32, %31 ], [ %18, %29 ]
  %35 = getelementptr inbounds %"class.std::__1::__hash_table.109", %"class.std::__1::__hash_table.109"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %36, i64 %34
  %38 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.113"* %38, null
  br i1 %39, label %67, label %40

40:                                               ; preds = %33
  %41 = add i64 %20, -1
  br label %42

42:                                               ; preds = %40, %62
  %43 = phi %"struct.std::__1::__hash_node_base.113"* [ %45, %62 ], [ %38, %40 ]
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.113"* %45, null
  br i1 %46, label %67, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %45, i64 1
  %49 = bitcast %"struct.std::__1::__hash_node_base.113"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %18
  br i1 %51, label %62, label %52

52:                                               ; preds = %47
  br i1 %25, label %55, label %53

53:                                               ; preds = %52
  %54 = and i64 %50, %41
  br label %59

55:                                               ; preds = %52
  %56 = icmp ult i64 %50, %20
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = urem i64 %50, %20
  br label %59

59:                                               ; preds = %53, %55, %57
  %60 = phi i64 [ %54, %53 ], [ %58, %57 ], [ %50, %55 ]
  %61 = icmp eq i64 %60, %34
  br i1 %61, label %62, label %67

62:                                               ; preds = %47, %59
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %45, i64 2
  %64 = bitcast %"struct.std::__1::__hash_node_base.113"* %63 to %"class.SkSL::Variable"**
  %65 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %64, align 8
  %66 = icmp eq %"class.SkSL::Variable"* %65, %22
  br i1 %66, label %158, label %42

67:                                               ; preds = %42, %59, %33, %3
  %68 = phi i64 [ %34, %33 ], [ -6148914691236517206, %3 ], [ %34, %59 ], [ %34, %42 ]
  %69 = tail call i8* @_Znwm(i64 48) #12, !noalias !38
  %70 = getelementptr inbounds i8, i8* %69, i64 16
  %71 = bitcast %"struct.std::__1::pair.270"* %2 to i64*
  %72 = load i64, i64* %71, align 8, !noalias !38
  %73 = bitcast i8* %70 to i64*
  store i64 %72, i64* %73, align 8, !noalias !38
  %74 = getelementptr inbounds i8, i8* %69, i64 24
  %75 = getelementptr inbounds %"struct.std::__1::pair.270", %"struct.std::__1::pair.270"* %2, i64 0, i32 1
  %76 = bitcast %"class.SkSL::String"* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %76, i64 24, i1 false) #11, !noalias !38
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 24, i1 false) #11, !noalias !38
  %77 = getelementptr inbounds i8, i8* %69, i64 8
  %78 = bitcast i8* %77 to i64*
  store i64 %18, i64* %78, align 8, !noalias !38
  %79 = bitcast i8* %69 to %"struct.std::__1::__hash_node_base.113"**
  store %"struct.std::__1::__hash_node_base.113"* null, %"struct.std::__1::__hash_node_base.113"** %79, align 8, !noalias !38
  %80 = getelementptr inbounds %"class.std::__1::__hash_table.109", %"class.std::__1::__hash_table.109"* %0, i64 0, i32 2, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = add i64 %81, 1
  %83 = uitofp i64 %82 to float
  %84 = uitofp i64 %20 to float
  %85 = getelementptr inbounds %"class.std::__1::__hash_table.109", %"class.std::__1::__hash_table.109"* %0, i64 0, i32 3, i32 0, i32 0
  %86 = load float, float* %85, align 4
  %87 = fmul float %86, %84
  %88 = fcmp olt float %87, %83
  %89 = or i1 %21, %88
  br i1 %89, label %90, label %113

90:                                               ; preds = %67
  %91 = shl i64 %20, 1
  %92 = icmp ult i64 %20, 3
  %93 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !9
  %94 = icmp ugt i64 %93, 1
  %95 = or i1 %92, %94
  %96 = zext i1 %95 to i64
  %97 = or i64 %91, %96
  %98 = fdiv float %83, %86
  %99 = tail call float @llvm.ceil.f32(float %98) #11
  %100 = fptoui float %99 to i64
  %101 = icmp ult i64 %97, %100
  %102 = select i1 %101, i64 %100, i64 %97
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.109"* %0, i64 %102)
  %103 = load i64, i64* %19, align 8
  %104 = tail call i64 @llvm.ctpop.i64(i64 %103) #11, !range !9
  %105 = icmp ugt i64 %104, 1
  br i1 %105, label %109, label %106

106:                                              ; preds = %90
  %107 = add i64 %103, -1
  %108 = and i64 %107, %18
  br label %113

109:                                              ; preds = %90
  %110 = icmp ult i64 %18, %103
  br i1 %110, label %113, label %111

111:                                              ; preds = %109
  %112 = urem i64 %18, %103
  br label %113

113:                                              ; preds = %111, %109, %106, %67
  %114 = phi i64 [ %20, %67 ], [ %103, %106 ], [ %103, %109 ], [ %103, %111 ]
  %115 = phi i64 [ %68, %67 ], [ %108, %106 ], [ %18, %109 ], [ %112, %111 ]
  %116 = getelementptr inbounds %"class.std::__1::__hash_table.109", %"class.std::__1::__hash_table.109"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %117 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %116, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %117, i64 %115
  %119 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %118, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base.113"* %119, null
  br i1 %120, label %121, label %147

121:                                              ; preds = %113
  %122 = getelementptr inbounds %"class.std::__1::__hash_table.109", %"class.std::__1::__hash_table.109"* %0, i64 0, i32 1, i32 0, i32 0
  %123 = bitcast %"struct.std::__1::__hash_node_base.113"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i8* %69 to i64*
  store i64 %124, i64* %125, align 8
  %126 = bitcast %"struct.std::__1::__hash_node_base.113"* %122 to i8**
  store i8* %69, i8** %126, align 8
  store %"struct.std::__1::__hash_node_base.113"* %122, %"struct.std::__1::__hash_node_base.113"** %118, align 8
  %127 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %79, align 8
  %128 = icmp eq %"struct.std::__1::__hash_node_base.113"* %127, null
  br i1 %128, label %154, label %129

129:                                              ; preds = %121
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %127, i64 1
  %131 = bitcast %"struct.std::__1::__hash_node_base.113"* %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = tail call i64 @llvm.ctpop.i64(i64 %114) #11, !range !9
  %134 = icmp ugt i64 %133, 1
  br i1 %134, label %138, label %135

135:                                              ; preds = %129
  %136 = add i64 %114, -1
  %137 = and i64 %132, %136
  br label %142

138:                                              ; preds = %129
  %139 = icmp ult i64 %132, %114
  br i1 %139, label %142, label %140

140:                                              ; preds = %138
  %141 = urem i64 %132, %114
  br label %142

142:                                              ; preds = %135, %138, %140
  %143 = phi i64 [ %137, %135 ], [ %141, %140 ], [ %132, %138 ]
  %144 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %116, align 8
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %144, i64 %143
  %146 = bitcast %"struct.std::__1::__hash_node_base.113"** %145 to i8**
  br label %152

147:                                              ; preds = %113
  %148 = bitcast %"struct.std::__1::__hash_node_base.113"* %119 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast i8* %69 to i64*
  store i64 %149, i64* %150, align 8
  %151 = bitcast %"struct.std::__1::__hash_node_base.113"* %119 to i8**
  br label %152

152:                                              ; preds = %142, %147
  %153 = phi i8** [ %151, %147 ], [ %146, %142 ]
  store i8* %69, i8** %153, align 8
  br label %154

154:                                              ; preds = %152, %121
  %155 = bitcast i8* %69 to %"struct.std::__1::__hash_node_base.113"*
  %156 = load i64, i64* %80, align 8
  %157 = add i64 %156, 1
  store i64 %157, i64* %80, align 8
  br label %158

158:                                              ; preds = %62, %154
  %159 = phi i8 [ 1, %154 ], [ 0, %62 ]
  %160 = phi %"struct.std::__1::__hash_node_base.113"* [ %155, %154 ], [ %45, %62 ]
  %161 = insertvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } undef, %"struct.std::__1::__hash_node_base.113"* %160, 0
  %162 = insertvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %161, i8 %159, 1
  ret { %"struct.std::__1::__hash_node_base.113"*, i8 } %162
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.109"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !9
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.109", %"class.std::__1::__hash_table.109"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.109"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !9
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.109", %"class.std::__1::__hash_table.109"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.109", %"class.std::__1::__hash_table.109"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !9
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.109"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.109"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.109", %"class.std::__1::__hash_table.109"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.109", %"class.std::__1::__hash_table.109"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.109"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.113"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.113"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.115", %"class.std::__1::__bucket_list_deallocator.115"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.113"* null, %"struct.std::__1::__hash_node_base.113"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !41

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.109", %"class.std::__1::__hash_table.109"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.113"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.113"* null, %"struct.std::__1::__hash_node_base.113"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.113"* null, %"struct.std::__1::__hash_node_base.113"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.113"* null, %"struct.std::__1::__hash_node_base.113"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.113"* null, %"struct.std::__1::__hash_node_base.113"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.113"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !9
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.113"* %36, %"struct.std::__1::__hash_node_base.113"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.113"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.113"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.113"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.113"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.113"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.113"* %101 to %"class.SkSL::Variable"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.113"* %82, %"struct.std::__1::__hash_node_base.113"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.113"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.113"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.113"* %110 to %"class.SkSL::Variable"**
  %112 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %102, align 8
  %113 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %111, align 8
  %114 = icmp eq %"class.SkSL::Variable"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.113"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.113"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.113"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.113"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.113"* %80, %"struct.std::__1::__hash_node_base.113"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.113"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.113"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.109", %"class.std::__1::__hash_table.109"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.113"** null, %"struct.std::__1::__hash_node_base.113"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.113"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.113"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.115", %"class.std::__1::__bucket_list_deallocator.115"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.166"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4TypeENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JNS_4pairIKS5_S6_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.162"*, %"class.SkSL::Type"** dereferenceable(8), %"struct.std::__1::pair.283"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.SkSL::Type"** %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  %22 = inttoptr i64 %5 to %"class.SkSL::Type"*
  br i1 %21, label %67, label %23

23:                                               ; preds = %3
  %24 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !9
  %25 = icmp ugt i64 %24, 1
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = add i64 %20, -1
  %28 = and i64 %18, %27
  br label %33

29:                                               ; preds = %23
  %30 = icmp ult i64 %18, %20
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = urem i64 %18, %20
  br label %33

33:                                               ; preds = %26, %29, %31
  %34 = phi i64 [ %28, %26 ], [ %32, %31 ], [ %18, %29 ]
  %35 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %36, i64 %34
  %38 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.166"* %38, null
  br i1 %39, label %67, label %40

40:                                               ; preds = %33
  %41 = add i64 %20, -1
  br label %42

42:                                               ; preds = %40, %62
  %43 = phi %"struct.std::__1::__hash_node_base.166"* [ %45, %62 ], [ %38, %40 ]
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.166"* %45, null
  br i1 %46, label %67, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %45, i64 1
  %49 = bitcast %"struct.std::__1::__hash_node_base.166"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %18
  br i1 %51, label %62, label %52

52:                                               ; preds = %47
  br i1 %25, label %55, label %53

53:                                               ; preds = %52
  %54 = and i64 %50, %41
  br label %59

55:                                               ; preds = %52
  %56 = icmp ult i64 %50, %20
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = urem i64 %50, %20
  br label %59

59:                                               ; preds = %53, %55, %57
  %60 = phi i64 [ %54, %53 ], [ %58, %57 ], [ %50, %55 ]
  %61 = icmp eq i64 %60, %34
  br i1 %61, label %62, label %67

62:                                               ; preds = %47, %59
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %45, i64 2
  %64 = bitcast %"struct.std::__1::__hash_node_base.166"* %63 to %"class.SkSL::Type"**
  %65 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %64, align 8
  %66 = icmp eq %"class.SkSL::Type"* %65, %22
  br i1 %66, label %158, label %42

67:                                               ; preds = %42, %59, %33, %3
  %68 = phi i64 [ %34, %33 ], [ -6148914691236517206, %3 ], [ %34, %59 ], [ %34, %42 ]
  %69 = tail call i8* @_Znwm(i64 48) #12, !noalias !42
  %70 = getelementptr inbounds i8, i8* %69, i64 16
  %71 = bitcast %"struct.std::__1::pair.283"* %2 to i64*
  %72 = load i64, i64* %71, align 8, !noalias !42
  %73 = bitcast i8* %70 to i64*
  store i64 %72, i64* %73, align 8, !noalias !42
  %74 = getelementptr inbounds i8, i8* %69, i64 24
  %75 = getelementptr inbounds %"struct.std::__1::pair.283", %"struct.std::__1::pair.283"* %2, i64 0, i32 1
  %76 = bitcast %"class.SkSL::String"* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %76, i64 24, i1 false) #11, !noalias !42
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 24, i1 false) #11, !noalias !42
  %77 = getelementptr inbounds i8, i8* %69, i64 8
  %78 = bitcast i8* %77 to i64*
  store i64 %18, i64* %78, align 8, !noalias !42
  %79 = bitcast i8* %69 to %"struct.std::__1::__hash_node_base.166"**
  store %"struct.std::__1::__hash_node_base.166"* null, %"struct.std::__1::__hash_node_base.166"** %79, align 8, !noalias !42
  %80 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 2, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = add i64 %81, 1
  %83 = uitofp i64 %82 to float
  %84 = uitofp i64 %20 to float
  %85 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 3, i32 0, i32 0
  %86 = load float, float* %85, align 4
  %87 = fmul float %86, %84
  %88 = fcmp olt float %87, %83
  %89 = or i1 %21, %88
  br i1 %89, label %90, label %113

90:                                               ; preds = %67
  %91 = shl i64 %20, 1
  %92 = icmp ult i64 %20, 3
  %93 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !9
  %94 = icmp ugt i64 %93, 1
  %95 = or i1 %92, %94
  %96 = zext i1 %95 to i64
  %97 = or i64 %91, %96
  %98 = fdiv float %83, %86
  %99 = tail call float @llvm.ceil.f32(float %98) #11
  %100 = fptoui float %99 to i64
  %101 = icmp ult i64 %97, %100
  %102 = select i1 %101, i64 %100, i64 %97
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4TypeENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.162"* %0, i64 %102)
  %103 = load i64, i64* %19, align 8
  %104 = tail call i64 @llvm.ctpop.i64(i64 %103) #11, !range !9
  %105 = icmp ugt i64 %104, 1
  br i1 %105, label %109, label %106

106:                                              ; preds = %90
  %107 = add i64 %103, -1
  %108 = and i64 %107, %18
  br label %113

109:                                              ; preds = %90
  %110 = icmp ult i64 %18, %103
  br i1 %110, label %113, label %111

111:                                              ; preds = %109
  %112 = urem i64 %18, %103
  br label %113

113:                                              ; preds = %111, %109, %106, %67
  %114 = phi i64 [ %20, %67 ], [ %103, %106 ], [ %103, %109 ], [ %103, %111 ]
  %115 = phi i64 [ %68, %67 ], [ %108, %106 ], [ %18, %109 ], [ %112, %111 ]
  %116 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %117 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %116, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %117, i64 %115
  %119 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %118, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base.166"* %119, null
  br i1 %120, label %121, label %147

121:                                              ; preds = %113
  %122 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 1, i32 0, i32 0
  %123 = bitcast %"struct.std::__1::__hash_node_base.166"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i8* %69 to i64*
  store i64 %124, i64* %125, align 8
  %126 = bitcast %"struct.std::__1::__hash_node_base.166"* %122 to i8**
  store i8* %69, i8** %126, align 8
  store %"struct.std::__1::__hash_node_base.166"* %122, %"struct.std::__1::__hash_node_base.166"** %118, align 8
  %127 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %79, align 8
  %128 = icmp eq %"struct.std::__1::__hash_node_base.166"* %127, null
  br i1 %128, label %154, label %129

129:                                              ; preds = %121
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %127, i64 1
  %131 = bitcast %"struct.std::__1::__hash_node_base.166"* %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = tail call i64 @llvm.ctpop.i64(i64 %114) #11, !range !9
  %134 = icmp ugt i64 %133, 1
  br i1 %134, label %138, label %135

135:                                              ; preds = %129
  %136 = add i64 %114, -1
  %137 = and i64 %132, %136
  br label %142

138:                                              ; preds = %129
  %139 = icmp ult i64 %132, %114
  br i1 %139, label %142, label %140

140:                                              ; preds = %138
  %141 = urem i64 %132, %114
  br label %142

142:                                              ; preds = %135, %138, %140
  %143 = phi i64 [ %137, %135 ], [ %141, %140 ], [ %132, %138 ]
  %144 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %116, align 8
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %144, i64 %143
  %146 = bitcast %"struct.std::__1::__hash_node_base.166"** %145 to i8**
  br label %152

147:                                              ; preds = %113
  %148 = bitcast %"struct.std::__1::__hash_node_base.166"* %119 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast i8* %69 to i64*
  store i64 %149, i64* %150, align 8
  %151 = bitcast %"struct.std::__1::__hash_node_base.166"* %119 to i8**
  br label %152

152:                                              ; preds = %142, %147
  %153 = phi i8** [ %151, %147 ], [ %146, %142 ]
  store i8* %69, i8** %153, align 8
  br label %154

154:                                              ; preds = %152, %121
  %155 = bitcast i8* %69 to %"struct.std::__1::__hash_node_base.166"*
  %156 = load i64, i64* %80, align 8
  %157 = add i64 %156, 1
  store i64 %157, i64* %80, align 8
  br label %158

158:                                              ; preds = %62, %154
  %159 = phi i8 [ 1, %154 ], [ 0, %62 ]
  %160 = phi %"struct.std::__1::__hash_node_base.166"* [ %155, %154 ], [ %45, %62 ]
  %161 = insertvalue { %"struct.std::__1::__hash_node_base.166"*, i8 } undef, %"struct.std::__1::__hash_node_base.166"* %160, 0
  %162 = insertvalue { %"struct.std::__1::__hash_node_base.166"*, i8 } %161, i8 %159, 1
  ret { %"struct.std::__1::__hash_node_base.166"*, i8 } %162
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4TypeENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.162"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !9
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4TypeENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.162"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !9
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !9
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4TypeENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.162"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4TypeENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.162"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.162"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.166"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.166"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.168", %"class.std::__1::__bucket_list_deallocator.168"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.166"* null, %"struct.std::__1::__hash_node_base.166"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !45

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.166"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.166"* null, %"struct.std::__1::__hash_node_base.166"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.166"* null, %"struct.std::__1::__hash_node_base.166"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.166"* null, %"struct.std::__1::__hash_node_base.166"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.166"* null, %"struct.std::__1::__hash_node_base.166"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.166"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !9
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.166"* %36, %"struct.std::__1::__hash_node_base.166"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.166"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.166"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.166"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.166"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.166"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.166"* %101 to %"class.SkSL::Type"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.166"* %82, %"struct.std::__1::__hash_node_base.166"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.166"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.166"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.166"* %110 to %"class.SkSL::Type"**
  %112 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %102, align 8
  %113 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %111, align 8
  %114 = icmp eq %"class.SkSL::Type"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.166"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.166"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.166"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.166"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.166"* %80, %"struct.std::__1::__hash_node_base.166"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.166"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.166"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.166"** null, %"struct.std::__1::__hash_node_base.166"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.166"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.166"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.168", %"class.std::__1::__bucket_list_deallocator.168"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4SkSL7Program18ElementsCollection5beginEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4SkSL7Program18ElementsCollection5beginEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK4SkSL7Program18ElementsCollection3endEv: argument 0"}
!8 = distinct !{!8, !"_ZNK4SkSL7Program18ElementsCollection3endEv"}
!9 = !{i64 0, i64 65}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator14modifierStringERKNS_9ModifiersE: argument 0"}
!14 = distinct !{!14, !"_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator14modifierStringERKNS_9ModifiersE"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator14modifierStringERKNS_9ModifiersE: argument 0"}
!17 = distinct !{!17, !"_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator14modifierStringERKNS_9ModifiersE"}
!18 = distinct !{!18, !11}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator14modifierStringERKNS_9ModifiersE: argument 0"}
!21 = distinct !{!21, !"_ZN4SkSL13PipelineStage26PipelineStageCodeGenerator14modifierStringERKNS_9ModifiersE"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK4SkSL7Program18ElementsCollection5beginEv: argument 0"}
!24 = distinct !{!24, !"_ZNK4SkSL7Program18ElementsCollection5beginEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK4SkSL7Program18ElementsCollection3endEv: argument 0"}
!27 = distinct !{!27, !"_ZNK4SkSL7Program18ElementsCollection3endEv"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK4SkSL7Program18ElementsCollection5beginEv: argument 0"}
!30 = distinct !{!30, !"_ZNK4SkSL7Program18ElementsCollection5beginEv"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNK4SkSL7Program18ElementsCollection3endEv: argument 0"}
!33 = distinct !{!33, !"_ZNK4SkSL7Program18ElementsCollection3endEv"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashINS_4pairIKS5_S6_EEJEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISQ_EEEEEEmOT_DpOT0_: argument 0"}
!36 = distinct !{!36, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashINS_4pairIKS5_S6_EEJEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISQ_EEEEEEmOT_DpOT0_"}
!37 = distinct !{!37, !11}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashINS_4pairIKS5_S6_EEJEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISQ_EEEEEEmOT_DpOT0_: argument 0"}
!40 = distinct !{!40, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashINS_4pairIKS5_S6_EEJEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISQ_EEEEEEmOT_DpOT0_"}
!41 = distinct !{!41, !11}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4TypeENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashINS_4pairIKS5_S6_EEJEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISQ_EEEEEEmOT_DpOT0_: argument 0"}
!44 = distinct !{!44, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4TypeENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashINS_4pairIKS5_S6_EEJEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISQ_EEEEEEmOT_DpOT0_"}
!45 = distinct !{!45, !11}
