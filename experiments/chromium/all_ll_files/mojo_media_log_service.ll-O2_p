; ModuleID = '../../media/mojo/clients/mojo_media_log_service.cc'
source_filename = "../../media/mojo/clients/mojo_media_log_service.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::MojoMediaLogService" = type { %"class.media::mojom::MediaLog", %"class.media::MediaLog"* }
%"class.media::mojom::MediaLog" = type { i32 (...)** }
%"class.media::MediaLog" = type { i32 (...)**, %class.scoped_refptr }
%class.scoped_refptr = type { %"struct.media::MediaLog::ParentLogRecord"* }
%"struct.media::MediaLog::ParentLogRecord" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i32, %"class.base::Lock", %"class.media::MediaLog"* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.media::MediaLogRecord" = type { i32, i32, %"class.base::DictionaryValue", %"class.base::TimeTicks" }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }

@_ZTVN5media19MojoMediaLogServiceE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::MojoMediaLogService"*)* @_ZN5media19MojoMediaLogServiceD2Ev to i8*), i8* bitcast (void (%"class.media::MojoMediaLogService"*)* @_ZN5media19MojoMediaLogServiceD0Ev to i8*), i8* bitcast (void (%"class.media::MojoMediaLogService"*, %"struct.media::MediaLogRecord"*)* @_ZN5media19MojoMediaLogService12AddLogRecordERKNS_14MediaLogRecordE to i8*)] }, align 8

@_ZN5media19MojoMediaLogServiceC1EPNS_8MediaLogE = hidden unnamed_addr alias void (%"class.media::MojoMediaLogService"*, %"class.media::MediaLog"*), void (%"class.media::MojoMediaLogService"*, %"class.media::MediaLog"*)* @_ZN5media19MojoMediaLogServiceC2EPNS_8MediaLogE
@_ZN5media19MojoMediaLogServiceD1Ev = hidden unnamed_addr alias void (%"class.media::MojoMediaLogService"*), void (%"class.media::MojoMediaLogService"*)* @_ZN5media19MojoMediaLogServiceD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media19MojoMediaLogServiceC2EPNS_8MediaLogE(%"class.media::MojoMediaLogService"* nocapture, %"class.media::MediaLog"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::MojoMediaLogService", %"class.media::MojoMediaLogService"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media19MojoMediaLogServiceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.media::MojoMediaLogService", %"class.media::MojoMediaLogService"* %0, i64 0, i32 1
  store %"class.media::MediaLog"* %1, %"class.media::MediaLog"** %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media19MojoMediaLogServiceD2Ev(%"class.media::MojoMediaLogService"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::MojoMediaLogService", %"class.media::MojoMediaLogService"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media19MojoMediaLogServiceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media19MojoMediaLogServiceD0Ev(%"class.media::MojoMediaLogService"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.media::MojoMediaLogService"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media19MojoMediaLogService12AddLogRecordERKNS_14MediaLogRecordE(%"class.media::MojoMediaLogService"* nocapture readonly, %"struct.media::MediaLogRecord"* dereferenceable(48)) unnamed_addr #1 align 2 {
  %3 = tail call i8* @_Znwm(i64 48) #6
  %4 = bitcast i8* %3 to %"struct.media::MediaLogRecord"*
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to %"class.base::DictionaryValue"*
  tail call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* %6) #7
  %7 = getelementptr inbounds i8, i8* %3, i64 40
  %8 = bitcast i8* %7 to i64*
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"struct.media::MediaLogRecord", %"struct.media::MediaLogRecord"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = bitcast i8* %3 to i32*
  store i32 %10, i32* %11, align 8
  %12 = getelementptr inbounds %"struct.media::MediaLogRecord", %"struct.media::MediaLogRecord"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds i8, i8* %3, i64 4
  %15 = bitcast i8* %14 to i32*
  store i32 %13, i32* %15, align 4
  %16 = getelementptr inbounds %"struct.media::MediaLogRecord", %"struct.media::MediaLogRecord"* %1, i64 0, i32 2
  %17 = tail call %"class.base::DictionaryValue"* @_ZNK4base15DictionaryValue8DeepCopyEv(%"class.base::DictionaryValue"* %16) #7
  tail call void @_ZN4base15DictionaryValue4SwapEPS0_(%"class.base::DictionaryValue"* %6, %"class.base::DictionaryValue"* %17) #7
  %18 = getelementptr inbounds %"struct.media::MediaLogRecord", %"struct.media::MediaLogRecord"* %1, i64 0, i32 3, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %8, align 8
  %20 = icmp eq %"class.base::DictionaryValue"* %17, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %17, i64 0, i32 0
  tail call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %22) #7
  %23 = bitcast %"class.base::DictionaryValue"* %17 to i8*
  tail call void @_ZdlPv(i8* %23) #6
  br label %24

24:                                               ; preds = %21, %2
  %25 = getelementptr inbounds %"class.media::MojoMediaLogService", %"class.media::MojoMediaLogService"* %0, i64 0, i32 1
  %26 = load %"class.media::MediaLog"*, %"class.media::MediaLog"** %25, align 8
  %27 = getelementptr inbounds %"class.media::MediaLog", %"class.media::MediaLog"* %26, i64 0, i32 1, i32 0
  %28 = load %"struct.media::MediaLog::ParentLogRecord"*, %"struct.media::MediaLog::ParentLogRecord"** %27, align 8
  %29 = getelementptr inbounds %"struct.media::MediaLog::ParentLogRecord", %"struct.media::MediaLog::ParentLogRecord"* %28, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* %11, align 8
  tail call void @_ZN5media8MediaLog12AddLogRecordENSt3__110unique_ptrINS_14MediaLogRecordENS1_14default_deleteIS3_EEEE(%"class.media::MediaLog"* %26, %"struct.media::MediaLogRecord"* nonnull %4) #7
  ret void
}

declare void @_ZN5media8MediaLog12AddLogRecordENSt3__110unique_ptrINS_14MediaLogRecordENS1_14default_deleteIS3_EEEE(%"class.media::MediaLog"*, %"struct.media::MediaLogRecord"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #3

declare %"class.base::DictionaryValue"* @_ZNK4base15DictionaryValue8DeepCopyEv(%"class.base::DictionaryValue"*) local_unnamed_addr #3

declare void @_ZN4base15DictionaryValue4SwapEPS0_(%"class.base::DictionaryValue"*, %"class.base::DictionaryValue"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
