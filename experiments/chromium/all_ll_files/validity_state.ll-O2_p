; ModuleID = '../../third_party/blink/renderer/core/html/forms/validity_state.cc'
source_filename = "../../third_party/blink/renderer/core/html/forms/validity_state.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::ValidityState" = type { %"class.blink::ScriptWrappable", %"class.blink::Member" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ListedElement"* }
%"class.blink::ListedElement" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.1", %"class.blink::Member.3", %"class.blink::Member.5", %"class.WTF::String", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.1" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::ValidityState"* }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink13ValidityState17ValidationMessageEv(%"class.blink::ValidityState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ValidityState", %"class.blink::ValidityState"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %2, align 8
  %4 = bitcast %"class.blink::ListedElement"* %3 to %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)***
  %5 = load %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)** %5, i64 19
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)** %6, align 8
  %8 = tail call %"class.WTF::StringImpl"* %7(%"class.blink::ListedElement"* %3) #2
  ret %"class.WTF::StringImpl"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ValidityState12valueMissingEv(%"class.blink::ValidityState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ValidityState", %"class.blink::ValidityState"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %2, align 8
  %4 = bitcast %"class.blink::ListedElement"* %3 to i1 (%"class.blink::ListedElement"*)***
  %5 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %5, i64 18
  %7 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ListedElement"* %3) #2
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ValidityState12typeMismatchEv(%"class.blink::ValidityState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ValidityState", %"class.blink::ValidityState"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %2, align 8
  %4 = bitcast %"class.blink::ListedElement"* %3 to i1 (%"class.blink::ListedElement"*)***
  %5 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %5, i64 17
  %7 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ListedElement"* %3) #2
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ValidityState15patternMismatchEv(%"class.blink::ValidityState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ValidityState", %"class.blink::ValidityState"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %2, align 8
  %4 = bitcast %"class.blink::ListedElement"* %3 to i1 (%"class.blink::ListedElement"*)***
  %5 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %5, i64 11
  %7 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ListedElement"* %3) #2
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ValidityState7tooLongEv(%"class.blink::ValidityState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ValidityState", %"class.blink::ValidityState"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %2, align 8
  %4 = bitcast %"class.blink::ListedElement"* %3 to i1 (%"class.blink::ListedElement"*)***
  %5 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %5, i64 15
  %7 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ListedElement"* %3) #2
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ValidityState8tooShortEv(%"class.blink::ValidityState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ValidityState", %"class.blink::ValidityState"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %2, align 8
  %4 = bitcast %"class.blink::ListedElement"* %3 to i1 (%"class.blink::ListedElement"*)***
  %5 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %5, i64 16
  %7 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ListedElement"* %3) #2
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ValidityState14rangeUnderflowEv(%"class.blink::ValidityState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ValidityState", %"class.blink::ValidityState"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %2, align 8
  %4 = bitcast %"class.blink::ListedElement"* %3 to i1 (%"class.blink::ListedElement"*)***
  %5 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %5, i64 13
  %7 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ListedElement"* %3) #2
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ValidityState13rangeOverflowEv(%"class.blink::ValidityState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ValidityState", %"class.blink::ValidityState"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %2, align 8
  %4 = bitcast %"class.blink::ListedElement"* %3 to i1 (%"class.blink::ListedElement"*)***
  %5 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %5, i64 12
  %7 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ListedElement"* %3) #2
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ValidityState12stepMismatchEv(%"class.blink::ValidityState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ValidityState", %"class.blink::ValidityState"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %2, align 8
  %4 = bitcast %"class.blink::ListedElement"* %3 to i1 (%"class.blink::ListedElement"*)***
  %5 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %5, i64 14
  %7 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ListedElement"* %3) #2
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ValidityState8badInputEv(%"class.blink::ValidityState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ValidityState", %"class.blink::ValidityState"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %2, align 8
  %4 = bitcast %"class.blink::ListedElement"* %3 to i1 (%"class.blink::ListedElement"*)***
  %5 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %5, i64 10
  %7 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ListedElement"* %3) #2
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ValidityState11customErrorEv(%"class.blink::ValidityState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ValidityState", %"class.blink::ValidityState"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %2, align 8
  %4 = bitcast %"class.blink::ListedElement"* %3 to i1 (%"class.blink::ListedElement"*)***
  %5 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %5, i64 9
  %7 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ListedElement"* %3) #2
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ValidityState5validEv(%"class.blink::ValidityState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ValidityState", %"class.blink::ValidityState"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK5blink13ListedElement5ValidEv(%"class.blink::ListedElement"* %3) #2
  ret i1 %4
}

declare zeroext i1 @_ZNK5blink13ListedElement5ValidEv(%"class.blink::ListedElement"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
