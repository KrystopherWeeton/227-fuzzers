; ModuleID = '../../base/process/process_metrics.cc'
source_filename = "../../base/process/process_metrics.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::SystemMemoryInfoKB" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.base::SystemMetrics" = type { i64, %"struct.base::SystemMemoryInfoKB", %"struct.base::VmStatInfo", %"struct.base::SystemDiskInfo" }
%"struct.base::VmStatInfo" = type { i64, i64, i64, i64 }
%"struct.base::SystemDiskInfo" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::ProcessMetrics" = type { i32, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", i64, %"class.base::TimeTicks", i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZNK4base9TimeDeltadvES0_ = comdat any

@.str = private unnamed_addr constant [17 x i8] c"committed_memory\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"meminfo\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"diskinfo\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.7 = private unnamed_addr constant [27 x i8] c"!is_zero() || !a.is_zero()\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"!is_inf() || !a.is_inf()\00", align 1

@_ZN4base18SystemMemoryInfoKBC1Ev = hidden unnamed_addr alias void (%"struct.base::SystemMemoryInfoKB"*), void (%"struct.base::SystemMemoryInfoKB"*)* @_ZN4base18SystemMemoryInfoKBC2Ev
@_ZN4base18SystemMemoryInfoKBC1ERKS0_ = hidden unnamed_addr alias void (%"struct.base::SystemMemoryInfoKB"*, %"struct.base::SystemMemoryInfoKB"*), void (%"struct.base::SystemMemoryInfoKB"*, %"struct.base::SystemMemoryInfoKB"*)* @_ZN4base18SystemMemoryInfoKBC2ERKS0_
@_ZN4base13SystemMetricsC1Ev = hidden unnamed_addr alias void (%"class.base::SystemMetrics"*), void (%"class.base::SystemMetrics"*)* @_ZN4base13SystemMetricsC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base18SystemMemoryInfoKBC2Ev(%"struct.base::SystemMemoryInfoKB"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.base::SystemMemoryInfoKB"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 52, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base18SystemMemoryInfoKBC2ERKS0_(%"struct.base::SystemMemoryInfoKB"* nocapture, %"struct.base::SystemMemoryInfoKB"* nocapture readonly dereferenceable(52)) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.base::SystemMemoryInfoKB"* %0 to i8*
  %4 = bitcast %"struct.base::SystemMemoryInfoKB"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 52, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base13SystemMetricsC2Ev(%"class.base::SystemMetrics"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.base::SystemMetrics", %"class.base::SystemMetrics"* %0, i64 0, i32 1
  %3 = bitcast %"struct.base::SystemMemoryInfoKB"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 52, i1 false) #9
  %4 = getelementptr inbounds %"class.base::SystemMetrics", %"class.base::SystemMetrics"* %0, i64 0, i32 2
  %5 = bitcast %"struct.base::VmStatInfo"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false) #9
  %6 = getelementptr inbounds %"class.base::SystemMetrics", %"class.base::SystemMetrics"* %0, i64 0, i32 3
  tail call void @_ZN4base14SystemDiskInfoC1Ev(%"struct.base::SystemDiskInfo"* %6) #9
  %7 = getelementptr inbounds %"class.base::SystemMetrics", %"class.base::SystemMetrics"* %0, i64 0, i32 0
  store i64 0, i64* %7, align 8
  ret void
}

declare void @_ZN4base14SystemDiskInfoC1Ev(%"struct.base::SystemDiskInfo"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base13SystemMetrics6SampleEv(%"class.base::SystemMetrics"* noalias sret) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.base::SystemMetrics"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 -86, i64 184, i1 false)
  %3 = getelementptr inbounds %"class.base::SystemMetrics", %"class.base::SystemMetrics"* %0, i64 0, i32 1
  %4 = bitcast %"struct.base::SystemMemoryInfoKB"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 52, i1 false) #9
  %5 = getelementptr inbounds %"class.base::SystemMetrics", %"class.base::SystemMetrics"* %0, i64 0, i32 2
  %6 = bitcast %"struct.base::VmStatInfo"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false) #9
  %7 = getelementptr inbounds %"class.base::SystemMetrics", %"class.base::SystemMetrics"* %0, i64 0, i32 3
  tail call void @_ZN4base14SystemDiskInfoC1Ev(%"struct.base::SystemDiskInfo"* %7) #9
  %8 = getelementptr inbounds %"class.base::SystemMetrics", %"class.base::SystemMetrics"* %0, i64 0, i32 0
  store i64 0, i64* %8, align 8
  %9 = tail call i64 @_ZN4base21GetSystemCommitChargeEv() #9
  store i64 %9, i64* %8, align 8
  %10 = tail call zeroext i1 @_ZN4base19GetSystemMemoryInfoEPNS_18SystemMemoryInfoKBE(%"struct.base::SystemMemoryInfoKB"* %3) #9
  %11 = tail call zeroext i1 @_ZN4base13GetVmStatInfoEPNS_10VmStatInfoE(%"struct.base::VmStatInfo"* %5) #9
  %12 = tail call zeroext i1 @_ZN4base17GetSystemDiskInfoEPNS_14SystemDiskInfoE(%"struct.base::SystemDiskInfo"* %7) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i64 @_ZN4base21GetSystemCommitChargeEv() local_unnamed_addr #3

declare zeroext i1 @_ZN4base19GetSystemMemoryInfoEPNS_18SystemMemoryInfoKBE(%"struct.base::SystemMemoryInfoKB"*) local_unnamed_addr #3

declare zeroext i1 @_ZN4base13GetVmStatInfoEPNS_10VmStatInfoE(%"struct.base::VmStatInfo"*) local_unnamed_addr #3

declare zeroext i1 @_ZN4base17GetSystemDiskInfoEPNS_14SystemDiskInfoE(%"struct.base::SystemDiskInfo"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::Value"* @_ZNK4base13SystemMetrics7ToValueEv(%"class.base::SystemMetrics"*) local_unnamed_addr #1 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #10
  %3 = bitcast i8* %2 to %"class.base::DictionaryValue"*
  tail call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %3) #9
  %4 = bitcast i8* %2 to %"class.base::Value"*
  %5 = getelementptr inbounds %"class.base::SystemMetrics", %"class.base::SystemMetrics"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = trunc i64 %6 to i32
  %8 = tail call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i64 16, i32 %7) #9
  %9 = getelementptr inbounds %"class.base::SystemMetrics", %"class.base::SystemMetrics"* %0, i64 0, i32 1
  %10 = tail call %"class.base::DictionaryValue"* @_ZNK4base18SystemMemoryInfoKB7ToValueEv(%"struct.base::SystemMemoryInfoKB"* %9) #9
  %11 = getelementptr inbounds %"class.base::SystemMetrics", %"class.base::SystemMetrics"* %0, i64 0, i32 2
  %12 = tail call %"class.base::DictionaryValue"* @_ZNK4base10VmStatInfo7ToValueEv(%"struct.base::VmStatInfo"* %11) #9
  %13 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %10, i64 0, i32 0
  %14 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %12, i64 0, i32 0
  tail call void @_ZN4base5Value15MergeDictionaryEPKS0_(%"class.base::Value"* %13, %"class.base::Value"* %14) #9
  %15 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue3SetENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, %"class.base::Value"* %13) #9
  %16 = getelementptr inbounds %"class.base::SystemMetrics", %"class.base::SystemMetrics"* %0, i64 0, i32 3
  %17 = tail call %"class.base::Value"* @_ZNK4base14SystemDiskInfo7ToValueEv(%"struct.base::SystemDiskInfo"* %16) #9
  %18 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue3SetENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 8, %"class.base::Value"* %17) #9
  %19 = icmp eq %"class.base::DictionaryValue"* %12, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %1
  tail call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %14) #9
  %21 = bitcast %"class.base::DictionaryValue"* %12 to i8*
  tail call void @_ZdlPv(i8* %21) #10
  br label %22

22:                                               ; preds = %1, %20
  ret %"class.base::Value"* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #3

declare %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"*, i8*, i64, i32) local_unnamed_addr #3

declare %"class.base::DictionaryValue"* @_ZNK4base18SystemMemoryInfoKB7ToValueEv(%"struct.base::SystemMemoryInfoKB"*) local_unnamed_addr #3

declare %"class.base::DictionaryValue"* @_ZNK4base10VmStatInfo7ToValueEv(%"struct.base::VmStatInfo"*) local_unnamed_addr #3

declare void @_ZN4base5Value15MergeDictionaryEPKS0_(%"class.base::Value"*, %"class.base::Value"*) local_unnamed_addr #3

declare %"class.base::Value"* @_ZN4base15DictionaryValue3SetENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"*, i8*, i64, %"class.base::Value"*) local_unnamed_addr #3

declare %"class.base::Value"* @_ZNK4base14SystemDiskInfo7ToValueEv(%"struct.base::SystemDiskInfo"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::ProcessMetrics"* @_ZN4base14ProcessMetrics27CreateCurrentProcessMetricsEv() local_unnamed_addr #1 align 2 {
  %1 = tail call i32 @_ZN4base23GetCurrentProcessHandleEv() #9
  %2 = tail call %"class.base::ProcessMetrics"* @_ZN4base14ProcessMetrics20CreateProcessMetricsEi(i32 %1) #9
  ret %"class.base::ProcessMetrics"* %2
}

declare %"class.base::ProcessMetrics"* @_ZN4base14ProcessMetrics20CreateProcessMetricsEi(i32) local_unnamed_addr #3

declare i32 @_ZN4base23GetCurrentProcessHandleEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN4base14ProcessMetrics30GetPlatformIndependentCPUUsageEv(%"class.base::ProcessMetrics"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.base::TimeDelta", align 8
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = bitcast %"class.base::TimeDelta"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  %6 = tail call i64 @_ZN4base14ProcessMetrics21GetCumulativeCPUUsageEv(%"class.base::ProcessMetrics"* %0) #9
  store i64 %6, i64* %5, align 8
  %7 = tail call i64 @_ZN4base9TimeTicks3NowEv() #9
  %8 = getelementptr inbounds %"class.base::ProcessMetrics", %"class.base::ProcessMetrics"* %0, i64 0, i32 2, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %1
  store i64 %6, i64* %8, align 8
  %12 = getelementptr inbounds %"class.base::ProcessMetrics", %"class.base::ProcessMetrics"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 %7, i64* %12, align 8
  br label %33

13:                                               ; preds = %1
  %14 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %2, i64 %9)
  %15 = getelementptr inbounds %"class.base::ProcessMetrics", %"class.base::ProcessMetrics"* %0, i64 0, i32 1, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = sub nsw i64 %7, %16
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %33, label %19

19:                                               ; preds = %13
  %20 = load i64, i64* %5, align 8
  store i64 %20, i64* %8, align 8
  store i64 %7, i64* %15, align 8
  %21 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  %22 = sitofp i64 %14 to double
  %23 = fmul double %22, 1.000000e+02
  %24 = fcmp oge double %23, 0xC3E0000000000000
  %25 = fcmp ole double %23, 0x43DFFFFFFFFFFFFF
  %26 = and i1 %25, %24
  %27 = fptosi double %23 to i64
  %28 = icmp sgt i64 %14, -1
  %29 = select i1 %28, i64 9223372036854775807, i64 -9223372036854775808
  %30 = select i1 %26, i64 %27, i64 %29
  %31 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %30, i64* %31, align 8
  %32 = call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* nonnull %3, i64 %17)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %33

33:                                               ; preds = %19, %13, %11
  %34 = phi double [ 0.000000e+00, %11 ], [ %32, %19 ], [ 0.000000e+00, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  ret double %34
}

declare i64 @_ZN4base14ProcessMetrics21GetCumulativeCPUUsageEv(%"class.base::ProcessMetrics"*) local_unnamed_addr #3

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #9
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !2
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #9
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %26, i8* %27) #9
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #9
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #9
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = or i64 %6, %1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i32 302, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0)) #9
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  %12 = load i64, i64* %5, align 8
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i64 [ %6, %2 ], [ %12, %9 ]
  %15 = add i64 %14, -9223372036854775807
  %16 = add i64 %1, -9223372036854775807
  %17 = or i64 %15, %16
  %18 = icmp ult i64 %17, 2
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i32 303, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0)) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  %22 = load i64, i64* %5, align 8
  %23 = add i64 %22, -9223372036854775807
  br label %24

24:                                               ; preds = %13, %19
  %25 = phi i64 [ %15, %13 ], [ %23, %19 ]
  %26 = phi i64 [ %14, %13 ], [ %22, %19 ]
  %27 = icmp ult i64 %25, 2
  %28 = icmp slt i64 %26, 0
  %29 = select i1 %28, double 0xFFF0000000000000, double 0x7FF0000000000000
  %30 = sitofp i64 %26 to double
  %31 = select i1 %27, double %29, double %30
  %32 = icmp ult i64 %16, 2
  %33 = icmp slt i64 %1, 0
  %34 = select i1 %33, double 0xFFF0000000000000, double 0x7FF0000000000000
  %35 = sitofp i64 %1 to double
  %36 = select i1 %32, double %34, double %35
  %37 = fdiv double %31, %36
  ret double %37
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4base14ProcessMetrics29CalculateIdleWakeupsPerSecondEm(%"class.base::ProcessMetrics"* nocapture, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.base::ProcessMetrics", %"class.base::ProcessMetrics"* %0, i64 0, i32 6
  %4 = getelementptr inbounds %"class.base::ProcessMetrics", %"class.base::ProcessMetrics"* %0, i64 0, i32 5
  %5 = tail call i64 @_ZN4base9TimeTicks3NowEv() #9
  %6 = load i64, i64* %3, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %38, label %8

8:                                                ; preds = %2
  %9 = sub i64 %1, %6
  %10 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = sub nsw i64 %5, %11
  %13 = sitofp i64 %9 to double
  %14 = add i64 %12, -9223372036854775807
  %15 = icmp ult i64 %14, 2
  br i1 %15, label %19, label %16

16:                                               ; preds = %8
  %17 = sitofp i64 %12 to double
  %18 = fdiv double %17, 1.000000e+06
  br label %22

19:                                               ; preds = %8
  %20 = icmp slt i64 %12, 0
  %21 = select i1 %20, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %22

22:                                               ; preds = %19, %16
  %23 = phi double [ %21, %19 ], [ %18, %16 ]
  %24 = fdiv double %13, %23
  %25 = fcmp oge double %24, 0.000000e+00
  %26 = fadd double %24, 5.000000e-01
  %27 = tail call double @llvm.floor.f64(double %26) #9
  %28 = fadd double %24, -5.000000e-01
  %29 = tail call double @llvm.ceil.f64(double %28) #9
  %30 = select i1 %25, double %27, double %29
  %31 = fcmp ult double %30, 0xC1E0000000000000
  %32 = fcmp ugt double %30, 0x41DFFFFFFFC00000
  %33 = fcmp ogt double %30, 0xC1E0000000000000
  %34 = select i1 %33, double %30, double 0xC1E0000000000000
  %35 = fptosi double %34 to i32
  %36 = select i1 %31, i32 0, i32 2147483647
  %37 = select i1 %32, i32 %36, i32 %35
  br label %38

38:                                               ; preds = %2, %22
  %39 = phi i32 [ %37, %22 ], [ 0, %2 ]
  %40 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  store i64 %5, i64* %40, align 8
  store i64 %1, i64* %3, align 8
  ret i32 %39
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN4base14ProcessMetrics29GetCumulativeDiskUsageInBytesEv(%"class.base::ProcessMetrics"* nocapture readnone) local_unnamed_addr #5 align 2 {
  ret i64 0
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #7

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #7

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #7

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
