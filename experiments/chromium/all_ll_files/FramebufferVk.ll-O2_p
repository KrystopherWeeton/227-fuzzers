; ModuleID = '../../third_party/angle/src/libANGLE/renderer/vulkan/FramebufferVk.cpp'
source_filename = "../../third_party/angle/src/libANGLE/renderer/vulkan/FramebufferVk.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.rx::vk::ClearValuesArray" = type { %"struct.std::__1::array.843", %"class.angle::BitSetT.844" }
%"struct.std::__1::array.843" = type { [10 x %union.VkClearValue] }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%"class.angle::BitSetT.844" = type { i64 }
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }
%struct.VkClearDepthStencilValue = type { float, i32 }
%"class.angle::FixedVector.1450" = type { %"struct.std::__1::array.1451", i64 }
%"struct.std::__1::array.1451" = type { [10 x %struct.VkClearAttachment] }
%struct.VkClearAttachment = type { i32, i32, %union.VkClearValue }
%struct.VkDevice_T = type opaque
%struct.VkImageView_T = type opaque
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%"class.rx::FramebufferVk" = type <{ %"class.rx::FramebufferImpl", %"class.rx::WindowSurfaceVk"*, %"class.rx::vk::RenderPassDesc", [4 x i8], %"class.rx::vk::FramebufferHelper"*, %"class.rx::RenderTargetCache", i64, %"class.rx::vk::DynamicBuffer", %"class.angle::BitSetT", [3 x i8], %"class.rx::vk::FramebufferDesc", %"class.rx::FramebufferCache", %"class.rx::vk::ClearValuesArray", i8, [7 x i8] }>
%"class.rx::FramebufferImpl" = type { i32 (...)**, %"class.gl::FramebufferState"* }
%"class.rx::vk::RenderPassDesc" = type { i8, %"class.angle::BitSetT", %"class.angle::BitSetT", %"struct.std::__1::array.825" }
%"struct.std::__1::array.825" = type { [9 x i8] }
%"class.rx::vk::FramebufferHelper" = type { %"class.rx::vk::Resource", %"class.rx::vk::Framebuffer" }
%"class.rx::vk::Resource" = type { i32 (...)**, %"class.rx::vk::SharedResourceUse" }
%"class.rx::vk::SharedResourceUse" = type { %"struct.rx::vk::ResourceUse"* }
%"struct.rx::vk::ResourceUse" = type { i32, %"class.rx::Serial" }
%"class.rx::Serial" = type { i64 }
%"class.rx::vk::Framebuffer" = type { %"class.rx::vk::WrappedObject.818" }
%"class.rx::vk::WrappedObject.818" = type { %struct.VkFramebuffer_T* }
%struct.VkFramebuffer_T = type opaque
%"class.rx::RenderTargetCache" = type { %"class.rx::RenderTargetVk"*, %"struct.std::__1::array.826", %"class.rx::RenderTargetVk"* }
%"struct.std::__1::array.826" = type { [10 x %"class.rx::RenderTargetVk"*] }
%"class.rx::RenderTargetVk" = type { %"class.rx::FramebufferAttachmentRenderTarget", %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageViewHelper"*, %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageViewHelper"*, %"class.gl::LevelIndexWrapper", i32, i32, i32 }
%"class.rx::FramebufferAttachmentRenderTarget" = type { i32 (...)** }
%"class.rx::vk::ImageHelper" = type <{ %"class.rx::vk::Resource", %"class.angle::Subject", %"class.rx::vk::Image", %"class.rx::vk::DeviceMemory", i32, i32, i32, i32, %struct.VkExtent3D, i8, [3 x i8], %"struct.rx::vk::Format"*, i32, %"class.rx::vk::ImageSerial", i32, i32, i32, i32, %"class.angle::BitSetT.751", [6 x i8], %"class.rx::vk::BindingPointer", i64, %"class.gl::LevelIndexWrapper", i32, i32, [4 x i8], %"class.rx::vk::DynamicBuffer", %"class.std::__1::vector.767", %struct.Optional.775, %"struct.std::__1::array.776", %"struct.std::__1::array.776", [4 x i8] }>
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.rx::vk::Image" = type { %"class.rx::vk::WrappedObject" }
%"class.rx::vk::WrappedObject" = type { %struct.VkImage_T* }
%struct.VkImage_T = type opaque
%"class.rx::vk::DeviceMemory" = type { %"class.rx::vk::WrappedObject.750" }
%"class.rx::vk::WrappedObject.750" = type { %struct.VkDeviceMemory_T* }
%struct.VkDeviceMemory_T = type opaque
%struct.VkExtent3D = type { i32, i32, i32 }
%"struct.rx::vk::Format" = type <{ i32, i32, i32, i32, i32, [4 x i8], void (i64, i64, i64, i8*, i64, i64)*, { void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, i8 } (i32)*, void (i8*, i64, i64, i8*)*, void (i8*, i64, i64, i8*)*, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.rx::vk::ImageSerial" = type { i32 }
%"class.angle::BitSetT.751" = type { i16 }
%"class.rx::vk::BindingPointer" = type { %"class.rx::vk::RefCounted"* }
%"class.rx::vk::RefCounted" = type opaque
%"class.std::__1::vector.767" = type { %"class.std::__1::__vector_base.768" }
%"class.std::__1::__vector_base.768" = type { %"class.std::__1::vector.769"*, %"class.std::__1::vector.769"*, %"class.std::__1::__compressed_pair.770" }
%"class.std::__1::vector.769" = type opaque
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.771" }
%"struct.std::__1::__compressed_pair_elem.771" = type { %"class.std::__1::vector.769"* }
%struct.Optional.775 = type { i8, %"struct.rx::vk::ImageHelper::ClearUpdate" }
%"struct.rx::vk::ImageHelper::ClearUpdate" = type { i32, %union.VkClearValue, i32, i32, i32 }
%"struct.std::__1::array.776" = type { [16 x %"class.angle::BitSetT"] }
%"class.rx::vk::ImageViewHelper" = type <{ %"class.rx::vk::Resource", %"class.gl::LevelIndexWrapper.777", [4 x i8], %"class.std::__1::vector.778", %"class.std::__1::vector.778", %"class.std::__1::vector.778", %"class.std::__1::vector.778", %"class.std::__1::vector.778", %"class.std::__1::vector.778", %"class.std::__1::vector.778", i8, [7 x i8], %"class.std::__1::vector.778", %"class.std::__1::vector.786", %"class.std::__1::vector.778", %"class.std::__1::vector.786", %"class.std::__1::vector.778", %"class.std::__1::vector.786", %"class.rx::vk::ImageOrBufferViewSerial", [4 x i8] }>
%"class.gl::LevelIndexWrapper.777" = type { i32 }
%"class.std::__1::vector.778" = type { %"class.std::__1::__vector_base.779" }
%"class.std::__1::__vector_base.779" = type { %"class.rx::vk::ImageView"*, %"class.rx::vk::ImageView"*, %"class.std::__1::__compressed_pair.781" }
%"class.rx::vk::ImageView" = type { %"class.rx::vk::WrappedObject.780" }
%"class.rx::vk::WrappedObject.780" = type { %struct.VkImageView_T* }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"class.rx::vk::ImageView"* }
%"class.std::__1::vector.786" = type { %"class.std::__1::__vector_base.787" }
%"class.std::__1::__vector_base.787" = type { %"class.std::__1::vector.778"*, %"class.std::__1::vector.778"*, %"class.std::__1::__compressed_pair.788" }
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"class.std::__1::vector.778"* }
%"class.rx::vk::ImageOrBufferViewSerial" = type { i32 }
%"class.gl::LevelIndexWrapper" = type { i32 }
%"class.rx::vk::DynamicBuffer" = type { i32, i8, i32, i64, %"class.std::__1::unique_ptr.752", i32, i32, i64, i64, i32, %"class.std::__1::vector.760", %"class.std::__1::vector.760" }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.rx::vk::BufferHelper"* }
%"class.rx::vk::BufferHelper" = type { %"class.rx::vk::Resource", %"class.rx::vk::Buffer", %"class.rx::vk::BufferMemory", i32, i64, i32, i32, i32, i32, i32, %"class.rx::vk::BufferSerial" }
%"class.rx::vk::Buffer" = type { %"class.rx::vk::WrappedObject.755" }
%"class.rx::vk::WrappedObject.755" = type { %struct.VkBuffer_T* }
%struct.VkBuffer_T = type opaque
%"class.rx::vk::BufferMemory" = type { [8 x i8], %"class.rx::vk::Allocation", %"class.rx::vk::DeviceMemory", i8*, i8* }
%"class.rx::vk::Allocation" = type { %"class.rx::vk::WrappedObject.756" }
%"class.rx::vk::WrappedObject.756" = type { %struct.VmaAllocation_T* }
%struct.VmaAllocation_T = type opaque
%"class.rx::vk::BufferSerial" = type { i32 }
%"class.std::__1::vector.760" = type { %"class.std::__1::__vector_base.761" }
%"class.std::__1::__vector_base.761" = type { %"class.std::__1::unique_ptr.752"*, %"class.std::__1::unique_ptr.752"*, %"class.std::__1::__compressed_pair.762" }
%"class.std::__1::__compressed_pair.762" = type { %"struct.std::__1::__compressed_pair_elem.763" }
%"struct.std::__1::__compressed_pair_elem.763" = type { %"class.std::__1::unique_ptr.752"* }
%"class.angle::BitSetT" = type { i8 }
%"class.rx::vk::FramebufferDesc" = type { i32, %"struct.std::__1::array.827" }
%"struct.std::__1::array.827" = type { [18 x %"struct.rx::vk::ImageOrBufferViewSubresourceSerial"] }
%"struct.rx::vk::ImageOrBufferViewSubresourceSerial" = type { %"class.rx::vk::ImageOrBufferViewSerial", %"struct.rx::vk::ImageSubresourceRange" }
%"struct.rx::vk::ImageSubresourceRange" = type { i32 }
%"class.rx::FramebufferCache" = type { %"class.absl::flat_hash_map.828", %"class.rx::CacheStats" }
%"class.absl::flat_hash_map.828" = type { %"class.absl::container_internal::raw_hash_map.829" }
%"class.absl::container_internal::raw_hash_map.829" = type { %"class.absl::container_internal::raw_hash_set.830" }
%"class.absl::container_internal::raw_hash_set.830" = type { i8*, %"union.absl::container_internal::map_slot_type.831"*, i64, i64, %"class.absl::container_internal::CompressedTuple.832" }
%"union.absl::container_internal::map_slot_type.831" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferHelper" }
%"class.absl::container_internal::CompressedTuple.832" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.833" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.833" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.rx::CacheStats" = type { i64, i64 }
%"class.rx::RendererVk" = type { %"class.egl::Display"*, i8, [7 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"struct.angle::FeaturesVk", %struct.VkInstance_T*, i8, i8, i8, i32, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkDebugReportCallbackEXT_T*, %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceLineRasterizationFeaturesEXT, %struct.VkPhysicalDeviceProvokingVertexFeaturesEXT, %struct.VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT, %struct.VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT, %struct.VkPhysicalDeviceTransformFeedbackFeaturesEXT, %struct.VkPhysicalDeviceIndexTypeUint8FeaturesEXT, %struct.VkPhysicalDeviceSubgroupProperties, %struct.VkPhysicalDeviceDeviceMemoryReportFeaturesEXT, %struct.VkDeviceDeviceMemoryReportCreateInfoEXT, %struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT, %struct.VkPhysicalDeviceShaderFloat16Int8Features, %struct.VkPhysicalDeviceDepthStencilResolveProperties, %struct.VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT, %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceCustomBorderColorFeaturesEXT, %struct.VkExternalFenceProperties, %struct.VkExternalSemaphoreProperties, %struct.VkPhysicalDeviceSamplerYcbcrConversionFeatures, %"class.std::__1::vector.846", %"class.angle::PackedEnumMap.853", i32, i32, i64, i64, i32, %struct.VkDevice_T*, %"class.rx::SerialFactoryBase.855", i8, %"class.std::__1::mutex", %"class.std::__1::vector.857", %"class.rx::vk::MemoryProperties", %"class.rx::vk::FormatTable", %"class.std::__1::mutex", %"class.rx::vk::PipelineCache", i32, i8, i8, %"class.angle::PackedEnumMap.873", %"class.std::__1::basic_string", i32, %"class.rx::DebugAnnotatorVk", i32, %"class.rx::vk::CommandPool", %"class.std::__1::deque.876", %"class.std::__1::mutex", %"class.rx::vk::CommandQueue", %"class.std::__1::mutex", %"class.std::__1::vector.922", %"class.rx::vk::CommandProcessor", %"class.rx::vk::Allocator", %"class.rx::SamplerCache", %"class.rx::SamplerYcbcrConversionCache", %"class.rx::vk::ActiveHandleCounter", %"class.rx::vk::ResourceSerialFactory", %"class.rx::vk::MemoryReport", %"class.angle::PackedEnumMap.1116", i32, %"class.std::__1::shared_ptr.1118" }
%"class.egl::Display" = type { %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"struct.egl::DisplayState", %"class.rx::DisplayImpl"*, %"class.angle::ObserverBinding", %"class.egl::AttributeMap", %"class.egl::ConfigSet", %"class.std::__1::set.687", %"class.std::__1::set", %"class.std::__1::set.697", %"class.std::__1::set.707", i8, i8, %"struct.egl::Caps", %"struct.egl::DisplayExtensions", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.egl::Device"*, %"class.egl::Surface"*, i32, %"class.angle::LoggingAnnotator", %"class.gl::TextureManager"*, %"class.gl::SemaphoreManager"*, %"class.egl::BlobCache", %"class.gl::MemoryProgramCache", i64, i64, %"struct.angle::FrontendFeatures", %"class.std::__1::vector.728", %"class.std::__1::mutex", %"class.std::__1::vector.735", %"class.std::__1::vector.735", %"class.std::__1::mutex", %"class.std::__1::mutex" }
%"class.egl::LabeledObject" = type { i32 (...)** }
%"struct.egl::DisplayState" = type { i8*, %"class.std::__1::set.655", %"class.std::__1::vector.135", %"class.std::__1::vector.135", i8, i64 }
%"class.std::__1::set.655" = type { %"class.std::__1::__tree.656" }
%"class.std::__1::__tree.656" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.657", %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::vector.135" = type { %"class.std::__1::__vector_base.136" }
%"class.std::__1::__vector_base.136" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.std::__1::basic_string"* }
%"class.rx::DisplayImpl" = type { %"class.rx::EGLImplFactory", %"class.angle::Subject", %"struct.egl::DisplayState"*, i8, %"struct.egl::DisplayExtensions", i8, %"struct.egl::Caps", %"class.egl::BlobCache"* }
%"class.rx::EGLImplFactory" = type { i32 (...)** }
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.egl::AttributeMap" = type { %"class.std::__1::map.665" }
%"class.std::__1::map.665" = type { %"class.std::__1::__tree.666" }
%"class.std::__1::__tree.666" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.667", %"class.std::__1::__compressed_pair.671" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.egl::ConfigSet" = type { %"class.std::__1::map.676" }
%"class.std::__1::map.676" = type { %"class.std::__1::__tree.677" }
%"class.std::__1::__tree.677" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.678", %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::__compressed_pair.678" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.687" = type { %"class.std::__1::__tree.688" }
%"class.std::__1::__tree.688" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.689", %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.697" = type { %"class.std::__1::__tree.698" }
%"class.std::__1::__tree.698" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.699", %"class.std::__1::__compressed_pair.703" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.707" = type { %"class.std::__1::__tree.708" }
%"class.std::__1::__tree.708" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.713" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.egl::Caps" = type { i8, i8 }
%"struct.egl::DisplayExtensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.egl::Device" = type opaque
%"class.egl::Surface" = type opaque
%"class.angle::LoggingAnnotator" = type { %"class.gl::DebugAnnotator" }
%"class.gl::DebugAnnotator" = type { i32 (...)** }
%"class.gl::TextureManager" = type { %"class.gl::TypedResourceManager.258" }
%"class.gl::TypedResourceManager.258" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.259" }
%"class.gl::ResourceManagerBase" = type { i32 (...)**, %"class.gl::HandleAllocator", i64 }
%"class.gl::HandleAllocator" = type <{ i32, i32, %"class.std::__1::vector.28", %"class.std::__1::vector.54", %"class.std::__1::vector.28", i8, [7 x i8] }>
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"*, %"class.std::__1::__compressed_pair.56" }
%"struct.gl::HandleAllocator::HandleRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.gl::HandleAllocator::HandleRange"* }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { i32*, i32*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i32* }
%"class.gl::ResourceMap.259" = type { i64, %"class.gl::Texture"**, %"class.absl::flat_hash_map.278" }
%"class.gl::Texture" = type <{ %"class.gl::RefCountObject.base.261", [4 x i8], %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::TextureState", %"class.angle::BitSetT.274", %"class.rx::TextureImpl"*, %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::basic_string", %"class.egl::Surface"*, %"class.egl::Stream"*, %"class.angle::FastVector.276", %"struct.gl::Texture::SamplerCompletenessCache", [4 x i8] }>
%"class.gl::RefCountObject.base.261" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TextureID" }>
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"struct.gl::TextureID" = type { i32 }
%"class.egl::ImageSibling" = type { %"class.gl::FramebufferAttachmentObject", %"class.std::__1::set", %"class.angle::BindingPointer" }
%"class.gl::FramebufferAttachmentObject" = type { %"class.angle::Subject", %"class.angle::ObserverInterface" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.egl::Image"* }
%"class.egl::Image" = type <{ %"class.angle::RefCountObject.4", %"class.egl::LabeledObject", %"struct.egl::ImageState", %"class.rx::ImageImpl"*, i8, [7 x i8] }>
%"class.angle::RefCountObject.4" = type { i32 (...)**, i64 }
%"struct.egl::ImageState" = type { i8*, i32, %"class.gl::ImageIndex", %"class.egl::ImageSibling"*, %"class.std::__1::set.5", %"struct.gl::Format", i8, %"struct.gl::Extents", i64, i32, i32 }
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.std::__1::set.5" = type { %"class.std::__1::__tree.6" }
%"class.std::__1::__tree.6" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Format" = type { %"struct.gl::InternalFormat"* }
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Version" = type { i32, i32 }
%"struct.gl::Extents" = type { i32, i32, i32 }
%"class.rx::ImageImpl" = type opaque
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.gl::TextureState" = type <{ i8, [3 x i8], %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.std::__1::vector.265", %"struct.gl::Rectangle", i32, [4 x i8], %"class.gl::OffsetBindingPointer", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.gl::SwizzleState" = type { i32, i32, i32, i32 }
%"class.gl::SamplerState" = type { i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, %"struct.angle::ColorGeneric", %"union.gl::SamplerState::Completeness" }
%"struct.angle::ColorGeneric" = type <{ %union.anon.262, i8, [3 x i8] }>
%union.anon.262 = type { %"struct.angle::Color" }
%"struct.angle::Color" = type { float, float, float, float }
%"union.gl::SamplerState::Completeness" = type { i32 }
%"class.std::__1::vector.265" = type { %"class.std::__1::__vector_base.266" }
%"class.std::__1::__vector_base.266" = type { %"struct.gl::ImageDesc"*, %"struct.gl::ImageDesc"*, %"class.std::__1::__compressed_pair.267" }
%"struct.gl::ImageDesc" = type <{ %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.gl::ImageDesc"* }
%"class.gl::OffsetBindingPointer" = type { %"class.gl::BindingPointer.272", i64, i64 }
%"class.gl::BindingPointer.272" = type { %"class.angle::BindingPointer.273" }
%"class.angle::BindingPointer.273" = type { i32 (...)**, %"class.gl::Buffer"* }
%"class.gl::Buffer" = type { %"class.gl::RefCountObject.base.62", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.angle::Subject", %"class.gl::BufferState", %"class.rx::BufferImpl"*, %"class.angle::ObserverBinding", %"class.gl::IndexRangeCache" }
%"class.gl::RefCountObject.base.62" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::BufferID" }>
%"struct.gl::BufferID" = type { i32 }
%"class.gl::BufferState" = type <{ %"class.std::__1::basic_string", i8, [7 x i8], i64, i32, i32, i8, [7 x i8], i8*, i64, i64, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.rx::BufferImpl" = type { %"class.angle::Subject", %"class.gl::BufferState"* }
%"class.gl::IndexRangeCache" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.63" }
%"class.std::__1::__tree.63" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::BitSetT.274" = type { i64 }
%"class.rx::TextureImpl" = type opaque
%"class.egl::Stream" = type { %"class.egl::LabeledObject", i8*, %"class.egl::Display"*, %"class.rx::StreamProducerImpl"*, %"class.gl::Context"*, i32, i64, i64, i32, i32, i32, %"struct.std::__1::array.275", i32, i32 }
%"class.rx::StreamProducerImpl" = type opaque
%"class.gl::Context" = type <{ %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::State", i8, i8, i8, i8, [4 x i8], %"class.gl::ErrorSet", %"class.angle::BitSetT.547", [4 x i8], %"class.std::__1::unique_ptr.548", i8*, %"struct.gl::Extensions", [4 x i8], %"class.gl::BindingPointer", %"struct.egl::Config"*, %"class.angle::PackedEnumMap.554", %"class.gl::ResourceMap.556", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.566", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.576", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.586", %"class.gl::HandleAllocator", i8*, i8*, i8*, i8*, %"class.std::__1::vector.596", i8*, %"class.std::__1::vector.596", %"class.std::__1::unique_ptr.603", i8, i8, i8, i8, i32, i8, i8, i8, [5 x i8], %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.egl::Display"*, i8, i8, i8, [5 x i8], %"class.gl::MemoryProgramCache"*, %"class.angle::BitSetT.36", %"class.gl::StateCache", %"class.angle::BitSetT.176", %"class.angle::BitSetT.176", %"class.angle::BitSetT.36", %"class.angle::BitSetT.176", %"class.angle::BitSetT.36", %"class.angle::BitSetT.176", %"class.angle::BitSetT.36", %"class.angle::BitSetT.176", %"class.angle::BitSetT.36", %"class.angle::BitSetT.176", %"class.angle::BitSetT.36", %"class.angle::BitSetT.176", %"class.angle::BitSetT.36", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::vector.325", %"class.std::__1::vector.325", %"class.std::__1::vector.325", %struct.Optional.617, %struct.Optional.617, %"class.std::__1::shared_ptr.618", %"class.std::__1::unique_ptr.619", %"class.std::__1::basic_string", i64, %"class.gl::MockOverlay", i8, i8, i8, [4 x i8] }>
%"class.gl::State" = type <{ %"struct.gl::ContextID", i32, i32, %"struct.gl::Version", [4 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"class.egl::ShareGroup"*, %"class.gl::BufferManager"*, %"class.gl::ShaderProgramManager"*, %"class.gl::TextureManager"*, %"class.gl::RenderbufferManager"*, %"class.gl::SamplerManager"*, %"class.gl::SyncManager"*, %"class.gl::FramebufferManager"*, %"class.gl::ProgramPipelineManager"*, %"class.gl::MemoryObjectManager"*, %"class.gl::SemaphoreManager"*, i32, i32, %"struct.angle::Color", float, i32, %"struct.gl::RasterizerState", i8, [3 x i8], %"struct.gl::Rectangle", %"struct.gl::BlendState", [4 x i8], %"class.gl::BlendStateExt", %"struct.angle::Color", i8, i8, [2 x i8], float, i8, i8, [2 x i8], i32, %"struct.std::__1::array.384", i8, [3 x i8], float, %"struct.gl::DepthStencilState", i32, i32, float, i32, i32, i32, i8, i8, [2 x i8], %"struct.gl::Rectangle", float, float, i32, i32, %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"*, %"class.gl::BindingPointer.385", %"class.gl::Program"*, %"class.gl::BindingPointer.387", %"class.gl::ProgramExecutable"*, i8, [7 x i8], %"class.std::__1::vector.389", %"class.gl::VertexArray"*, %"class.angle::BitSetT.35", i64, %"class.angle::PackedEnumMap.417", %"class.gl::ActiveTexturesCache", %"class.std::__1::vector.325", %"class.angle::BitSetArray", %"class.std::__1::vector.429", %"class.std::__1::vector.438", %"class.angle::PackedEnumMap.445", %"class.angle::PackedEnumMap.449", %"class.std::__1::vector.451", %"class.std::__1::vector.451", %"class.std::__1::vector.451", %"class.angle::BitSetArray.458", %"class.angle::BitSetT.459", %"class.angle::BitSetT.176", %"class.gl::BindingPointer.460", %"struct.gl::PixelUnpackState", %"struct.gl::PixelPackState", i8, [3 x i8], %"class.gl::Debug", i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, %"class.angle::BitSetT.487", i32, %"class.gl::GLES1State", %"class.angle::BitSetT.176", %"class.angle::BitSetT.546", [4 x i8], %"class.angle::BitSetT.36", %"class.angle::BitSetT.174", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.gl::MockOverlay"*, %"class.angle::BitSetT", %"class.angle::BitSetT", i8, [5 x i8] }>
%"struct.gl::ContextID" = type { i32 }
%"class.egl::ShareGroup" = type { i64, %"class.rx::ShareGroupImpl"*, %"class.rx::SerialFactoryBase", %"class.std::__1::unique_ptr.649" }
%"class.rx::ShareGroupImpl" = type { i32 (...)** }
%"class.rx::SerialFactoryBase" = type { i64 }
%"class.std::__1::unique_ptr.649" = type { %"class.std::__1::__compressed_pair.650" }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.651" }
%"struct.std::__1::__compressed_pair_elem.651" = type { %"class.angle::FrameCaptureShared"* }
%"class.angle::FrameCaptureShared" = type opaque
%"class.gl::BufferManager" = type { %"class.gl::TypedResourceManager" }
%"class.gl::TypedResourceManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap" }
%"class.gl::ResourceMap" = type { i64, %"class.gl::Buffer"**, %"class.absl::flat_hash_map" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair.1474" }
%"struct.std::__1::pair.1474" = type { i32, %"class.gl::Buffer"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ShaderProgramManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.78", %"class.gl::ResourceMap.132" }
%"class.gl::ResourceMap.78" = type { i64, %"class.gl::Shader"**, %"class.absl::flat_hash_map.123" }
%"class.gl::Shader" = type { %"class.gl::LabeledObject", %"class.gl::ShaderState", %"class.std::__1::unique_ptr.95", %"struct.gl::Limitations", %"struct.gl::ShaderProgramID", i8, i32, i8, %"class.std::__1::basic_string", %"class.gl::BindingPointer", %"class.std::__1::unique_ptr.117", %"class.std::__1::basic_string", %"class.gl::ShaderProgramManager"*, i32, i32 }
%"class.gl::ShaderState" = type <{ %"class.std::__1::basic_string", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::vector.28", %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", [4 x i8], %"class.std::__1::vector.79", %"class.std::__1::vector.79", %"class.std::__1::vector.79", %"class.std::__1::vector.86", %"class.std::__1::vector.86", %"class.std::__1::vector.79", %"class.std::__1::vector.79", %"class.std::__1::vector.79", i8, [3 x i8], %"class.angle::BitSetT.93", i32, %struct.Optional, %struct.Optional, %struct.Optional.94, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.std::__1::vector.86" = type { %"class.std::__1::__vector_base.87" }
%"class.std::__1::__vector_base.87" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.88" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.79" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.sh::InterfaceBlock"* }
%"class.std::__1::vector.79" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.81" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.28", i8, i8, %"class.std::__1::vector.79", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.sh::ShaderVariable"* }
%"class.angle::BitSetT.93" = type { i32 }
%struct.Optional = type { i8, i8 }
%struct.Optional.94 = type { i8, i32 }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.rx::ShaderImpl"* }
%"class.rx::ShaderImpl" = type opaque
%"struct.gl::ShaderProgramID" = type { i32 }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.gl::Shader::CompilingState"* }
%"struct.gl::Shader::CompilingState" = type opaque
%"class.absl::flat_hash_map.123" = type { %"class.absl::container_internal::raw_hash_map.124" }
%"class.absl::container_internal::raw_hash_map.124" = type { %"class.absl::container_internal::raw_hash_set.125" }
%"class.absl::container_internal::raw_hash_set.125" = type { i8*, %"union.absl::container_internal::map_slot_type.126"*, i64, i64, %"class.absl::container_internal::CompressedTuple.127" }
%"union.absl::container_internal::map_slot_type.126" = type opaque
%"class.absl::container_internal::CompressedTuple.127" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.128" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.128" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.132" = type { i64, %"class.gl::Program"**, %"class.absl::flat_hash_map.249" }
%"class.absl::flat_hash_map.249" = type { %"class.absl::container_internal::raw_hash_map.250" }
%"class.absl::container_internal::raw_hash_map.250" = type { %"class.absl::container_internal::raw_hash_set.251" }
%"class.absl::container_internal::raw_hash_set.251" = type { i8*, %"union.absl::container_internal::map_slot_type.252"*, i64, i64, %"class.absl::container_internal::CompressedTuple.253" }
%"union.absl::container_internal::map_slot_type.252" = type { %"struct.std::__1::pair.1476" }
%"struct.std::__1::pair.1476" = type { i32, %"class.gl::Program"* }
%"class.absl::container_internal::CompressedTuple.253" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.254" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.254" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::RenderbufferManager" = type { %"class.gl::TypedResourceManager.287" }
%"class.gl::TypedResourceManager.287" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.288" }
%"class.gl::ResourceMap.288" = type { i64, %"class.gl::Renderbuffer"**, %"class.absl::flat_hash_map.289" }
%"class.gl::Renderbuffer" = type { %"class.gl::RefCountObject.base", %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::RenderbufferState", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::RenderbufferID" }>
%"struct.gl::RenderbufferID" = type { i32 }
%"class.gl::RenderbufferState" = type <{ i32, i32, %"struct.gl::Format", i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.rx::RenderbufferImpl"* }
%"class.rx::RenderbufferImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::RenderbufferState"* }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.absl::flat_hash_map.289" = type { %"class.absl::container_internal::raw_hash_map.290" }
%"class.absl::container_internal::raw_hash_map.290" = type { %"class.absl::container_internal::raw_hash_set.291" }
%"class.absl::container_internal::raw_hash_set.291" = type { i8*, %"union.absl::container_internal::map_slot_type.292"*, i64, i64, %"class.absl::container_internal::CompressedTuple.293" }
%"union.absl::container_internal::map_slot_type.292" = type { %"struct.std::__1::pair.1480" }
%"struct.std::__1::pair.1480" = type { i32, %"class.gl::Renderbuffer"* }
%"class.absl::container_internal::CompressedTuple.293" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.294" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.294" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SamplerManager" = type { %"class.gl::TypedResourceManager.298" }
%"class.gl::TypedResourceManager.298" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.299" }
%"class.gl::ResourceMap.299" = type { i64, %"class.gl::Sampler"**, %"class.absl::flat_hash_map.302" }
%"class.gl::Sampler" = type { %"class.gl::RefCountObject.base.301", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::SamplerState", i8, %"class.rx::SamplerImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.301" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::SamplerID" }>
%"struct.gl::SamplerID" = type { i32 }
%"class.rx::SamplerImpl" = type opaque
%"class.absl::flat_hash_map.302" = type { %"class.absl::container_internal::raw_hash_map.303" }
%"class.absl::container_internal::raw_hash_map.303" = type { %"class.absl::container_internal::raw_hash_set.304" }
%"class.absl::container_internal::raw_hash_set.304" = type { i8*, %"union.absl::container_internal::map_slot_type.305"*, i64, i64, %"class.absl::container_internal::CompressedTuple.306" }
%"union.absl::container_internal::map_slot_type.305" = type { %"struct.std::__1::pair.1482" }
%"struct.std::__1::pair.1482" = type { i32, %"class.gl::Sampler"* }
%"class.absl::container_internal::CompressedTuple.306" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.307" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.307" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SyncManager" = type { %"class.gl::TypedResourceManager.311" }
%"class.gl::TypedResourceManager.311" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.312" }
%"class.gl::ResourceMap.312" = type { i64, %"class.gl::Sync"**, %"class.absl::flat_hash_map.313" }
%"class.gl::Sync" = type opaque
%"class.absl::flat_hash_map.313" = type { %"class.absl::container_internal::raw_hash_map.314" }
%"class.absl::container_internal::raw_hash_map.314" = type { %"class.absl::container_internal::raw_hash_set.315" }
%"class.absl::container_internal::raw_hash_set.315" = type { i8*, %"union.absl::container_internal::map_slot_type.316"*, i64, i64, %"class.absl::container_internal::CompressedTuple.317" }
%"union.absl::container_internal::map_slot_type.316" = type opaque
%"class.absl::container_internal::CompressedTuple.317" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.318" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.318" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::FramebufferManager" = type { %"class.gl::TypedResourceManager.322" }
%"class.gl::TypedResourceManager.322" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.323" }
%"class.gl::ResourceMap.323" = type { i64, %"class.gl::Framebuffer"**, %"class.absl::flat_hash_map.334" }
%"class.absl::flat_hash_map.334" = type { %"class.absl::container_internal::raw_hash_map.335" }
%"class.absl::container_internal::raw_hash_map.335" = type { %"class.absl::container_internal::raw_hash_set.336" }
%"class.absl::container_internal::raw_hash_set.336" = type { i8*, %"union.absl::container_internal::map_slot_type.337"*, i64, i64, %"class.absl::container_internal::CompressedTuple.338" }
%"union.absl::container_internal::map_slot_type.337" = type { %"struct.std::__1::pair.1484" }
%"struct.std::__1::pair.1484" = type { i32, %"class.gl::Framebuffer"* }
%"class.absl::container_internal::CompressedTuple.338" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.339" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.339" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramPipelineManager" = type { %"class.gl::TypedResourceManager.343" }
%"class.gl::TypedResourceManager.343" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.344" }
%"class.gl::ResourceMap.344" = type { i64, %"class.gl::ProgramPipeline"**, %"class.absl::flat_hash_map.355" }
%"class.gl::ProgramPipeline" = type { %"class.gl::RefCountObject.base.346", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::HasAttachedShaders", %"class.std::__1::unique_ptr.347", %"class.gl::ProgramPipelineState", %"class.std::__1::vector.325", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base.346" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::ProgramPipelineID" }>
%"struct.gl::ProgramPipelineID" = type { i32 }
%"class.gl::HasAttachedShaders" = type { i32 (...)** }
%"class.std::__1::unique_ptr.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"class.rx::ProgramPipelineImpl"* }
%"class.rx::ProgramPipelineImpl" = type opaque
%"class.gl::ProgramPipelineState" = type <{ %"class.std::__1::basic_string", %"class.gl::Program"*, %"class.angle::PackedEnumMap.353", i8, [7 x i8], %"class.gl::ProgramExecutable"*, i8, [7 x i8] }>
%"class.angle::PackedEnumMap.353" = type { %"struct.std::__1::array.354" }
%"struct.std::__1::array.354" = type { [6 x %"class.gl::Program"*] }
%"class.absl::flat_hash_map.355" = type { %"class.absl::container_internal::raw_hash_map.356" }
%"class.absl::container_internal::raw_hash_map.356" = type { %"class.absl::container_internal::raw_hash_set.357" }
%"class.absl::container_internal::raw_hash_set.357" = type { i8*, %"union.absl::container_internal::map_slot_type.358"*, i64, i64, %"class.absl::container_internal::CompressedTuple.359" }
%"union.absl::container_internal::map_slot_type.358" = type { %"struct.std::__1::pair.1486" }
%"struct.std::__1::pair.1486" = type { i32, %"class.gl::ProgramPipeline"* }
%"class.absl::container_internal::CompressedTuple.359" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.360" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.360" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::MemoryObjectManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.364" }
%"class.gl::ResourceMap.364" = type { i64, %"class.gl::MemoryObject"**, %"class.absl::flat_hash_map.365" }
%"class.gl::MemoryObject" = type opaque
%"class.absl::flat_hash_map.365" = type { %"class.absl::container_internal::raw_hash_map.366" }
%"class.absl::container_internal::raw_hash_map.366" = type { %"class.absl::container_internal::raw_hash_set.367" }
%"class.absl::container_internal::raw_hash_set.367" = type { i8*, %"union.absl::container_internal::map_slot_type.368"*, i64, i64, %"class.absl::container_internal::CompressedTuple.369" }
%"union.absl::container_internal::map_slot_type.368" = type opaque
%"class.absl::container_internal::CompressedTuple.369" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.370" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.370" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::RasterizerState" = type { i8, i8, i32, i8, float, float, i8, i8, i8, i8 }
%"struct.gl::BlendState" = type { i8, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%"class.gl::BlendStateExt" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.angle::BitSetT", %"class.angle::BitSetT", i64 }
%"struct.std::__1::array.384" = type { [2 x i32] }
%"struct.gl::DepthStencilState" = type { i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.gl::Framebuffer" = type { %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::FramebufferState", %"class.rx::FramebufferImpl"*, %struct.Optional.324, %"class.std::__1::vector.325", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::BitSetT.332", %"class.angle::BitSetT", %struct.Optional.333 }
%"class.gl::FramebufferState" = type { %"struct.gl::FramebufferID", %"class.rx::Serial", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.angle::BitSetT", %"class.std::__1::vector.28", i32, %"class.angle::BitSetT", %"class.angle::BitSetT.35", i32, i32, i32, i8, i32, %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", i8, %"class.angle::BitSetT.36", i8, %"class.gl::FramebufferAttachment", i32, %"struct.gl::Offset" }
%"struct.gl::FramebufferID" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.gl::FramebufferAttachment"* }
%"class.gl::FramebufferAttachment" = type { i32, %"class.gl::FramebufferAttachment::Target", %"class.gl::FramebufferAttachmentObject"*, i32, i8, i32, i32 }
%"class.gl::FramebufferAttachment::Target" = type { i32, %"class.gl::ImageIndex" }
%"struct.gl::Offset" = type { i32, i32, i32 }
%struct.Optional.324 = type { i8, %"struct.gl::FramebufferStatus" }
%"struct.gl::FramebufferStatus" = type { i32, i8* }
%"class.angle::BitSetT.332" = type { i64 }
%struct.Optional.333 = type { i8, %"class.angle::BitSetT.332" }
%"class.gl::BindingPointer.385" = type { %"class.angle::BindingPointer.386" }
%"class.angle::BindingPointer.386" = type { i32 (...)**, %"class.gl::Renderbuffer"* }
%"class.gl::Program" = type { %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::HasAttachedShaders", %"class.rx::Serial", %"class.gl::ProgramState", %"class.rx::ProgramImpl"*, i8, %"class.gl::ProgramBindings", %"class.gl::ProgramAliasedBindings", %"class.gl::ProgramAliasedBindings", i8, %"class.std::__1::unique_ptr.243", i8, i32, %"class.gl::ShaderProgramManager"*, %"struct.gl::ShaderProgramID", %"class.angle::BitSetT.209" }
%"class.gl::ProgramState" = type { %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", %"class.angle::PackedEnumMap.133", i32, %"class.std::__1::vector.135", %"class.std::__1::vector.142", %"class.std::__1::vector.149", %"class.gl::Range", %"class.angle::BitSetT", %"class.std::__1::vector.28", %"class.angle::BitSetT.35", i8, i8, i8, i8, %"class.angle::BitSetT.93", i32, i32, i32, i32, i32, i32, %"class.gl::ProgramAliasedBindings", %"class.std::__1::shared_ptr" }
%"class.angle::PackedEnumMap.133" = type { %"struct.std::__1::array.134" }
%"struct.std::__1::array.134" = type { [6 x %"class.gl::Shader"*] }
%"class.std::__1::vector.142" = type { %"class.std::__1::__vector_base.143" }
%"class.std::__1::__vector_base.143" = type { %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"*, %"class.std::__1::__compressed_pair.144" }
%"struct.gl::VariableLocation" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.gl::VariableLocation"* }
%"class.std::__1::vector.149" = type { %"class.std::__1::__vector_base.150" }
%"class.std::__1::__vector_base.150" = type { %"struct.gl::BufferVariable"*, %"struct.gl::BufferVariable"*, %"class.std::__1::__compressed_pair.152" }
%"struct.gl::BufferVariable" = type <{ %"struct.gl::ActiveVariable.base", [7 x i8], %"struct.sh::ShaderVariable", i32, %"struct.sh::BlockMemberInfo", i32, [4 x i8] }>
%"struct.gl::ActiveVariable.base" = type <{ i32 (...)**, %"class.angle::BitSetT.151" }>
%"class.angle::BitSetT.151" = type { i8 }
%"struct.sh::BlockMemberInfo" = type { i32, i32, i32, i8, i32 }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"struct.gl::BufferVariable"* }
%"class.gl::Range" = type { i32, i32 }
%"class.std::__1::shared_ptr" = type { %"class.gl::ProgramExecutable"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.rx::ProgramImpl" = type opaque
%"class.gl::ProgramBindings" = type { %"class.absl::flat_hash_map.234" }
%"class.absl::flat_hash_map.234" = type { %"class.absl::container_internal::raw_hash_map.235" }
%"class.absl::container_internal::raw_hash_map.235" = type { %"class.absl::container_internal::raw_hash_set.236" }
%"class.absl::container_internal::raw_hash_set.236" = type { i8*, %"union.absl::container_internal::map_slot_type.237"*, i64, i64, %"class.absl::container_internal::CompressedTuple.238" }
%"union.absl::container_internal::map_slot_type.237" = type opaque
%"class.absl::container_internal::CompressedTuple.238" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.239" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.239" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramAliasedBindings" = type { %"class.absl::flat_hash_map.157" }
%"class.absl::flat_hash_map.157" = type { %"class.absl::container_internal::raw_hash_map.158" }
%"class.absl::container_internal::raw_hash_map.158" = type { %"class.absl::container_internal::raw_hash_set.159" }
%"class.absl::container_internal::raw_hash_set.159" = type { i8*, %"union.absl::container_internal::map_slot_type.160"*, i64, i64, %"class.absl::container_internal::CompressedTuple.161" }
%"union.absl::container_internal::map_slot_type.160" = type opaque
%"class.absl::container_internal::CompressedTuple.161" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.162" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.162" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.gl::Program::LinkingState"* }
%"struct.gl::Program::LinkingState" = type opaque
%"class.angle::BitSetT.209" = type { i64 }
%"class.gl::BindingPointer.387" = type { %"class.angle::BindingPointer.388" }
%"class.angle::BindingPointer.388" = type { i32 (...)**, %"class.gl::ProgramPipeline"* }
%"class.gl::ProgramExecutable" = type <{ %"class.angle::Subject", %"class.gl::InfoLog", %"class.angle::BitSetT.151", %"class.angle::BitSetT.151", [6 x i8], %"class.angle::BitSetT.174", i32, [4 x i8], %"class.angle::BitSetT.35", %"class.angle::BitSetT.174", %"class.angle::BitSetArray", %"struct.std::__1::array.177", %"struct.std::__1::array.178", %"class.angle::BitSetArray", %"struct.std::__1::array.179", %"struct.std::__1::array.180", %"class.angle::BitSetArray", %"struct.std::__1::array.180", i8, [7 x i8], %"class.std::__1::vector.79", %"class.std::__1::vector.142", %"class.std::__1::vector.142", i8, [7 x i8], %"class.std::__1::vector.79", %"class.std::__1::vector.181", %"class.std::__1::vector.188", i32, [4 x i8], %"class.std::__1::vector.195", %"class.gl::Range", %"class.gl::Range", %"class.std::__1::vector.202", %"class.angle::BitSetT.209", %"class.std::__1::vector.210", %"class.gl::Range", %"class.std::__1::vector.202", %"class.std::__1::vector.202", %"class.gl::Range", %"class.std::__1::vector.217", %"class.std::__1::vector.224", %"class.std::__1::vector.224", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.angle::PackedEnumMap.231", %"class.angle::PackedEnumMap.231", %"class.angle::PackedEnumMap", i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, %struct.Optional.233, [6 x i8] }>
%"class.gl::InfoLog" = type { %"class.std::__1::unique_ptr.168" }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::array.177" = type { [96 x i32] }
%"struct.std::__1::array.178" = type { [96 x i8] }
%"struct.std::__1::array.179" = type { [96 x i8] }
%"struct.std::__1::array.180" = type { [96 x %"class.angle::BitSetT.151"] }
%"class.std::__1::vector.181" = type { %"class.std::__1::__vector_base.182" }
%"class.std::__1::__vector_base.182" = type { %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*, %"class.std::__1::__compressed_pair.183" }
%"struct.gl::TransformFeedbackVarying" = type <{ %"struct.sh::ShaderVariable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"struct.gl::TransformFeedbackVarying"* }
%"class.std::__1::vector.188" = type { %"class.std::__1::__vector_base.189" }
%"class.std::__1::__vector_base.189" = type { i32*, i32*, %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { i32* }
%"class.std::__1::vector.195" = type { %"class.std::__1::__vector_base.196" }
%"class.std::__1::__vector_base.196" = type { %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"*, %"class.std::__1::__compressed_pair.197" }
%"struct.gl::LinkedUniform" = type { %"struct.gl::ActiveVariable.base", %"struct.sh::ShaderVariable", %"struct.gl::UniformTypeInfo"*, i32, %"struct.sh::BlockMemberInfo", %"class.std::__1::vector.28" }
%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"struct.gl::LinkedUniform"* }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"*, %"class.std::__1::__compressed_pair.212" }
%"struct.gl::ShaderVariableBuffer" = type { %"struct.gl::ActiveVariable.base", i32, i32, %"class.std::__1::vector.28" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"struct.gl::ShaderVariableBuffer"* }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"*, %"class.std::__1::__compressed_pair.204" }
%"struct.gl::InterfaceBlock" = type <{ %"struct.gl::ShaderVariableBuffer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.gl::InterfaceBlock"* }
%"class.std::__1::vector.217" = type { %"class.std::__1::__vector_base.218" }
%"class.std::__1::__vector_base.218" = type { %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"*, %"class.std::__1::__compressed_pair.219" }
%"struct.gl::SamplerBinding" = type { i8, i32, i8, %"class.std::__1::vector.28" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"struct.gl::SamplerBinding"* }
%"class.std::__1::vector.224" = type { %"class.std::__1::__vector_base.225" }
%"class.std::__1::__vector_base.225" = type { %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"*, %"class.std::__1::__compressed_pair.226" }
%"struct.gl::ImageBinding" = type { i8, %"class.std::__1::vector.28" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"struct.gl::ImageBinding"* }
%"class.angle::PackedEnumMap.231" = type { %"struct.std::__1::array.232" }
%"struct.std::__1::array.232" = type { [6 x %"class.std::__1::vector.79"] }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array.38" }
%"struct.std::__1::array.38" = type { [6 x i32] }
%struct.Optional.233 = type { i8, i8 }
%"class.std::__1::vector.389" = type { %"class.std::__1::__vector_base.390" }
%"class.std::__1::__vector_base.390" = type { %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"*, %"class.std::__1::__compressed_pair.392" }
%"struct.gl::VertexAttribCurrentValueData" = type { %union.anon.391, i32 }
%union.anon.391 = type { [4 x float] }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"struct.gl::VertexAttribCurrentValueData"* }
%"class.gl::VertexArray" = type <{ %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"struct.gl::VertexArrayID", [4 x i8], %"class.gl::VertexArrayState", %"class.angle::BitSetT.411", %"struct.std::__1::array.412", %"struct.std::__1::array.414", %struct.Optional.416, %"class.rx::VertexArrayImpl"*, %"class.std::__1::vector.325", %"class.angle::BitSetT.174", %"class.gl::VertexArray::IndexRangeCache", i8, [7 x i8] }>
%"struct.gl::VertexArrayID" = type { i32 }
%"class.gl::VertexArrayState" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.397", %"class.gl::SubjectBindingPointer", %"class.std::__1::vector.404", %"class.angle::BitSetT.174", %"class.angle::BitSetT.35", %"class.angle::BitSetT.174", %"class.angle::BitSetT.174", %"class.angle::BitSetT.174", %"class.angle::BitSetT.174", %"class.angle::BitSetT.174" }
%"class.std::__1::vector.397" = type { %"class.std::__1::__vector_base.398" }
%"class.std::__1::__vector_base.398" = type { %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"*, %"class.std::__1::__compressed_pair.399" }
%"struct.gl::VertexAttribute" = type { i8, %"struct.angle::Format"*, i8*, i32, i32, i32, i64 }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"struct.gl::VertexAttribute"* }
%"class.gl::SubjectBindingPointer" = type { %"class.gl::BindingPointer.272", %"class.angle::ObserverBindingBase" }
%"class.std::__1::vector.404" = type { %"class.std::__1::__vector_base.405" }
%"class.std::__1::__vector_base.405" = type { %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"*, %"class.std::__1::__compressed_pair.406" }
%"class.gl::VertexBinding" = type { i32, i32, i64, %"class.gl::BindingPointer.272", %"class.angle::BitSetT.174" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.gl::VertexBinding"* }
%"class.angle::BitSetT.411" = type { i64 }
%"struct.std::__1::array.412" = type { [16 x %"class.angle::BitSetT.413"] }
%"class.angle::BitSetT.413" = type { i64 }
%"struct.std::__1::array.414" = type { [16 x %"class.angle::BitSetT.415"] }
%"class.angle::BitSetT.415" = type { i64 }
%struct.Optional.416 = type { i8, %"class.angle::BitSetT.411" }
%"class.rx::VertexArrayImpl" = type opaque
%"class.gl::VertexArray::IndexRangeCache" = type { i64, i32, i64, %"struct.gl::IndexRange" }
%"struct.gl::IndexRange" = type { i64, i64, i64 }
%"class.angle::BitSetT.35" = type { i64 }
%"class.angle::PackedEnumMap.417" = type { %"struct.std::__1::array.418" }
%"struct.std::__1::array.418" = type { [11 x %"class.std::__1::vector.419"] }
%"class.std::__1::vector.419" = type { %"class.std::__1::__vector_base.420" }
%"class.std::__1::__vector_base.420" = type { %"class.gl::BindingPointer.421"*, %"class.gl::BindingPointer.421"*, %"class.std::__1::__compressed_pair.423" }
%"class.gl::BindingPointer.421" = type { %"class.angle::BindingPointer.422" }
%"class.angle::BindingPointer.422" = type { i32 (...)**, %"class.gl::Texture"* }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424" }
%"struct.std::__1::__compressed_pair_elem.424" = type { %"class.gl::BindingPointer.421"* }
%"class.gl::ActiveTexturesCache" = type { %"struct.std::__1::array.428" }
%"struct.std::__1::array.428" = type { [96 x %"class.gl::Texture"*] }
%"class.std::__1::vector.429" = type { %"class.std::__1::__vector_base.430" }
%"class.std::__1::__vector_base.430" = type { %"class.gl::BindingPointer.431"*, %"class.gl::BindingPointer.431"*, %"class.std::__1::__compressed_pair.433" }
%"class.gl::BindingPointer.431" = type { %"class.angle::BindingPointer.432" }
%"class.angle::BindingPointer.432" = type { i32 (...)**, %"class.gl::Sampler"* }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.gl::BindingPointer.431"* }
%"class.std::__1::vector.438" = type { %"class.std::__1::__vector_base.439" }
%"class.std::__1::__vector_base.439" = type { %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"*, %"class.std::__1::__compressed_pair.440" }
%"struct.gl::ImageUnit" = type <{ %"class.gl::BindingPointer.421", i32, i8, [3 x i8], i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"struct.gl::ImageUnit"* }
%"class.angle::PackedEnumMap.445" = type { %"struct.std::__1::array.446" }
%"struct.std::__1::array.446" = type { [7 x %"class.gl::BindingPointer.447"] }
%"class.gl::BindingPointer.447" = type { %"class.angle::BindingPointer.448" }
%"class.angle::BindingPointer.448" = type { i32 (...)**, %"class.gl::Query"* }
%"class.gl::Query" = type opaque
%"class.angle::PackedEnumMap.449" = type { %"struct.std::__1::array.450" }
%"struct.std::__1::array.450" = type { [13 x %"class.gl::BindingPointer.272"] }
%"class.std::__1::vector.451" = type { %"class.std::__1::__vector_base.452" }
%"class.std::__1::__vector_base.452" = type { %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"*, %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.gl::OffsetBindingPointer"* }
%"class.angle::BitSetArray.458" = type { %"struct.std::__1::array.175" }
%"struct.std::__1::array.175" = type { [2 x %"class.angle::BitSetT.176"] }
%"class.angle::BitSetT.459" = type { i64 }
%"class.gl::BindingPointer.460" = type { %"class.angle::BindingPointer.461" }
%"class.angle::BindingPointer.461" = type { i32 (...)**, %"class.gl::TransformFeedback"* }
%"class.gl::TransformFeedback" = type { %"class.gl::RefCountObject.base.463", %"class.gl::LabeledObject", %"class.gl::TransformFeedbackState", %"class.rx::TransformFeedbackImpl"* }
%"class.gl::RefCountObject.base.463" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TransformFeedbackID" }>
%"struct.gl::TransformFeedbackID" = type { i32 }
%"class.gl::TransformFeedbackState" = type { %"class.std::__1::basic_string", i8, i8, i8, i64, i64, %"class.gl::Program"*, %"class.std::__1::vector.451" }
%"class.rx::TransformFeedbackImpl" = type opaque
%"struct.gl::PixelUnpackState" = type { %"struct.gl::PixelStoreStateBase" }
%"struct.gl::PixelStoreStateBase" = type { i32, i32, i32, i32, i32, i32 }
%"struct.gl::PixelPackState" = type <{ %"struct.gl::PixelStoreStateBase", i8, [3 x i8] }>
%"class.gl::Debug" = type { i8, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*, %"class.std::__1::deque", i32, i8, %"class.std::__1::vector.473" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.469" }
%"struct.std::__1::__split_buffer" = type { %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"class.std::__1::__compressed_pair.464" }
%"struct.gl::Debug::Message" = type { i32, i32, i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"struct.gl::Debug::Message"** }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.473" = type { %"class.std::__1::__vector_base.474" }
%"class.std::__1::__vector_base.474" = type { %"struct.gl::Debug::Group"*, %"struct.gl::Debug::Group"*, %"class.std::__1::__compressed_pair.482" }
%"struct.gl::Debug::Group" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.475" }
%"class.std::__1::vector.475" = type { %"class.std::__1::__vector_base.476" }
%"class.std::__1::__vector_base.476" = type { %"struct.gl::Debug::Control"*, %"struct.gl::Debug::Control"*, %"class.std::__1::__compressed_pair.477" }
%"struct.gl::Debug::Control" = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector.28", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"struct.gl::Debug::Control"* }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"struct.gl::Debug::Group"* }
%"class.angle::BitSetT.487" = type { i32 }
%"class.gl::GLES1State" = type <{ %"class.gl::State"*, %"class.angle::BitSetT.174", %"class.std::__1::vector.488", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.496", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", %"class.angle::Vector", %"class.std::__1::vector.501", i32, i8, [3 x i8], %"class.angle::FixedVector", %"class.angle::FixedVector", %"class.std::__1::vector.516", %"class.std::__1::vector.523", %"struct.gl::MaterialParameters", %"struct.gl::LightModelParameters", %"class.std::__1::vector.530", %"struct.gl::FogParameters", i8, [3 x i8], %"struct.gl::PointParameters", i8, [3 x i8], float, i8, [7 x i8], %"class.std::__1::vector.539", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::vector.488" = type { %"class.std::__1::__vector_base.489" }
%"class.std::__1::__vector_base.489" = type { %"class.angle::BitSetT.490"*, %"class.angle::BitSetT.490"*, %"class.std::__1::__compressed_pair.491" }
%"class.angle::BitSetT.490" = type opaque
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"class.angle::BitSetT.490"* }
%"class.std::__1::vector.496" = type { i64*, i64, %"class.std::__1::__compressed_pair.497" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::Vector" = type { %"class.angle::VectorBase" }
%"class.angle::VectorBase" = type { [3 x float] }
%"class.std::__1::vector.501" = type { %"class.std::__1::__vector_base.502" }
%"class.std::__1::__vector_base.502" = type { %"struct.gl::TextureCoordF"*, %"struct.gl::TextureCoordF"*, %"class.std::__1::__compressed_pair.503" }
%"struct.gl::TextureCoordF" = type { float, float, float, float }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"struct.gl::TextureCoordF"* }
%"class.angle::FixedVector" = type { %"struct.std::__1::array.508", i64 }
%"struct.std::__1::array.508" = type { [16 x %"class.angle::Mat4"] }
%"class.angle::Mat4" = type { %"class.angle::Matrix" }
%"class.angle::Matrix" = type { %"class.std::__1::vector.509", i32, i32 }
%"class.std::__1::vector.509" = type { %"class.std::__1::__vector_base.510" }
%"class.std::__1::__vector_base.510" = type { float*, float*, %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { float* }
%"class.std::__1::vector.516" = type { %"class.std::__1::__vector_base.517" }
%"class.std::__1::__vector_base.517" = type { %"class.angle::FixedVector"*, %"class.angle::FixedVector"*, %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"class.angle::FixedVector"* }
%"class.std::__1::vector.523" = type { %"class.std::__1::__vector_base.524" }
%"class.std::__1::__vector_base.524" = type { %"struct.gl::TextureEnvironmentParameters"*, %"struct.gl::TextureEnvironmentParameters"*, %"class.std::__1::__compressed_pair.525" }
%"struct.gl::TextureEnvironmentParameters" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", float, float, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"struct.gl::TextureEnvironmentParameters"* }
%"struct.gl::MaterialParameters" = type { %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", float }
%"struct.gl::LightModelParameters" = type <{ %"struct.angle::Color", i8, [3 x i8] }>
%"class.std::__1::vector.530" = type { %"class.std::__1::__vector_base.531" }
%"class.std::__1::__vector_base.531" = type { %"struct.gl::LightParameters"*, %"struct.gl::LightParameters"*, %"class.std::__1::__compressed_pair.534" }
%"struct.gl::LightParameters" = type { i8, %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"class.angle::Vector.532", %"class.angle::Vector", float, float, float, float, float }
%"class.angle::Vector.532" = type { %"class.angle::VectorBase.533" }
%"class.angle::VectorBase.533" = type { [4 x float] }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.gl::LightParameters"* }
%"struct.gl::FogParameters" = type { i8, float, float, float, %"struct.angle::Color" }
%"struct.gl::PointParameters" = type { float, float, float, %"class.angle::Vector", float }
%"class.std::__1::vector.539" = type { %"class.std::__1::__vector_base.540" }
%"class.std::__1::__vector_base.540" = type { %"struct.gl::ClipPlaneParameters"*, %"struct.gl::ClipPlaneParameters"*, %"class.std::__1::__compressed_pair.541" }
%"struct.gl::ClipPlaneParameters" = type { i8, %"class.angle::Vector.532" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"struct.gl::ClipPlaneParameters"* }
%"class.angle::BitSetT.546" = type { i32 }
%"class.angle::BitSetT.174" = type { i64 }
%"class.angle::BitSetArray" = type { %"struct.std::__1::array.175" }
%"class.gl::ErrorSet" = type { %"class.gl::Context"*, %"class.std::__1::set.44" }
%"class.std::__1::set.44" = type { %"class.std::__1::__tree.45" }
%"class.std::__1::__tree.45" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::BitSetT.547" = type { i32 }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.rx::ContextImpl"* }
%"class.rx::ContextImpl" = type { %"class.rx::GLImplFactory", %"class.gl::State"*, %"class.gl::MemoryProgramCache"*, %"class.gl::ErrorSet"* }
%"class.rx::GLImplFactory" = type { i32 (...)**, %"class.rx::SerialFactoryBase" }
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer.101" }
%"class.angle::BindingPointer.101" = type { i32 (...)**, %"class.gl::Compiler"* }
%"class.gl::Compiler" = type { %"class.angle::RefCountObject", %"class.std::__1::unique_ptr.102", i32, i32, %struct.ShBuiltInResources, %"class.angle::PackedEnumMap.108" }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.rx::CompilerImpl"* }
%"class.rx::CompilerImpl" = type opaque
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.41", %"struct.std::__1::array.41", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array.41" = type { [3 x i32] }
%"class.angle::PackedEnumMap.108" = type { %"struct.std::__1::array.109" }
%"struct.std::__1::array.109" = type { [6 x %"class.std::__1::vector.110"] }
%"class.std::__1::vector.110" = type { %"class.std::__1::__vector_base.111" }
%"class.std::__1::__vector_base.111" = type { %"class.gl::ShCompilerInstance"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::__compressed_pair.112" }
%"class.gl::ShCompilerInstance" = type <{ i8*, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.gl::ShCompilerInstance"* }
%"struct.egl::Config" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.554" = type { %"struct.std::__1::array.555" }
%"struct.std::__1::array.555" = type { [11 x %"class.gl::BindingPointer.421"] }
%"class.gl::ResourceMap.556" = type { i64, %"class.gl::FenceNV"**, %"class.absl::flat_hash_map.557" }
%"class.gl::FenceNV" = type opaque
%"class.absl::flat_hash_map.557" = type { %"class.absl::container_internal::raw_hash_map.558" }
%"class.absl::container_internal::raw_hash_map.558" = type { %"class.absl::container_internal::raw_hash_set.559" }
%"class.absl::container_internal::raw_hash_set.559" = type { i8*, %"union.absl::container_internal::map_slot_type.560"*, i64, i64, %"class.absl::container_internal::CompressedTuple.561" }
%"union.absl::container_internal::map_slot_type.560" = type opaque
%"class.absl::container_internal::CompressedTuple.561" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.566" = type { i64, %"class.gl::Query"**, %"class.absl::flat_hash_map.567" }
%"class.absl::flat_hash_map.567" = type { %"class.absl::container_internal::raw_hash_map.568" }
%"class.absl::container_internal::raw_hash_map.568" = type { %"class.absl::container_internal::raw_hash_set.569" }
%"class.absl::container_internal::raw_hash_set.569" = type { i8*, %"union.absl::container_internal::map_slot_type.570"*, i64, i64, %"class.absl::container_internal::CompressedTuple.571" }
%"union.absl::container_internal::map_slot_type.570" = type opaque
%"class.absl::container_internal::CompressedTuple.571" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.576" = type { i64, %"class.gl::VertexArray"**, %"class.absl::flat_hash_map.577" }
%"class.absl::flat_hash_map.577" = type { %"class.absl::container_internal::raw_hash_map.578" }
%"class.absl::container_internal::raw_hash_map.578" = type { %"class.absl::container_internal::raw_hash_set.579" }
%"class.absl::container_internal::raw_hash_set.579" = type { i8*, %"union.absl::container_internal::map_slot_type.580"*, i64, i64, %"class.absl::container_internal::CompressedTuple.581" }
%"union.absl::container_internal::map_slot_type.580" = type opaque
%"class.absl::container_internal::CompressedTuple.581" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.586" = type { i64, %"class.gl::TransformFeedback"**, %"class.absl::flat_hash_map.587" }
%"class.absl::flat_hash_map.587" = type { %"class.absl::container_internal::raw_hash_map.588" }
%"class.absl::container_internal::raw_hash_map.588" = type { %"class.absl::container_internal::raw_hash_set.589" }
%"class.absl::container_internal::raw_hash_set.589" = type { i8*, %"union.absl::container_internal::map_slot_type.590"*, i64, i64, %"class.absl::container_internal::CompressedTuple.591" }
%"union.absl::container_internal::map_slot_type.590" = type opaque
%"class.absl::container_internal::CompressedTuple.591" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.592" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.592" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::vector.596" = type { %"class.std::__1::__vector_base.597" }
%"class.std::__1::__vector_base.597" = type { i8**, i8**, %"class.std::__1::__compressed_pair.598" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.599" = type { i8** }
%"class.std::__1::unique_ptr.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.605" }
%"struct.std::__1::__compressed_pair_elem.605" = type { %"class.gl::GLES1Renderer"* }
%"class.gl::GLES1Renderer" = type opaque
%"class.gl::StateCache" = type <{ %"class.angle::BitSetT.174", %"class.angle::BitSetT.174", %"class.angle::BitSetT.174", i8, [7 x i8], i64, i64, i64, i64, i8, [7 x i8], %"class.angle::BitSetT.176", %"class.angle::BitSetArray", %"class.angle::PackedEnumMap.609", %"class.angle::PackedEnumMap.611", %"class.angle::PackedEnumMap.613", %"class.angle::PackedEnumMap.615", %"class.angle::PackedEnumMap.615", i8, [7 x i8] }>
%"class.angle::PackedEnumMap.609" = type { %"struct.std::__1::array.610" }
%"struct.std::__1::array.610" = type { [16 x i8] }
%"class.angle::PackedEnumMap.611" = type { %"struct.std::__1::array.612" }
%"struct.std::__1::array.612" = type { [12 x i8] }
%"class.angle::PackedEnumMap.613" = type { %"struct.std::__1::array.614" }
%"struct.std::__1::array.614" = type { [4 x i8] }
%"class.angle::PackedEnumMap.615" = type { %"struct.std::__1::array.616" }
%"struct.std::__1::array.616" = type { [19 x i32] }
%"class.angle::BitSetT.176" = type { i64 }
%"class.angle::BitSetT.36" = type { i64 }
%"class.std::__1::vector.325" = type { %"class.std::__1::__vector_base.326" }
%"class.std::__1::__vector_base.326" = type { %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"*, %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.angle::ObserverBinding"* }
%struct.Optional.617 = type { i8, %"class.angle::ScratchBuffer" }
%"class.angle::ScratchBuffer" = type { i32, i32, %"class.angle::MemoryBuffer" }
%"class.angle::MemoryBuffer" = type { i64, i8* }
%"class.std::__1::shared_ptr.618" = type { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WorkerThreadPool" = type { i32 (...)** }
%"class.std::__1::unique_ptr.619" = type { %"class.std::__1::__compressed_pair.620" }
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.621" }
%"struct.std::__1::__compressed_pair_elem.621" = type { %"class.angle::FrameCapture"* }
%"class.angle::FrameCapture" = type opaque
%"class.gl::MockOverlay" = type { %"class.gl::overlay::Mock" }
%"class.gl::overlay::Mock" = type { i8 }
%"struct.std::__1::array.275" = type { [3 x %"struct.egl::Stream::PlaneTexture"] }
%"struct.egl::Stream::PlaneTexture" = type { i32, %"class.gl::Texture"* }
%"class.angle::FastVector.276" = type { %"struct.std::__1::array.277", %"class.rx::Serial"*, i64, i64 }
%"struct.std::__1::array.277" = type { [8 x %"class.rx::Serial"] }
%"struct.gl::Texture::SamplerCompletenessCache" = type <{ %"struct.gl::ContextID", %"class.gl::SamplerState", i8, [3 x i8] }>
%"class.absl::flat_hash_map.278" = type { %"class.absl::container_internal::raw_hash_map.279" }
%"class.absl::container_internal::raw_hash_map.279" = type { %"class.absl::container_internal::raw_hash_set.280" }
%"class.absl::container_internal::raw_hash_set.280" = type { i8*, %"union.absl::container_internal::map_slot_type.281"*, i64, i64, %"class.absl::container_internal::CompressedTuple.282" }
%"union.absl::container_internal::map_slot_type.281" = type { %"struct.std::__1::pair.1478" }
%"struct.std::__1::pair.1478" = type { i32, %"class.gl::Texture"* }
%"class.absl::container_internal::CompressedTuple.282" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.283" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.283" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SemaphoreManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.374" }
%"class.gl::ResourceMap.374" = type { i64, %"class.gl::Semaphore"**, %"class.absl::flat_hash_map.375" }
%"class.gl::Semaphore" = type opaque
%"class.absl::flat_hash_map.375" = type { %"class.absl::container_internal::raw_hash_map.376" }
%"class.absl::container_internal::raw_hash_map.376" = type { %"class.absl::container_internal::raw_hash_set.377" }
%"class.absl::container_internal::raw_hash_set.377" = type { i8*, %"union.absl::container_internal::map_slot_type.378"*, i64, i64, %"class.absl::container_internal::CompressedTuple.379" }
%"union.absl::container_internal::map_slot_type.378" = type opaque
%"class.absl::container_internal::CompressedTuple.379" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.380" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.380" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.egl::BlobCache" = type { %"class.std::__1::mutex", %"class.angle::SizedMRUCache", void (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)* }
%"class.angle::SizedMRUCache" = type { i64, i64, %"class.angle::base::HashingMRUCache" }
%"class.angle::base::HashingMRUCache" = type { %"class.angle::base::MRUCacheBase" }
%"class.angle::base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::unordered_map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.625" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.629", %"class.std::__1::__compressed_pair.637", %"class.std::__1::__compressed_pair.642", %"class.std::__1::__compressed_pair.644", [4 x i8] }>
%"class.std::__1::unique_ptr.629" = type { %"class.std::__1::__compressed_pair.630" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.631", %"struct.std::__1::__compressed_pair_elem.632" }
%"struct.std::__1::__compressed_pair_elem.631" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.632" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.633" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.638" }
%"struct.std::__1::__compressed_pair_elem.638" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.std::__1::__compressed_pair_elem.645" = type { float }
%"class.gl::MemoryProgramCache" = type <{ %"class.egl::BlobCache"*, i32, [4 x i8] }>
%"struct.angle::FrontendFeatures" = type { %"struct.angle::FeatureSetBase", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature" }
%"struct.angle::FeatureSetBase" = type { %"class.std::__1::map.717" }
%"class.std::__1::map.717" = type { %"class.std::__1::__tree.718" }
%"class.std::__1::__tree.718" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.719", %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.angle::Feature" = type { i8*, i32, i8*, i8*, i8, i8* }
%"class.std::__1::vector.728" = type { %"class.std::__1::__vector_base.729" }
%"class.std::__1::__vector_base.729" = type { %"struct.angle::Feature"**, %"struct.angle::Feature"**, %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.angle::Feature"** }
%"class.std::__1::vector.735" = type { %"class.std::__1::__vector_base.736" }
%"class.std::__1::__vector_base.736" = type { %"class.angle::ScratchBuffer"*, %"class.angle::ScratchBuffer"*, %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.angle::ScratchBuffer"* }
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector.28", %"class.std::__1::vector.28", %"class.std::__1::vector.28", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap.39", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.41", %"struct.std::__1::array.41", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array.37", i32 }
%"struct.std::__1::array.37" = type { [2 x i32] }
%"class.angle::PackedEnumMap.39" = type { %"struct.std::__1::array.40" }
%"struct.std::__1::array.40" = type { [6 x i64] }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.42" }
%"class.angle::PackedEnumMap.42" = type { %"struct.std::__1::array.43" }
%"struct.std::__1::array.43" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set.44" }
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.angle::FeaturesVk" = type { %"struct.angle::FeatureSetBase", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.std::__1::array.845", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature" }
%"struct.std::__1::array.845" = type { [4 x %"struct.angle::Feature"] }
%struct.VkInstance_T = type opaque
%struct.VkDebugUtilsMessengerEXT_T = type opaque
%struct.VkDebugReportCallbackEXT_T = type opaque
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceLineRasterizationFeaturesEXT = type { i32, i8*, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceProvokingVertexFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceTransformFeedbackFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceIndexTypeUint8FeaturesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceSubgroupProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDeviceMemoryReportFeaturesEXT = type { i32, i8*, i32 }
%struct.VkDeviceDeviceMemoryReportCreateInfoEXT = type { i32, i8*, i32, void (%struct.VkDeviceMemoryReportCallbackDataEXT*, i8*)*, i8* }
%struct.VkDeviceMemoryReportCallbackDataEXT = type { i32, i8*, i32, i32, i64, i64, i32, i64, i32 }
%struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT = type { i32, i8*, i64 }
%struct.VkPhysicalDeviceShaderFloat16Int8Features = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceDepthStencilResolveProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceCustomBorderColorFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkExternalFenceProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceSamplerYcbcrConversionFeatures = type { i32, i8*, i32 }
%"class.std::__1::vector.846" = type { %"class.std::__1::__vector_base.847" }
%"class.std::__1::__vector_base.847" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.848" }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%"class.std::__1::__compressed_pair.848" = type { %"struct.std::__1::__compressed_pair_elem.849" }
%"struct.std::__1::__compressed_pair_elem.849" = type { %struct.VkQueueFamilyProperties* }
%"class.angle::PackedEnumMap.853" = type { %"struct.std::__1::array.854" }
%"struct.std::__1::array.854" = type { [3 x i8] }
%"class.rx::SerialFactoryBase.855" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.856" }
%"struct.std::__1::__atomic_base.856" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::vector.857" = type { %"class.std::__1::__vector_base.858" }
%"class.std::__1::__vector_base.858" = type { %"class.rx::vk::SharedGarbage"*, %"class.rx::vk::SharedGarbage"*, %"class.std::__1::__compressed_pair.866" }
%"class.rx::vk::SharedGarbage" = type { %"class.rx::vk::SharedResourceUse", %"class.std::__1::vector.859" }
%"class.std::__1::vector.859" = type { %"class.std::__1::__vector_base.860" }
%"class.std::__1::__vector_base.860" = type { %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"*, %"class.std::__1::__compressed_pair.861" }
%"class.rx::vk::GarbageObject" = type { i32, %"struct.rx::vk::GarbageHandle_T"* }
%"struct.rx::vk::GarbageHandle_T" = type opaque
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.rx::vk::GarbageObject"* }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.867" }
%"struct.std::__1::__compressed_pair_elem.867" = type { %"class.rx::vk::SharedGarbage"* }
%"class.rx::vk::MemoryProperties" = type { %struct.VkPhysicalDeviceMemoryProperties }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.rx::vk::FormatTable" = type { [8 x i8], %"struct.std::__1::array.871" }
%"struct.std::__1::array.871" = type { [227 x %"struct.rx::vk::Format"] }
%"class.rx::vk::PipelineCache" = type { %"class.rx::vk::WrappedObject.872" }
%"class.rx::vk::WrappedObject.872" = type { %struct.VkPipelineCache_T* }
%struct.VkPipelineCache_T = type opaque
%"class.angle::PackedEnumMap.873" = type { %"struct.std::__1::array.874" }
%"struct.std::__1::array.874" = type { [227 x %struct.VkFormatProperties] }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.rx::DebugAnnotatorVk" = type { %"class.angle::LoggingAnnotator" }
%"class.rx::vk::CommandPool" = type { %"class.rx::vk::WrappedObject.875" }
%"class.rx::vk::WrappedObject.875" = type { %struct.VkCommandPool_T* }
%struct.VkCommandPool_T = type opaque
%"class.std::__1::deque.876" = type { %"class.std::__1::__deque_base.877" }
%"class.std::__1::__deque_base.877" = type { %"struct.std::__1::__split_buffer.878", i64, %"class.std::__1::__compressed_pair.885" }
%"struct.std::__1::__split_buffer.878" = type { %"struct.rx::RendererVk::PendingOneOffCommands"**, %"struct.rx::RendererVk::PendingOneOffCommands"**, %"struct.rx::RendererVk::PendingOneOffCommands"**, %"class.std::__1::__compressed_pair.880" }
%"struct.rx::RendererVk::PendingOneOffCommands" = type { %"class.rx::Serial", %"class.rx::vk::priv::CommandBuffer" }
%"class.rx::vk::priv::CommandBuffer" = type { %"class.rx::vk::WrappedObject.879" }
%"class.rx::vk::WrappedObject.879" = type { %struct.VkCommandBuffer_T* }
%struct.VkCommandBuffer_T = type opaque
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"struct.rx::RendererVk::PendingOneOffCommands"** }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.rx::vk::CommandQueue" = type { %"class.rx::vk::CommandQueueInterface", %"class.std::__1::vector.889", %"class.std::__1::vector.896", %"class.rx::vk::priv::CommandBuffer", %"class.rx::vk::PersistentCommandPool", %"class.rx::SerialFactoryBase.855", %"class.rx::Serial", %"class.rx::Serial", %"class.rx::Serial", %"class.angle::PackedEnumMap.911", %"class.rx::vk::FenceRecycler" }
%"class.rx::vk::CommandQueueInterface" = type { i32 (...)** }
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { %"class.rx::vk::ObjectAndSerial"*, %"class.rx::vk::ObjectAndSerial"*, %"class.std::__1::__compressed_pair.891" }
%"class.rx::vk::ObjectAndSerial" = type opaque
%"class.std::__1::__compressed_pair.891" = type { %"struct.std::__1::__compressed_pair_elem.892" }
%"struct.std::__1::__compressed_pair_elem.892" = type { %"class.rx::vk::ObjectAndSerial"* }
%"class.std::__1::vector.896" = type { %"class.std::__1::__vector_base.897" }
%"class.std::__1::__vector_base.897" = type { %"struct.rx::vk::CommandBatch"*, %"struct.rx::vk::CommandBatch"*, %"class.std::__1::__compressed_pair.899" }
%"struct.rx::vk::CommandBatch" = type { [8 x i8], %"class.rx::vk::priv::CommandBuffer", %"class.rx::vk::CommandPool", %"class.rx::vk::Shared", %"class.rx::Serial" }
%"class.rx::vk::Shared" = type { %"class.rx::vk::RefCounted.898"* }
%"class.rx::vk::RefCounted.898" = type { i32, %"class.rx::vk::Fence" }
%"class.rx::vk::Fence" = type { %"class.rx::vk::WrappedObject.916" }
%"class.rx::vk::WrappedObject.916" = type { %struct.VkFence_T* }
%struct.VkFence_T = type opaque
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"struct.rx::vk::CommandBatch"* }
%"class.rx::vk::PersistentCommandPool" = type { %"class.std::__1::vector.904", %"class.rx::vk::CommandPool" }
%"class.std::__1::vector.904" = type { %"class.std::__1::__vector_base.905" }
%"class.std::__1::__vector_base.905" = type { %"class.rx::vk::priv::CommandBuffer"*, %"class.rx::vk::priv::CommandBuffer"*, %"class.std::__1::__compressed_pair.906" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.907" }
%"struct.std::__1::__compressed_pair_elem.907" = type { %"class.rx::vk::priv::CommandBuffer"* }
%"class.angle::PackedEnumMap.911" = type { %"struct.std::__1::array.912" }
%"struct.std::__1::array.912" = type { [3 x %struct.VkQueue_T*] }
%struct.VkQueue_T = type opaque
%"class.rx::vk::FenceRecycler" = type { %"class.std::__1::mutex", %"class.rx::vk::Recycler.913" }
%"class.rx::vk::Recycler.913" = type { %"class.std::__1::vector.914" }
%"class.std::__1::vector.914" = type { %"class.std::__1::__vector_base.915" }
%"class.std::__1::__vector_base.915" = type { %"class.rx::vk::Fence"*, %"class.rx::vk::Fence"*, %"class.std::__1::__compressed_pair.917" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.918" }
%"struct.std::__1::__compressed_pair_elem.918" = type { %"class.rx::vk::Fence"* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.922" = type { %"class.std::__1::__vector_base.923" }
%"class.std::__1::__vector_base.923" = type { %"class.rx::vk::CommandBufferHelper"**, %"class.rx::vk::CommandBufferHelper"**, %"class.std::__1::__compressed_pair.965" }
%"class.rx::vk::CommandBufferHelper" = type { [8 x i8], %"class.angle::PoolAllocator", %"class.angle::PackedEnumMap.931", %"class.angle::BitSetT.940", %"class.rx::vk::priv::SecondaryCommandBuffer", i32, %"class.rx::vk::RenderPassDesc", %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::Framebuffer", %"struct.gl::Rectangle", %"class.rx::vk::PackedClearValuesArray", i8, %"struct.std::__1::array.949", i32, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, %"struct.gl::Rectangle", %"struct.gl::Rectangle", %"class.rx::vk::PackedAttachmentIndex", %"class.angle::FastIntegerMap", %"class.angle::FastIntegerSet", %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"*, %"class.gl::LevelIndexWrapper", i32, i32, %"class.rx::vk::PackedAttachmentIndex", %"class.rx::vk::PackedImageAttachmentArray", %"class.rx::vk::PackedImageAttachmentArray", %"class.rx::vk::ImageHelper"* }
%"class.angle::PoolAllocator" = type <{ i64, i64, i64, i64, i64, %"struct.angle::PoolAllocator::Header"*, %"struct.angle::PoolAllocator::Header"*, %"class.std::__1::vector.924", i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.angle::PoolAllocator::Header" = type { %"struct.angle::PoolAllocator::Header"*, i64 }
%"class.std::__1::vector.924" = type { %"class.std::__1::__vector_base.925" }
%"class.std::__1::__vector_base.925" = type { %"struct.angle::PoolAllocator::AllocState"*, %"struct.angle::PoolAllocator::AllocState"*, %"class.std::__1::__compressed_pair.926" }
%"struct.angle::PoolAllocator::AllocState" = type { i64, %"struct.angle::PoolAllocator::Header"* }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"struct.angle::PoolAllocator::AllocState"* }
%"class.angle::PackedEnumMap.931" = type { %"struct.std::__1::array.932" }
%"struct.std::__1::array.932" = type { [14 x %"class.rx::vk::PipelineBarrier"] }
%"class.rx::vk::PipelineBarrier" = type { i32, i32, i32, i32, %"class.std::__1::vector.933" }
%"class.std::__1::vector.933" = type { %"class.std::__1::__vector_base.934" }
%"class.std::__1::__vector_base.934" = type { %struct.VkImageMemoryBarrier*, %struct.VkImageMemoryBarrier*, %"class.std::__1::__compressed_pair.935" }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.936" }
%"struct.std::__1::__compressed_pair_elem.936" = type { %struct.VkImageMemoryBarrier* }
%"class.angle::BitSetT.940" = type { i16 }
%"class.rx::vk::priv::SecondaryCommandBuffer" = type { i8, %"class.std::__1::vector.941", %"class.angle::PoolAllocator"*, i8*, i64 }
%"class.std::__1::vector.941" = type { %"class.std::__1::__vector_base.942" }
%"class.std::__1::__vector_base.942" = type { %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"**, %"class.std::__1::__compressed_pair.943" }
%"struct.rx::vk::priv::CommandHeader" = type { i16, i16 }
%"class.std::__1::__compressed_pair.943" = type { %"struct.std::__1::__compressed_pair_elem.944" }
%"struct.std::__1::__compressed_pair_elem.944" = type { %"struct.rx::vk::priv::CommandHeader"** }
%"class.rx::vk::AttachmentOpsArray" = type { %"struct.std::__1::array.948" }
%"struct.std::__1::array.948" = type { [10 x %"struct.rx::vk::PackedAttachmentOpsDesc"] }
%"struct.rx::vk::PackedAttachmentOpsDesc" = type { i32 }
%"class.rx::vk::PackedClearValuesArray" = type { %"struct.std::__1::array.843" }
%"struct.std::__1::array.949" = type { [4 x %struct.VkBuffer_T*] }
%"class.angle::FastIntegerMap" = type { %"class.angle::FastIntegerSet", %"class.std::__1::vector.957" }
%"class.std::__1::vector.957" = type { %"class.std::__1::__vector_base.958" }
%"class.std::__1::__vector_base.958" = type { i32*, i32*, %"class.std::__1::__compressed_pair.959" }
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.960" }
%"struct.std::__1::__compressed_pair_elem.960" = type { i32* }
%"class.angle::FastIntegerSet" = type { %"class.std::__1::vector.950" }
%"class.std::__1::vector.950" = type { %"class.std::__1::__vector_base.951" }
%"class.std::__1::__vector_base.951" = type { %"class.angle::BitSetT.176"*, %"class.angle::BitSetT.176"*, %"class.std::__1::__compressed_pair.952" }
%"class.std::__1::__compressed_pair.952" = type { %"struct.std::__1::__compressed_pair_elem.953" }
%"struct.std::__1::__compressed_pair_elem.953" = type { %"class.angle::BitSetT.176"* }
%"class.rx::vk::PackedAttachmentIndex" = type { i32 }
%"class.rx::vk::PackedImageAttachmentArray" = type { %"struct.std::__1::array.964" }
%"struct.std::__1::array.964" = type { [10 x %"class.rx::vk::ImageHelper"*] }
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.966" }
%"struct.std::__1::__compressed_pair_elem.966" = type { %"class.rx::vk::CommandBufferHelper"** }
%"class.rx::vk::CommandProcessor" = type { %"class.rx::vk::Context", %"class.rx::vk::CommandQueueInterface", %"class.std::__1::queue", %"class.std::__1::mutex", %"class.std::__1::condition_variable", %"class.std::__1::condition_variable", i8, %"class.rx::vk::CommandPool", %"class.rx::vk::CommandQueue", %"class.std::__1::mutex", %"class.std::__1::mutex", %"class.std::__1::queue.1001", %"class.std::__1::mutex", %"class.std::__1::condition_variable", %"class.std::__1::map.1014", %"class.std::__1::thread" }
%"class.rx::vk::Context" = type { i32 (...)**, %"class.rx::RendererVk"* }
%"class.std::__1::queue" = type { %"class.std::__1::deque.970" }
%"class.std::__1::deque.970" = type { %"class.std::__1::__deque_base.971" }
%"class.std::__1::__deque_base.971" = type { %"struct.std::__1::__split_buffer.972", i64, %"class.std::__1::__compressed_pair.993" }
%"struct.std::__1::__split_buffer.972" = type { %"class.rx::vk::CommandProcessorTask"**, %"class.rx::vk::CommandProcessorTask"**, %"class.rx::vk::CommandProcessorTask"**, %"class.std::__1::__compressed_pair.988" }
%"class.rx::vk::CommandProcessorTask" = type <{ i32, [4 x i8], %"class.rx::vk::RenderPass"*, %"class.rx::vk::CommandBufferHelper"*, %"class.std::__1::vector.974", %"class.std::__1::vector.28", %"class.rx::vk::Semaphore"*, %"class.std::__1::vector.859", %"class.rx::Serial", %struct.VkPresentInfoKHR, %struct.VkSwapchainKHR_T*, %struct.VkSemaphore_T*, i32, [4 x i8], %struct.VkPresentRegionKHR, %struct.VkPresentRegionsKHR, %"class.std::__1::vector.981", %struct.VkCommandBuffer_T*, %"class.rx::vk::Fence"*, i8, [7 x i8] }>
%"class.rx::vk::RenderPass" = type { %"class.rx::vk::WrappedObject.973" }
%"class.rx::vk::WrappedObject.973" = type { %struct.VkRenderPass_T* }
%struct.VkRenderPass_T = type opaque
%"class.std::__1::vector.974" = type { %"class.std::__1::__vector_base.975" }
%"class.std::__1::__vector_base.975" = type { %struct.VkSemaphore_T**, %struct.VkSemaphore_T**, %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %struct.VkSemaphore_T** }
%"class.rx::vk::Semaphore" = type { %"class.rx::vk::WrappedObject.805" }
%"class.rx::vk::WrappedObject.805" = type { %struct.VkSemaphore_T* }
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%struct.VkSwapchainKHR_T = type opaque
%struct.VkSemaphore_T = type opaque
%struct.VkPresentRegionKHR = type { i32, %struct.VkRectLayerKHR* }
%struct.VkRectLayerKHR = type { %struct.VkOffset2D, %struct.VkExtent2D, i32 }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkPresentRegionsKHR = type { i32, i8*, i32, %struct.VkPresentRegionKHR* }
%"class.std::__1::vector.981" = type { %"class.std::__1::__vector_base.982" }
%"class.std::__1::__vector_base.982" = type { %struct.VkRectLayerKHR*, %struct.VkRectLayerKHR*, %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { %struct.VkRectLayerKHR* }
%"class.std::__1::__compressed_pair.988" = type { %"struct.std::__1::__compressed_pair_elem.989" }
%"struct.std::__1::__compressed_pair_elem.989" = type { %"class.rx::vk::CommandProcessorTask"** }
%"class.std::__1::__compressed_pair.993" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::queue.1001" = type { %"class.std::__1::deque.1002" }
%"class.std::__1::deque.1002" = type { %"class.std::__1::__deque_base.1003" }
%"class.std::__1::__deque_base.1003" = type { %"struct.std::__1::__split_buffer.1004", i64, %"class.std::__1::__compressed_pair.1010" }
%"struct.std::__1::__split_buffer.1004" = type { %"struct.rx::vk::Error"**, %"struct.rx::vk::Error"**, %"struct.rx::vk::Error"**, %"class.std::__1::__compressed_pair.1005" }
%"struct.rx::vk::Error" = type { i32, i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.1006" }
%"struct.std::__1::__compressed_pair_elem.1006" = type { %"struct.rx::vk::Error"** }
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.997, %union.anon.999, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.997 = type { i64 }
%union.anon.999 = type { i64 }
%"class.std::__1::map.1014" = type { %"class.std::__1::__tree.1015" }
%"class.std::__1::__tree.1015" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1016", %"class.std::__1::__compressed_pair.1020" }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1020" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::thread" = type { i64 }
%"class.rx::vk::Allocator" = type { %"class.rx::vk::WrappedObject.1025" }
%"class.rx::vk::WrappedObject.1025" = type { %struct.VmaAllocator_T* }
%struct.VmaAllocator_T = type opaque
%"class.rx::SamplerCache" = type { %"class.rx::HasCacheStats", %"class.std::__1::unordered_map.1026" }
%"class.rx::HasCacheStats" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1026" = type { %"class.std::__1::__hash_table.1027" }
%"class.std::__1::__hash_table.1027" = type <{ %"class.std::__1::unique_ptr.1028", %"class.std::__1::__compressed_pair.1038", %"class.std::__1::__compressed_pair.1043", %"class.std::__1::__compressed_pair.1047", [4 x i8] }>
%"class.std::__1::unique_ptr.1028" = type { %"class.std::__1::__compressed_pair.1029" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.1030", %"struct.std::__1::__compressed_pair_elem.1032" }
%"struct.std::__1::__compressed_pair_elem.1030" = type { %"struct.std::__1::__hash_node_base.1031"** }
%"struct.std::__1::__hash_node_base.1031" = type { %"struct.std::__1::__hash_node_base.1031"* }
%"struct.std::__1::__compressed_pair_elem.1032" = type { %"class.std::__1::__bucket_list_deallocator.1033" }
%"class.std::__1::__bucket_list_deallocator.1033" = type { %"class.std::__1::__compressed_pair.1034" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.1039" }
%"struct.std::__1::__compressed_pair_elem.1039" = type { %"struct.std::__1::__hash_node_base.1031" }
%"class.std::__1::__compressed_pair.1043" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1047" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"class.rx::SamplerYcbcrConversionCache" = type { %"class.rx::HasCacheStats.1053", %"class.std::__1::unordered_map.1054" }
%"class.rx::HasCacheStats.1053" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1054" = type { %"class.std::__1::__hash_table.1055" }
%"class.std::__1::__hash_table.1055" = type <{ %"class.std::__1::unique_ptr.1056", %"class.std::__1::__compressed_pair.1066", %"class.std::__1::__compressed_pair.1071", %"class.std::__1::__compressed_pair.1075", [4 x i8] }>
%"class.std::__1::unique_ptr.1056" = type { %"class.std::__1::__compressed_pair.1057" }
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.1058", %"struct.std::__1::__compressed_pair_elem.1060" }
%"struct.std::__1::__compressed_pair_elem.1058" = type { %"struct.std::__1::__hash_node_base.1059"** }
%"struct.std::__1::__hash_node_base.1059" = type { %"struct.std::__1::__hash_node_base.1059"* }
%"struct.std::__1::__compressed_pair_elem.1060" = type { %"class.std::__1::__bucket_list_deallocator.1061" }
%"class.std::__1::__bucket_list_deallocator.1061" = type { %"class.std::__1::__compressed_pair.1062" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1066" = type { %"struct.std::__1::__compressed_pair_elem.1067" }
%"struct.std::__1::__compressed_pair_elem.1067" = type { %"struct.std::__1::__hash_node_base.1059" }
%"class.std::__1::__compressed_pair.1071" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"class.rx::vk::ActiveHandleCounter" = type { %"class.angle::PackedEnumMap.1081", %"class.angle::PackedEnumMap.1081" }
%"class.angle::PackedEnumMap.1081" = type { %"struct.std::__1::array.1082" }
%"struct.std::__1::array.1082" = type { [24 x i32] }
%"class.rx::vk::ResourceSerialFactory" = type { %"struct.std::__1::atomic.1083" }
%"struct.std::__1::atomic.1083" = type { %"struct.std::__1::__atomic_base.1084" }
%"struct.std::__1::__atomic_base.1084" = type { %"struct.std::__1::__atomic_base.1085" }
%"struct.std::__1::__atomic_base.1085" = type { %"struct.std::__1::__cxx_atomic_impl.1086" }
%"struct.std::__1::__cxx_atomic_impl.1086" = type { %"struct.std::__1::__cxx_atomic_base_impl.1087" }
%"struct.std::__1::__cxx_atomic_base_impl.1087" = type { i32 }
%"class.rx::vk::MemoryReport" = type { %"class.std::__1::mutex", i64, i64, %"class.absl::flat_hash_map.1088", i64, i64, %"class.absl::flat_hash_map.1103" }
%"class.absl::flat_hash_map.1088" = type { %"class.absl::container_internal::raw_hash_map.1089" }
%"class.absl::container_internal::raw_hash_map.1089" = type { %"class.absl::container_internal::raw_hash_set.1090" }
%"class.absl::container_internal::raw_hash_set.1090" = type { i8*, %"union.absl::container_internal::map_slot_type.1091"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1092" }
%"union.absl::container_internal::map_slot_type.1091" = type opaque
%"class.absl::container_internal::CompressedTuple.1092" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1093" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1093" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::flat_hash_map.1103" = type { %"class.absl::container_internal::raw_hash_map.1104" }
%"class.absl::container_internal::raw_hash_map.1104" = type { %"class.absl::container_internal::raw_hash_set.1105" }
%"class.absl::container_internal::raw_hash_set.1105" = type { i8*, %"union.absl::container_internal::map_slot_type.1106"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1107" }
%"union.absl::container_internal::map_slot_type.1106" = type opaque
%"class.absl::container_internal::CompressedTuple.1107" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1108" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1108" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.angle::PackedEnumMap.1116" = type { %"struct.std::__1::array.1117" }
%"struct.std::__1::array.1117" = type { [12 x %"class.rx::CacheStats"] }
%"class.std::__1::shared_ptr.1118" = type { %"class.rx::WaitableCompressEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.rx::WaitableCompressEvent" = type { i32 (...)**, %"class.std::__1::shared_ptr.1119" }
%"class.std::__1::shared_ptr.1119" = type { %"class.angle::WaitableEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WaitableEvent" = type { i32 (...)**, %"class.std::__1::shared_ptr.618" }
%"class.rx::WindowSurfaceVk" = type { %"class.rx::SurfaceVk", i64, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR, %"class.std::__1::vector.793", %struct.VkSwapchainKHR_T*, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.800", i64, %"class.std::__1::vector.801", %"class.std::__1::vector.816", %"class.std::__1::vector.325", %"class.rx::vk::Semaphore", i32, %"class.rx::vk::Recycler", %"class.rx::vk::ImageHelper", %"class.rx::vk::ImageViewHelper", %"class.angle::ObserverBinding", %"class.rx::vk::ImageHelper", %"class.rx::vk::ImageViewHelper", %"class.angle::ObserverBinding", %"class.rx::vk::Framebuffer", i8, i64 }
%"class.rx::SurfaceVk" = type { %"class.rx::SurfaceImpl", %"class.angle::ObserverInterface", %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk" }
%"class.rx::SurfaceImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"struct.egl::SurfaceState"* }
%"struct.egl::SurfaceState" = type opaque
%struct.VkSurfaceKHR_T = type opaque
%struct.VkSurfaceCapabilitiesKHR = type { i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32 }
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { i32*, i32*, %"class.std::__1::__compressed_pair.795" }
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.796" }
%"struct.std::__1::__compressed_pair_elem.796" = type { i32* }
%"struct.std::__1::array.800" = type { [2 x %"class.rx::Serial"] }
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"struct.rx::impl::SwapchainCleanupData"*, %"struct.rx::impl::SwapchainCleanupData"*, %"class.std::__1::__compressed_pair.811" }
%"struct.rx::impl::SwapchainCleanupData" = type { %struct.VkSwapchainKHR_T*, %"class.std::__1::vector.803" }
%"class.std::__1::vector.803" = type { %"class.std::__1::__vector_base.804" }
%"class.std::__1::__vector_base.804" = type { %"class.rx::vk::Semaphore"*, %"class.rx::vk::Semaphore"*, %"class.std::__1::__compressed_pair.806" }
%"class.std::__1::__compressed_pair.806" = type { %"struct.std::__1::__compressed_pair_elem.807" }
%"struct.std::__1::__compressed_pair_elem.807" = type { %"class.rx::vk::Semaphore"* }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { %"struct.rx::impl::SwapchainCleanupData"* }
%"class.std::__1::vector.816" = type { %"class.std::__1::__vector_base.817" }
%"class.std::__1::__vector_base.817" = type { %"struct.rx::impl::SwapchainImage"*, %"struct.rx::impl::SwapchainImage"*, %"class.std::__1::__compressed_pair.820" }
%"struct.rx::impl::SwapchainImage" = type { [8 x i8], %"class.rx::vk::ImageHelper", %"class.rx::vk::ImageViewHelper", %"class.rx::vk::Framebuffer", %"struct.std::__1::array.819", i64, i64 }
%"struct.std::__1::array.819" = type { [3 x %"struct.rx::impl::ImagePresentHistory"] }
%"struct.rx::impl::ImagePresentHistory" = type { [8 x i8], %"class.rx::vk::Semaphore", %"class.std::__1::vector.801" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"struct.rx::impl::SwapchainImage"* }
%"class.rx::vk::Recycler" = type { %"class.std::__1::vector.803" }
%"class.rx::ContextVk" = type { %"class.rx::ContextImpl", %"class.rx::vk::Context", %"class.rx::MultisampleTextureInitializer", %"struct.std::__1::array.1120", %"struct.std::__1::array.1121", %"class.rx::vk::priv::SecondaryCommandBuffer"*, %"class.rx::vk::PipelineHelper"*, %"class.rx::vk::ObjectAndSerial.1131"*, i8, %"class.rx::WindowSurfaceVk"*, i32, i32, %"class.std::__1::unique_ptr.1132", %"class.angle::BitSetT.1124", %"class.angle::PackedEnumMap.1138", %"class.angle::PackedEnumMap.1155", %"class.angle::PackedEnumMap.1172", %"class.angle::BitSetT.174", %"class.angle::BitSetT.174", %"class.angle::BitSetT.174", %"class.angle::BitSetT.174", %"class.angle::BitSetT.174", %"class.angle::BitSetT.174", %"class.rx::VertexArrayVk"*, %"class.rx::FramebufferVk"*, %"class.rx::ProgramVk"*, %"class.rx::ProgramPipelineVk"*, %"class.rx::ProgramExecutableVk"*, i8*, i64, i64, %"class.angle::PackedEnumMap.1183", i32, i32, %union.VkClearValue, %union.VkClearValue, i64, %"class.rx::IncompleteTextureSet", i8, i8, i8, i8, i8, %"class.angle::PackedEnumMap.1187", %"struct.std::__1::array.1201", %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc", %"struct.std::__1::array.1206", %"class.angle::BitSetT.174", %"struct.std::__1::array.1207", %"class.rx::vk::CommandPool", %"class.std::__1::vector.859", %"class.rx::RenderPassCache", %"class.rx::vk::CommandBufferHelper"*, %"class.rx::vk::CommandBufferHelper"*, %"class.angle::FastUnorderedSet", %"class.rx::vk::ShaderLibrary", %"class.rx::UtilsVk", i8, [7 x i8], %"class.rx::vk::DynamicQueryPool", %"class.std::__1::vector.1319", %"class.std::__1::vector.1327", i8, i8, i8, %"class.std::__1::vector.974", %"class.std::__1::vector.28", %"struct.rx::ContextVk::GpuClockSyncInfo", i64, %"struct.rx::vk::PerfCounters", %"struct.rx::ContextVkPerfCounters", %"struct.rx::ContextVkPerfCounters", %"class.angle::BitSetT.176", %"class.rx::vk::ResourceUseList", i8, %"class.std::__1::vector.1342", %"class.std::__1::vector.1349", %"class.std::__1::vector.1356", %"class.rx::ShareGroupVk"*, %"class.rx::vk::BufferHelper", %"class.rx::vk::DynamicBuffer", %"class.rx::vk::DynamicBuffer", %"class.std::__1::vector.135", %"class.std::__1::vector.135" }
%"class.rx::MultisampleTextureInitializer" = type { i32 (...)** }
%"struct.std::__1::array.1120" = type { [16 x { i64, i64 }] }
%"struct.std::__1::array.1121" = type { [16 x { i64, i64 }] }
%"class.rx::vk::PipelineHelper" = type { %"class.std::__1::vector.1122", %"class.rx::Serial", %"class.rx::vk::Pipeline" }
%"class.std::__1::vector.1122" = type { %"class.std::__1::__vector_base.1123" }
%"class.std::__1::__vector_base.1123" = type { %"struct.rx::vk::GraphicsPipelineTransition"*, %"struct.rx::vk::GraphicsPipelineTransition"*, %"class.std::__1::__compressed_pair.1125" }
%"struct.rx::vk::GraphicsPipelineTransition" = type { %"class.angle::BitSetT.1124", %"class.rx::vk::GraphicsPipelineDesc"*, %"class.rx::vk::PipelineHelper"* }
%"class.rx::vk::GraphicsPipelineDesc" = type { %"struct.rx::vk::VertexInputAttributes", %"class.rx::vk::RenderPassDesc", %"struct.rx::vk::PackedRasterizationAndMultisampleStateInfo", %"struct.rx::vk::PackedDepthStencilStateInfo", %"struct.rx::vk::PackedInputAssemblyAndColorBlendStateInfo", %struct.VkViewport, %"struct.rx::vk::PackedScissor", %"struct.rx::vk::PackedExtent" }
%"struct.rx::vk::VertexInputAttributes" = type { [16 x %"struct.rx::vk::PackedAttribDesc"] }
%"struct.rx::vk::PackedAttribDesc" = type { i8, i8, i16, i16 }
%"struct.rx::vk::PackedRasterizationAndMultisampleStateInfo" = type { %"struct.rx::vk::RasterizationStateBits", float, [2 x i32], float, float, float, float }
%"struct.rx::vk::RasterizationStateBits" = type { i32 }
%"struct.rx::vk::PackedDepthStencilStateInfo" = type { %"struct.rx::vk::DepthStencilEnableFlags", i8, i8, %"struct.rx::vk::DepthCompareOpAndSurfaceRotation", float, float, %"struct.rx::vk::PackedStencilOpState", %"struct.rx::vk::PackedStencilOpState" }
%"struct.rx::vk::DepthStencilEnableFlags" = type { i8 }
%"struct.rx::vk::DepthCompareOpAndSurfaceRotation" = type { i8 }
%"struct.rx::vk::PackedStencilOpState" = type { %"struct.rx::vk::StencilOps", i8, i8 }
%"struct.rx::vk::StencilOps" = type { i16 }
%"struct.rx::vk::PackedInputAssemblyAndColorBlendStateInfo" = type { [4 x i8], [8 x %"struct.rx::vk::PackedColorBlendAttachmentState"], [4 x float], %"struct.rx::vk::LogicOpState", i8, %"struct.rx::vk::PrimitiveState" }
%"struct.rx::vk::PackedColorBlendAttachmentState" = type { i32 }
%"struct.rx::vk::LogicOpState" = type { i8 }
%"struct.rx::vk::PrimitiveState" = type { i16 }
%struct.VkViewport = type { float, float, float, float, float, float }
%"struct.rx::vk::PackedScissor" = type { i16, i16, i16, i16 }
%"struct.rx::vk::PackedExtent" = type { i16, i16 }
%"class.std::__1::__compressed_pair.1125" = type { %"struct.std::__1::__compressed_pair_elem.1126" }
%"struct.std::__1::__compressed_pair_elem.1126" = type { %"struct.rx::vk::GraphicsPipelineTransition"* }
%"class.rx::vk::Pipeline" = type { %"class.rx::vk::WrappedObject.1130" }
%"class.rx::vk::WrappedObject.1130" = type { %struct.VkPipeline_T* }
%struct.VkPipeline_T = type opaque
%"class.rx::vk::ObjectAndSerial.1131" = type { [8 x i8], %"class.rx::vk::Pipeline", %"class.rx::Serial" }
%"class.std::__1::unique_ptr.1132" = type { %"class.std::__1::__compressed_pair.1133" }
%"class.std::__1::__compressed_pair.1133" = type { %"struct.std::__1::__compressed_pair_elem.1134" }
%"struct.std::__1::__compressed_pair_elem.1134" = type { %"class.rx::vk::GraphicsPipelineDesc"* }
%"class.angle::BitSetT.1124" = type { i64 }
%"class.angle::PackedEnumMap.1138" = type { %"struct.std::__1::array.1139" }
%"struct.std::__1::array.1139" = type { [2 x %"class.rx::vk::DynamicDescriptorPool"] }
%"class.rx::vk::DynamicDescriptorPool" = type { i64, %"class.std::__1::vector.1140", %"class.std::__1::vector.1148", %struct.VkDescriptorSetLayout_T* }
%"class.std::__1::vector.1140" = type { %"class.std::__1::__vector_base.1141" }
%"class.std::__1::__vector_base.1141" = type { %"class.rx::vk::RefCounted.1142"**, %"class.rx::vk::RefCounted.1142"**, %"class.std::__1::__compressed_pair.1143" }
%"class.rx::vk::RefCounted.1142" = type opaque
%"class.std::__1::__compressed_pair.1143" = type { %"struct.std::__1::__compressed_pair_elem.1144" }
%"struct.std::__1::__compressed_pair_elem.1144" = type { %"class.rx::vk::RefCounted.1142"** }
%"class.std::__1::vector.1148" = type { %"class.std::__1::__vector_base.1149" }
%"class.std::__1::__vector_base.1149" = type { %struct.VkDescriptorPoolSize*, %struct.VkDescriptorPoolSize*, %"class.std::__1::__compressed_pair.1150" }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%"class.std::__1::__compressed_pair.1150" = type { %"struct.std::__1::__compressed_pair_elem.1151" }
%"struct.std::__1::__compressed_pair_elem.1151" = type { %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorSetLayout_T = type opaque
%"class.angle::PackedEnumMap.1155" = type { %"struct.std::__1::array.1156" }
%"struct.std::__1::array.1156" = type { [7 x %"class.rx::vk::DynamicQueryPool"] }
%"class.angle::PackedEnumMap.1172" = type { %"struct.std::__1::array.1173" }
%"struct.std::__1::array.1173" = type { [7 x %"class.rx::QueryVk"*] }
%"class.rx::QueryVk" = type <{ %"class.rx::QueryImpl.base", [7 x i8], %"class.rx::vk::Shared.1174", %"class.std::__1::vector.1176", %"class.rx::vk::QueryHelper", i64, i64, i8, [7 x i8] }>
%"class.rx::QueryImpl.base" = type <{ i32 (...)**, i8 }>
%"class.rx::vk::Shared.1174" = type { %"class.rx::vk::RefCounted.1175"* }
%"class.rx::vk::RefCounted.1175" = type { i32, [4 x i8], %"class.rx::vk::QueryHelper" }
%"class.std::__1::vector.1176" = type { %"class.std::__1::__vector_base.1177" }
%"class.std::__1::__vector_base.1177" = type { %"class.rx::vk::Shared.1174"*, %"class.rx::vk::Shared.1174"*, %"class.std::__1::__compressed_pair.1178" }
%"class.std::__1::__compressed_pair.1178" = type { %"struct.std::__1::__compressed_pair_elem.1179" }
%"struct.std::__1::__compressed_pair_elem.1179" = type { %"class.rx::vk::Shared.1174"* }
%"class.rx::vk::QueryHelper" = type <{ %"class.rx::vk::Resource", %"class.rx::vk::DynamicQueryPool"*, i64, i32, [4 x i8] }>
%"class.rx::VertexArrayVk" = type opaque
%"class.rx::ProgramVk" = type opaque
%"class.rx::ProgramPipelineVk" = type opaque
%"class.rx::ProgramExecutableVk" = type opaque
%"class.angle::PackedEnumMap.1183" = type { %"struct.std::__1::array.1184" }
%"struct.std::__1::array.1184" = type { [3 x i32] }
%"class.rx::IncompleteTextureSet" = type { %"class.angle::PackedEnumMap.1185", %"class.gl::Buffer"* }
%"class.angle::PackedEnumMap.1185" = type { %"struct.std::__1::array.1186" }
%"struct.std::__1::array.1186" = type { [4 x %"class.angle::PackedEnumMap.554"] }
%"class.angle::PackedEnumMap.1187" = type { %"struct.std::__1::array.1188" }
%"struct.std::__1::array.1188" = type { [2 x %"struct.rx::ContextVk::DriverUniformsDescriptorSet"] }
%"struct.rx::ContextVk::DriverUniformsDescriptorSet" = type { %"class.rx::vk::DynamicBuffer", %struct.VkDescriptorSet_T*, i32, %"class.rx::vk::BindingPointer.1189", %"class.rx::vk::BindingPointer.1191", %"class.rx::DriverUniformsDescriptorSetCache" }
%struct.VkDescriptorSet_T = type opaque
%"class.rx::vk::BindingPointer.1189" = type { %"class.rx::vk::RefCounted.1190"* }
%"class.rx::vk::RefCounted.1190" = type opaque
%"class.rx::vk::BindingPointer.1191" = type { %"class.rx::vk::RefCounted.1142"* }
%"class.rx::DriverUniformsDescriptorSetCache" = type { %"class.rx::HasCacheStats.1192", %"class.angle::FastIntegerMap.1193" }
%"class.rx::HasCacheStats.1192" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.angle::FastIntegerMap.1193" = type { %"class.angle::FastIntegerSet", %"class.std::__1::vector.1194" }
%"class.std::__1::vector.1194" = type { %"class.std::__1::__vector_base.1195" }
%"class.std::__1::__vector_base.1195" = type { %struct.VkDescriptorSet_T**, %struct.VkDescriptorSet_T**, %"class.std::__1::__compressed_pair.1196" }
%"class.std::__1::__compressed_pair.1196" = type { %"struct.std::__1::__compressed_pair_elem.1197" }
%"struct.std::__1::__compressed_pair_elem.1197" = type { %struct.VkDescriptorSet_T** }
%"struct.std::__1::array.1201" = type { [96 x %"struct.rx::vk::TextureUnit"] }
%"struct.rx::vk::TextureUnit" = type { %"class.rx::TextureVk"*, %"class.rx::vk::SamplerHelper"*, i32 }
%"class.rx::TextureVk" = type opaque
%"class.rx::vk::SamplerHelper" = type <{ [8 x i8], %"class.rx::vk::Sampler", %"class.rx::vk::SamplerSerial", [4 x i8] }>
%"class.rx::vk::Sampler" = type { %"class.rx::vk::WrappedObject.1202" }
%"class.rx::vk::WrappedObject.1202" = type { %struct.VkSampler_T* }
%struct.VkSampler_T = type opaque
%"class.rx::vk::SamplerSerial" = type { i32 }
%"class.rx::vk::TextureDescriptorDesc" = type { i32, %"struct.std::__1::array.1203" }
%"struct.std::__1::array.1203" = type { [96 x %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"] }
%"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials" = type { %"struct.rx::vk::ImageOrBufferViewSubresourceSerial", %"class.rx::vk::SamplerSerial" }
%"class.rx::vk::ShaderBuffersDescriptorDesc" = type { %"class.angle::FastVector.1204" }
%"class.angle::FastVector.1204" = type { %"struct.std::__1::array.1205", i32*, i64, i64 }
%"struct.std::__1::array.1205" = type { [32 x i32] }
%"struct.std::__1::array.1206" = type { [96 x %"class.rx::TextureVk"*] }
%"struct.std::__1::array.1207" = type { [16 x %"class.rx::vk::DynamicBuffer"] }
%"class.rx::RenderPassCache" = type { %"class.absl::flat_hash_map.1208", %"class.rx::CacheStats", %"class.rx::CacheStats" }
%"class.absl::flat_hash_map.1208" = type { %"class.absl::container_internal::raw_hash_map.1209" }
%"class.absl::container_internal::raw_hash_map.1209" = type { %"class.absl::container_internal::raw_hash_set.1210" }
%"class.absl::container_internal::raw_hash_set.1210" = type { i8*, %"union.absl::container_internal::map_slot_type.1211"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1212" }
%"union.absl::container_internal::map_slot_type.1211" = type { %"struct.std::__1::pair.1454" }
%"struct.std::__1::pair.1454" = type { %"class.rx::vk::RenderPassDesc", %"class.absl::flat_hash_map.1455" }
%"class.absl::flat_hash_map.1455" = type { %"class.absl::container_internal::raw_hash_map.1456" }
%"class.absl::container_internal::raw_hash_map.1456" = type { %"class.absl::container_internal::raw_hash_set.1457" }
%"class.absl::container_internal::raw_hash_set.1457" = type { i8*, %"union.absl::container_internal::map_slot_type.1458"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1459" }
%"union.absl::container_internal::map_slot_type.1458" = type { %"struct.std::__1::pair.1471" }
%"struct.std::__1::pair.1471" = type { %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::RenderPassHelper" }
%"class.rx::vk::RenderPassHelper" = type <{ [8 x i8], %"class.rx::vk::RenderPass", %"struct.rx::vk::RenderPassPerfCounters", [3 x i8] }>
%"struct.rx::vk::RenderPassPerfCounters" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.absl::container_internal::CompressedTuple.1459" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1460" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1460" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::container_internal::CompressedTuple.1212" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1213" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1213" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.angle::FastUnorderedSet" = type { %"class.angle::FastVector.1223" }
%"class.angle::FastVector.1223" = type { %"struct.std::__1::array.1224", %"class.rx::vk::BufferHelper"**, i64, i64 }
%"struct.std::__1::array.1224" = type { [4 x %"class.rx::vk::BufferHelper"*] }
%"class.rx::vk::ShaderLibrary" = type { [8 x i8], [24 x %"class.rx::vk::RefCounted.1225"], [4 x %"class.rx::vk::RefCounted.1225"], [4 x %"class.rx::vk::RefCounted.1225"], [3 x %"class.rx::vk::RefCounted.1225"], [1 x %"class.rx::vk::RefCounted.1225"], [8 x %"class.rx::vk::RefCounted.1225"], [1 x %"class.rx::vk::RefCounted.1225"], [10 x %"class.rx::vk::RefCounted.1225"], [48 x %"class.rx::vk::RefCounted.1225"], [43 x %"class.rx::vk::RefCounted.1225"], [6 x %"class.rx::vk::RefCounted.1225"], [2 x %"class.rx::vk::RefCounted.1225"] }
%"class.rx::vk::RefCounted.1225" = type { i32, %"class.rx::vk::ObjectAndSerial.1226" }
%"class.rx::vk::ObjectAndSerial.1226" = type { [8 x i8], %"class.rx::vk::ShaderModule", %"class.rx::Serial" }
%"class.rx::vk::ShaderModule" = type { %"class.rx::vk::WrappedObject.1227" }
%"class.rx::vk::WrappedObject.1227" = type { %struct.VkShaderModule_T* }
%struct.VkShaderModule_T = type opaque
%"class.rx::UtilsVk" = type { [8 x i8], %"class.angle::PackedEnumMap.1228", %"class.angle::PackedEnumMap.1232", %"class.angle::PackedEnumMap.1236", [4 x %"class.rx::vk::ShaderProgramHelper"], [3 x %"class.rx::vk::ShaderProgramHelper"], [1 x %"class.rx::vk::ShaderProgramHelper"], [8 x %"class.rx::vk::ShaderProgramHelper"], %"class.rx::vk::ShaderProgramHelper", [48 x %"class.rx::vk::ShaderProgramHelper"], [43 x %"class.rx::vk::ShaderProgramHelper"], [24 x %"class.rx::vk::ShaderProgramHelper"], [4 x %"class.rx::vk::ShaderProgramHelper"], [6 x %"class.rx::vk::ShaderProgramHelper"], [2 x %"class.rx::vk::ShaderProgramHelper"], [10 x %"class.rx::vk::ShaderProgramHelper"], %"class.std::__1::unordered_map.1269", %"class.std::__1::unordered_map.1295", %"class.rx::vk::Sampler", %"class.rx::vk::Sampler", %"struct.rx::InternalShaderPerfCounters", %"struct.rx::InternalShaderPerfCounters" }
%"class.angle::PackedEnumMap.1228" = type { %"struct.std::__1::array.1229" }
%"struct.std::__1::array.1229" = type { [22 x %"class.angle::PackedEnumMap.1230"] }
%"class.angle::PackedEnumMap.1230" = type { %"struct.std::__1::array.1231" }
%"struct.std::__1::array.1231" = type { [4 x %"class.rx::vk::BindingPointer.1189"] }
%"class.angle::PackedEnumMap.1232" = type { %"struct.std::__1::array.1233" }
%"struct.std::__1::array.1233" = type { [22 x %"class.rx::vk::BindingPointer.1234"] }
%"class.rx::vk::BindingPointer.1234" = type { %"class.rx::vk::RefCounted.1235"* }
%"class.rx::vk::RefCounted.1235" = type opaque
%"class.angle::PackedEnumMap.1236" = type { %"struct.std::__1::array.1237" }
%"struct.std::__1::array.1237" = type { [22 x %"class.rx::vk::DynamicDescriptorPool"] }
%"class.rx::vk::ShaderProgramHelper" = type { [8 x i8], %"class.angle::PackedEnumMap.1238", %"class.rx::GraphicsPipelineCache", %"class.rx::vk::ObjectAndSerial.1131", %"struct.rx::vk::SpecializationConstants" }
%"class.angle::PackedEnumMap.1238" = type { %"struct.std::__1::array.1239" }
%"struct.std::__1::array.1239" = type { [6 x %"class.rx::vk::BindingPointer.1240"] }
%"class.rx::vk::BindingPointer.1240" = type { %"class.rx::vk::RefCounted.1225"* }
%"class.rx::GraphicsPipelineCache" = type { %"class.rx::HasCacheStats.1241", %"class.std::__1::unordered_map.1242" }
%"class.rx::HasCacheStats.1241" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1242" = type { %"class.std::__1::__hash_table.1243" }
%"class.std::__1::__hash_table.1243" = type <{ %"class.std::__1::unique_ptr.1244", %"class.std::__1::__compressed_pair.1254", %"class.std::__1::__compressed_pair.1259", %"class.std::__1::__compressed_pair.1263", [4 x i8] }>
%"class.std::__1::unique_ptr.1244" = type { %"class.std::__1::__compressed_pair.1245" }
%"class.std::__1::__compressed_pair.1245" = type { %"struct.std::__1::__compressed_pair_elem.1246", %"struct.std::__1::__compressed_pair_elem.1248" }
%"struct.std::__1::__compressed_pair_elem.1246" = type { %"struct.std::__1::__hash_node_base.1247"** }
%"struct.std::__1::__hash_node_base.1247" = type { %"struct.std::__1::__hash_node_base.1247"* }
%"struct.std::__1::__compressed_pair_elem.1248" = type { %"class.std::__1::__bucket_list_deallocator.1249" }
%"class.std::__1::__bucket_list_deallocator.1249" = type { %"class.std::__1::__compressed_pair.1250" }
%"class.std::__1::__compressed_pair.1250" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1254" = type { %"struct.std::__1::__compressed_pair_elem.1255" }
%"struct.std::__1::__compressed_pair_elem.1255" = type { %"struct.std::__1::__hash_node_base.1247" }
%"class.std::__1::__compressed_pair.1259" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1263" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.rx::vk::SpecializationConstants" = type { i32, i32, i32, i32 }
%"class.std::__1::unordered_map.1269" = type { %"class.std::__1::__hash_table.1270" }
%"class.std::__1::__hash_table.1270" = type <{ %"class.std::__1::unique_ptr.1271", %"class.std::__1::__compressed_pair.1281", %"class.std::__1::__compressed_pair.1286", %"class.std::__1::__compressed_pair.1291", [4 x i8] }>
%"class.std::__1::unique_ptr.1271" = type { %"class.std::__1::__compressed_pair.1272" }
%"class.std::__1::__compressed_pair.1272" = type { %"struct.std::__1::__compressed_pair_elem.1273", %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1273" = type { %"struct.std::__1::__hash_node_base.1274"** }
%"struct.std::__1::__hash_node_base.1274" = type { %"struct.std::__1::__hash_node_base.1274"* }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.std::__1::__bucket_list_deallocator.1276" }
%"class.std::__1::__bucket_list_deallocator.1276" = type { %"class.std::__1::__compressed_pair.1277" }
%"class.std::__1::__compressed_pair.1277" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1281" = type { %"struct.std::__1::__compressed_pair_elem.1282" }
%"struct.std::__1::__compressed_pair_elem.1282" = type { %"struct.std::__1::__hash_node_base.1274" }
%"class.std::__1::__compressed_pair.1286" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1291" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"class.std::__1::unordered_map.1295" = type { %"class.std::__1::__hash_table.1296" }
%"class.std::__1::__hash_table.1296" = type <{ %"class.std::__1::unique_ptr.1297", %"class.std::__1::__compressed_pair.1307", %"class.std::__1::__compressed_pair.1312", %"class.std::__1::__compressed_pair.1315", [4 x i8] }>
%"class.std::__1::unique_ptr.1297" = type { %"class.std::__1::__compressed_pair.1298" }
%"class.std::__1::__compressed_pair.1298" = type { %"struct.std::__1::__compressed_pair_elem.1299", %"struct.std::__1::__compressed_pair_elem.1301" }
%"struct.std::__1::__compressed_pair_elem.1299" = type { %"struct.std::__1::__hash_node_base.1300"** }
%"struct.std::__1::__hash_node_base.1300" = type { %"struct.std::__1::__hash_node_base.1300"* }
%"struct.std::__1::__compressed_pair_elem.1301" = type { %"class.std::__1::__bucket_list_deallocator.1302" }
%"class.std::__1::__bucket_list_deallocator.1302" = type { %"class.std::__1::__compressed_pair.1303" }
%"class.std::__1::__compressed_pair.1303" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1307" = type { %"struct.std::__1::__compressed_pair_elem.1308" }
%"struct.std::__1::__compressed_pair_elem.1308" = type { %"struct.std::__1::__hash_node_base.1300" }
%"class.std::__1::__compressed_pair.1312" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1315" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.rx::InternalShaderPerfCounters" = type { i32 }
%"class.rx::vk::DynamicQueryPool" = type { %"class.rx::vk::DynamicallyGrowingPool.base", i32 }
%"class.rx::vk::DynamicallyGrowingPool.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.std::__1::vector.1157", %"class.std::__1::vector.1165", i64, i32 }>
%"class.std::__1::vector.1157" = type { %"class.std::__1::__vector_base.1158" }
%"class.std::__1::__vector_base.1158" = type { %"class.rx::vk::QueryPool"*, %"class.rx::vk::QueryPool"*, %"class.std::__1::__compressed_pair.1160" }
%"class.rx::vk::QueryPool" = type { %"class.rx::vk::WrappedObject.1159" }
%"class.rx::vk::WrappedObject.1159" = type { %struct.VkQueryPool_T* }
%struct.VkQueryPool_T = type opaque
%"class.std::__1::__compressed_pair.1160" = type { %"struct.std::__1::__compressed_pair_elem.1161" }
%"struct.std::__1::__compressed_pair_elem.1161" = type { %"class.rx::vk::QueryPool"* }
%"class.std::__1::vector.1165" = type { %"class.std::__1::__vector_base.1166" }
%"class.std::__1::__vector_base.1166" = type { %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"*, %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"*, %"class.std::__1::__compressed_pair.1167" }
%"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats" = type opaque
%"class.std::__1::__compressed_pair.1167" = type { %"struct.std::__1::__compressed_pair_elem.1168" }
%"struct.std::__1::__compressed_pair_elem.1168" = type { %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"* }
%"class.std::__1::vector.1319" = type { %"class.std::__1::__vector_base.1320" }
%"class.std::__1::__vector_base.1320" = type { %"struct.rx::ContextVk::GpuEventQuery"*, %"struct.rx::ContextVk::GpuEventQuery"*, %"class.std::__1::__compressed_pair.1322" }
%"struct.rx::ContextVk::GpuEventQuery" = type { %"struct.std::__1::array.1321", i8, [7 x i8], %"class.rx::vk::QueryHelper" }
%"struct.std::__1::array.1321" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.1322" = type { %"struct.std::__1::__compressed_pair_elem.1323" }
%"struct.std::__1::__compressed_pair_elem.1323" = type { %"struct.rx::ContextVk::GpuEventQuery"* }
%"class.std::__1::vector.1327" = type { %"class.std::__1::__vector_base.1328" }
%"class.std::__1::__vector_base.1328" = type { %"struct.rx::ContextVk::GpuEvent"*, %"struct.rx::ContextVk::GpuEvent"*, %"class.std::__1::__compressed_pair.1329" }
%"struct.rx::ContextVk::GpuEvent" = type { i64, %"struct.std::__1::array.1321", i8 }
%"class.std::__1::__compressed_pair.1329" = type { %"struct.std::__1::__compressed_pair_elem.1330" }
%"struct.std::__1::__compressed_pair_elem.1330" = type { %"struct.rx::ContextVk::GpuEvent"* }
%"struct.rx::ContextVk::GpuClockSyncInfo" = type { double, double }
%"struct.rx::vk::PerfCounters" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.rx::ContextVkPerfCounters" = type { %"class.angle::PackedEnumMap.1334" }
%"class.angle::PackedEnumMap.1334" = type { %"struct.std::__1::array.384" }
%"class.rx::vk::ResourceUseList" = type { i32 (...)**, %"class.std::__1::vector.1335" }
%"class.std::__1::vector.1335" = type { %"class.std::__1::__vector_base.1336" }
%"class.std::__1::__vector_base.1336" = type { %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"*, %"class.std::__1::__compressed_pair.1337" }
%"class.std::__1::__compressed_pair.1337" = type { %"struct.std::__1::__compressed_pair_elem.1338" }
%"struct.std::__1::__compressed_pair_elem.1338" = type { %"class.rx::vk::SharedResourceUse"* }
%"class.std::__1::vector.1342" = type { %"class.std::__1::__vector_base.1343" }
%"class.std::__1::__vector_base.1343" = type { %struct.VkDescriptorBufferInfo*, %struct.VkDescriptorBufferInfo*, %"class.std::__1::__compressed_pair.1344" }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%"class.std::__1::__compressed_pair.1344" = type { %"struct.std::__1::__compressed_pair_elem.1345" }
%"struct.std::__1::__compressed_pair_elem.1345" = type { %struct.VkDescriptorBufferInfo* }
%"class.std::__1::vector.1349" = type { %"class.std::__1::__vector_base.1350" }
%"class.std::__1::__vector_base.1350" = type { %struct.VkDescriptorImageInfo*, %struct.VkDescriptorImageInfo*, %"class.std::__1::__compressed_pair.1351" }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %struct.VkDescriptorImageInfo* }
%"class.std::__1::vector.1356" = type { %"class.std::__1::__vector_base.1357" }
%"class.std::__1::__vector_base.1357" = type { %struct.VkWriteDescriptorSet*, %struct.VkWriteDescriptorSet*, %"class.std::__1::__compressed_pair.1358" }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkBufferView_T = type opaque
%"class.std::__1::__compressed_pair.1358" = type { %"struct.std::__1::__compressed_pair_elem.1359" }
%"struct.std::__1::__compressed_pair_elem.1359" = type { %struct.VkWriteDescriptorSet* }
%"class.rx::ShareGroupVk" = type <{ %"class.rx::ShareGroupImpl", %"class.rx::PipelineLayoutCache", %"class.rx::DescriptorSetLayoutCache", %"class.std::__1::set.1418", %"class.std::__1::vector.1428", i8, [7 x i8] }>
%"class.rx::PipelineLayoutCache" = type { %"class.rx::HasCacheStats.1363", %"class.std::__1::unordered_map.1364" }
%"class.rx::HasCacheStats.1363" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1364" = type { %"class.std::__1::__hash_table.1365" }
%"class.std::__1::__hash_table.1365" = type <{ %"class.std::__1::unique_ptr.1366", %"class.std::__1::__compressed_pair.1376", %"class.std::__1::__compressed_pair.1381", %"class.std::__1::__compressed_pair.1385", [4 x i8] }>
%"class.std::__1::unique_ptr.1366" = type { %"class.std::__1::__compressed_pair.1367" }
%"class.std::__1::__compressed_pair.1367" = type { %"struct.std::__1::__compressed_pair_elem.1368", %"struct.std::__1::__compressed_pair_elem.1370" }
%"struct.std::__1::__compressed_pair_elem.1368" = type { %"struct.std::__1::__hash_node_base.1369"** }
%"struct.std::__1::__hash_node_base.1369" = type { %"struct.std::__1::__hash_node_base.1369"* }
%"struct.std::__1::__compressed_pair_elem.1370" = type { %"class.std::__1::__bucket_list_deallocator.1371" }
%"class.std::__1::__bucket_list_deallocator.1371" = type { %"class.std::__1::__compressed_pair.1372" }
%"class.std::__1::__compressed_pair.1372" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1376" = type { %"struct.std::__1::__compressed_pair_elem.1377" }
%"struct.std::__1::__compressed_pair_elem.1377" = type { %"struct.std::__1::__hash_node_base.1369" }
%"class.std::__1::__compressed_pair.1381" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1385" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"class.rx::DescriptorSetLayoutCache" = type { %"class.std::__1::unordered_map.1391", %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1391" = type { %"class.std::__1::__hash_table.1392" }
%"class.std::__1::__hash_table.1392" = type <{ %"class.std::__1::unique_ptr.1393", %"class.std::__1::__compressed_pair.1403", %"class.std::__1::__compressed_pair.1408", %"class.std::__1::__compressed_pair.1412", [4 x i8] }>
%"class.std::__1::unique_ptr.1393" = type { %"class.std::__1::__compressed_pair.1394" }
%"class.std::__1::__compressed_pair.1394" = type { %"struct.std::__1::__compressed_pair_elem.1395", %"struct.std::__1::__compressed_pair_elem.1397" }
%"struct.std::__1::__compressed_pair_elem.1395" = type { %"struct.std::__1::__hash_node_base.1396"** }
%"struct.std::__1::__hash_node_base.1396" = type { %"struct.std::__1::__hash_node_base.1396"* }
%"struct.std::__1::__compressed_pair_elem.1397" = type { %"class.std::__1::__bucket_list_deallocator.1398" }
%"class.std::__1::__bucket_list_deallocator.1398" = type { %"class.std::__1::__compressed_pair.1399" }
%"class.std::__1::__compressed_pair.1399" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1403" = type { %"struct.std::__1::__compressed_pair_elem.1404" }
%"struct.std::__1::__compressed_pair_elem.1404" = type { %"struct.std::__1::__hash_node_base.1396" }
%"class.std::__1::__compressed_pair.1408" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1412" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"class.std::__1::set.1418" = type { %"class.std::__1::__tree.1419" }
%"class.std::__1::__tree.1419" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1420", %"class.std::__1::__compressed_pair.1424" }
%"class.std::__1::__compressed_pair.1420" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1424" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.1428" = type { %"class.std::__1::__vector_base.1429" }
%"class.std::__1::__vector_base.1429" = type { %"class.rx::vk::ResourceUseList"*, %"class.rx::vk::ResourceUseList"*, %"class.std::__1::__compressed_pair.1430" }
%"class.std::__1::__compressed_pair.1430" = type { %"struct.std::__1::__compressed_pair_elem.1431" }
%"struct.std::__1::__compressed_pair_elem.1431" = type { %"class.rx::vk::ResourceUseList"* }
%"struct.gl::Box" = type { i32, i32, i32, i32, i32, i32 }
%"class.gl::TraceEvent::TraceEndOnScopeClose" = type { %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"*, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data" }
%"struct.gl::TraceEvent::TraceEndOnScopeClose::Data" = type { %"struct.angle::PlatformMethods"*, i8*, i8* }
%"struct.angle::PlatformMethods" = type { i8*, double (%"struct.angle::PlatformMethods"*)*, double (%"struct.angle::PlatformMethods"*)*, void (%"struct.angle::PlatformMethods"*, i8*)*, void (%"struct.angle::PlatformMethods"*, i8*)*, void (%"struct.angle::PlatformMethods"*, i8*)*, {}*, i64 (%"struct.angle::PlatformMethods"*, i8, i8*, i8*, i64, double, i32, i8**, i8*, i64*, i8)*, void (%"struct.angle::PlatformMethods"*, i8*, i8*, i64)*, void (%"struct.angle::PlatformMethods"*, i8*, i32, i32, i32, i32)*, void (%"struct.angle::PlatformMethods"*, i8*, i32, i32)*, void (%"struct.angle::PlatformMethods"*, i8*, i32)*, void (%"struct.angle::PlatformMethods"*, i8*, i1)*, void (%"struct.angle::PlatformMethods"*, %"struct.angle::FeaturesD3D"*)*, void (%"struct.angle::PlatformMethods"*, %"struct.angle::FeaturesVk"*)*, void (%"struct.angle::PlatformMethods"*, %"struct.std::__1::array.1435"*, i64, i8*)*, void (%"struct.angle::PlatformMethods"*, %"struct.angle::FeaturesMtl"*)*, void (%"struct.angle::PlatformMethods"*, void (i8*)*, i8*)* }
%"struct.angle::FeaturesD3D" = type opaque
%"struct.std::__1::array.1435" = type { [20 x i8] }
%"struct.angle::FeaturesMtl" = type opaque
%"class.std::__1::vector.1443" = type { %"class.std::__1::__vector_base.1444" }
%"class.std::__1::__vector_base.1444" = type { %struct.VkImageView_T**, %struct.VkImageView_T**, %"class.std::__1::__compressed_pair.1445" }
%"class.std::__1::__compressed_pair.1445" = type { %"struct.std::__1::__compressed_pair_elem.1446" }
%"struct.std::__1::__compressed_pair_elem.1446" = type { %struct.VkImageView_T** }
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.rx::UtilsVk::ClearFramebufferParameters" = type { %"struct.gl::Rectangle", i8, i8, i8, i8, i32, i32, %"struct.angle::Format"*, %union.VkClearColorValue, %struct.VkClearDepthStencilValue }
%"struct.rx::PackPixelsParams" = type <{ %"struct.gl::Rectangle", %"struct.angle::Format"*, i32, [4 x i8], %"class.gl::Buffer"*, i8, [7 x i8], i64, i32, [4 x i8] }>
%"class.rx::vk::CommandBufferAccess" = type { %"class.angle::FixedVector.1436", %"class.angle::FixedVector.1436", %"class.angle::FixedVector.1438", %"class.angle::FixedVector.1440" }
%"class.angle::FixedVector.1436" = type { %"struct.std::__1::array.1437", i64 }
%"struct.std::__1::array.1437" = type { [2 x %"struct.rx::vk::CommandBufferBufferAccess"] }
%"struct.rx::vk::CommandBufferBufferAccess" = type { %"class.rx::vk::BufferHelper"*, i32, i16 }
%"class.angle::FixedVector.1438" = type { %"struct.std::__1::array.1439", i64 }
%"struct.std::__1::array.1439" = type { [2 x %"struct.rx::vk::CommandBufferImageAccess"] }
%"struct.rx::vk::CommandBufferImageAccess" = type { %"class.rx::vk::ImageHelper"*, i32, i32 }
%"class.angle::FixedVector.1440" = type { %"struct.std::__1::array.1441", i64 }
%"struct.std::__1::array.1441" = type { [1 x %"struct.rx::vk::CommandBufferImageWrite"] }
%"struct.rx::vk::CommandBufferImageWrite" = type { %"struct.rx::vk::CommandBufferImageAccess", %"class.gl::LevelIndexWrapper", i32, i32, i32 }
%"struct.rx::UtilsVk::BlitResolveParameters" = type { [2 x i32], [2 x i32], [2 x i32], [2 x float], [2 x i32], %"struct.gl::Rectangle", i32, i8, i8, i8, i32 }
%"class.rx::vk::DeviceScoped" = type { %struct.VkDevice_T*, %"class.rx::vk::ImageView" }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%"class.angle::BitSetT.1442" = type { i16 }
%"struct.rx::UtilsVk::UnresolveParameters" = type { %"class.angle::BitSetT", i8, i8 }

$_ZN2rx17RenderTargetCacheINS_14RenderTargetVkEE23updateColorRenderTargetEPKN2gl7ContextERKNS3_16FramebufferStateEm = comdat any

$_ZN2rx17RenderTargetCacheINS_14RenderTargetVkEE6updateEPKN2gl7ContextERKNS3_16FramebufferStateERKN5angle7BitSetTILm28EmmEE = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE5clearEv = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE4findIS5_EENSJ_8iteratorERSG_ = comdat any

$_ZNK2rx15FramebufferImpl32shouldSyncStateBeforeCheckStatusEv = comdat any

$_ZNSt3__16vectorIN2rx2vk13GarbageObjectENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE22find_or_prepare_insertIS5_EENSF_ImbEERKT_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = comdat any

@_ZTVN2rx13FramebufferVkE = hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::FramebufferVk"*)* @_ZN2rx13FramebufferVkD2Ev to i8*), i8* bitcast (void (%"class.rx::FramebufferVk"*)* @_ZN2rx13FramebufferVkD0Ev to i8*), i8* bitcast (void (%"class.rx::FramebufferVk"*, %"class.gl::Context"*)* @_ZN2rx13FramebufferVk7destroyEPKN2gl7ContextE to i8*), i8* bitcast (i32 (%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i64, i32*)* @_ZN2rx13FramebufferVk7discardEPKN2gl7ContextEmPKj to i8*), i8* bitcast (i32 (%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i64, i32*)* @_ZN2rx13FramebufferVk10invalidateEPKN2gl7ContextEmPKj to i8*), i8* bitcast (i32 (%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i64, i32*, %"struct.gl::Rectangle"*)* @_ZN2rx13FramebufferVk13invalidateSubEPKN2gl7ContextEmPKjRKNS1_9RectangleE to i8*), i8* bitcast (i32 (%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i32)* @_ZN2rx13FramebufferVk5clearEPKN2gl7ContextEj to i8*), i8* bitcast (i32 (%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i32, i32, float*)* @_ZN2rx13FramebufferVk13clearBufferfvEPKN2gl7ContextEjiPKf to i8*), i8* bitcast (i32 (%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i32, i32, i32*)* @_ZN2rx13FramebufferVk14clearBufferuivEPKN2gl7ContextEjiPKj to i8*), i8* bitcast (i32 (%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i32, i32, i32*)* @_ZN2rx13FramebufferVk13clearBufferivEPKN2gl7ContextEjiPKi to i8*), i8* bitcast (i32 (%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i32, i32, float, i32)* @_ZN2rx13FramebufferVk13clearBufferfiEPKN2gl7ContextEjifi to i8*), i8* bitcast (%"struct.gl::InternalFormat"* (%"class.rx::FramebufferVk"*, %"class.gl::Context"*)* @_ZNK2rx13FramebufferVk32getImplementationColorReadFormatEPKN2gl7ContextE to i8*), i8* bitcast (i32 (%"class.rx::FramebufferVk"*, %"class.gl::Context"*, %"struct.gl::Rectangle"*, i32, i32, %"struct.gl::PixelPackState"*, %"class.gl::Buffer"*, i8*)* @_ZN2rx13FramebufferVk10readPixelsEPKN2gl7ContextERKNS1_9RectangleEjjRKNS1_14PixelPackStateEPNS1_6BufferEPv to i8*), i8* bitcast (i32 (%"class.rx::FramebufferVk"*, %"class.gl::Context"*, %"struct.gl::Rectangle"*, %"struct.gl::Rectangle"*, i32, i32)* @_ZN2rx13FramebufferVk4blitEPKN2gl7ContextERKNS1_9RectangleES7_jj to i8*), i8* bitcast ({ i32, i8* } (%"class.rx::FramebufferVk"*, %"class.gl::Context"*)* @_ZNK2rx13FramebufferVk11checkStatusEPKN2gl7ContextE to i8*), i8* bitcast (i32 (%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i32, %"class.angle::BitSetT.332"*, i32)* @_ZN2rx13FramebufferVk9syncStateEPKN2gl7ContextEjRKN5angle7BitSetTILm28EmmEENS1_7CommandE to i8*), i8* bitcast (i32 (%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i64, float*)* @_ZNK2rx13FramebufferVk17getSamplePositionEPKN2gl7ContextEmPf to i8*), i8* bitcast (i1 (%"class.rx::FramebufferImpl"*)* @_ZNK2rx15FramebufferImpl32shouldSyncStateBeforeCheckStatusEv to i8*)] }, align 8
@_ZZN2rx13FramebufferVk13invalidateSubEPKN2gl7ContextEmPKjRKNS1_9RectangleEE12sRepeatCount = internal global i32 0, align 4
@.str = private unnamed_addr constant [74 x i8] c"InvalidateSubFramebuffer ignored due to area not covering the render area\00", align 1
@_ZZN2rx13FramebufferVk5clearEPKN2gl7ContextEjE31trace_event_unique_catstatic428 = internal unnamed_addr global i8* null, align 8
@_ZGVZN2rx13FramebufferVk5clearEPKN2gl7ContextEjE31trace_event_unique_catstatic428 = internal global i64 0, align 8
@.str.1 = private unnamed_addr constant [10 x i8] c"gpu.angle\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"FramebufferVk::clear\00", align 1
@_ZZN2rx13FramebufferVk9clearImplEPKN2gl7ContextEN5angle7BitSetTILm8EhmEEbbRK17VkClearColorValueRK24VkClearDepthStencilValueE12sRepeatCount = internal global i32 0, align 4
@.str.3 = private unnamed_addr constant [140 x i8] c"Clear effectively discarding previous draw call results. Suggest earlier Clear followed by masked color or depth/stencil draw calls instead\00", align 1
@_ZZN2rx13FramebufferVk4blitEPKN2gl7ContextERKNS1_9RectangleES7_jjE12sRepeatCount = internal global i32 0, align 4
@.str.5 = private unnamed_addr constant [105 x i8] c"Inefficient BlitFramebuffer operation on the stencil aspect due to lack of shader stencil export support\00", align 1
@.str.8 = private unnamed_addr constant [79 x i8] c"Framebuffer is incomplete: Separate depth and stencil buffers are unsupported.\00", align 1
@__const._ZN2rx13FramebufferVk9syncStateEPKN2gl7ContextEjRKN5angle7BitSetTILm28EmmEENS1_7CommandE.previousDeferredClears = private unnamed_addr constant %"class.rx::vk::ClearValuesArray" { %"struct.std::__1::array.843" { [10 x %union.VkClearValue] [%union.VkClearValue { %union.VkClearColorValue { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] } }, %union.VkClearValue { %union.VkClearColorValue { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] } }, %union.VkClearValue { %union.VkClearColorValue { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] } }, %union.VkClearValue { %union.VkClearColorValue { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] } }, %union.VkClearValue { %union.VkClearColorValue { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] } }, %union.VkClearValue { %union.VkClearColorValue { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] } }, %union.VkClearValue { %union.VkClearColorValue { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] } }, %union.VkClearValue { %union.VkClearColorValue { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] } }, %union.VkClearValue { %union.VkClearColorValue { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] } }, %union.VkClearValue { %union.VkClearColorValue { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] } }] }, %"class.angle::BitSetT.844" { i64 -6148914691236517206 } }, align 8
@__const._ZN2rx13FramebufferVk13clearWithDrawEPNS_9ContextVkERKN2gl9RectangleEN5angle7BitSetTILm8EhmEEbbmhRK17VkClearColorValueRK24VkClearDepthStencilValue.params = private unnamed_addr constant { %"struct.gl::Rectangle", i8, i8, i8, i8, i32, i32, [4 x i8], %"struct.angle::Format"*, %union.VkClearColorValue, %struct.VkClearDepthStencilValue } { %"struct.gl::Rectangle" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, i8 -86, i8 -86, i8 -86, i8 -86, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.angle::Format"* inttoptr (i64 -6148914691236517206 to %"struct.angle::Format"*), %union.VkClearColorValue { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %struct.VkClearDepthStencilValue { float 0xFFFFFFFFE0000000, i32 -1431655766 } }, align 8
@__const._ZN2rx13FramebufferVk16clearWithCommandEPNS_9ContextVkEPNS_2vk19CommandBufferHelperERKN2gl9RectangleE.attachments = private unnamed_addr constant %"class.angle::FixedVector.1450" { %"struct.std::__1::array.1451" { [10 x %struct.VkClearAttachment] [%struct.VkClearAttachment { i32 -1431655766, i32 -1431655766, %union.VkClearValue { %union.VkClearColorValue { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] } } }, %struct.VkClearAttachment { i32 -1431655766, i32 -1431655766, %union.VkClearValue { %union.VkClearColorValue { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] } } }, %struct.VkClearAttachment { i32 -1431655766, i32 -1431655766, %union.VkClearValue { %union.VkClearColorValue { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] } } }, %struct.VkClearAttachment { i32 -1431655766, i32 -1431655766, %union.VkClearValue { %union.VkClearColorValue { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] } } }, %struct.VkClearAttachment { i32 -1431655766, i32 -1431655766, %union.VkClearValue { %union.VkClearColorValue { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] } } }, %struct.VkClearAttachment { i32 -1431655766, i32 -1431655766, %union.VkClearValue { %union.VkClearColorValue { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] } } }, %struct.VkClearAttachment { i32 -1431655766, i32 -1431655766, %union.VkClearValue { %union.VkClearColorValue { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] } } }, %struct.VkClearAttachment { i32 -1431655766, i32 -1431655766, %union.VkClearValue { %union.VkClearColorValue { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] } } }, %struct.VkClearAttachment { i32 -1431655766, i32 -1431655766, %union.VkClearValue { %union.VkClearColorValue { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] } } }, %struct.VkClearAttachment { i32 -1431655766, i32 -1431655766, %union.VkClearValue { %union.VkClearColorValue { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] } } }] }, i64 -6148914691236517206 }, align 8
@_ZN2rx12_GLOBAL__N_124kUninitializedClearValueE = internal constant %union.VkClearValue { %union.VkClearColorValue { [4 x float] [float 0x3FEE666660000000, float 0x3FA99999A0000000, float 0x3FEE666660000000, float 0x3FEE666660000000] } }, align 4
@_ZZN2rx13FramebufferVk14readPixelsImplEPNS_9ContextVkERKN2gl9RectangleERKNS_16PackPixelsParamsE21VkImageAspectFlagBitsPNS_14RenderTargetVkEPvE32trace_event_unique_catstatic2686 = internal unnamed_addr global i8* null, align 8
@_ZGVZN2rx13FramebufferVk14readPixelsImplEPNS_9ContextVkERKN2gl9RectangleERKNS_16PackPixelsParamsE21VkImageAspectFlagBitsPNS_14RenderTargetVkEPvE32trace_event_unique_catstatic2686 = internal global i64 0, align 8
@.str.14 = private unnamed_addr constant [30 x i8] c"FramebufferVk::readPixelsImpl\00", align 1
@_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = linkonce_odr hidden constant [16 x i8] c"\FF\80\80\80\80\80\80\80\80\80\80\80\80\80\80\80", comdat, align 16
@_ZN5angle16gFormatInfoTableE = external global [0 x %"struct.angle::Format"], align 8
@_ZN2gl21FramebufferAttachment30kDefaultRenderToTextureSamplesE = external local_unnamed_addr constant i32, align 4
@vkDestroyImageView = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)*, align 8
@_ZN4absl13hash_internal15MixingHashState5kSeedE = external local_unnamed_addr constant i8*, align 8

@_ZN2rx13FramebufferVkC1EPNS_10RendererVkERKN2gl16FramebufferStateEPNS_15WindowSurfaceVkE = hidden unnamed_addr alias void (%"class.rx::FramebufferVk"*, %"class.rx::RendererVk"*, %"class.gl::FramebufferState"*, %"class.rx::WindowSurfaceVk"*), void (%"class.rx::FramebufferVk"*, %"class.rx::RendererVk"*, %"class.gl::FramebufferState"*, %"class.rx::WindowSurfaceVk"*)* @_ZN2rx13FramebufferVkC2EPNS_10RendererVkERKN2gl16FramebufferStateEPNS_15WindowSurfaceVkE
@_ZN2rx13FramebufferVkD1Ev = hidden unnamed_addr alias void (%"class.rx::FramebufferVk"*), void (%"class.rx::FramebufferVk"*)* @_ZN2rx13FramebufferVkD2Ev

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #0

declare %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState17getReadAttachmentEv(%"class.gl::FramebufferState"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #0

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::FramebufferVk"* @_ZN2rx13FramebufferVk13CreateUserFBOEPNS_10RendererVkERKN2gl16FramebufferStateE(%"class.rx::RendererVk"*, %"class.gl::FramebufferState"* dereferenceable(464)) local_unnamed_addr #3 align 2 {
  %3 = tail call i8* @_Znwm(i64 648) #18
  %4 = bitcast i8* %3 to %"class.rx::FramebufferVk"*
  %5 = bitcast i8* %3 to i32 (...)***
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  %7 = bitcast i8* %6 to %"class.gl::FramebufferState"**
  store %"class.gl::FramebufferState"* %1, %"class.gl::FramebufferState"** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN2rx13FramebufferVkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = getelementptr inbounds i8, i8* %3, i64 16
  %9 = bitcast i8* %8 to %"class.rx::WindowSurfaceVk"**
  store %"class.rx::WindowSurfaceVk"* null, %"class.rx::WindowSurfaceVk"** %9, align 8
  %10 = getelementptr inbounds i8, i8* %3, i64 24
  %11 = bitcast i8* %10 to %"class.rx::vk::RenderPassDesc"*
  tail call void @_ZN2rx2vk14RenderPassDescC1Ev(%"class.rx::vk::RenderPassDesc"* %11) #16
  %12 = getelementptr inbounds i8, i8* %3, i64 40
  %13 = getelementptr inbounds i8, i8* %3, i64 152
  %14 = bitcast i8* %13 to %"class.rx::vk::DynamicBuffer"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 112, i1 false) #16
  tail call void @_ZN2rx2vk13DynamicBufferC1Ev(%"class.rx::vk::DynamicBuffer"* %14) #16
  %15 = getelementptr inbounds i8, i8* %3, i64 264
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds i8, i8* %3, i64 268
  %17 = bitcast i8* %16 to %"class.rx::vk::FramebufferDesc"*
  tail call void @_ZN2rx2vk15FramebufferDescC1Ev(%"class.rx::vk::FramebufferDesc"* %17) #16
  %18 = getelementptr inbounds i8, i8* %3, i64 416
  %19 = bitcast i8* %18 to i8**
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %3, i64 424
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 48, i1 false) #16
  %21 = getelementptr inbounds i8, i8* %3, i64 472
  %22 = bitcast i8* %21 to %"class.rx::vk::ClearValuesArray"*
  tail call void @_ZN2rx2vk16ClearValuesArrayC1Ev(%"class.rx::vk::ClearValuesArray"* %22) #16
  %23 = getelementptr inbounds i8, i8* %3, i64 640
  store i8 0, i8* %23, align 8
  tail call void @_ZN2rx2vk13DynamicBuffer4initEPNS_10RendererVkEjmmbNS0_19DynamicBufferPolicyE(%"class.rx::vk::DynamicBuffer"* %14, %"class.rx::RendererVk"* %0, i32 2, i64 96, i64 128000, i1 zeroext true, i32 0) #16
  ret %"class.rx::FramebufferVk"* %4
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::FramebufferVk"* @_ZN2rx13FramebufferVk16CreateDefaultFBOEPNS_10RendererVkERKN2gl16FramebufferStateEPNS_15WindowSurfaceVkE(%"class.rx::RendererVk"*, %"class.gl::FramebufferState"* dereferenceable(464), %"class.rx::WindowSurfaceVk"*) local_unnamed_addr #3 align 2 {
  %4 = tail call i8* @_Znwm(i64 648) #18
  %5 = bitcast i8* %4 to %"class.rx::FramebufferVk"*
  %6 = bitcast i8* %4 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %4, i64 8
  %8 = bitcast i8* %7 to %"class.gl::FramebufferState"**
  store %"class.gl::FramebufferState"* %1, %"class.gl::FramebufferState"** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN2rx13FramebufferVkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 16
  %10 = bitcast i8* %9 to %"class.rx::WindowSurfaceVk"**
  store %"class.rx::WindowSurfaceVk"* %2, %"class.rx::WindowSurfaceVk"** %10, align 8
  %11 = getelementptr inbounds i8, i8* %4, i64 24
  %12 = bitcast i8* %11 to %"class.rx::vk::RenderPassDesc"*
  tail call void @_ZN2rx2vk14RenderPassDescC1Ev(%"class.rx::vk::RenderPassDesc"* %12) #16
  %13 = getelementptr inbounds i8, i8* %4, i64 40
  %14 = getelementptr inbounds i8, i8* %4, i64 152
  %15 = bitcast i8* %14 to %"class.rx::vk::DynamicBuffer"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 112, i1 false) #16
  tail call void @_ZN2rx2vk13DynamicBufferC1Ev(%"class.rx::vk::DynamicBuffer"* %15) #16
  %16 = getelementptr inbounds i8, i8* %4, i64 264
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds i8, i8* %4, i64 268
  %18 = bitcast i8* %17 to %"class.rx::vk::FramebufferDesc"*
  tail call void @_ZN2rx2vk15FramebufferDescC1Ev(%"class.rx::vk::FramebufferDesc"* %18) #16
  %19 = getelementptr inbounds i8, i8* %4, i64 416
  %20 = bitcast i8* %19 to i8**
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %4, i64 424
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 48, i1 false) #16
  %22 = getelementptr inbounds i8, i8* %4, i64 472
  %23 = bitcast i8* %22 to %"class.rx::vk::ClearValuesArray"*
  tail call void @_ZN2rx2vk16ClearValuesArrayC1Ev(%"class.rx::vk::ClearValuesArray"* %23) #16
  %24 = getelementptr inbounds i8, i8* %4, i64 640
  store i8 0, i8* %24, align 8
  tail call void @_ZN2rx2vk13DynamicBuffer4initEPNS_10RendererVkEjmmbNS0_19DynamicBufferPolicyE(%"class.rx::vk::DynamicBuffer"* %15, %"class.rx::RendererVk"* %0, i32 2, i64 96, i64 128000, i1 zeroext true, i32 0) #16
  ret %"class.rx::FramebufferVk"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13FramebufferVkC2EPNS_10RendererVkERKN2gl16FramebufferStateEPNS_15WindowSurfaceVkE(%"class.rx::FramebufferVk"*, %"class.rx::RendererVk"*, %"class.gl::FramebufferState"* dereferenceable(464), %"class.rx::WindowSurfaceVk"*) unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  store %"class.gl::FramebufferState"* %2, %"class.gl::FramebufferState"** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN2rx13FramebufferVkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 1
  store %"class.rx::WindowSurfaceVk"* %3, %"class.rx::WindowSurfaceVk"** %7, align 8
  %8 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 2
  tail call void @_ZN2rx2vk14RenderPassDescC1Ev(%"class.rx::vk::RenderPassDesc"* %8) #16
  %9 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 4
  %10 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 7
  %11 = bitcast %"class.rx::vk::FramebufferHelper"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 112, i1 false)
  tail call void @_ZN2rx2vk13DynamicBufferC1Ev(%"class.rx::vk::DynamicBuffer"* %10) #16
  %12 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 8, i32 0
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10
  tail call void @_ZN2rx2vk15FramebufferDescC1Ev(%"class.rx::vk::FramebufferDesc"* %13) #16
  %14 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %15 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast %"union.absl::container_internal::map_slot_type.831"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 48, i1 false) #16
  %17 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12
  tail call void @_ZN2rx2vk16ClearValuesArrayC1Ev(%"class.rx::vk::ClearValuesArray"* %17) #16
  %18 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 13
  store i8 0, i8* %18, align 8
  tail call void @_ZN2rx2vk13DynamicBuffer4initEPNS_10RendererVkEjmmbNS0_19DynamicBufferPolicyE(%"class.rx::vk::DynamicBuffer"* %10, %"class.rx::RendererVk"* %1, i32 2, i64 96, i64 128000, i1 zeroext true, i32 0) #16
  ret void
}

declare void @_ZN2rx2vk14RenderPassDescC1Ev(%"class.rx::vk::RenderPassDesc"*) unnamed_addr #1

declare void @_ZN2rx2vk13DynamicBufferC1Ev(%"class.rx::vk::DynamicBuffer"*) unnamed_addr #1

declare void @_ZN2rx2vk15FramebufferDescC1Ev(%"class.rx::vk::FramebufferDesc"*) unnamed_addr #1

declare void @_ZN2rx2vk16ClearValuesArrayC1Ev(%"class.rx::vk::ClearValuesArray"*) unnamed_addr #1

declare void @_ZN2rx2vk13DynamicBuffer4initEPNS_10RendererVkEjmmbNS0_19DynamicBufferPolicyE(%"class.rx::vk::DynamicBuffer"*, %"class.rx::RendererVk"*, i32, i64, i64, i1 zeroext, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13FramebufferVkD2Ev(%"class.rx::FramebufferVk"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN2rx13FramebufferVkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12
  tail call void @_ZN2rx2vk16ClearValuesArrayD1Ev(%"class.rx::vk::ClearValuesArray"* %3) #16
  %4 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 3
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %29, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1
  br label %13

10:                                               ; preds = %25
  %11 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %11) #18
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %8, align 8
  %12 = bitcast %"union.absl::container_internal::map_slot_type.831"** %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false) #16
  br label %29

13:                                               ; preds = %25, %7
  %14 = phi i64 [ %5, %7 ], [ %26, %25 ]
  %15 = phi i64 [ 0, %7 ], [ %27, %25 ]
  %16 = load i8*, i8** %8, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 %15
  %18 = load i8, i8* %17, align 1
  %19 = icmp sgt i8 %18, -1
  br i1 %19, label %20, label %25

20:                                               ; preds = %13
  %21 = load %"union.absl::container_internal::map_slot_type.831"*, %"union.absl::container_internal::map_slot_type.831"** %9, align 8
  %22 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %21, i64 %15, i32 0, i32 1
  tail call void @_ZN2rx2vk17FramebufferHelperD1Ev(%"class.rx::vk::FramebufferHelper"* %22) #16
  %23 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %21, i64 %15, i32 0, i32 0
  tail call void @_ZN2rx2vk15FramebufferDescD1Ev(%"class.rx::vk::FramebufferDesc"* %23) #16
  %24 = load i64, i64* %4, align 8
  br label %25

25:                                               ; preds = %20, %13
  %26 = phi i64 [ %14, %13 ], [ %24, %20 ]
  %27 = add i64 %15, 1
  %28 = icmp eq i64 %27, %26
  br i1 %28, label %10, label %13

29:                                               ; preds = %1, %10
  %30 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10
  tail call void @_ZN2rx2vk15FramebufferDescD1Ev(%"class.rx::vk::FramebufferDesc"* %30) #16
  %31 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 7
  tail call void @_ZN2rx2vk13DynamicBufferD1Ev(%"class.rx::vk::DynamicBuffer"* %31) #16
  %32 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 2
  tail call void @_ZN2rx2vk14RenderPassDescD1Ev(%"class.rx::vk::RenderPassDesc"* %32) #16
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2rx2vk16ClearValuesArrayD1Ev(%"class.rx::vk::ClearValuesArray"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN2rx2vk15FramebufferDescD1Ev(%"class.rx::vk::FramebufferDesc"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN2rx2vk13DynamicBufferD1Ev(%"class.rx::vk::DynamicBuffer"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN2rx2vk14RenderPassDescD1Ev(%"class.rx::vk::RenderPassDesc"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13FramebufferVkD0Ev(%"class.rx::FramebufferVk"*) unnamed_addr #3 align 2 {
  tail call void @_ZN2rx13FramebufferVkD2Ev(%"class.rx::FramebufferVk"* %0) #16
  %2 = bitcast %"class.rx::FramebufferVk"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13FramebufferVk7destroyEPKN2gl7ContextE(%"class.rx::FramebufferVk"*, %"class.gl::Context"* nocapture readonly) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %4 = bitcast %"class.rx::ContextImpl"** %3 to %"class.rx::ContextVk"**
  %5 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %4, align 8
  %6 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %5, i64 0, i32 1, i32 1
  %7 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %6, align 8
  %8 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 7
  tail call void @_ZN2rx2vk13DynamicBuffer7releaseEPNS_10RendererVkE(%"class.rx::vk::DynamicBuffer"* %8, %"class.rx::RendererVk"* %7) #16
  %9 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 11
  tail call void @_ZN2rx16FramebufferCache5clearEPNS_9ContextVkE(%"class.rx::FramebufferCache"* %9, %"class.rx::ContextVk"* %5)
  %10 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 11, i32 1, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %7, i64 0, i32 73, i32 0, i32 0, i64 11, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, %11
  store i64 %14, i64* %12, align 8
  %15 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 11, i32 1, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %7, i64 0, i32 73, i32 0, i32 0, i64 11, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, %16
  store i64 %19, i64* %17, align 8
  %20 = getelementptr inbounds %"class.rx::FramebufferCache", %"class.rx::FramebufferCache"* %9, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE5clearEv(%"class.absl::container_internal::raw_hash_set.830"* %20) #16
  ret void
}

declare void @_ZN2rx2vk13DynamicBuffer7releaseEPNS_10RendererVkE(%"class.rx::vk::DynamicBuffer"*, %"class.rx::RendererVk"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx16FramebufferCache5clearEPNS_9ContextVkE(%"class.rx::FramebufferCache"*, %"class.rx::ContextVk"*) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.rx::FramebufferCache", %"class.rx::FramebufferCache"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.rx::FramebufferCache", %"class.rx::FramebufferCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.rx::FramebufferCache", %"class.rx::FramebufferCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load %"union.absl::container_internal::map_slot_type.831"*, %"union.absl::container_internal::map_slot_type.831"** %6, align 8
  %8 = icmp ne i8* %5, null
  tail call void @llvm.assume(i1 %8) #16
  %9 = load i8, i8* %5, align 1
  %10 = icmp slt i8 %9, -1
  br i1 %10, label %11, label %26

11:                                               ; preds = %2, %11
  %12 = phi %"union.absl::container_internal::map_slot_type.831"* [ %23, %11 ], [ %7, %2 ]
  %13 = phi i8* [ %22, %11 ], [ %5, %2 ]
  %14 = bitcast i8* %13 to <16 x i8>*
  %15 = load <16 x i8>, <16 x i8>* %14, align 1
  %16 = icmp slt <16 x i8> %15, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %17 = bitcast <16 x i1> %16 to i16
  %18 = zext i16 %17 to i32
  %19 = add nuw nsw i32 %18, 1
  %20 = tail call i32 @llvm.cttz.i32(i32 %19, i1 true) #16, !range !2
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %13, i64 %21
  %23 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %12, i64 %21
  %24 = load i8, i8* %22, align 1
  %25 = icmp slt i8 %24, -1
  br i1 %25, label %11, label %26

26:                                               ; preds = %11, %2
  %27 = phi %"union.absl::container_internal::map_slot_type.831"* [ %7, %2 ], [ %23, %11 ]
  %28 = phi i8* [ %5, %2 ], [ %22, %11 ]
  %29 = phi i8 [ %9, %2 ], [ %24, %11 ]
  %30 = icmp eq i8 %29, -1
  %31 = icmp eq i8* %28, null
  %32 = or i1 %30, %31
  br i1 %32, label %39, label %33

33:                                               ; preds = %26, %65
  %34 = phi %"union.absl::container_internal::map_slot_type.831"* [ %67, %65 ], [ %27, %26 ]
  %35 = phi i8* [ %70, %65 ], [ %28, %26 ]
  %36 = load i8, i8* %35, align 1
  %37 = icmp sgt i8 %36, -1
  br i1 %37, label %40, label %38, !prof !3

38:                                               ; preds = %33
  tail call void @llvm.trap() #16
  unreachable

39:                                               ; preds = %65, %26
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE5clearEv(%"class.absl::container_internal::raw_hash_set.830"* %3)
  ret void

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %34, i64 0, i32 0, i32 1
  tail call void @_ZN2rx2vk17FramebufferHelper7releaseEPNS_9ContextVkE(%"class.rx::vk::FramebufferHelper"* %41, %"class.rx::ContextVk"* %1) #16
  %42 = load i8, i8* %35, align 1
  %43 = icmp sgt i8 %42, -1
  br i1 %43, label %45, label %44, !prof !3

44:                                               ; preds = %40
  tail call void @llvm.trap() #16
  unreachable

45:                                               ; preds = %40
  %46 = getelementptr inbounds i8, i8* %35, i64 1
  %47 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %34, i64 1
  %48 = load i8, i8* %46, align 1
  %49 = icmp slt i8 %48, -1
  br i1 %49, label %50, label %65

50:                                               ; preds = %45, %50
  %51 = phi %"union.absl::container_internal::map_slot_type.831"* [ %62, %50 ], [ %47, %45 ]
  %52 = phi i8* [ %61, %50 ], [ %46, %45 ]
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 1
  %55 = icmp slt <16 x i8> %54, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %56 = bitcast <16 x i1> %55 to i16
  %57 = zext i16 %56 to i32
  %58 = add nuw nsw i32 %57, 1
  %59 = tail call i32 @llvm.cttz.i32(i32 %58, i1 true) #16, !range !2
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %52, i64 %60
  %62 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %51, i64 %60
  %63 = load i8, i8* %61, align 1
  %64 = icmp slt i8 %63, -1
  br i1 %64, label %50, label %65

65:                                               ; preds = %50, %45
  %66 = phi i8* [ %46, %45 ], [ %61, %50 ]
  %67 = phi %"union.absl::container_internal::map_slot_type.831"* [ %47, %45 ], [ %62, %50 ]
  %68 = phi i8 [ %48, %45 ], [ %63, %50 ]
  %69 = icmp eq i8 %68, -1
  %70 = select i1 %69, i8* null, i8* %66, !prof !4
  %71 = icmp eq i8* %70, null
  br i1 %71, label %39, label %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx16FramebufferCache7destroyEPNS_10RendererVkE(%"class.rx::FramebufferCache"*, %"class.rx::RendererVk"* nocapture) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.rx::FramebufferCache", %"class.rx::FramebufferCache"* %0, i64 0, i32 1, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 73, i32 0, i32 0, i64 11, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, %4
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"class.rx::FramebufferCache", %"class.rx::FramebufferCache"* %0, i64 0, i32 1, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 73, i32 0, i32 0, i64 11, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, %9
  store i64 %12, i64* %10, align 8
  %13 = getelementptr inbounds %"class.rx::FramebufferCache", %"class.rx::FramebufferCache"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE5clearEv(%"class.absl::container_internal::raw_hash_set.830"* %13)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferVk7discardEPKN2gl7ContextEmPKj(%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i64, i32*) unnamed_addr #3 align 2 {
  %5 = bitcast %"class.rx::FramebufferVk"* %0 to i32 (%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i64, i32*)***
  %6 = load i32 (%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i64, i32*)**, i32 (%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i64, i32*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i64, i32*)*, i32 (%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i64, i32*)** %6, i64 4
  %8 = load i32 (%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i64, i32*)*, i32 (%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i64, i32*)** %7, align 8
  %9 = tail call i32 %8(%"class.rx::FramebufferVk"* %0, %"class.gl::Context"* %1, i64 %2, i32* %3) #16
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferVk10invalidateEPKN2gl7ContextEmPKj(%"class.rx::FramebufferVk"*, %"class.gl::Context"* nocapture readonly, i64, i32* nocapture readonly) unnamed_addr #3 align 2 {
  %5 = alloca %"struct.gl::Box", align 4
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"struct.gl::Rectangle"*
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %9 = bitcast %"class.rx::ContextImpl"** %8 to %"class.rx::ContextVk"**
  %10 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %9, align 8
  %11 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #16
  %12 = bitcast %"struct.gl::Box"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #16
  %13 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %14 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %13, align 8
  call void @_ZNK2gl16FramebufferState13getDimensionsEv(%"struct.gl::Box"* nonnull sret %5, %"class.gl::FramebufferState"* %14) #16
  %15 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %5, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %5, i64 0, i32 4
  %18 = load i32, i32* %17, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #16
  %19 = call zeroext i1 @_ZNK2rx9ContextVk30isRotatedAspectRatioForDrawFBOEv(%"class.rx::ContextVk"* %10) #16
  %20 = select i1 %19, i32 %16, i32 %18
  %21 = select i1 %19, i32 %18, i32 %16
  %22 = zext i32 %20 to i64
  %23 = shl nuw i64 %22, 32
  %24 = zext i32 %21 to i64
  %25 = or i64 %23, %24
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %25, i64* %27, align 8
  %28 = call i32 @_ZN2rx13FramebufferVk14invalidateImplEPNS_9ContextVkEmPKjbRKN2gl9RectangleE(%"class.rx::FramebufferVk"* %0, %"class.rx::ContextVk"* %10, i64 %2, i32* %3, i1 zeroext false, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %7)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #16
  %29 = icmp eq i32 %28, 1
  %30 = zext i1 %29 to i32
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferVk14invalidateImplEPNS_9ContextVkEmPKjbRKN2gl9RectangleE(%"class.rx::FramebufferVk"*, %"class.rx::ContextVk"*, i64, i32* nocapture readonly, i1 zeroext, %"struct.gl::Rectangle"* dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %7 = alloca %"struct.gl::Box", align 4
  %8 = alloca %"class.rx::vk::Framebuffer"*, align 8
  %9 = icmp eq i64 %2, 0
  br i1 %9, label %82, label %10

10:                                               ; preds = %6
  %11 = and i64 %2, 1
  %12 = icmp eq i64 %2, 1
  br i1 %12, label %15, label %13

13:                                               ; preds = %10
  %14 = sub i64 %2, %11
  br label %42

15:                                               ; preds = %254, %10
  %16 = phi i8 [ undef, %10 ], [ %255, %254 ]
  %17 = phi i8 [ undef, %10 ], [ %256, %254 ]
  %18 = phi i8 [ undef, %10 ], [ %257, %254 ]
  %19 = phi i8 [ 0, %10 ], [ %257, %254 ]
  %20 = phi i8 [ 0, %10 ], [ %256, %254 ]
  %21 = phi i64 [ 0, %10 ], [ %258, %254 ]
  %22 = phi i8 [ 0, %10 ], [ %255, %254 ]
  %23 = icmp eq i64 %11, 0
  br i1 %23, label %36, label %24

24:                                               ; preds = %15
  %25 = getelementptr inbounds i32, i32* %3, i64 %21
  %26 = load i32, i32* %25, align 4
  switch i32 %26, label %29 [
    i32 6145, label %36
    i32 36096, label %36
    i32 6146, label %28
    i32 36128, label %28
    i32 33306, label %27
  ]

27:                                               ; preds = %24
  br label %36

28:                                               ; preds = %24, %24
  br label %36

29:                                               ; preds = %24
  %30 = icmp eq i32 %26, 6144
  %31 = add i32 %26, -36064
  %32 = shl i32 1, %31
  %33 = select i1 %30, i32 1, i32 %32
  %34 = trunc i32 %33 to i8
  %35 = or i8 %22, %34
  br label %36

36:                                               ; preds = %29, %28, %27, %24, %24, %15
  %37 = phi i8 [ %16, %15 ], [ %35, %29 ], [ %22, %27 ], [ %22, %28 ], [ %22, %24 ], [ %22, %24 ]
  %38 = phi i8 [ %17, %15 ], [ %20, %29 ], [ 1, %27 ], [ 1, %28 ], [ %20, %24 ], [ %20, %24 ]
  %39 = phi i8 [ %18, %15 ], [ %19, %29 ], [ 1, %27 ], [ %19, %28 ], [ 1, %24 ], [ 1, %24 ]
  %40 = and i8 %39, 1
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %72, label %66

42:                                               ; preds = %254, %13
  %43 = phi i8 [ 0, %13 ], [ %257, %254 ]
  %44 = phi i8 [ 0, %13 ], [ %256, %254 ]
  %45 = phi i64 [ 0, %13 ], [ %258, %254 ]
  %46 = phi i8 [ 0, %13 ], [ %255, %254 ]
  %47 = phi i64 [ %14, %13 ], [ %259, %254 ]
  %48 = getelementptr inbounds i32, i32* %3, i64 %45
  %49 = load i32, i32* %48, align 4
  switch i32 %49, label %52 [
    i32 6145, label %59
    i32 36096, label %59
    i32 6146, label %50
    i32 36128, label %50
    i32 33306, label %51
  ]

50:                                               ; preds = %42, %42
  br label %59

51:                                               ; preds = %42
  br label %59

52:                                               ; preds = %42
  %53 = icmp eq i32 %49, 6144
  %54 = add i32 %49, -36064
  %55 = shl i32 1, %54
  %56 = select i1 %53, i32 1, i32 %55
  %57 = trunc i32 %56 to i8
  %58 = or i8 %46, %57
  br label %59

59:                                               ; preds = %42, %42, %52, %51, %50
  %60 = phi i8 [ %58, %52 ], [ %46, %51 ], [ %46, %50 ], [ %46, %42 ], [ %46, %42 ]
  %61 = phi i8 [ %44, %52 ], [ 1, %51 ], [ 1, %50 ], [ %44, %42 ], [ %44, %42 ]
  %62 = phi i8 [ %43, %52 ], [ 1, %51 ], [ %43, %50 ], [ 1, %42 ], [ 1, %42 ]
  %63 = or i64 %45, 1
  %64 = getelementptr inbounds i32, i32* %3, i64 %63
  %65 = load i32, i32* %64, align 4
  switch i32 %65, label %247 [
    i32 6145, label %254
    i32 36096, label %254
    i32 6146, label %246
    i32 36128, label %246
    i32 33306, label %245
  ]

66:                                               ; preds = %36
  %67 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 0, i32 0, i64 8
  %68 = bitcast %union.VkClearValue* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %68, i8 0, i64 16, i1 false) #16
  %69 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 1, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = and i64 %70, -257
  store i64 %71, i64* %69, align 8
  br label %72

72:                                               ; preds = %36, %66
  %73 = phi i1 [ true, %66 ], [ false, %36 ]
  %74 = and i8 %38, 1
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %82, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 0, i32 0, i64 9
  %78 = bitcast %union.VkClearValue* %77 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %78, i8 0, i64 16, i1 false) #16
  %79 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 1, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = and i64 %80, -513
  store i64 %81, i64* %79, align 8
  br label %82

82:                                               ; preds = %72, %6, %76
  %83 = phi i1 [ true, %76 ], [ false, %72 ], [ false, %6 ]
  %84 = phi i8 [ %37, %76 ], [ %37, %72 ], [ 0, %6 ]
  %85 = phi i1 [ %73, %76 ], [ %73, %72 ], [ false, %6 ]
  %86 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %87 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %86, align 8
  %88 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %87, i64 0, i32 9, i32 0
  %89 = load i8, i8* %88, align 1, !noalias !5
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %95, label %91

91:                                               ; preds = %82
  %92 = zext i8 %89 to i32
  %93 = tail call i32 @llvm.cttz.i32(i32 %92, i1 true) #16, !range !2
  %94 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 1, i32 0
  br label %115

95:                                               ; preds = %130, %82
  %96 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 1, i32 0
  %97 = load i64, i64* %96, align 8
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %137, label %99

99:                                               ; preds = %95
  %100 = bitcast %"struct.gl::Box"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #16
  %101 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %86, align 8
  call void @_ZNK2gl16FramebufferState13getDimensionsEv(%"struct.gl::Box"* nonnull sret %7, %"class.gl::FramebufferState"* %101) #16
  %102 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %7, i64 0, i32 3
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %7, i64 0, i32 4
  %105 = load i32, i32* %104, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #16
  %106 = call zeroext i1 @_ZNK2rx9ContextVk30isRotatedAspectRatioForDrawFBOEv(%"class.rx::ContextVk"* %1) #16
  %107 = select i1 %106, i32 %103, i32 %105
  %108 = select i1 %106, i32 %105, i32 %103
  %109 = zext i32 %107 to i64
  %110 = shl nuw i64 %109, 32
  %111 = zext i32 %108 to i64
  %112 = or i64 %110, %111
  %113 = call i32 @_ZN2rx9ContextVk15startRenderPassEN2gl9RectangleEPPNS_2vk4priv22SecondaryCommandBufferEPb(%"class.rx::ContextVk"* %1, i64 0, i64 %112, %"class.rx::vk::priv::SecondaryCommandBuffer"** null, i8* null) #16
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %243, label %137

115:                                              ; preds = %134, %91
  %116 = phi i32 [ %93, %91 ], [ %136, %134 ]
  %117 = phi i8 [ %89, %91 ], [ %132, %134 ]
  %118 = zext i32 %116 to i64
  %119 = shl i32 1, %116
  %120 = trunc i32 %119 to i8
  %121 = and i8 %84, %120
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %130, label %123

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 0, i32 0, i64 %118
  %125 = bitcast %union.VkClearValue* %124 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %125, i8 0, i64 16, i1 false) #16
  %126 = shl i64 1, %118
  %127 = xor i64 %126, -1
  %128 = load i64, i64* %94, align 8
  %129 = and i64 %128, %127
  store i64 %129, i64* %94, align 8
  br label %130

130:                                              ; preds = %115, %123
  %131 = xor i8 %120, -1
  %132 = and i8 %117, %131
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %95, label %134

134:                                              ; preds = %130
  %135 = zext i8 %132 to i32
  %136 = tail call i32 @llvm.cttz.i32(i32 %135, i1 true) #16, !range !2
  br label %115

137:                                              ; preds = %95, %99
  %138 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 2
  %139 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %138, align 8
  %140 = bitcast %"class.rx::vk::Framebuffer"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #16
  store %"class.rx::vk::Framebuffer"* null, %"class.rx::vk::Framebuffer"** %8, align 8
  %141 = call i32 @_ZN2rx13FramebufferVk14getFramebufferEPNS_9ContextVkEPPNS_2vk11FramebufferEPKNS3_9ImageViewE(%"class.rx::FramebufferVk"* %0, %"class.rx::ContextVk"* %1, %"class.rx::vk::Framebuffer"** nonnull %8, %"class.rx::vk::ImageView"* null)
  %142 = icmp eq i32 %141, 1
  br i1 %142, label %241, label %143

143:                                              ; preds = %137
  %144 = load %"class.rx::vk::Framebuffer"*, %"class.rx::vk::Framebuffer"** %8, align 8
  %145 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 5
  %146 = load %"class.rx::vk::priv::SecondaryCommandBuffer"*, %"class.rx::vk::priv::SecondaryCommandBuffer"** %145, align 8
  %147 = icmp eq %"class.rx::vk::priv::SecondaryCommandBuffer"* %146, null
  br i1 %147, label %212, label %148

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 54
  %150 = load %"class.rx::vk::CommandBufferHelper"*, %"class.rx::vk::CommandBufferHelper"** %149, align 8
  %151 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %150, i64 0, i32 11
  %152 = load i8, i8* %151, align 8, !range !8
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %212, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %150, i64 0, i32 8, i32 0, i32 0
  %156 = load %struct.VkFramebuffer_T*, %struct.VkFramebuffer_T** %155, align 8
  %157 = getelementptr inbounds %"class.rx::vk::Framebuffer", %"class.rx::vk::Framebuffer"* %144, i64 0, i32 0, i32 0
  %158 = load %struct.VkFramebuffer_T*, %struct.VkFramebuffer_T** %157, align 8
  %159 = icmp eq %struct.VkFramebuffer_T* %156, %158
  br i1 %159, label %160, label %212

160:                                              ; preds = %154
  %161 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %86, align 8
  %162 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %161, i64 0, i32 6, i32 0
  %163 = load i8, i8* %162, align 1, !noalias !9
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %168, label %165

165:                                              ; preds = %160
  %166 = zext i8 %163 to i32
  %167 = call i32 @llvm.cttz.i32(i32 %166, i1 true) #16, !range !2
  br label %170

168:                                              ; preds = %186, %160
  %169 = icmp eq %"class.rx::RenderTargetVk"* %139, null
  br i1 %169, label %204, label %195

170:                                              ; preds = %190, %165
  %171 = phi %"class.gl::FramebufferState"* [ %161, %165 ], [ %194, %190 ]
  %172 = phi i32 [ 0, %165 ], [ %191, %190 ]
  %173 = phi i8 [ %163, %165 ], [ %188, %190 ]
  %174 = phi i32 [ %167, %165 ], [ %193, %190 ]
  %175 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %171, i64 0, i32 9, i32 0
  %176 = load i8, i8* %175, align 1, !noalias !12
  %177 = shl i32 1, %174
  %178 = trunc i32 %177 to i8
  %179 = and i8 %176, %178
  %180 = icmp ne i8 %179, 0
  %181 = and i8 %84, %178
  %182 = icmp ne i8 %181, 0
  %183 = and i1 %182, %180
  br i1 %183, label %184, label %186

184:                                              ; preds = %170
  %185 = load %"class.rx::vk::CommandBufferHelper"*, %"class.rx::vk::CommandBufferHelper"** %149, align 8
  call void @_ZN2rx2vk19CommandBufferHelper35invalidateRenderPassColorAttachmentENS0_21PackedAttachmentIndexE(%"class.rx::vk::CommandBufferHelper"* %185, i32 %172) #16
  br label %186

186:                                              ; preds = %170, %184
  %187 = xor i8 %178, -1
  %188 = and i8 %173, %187
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %168, label %190

190:                                              ; preds = %186
  %191 = add i32 %172, 1
  %192 = zext i8 %188 to i32
  %193 = call i32 @llvm.cttz.i32(i32 %192, i1 true) #16, !range !2
  %194 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %86, align 8
  br label %170

195:                                              ; preds = %168
  %196 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 0, i32 1
  %197 = load %"class.gl::State"*, %"class.gl::State"** %196, align 8
  %198 = call dereferenceable(60) %"struct.gl::DepthStencilState"* @_ZNK2gl5State20getDepthStencilStateEv(%"class.gl::State"* %197) #16
  br i1 %85, label %199, label %201

199:                                              ; preds = %195
  %200 = load %"class.rx::vk::CommandBufferHelper"*, %"class.rx::vk::CommandBufferHelper"** %149, align 8
  call void @_ZN2rx2vk19CommandBufferHelper35invalidateRenderPassDepthAttachmentERKN2gl17DepthStencilStateERKNS2_9RectangleE(%"class.rx::vk::CommandBufferHelper"* %200, %"struct.gl::DepthStencilState"* dereferenceable(60) %198, %"struct.gl::Rectangle"* dereferenceable(16) %5) #16
  br label %201

201:                                              ; preds = %199, %195
  br i1 %83, label %202, label %204

202:                                              ; preds = %201
  %203 = load %"class.rx::vk::CommandBufferHelper"*, %"class.rx::vk::CommandBufferHelper"** %149, align 8
  call void @_ZN2rx2vk19CommandBufferHelper37invalidateRenderPassStencilAttachmentERKN2gl17DepthStencilStateERKNS2_9RectangleE(%"class.rx::vk::CommandBufferHelper"* %203, %"struct.gl::DepthStencilState"* dereferenceable(60) %198, %"struct.gl::Rectangle"* dereferenceable(16) %5) #16
  br label %204

204:                                              ; preds = %201, %202, %168
  %205 = icmp eq i8 %84, 0
  br i1 %205, label %211, label %206

206:                                              ; preds = %204
  %207 = call i32 @_ZN2rx9ContextVk29flushCommandsAndEndRenderPassEv(%"class.rx::ContextVk"* %1) #16
  %208 = icmp eq i32 %207, 1
  %209 = or i1 %208, %4
  %210 = zext i1 %208 to i32
  br i1 %209, label %241, label %213

211:                                              ; preds = %204
  br i1 %4, label %241, label %213

212:                                              ; preds = %143, %148, %154
  br i1 %4, label %241, label %213

213:                                              ; preds = %206, %211, %212
  %214 = phi i8 [ %84, %206 ], [ 0, %211 ], [ %84, %212 ]
  %215 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %86, align 8
  %216 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %215, i64 0, i32 9, i32 0
  %217 = load i8, i8* %216, align 1, !noalias !15
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %219, label %221

219:                                              ; preds = %233, %213
  %220 = icmp eq %"class.rx::RenderTargetVk"* %139, null
  br i1 %220, label %241, label %237

221:                                              ; preds = %213, %233
  %222 = phi i8 [ %235, %233 ], [ %217, %213 ]
  %223 = zext i8 %222 to i32
  %224 = call i32 @llvm.cttz.i32(i32 %223, i1 true) #16, !range !2
  %225 = shl i32 1, %224
  %226 = trunc i32 %225 to i8
  %227 = and i8 %214, %226
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %233, label %229

229:                                              ; preds = %221
  %230 = zext i32 %224 to i64
  %231 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 1, i32 0, i64 %230
  %232 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %231, align 8
  call void @_ZN2rx14RenderTargetVk23invalidateEntireContentEPNS_9ContextVkE(%"class.rx::RenderTargetVk"* %232, %"class.rx::ContextVk"* %1) #16
  br label %233

233:                                              ; preds = %221, %229
  %234 = xor i8 %226, -1
  %235 = and i8 %222, %234
  %236 = icmp eq i8 %235, 0
  br i1 %236, label %219, label %221

237:                                              ; preds = %219
  br i1 %85, label %238, label %239

238:                                              ; preds = %237
  call void @_ZN2rx14RenderTargetVk23invalidateEntireContentEPNS_9ContextVkE(%"class.rx::RenderTargetVk"* nonnull %139, %"class.rx::ContextVk"* %1) #16
  br label %239

239:                                              ; preds = %238, %237
  br i1 %83, label %240, label %241

240:                                              ; preds = %239
  call void @_ZN2rx14RenderTargetVk30invalidateEntireStencilContentEPNS_9ContextVkE(%"class.rx::RenderTargetVk"* nonnull %139, %"class.rx::ContextVk"* %1) #16
  br label %241

241:                                              ; preds = %206, %137, %211, %212, %239, %240, %219
  %242 = phi i32 [ 0, %211 ], [ 1, %137 ], [ 0, %219 ], [ 0, %240 ], [ 0, %239 ], [ 0, %212 ], [ %210, %206 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #16
  br label %243

243:                                              ; preds = %99, %241
  %244 = phi i32 [ %242, %241 ], [ 1, %99 ]
  ret i32 %244

245:                                              ; preds = %59
  br label %254

246:                                              ; preds = %59, %59
  br label %254

247:                                              ; preds = %59
  %248 = icmp eq i32 %65, 6144
  %249 = add i32 %65, -36064
  %250 = shl i32 1, %249
  %251 = select i1 %248, i32 1, i32 %250
  %252 = trunc i32 %251 to i8
  %253 = or i8 %60, %252
  br label %254

254:                                              ; preds = %247, %246, %245, %59, %59
  %255 = phi i8 [ %253, %247 ], [ %60, %245 ], [ %60, %246 ], [ %60, %59 ], [ %60, %59 ]
  %256 = phi i8 [ %61, %247 ], [ 1, %245 ], [ 1, %246 ], [ %61, %59 ], [ %61, %59 ]
  %257 = phi i8 [ %62, %247 ], [ 1, %245 ], [ %62, %246 ], [ 1, %59 ], [ 1, %59 ]
  %258 = add nuw i64 %45, 2
  %259 = add i64 %47, -2
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %15, label %42
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK2rx13FramebufferVk28getRotatedCompleteRenderAreaEPNS_9ContextVkE(%"class.rx::FramebufferVk"* nocapture readonly, %"class.rx::ContextVk"*) local_unnamed_addr #3 align 2 {
  %3 = alloca %"struct.gl::Box", align 4
  %4 = bitcast %"struct.gl::Box"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %5, align 8
  call void @_ZNK2gl16FramebufferState13getDimensionsEv(%"struct.gl::Box"* nonnull sret %3, %"class.gl::FramebufferState"* %6) #16
  %7 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %3, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %3, i64 0, i32 4
  %10 = load i32, i32* %9, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  %11 = call zeroext i1 @_ZNK2rx9ContextVk30isRotatedAspectRatioForDrawFBOEv(%"class.rx::ContextVk"* %1) #16
  %12 = select i1 %11, i32 %8, i32 %10
  %13 = select i1 %11, i32 %10, i32 %8
  %14 = zext i32 %12 to i64
  %15 = shl nuw i64 %14, 32
  %16 = zext i32 %13 to i64
  %17 = or i64 %15, %16
  %18 = insertvalue { i64, i64 } { i64 0, i64 undef }, i64 %17, 1
  ret { i64, i64 } %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferVk13invalidateSubEPKN2gl7ContextEmPKjRKNS1_9RectangleE(%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i64, i32*, %"struct.gl::Rectangle"* dereferenceable(16)) unnamed_addr #3 align 2 {
  %6 = alloca %"struct.gl::Box", align 4
  %7 = alloca %"struct.gl::Box", align 4
  %8 = alloca %"struct.gl::Box", align 4
  %9 = alloca %"struct.gl::Rectangle", align 4
  %10 = alloca { i64, i64 }, align 8
  %11 = bitcast { i64, i64 }* %10 to %"struct.gl::Rectangle"*
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %13 = bitcast %"class.rx::ContextImpl"** %12 to %"class.rx::ContextVk"**
  %14 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %13, align 8
  %15 = bitcast %"struct.gl::Box"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #16
  %16 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %16, align 8
  call void @_ZNK2gl16FramebufferState13getDimensionsEv(%"struct.gl::Box"* nonnull sret %8, %"class.gl::FramebufferState"* %17) #16
  %18 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %8, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %8, i64 0, i32 4
  %21 = load i32, i32* %20, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #16
  %22 = bitcast %"struct.gl::Rectangle"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #16
  %23 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %9, i64 0, i32 1
  %24 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %9, i64 0, i32 2
  %25 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %9, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %22, i8 0, i64 16, i1 false) #16
  %26 = call i32 @_ZNK2rx9ContextVk26getRotationDrawFramebufferEv(%"class.rx::ContextVk"* %14) #16
  %27 = call zeroext i1 @_ZNK2rx9ContextVk31isViewportFlipEnabledForDrawFBOEv(%"class.rx::ContextVk"* %14) #16
  call void @_ZN2rx15RotateRectangleENS_15SurfaceRotationEbiiRKN2gl9RectangleEPS2_(i32 %26, i1 zeroext %27, i32 %19, i32 %21, %"struct.gl::Rectangle"* dereferenceable(16) %4, %"struct.gl::Rectangle"* nonnull %9) #16
  %28 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #16
  %29 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %11, i64 0, i32 1
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %31 = bitcast i64* %30 to i32*
  %32 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %11, i64 0, i32 3
  %33 = bitcast %"struct.gl::Box"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #16
  %34 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %16, align 8
  call void @_ZNK2gl16FramebufferState13getDimensionsEv(%"struct.gl::Box"* nonnull sret %6, %"class.gl::FramebufferState"* %34) #16
  %35 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %6, i64 0, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %6, i64 0, i32 4
  %38 = load i32, i32* %37, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #16
  %39 = call zeroext i1 @_ZNK2rx9ContextVk30isRotatedAspectRatioForDrawFBOEv(%"class.rx::ContextVk"* %14) #16
  %40 = select i1 %39, i32 %36, i32 %38
  %41 = select i1 %39, i32 %38, i32 %36
  %42 = zext i32 %40 to i64
  %43 = shl nuw i64 %42, 32
  %44 = zext i32 %41 to i64
  %45 = or i64 %43, %44
  %46 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  store i64 0, i64* %46, align 8
  store i64 %45, i64* %30, align 8
  %47 = call zeroext i1 @_ZN2gl13ClipRectangleERKNS_9RectangleES2_PS0_(%"struct.gl::Rectangle"* nonnull dereferenceable(16) %9, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %11, %"struct.gl::Rectangle"* nonnull %9) #16
  br i1 %47, label %48, label %72

48:                                               ; preds = %5
  %49 = bitcast { i64, i64 }* %10 to i32*
  %50 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %9, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = load i32, i32* %49, align 8
  %53 = icmp eq i32 %51, %52
  br i1 %53, label %54, label %72

54:                                               ; preds = %48
  %55 = load i32, i32* %23, align 4
  %56 = load i32, i32* %29, align 4
  %57 = icmp eq i32 %55, %56
  br i1 %57, label %58, label %72

58:                                               ; preds = %54
  %59 = load i32, i32* %24, align 4
  %60 = load i32, i32* %31, align 8
  %61 = icmp eq i32 %59, %60
  br i1 %61, label %62, label %72

62:                                               ; preds = %58
  %63 = load i32, i32* %25, align 4
  %64 = load i32, i32* %32, align 4
  %65 = icmp eq i32 %63, %64
  br i1 %65, label %66, label %72

66:                                               ; preds = %62
  %67 = bitcast %"class.rx::FramebufferVk"* %0 to i32 (%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i64, i32*)***
  %68 = load i32 (%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i64, i32*)**, i32 (%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i64, i32*)*** %67, align 8
  %69 = getelementptr inbounds i32 (%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i64, i32*)*, i32 (%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i64, i32*)** %68, i64 4
  %70 = load i32 (%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i64, i32*)*, i32 (%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i64, i32*)** %69, align 8
  %71 = call i32 %70(%"class.rx::FramebufferVk"* %0, %"class.gl::Context"* %1, i64 %2, i32* %3) #16
  br label %113

72:                                               ; preds = %48, %54, %58, %5, %62
  %73 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 1, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %92, label %76

76:                                               ; preds = %72
  %77 = bitcast %"struct.gl::Box"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #16
  %78 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %16, align 8
  call void @_ZNK2gl16FramebufferState13getDimensionsEv(%"struct.gl::Box"* nonnull sret %7, %"class.gl::FramebufferState"* %78) #16
  %79 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %7, i64 0, i32 3
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %7, i64 0, i32 4
  %82 = load i32, i32* %81, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #16
  %83 = call zeroext i1 @_ZNK2rx9ContextVk30isRotatedAspectRatioForDrawFBOEv(%"class.rx::ContextVk"* %14) #16
  %84 = select i1 %83, i32 %80, i32 %82
  %85 = select i1 %83, i32 %82, i32 %80
  %86 = zext i32 %84 to i64
  %87 = shl nuw i64 %86, 32
  %88 = zext i32 %85 to i64
  %89 = or i64 %87, %88
  %90 = call i32 @_ZN2rx9ContextVk15startRenderPassEN2gl9RectangleEPPNS_2vk4priv22SecondaryCommandBufferEPb(%"class.rx::ContextVk"* %14, i64 0, i64 %89, %"class.rx::vk::priv::SecondaryCommandBuffer"** null, i8* null) #16
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %113, label %92

92:                                               ; preds = %72, %76
  %93 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %14, i64 0, i32 5
  %94 = load %"class.rx::vk::priv::SecondaryCommandBuffer"*, %"class.rx::vk::priv::SecondaryCommandBuffer"** %93, align 8
  %95 = icmp eq %"class.rx::vk::priv::SecondaryCommandBuffer"* %94, null
  br i1 %95, label %108, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %14, i64 0, i32 54
  %98 = load %"class.rx::vk::CommandBufferHelper"*, %"class.rx::vk::CommandBufferHelper"** %97, align 8
  %99 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %98, i64 0, i32 11
  %100 = load i8, i8* %99, align 8, !range !8
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %108, label %102

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %98, i64 0, i32 9
  %104 = call zeroext i1 @_ZNK2gl9Rectangle8enclosesERKS0_(%"struct.gl::Rectangle"* nonnull %9, %"struct.gl::Rectangle"* dereferenceable(16) %103) #16
  br i1 %104, label %105, label %108

105:                                              ; preds = %102
  %106 = call i32 @_ZN2rx13FramebufferVk14invalidateImplEPNS_9ContextVkEmPKjbRKN2gl9RectangleE(%"class.rx::FramebufferVk"* %0, %"class.rx::ContextVk"* %14, i64 %2, i32* %3, i1 zeroext true, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %9)
  %107 = icmp eq i32 %106, 1
  br i1 %107, label %113, label %112

108:                                              ; preds = %96, %92, %102
  %109 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %14, i64 0, i32 0, i32 1
  %110 = load %"class.gl::State"*, %"class.gl::State"** %109, align 8
  %111 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %110, i64 0, i32 91
  call void @_ZNK2gl5Debug17insertPerfWarningEjPKcPj(%"class.gl::Debug"* %111, i32 37192, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str, i64 0, i64 0), i32* nonnull @_ZZN2rx13FramebufferVk13invalidateSubEPKN2gl7ContextEmPKjRKNS1_9RectangleEE12sRepeatCount) #16
  br label %112

112:                                              ; preds = %105, %108
  br label %113

113:                                              ; preds = %105, %76, %112, %66
  %114 = phi i32 [ %71, %66 ], [ 0, %112 ], [ 1, %105 ], [ 1, %76 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #16
  ret i32 %114
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK2rx13FramebufferVk31getNonRotatedCompleteRenderAreaEv(%"class.rx::FramebufferVk"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = alloca %"struct.gl::Box", align 4
  %3 = bitcast %"struct.gl::Box"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #16
  %4 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %4, align 8
  call void @_ZNK2gl16FramebufferState13getDimensionsEv(%"struct.gl::Box"* nonnull sret %2, %"class.gl::FramebufferState"* %5) #16
  %6 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %2, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %2, i64 0, i32 4
  %9 = load i32, i32* %8, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #16
  %10 = zext i32 %9 to i64
  %11 = shl nuw i64 %10, 32
  %12 = zext i32 %7 to i64
  %13 = or i64 %11, %12
  %14 = insertvalue { i64, i64 } { i64 0, i64 undef }, i64 %13, 1
  ret { i64, i64 } %14
}

declare void @_ZN2rx15RotateRectangleENS_15SurfaceRotationEbiiRKN2gl9RectangleEPS2_(i32, i1 zeroext, i32, i32, %"struct.gl::Rectangle"* dereferenceable(16), %"struct.gl::Rectangle"*) local_unnamed_addr #1

declare i32 @_ZNK2rx9ContextVk26getRotationDrawFramebufferEv(%"class.rx::ContextVk"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2rx9ContextVk31isViewportFlipEnabledForDrawFBOEv(%"class.rx::ContextVk"*) local_unnamed_addr #1

declare zeroext i1 @_ZN2gl13ClipRectangleERKNS_9RectangleES2_PS0_(%"struct.gl::Rectangle"* dereferenceable(16), %"struct.gl::Rectangle"* dereferenceable(16), %"struct.gl::Rectangle"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferVk19flushDeferredClearsEPNS_9ContextVkE(%"class.rx::FramebufferVk"* nocapture readonly, %"class.rx::ContextVk"*) local_unnamed_addr #3 align 2 {
  %3 = alloca %"struct.gl::Box", align 4
  %4 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 1, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %23, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.gl::Box"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #16
  %9 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %10 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %9, align 8
  call void @_ZNK2gl16FramebufferState13getDimensionsEv(%"struct.gl::Box"* nonnull sret %3, %"class.gl::FramebufferState"* %10) #16
  %11 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %3, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %3, i64 0, i32 4
  %14 = load i32, i32* %13, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #16
  %15 = call zeroext i1 @_ZNK2rx9ContextVk30isRotatedAspectRatioForDrawFBOEv(%"class.rx::ContextVk"* %1) #16
  %16 = select i1 %15, i32 %12, i32 %14
  %17 = select i1 %15, i32 %14, i32 %12
  %18 = zext i32 %16 to i64
  %19 = shl nuw i64 %18, 32
  %20 = zext i32 %17 to i64
  %21 = or i64 %19, %20
  %22 = call i32 @_ZN2rx9ContextVk15startRenderPassEN2gl9RectangleEPPNS_2vk4priv22SecondaryCommandBufferEPb(%"class.rx::ContextVk"* %1, i64 0, i64 %21, %"class.rx::vk::priv::SecondaryCommandBuffer"** null, i8* null) #16
  br label %23

23:                                               ; preds = %2, %7
  %24 = phi i32 [ %22, %7 ], [ 0, %2 ]
  ret i32 %24
}

declare zeroext i1 @_ZNK2gl9Rectangle8enclosesERKS0_(%"struct.gl::Rectangle"*, %"struct.gl::Rectangle"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNK2gl5Debug17insertPerfWarningEjPKcPj(%"class.gl::Debug"*, i32, i8*, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferVk5clearEPKN2gl7ContextEj(%"class.rx::FramebufferVk"*, %"class.gl::Context"* nocapture readonly, i32) unnamed_addr #3 align 2 {
  %4 = alloca %"class.gl::TraceEvent::TraceEndOnScopeClose", align 8
  %5 = alloca %"class.angle::BitSetT", align 1
  %6 = load atomic i8, i8* bitcast (i64* @_ZGVZN2rx13FramebufferVk5clearEPKN2gl7ContextEjE31trace_event_unique_catstatic428 to i8*) acquire, align 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %14, !prof !18

8:                                                ; preds = %3
  %9 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2rx13FramebufferVk5clearEPKN2gl7ContextEjE31trace_event_unique_catstatic428) #16
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = tail call %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() #16
  %13 = tail call i8* @_ZN5angle27GetTraceCategoryEnabledFlagEPNS_15PlatformMethodsEPKc(%"struct.angle::PlatformMethods"* %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0)) #16
  store i8* %13, i8** @_ZZN2rx13FramebufferVk5clearEPKN2gl7ContextEjE31trace_event_unique_catstatic428, align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN2rx13FramebufferVk5clearEPKN2gl7ContextEjE31trace_event_unique_catstatic428) #16
  br label %14

14:                                               ; preds = %8, %11, %3
  %15 = bitcast %"class.gl::TraceEvent::TraceEndOnScopeClose"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #16
  %16 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %4, i64 0, i32 0
  %17 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %4, i64 0, i32 1
  %18 = bitcast %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false)
  store %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* null, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"** %16, align 8
  %19 = load i8*, i8** @_ZZN2rx13FramebufferVk5clearEPKN2gl7ContextEjE31trace_event_unique_catstatic428, align 8
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %33, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %4, i64 0, i32 1, i32 2
  %24 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %4, i64 0, i32 1, i32 1
  %25 = tail call %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() #16
  %26 = load i8*, i8** @_ZZN2rx13FramebufferVk5clearEPKN2gl7ContextEjE31trace_event_unique_catstatic428, align 8
  %27 = tail call i64 @_ZN5angle13AddTraceEventEPNS_15PlatformMethodsEcPKhPKcyiPS5_S3_PKyh(%"struct.angle::PlatformMethods"* %25, i8 signext 66, i8* %26, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #16
  %28 = tail call %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() #16
  %29 = load i64, i64* bitcast (i8** @_ZZN2rx13FramebufferVk5clearEPKN2gl7ContextEjE31trace_event_unique_catstatic428 to i64*), align 8
  %30 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %30, i64 0, i32 0
  store %"struct.angle::PlatformMethods"* %28, %"struct.angle::PlatformMethods"** %31, align 8
  %32 = bitcast i8** %24 to i64*
  store i64 %29, i64* %32, align 8
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), i8** %23, align 8
  store %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %30, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"** %16, align 8
  br label %33

33:                                               ; preds = %14, %22
  %34 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %35 = bitcast %"class.rx::ContextImpl"** %34 to %"class.rx::ContextVk"**
  %36 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %35, align 8
  %37 = and i32 %2, 16384
  %38 = icmp eq i32 %37, 0
  %39 = and i32 %2, 256
  %40 = icmp ne i32 %39, 0
  %41 = and i32 %2, 1024
  %42 = icmp ne i32 %41, 0
  br i1 %38, label %48, label %43

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %45 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %44, align 8
  %46 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %45, i64 0, i32 9, i32 0
  %47 = load i8, i8* %46, align 1, !noalias !19
  br label %48

48:                                               ; preds = %33, %43
  %49 = phi i8 [ %47, %43 ], [ 0, %33 ]
  %50 = call dereferenceable(16) %union.VkClearValue* @_ZNK2rx9ContextVk18getClearColorValueEv(%"class.rx::ContextVk"* %36) #16
  %51 = getelementptr inbounds %union.VkClearValue, %union.VkClearValue* %50, i64 0, i32 0
  %52 = call dereferenceable(16) %union.VkClearValue* @_ZNK2rx9ContextVk25getClearDepthStencilValueEv(%"class.rx::ContextVk"* %36) #16
  %53 = bitcast %union.VkClearValue* %52 to %struct.VkClearDepthStencilValue*
  %54 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %5, i64 0, i32 0
  store i8 %49, i8* %54, align 1
  %55 = call i32 @_ZN2rx13FramebufferVk9clearImplEPKN2gl7ContextEN5angle7BitSetTILm8EhmEEbbRK17VkClearColorValueRK24VkClearDepthStencilValue(%"class.rx::FramebufferVk"* %0, %"class.gl::Context"* %1, %"class.angle::BitSetT"* nonnull %5, i1 zeroext %40, i1 zeroext %42, %union.VkClearColorValue* dereferenceable(16) %51, %struct.VkClearDepthStencilValue* dereferenceable(8) %53)
  %56 = load %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"*, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"** %16, align 8
  %57 = icmp eq %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %56, null
  br i1 %57, label %69, label %58

58:                                               ; preds = %48
  %59 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %56, i64 0, i32 1
  %60 = load i8*, i8** %59, align 8
  %61 = load i8, i8* %60, align 1
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %69, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %56, i64 0, i32 0
  %65 = load %"struct.angle::PlatformMethods"*, %"struct.angle::PlatformMethods"** %64, align 8
  %66 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %56, i64 0, i32 2
  %67 = load i8*, i8** %66, align 8
  %68 = call i64 @_ZN5angle13AddTraceEventEPNS_15PlatformMethodsEcPKhPKcyiPS5_S3_PKyh(%"struct.angle::PlatformMethods"* %65, i8 signext 69, i8* %60, i8* %67, i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #16
  br label %69

69:                                               ; preds = %48, %58, %63
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #16
  ret i32 %55
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #8

declare i8* @_ZN5angle27GetTraceCategoryEnabledFlagEPNS_15PlatformMethodsEPKc(%"struct.angle::PlatformMethods"*, i8*) local_unnamed_addr #1

declare %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #8

declare dereferenceable(16) %union.VkClearValue* @_ZNK2rx9ContextVk18getClearColorValueEv(%"class.rx::ContextVk"*) local_unnamed_addr #1

declare dereferenceable(16) %union.VkClearValue* @_ZNK2rx9ContextVk25getClearDepthStencilValueEv(%"class.rx::ContextVk"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferVk9clearImplEPKN2gl7ContextEN5angle7BitSetTILm8EhmEEbbRK17VkClearColorValueRK24VkClearDepthStencilValue(%"class.rx::FramebufferVk"*, %"class.gl::Context"* nocapture readonly, %"class.angle::BitSetT"* nocapture, i1 zeroext, i1 zeroext, %union.VkClearColorValue* nocapture readonly dereferenceable(16), %struct.VkClearDepthStencilValue* nocapture readonly dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %8 = alloca %"struct.gl::Box", align 4
  %9 = alloca %"struct.gl::Box", align 4
  %10 = alloca %"struct.gl::Box", align 4
  %11 = alloca { i64, i64 }, align 8
  %12 = alloca { i64, i64 }, align 8
  %13 = alloca { i64, i64 }, align 8
  %14 = alloca { i64, i64 }, align 8
  %15 = bitcast { i64, i64 }* %14 to %"struct.gl::Rectangle"*
  %16 = alloca %"class.rx::vk::Framebuffer"*, align 8
  %17 = alloca %"class.angle::BitSetT", align 1
  %18 = alloca %"class.angle::BitSetT", align 1
  %19 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %20 = bitcast %"class.rx::ContextImpl"** %19 to %"class.rx::ContextVk"**
  %21 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %20, align 8
  %22 = bitcast { i64, i64 }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #16
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 1
  %24 = bitcast { i64, i64 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24)
  %25 = bitcast { i64, i64 }* %11 to %"struct.gl::Rectangle"*
  %26 = bitcast { i64, i64 }* %12 to %"struct.gl::Rectangle"*
  %27 = bitcast { i64, i64 }* %13 to %"struct.gl::Rectangle"*
  %28 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #16
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  %30 = bitcast i64* %29 to i32*
  %31 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %26, i64 0, i32 3
  %32 = bitcast %"struct.gl::Box"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #16
  %33 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %34 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %33, align 8
  call void @_ZNK2gl16FramebufferState13getDimensionsEv(%"struct.gl::Box"* nonnull sret %10, %"class.gl::FramebufferState"* %34) #16
  %35 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %10, i64 0, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %10, i64 0, i32 4
  %38 = load i32, i32* %37, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #16
  %39 = zext i32 %38 to i64
  %40 = shl nuw i64 %39, 32
  %41 = zext i32 %36 to i64
  %42 = or i64 %40, %41
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  store i64 0, i64* %43, align 8
  store i64 %42, i64* %29, align 8
  %44 = call zeroext i1 @_ZNK2rx9ContextVk31isViewportFlipEnabledForDrawFBOEv(%"class.rx::ContextVk"* %21) #16
  %45 = bitcast { i64, i64 }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #16
  %46 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 1
  %47 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %21, i64 0, i32 0, i32 1
  %48 = load %"class.gl::State"*, %"class.gl::State"** %47, align 8
  %49 = call { i64, i64 } @_ZN2rx17ClipRectToScissorERKN2gl5StateERKNS0_9RectangleEb(%"class.gl::State"* dereferenceable(12296) %48, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %26, i1 zeroext false) #16
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 0
  %51 = extractvalue { i64, i64 } %49, 0
  store i64 %51, i64* %50, align 8
  %52 = extractvalue { i64, i64 } %49, 1
  store i64 %52, i64* %46, align 8
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 16, i1 false) #16
  %54 = call i32 @_ZNK2rx9ContextVk26getRotationDrawFramebufferEv(%"class.rx::ContextVk"* %21) #16
  %55 = load i32, i32* %30, align 8
  %56 = load i32, i32* %31, align 4
  call void @_ZN2rx15RotateRectangleENS_15SurfaceRotationEbiiRKN2gl9RectangleEPS2_(i32 %54, i1 zeroext %44, i32 %55, i32 %56, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %27, %"struct.gl::Rectangle"* nonnull %25) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #16
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = load i64, i64* %53, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24)
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 0
  store i64 %58, i64* %60, align 8
  store i64 %59, i64* %23, align 8
  %61 = call i64 @_ZNK2rx9ContextVk18getClearColorMasksEv(%"class.rx::ContextVk"* %21) #16
  %62 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %2, i64 0, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp ne i8 %63, 0
  %65 = load %"class.gl::State"*, %"class.gl::State"** %47, align 8
  %66 = call dereferenceable(60) %"struct.gl::DepthStencilState"* @_ZNK2gl5State20getDepthStencilStateEv(%"class.gl::State"* %65) #16
  %67 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %66, i64 0, i32 9
  %68 = load i32, i32* %67, align 4
  %69 = trunc i32 %68 to i8
  %70 = bitcast %"struct.gl::Box"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #16
  %71 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %33, align 8
  call void @_ZNK2gl16FramebufferState13getDimensionsEv(%"struct.gl::Box"* nonnull sret %9, %"class.gl::FramebufferState"* %71) #16
  %72 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %9, i64 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %9, i64 0, i32 4
  %75 = load i32, i32* %74, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #16
  %76 = call zeroext i1 @_ZNK2rx9ContextVk30isRotatedAspectRatioForDrawFBOEv(%"class.rx::ContextVk"* %21) #16
  %77 = lshr i64 %58, 32
  %78 = or i64 %77, %58
  %79 = trunc i64 %78 to i32
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %90

81:                                               ; preds = %7
  %82 = lshr i64 %59, 32
  %83 = trunc i64 %82 to i32
  %84 = select i1 %76, i32 %73, i32 %75
  %85 = trunc i64 %59 to i32
  %86 = select i1 %76, i32 %75, i32 %73
  %87 = icmp ne i32 %86, %85
  %88 = icmp ne i32 %84, %83
  %89 = or i1 %88, %87
  br label %90

90:                                               ; preds = %81, %7
  %91 = phi i1 [ true, %7 ], [ %89, %81 ]
  br i1 %64, label %92, label %98

92:                                               ; preds = %90
  %93 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 6
  %94 = load i64, i64* %93, align 8
  %95 = and i64 %94, %61
  %96 = icmp ne i64 %95, %94
  %97 = or i1 %91, %96
  br label %98

98:                                               ; preds = %90, %92
  %99 = phi i1 [ %97, %92 ], [ false, %90 ]
  %100 = and i32 %68, 255
  %101 = icmp ne i32 %100, 255
  %102 = and i1 %101, %4
  %103 = and i1 %91, %3
  %104 = or i1 %102, %91
  %105 = and i1 %104, %4
  %106 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %21, i64 0, i32 5
  %107 = load %"class.rx::vk::priv::SecondaryCommandBuffer"*, %"class.rx::vk::priv::SecondaryCommandBuffer"** %106, align 8
  %108 = icmp eq %"class.rx::vk::priv::SecondaryCommandBuffer"* %107, null
  br i1 %108, label %133, label %109

109:                                              ; preds = %98
  %110 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %21, i64 0, i32 54
  %111 = load %"class.rx::vk::CommandBufferHelper"*, %"class.rx::vk::CommandBufferHelper"** %110, align 8
  %112 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %111, i64 0, i32 11
  %113 = load i8, i8* %112, align 8, !range !8
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %133, label %115

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %111, i64 0, i32 4, i32 1
  %117 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %111, i64 0, i32 4, i32 1, i32 0, i32 1
  %118 = bitcast %"struct.rx::vk::priv::CommandHeader"*** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.std::__1::vector.941"* %116 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = icmp eq i64 %119, %121
  br i1 %122, label %133, label %123

123:                                              ; preds = %115
  %124 = inttoptr i64 %121 to %"struct.rx::vk::priv::CommandHeader"**
  %125 = load %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %124, align 8
  %126 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader", %"struct.rx::vk::priv::CommandHeader"* %125, i64 0, i32 0
  %127 = load i16, i16* %126, align 2
  %128 = icmp eq i16 %127, 0
  br i1 %128, label %133, label %129

129:                                              ; preds = %123
  %130 = bitcast %"class.rx::vk::Framebuffer"** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #16
  store %"class.rx::vk::Framebuffer"* null, %"class.rx::vk::Framebuffer"** %16, align 8
  %131 = call i32 @_ZN2rx13FramebufferVk14getFramebufferEPNS_9ContextVkEPPNS_2vk11FramebufferEPKNS3_9ImageViewE(%"class.rx::FramebufferVk"* %0, %"class.rx::ContextVk"* %21, %"class.rx::vk::Framebuffer"** nonnull %16, %"class.rx::vk::ImageView"* null)
  %132 = icmp eq i32 %131, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #16
  br i1 %132, label %231, label %133

133:                                              ; preds = %129, %123, %115, %98, %109
  %134 = phi i1 [ true, %129 ], [ false, %123 ], [ false, %109 ], [ false, %98 ], [ false, %115 ]
  %135 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %21, i64 0, i32 1, i32 1
  %136 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %135, align 8
  %137 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %136, i64 0, i32 7, i32 63, i32 4
  %138 = load i8, i8* %137, align 8, !range !8
  %139 = icmp eq i8 %138, 0
  %140 = xor i1 %134, true
  %141 = or i1 %139, %140
  br i1 %141, label %142, label %152

142:                                              ; preds = %133
  %143 = xor i1 %64, true
  %144 = or i1 %99, %143
  br i1 %144, label %147, label %145

145:                                              ; preds = %142
  %146 = load i8, i8* %62, align 1
  br label %147

147:                                              ; preds = %142, %145
  %148 = phi i8 [ 0, %142 ], [ %146, %145 ]
  %149 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %17, i64 0, i32 0
  store i8 %148, i8* %149, align 1
  %150 = xor i1 %103, %3
  %151 = xor i1 %105, %4
  call void @_ZN2rx13FramebufferVk29mergeClearsWithDeferredClearsEN5angle7BitSetTILm8EhmEEbbRK17VkClearColorValueRK24VkClearDepthStencilValue(%"class.rx::FramebufferVk"* %0, %"class.angle::BitSetT"* nonnull %17, i1 zeroext %150, i1 zeroext %151, %union.VkClearColorValue* dereferenceable(16) %5, %struct.VkClearDepthStencilValue* dereferenceable(8) %6)
  br label %152

152:                                              ; preds = %133, %147
  %153 = phi i1 [ %99, %147 ], [ %64, %133 ]
  %154 = phi i1 [ %103, %147 ], [ %3, %133 ]
  %155 = phi i1 [ %105, %147 ], [ %4, %133 ]
  %156 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 1, i32 0
  %157 = load i64, i64* %156, align 8
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %223, label %159

159:                                              ; preds = %152
  %160 = or i1 %154, %155
  %161 = or i1 %153, %160
  br i1 %134, label %162, label %168

162:                                              ; preds = %159
  %163 = load %"class.gl::State"*, %"class.gl::State"** %47, align 8
  %164 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %163, i64 0, i32 91
  call void @_ZNK2gl5Debug17insertPerfWarningEjPKcPj(%"class.gl::Debug"* %164, i32 37192, i8* getelementptr inbounds ([140 x i8], [140 x i8]* @.str.3, i64 0, i64 0), i32* nonnull @_ZZN2rx13FramebufferVk9clearImplEPKN2gl7ContextEN5angle7BitSetTILm8EhmEEbbRK17VkClearColorValueRK24VkClearDepthStencilValueE12sRepeatCount) #16
  %165 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %21, i64 0, i32 54
  %166 = load %"class.rx::vk::CommandBufferHelper"*, %"class.rx::vk::CommandBufferHelper"** %165, align 8
  %167 = call i32 @_ZN2rx13FramebufferVk16clearWithCommandEPNS_9ContextVkEPNS_2vk19CommandBufferHelperERKN2gl9RectangleE(%"class.rx::FramebufferVk"* %0, %"class.rx::ContextVk"* %21, %"class.rx::vk::CommandBufferHelper"* %166, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %15)
  br label %222

168:                                              ; preds = %159
  %169 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %33, align 8
  %170 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %169, i64 0, i32 6, i32 0
  %171 = load i8, i8* %170, align 1, !noalias !22
  %172 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10, i32 0
  %173 = load i32, i32* %172, align 4
  %174 = lshr i32 %173, 6
  %175 = and i32 %174, 511
  %176 = icmp eq i8 %171, 0
  br i1 %176, label %198, label %177

177:                                              ; preds = %168, %192
  %178 = phi i8 [ %196, %192 ], [ %171, %168 ]
  %179 = zext i8 %178 to i32
  %180 = call i32 @llvm.cttz.i32(i32 %179, i1 true) #16, !range !2
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 1, i32 0, i64 %181
  %183 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %182, align 8
  %184 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %183, i64 0, i32 7
  %185 = load i32, i32* %184, align 8
  %186 = icmp ugt i32 %185, %175
  br i1 %186, label %187, label %192

187:                                              ; preds = %177
  %188 = call dereferenceable(440) %"class.rx::vk::ImageHelper"* @_ZN2rx14RenderTargetVk21getImageForRenderPassEv(%"class.rx::RenderTargetVk"* %183) #16
  %189 = getelementptr inbounds %"class.rx::vk::ImageHelper", %"class.rx::vk::ImageHelper"* %188, i64 0, i32 4
  %190 = load i32, i32* %189, align 8
  %191 = icmp eq i32 %190, 2
  br i1 %191, label %199, label %192

192:                                              ; preds = %187, %177
  %193 = shl i32 1, %180
  %194 = trunc i32 %193 to i8
  %195 = xor i8 %194, -1
  %196 = and i8 %178, %195
  %197 = icmp eq i8 %196, 0
  br i1 %197, label %198, label %177

198:                                              ; preds = %192, %168
  br i1 %161, label %199, label %221

199:                                              ; preds = %187, %198
  %200 = load i64, i64* %156, align 8
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %222, label %202

202:                                              ; preds = %199
  %203 = bitcast %"struct.gl::Box"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %203) #16
  %204 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %33, align 8
  call void @_ZNK2gl16FramebufferState13getDimensionsEv(%"struct.gl::Box"* nonnull sret %8, %"class.gl::FramebufferState"* %204) #16
  %205 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %8, i64 0, i32 3
  %206 = load i32, i32* %205, align 4
  %207 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %8, i64 0, i32 4
  %208 = load i32, i32* %207, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %203) #16
  %209 = call zeroext i1 @_ZNK2rx9ContextVk30isRotatedAspectRatioForDrawFBOEv(%"class.rx::ContextVk"* %21) #16
  %210 = select i1 %209, i32 %206, i32 %208
  %211 = select i1 %209, i32 %208, i32 %206
  %212 = zext i32 %210 to i64
  %213 = shl nuw i64 %212, 32
  %214 = zext i32 %211 to i64
  %215 = or i64 %213, %214
  %216 = call i32 @_ZN2rx9ContextVk15startRenderPassEN2gl9RectangleEPPNS_2vk4priv22SecondaryCommandBufferEPb(%"class.rx::ContextVk"* %21, i64 0, i64 %215, %"class.rx::vk::priv::SecondaryCommandBuffer"** null, i8* null) #16
  %217 = icmp eq i32 %216, 1
  %218 = xor i1 %161, true
  %219 = or i1 %217, %218
  %220 = zext i1 %217 to i32
  br i1 %219, label %231, label %223

221:                                              ; preds = %198
  call void @_ZN2rx13FramebufferVk13redeferClearsEPNS_9ContextVkE(%"class.rx::FramebufferVk"* %0, %"class.rx::ContextVk"* undef)
  br label %231

222:                                              ; preds = %199, %162
  br i1 %161, label %223, label %231

223:                                              ; preds = %202, %152, %222
  br i1 %153, label %224, label %226

224:                                              ; preds = %223
  %225 = load i8, i8* %62, align 1
  br label %227

226:                                              ; preds = %223
  store i8 0, i8* %62, align 1
  br label %227

227:                                              ; preds = %224, %226
  %228 = phi i8 [ %225, %224 ], [ 0, %226 ]
  %229 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %18, i64 0, i32 0
  store i8 %228, i8* %229, align 1
  %230 = call i32 @_ZN2rx13FramebufferVk13clearWithDrawEPNS_9ContextVkERKN2gl9RectangleEN5angle7BitSetTILm8EhmEEbbmhRK17VkClearColorValueRK24VkClearDepthStencilValue(%"class.rx::FramebufferVk"* %0, %"class.rx::ContextVk"* %21, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %15, %"class.angle::BitSetT"* nonnull %18, i1 zeroext %154, i1 zeroext %155, i64 %61, i8 zeroext %69, %union.VkClearColorValue* dereferenceable(16) %5, %struct.VkClearDepthStencilValue* dereferenceable(8) %6)
  br label %231

231:                                              ; preds = %221, %202, %129, %222, %227
  %232 = phi i32 [ 1, %129 ], [ %230, %227 ], [ %220, %202 ], [ 0, %222 ], [ 0, %221 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #16
  ret i32 %232
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK2rx13FramebufferVk29getRotatedScissoredRenderAreaEPNS_9ContextVkE(%"class.rx::FramebufferVk"* nocapture readonly, %"class.rx::ContextVk"*) local_unnamed_addr #3 align 2 {
  %3 = alloca %"struct.gl::Box", align 4
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"struct.gl::Rectangle"*
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"struct.gl::Rectangle"*
  %8 = alloca { i64, i64 }, align 8
  %9 = bitcast { i64, i64 }* %8 to %"struct.gl::Rectangle"*
  %10 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #16
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %12 = bitcast i64* %11 to i32*
  %13 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %7, i64 0, i32 3
  %14 = bitcast %"struct.gl::Box"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #16
  %15 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %16 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %15, align 8
  call void @_ZNK2gl16FramebufferState13getDimensionsEv(%"struct.gl::Box"* nonnull sret %3, %"class.gl::FramebufferState"* %16) #16
  %17 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %3, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %3, i64 0, i32 4
  %20 = load i32, i32* %19, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #16
  %21 = zext i32 %20 to i64
  %22 = shl nuw i64 %21, 32
  %23 = zext i32 %18 to i64
  %24 = or i64 %22, %23
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 0, i64* %25, align 8
  store i64 %24, i64* %11, align 8
  %26 = call zeroext i1 @_ZNK2rx9ContextVk31isViewportFlipEnabledForDrawFBOEv(%"class.rx::ContextVk"* %1) #16
  %27 = bitcast { i64, i64 }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #16
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %29 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 0, i32 1
  %30 = load %"class.gl::State"*, %"class.gl::State"** %29, align 8
  %31 = call { i64, i64 } @_ZN2rx17ClipRectToScissorERKN2gl5StateERKNS0_9RectangleEb(%"class.gl::State"* dereferenceable(12296) %30, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %7, i1 zeroext false) #16
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  %33 = extractvalue { i64, i64 } %31, 0
  store i64 %33, i64* %32, align 8
  %34 = extractvalue { i64, i64 } %31, 1
  store i64 %34, i64* %28, align 8
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %36 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 16, i1 false) #16
  %37 = call i32 @_ZNK2rx9ContextVk26getRotationDrawFramebufferEv(%"class.rx::ContextVk"* %1) #16
  %38 = load i32, i32* %12, align 8
  %39 = load i32, i32* %13, align 4
  call void @_ZN2rx15RotateRectangleENS_15SurfaceRotationEbiiRKN2gl9RectangleEPS2_(i32 %37, i1 zeroext %26, i32 %38, i32 %39, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %9, %"struct.gl::Rectangle"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #16
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = insertvalue { i64, i64 } undef, i64 %41, 0
  %43 = load i64, i64* %35, align 8
  %44 = insertvalue { i64, i64 } %42, i64 %43, 1
  ret { i64, i64 } %44
}

declare i64 @_ZNK2rx9ContextVk18getClearColorMasksEv(%"class.rx::ContextVk"*) local_unnamed_addr #1

declare dereferenceable(60) %"struct.gl::DepthStencilState"* @_ZNK2gl5State20getDepthStencilStateEv(%"class.gl::State"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferVk14getFramebufferEPNS_9ContextVkEPPNS_2vk11FramebufferEPKNS3_9ImageViewE(%"class.rx::FramebufferVk"*, %"class.rx::ContextVk"*, %"class.rx::vk::Framebuffer"**, %"class.rx::vk::ImageView"* readonly) local_unnamed_addr #3 align 2 {
  %5 = alloca %"class.rx::vk::RenderPass"*, align 8
  %6 = alloca %"class.std::__1::vector.1443", align 8
  %7 = alloca %"class.rx::vk::ImageView"*, align 8
  %8 = alloca %"class.rx::vk::ImageView"*, align 8
  %9 = alloca %"class.rx::vk::ImageView"*, align 8
  %10 = alloca %"class.rx::vk::ImageView"*, align 8
  %11 = alloca %struct.VkFramebufferCreateInfo, align 8
  %12 = alloca %"class.rx::vk::FramebufferHelper", align 8
  %13 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 4
  %14 = load %"class.rx::vk::FramebufferHelper"*, %"class.rx::vk::FramebufferHelper"** %13, align 8
  %15 = icmp eq %"class.rx::vk::FramebufferHelper"* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.rx::vk::FramebufferHelper", %"class.rx::vk::FramebufferHelper"* %14, i64 0, i32 1
  store %"class.rx::vk::Framebuffer"* %17, %"class.rx::vk::Framebuffer"** %2, align 8
  br label %540

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 11
  %20 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10
  %21 = getelementptr inbounds %"class.rx::FramebufferCache", %"class.rx::FramebufferCache"* %19, i64 0, i32 0, i32 0, i32 0
  %22 = tail call { i8*, %"union.absl::container_internal::map_slot_type.831"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE4findIS5_EENSJ_8iteratorERSG_(%"class.absl::container_internal::raw_hash_set.830"* %21, %"class.rx::vk::FramebufferDesc"* dereferenceable(148) %20) #16
  %23 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.831"* } %22, 0
  %24 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.831"* } %22, 1
  %25 = icmp eq i8* %23, null
  br i1 %25, label %35, label %26

26:                                               ; preds = %18
  %27 = load i8, i8* %23, align 1
  %28 = icmp sgt i8 %27, -1
  br i1 %28, label %30, label %29, !prof !3

29:                                               ; preds = %26
  tail call void @llvm.trap() #16
  unreachable

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 11, i32 1, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, 1
  store i64 %33, i64* %31, align 8
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %24, i64 0, i32 0, i32 1, i32 1
  store %"class.rx::vk::Framebuffer"* %34, %"class.rx::vk::Framebuffer"** %2, align 8
  br label %540

35:                                               ; preds = %18
  %36 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 11, i32 1, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %36, align 8
  %39 = bitcast %"class.rx::vk::RenderPass"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #16
  store %"class.rx::vk::RenderPass"* null, %"class.rx::vk::RenderPass"** %5, align 8
  %40 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 2
  %41 = call i32 @_ZN2rx9ContextVk23getCompatibleRenderPassERKNS_2vk14RenderPassDescEPPNS1_10RenderPassE(%"class.rx::ContextVk"* %1, %"class.rx::vk::RenderPassDesc"* dereferenceable(12) %40, %"class.rx::vk::RenderPass"** nonnull %5) #16
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %538, label %43

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 1
  %45 = load %"class.rx::WindowSurfaceVk"*, %"class.rx::WindowSurfaceVk"** %44, align 8
  %46 = icmp eq %"class.rx::WindowSurfaceVk"* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %43
  %48 = load %"class.rx::vk::RenderPass"*, %"class.rx::vk::RenderPass"** %5, align 8
  %49 = call i32 @_ZN2rx15WindowSurfaceVk21getCurrentFramebufferEPNS_9ContextVkERKNS_2vk10RenderPassEPPNS3_11FramebufferE(%"class.rx::WindowSurfaceVk"* nonnull %45, %"class.rx::ContextVk"* %1, %"class.rx::vk::RenderPass"* dereferenceable(8) %48, %"class.rx::vk::Framebuffer"** %2) #16
  br label %538

50:                                               ; preds = %43
  %51 = bitcast %"class.std::__1::vector.1443"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #16
  %52 = getelementptr inbounds %"class.std::__1::vector.1443", %"class.std::__1::vector.1443"* %6, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.std::__1::vector.1443", %"class.std::__1::vector.1443"* %6, i64 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.std::__1::vector.1443", %"class.std::__1::vector.1443"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 24, i1 false) #16
  %55 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %56 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %55, align 8
  %57 = call { i64, i32 } @_ZNK2gl16FramebufferState10getExtentsEv(%"class.gl::FramebufferState"* %56) #16
  %58 = extractvalue { i64, i32 } %57, 0
  %59 = trunc i64 %58 to i32
  %60 = lshr i64 %58, 32
  %61 = trunc i64 %60 to i32
  %62 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %55, align 8
  %63 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %62, i64 0, i32 6, i32 0
  %64 = load i8, i8* %63, align 1, !noalias !25
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %158, label %66

66:                                               ; preds = %50
  %67 = zext i8 %64 to i32
  %68 = call i32 @llvm.cttz.i32(i32 %67, i1 true) #16, !range !2
  %69 = bitcast %"class.rx::vk::ImageView"** %7 to i8*
  %70 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %20, i64 0, i32 0
  %71 = bitcast %"class.rx::vk::ImageView"** %7 to i64**
  %72 = bitcast %struct.VkImageView_T*** %53 to i64*
  %73 = bitcast %"class.std::__1::vector.1443"* %6 to i64*
  %74 = bitcast %struct.VkImageView_T*** %54 to i64*
  %75 = zext i32 %68 to i64
  %76 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 1, i32 0, i64 %75
  %77 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %76, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #16
  store %"class.rx::vk::ImageView"* null, %"class.rx::vk::ImageView"** %7, align 8
  %78 = load i32, i32* %70, align 4
  %79 = lshr i32 %78, 15
  %80 = and i32 %79, 1
  %81 = call i32 @_ZNK2rx14RenderTargetVk26getImageViewWithColorspaceEPNS_9ContextVkEN2gl20SrgbWriteControlModeEPPKNS_2vk9ImageViewE(%"class.rx::RenderTargetVk"* %77, %"class.rx::ContextVk"* %1, i32 %80, %"class.rx::vk::ImageView"** nonnull %7) #16
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %157, label %83

83:                                               ; preds = %66, %146
  %84 = phi i8 [ %144, %146 ], [ %64, %66 ]
  %85 = phi i32 [ %148, %146 ], [ %68, %66 ]
  %86 = load i64*, i64** %71, align 8
  %87 = load i64, i64* %86, align 8
  %88 = load %struct.VkImageView_T**, %struct.VkImageView_T*** %53, align 8
  %89 = load %struct.VkImageView_T**, %struct.VkImageView_T*** %54, align 8
  %90 = icmp ult %struct.VkImageView_T** %88, %89
  %91 = ptrtoint %struct.VkImageView_T** %89 to i64
  br i1 %90, label %92, label %96

92:                                               ; preds = %83
  %93 = bitcast %struct.VkImageView_T** %88 to i64*
  store i64 %87, i64* %93, align 8
  %94 = getelementptr inbounds %struct.VkImageView_T*, %struct.VkImageView_T** %88, i64 1
  %95 = ptrtoint %struct.VkImageView_T** %94 to i64
  store i64 %95, i64* %72, align 8
  br label %140

96:                                               ; preds = %83
  %97 = ptrtoint %struct.VkImageView_T** %88 to i64
  %98 = load i64, i64* %73, align 8
  %99 = sub i64 %97, %98
  %100 = ashr exact i64 %99, 3
  %101 = add nsw i64 %100, 1
  %102 = icmp ugt i64 %101, 2305843009213693951
  br i1 %102, label %103, label %105

103:                                              ; preds = %96
  %104 = bitcast %"class.std::__1::vector.1443"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %104) #19
  unreachable

105:                                              ; preds = %96
  %106 = sub i64 %91, %98
  %107 = ashr exact i64 %106, 3
  %108 = icmp ult i64 %107, 1152921504606846975
  br i1 %108, label %109, label %117

109:                                              ; preds = %105
  %110 = ashr exact i64 %106, 2
  %111 = icmp ult i64 %110, %101
  %112 = select i1 %111, i64 %101, i64 %110
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %122, label %114

114:                                              ; preds = %109
  %115 = icmp ugt i64 %112, 2305843009213693951
  br i1 %115, label %116, label %117

116:                                              ; preds = %114
  call void @abort() #19
  unreachable

117:                                              ; preds = %114, %105
  %118 = phi i64 [ %112, %114 ], [ 2305843009213693951, %105 ]
  %119 = shl i64 %118, 3
  %120 = call i8* @_Znwm(i64 %119) #18
  %121 = bitcast i8* %120 to %struct.VkImageView_T**
  br label %122

122:                                              ; preds = %117, %109
  %123 = phi i64 [ %118, %117 ], [ 0, %109 ]
  %124 = phi i8* [ %120, %117 ], [ null, %109 ]
  %125 = phi %struct.VkImageView_T** [ %121, %117 ], [ null, %109 ]
  %126 = getelementptr inbounds %struct.VkImageView_T*, %struct.VkImageView_T** %125, i64 %100
  %127 = getelementptr inbounds %struct.VkImageView_T*, %struct.VkImageView_T** %125, i64 %123
  %128 = ptrtoint %struct.VkImageView_T** %127 to i64
  %129 = bitcast %struct.VkImageView_T** %126 to i64*
  store i64 %87, i64* %129, align 8
  %130 = getelementptr inbounds %struct.VkImageView_T*, %struct.VkImageView_T** %126, i64 1
  %131 = ptrtoint %struct.VkImageView_T** %130 to i64
  %132 = ptrtoint %struct.VkImageView_T** %125 to i64
  %133 = icmp sgt i64 %99, 0
  br i1 %133, label %134, label %136

134:                                              ; preds = %122
  %135 = inttoptr i64 %98 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %135, i64 %99, i1 false) #16
  br label %136

136:                                              ; preds = %134, %122
  store i64 %132, i64* %73, align 8
  store i64 %131, i64* %72, align 8
  store i64 %128, i64* %74, align 8
  %137 = icmp eq i64 %98, 0
  br i1 %137, label %140, label %138

138:                                              ; preds = %136
  %139 = inttoptr i64 %98 to i8*
  call void @_ZdlPv(i8* %139) #18
  br label %140

140:                                              ; preds = %92, %136, %138
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #16
  %141 = shl i32 1, %85
  %142 = trunc i32 %141 to i8
  %143 = xor i8 %142, -1
  %144 = and i8 %84, %143
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %158, label %146

146:                                              ; preds = %140
  %147 = zext i8 %144 to i32
  %148 = call i32 @llvm.cttz.i32(i32 %147, i1 true) #16, !range !2
  %149 = zext i32 %148 to i64
  %150 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 1, i32 0, i64 %149
  %151 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %150, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #16
  store %"class.rx::vk::ImageView"* null, %"class.rx::vk::ImageView"** %7, align 8
  %152 = load i32, i32* %70, align 4
  %153 = lshr i32 %152, 15
  %154 = and i32 %153, 1
  %155 = call i32 @_ZNK2rx14RenderTargetVk26getImageViewWithColorspaceEPNS_9ContextVkEN2gl20SrgbWriteControlModeEPPKNS_2vk9ImageViewE(%"class.rx::RenderTargetVk"* %151, %"class.rx::ContextVk"* %1, i32 %154, %"class.rx::vk::ImageView"** nonnull %7) #16
  %156 = icmp eq i32 %155, 1
  br i1 %156, label %157, label %83

157:                                              ; preds = %146, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #16
  br label %529

158:                                              ; preds = %140, %50
  %159 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 2
  %160 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %159, align 8
  %161 = icmp ne %"class.rx::RenderTargetVk"* %160, null
  br i1 %161, label %162, label %228

162:                                              ; preds = %158
  %163 = bitcast %"class.rx::vk::ImageView"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %163) #16
  store %"class.rx::vk::ImageView"* null, %"class.rx::vk::ImageView"** %8, align 8
  %164 = call i32 @_ZNK2rx14RenderTargetVk12getImageViewEPNS_9ContextVkEPPKNS_2vk9ImageViewE(%"class.rx::RenderTargetVk"* nonnull %160, %"class.rx::ContextVk"* %1, %"class.rx::vk::ImageView"** nonnull %8) #16
  %165 = icmp eq i32 %164, 1
  br i1 %165, label %227, label %166

166:                                              ; preds = %162
  %167 = bitcast %"class.rx::vk::ImageView"** %8 to i64**
  %168 = load i64*, i64** %167, align 8
  %169 = load i64, i64* %168, align 8
  %170 = load %struct.VkImageView_T**, %struct.VkImageView_T*** %53, align 8
  %171 = load %struct.VkImageView_T**, %struct.VkImageView_T*** %54, align 8
  %172 = icmp ult %struct.VkImageView_T** %170, %171
  %173 = ptrtoint %struct.VkImageView_T** %171 to i64
  br i1 %172, label %174, label %179

174:                                              ; preds = %166
  %175 = bitcast %struct.VkImageView_T** %170 to i64*
  store i64 %169, i64* %175, align 8
  %176 = getelementptr inbounds %struct.VkImageView_T*, %struct.VkImageView_T** %170, i64 1
  %177 = ptrtoint %struct.VkImageView_T** %176 to i64
  %178 = bitcast %struct.VkImageView_T*** %53 to i64*
  store i64 %177, i64* %178, align 8
  br label %226

179:                                              ; preds = %166
  %180 = ptrtoint %struct.VkImageView_T** %170 to i64
  %181 = bitcast %struct.VkImageView_T*** %53 to i64*
  %182 = bitcast %"class.std::__1::vector.1443"* %6 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = sub i64 %180, %183
  %185 = ashr exact i64 %184, 3
  %186 = add nsw i64 %185, 1
  %187 = icmp ugt i64 %186, 2305843009213693951
  br i1 %187, label %188, label %190

188:                                              ; preds = %179
  %189 = bitcast %"class.std::__1::vector.1443"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %189) #19
  unreachable

190:                                              ; preds = %179
  %191 = bitcast %struct.VkImageView_T*** %54 to i64*
  %192 = sub i64 %173, %183
  %193 = ashr exact i64 %192, 3
  %194 = icmp ult i64 %193, 1152921504606846975
  br i1 %194, label %195, label %203

195:                                              ; preds = %190
  %196 = ashr exact i64 %192, 2
  %197 = icmp ult i64 %196, %186
  %198 = select i1 %197, i64 %186, i64 %196
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %208, label %200

200:                                              ; preds = %195
  %201 = icmp ugt i64 %198, 2305843009213693951
  br i1 %201, label %202, label %203

202:                                              ; preds = %200
  call void @abort() #19
  unreachable

203:                                              ; preds = %200, %190
  %204 = phi i64 [ %198, %200 ], [ 2305843009213693951, %190 ]
  %205 = shl i64 %204, 3
  %206 = call i8* @_Znwm(i64 %205) #18
  %207 = bitcast i8* %206 to %struct.VkImageView_T**
  br label %208

208:                                              ; preds = %203, %195
  %209 = phi i64 [ %204, %203 ], [ 0, %195 ]
  %210 = phi i8* [ %206, %203 ], [ null, %195 ]
  %211 = phi %struct.VkImageView_T** [ %207, %203 ], [ null, %195 ]
  %212 = getelementptr inbounds %struct.VkImageView_T*, %struct.VkImageView_T** %211, i64 %185
  %213 = getelementptr inbounds %struct.VkImageView_T*, %struct.VkImageView_T** %211, i64 %209
  %214 = ptrtoint %struct.VkImageView_T** %213 to i64
  %215 = bitcast %struct.VkImageView_T** %212 to i64*
  store i64 %169, i64* %215, align 8
  %216 = getelementptr inbounds %struct.VkImageView_T*, %struct.VkImageView_T** %212, i64 1
  %217 = ptrtoint %struct.VkImageView_T** %216 to i64
  %218 = ptrtoint %struct.VkImageView_T** %211 to i64
  %219 = icmp sgt i64 %184, 0
  br i1 %219, label %220, label %222

220:                                              ; preds = %208
  %221 = inttoptr i64 %183 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %210, i8* align 8 %221, i64 %184, i1 false) #16
  br label %222

222:                                              ; preds = %220, %208
  store i64 %218, i64* %182, align 8
  store i64 %217, i64* %181, align 8
  store i64 %214, i64* %191, align 8
  %223 = icmp eq i64 %183, 0
  br i1 %223, label %226, label %224

224:                                              ; preds = %222
  %225 = inttoptr i64 %183 to i8*
  call void @_ZdlPv(i8* %225) #18
  br label %226

226:                                              ; preds = %174, %222, %224
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163) #16
  br label %228

227:                                              ; preds = %162
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163) #16
  br label %529

228:                                              ; preds = %226, %158
  %229 = icmp eq %"class.rx::vk::ImageView"* %3, null
  br i1 %229, label %289, label %230

230:                                              ; preds = %228
  %231 = bitcast %"class.rx::vk::ImageView"* %3 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = load %struct.VkImageView_T**, %struct.VkImageView_T*** %53, align 8
  %234 = load %struct.VkImageView_T**, %struct.VkImageView_T*** %54, align 8
  %235 = icmp ult %struct.VkImageView_T** %233, %234
  %236 = ptrtoint %struct.VkImageView_T** %234 to i64
  br i1 %235, label %237, label %242

237:                                              ; preds = %230
  %238 = bitcast %struct.VkImageView_T** %233 to i64*
  store i64 %232, i64* %238, align 8
  %239 = getelementptr inbounds %struct.VkImageView_T*, %struct.VkImageView_T** %233, i64 1
  %240 = ptrtoint %struct.VkImageView_T** %239 to i64
  %241 = bitcast %struct.VkImageView_T*** %53 to i64*
  store i64 %240, i64* %241, align 8
  br label %384

242:                                              ; preds = %230
  %243 = ptrtoint %struct.VkImageView_T** %233 to i64
  %244 = bitcast %struct.VkImageView_T*** %53 to i64*
  %245 = bitcast %"class.std::__1::vector.1443"* %6 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = sub i64 %243, %246
  %248 = ashr exact i64 %247, 3
  %249 = add nsw i64 %248, 1
  %250 = icmp ugt i64 %249, 2305843009213693951
  br i1 %250, label %251, label %253

251:                                              ; preds = %242
  %252 = bitcast %"class.std::__1::vector.1443"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %252) #19
  unreachable

253:                                              ; preds = %242
  %254 = bitcast %struct.VkImageView_T*** %54 to i64*
  %255 = sub i64 %236, %246
  %256 = ashr exact i64 %255, 3
  %257 = icmp ult i64 %256, 1152921504606846975
  br i1 %257, label %258, label %266

258:                                              ; preds = %253
  %259 = ashr exact i64 %255, 2
  %260 = icmp ult i64 %259, %249
  %261 = select i1 %260, i64 %249, i64 %259
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %271, label %263

263:                                              ; preds = %258
  %264 = icmp ugt i64 %261, 2305843009213693951
  br i1 %264, label %265, label %266

265:                                              ; preds = %263
  call void @abort() #19
  unreachable

266:                                              ; preds = %263, %253
  %267 = phi i64 [ %261, %263 ], [ 2305843009213693951, %253 ]
  %268 = shl i64 %267, 3
  %269 = call i8* @_Znwm(i64 %268) #18
  %270 = bitcast i8* %269 to %struct.VkImageView_T**
  br label %271

271:                                              ; preds = %266, %258
  %272 = phi i64 [ %267, %266 ], [ 0, %258 ]
  %273 = phi i8* [ %269, %266 ], [ null, %258 ]
  %274 = phi %struct.VkImageView_T** [ %270, %266 ], [ null, %258 ]
  %275 = getelementptr inbounds %struct.VkImageView_T*, %struct.VkImageView_T** %274, i64 %248
  %276 = getelementptr inbounds %struct.VkImageView_T*, %struct.VkImageView_T** %274, i64 %272
  %277 = ptrtoint %struct.VkImageView_T** %276 to i64
  %278 = bitcast %struct.VkImageView_T** %275 to i64*
  store i64 %232, i64* %278, align 8
  %279 = getelementptr inbounds %struct.VkImageView_T*, %struct.VkImageView_T** %275, i64 1
  %280 = ptrtoint %struct.VkImageView_T** %279 to i64
  %281 = ptrtoint %struct.VkImageView_T** %274 to i64
  %282 = icmp sgt i64 %247, 0
  br i1 %282, label %283, label %285

283:                                              ; preds = %271
  %284 = inttoptr i64 %246 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %273, i8* align 8 %284, i64 %247, i1 false) #16
  br label %285

285:                                              ; preds = %283, %271
  store i64 %281, i64* %245, align 8
  store i64 %280, i64* %244, align 8
  store i64 %277, i64* %254, align 8
  %286 = icmp eq i64 %246, 0
  br i1 %286, label %384, label %287

287:                                              ; preds = %285
  %288 = inttoptr i64 %246 to i8*
  call void @_ZdlPv(i8* %288) #18
  br label %384

289:                                              ; preds = %228
  %290 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %55, align 8
  %291 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %290, i64 0, i32 6, i32 0
  %292 = load i8, i8* %291, align 1, !noalias !28
  %293 = icmp eq i8 %292, 0
  br i1 %293, label %384, label %294

294:                                              ; preds = %289
  %295 = zext i8 %292 to i32
  %296 = call i32 @llvm.cttz.i32(i32 %295, i1 true) #16, !range !2
  %297 = bitcast %"class.rx::vk::ImageView"** %9 to i8*
  %298 = bitcast %"class.rx::vk::ImageView"** %9 to i64**
  %299 = bitcast %struct.VkImageView_T*** %53 to i64*
  %300 = bitcast %"class.std::__1::vector.1443"* %6 to i64*
  %301 = bitcast %struct.VkImageView_T*** %54 to i64*
  br label %302

302:                                              ; preds = %380, %294
  %303 = phi i32 [ %296, %294 ], [ %382, %380 ]
  %304 = phi i8 [ %292, %294 ], [ %378, %380 ]
  %305 = zext i32 %303 to i64
  %306 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 1, i32 0, i64 %305
  %307 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %306, align 8
  %308 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %307, i64 0, i32 3
  %309 = load %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"** %308, align 8
  %310 = icmp eq %"class.rx::vk::ImageHelper"* %309, null
  br i1 %310, label %374, label %311

311:                                              ; preds = %302
  %312 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %307, i64 0, i32 8
  %313 = load i32, i32* %312, align 4
  %314 = icmp eq i32 %313, 2
  br i1 %314, label %374, label %315

315:                                              ; preds = %311
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %297) #16
  store %"class.rx::vk::ImageView"* null, %"class.rx::vk::ImageView"** %9, align 8
  %316 = call i32 @_ZNK2rx14RenderTargetVk19getResolveImageViewEPNS_9ContextVkEPPKNS_2vk9ImageViewE(%"class.rx::RenderTargetVk"* %307, %"class.rx::ContextVk"* %1, %"class.rx::vk::ImageView"** nonnull %9) #16
  %317 = icmp eq i32 %316, 1
  br i1 %317, label %383, label %318

318:                                              ; preds = %315
  %319 = load i64*, i64** %298, align 8
  %320 = load i64, i64* %319, align 8
  %321 = load %struct.VkImageView_T**, %struct.VkImageView_T*** %53, align 8
  %322 = load %struct.VkImageView_T**, %struct.VkImageView_T*** %54, align 8
  %323 = icmp ult %struct.VkImageView_T** %321, %322
  %324 = ptrtoint %struct.VkImageView_T** %322 to i64
  br i1 %323, label %325, label %329

325:                                              ; preds = %318
  %326 = bitcast %struct.VkImageView_T** %321 to i64*
  store i64 %320, i64* %326, align 8
  %327 = getelementptr inbounds %struct.VkImageView_T*, %struct.VkImageView_T** %321, i64 1
  %328 = ptrtoint %struct.VkImageView_T** %327 to i64
  store i64 %328, i64* %299, align 8
  br label %373

329:                                              ; preds = %318
  %330 = ptrtoint %struct.VkImageView_T** %321 to i64
  %331 = load i64, i64* %300, align 8
  %332 = sub i64 %330, %331
  %333 = ashr exact i64 %332, 3
  %334 = add nsw i64 %333, 1
  %335 = icmp ugt i64 %334, 2305843009213693951
  br i1 %335, label %336, label %338

336:                                              ; preds = %329
  %337 = bitcast %"class.std::__1::vector.1443"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %337) #19
  unreachable

338:                                              ; preds = %329
  %339 = sub i64 %324, %331
  %340 = ashr exact i64 %339, 3
  %341 = icmp ult i64 %340, 1152921504606846975
  br i1 %341, label %342, label %350

342:                                              ; preds = %338
  %343 = ashr exact i64 %339, 2
  %344 = icmp ult i64 %343, %334
  %345 = select i1 %344, i64 %334, i64 %343
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %355, label %347

347:                                              ; preds = %342
  %348 = icmp ugt i64 %345, 2305843009213693951
  br i1 %348, label %349, label %350

349:                                              ; preds = %347
  call void @abort() #19
  unreachable

350:                                              ; preds = %347, %338
  %351 = phi i64 [ %345, %347 ], [ 2305843009213693951, %338 ]
  %352 = shl i64 %351, 3
  %353 = call i8* @_Znwm(i64 %352) #18
  %354 = bitcast i8* %353 to %struct.VkImageView_T**
  br label %355

355:                                              ; preds = %350, %342
  %356 = phi i64 [ %351, %350 ], [ 0, %342 ]
  %357 = phi i8* [ %353, %350 ], [ null, %342 ]
  %358 = phi %struct.VkImageView_T** [ %354, %350 ], [ null, %342 ]
  %359 = getelementptr inbounds %struct.VkImageView_T*, %struct.VkImageView_T** %358, i64 %333
  %360 = getelementptr inbounds %struct.VkImageView_T*, %struct.VkImageView_T** %358, i64 %356
  %361 = ptrtoint %struct.VkImageView_T** %360 to i64
  %362 = bitcast %struct.VkImageView_T** %359 to i64*
  store i64 %320, i64* %362, align 8
  %363 = getelementptr inbounds %struct.VkImageView_T*, %struct.VkImageView_T** %359, i64 1
  %364 = ptrtoint %struct.VkImageView_T** %363 to i64
  %365 = ptrtoint %struct.VkImageView_T** %358 to i64
  %366 = icmp sgt i64 %332, 0
  br i1 %366, label %367, label %369

367:                                              ; preds = %355
  %368 = inttoptr i64 %331 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %357, i8* align 8 %368, i64 %332, i1 false) #16
  br label %369

369:                                              ; preds = %367, %355
  store i64 %365, i64* %300, align 8
  store i64 %364, i64* %299, align 8
  store i64 %361, i64* %301, align 8
  %370 = icmp eq i64 %331, 0
  br i1 %370, label %373, label %371

371:                                              ; preds = %369
  %372 = inttoptr i64 %331 to i8*
  call void @_ZdlPv(i8* %372) #18
  br label %373

373:                                              ; preds = %325, %369, %371
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %297) #16
  br label %374

374:                                              ; preds = %311, %302, %373
  %375 = shl i32 1, %303
  %376 = trunc i32 %375 to i8
  %377 = xor i8 %376, -1
  %378 = and i8 %304, %377
  %379 = icmp eq i8 %378, 0
  br i1 %379, label %384, label %380

380:                                              ; preds = %374
  %381 = zext i8 %378 to i32
  %382 = call i32 @llvm.cttz.i32(i32 %381, i1 true) #16, !range !2
  br label %302

383:                                              ; preds = %315
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %297) #16
  br label %529

384:                                              ; preds = %374, %289, %287, %285, %237
  br i1 %161, label %385, label %459

385:                                              ; preds = %384
  %386 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %160, i64 0, i32 3
  %387 = load %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"** %386, align 8
  %388 = icmp eq %"class.rx::vk::ImageHelper"* %387, null
  br i1 %388, label %459, label %389

389:                                              ; preds = %385
  %390 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %160, i64 0, i32 8
  %391 = load i32, i32* %390, align 4
  %392 = icmp eq i32 %391, 2
  br i1 %392, label %459, label %393

393:                                              ; preds = %389
  %394 = bitcast %"class.rx::vk::ImageView"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %394) #16
  store %"class.rx::vk::ImageView"* null, %"class.rx::vk::ImageView"** %10, align 8
  %395 = call i32 @_ZNK2rx14RenderTargetVk19getResolveImageViewEPNS_9ContextVkEPPKNS_2vk9ImageViewE(%"class.rx::RenderTargetVk"* nonnull %160, %"class.rx::ContextVk"* %1, %"class.rx::vk::ImageView"** nonnull %10) #16
  %396 = icmp eq i32 %395, 1
  br i1 %396, label %458, label %397

397:                                              ; preds = %393
  %398 = bitcast %"class.rx::vk::ImageView"** %10 to i64**
  %399 = load i64*, i64** %398, align 8
  %400 = load i64, i64* %399, align 8
  %401 = load %struct.VkImageView_T**, %struct.VkImageView_T*** %53, align 8
  %402 = load %struct.VkImageView_T**, %struct.VkImageView_T*** %54, align 8
  %403 = icmp ult %struct.VkImageView_T** %401, %402
  %404 = ptrtoint %struct.VkImageView_T** %402 to i64
  br i1 %403, label %405, label %410

405:                                              ; preds = %397
  %406 = bitcast %struct.VkImageView_T** %401 to i64*
  store i64 %400, i64* %406, align 8
  %407 = getelementptr inbounds %struct.VkImageView_T*, %struct.VkImageView_T** %401, i64 1
  %408 = ptrtoint %struct.VkImageView_T** %407 to i64
  %409 = bitcast %struct.VkImageView_T*** %53 to i64*
  store i64 %408, i64* %409, align 8
  br label %457

410:                                              ; preds = %397
  %411 = ptrtoint %struct.VkImageView_T** %401 to i64
  %412 = bitcast %struct.VkImageView_T*** %53 to i64*
  %413 = bitcast %"class.std::__1::vector.1443"* %6 to i64*
  %414 = load i64, i64* %413, align 8
  %415 = sub i64 %411, %414
  %416 = ashr exact i64 %415, 3
  %417 = add nsw i64 %416, 1
  %418 = icmp ugt i64 %417, 2305843009213693951
  br i1 %418, label %419, label %421

419:                                              ; preds = %410
  %420 = bitcast %"class.std::__1::vector.1443"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %420) #19
  unreachable

421:                                              ; preds = %410
  %422 = bitcast %struct.VkImageView_T*** %54 to i64*
  %423 = sub i64 %404, %414
  %424 = ashr exact i64 %423, 3
  %425 = icmp ult i64 %424, 1152921504606846975
  br i1 %425, label %426, label %434

426:                                              ; preds = %421
  %427 = ashr exact i64 %423, 2
  %428 = icmp ult i64 %427, %417
  %429 = select i1 %428, i64 %417, i64 %427
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %439, label %431

431:                                              ; preds = %426
  %432 = icmp ugt i64 %429, 2305843009213693951
  br i1 %432, label %433, label %434

433:                                              ; preds = %431
  call void @abort() #19
  unreachable

434:                                              ; preds = %431, %421
  %435 = phi i64 [ %429, %431 ], [ 2305843009213693951, %421 ]
  %436 = shl i64 %435, 3
  %437 = call i8* @_Znwm(i64 %436) #18
  %438 = bitcast i8* %437 to %struct.VkImageView_T**
  br label %439

439:                                              ; preds = %434, %426
  %440 = phi i64 [ %435, %434 ], [ 0, %426 ]
  %441 = phi i8* [ %437, %434 ], [ null, %426 ]
  %442 = phi %struct.VkImageView_T** [ %438, %434 ], [ null, %426 ]
  %443 = getelementptr inbounds %struct.VkImageView_T*, %struct.VkImageView_T** %442, i64 %416
  %444 = getelementptr inbounds %struct.VkImageView_T*, %struct.VkImageView_T** %442, i64 %440
  %445 = ptrtoint %struct.VkImageView_T** %444 to i64
  %446 = bitcast %struct.VkImageView_T** %443 to i64*
  store i64 %400, i64* %446, align 8
  %447 = getelementptr inbounds %struct.VkImageView_T*, %struct.VkImageView_T** %443, i64 1
  %448 = ptrtoint %struct.VkImageView_T** %447 to i64
  %449 = ptrtoint %struct.VkImageView_T** %442 to i64
  %450 = icmp sgt i64 %415, 0
  br i1 %450, label %451, label %453

451:                                              ; preds = %439
  %452 = inttoptr i64 %414 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %441, i8* align 8 %452, i64 %415, i1 false) #16
  br label %453

453:                                              ; preds = %451, %439
  store i64 %449, i64* %413, align 8
  store i64 %448, i64* %412, align 8
  store i64 %445, i64* %422, align 8
  %454 = icmp eq i64 %414, 0
  br i1 %454, label %457, label %455

455:                                              ; preds = %453
  %456 = inttoptr i64 %414 to i8*
  call void @_ZdlPv(i8* %456) #18
  br label %457

457:                                              ; preds = %405, %453, %455
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %394) #16
  br label %459

458:                                              ; preds = %393
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %394) #16
  br label %529

459:                                              ; preds = %389, %385, %457, %384
  %460 = bitcast %struct.VkFramebufferCreateInfo* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %460) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %460, i8 0, i64 64, i1 false)
  %461 = getelementptr inbounds %struct.VkFramebufferCreateInfo, %struct.VkFramebufferCreateInfo* %11, i64 0, i32 0
  store i32 37, i32* %461, align 8
  %462 = getelementptr inbounds %struct.VkFramebufferCreateInfo, %struct.VkFramebufferCreateInfo* %11, i64 0, i32 2
  store i32 0, i32* %462, align 8
  %463 = bitcast %"class.rx::vk::RenderPass"** %5 to i64**
  %464 = load i64*, i64** %463, align 8
  %465 = load i64, i64* %464, align 8
  %466 = getelementptr inbounds %struct.VkFramebufferCreateInfo, %struct.VkFramebufferCreateInfo* %11, i64 0, i32 3
  %467 = bitcast %struct.VkRenderPass_T** %466 to i64*
  store i64 %465, i64* %467, align 8
  %468 = bitcast %struct.VkImageView_T*** %53 to i64*
  %469 = load i64, i64* %468, align 8
  %470 = bitcast %"class.std::__1::vector.1443"* %6 to i64*
  %471 = load i64, i64* %470, align 8
  %472 = sub i64 %469, %471
  %473 = lshr exact i64 %472, 3
  %474 = trunc i64 %473 to i32
  %475 = getelementptr inbounds %struct.VkFramebufferCreateInfo, %struct.VkFramebufferCreateInfo* %11, i64 0, i32 4
  store i32 %474, i32* %475, align 8
  %476 = getelementptr inbounds %struct.VkFramebufferCreateInfo, %struct.VkFramebufferCreateInfo* %11, i64 0, i32 5
  %477 = bitcast %struct.VkImageView_T*** %476 to i64*
  store i64 %471, i64* %477, align 8
  %478 = getelementptr inbounds %struct.VkFramebufferCreateInfo, %struct.VkFramebufferCreateInfo* %11, i64 0, i32 6
  store i32 %59, i32* %478, align 8
  %479 = getelementptr inbounds %struct.VkFramebufferCreateInfo, %struct.VkFramebufferCreateInfo* %11, i64 0, i32 7
  store i32 %61, i32* %479, align 4
  %480 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %20, i64 0, i32 0
  %481 = load i32, i32* %480, align 4
  %482 = lshr i32 %481, 6
  %483 = and i32 %482, 511
  %484 = icmp eq i32 %483, 0
  %485 = select i1 %484, i32 1, i32 %483
  %486 = getelementptr inbounds %struct.VkFramebufferCreateInfo, %struct.VkFramebufferCreateInfo* %11, i64 0, i32 8
  store i32 %485, i32* %486, align 8
  %487 = bitcast %"class.rx::vk::FramebufferHelper"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %487) #16
  %488 = bitcast %"class.rx::vk::FramebufferHelper"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %488, i8 -86, i64 24, i1 false)
  call void @_ZN2rx2vk17FramebufferHelperC1Ev(%"class.rx::vk::FramebufferHelper"* nonnull %12) #16
  %489 = call i32 @_ZN2rx2vk17FramebufferHelper4initEPNS_9ContextVkERK23VkFramebufferCreateInfo(%"class.rx::vk::FramebufferHelper"* nonnull %12, %"class.rx::ContextVk"* %1, %struct.VkFramebufferCreateInfo* nonnull dereferenceable(64) %11) #16
  %490 = icmp eq i32 %489, 1
  br i1 %490, label %527, label %491

491:                                              ; preds = %459
  %492 = call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE22find_or_prepare_insertIS5_EENSF_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.830"* %21, %"class.rx::vk::FramebufferDesc"* dereferenceable(148) %20) #16, !noalias !31
  %493 = extractvalue { i64, i8 } %492, 0
  %494 = extractvalue { i64, i8 } %492, 1
  %495 = and i8 %494, 1
  %496 = icmp eq i8 %495, 0
  br i1 %496, label %502, label %497

497:                                              ; preds = %491
  %498 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1
  %499 = load %"union.absl::container_internal::map_slot_type.831"*, %"union.absl::container_internal::map_slot_type.831"** %498, align 8, !noalias !31
  %500 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %499, i64 %493, i32 0, i32 0
  call void @_ZN2rx2vk15FramebufferDescC1ERKS1_(%"class.rx::vk::FramebufferDesc"* %500, %"class.rx::vk::FramebufferDesc"* dereferenceable(148) %20) #16, !noalias !31
  %501 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %499, i64 %493, i32 0, i32 1
  call void @_ZN2rx2vk17FramebufferHelperC1EOS1_(%"class.rx::vk::FramebufferHelper"* %501, %"class.rx::vk::FramebufferHelper"* nonnull dereferenceable(24) %12) #16, !noalias !31
  br label %502

502:                                              ; preds = %491, %497
  %503 = getelementptr inbounds %"class.rx::FramebufferCache", %"class.rx::FramebufferCache"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %504 = load i8*, i8** %503, align 8, !noalias !31
  %505 = getelementptr inbounds i8, i8* %504, i64 %493
  %506 = icmp ne i8* %505, null
  call void @llvm.assume(i1 %506) #16, !noalias !31
  %507 = call { i8*, %"union.absl::container_internal::map_slot_type.831"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE4findIS5_EENSJ_8iteratorERSG_(%"class.absl::container_internal::raw_hash_set.830"* %21, %"class.rx::vk::FramebufferDesc"* dereferenceable(148) %20) #16
  %508 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.831"* } %507, 0
  %509 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.831"* } %507, 1
  %510 = icmp eq i8* %508, null
  br i1 %510, label %520, label %511

511:                                              ; preds = %502
  %512 = load i8, i8* %508, align 1
  %513 = icmp sgt i8 %512, -1
  br i1 %513, label %515, label %514, !prof !3

514:                                              ; preds = %511
  call void @llvm.trap() #16
  unreachable

515:                                              ; preds = %511
  %516 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %509, i64 0, i32 0, i32 1
  store %"class.rx::vk::FramebufferHelper"* %516, %"class.rx::vk::FramebufferHelper"** %13, align 8
  %517 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 11, i32 1, i32 0
  %518 = load i64, i64* %517, align 8
  %519 = add i64 %518, 1
  store i64 %519, i64* %517, align 8
  br label %524

520:                                              ; preds = %502
  %521 = load i64, i64* %36, align 8
  %522 = add i64 %521, 1
  store i64 %522, i64* %36, align 8
  %523 = load %"class.rx::vk::FramebufferHelper"*, %"class.rx::vk::FramebufferHelper"** %13, align 8
  br label %524

524:                                              ; preds = %515, %520
  %525 = phi %"class.rx::vk::FramebufferHelper"* [ %516, %515 ], [ %523, %520 ]
  %526 = getelementptr inbounds %"class.rx::vk::FramebufferHelper", %"class.rx::vk::FramebufferHelper"* %525, i64 0, i32 1
  store %"class.rx::vk::Framebuffer"* %526, %"class.rx::vk::Framebuffer"** %2, align 8
  br label %527

527:                                              ; preds = %459, %524
  %528 = phi i32 [ 0, %524 ], [ 1, %459 ]
  call void @_ZN2rx2vk17FramebufferHelperD1Ev(%"class.rx::vk::FramebufferHelper"* nonnull %12) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %487) #16
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %460) #16
  br label %529

529:                                              ; preds = %458, %383, %227, %157, %527
  %530 = phi i32 [ 1, %157 ], [ %528, %527 ], [ 1, %458 ], [ 1, %383 ], [ 1, %227 ]
  %531 = load %struct.VkImageView_T**, %struct.VkImageView_T*** %52, align 8
  %532 = icmp eq %struct.VkImageView_T** %531, null
  br i1 %532, label %537, label %533

533:                                              ; preds = %529
  %534 = ptrtoint %struct.VkImageView_T** %531 to i64
  %535 = bitcast %struct.VkImageView_T*** %53 to i64*
  store i64 %534, i64* %535, align 8
  %536 = bitcast %struct.VkImageView_T** %531 to i8*
  call void @_ZdlPv(i8* %536) #18
  br label %537

537:                                              ; preds = %529, %533
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #16
  br label %538

538:                                              ; preds = %35, %537, %47
  %539 = phi i32 [ %49, %47 ], [ %530, %537 ], [ 1, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #16
  br label %540

540:                                              ; preds = %30, %538, %16
  %541 = phi i32 [ 0, %16 ], [ 0, %30 ], [ %539, %538 ]
  ret i32 %541
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13FramebufferVk29mergeClearsWithDeferredClearsEN5angle7BitSetTILm8EhmEEbbRK17VkClearColorValueRK24VkClearDepthStencilValue(%"class.rx::FramebufferVk"*, %"class.angle::BitSetT"* nocapture readonly, i1 zeroext, i1 zeroext, %union.VkClearColorValue* nocapture readonly dereferenceable(16), %struct.VkClearDepthStencilValue* nocapture readonly dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %union.VkClearValue*
  %9 = alloca %union.VkClearValue, align 8
  %10 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %1, i64 0, i32 0
  %11 = load i8, i8* %10, align 1, !noalias !44
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %27, label %13

13:                                               ; preds = %6
  %14 = zext i8 %11 to i32
  %15 = tail call i32 @llvm.cttz.i32(i32 %14, i1 true) #16, !range !2
  %16 = bitcast { i64, i64 }* %7 to i8*
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %18 = bitcast %union.VkClearColorValue* %4 to i64*
  %19 = getelementptr inbounds %union.VkClearColorValue, %union.VkClearColorValue* %4, i64 0, i32 0, i64 2
  %20 = bitcast float* %19 to i32*
  %21 = getelementptr inbounds %union.VkClearColorValue, %union.VkClearColorValue* %4, i64 0, i32 0, i64 3
  %22 = bitcast float* %21 to i32*
  %23 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 8, i32 0
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %25 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12
  %26 = bitcast { i64, i64 }* %7 to i8*
  br label %38

27:                                               ; preds = %58, %6
  %28 = bitcast %union.VkClearValue* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #16
  %29 = getelementptr inbounds %union.VkClearValue, %union.VkClearValue* %9, i64 0, i32 0, i32 0, i64 2
  %30 = bitcast float* %29 to i64*
  store i64 0, i64* %30, align 8
  %31 = bitcast %struct.VkClearDepthStencilValue* %5 to i64*
  %32 = bitcast %union.VkClearValue* %9 to i64*
  %33 = load i64, i64* %31, align 4
  store i64 %33, i64* %32, align 8
  %34 = select i1 %2, i32 2, i32 0
  %35 = or i32 %34, 4
  %36 = select i1 %3, i32 %35, i32 %34
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %72, label %70

38:                                               ; preds = %67, %13
  %39 = phi i32 [ %15, %13 ], [ %69, %67 ]
  %40 = phi i8 [ %11, %13 ], [ %65, %67 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -1, i64 16, i1 false)
  %41 = load i64, i64* %18, align 4
  %42 = load i32, i32* %20, align 4
  %43 = load i32, i32* %22, align 4
  %44 = load i8, i8* %23, align 1
  %45 = shl i32 1, %39
  %46 = trunc i32 %45 to i8
  %47 = and i8 %44, %46
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %58, label %49

49:                                               ; preds = %38
  %50 = zext i32 %39 to i64
  %51 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 1, i32 0, i64 %50
  %52 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %51, align 8
  %53 = call dereferenceable(64) %"struct.rx::vk::Format"* @_ZNK2rx14RenderTargetVk14getImageFormatEv(%"class.rx::RenderTargetVk"* %52) #16
  %54 = getelementptr inbounds %"struct.rx::vk::Format", %"struct.rx::vk::Format"* %53, i64 0, i32 14
  %55 = load i8, i8* %54, align 4, !range !8
  %56 = icmp eq i8 %55, 0
  %57 = select i1 %56, i32 1065353216, i32 1
  br label %58

58:                                               ; preds = %38, %49
  %59 = phi i32 [ %57, %49 ], [ %43, %38 ]
  %60 = zext i32 %59 to i64
  %61 = shl nuw i64 %60, 32
  %62 = zext i32 %42 to i64
  %63 = or i64 %61, %62
  store i64 %41, i64* %24, align 8
  store i64 %63, i64* %17, align 8
  call void @_ZN2rx2vk16ClearValuesArray5storeEjjRK12VkClearValue(%"class.rx::vk::ClearValuesArray"* %25, i32 %39, i32 1, %union.VkClearValue* nonnull dereferenceable(16) %8) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #16
  %64 = xor i8 %46, -1
  %65 = and i8 %40, %64
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %27, label %67

67:                                               ; preds = %58
  %68 = zext i8 %65 to i32
  %69 = call i32 @llvm.cttz.i32(i32 %68, i1 true) #16, !range !2
  br label %38

70:                                               ; preds = %27
  %71 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12
  call void @_ZN2rx2vk16ClearValuesArray5storeEjjRK12VkClearValue(%"class.rx::vk::ClearValuesArray"* %71, i32 8, i32 %36, %union.VkClearValue* nonnull dereferenceable(16) %9) #16
  br label %72

72:                                               ; preds = %27, %70
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferVk16clearWithCommandEPNS_9ContextVkEPNS_2vk19CommandBufferHelperERKN2gl9RectangleE(%"class.rx::FramebufferVk"*, %"class.rx::ContextVk"*, %"class.rx::vk::CommandBufferHelper"*, %"struct.gl::Rectangle"* dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %5 = alloca %"class.angle::FixedVector.1450", align 8
  %6 = alloca %"class.angle::BitSetT", align 1
  %7 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 54
  %8 = load %"class.rx::vk::CommandBufferHelper"*, %"class.rx::vk::CommandBufferHelper"** %7, align 8
  tail call void @_ZN2rx2vk19CommandBufferHelper14growRenderAreaEPNS_9ContextVkERKN2gl9RectangleE(%"class.rx::vk::CommandBufferHelper"* %8, %"class.rx::ContextVk"* %1, %"struct.gl::Rectangle"* dereferenceable(16) %3) #16
  %9 = bitcast %"class.angle::FixedVector.1450"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %9) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 bitcast (%"class.angle::FixedVector.1450"* @__const._ZN2rx13FramebufferVk16clearWithCommandEPNS_9ContextVkEPNS_2vk19CommandBufferHelperERKN2gl9RectangleE.attachments to i8*), i64 240, i1 false)
  %10 = getelementptr inbounds %"class.angle::FixedVector.1450", %"class.angle::FixedVector.1450"* %5, i64 0, i32 1
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #16
  %12 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12
  call void @_ZNK2rx2vk16ClearValuesArray12getColorMaskEv(%"class.angle::BitSetT"* nonnull sret %6, %"class.rx::vk::ClearValuesArray"* %12) #16
  %13 = load i8, i8* %11, align 1, !noalias !47
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 1, i32 0
  %17 = load i64, i64* %16, align 8
  br label %22

18:                                               ; preds = %4
  %19 = zext i8 %13 to i32
  %20 = call i32 @llvm.cttz.i32(i32 %19, i1 true) #16, !range !2
  %21 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 1, i32 0
  br label %34

22:                                               ; preds = %34, %15
  %23 = phi i64 [ 0, %15 ], [ %46, %34 ]
  %24 = phi i64 [ %17, %15 ], [ %50, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #16
  %25 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 0, i32 0, i64 8, i32 0, i32 0, i64 0
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 0, i32 0, i64 9, i32 0, i32 0, i64 1
  %29 = bitcast float* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 1, i32 0
  %32 = and i64 %24, 256
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %64, label %59

34:                                               ; preds = %56, %18
  %35 = phi i64 [ 0, %18 ], [ %46, %56 ]
  %36 = phi i32 [ %20, %18 ], [ %58, %56 ]
  %37 = phi i8 [ %13, %18 ], [ %54, %56 ]
  %38 = zext i32 %36 to i64
  %39 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 0, i32 0, i64 %38
  %40 = bitcast %union.VkClearValue* %39 to i8*
  %41 = getelementptr inbounds %"class.angle::FixedVector.1450", %"class.angle::FixedVector.1450"* %5, i64 0, i32 0, i32 0, i64 %35, i32 0
  store i32 1, i32* %41, align 8
  %42 = getelementptr inbounds %"class.angle::FixedVector.1450", %"class.angle::FixedVector.1450"* %5, i64 0, i32 0, i32 0, i64 %35, i32 1
  store i32 %36, i32* %42, align 4
  %43 = getelementptr inbounds %"class.angle::FixedVector.1450", %"class.angle::FixedVector.1450"* %5, i64 0, i32 0, i32 0, i64 %35, i32 2
  %44 = bitcast %union.VkClearValue* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 4 %40, i64 16, i1 false)
  %45 = load i64, i64* %10, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %10, align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 %40, i8 0, i64 16, i1 false) #16
  %47 = shl i64 1, %38
  %48 = xor i64 %47, -1
  %49 = load i64, i64* %21, align 8
  %50 = and i64 %49, %48
  store i64 %50, i64* %21, align 8
  %51 = shl i32 1, %36
  %52 = trunc i32 %51 to i8
  %53 = xor i8 %52, -1
  %54 = and i8 %37, %53
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %22, label %56

56:                                               ; preds = %34
  %57 = zext i8 %54 to i32
  %58 = call i32 @llvm.cttz.i32(i32 %57, i1 true) #16, !range !2
  br label %34

59:                                               ; preds = %22
  call void @_ZN2rx2vk19CommandBufferHelper13onDepthAccessENS0_14ResourceAccessE(%"class.rx::vk::CommandBufferHelper"* %2, i32 2) #16
  %60 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 0, i32 0, i64 8
  %61 = bitcast %union.VkClearValue* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 16, i1 false) #16
  %62 = load i64, i64* %31, align 8
  %63 = and i64 %62, -257
  store i64 %63, i64* %31, align 8
  br label %64

64:                                               ; preds = %22, %59
  %65 = phi i64 [ %63, %59 ], [ %24, %22 ]
  %66 = phi i32 [ 2, %59 ], [ 0, %22 ]
  %67 = and i64 %65, 512
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %64
  %70 = or i32 %66, 4
  call void @_ZN2rx2vk19CommandBufferHelper15onStencilAccessENS0_14ResourceAccessE(%"class.rx::vk::CommandBufferHelper"* %2, i32 2) #16
  %71 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 0, i32 0, i64 9
  %72 = bitcast %union.VkClearValue* %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %72, i8 0, i64 16, i1 false) #16
  %73 = load i64, i64* %31, align 8
  %74 = and i64 %73, -513
  store i64 %74, i64* %31, align 8
  br label %77

75:                                               ; preds = %64
  %76 = icmp eq i32 %66, 0
  br i1 %76, label %130, label %77

77:                                               ; preds = %69, %75
  %78 = phi i32 [ %70, %69 ], [ %66, %75 ]
  %79 = getelementptr inbounds %"class.angle::FixedVector.1450", %"class.angle::FixedVector.1450"* %5, i64 0, i32 0, i32 0, i64 %23, i32 0
  store i32 %78, i32* %79, align 8
  %80 = getelementptr inbounds %"class.angle::FixedVector.1450", %"class.angle::FixedVector.1450"* %5, i64 0, i32 0, i32 0, i64 %23, i32 1
  store i32 0, i32* %80, align 4
  %81 = getelementptr inbounds %"class.angle::FixedVector.1450", %"class.angle::FixedVector.1450"* %5, i64 0, i32 0, i32 0, i64 %23, i32 2, i32 0, i32 0, i64 0
  %82 = bitcast float* %81 to i32*
  store i32 %27, i32* %82, align 8
  %83 = getelementptr inbounds %"class.angle::FixedVector.1450", %"class.angle::FixedVector.1450"* %5, i64 0, i32 0, i32 0, i64 %23, i32 2, i32 0, i32 0, i64 1
  %84 = bitcast float* %83 to i32*
  store i32 %30, i32* %84, align 4
  %85 = getelementptr inbounds %"class.angle::FixedVector.1450", %"class.angle::FixedVector.1450"* %5, i64 0, i32 0, i32 0, i64 %23, i32 2, i32 0, i32 0, i64 2
  %86 = bitcast float* %85 to i64*
  store i64 0, i64* %86, align 8
  %87 = load i64, i64* %10, align 8
  %88 = add i64 %87, 1
  store i64 %88, i64* %10, align 8
  %89 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 2
  %90 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %89, align 8
  %91 = icmp eq %"class.rx::RenderTargetVk"* %90, null
  br i1 %91, label %128, label %92

92:                                               ; preds = %77
  %93 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %90, i64 0, i32 3
  %94 = load %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"** %93, align 8
  %95 = icmp eq %"class.rx::vk::ImageHelper"* %94, null
  br i1 %95, label %100, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %90, i64 0, i32 8
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 2
  br i1 %99, label %100, label %128

100:                                              ; preds = %96, %92
  %101 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 13
  %102 = load i8, i8* %101, align 8, !range !8
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %104, label %128

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %2, i64 0, i32 19
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %106, 2
  br i1 %107, label %128, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %2, i64 0, i32 20
  %110 = load i32, i32* %109, align 8
  %111 = icmp eq i32 %110, 2
  br i1 %111, label %128, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %2, i64 0, i32 7
  %114 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %2, i64 0, i32 27, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = call dereferenceable(4) %"struct.rx::vk::PackedAttachmentOpsDesc"* @_ZNK2rx2vk18AttachmentOpsArrayixENS0_21PackedAttachmentIndexE(%"class.rx::vk::AttachmentOpsArray"* %113, i32 %115) #16
  %117 = getelementptr inbounds %"struct.rx::vk::PackedAttachmentOpsDesc", %"struct.rx::vk::PackedAttachmentOpsDesc"* %116, i64 0, i32 0
  %118 = load i32, i32* %117, align 2
  %119 = and i32 %118, 3
  %120 = icmp eq i32 %119, 1
  br i1 %120, label %128, label %121

121:                                              ; preds = %112
  %122 = load i32, i32* %114, align 4
  %123 = call dereferenceable(4) %"struct.rx::vk::PackedAttachmentOpsDesc"* @_ZNK2rx2vk18AttachmentOpsArrayixENS0_21PackedAttachmentIndexE(%"class.rx::vk::AttachmentOpsArray"* %113, i32 %122) #16
  %124 = getelementptr inbounds %"struct.rx::vk::PackedAttachmentOpsDesc", %"struct.rx::vk::PackedAttachmentOpsDesc"* %123, i64 0, i32 0
  %125 = load i32, i32* %124, align 2
  %126 = and i32 %125, 48
  %127 = icmp ne i32 %126, 16
  br label %128

128:                                              ; preds = %77, %96, %100, %104, %108, %112, %121
  %129 = phi i1 [ false, %96 ], [ false, %77 ], [ true, %100 ], [ false, %112 ], [ false, %108 ], [ false, %104 ], [ %127, %121 ]
  call void @_ZN2rx2vk19CommandBufferHelper36updateStartedRenderPassWithDepthModeEb(%"class.rx::vk::CommandBufferHelper"* %2, i1 zeroext %129) #16
  br label %130

130:                                              ; preds = %75, %128
  %131 = phi i64 [ %23, %75 ], [ %88, %128 ]
  %132 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %3, i64 0, i32 2
  %133 = load i32, i32* %132, align 4
  %134 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %3, i64 0, i32 3
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = lshr i32 %137, 6
  %139 = and i32 %138, 511
  %140 = trunc i64 %131 to i32
  %141 = and i64 %131, 4294967295
  %142 = mul nuw nsw i64 %141, 24
  %143 = add nuw nsw i64 %142, 32
  %144 = add nuw nsw i64 %142, 36
  %145 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %2, i64 0, i32 4, i32 4
  %146 = load i64, i64* %145, align 8
  %147 = icmp ult i64 %146, %144
  br i1 %147, label %148, label %332

148:                                              ; preds = %130
  %149 = icmp ult i64 %144, 1365
  br i1 %149, label %150, label %240

150:                                              ; preds = %148
  %151 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %2, i64 0, i32 4, i32 2
  %152 = load %"class.angle::PoolAllocator"*, %"class.angle::PoolAllocator"** %151, align 8
  %153 = getelementptr inbounds %"class.angle::PoolAllocator", %"class.angle::PoolAllocator"* %152, i64 0, i32 2
  %154 = load i64, i64* %153, align 8
  %155 = getelementptr inbounds %"class.angle::PoolAllocator", %"class.angle::PoolAllocator"* %152, i64 0, i32 4
  %156 = load i64, i64* %155, align 8
  %157 = sub i64 %154, %156
  %158 = icmp ult i64 %157, 1364
  br i1 %158, label %165, label %159

159:                                              ; preds = %150
  %160 = getelementptr inbounds %"class.angle::PoolAllocator", %"class.angle::PoolAllocator"* %152, i64 0, i32 6
  %161 = bitcast %"struct.angle::PoolAllocator::Header"** %160 to i8**
  %162 = load i8*, i8** %161, align 8
  %163 = getelementptr inbounds i8, i8* %162, i64 %156
  %164 = add i64 %156, 1364
  store i64 %164, i64* %155, align 8
  br label %167

165:                                              ; preds = %150
  %166 = call i8* @_ZN5angle13PoolAllocator15allocateNewPageEmm(%"class.angle::PoolAllocator"* %152, i64 1364, i64 1364) #16
  br label %167

167:                                              ; preds = %165, %159
  %168 = phi i8* [ %163, %159 ], [ %166, %165 ]
  %169 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %2, i64 0, i32 4, i32 3
  store i8* %168, i8** %169, align 8
  store i64 1364, i64* %145, align 8
  %170 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %2, i64 0, i32 4, i32 1
  %171 = ptrtoint i8* %168 to i64
  %172 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %2, i64 0, i32 4, i32 1, i32 0, i32 1
  %173 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %172, align 8
  %174 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %2, i64 0, i32 4, i32 1, i32 0, i32 2, i32 0, i32 0
  %175 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %174, align 8
  %176 = icmp ult %"struct.rx::vk::priv::CommandHeader"** %173, %175
  %177 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %175 to i64
  br i1 %176, label %178, label %183

178:                                              ; preds = %167
  %179 = bitcast %"struct.rx::vk::priv::CommandHeader"** %173 to i64*
  store i64 %171, i64* %179, align 8
  %180 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %173, i64 1
  %181 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %180 to i64
  %182 = bitcast %"struct.rx::vk::priv::CommandHeader"*** %172 to i64*
  store i64 %181, i64* %182, align 8
  br label %332

183:                                              ; preds = %167
  %184 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %173 to i64
  %185 = bitcast %"struct.rx::vk::priv::CommandHeader"*** %172 to i64*
  %186 = bitcast %"class.std::__1::vector.941"* %170 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = sub i64 %184, %187
  %189 = ashr exact i64 %188, 3
  %190 = add nsw i64 %189, 1
  %191 = icmp ugt i64 %190, 2305843009213693951
  br i1 %191, label %192, label %194

192:                                              ; preds = %183
  %193 = bitcast %"class.std::__1::vector.941"* %170 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %193) #19
  unreachable

194:                                              ; preds = %183
  %195 = bitcast %"struct.rx::vk::priv::CommandHeader"*** %174 to i64*
  %196 = sub i64 %177, %187
  %197 = ashr exact i64 %196, 3
  %198 = icmp ult i64 %197, 1152921504606846975
  br i1 %198, label %199, label %207

199:                                              ; preds = %194
  %200 = ashr exact i64 %196, 2
  %201 = icmp ult i64 %200, %190
  %202 = select i1 %201, i64 %190, i64 %200
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %212, label %204

204:                                              ; preds = %199
  %205 = icmp ugt i64 %202, 2305843009213693951
  br i1 %205, label %206, label %207

206:                                              ; preds = %204
  call void @abort() #19
  unreachable

207:                                              ; preds = %204, %194
  %208 = phi i64 [ %202, %204 ], [ 2305843009213693951, %194 ]
  %209 = shl i64 %208, 3
  %210 = call i8* @_Znwm(i64 %209) #18
  %211 = bitcast i8* %210 to %"struct.rx::vk::priv::CommandHeader"**
  br label %212

212:                                              ; preds = %207, %199
  %213 = phi i64 [ %208, %207 ], [ 0, %199 ]
  %214 = phi %"struct.rx::vk::priv::CommandHeader"** [ %211, %207 ], [ null, %199 ]
  %215 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %214, i64 %189
  %216 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %214, i64 %213
  %217 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %216 to i64
  %218 = bitcast %"struct.rx::vk::priv::CommandHeader"** %215 to i64*
  store i64 %171, i64* %218, align 8
  %219 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %215, i64 1
  %220 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %219 to i64
  %221 = getelementptr inbounds %"class.std::__1::vector.941", %"class.std::__1::vector.941"* %170, i64 0, i32 0, i32 0
  %222 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %221, align 8
  %223 = load i64, i64* %185, align 8
  %224 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %222 to i64
  %225 = sub i64 %223, %224
  %226 = ashr exact i64 %225, 3
  %227 = sub nsw i64 0, %226
  %228 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %215, i64 %227
  %229 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %228 to i64
  %230 = icmp sgt i64 %225, 0
  br i1 %230, label %231, label %235

231:                                              ; preds = %212
  %232 = bitcast %"struct.rx::vk::priv::CommandHeader"** %228 to i8*
  %233 = bitcast %"struct.rx::vk::priv::CommandHeader"** %222 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %232, i8* align 8 %233, i64 %225, i1 false) #16
  %234 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %221, align 8
  br label %235

235:                                              ; preds = %231, %212
  %236 = phi %"struct.rx::vk::priv::CommandHeader"** [ %222, %212 ], [ %234, %231 ]
  store i64 %229, i64* %186, align 8
  store i64 %220, i64* %185, align 8
  store i64 %217, i64* %195, align 8
  %237 = icmp eq %"struct.rx::vk::priv::CommandHeader"** %236, null
  br i1 %237, label %332, label %238

238:                                              ; preds = %235
  %239 = bitcast %"struct.rx::vk::priv::CommandHeader"** %236 to i8*
  call void @_ZdlPv(i8* %239) #18
  br label %332

240:                                              ; preds = %148
  %241 = add nuw nsw i64 %142, 39
  %242 = and i64 %241, 274877906940
  %243 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %2, i64 0, i32 4, i32 2
  %244 = load %"class.angle::PoolAllocator"*, %"class.angle::PoolAllocator"** %243, align 8
  %245 = getelementptr inbounds %"class.angle::PoolAllocator", %"class.angle::PoolAllocator"* %244, i64 0, i32 2
  %246 = load i64, i64* %245, align 8
  %247 = getelementptr inbounds %"class.angle::PoolAllocator", %"class.angle::PoolAllocator"* %244, i64 0, i32 4
  %248 = load i64, i64* %247, align 8
  %249 = sub i64 %246, %248
  %250 = icmp ult i64 %249, %242
  br i1 %250, label %257, label %251

251:                                              ; preds = %240
  %252 = getelementptr inbounds %"class.angle::PoolAllocator", %"class.angle::PoolAllocator"* %244, i64 0, i32 6
  %253 = bitcast %"struct.angle::PoolAllocator::Header"** %252 to i8**
  %254 = load i8*, i8** %253, align 8
  %255 = getelementptr inbounds i8, i8* %254, i64 %248
  %256 = add i64 %248, %242
  store i64 %256, i64* %247, align 8
  br label %259

257:                                              ; preds = %240
  %258 = call i8* @_ZN5angle13PoolAllocator15allocateNewPageEmm(%"class.angle::PoolAllocator"* %244, i64 %242, i64 %242) #16
  br label %259

259:                                              ; preds = %257, %251
  %260 = phi i8* [ %255, %251 ], [ %258, %257 ]
  %261 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %2, i64 0, i32 4, i32 3
  store i8* %260, i8** %261, align 8
  store i64 %242, i64* %145, align 8
  %262 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %2, i64 0, i32 4, i32 1
  %263 = ptrtoint i8* %260 to i64
  %264 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %2, i64 0, i32 4, i32 1, i32 0, i32 1
  %265 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %264, align 8
  %266 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %2, i64 0, i32 4, i32 1, i32 0, i32 2, i32 0, i32 0
  %267 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %266, align 8
  %268 = icmp ult %"struct.rx::vk::priv::CommandHeader"** %265, %267
  %269 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %267 to i64
  br i1 %268, label %270, label %275

270:                                              ; preds = %259
  %271 = bitcast %"struct.rx::vk::priv::CommandHeader"** %265 to i64*
  store i64 %263, i64* %271, align 8
  %272 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %265, i64 1
  %273 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %272 to i64
  %274 = bitcast %"struct.rx::vk::priv::CommandHeader"*** %264 to i64*
  store i64 %273, i64* %274, align 8
  br label %332

275:                                              ; preds = %259
  %276 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %265 to i64
  %277 = bitcast %"struct.rx::vk::priv::CommandHeader"*** %264 to i64*
  %278 = bitcast %"class.std::__1::vector.941"* %262 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = sub i64 %276, %279
  %281 = ashr exact i64 %280, 3
  %282 = add nsw i64 %281, 1
  %283 = icmp ugt i64 %282, 2305843009213693951
  br i1 %283, label %284, label %286

284:                                              ; preds = %275
  %285 = bitcast %"class.std::__1::vector.941"* %262 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %285) #19
  unreachable

286:                                              ; preds = %275
  %287 = bitcast %"struct.rx::vk::priv::CommandHeader"*** %266 to i64*
  %288 = sub i64 %269, %279
  %289 = ashr exact i64 %288, 3
  %290 = icmp ult i64 %289, 1152921504606846975
  br i1 %290, label %291, label %299

291:                                              ; preds = %286
  %292 = ashr exact i64 %288, 2
  %293 = icmp ult i64 %292, %282
  %294 = select i1 %293, i64 %282, i64 %292
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %304, label %296

296:                                              ; preds = %291
  %297 = icmp ugt i64 %294, 2305843009213693951
  br i1 %297, label %298, label %299

298:                                              ; preds = %296
  call void @abort() #19
  unreachable

299:                                              ; preds = %296, %286
  %300 = phi i64 [ %294, %296 ], [ 2305843009213693951, %286 ]
  %301 = shl i64 %300, 3
  %302 = call i8* @_Znwm(i64 %301) #18
  %303 = bitcast i8* %302 to %"struct.rx::vk::priv::CommandHeader"**
  br label %304

304:                                              ; preds = %299, %291
  %305 = phi i64 [ %300, %299 ], [ 0, %291 ]
  %306 = phi %"struct.rx::vk::priv::CommandHeader"** [ %303, %299 ], [ null, %291 ]
  %307 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %306, i64 %281
  %308 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %306, i64 %305
  %309 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %308 to i64
  %310 = bitcast %"struct.rx::vk::priv::CommandHeader"** %307 to i64*
  store i64 %263, i64* %310, align 8
  %311 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %307, i64 1
  %312 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %311 to i64
  %313 = getelementptr inbounds %"class.std::__1::vector.941", %"class.std::__1::vector.941"* %262, i64 0, i32 0, i32 0
  %314 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %313, align 8
  %315 = load i64, i64* %277, align 8
  %316 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %314 to i64
  %317 = sub i64 %315, %316
  %318 = ashr exact i64 %317, 3
  %319 = sub nsw i64 0, %318
  %320 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %307, i64 %319
  %321 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %320 to i64
  %322 = icmp sgt i64 %317, 0
  br i1 %322, label %323, label %327

323:                                              ; preds = %304
  %324 = bitcast %"struct.rx::vk::priv::CommandHeader"** %320 to i8*
  %325 = bitcast %"struct.rx::vk::priv::CommandHeader"** %314 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %324, i8* align 8 %325, i64 %317, i1 false) #16
  %326 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %313, align 8
  br label %327

327:                                              ; preds = %323, %304
  %328 = phi %"struct.rx::vk::priv::CommandHeader"** [ %314, %304 ], [ %326, %323 ]
  store i64 %321, i64* %278, align 8
  store i64 %312, i64* %277, align 8
  store i64 %309, i64* %287, align 8
  %329 = icmp eq %"struct.rx::vk::priv::CommandHeader"** %328, null
  br i1 %329, label %332, label %330

330:                                              ; preds = %327
  %331 = bitcast %"struct.rx::vk::priv::CommandHeader"** %328 to i8*
  call void @_ZdlPv(i8* %331) #18
  br label %332

332:                                              ; preds = %130, %178, %235, %238, %270, %327, %330
  %333 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %2, i64 0, i32 4, i32 3
  %334 = load i8*, i8** %333, align 8
  %335 = getelementptr inbounds i8, i8* %334, i64 32
  %336 = load i64, i64* %145, align 8
  %337 = sub i64 %336, %143
  store i64 %337, i64* %145, align 8
  %338 = bitcast i8* %334 to i16*
  store i16 12, i16* %338, align 2
  %339 = trunc i64 %143 to i16
  %340 = getelementptr inbounds i8, i8* %334, i64 2
  %341 = bitcast i8* %340 to i16*
  store i16 %339, i16* %341, align 2
  %342 = load i8*, i8** %333, align 8
  %343 = getelementptr inbounds i8, i8* %342, i64 %143
  store i8* %343, i8** %333, align 8
  %344 = bitcast i8* %343 to i16*
  store i16 0, i16* %344, align 2
  %345 = getelementptr inbounds i8, i8* %334, i64 4
  %346 = bitcast i8* %345 to i32*
  store i32 %140, i32* %346, align 4
  %347 = getelementptr inbounds i8, i8* %334, i64 8
  %348 = bitcast i8* %347 to i64*
  store i64 0, i64* %348, align 4
  %349 = getelementptr inbounds i8, i8* %334, i64 16
  %350 = bitcast i8* %349 to i32*
  store i32 %133, i32* %350, align 4
  %351 = getelementptr inbounds i8, i8* %334, i64 20
  %352 = bitcast i8* %351 to i32*
  store i32 %135, i32* %352, align 4
  %353 = getelementptr inbounds i8, i8* %334, i64 24
  %354 = bitcast i8* %353 to i32*
  store i32 0, i32* %354, align 4
  %355 = getelementptr inbounds i8, i8* %334, i64 28
  %356 = bitcast i8* %355 to i32*
  store i32 %139, i32* %356, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %335, i8* nonnull align 8 %9, i64 %142, i1 false) #16
  %357 = icmp eq i64 %131, 0
  br i1 %357, label %365, label %358

358:                                              ; preds = %332, %358
  %359 = phi i64 [ %363, %358 ], [ %131, %332 ]
  %360 = add i64 %359, -1
  store i64 %360, i64* %10, align 8
  %361 = getelementptr inbounds %"class.angle::FixedVector.1450", %"class.angle::FixedVector.1450"* %5, i64 0, i32 0, i32 0, i64 %360
  %362 = bitcast %struct.VkClearAttachment* %361 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %362, i8 0, i64 24, i1 false) #16
  %363 = load i64, i64* %10, align 8
  %364 = icmp eq i64 %363, 0
  br i1 %364, label %365, label %358

365:                                              ; preds = %358, %332
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %9) #16
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13FramebufferVk13redeferClearsEPNS_9ContextVkE(%"class.rx::FramebufferVk"*, %"class.rx::ContextVk"* nocapture readnone) local_unnamed_addr #3 align 2 {
  %3 = alloca %union.VkClearValue, align 4
  %4 = alloca %"class.angle::BitSetT", align 1
  %5 = alloca %"class.gl::ImageIndex", align 4
  %6 = alloca %"class.gl::ImageIndex", align 4
  %7 = bitcast %union.VkClearValue* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #16
  %8 = getelementptr inbounds %union.VkClearValue, %union.VkClearValue* %3, i64 0, i32 0, i32 0, i64 2
  %9 = bitcast float* %8 to i64*
  store i64 0, i64* %9, align 4
  %10 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12
  %11 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 0, i32 0, i64 8, i32 0, i32 0, i64 0
  %12 = bitcast float* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = bitcast %union.VkClearValue* %3 to i32*
  store i32 %13, i32* %14, align 4
  %15 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 0, i32 0, i64 9, i32 0, i32 0, i64 1
  %16 = bitcast float* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %union.VkClearValue, %union.VkClearValue* %3, i64 0, i32 0, i32 0, i64 1
  %19 = bitcast float* %18 to i32*
  store i32 %17, i32* %19, align 4
  %20 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 1, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 256
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 0, i32 0, i64 8
  %26 = bitcast %union.VkClearValue* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %26, i8 0, i64 16, i1 false) #16
  %27 = and i64 %21, -257
  store i64 %27, i64* %20, align 8
  br label %28

28:                                               ; preds = %2, %24
  %29 = phi i64 [ %27, %24 ], [ %21, %2 ]
  %30 = phi i32 [ 2, %24 ], [ 0, %2 ]
  %31 = and i64 %29, 512
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %28
  %34 = or i32 %30, 4
  %35 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 0, i32 0, i64 9
  %36 = bitcast %union.VkClearValue* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %36, i8 0, i64 16, i1 false) #16
  %37 = and i64 %29, -513
  store i64 %37, i64* %20, align 8
  br label %38

38:                                               ; preds = %28, %33
  %39 = phi i32 [ %34, %33 ], [ %30, %28 ]
  %40 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %40) #16
  call void @_ZNK2rx2vk16ClearValuesArray12getColorMaskEv(%"class.angle::BitSetT"* nonnull sret %4, %"class.rx::vk::ClearValuesArray"* %10) #16
  %41 = load i8, i8* %40, align 1, !noalias !50
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %48, label %43

43:                                               ; preds = %38
  %44 = zext i8 %41 to i32
  %45 = call i32 @llvm.cttz.i32(i32 %44, i1 true) #16, !range !2
  %46 = getelementptr inbounds %"class.gl::ImageIndex", %"class.gl::ImageIndex"* %5, i64 0, i32 0
  %47 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10, i32 0
  br label %50

48:                                               ; preds = %50, %38
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %40) #16
  %49 = icmp eq i32 %39, 0
  br i1 %49, label %83, label %74

50:                                               ; preds = %71, %43
  %51 = phi i32 [ %45, %43 ], [ %73, %71 ]
  %52 = phi i8 [ %41, %43 ], [ %69, %71 ]
  %53 = zext i32 %51 to i64
  %54 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 1, i32 0, i64 %53
  %55 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %54, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %46, i8 -86, i64 16, i1 false)
  %56 = load i32, i32* %47, align 4
  %57 = lshr i32 %56, 6
  %58 = and i32 %57, 511
  call void @_ZNK2rx14RenderTargetVk21getImageIndexForClearEj(%"class.gl::ImageIndex"* nonnull sret %5, %"class.rx::RenderTargetVk"* %55, i32 %58) #16
  %59 = call dereferenceable(440) %"class.rx::vk::ImageHelper"* @_ZNK2rx14RenderTargetVk16getImageForWriteEv(%"class.rx::RenderTargetVk"* %55) #16
  %60 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 0, i32 0, i64 %53
  call void @_ZN2rx2vk11ImageHelper10stageClearERKN2gl10ImageIndexEjRK12VkClearValue(%"class.rx::vk::ImageHelper"* %59, %"class.gl::ImageIndex"* nonnull dereferenceable(16) %5, i32 1, %union.VkClearValue* dereferenceable(16) %60) #16
  %61 = bitcast %union.VkClearValue* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 16, i1 false) #16
  %62 = shl i64 1, %53
  %63 = xor i64 %62, -1
  %64 = load i64, i64* %20, align 8
  %65 = and i64 %64, %63
  store i64 %65, i64* %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #16
  %66 = shl i32 1, %51
  %67 = trunc i32 %66 to i8
  %68 = xor i8 %67, -1
  %69 = and i8 %52, %68
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %48, label %71

71:                                               ; preds = %50
  %72 = zext i8 %69 to i32
  %73 = call i32 @llvm.cttz.i32(i32 %72, i1 true) #16, !range !2
  br label %50

74:                                               ; preds = %48
  %75 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 2
  %76 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %75, align 8
  %77 = getelementptr inbounds %"class.gl::ImageIndex", %"class.gl::ImageIndex"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %77, i8 -86, i64 16, i1 false)
  %78 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = lshr i32 %79, 6
  %81 = and i32 %80, 511
  call void @_ZNK2rx14RenderTargetVk21getImageIndexForClearEj(%"class.gl::ImageIndex"* nonnull sret %6, %"class.rx::RenderTargetVk"* %76, i32 %81) #16
  %82 = call dereferenceable(440) %"class.rx::vk::ImageHelper"* @_ZNK2rx14RenderTargetVk16getImageForWriteEv(%"class.rx::RenderTargetVk"* %76) #16
  call void @_ZN2rx2vk11ImageHelper10stageClearERKN2gl10ImageIndexEjRK12VkClearValue(%"class.rx::vk::ImageHelper"* %82, %"class.gl::ImageIndex"* nonnull dereferenceable(16) %6, i32 %39, %union.VkClearValue* nonnull dereferenceable(16) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #16
  br label %83

83:                                               ; preds = %48, %74
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferVk13clearWithDrawEPNS_9ContextVkERKN2gl9RectangleEN5angle7BitSetTILm8EhmEEbbmhRK17VkClearColorValueRK24VkClearDepthStencilValue(%"class.rx::FramebufferVk"*, %"class.rx::ContextVk"*, %"struct.gl::Rectangle"* nocapture readonly dereferenceable(16), %"class.angle::BitSetT"* nocapture readonly, i1 zeroext, i1 zeroext, i64, i8 zeroext, %union.VkClearColorValue* nocapture readonly dereferenceable(16), %struct.VkClearDepthStencilValue* nocapture readonly dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %11 = alloca %"struct.rx::UtilsVk::ClearFramebufferParameters", align 8
  %12 = zext i1 %4 to i8
  %13 = zext i1 %5 to i8
  %14 = bitcast %"struct.rx::UtilsVk::ClearFramebufferParameters"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %14) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 bitcast ({ %"struct.gl::Rectangle", i8, i8, i8, i8, i32, i32, [4 x i8], %"struct.angle::Format"*, %union.VkClearColorValue, %struct.VkClearDepthStencilValue }* @__const._ZN2rx13FramebufferVk13clearWithDrawEPNS_9ContextVkERKN2gl9RectangleEN5angle7BitSetTILm8EhmEEbbmhRK17VkClearColorValueRK24VkClearDepthStencilValue.params to i8*), i64 64, i1 false)
  call void @_ZN2rx7UtilsVk26ClearFramebufferParametersC1Ev(%"struct.rx::UtilsVk::ClearFramebufferParameters"* nonnull %11) #16
  %15 = bitcast %"struct.gl::Rectangle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 4 %15, i64 16, i1 false)
  %16 = getelementptr inbounds %"struct.rx::UtilsVk::ClearFramebufferParameters", %"struct.rx::UtilsVk::ClearFramebufferParameters"* %11, i64 0, i32 8
  %17 = bitcast %union.VkClearColorValue* %16 to i8*
  %18 = bitcast %union.VkClearColorValue* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 4 %18, i64 16, i1 false)
  %19 = getelementptr inbounds %"struct.rx::UtilsVk::ClearFramebufferParameters", %"struct.rx::UtilsVk::ClearFramebufferParameters"* %11, i64 0, i32 9
  %20 = bitcast %struct.VkClearDepthStencilValue* %9 to i64*
  %21 = bitcast %struct.VkClearDepthStencilValue* %19 to i64*
  %22 = load i64, i64* %20, align 4
  store i64 %22, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.rx::UtilsVk::ClearFramebufferParameters", %"struct.rx::UtilsVk::ClearFramebufferParameters"* %11, i64 0, i32 4
  store i8 %7, i8* %23, align 1
  %24 = getelementptr inbounds %"struct.rx::UtilsVk::ClearFramebufferParameters", %"struct.rx::UtilsVk::ClearFramebufferParameters"* %11, i64 0, i32 1
  store i8 1, i8* %24, align 8
  %25 = getelementptr inbounds %"struct.rx::UtilsVk::ClearFramebufferParameters", %"struct.rx::UtilsVk::ClearFramebufferParameters"* %11, i64 0, i32 2
  store i8 %12, i8* %25, align 1
  %26 = getelementptr inbounds %"struct.rx::UtilsVk::ClearFramebufferParameters", %"struct.rx::UtilsVk::ClearFramebufferParameters"* %11, i64 0, i32 3
  store i8 %13, i8* %26, align 2
  %27 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %3, i64 0, i32 0
  %28 = load i8, i8* %27, align 1, !noalias !53
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %73, label %30

30:                                               ; preds = %10
  %31 = zext i8 %28 to i32
  %32 = call i32 @llvm.cttz.i32(i32 %31, i1 true) #16, !range !2
  %33 = getelementptr inbounds %"struct.rx::UtilsVk::ClearFramebufferParameters", %"struct.rx::UtilsVk::ClearFramebufferParameters"* %11, i64 0, i32 7
  %34 = getelementptr inbounds %"struct.rx::UtilsVk::ClearFramebufferParameters", %"struct.rx::UtilsVk::ClearFramebufferParameters"* %11, i64 0, i32 6
  %35 = getelementptr inbounds %"struct.rx::UtilsVk::ClearFramebufferParameters", %"struct.rx::UtilsVk::ClearFramebufferParameters"* %11, i64 0, i32 5
  %36 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 8, i32 0
  %37 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 57
  br label %38

38:                                               ; preds = %70, %30
  %39 = phi i32 [ %32, %30 ], [ %72, %70 ]
  %40 = phi i8 [ %28, %30 ], [ %68, %70 ]
  %41 = zext i32 %39 to i64
  %42 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 1, i32 0, i64 %41
  %43 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %42, align 8
  %44 = call dereferenceable(440) %"class.rx::vk::ImageHelper"* @_ZNK2rx14RenderTargetVk21getImageForRenderPassEv(%"class.rx::RenderTargetVk"* %43) #16
  %45 = getelementptr inbounds %"class.rx::vk::ImageHelper", %"class.rx::vk::ImageHelper"* %44, i64 0, i32 11
  %46 = load %"struct.rx::vk::Format"*, %"struct.rx::vk::Format"** %45, align 8
  %47 = getelementptr inbounds %"struct.rx::vk::Format", %"struct.rx::vk::Format"* %46, i64 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %49
  store %"struct.angle::Format"* %50, %"struct.angle::Format"** %33, align 8
  store i32 %39, i32* %34, align 8
  %51 = shl nuw nsw i32 %39, 3
  %52 = zext i32 %51 to i64
  %53 = lshr i64 %6, %52
  %54 = trunc i64 %53 to i32
  %55 = and i32 %54, 255
  store i32 %55, i32* %35, align 4
  %56 = load i8, i8* %36, align 1
  %57 = shl i32 1, %39
  %58 = trunc i32 %57 to i8
  %59 = and i8 %56, %58
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %63, label %61

61:                                               ; preds = %38
  %62 = and i32 %54, 247
  store i32 %62, i32* %35, align 4
  br label %63

63:                                               ; preds = %38, %61
  %64 = call i32 @_ZN2rx7UtilsVk16clearFramebufferEPNS_9ContextVkEPNS_13FramebufferVkERKNS0_26ClearFramebufferParametersE(%"class.rx::UtilsVk"* %37, %"class.rx::ContextVk"* %1, %"class.rx::FramebufferVk"* %0, %"struct.rx::UtilsVk::ClearFramebufferParameters"* nonnull dereferenceable(64) %11) #16
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %83, label %66

66:                                               ; preds = %63
  store i8 0, i8* %25, align 1
  store i8 0, i8* %26, align 2
  %67 = xor i8 %58, -1
  %68 = and i8 %40, %67
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %66
  %71 = zext i8 %68 to i32
  %72 = call i32 @llvm.cttz.i32(i32 %71, i1 true) #16, !range !2
  br label %38

73:                                               ; preds = %66, %10
  %74 = phi i8 [ %13, %10 ], [ 0, %66 ]
  %75 = phi i8 [ %12, %10 ], [ 0, %66 ]
  %76 = or i8 %74, %75
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %73
  store i8 0, i8* %24, align 8
  %79 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 57
  %80 = call i32 @_ZN2rx7UtilsVk16clearFramebufferEPNS_9ContextVkEPNS_13FramebufferVkERKNS0_26ClearFramebufferParametersE(%"class.rx::UtilsVk"* %79, %"class.rx::ContextVk"* %1, %"class.rx::FramebufferVk"* %0, %"struct.rx::UtilsVk::ClearFramebufferParameters"* nonnull dereferenceable(64) %11) #16
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %83, label %82

82:                                               ; preds = %78, %73
  br label %83

83:                                               ; preds = %63, %78, %82
  %84 = phi i32 [ 0, %82 ], [ 1, %78 ], [ 1, %63 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %14) #16
  ret i32 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferVk13clearBufferfvEPKN2gl7ContextEjiPKf(%"class.rx::FramebufferVk"*, %"class.gl::Context"* nocapture readonly, i32, i32, float* nocapture readonly) unnamed_addr #3 align 2 {
  %6 = alloca <4 x i32>, align 16
  %7 = alloca %"class.angle::BitSetT", align 1
  %8 = bitcast <4 x i32>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 0, i64 16, i1 false)
  %9 = icmp eq i32 %2, 6145
  br i1 %9, label %10, label %14

10:                                               ; preds = %5
  %11 = bitcast float* %4 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds <4 x i32>, <4 x i32>* %6, i64 0, i64 0
  store i32 %12, i32* %13, align 16
  br label %19

14:                                               ; preds = %5
  %15 = shl i32 1, %3
  %16 = trunc i32 %15 to i8
  %17 = bitcast float* %4 to <4 x i32>*
  %18 = load <4 x i32>, <4 x i32>* %17, align 4
  store <4 x i32> %18, <4 x i32>* %6, align 16
  br label %19

19:                                               ; preds = %14, %10
  %20 = phi i8 [ 0, %10 ], [ %16, %14 ]
  %21 = phi i1 [ true, %10 ], [ false, %14 ]
  %22 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %7, i64 0, i32 0
  store i8 %20, i8* %22, align 1
  %23 = bitcast <4 x i32>* %6 to %union.VkClearColorValue*
  %24 = bitcast <4 x i32>* %6 to %struct.VkClearDepthStencilValue*
  %25 = call i32 @_ZN2rx13FramebufferVk9clearImplEPKN2gl7ContextEN5angle7BitSetTILm8EhmEEbbRK17VkClearColorValueRK24VkClearDepthStencilValue(%"class.rx::FramebufferVk"* %0, %"class.gl::Context"* %1, %"class.angle::BitSetT"* nonnull %7, i1 zeroext %21, i1 zeroext false, %union.VkClearColorValue* nonnull dereferenceable(16) %23, %struct.VkClearDepthStencilValue* nonnull dereferenceable(8) %24)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #16
  ret i32 %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #0

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferVk14clearBufferuivEPKN2gl7ContextEjiPKj(%"class.rx::FramebufferVk"*, %"class.gl::Context"* nocapture readonly, i32, i32, i32* nocapture readonly) unnamed_addr #3 align 2 {
  %6 = alloca <4 x i32>, align 16
  %7 = alloca %"class.angle::BitSetT", align 1
  %8 = bitcast <4 x i32>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #16
  %9 = shl i32 1, %3
  %10 = trunc i32 %9 to i8
  %11 = bitcast <4 x i32>* %6 to %union.VkClearColorValue*
  %12 = bitcast i32* %4 to <4 x i32>*
  %13 = load <4 x i32>, <4 x i32>* %12, align 4
  store <4 x i32> %13, <4 x i32>* %6, align 16
  %14 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %7, i64 0, i32 0
  store i8 %10, i8* %14, align 1
  %15 = bitcast <4 x i32>* %6 to %struct.VkClearDepthStencilValue*
  %16 = call i32 @_ZN2rx13FramebufferVk9clearImplEPKN2gl7ContextEN5angle7BitSetTILm8EhmEEbbRK17VkClearColorValueRK24VkClearDepthStencilValue(%"class.rx::FramebufferVk"* %0, %"class.gl::Context"* %1, %"class.angle::BitSetT"* nonnull %7, i1 zeroext false, i1 zeroext false, %union.VkClearColorValue* nonnull dereferenceable(16) %11, %struct.VkClearDepthStencilValue* nonnull dereferenceable(8) %15)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #16
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferVk13clearBufferivEPKN2gl7ContextEjiPKi(%"class.rx::FramebufferVk"*, %"class.gl::Context"* nocapture readonly, i32, i32, i32* nocapture readonly) unnamed_addr #3 align 2 {
  %6 = alloca %union.VkClearValue, align 4
  %7 = alloca %"class.angle::BitSetT", align 1
  %8 = bitcast %union.VkClearValue* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %8, i8 0, i64 16, i1 false)
  %9 = icmp eq i32 %2, 6146
  br i1 %9, label %10, label %14

10:                                               ; preds = %5
  %11 = load i32, i32* %4, align 4
  %12 = and i32 %11, 255
  %13 = getelementptr inbounds %union.VkClearValue, %union.VkClearValue* %6, i64 0, i32 0, i32 0, i64 1
  br label %30

14:                                               ; preds = %5
  %15 = shl i32 1, %3
  %16 = trunc i32 %15 to i8
  %17 = load i32, i32* %4, align 4
  %18 = bitcast %union.VkClearValue* %6 to i32*
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds i32, i32* %4, i64 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %union.VkClearValue, %union.VkClearValue* %6, i64 0, i32 0, i32 0, i64 1
  %22 = bitcast float* %21 to i32*
  store i32 %20, i32* %22, align 4
  %23 = getelementptr inbounds i32, i32* %4, i64 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %union.VkClearValue, %union.VkClearValue* %6, i64 0, i32 0, i32 0, i64 2
  %26 = bitcast float* %25 to i32*
  store i32 %24, i32* %26, align 4
  %27 = getelementptr inbounds i32, i32* %4, i64 3
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %union.VkClearValue, %union.VkClearValue* %6, i64 0, i32 0, i32 0, i64 3
  br label %30

30:                                               ; preds = %14, %10
  %31 = phi float* [ %29, %14 ], [ %13, %10 ]
  %32 = phi i32 [ %28, %14 ], [ %12, %10 ]
  %33 = phi i8 [ %16, %14 ], [ 0, %10 ]
  %34 = phi i1 [ false, %14 ], [ true, %10 ]
  %35 = bitcast float* %31 to i32*
  store i32 %32, i32* %35, align 4
  %36 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %7, i64 0, i32 0
  store i8 %33, i8* %36, align 1
  %37 = getelementptr inbounds %union.VkClearValue, %union.VkClearValue* %6, i64 0, i32 0
  %38 = bitcast %union.VkClearValue* %6 to %struct.VkClearDepthStencilValue*
  %39 = call i32 @_ZN2rx13FramebufferVk9clearImplEPKN2gl7ContextEN5angle7BitSetTILm8EhmEEbbRK17VkClearColorValueRK24VkClearDepthStencilValue(%"class.rx::FramebufferVk"* %0, %"class.gl::Context"* %1, %"class.angle::BitSetT"* nonnull %7, i1 zeroext false, i1 zeroext %34, %union.VkClearColorValue* nonnull dereferenceable(16) %37, %struct.VkClearDepthStencilValue* nonnull dereferenceable(8) %38)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #16
  ret i32 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferVk13clearBufferfiEPKN2gl7ContextEjifi(%"class.rx::FramebufferVk"*, %"class.gl::Context"* nocapture readonly, i32, i32, float, i32) unnamed_addr #3 align 2 {
  %7 = alloca %union.VkClearValue, align 4
  %8 = alloca %"class.angle::BitSetT", align 1
  %9 = bitcast %union.VkClearValue* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #16
  %10 = getelementptr inbounds %union.VkClearValue, %union.VkClearValue* %7, i64 0, i32 0, i32 0, i64 2
  %11 = bitcast float* %10 to i64*
  store i64 0, i64* %11, align 4
  %12 = bitcast %union.VkClearValue* %7 to %struct.VkClearDepthStencilValue*
  %13 = getelementptr inbounds %union.VkClearValue, %union.VkClearValue* %7, i64 0, i32 0, i32 0, i64 0
  store float %4, float* %13, align 4
  %14 = and i32 %5, 255
  %15 = getelementptr inbounds %union.VkClearValue, %union.VkClearValue* %7, i64 0, i32 0, i32 0, i64 1
  %16 = bitcast float* %15 to i32*
  store i32 %14, i32* %16, align 4
  %17 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %8, i64 0, i32 0
  store i8 0, i8* %17, align 1
  %18 = getelementptr inbounds %union.VkClearValue, %union.VkClearValue* %7, i64 0, i32 0
  %19 = call i32 @_ZN2rx13FramebufferVk9clearImplEPKN2gl7ContextEN5angle7BitSetTILm8EhmEEbbRK17VkClearColorValueRK24VkClearDepthStencilValue(%"class.rx::FramebufferVk"* %0, %"class.gl::Context"* %1, %"class.angle::BitSetT"* nonnull %8, i1 zeroext true, i1 zeroext true, %union.VkClearColorValue* nonnull dereferenceable(16) %18, %struct.VkClearDepthStencilValue* nonnull dereferenceable(8) %12)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #16
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(128) %"struct.gl::InternalFormat"* @_ZNK2rx13FramebufferVk32getImplementationColorReadFormatEPKN2gl7ContextE(%"class.rx::FramebufferVk"* nocapture readonly, %"class.gl::Context"* nocapture readonly) unnamed_addr #3 align 2 {
  %3 = alloca %"struct.gl::Format", align 8
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %5 = bitcast %"class.rx::ContextImpl"** %4 to %"class.rx::ContextVk"**
  %6 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %5, align 8
  %7 = bitcast %"struct.gl::Format"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #16
  %8 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %9 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %8, align 8
  %10 = tail call %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState17getReadAttachmentEv(%"class.gl::FramebufferState"* %9) #16
  %11 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %10, i64 0, i32 2
  %12 = load %"class.gl::FramebufferAttachmentObject"*, %"class.gl::FramebufferAttachmentObject"** %11, align 8, !noalias !56
  %13 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %10, i64 0, i32 1, i32 0
  %14 = load i32, i32* %13, align 4, !noalias !56
  %15 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %10, i64 0, i32 1, i32 1
  %16 = bitcast %"class.gl::FramebufferAttachmentObject"* %12 to void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)***
  %17 = load void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)**, void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)*** %16, align 8, !noalias !56
  %18 = getelementptr inbounds void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)*, void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)** %17, i64 3
  %19 = load void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)*, void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)** %18, align 8, !noalias !56
  call void %19(%"struct.gl::Format"* nonnull sret %3, %"class.gl::FramebufferAttachmentObject"* %12, i32 %14, %"class.gl::ImageIndex"* dereferenceable(16) %15) #16
  %20 = getelementptr inbounds %"struct.gl::Format", %"struct.gl::Format"* %3, i64 0, i32 0
  %21 = load %"struct.gl::InternalFormat"*, %"struct.gl::InternalFormat"** %20, align 8
  %22 = getelementptr inbounds %"struct.gl::InternalFormat", %"struct.gl::InternalFormat"* %21, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #16
  %24 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %6, i64 0, i32 1, i32 1
  %25 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %24, align 8
  %26 = call i32 @_ZN5angle6Format18InternalFormatToIDEj(i32 %23) #16
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %25, i64 0, i32 49, i32 1, i32 0, i64 %27, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %30, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = call dereferenceable(128) %"struct.gl::InternalFormat"* @_ZN2gl26GetSizedInternalFormatInfoEj(i32 %32) #16
  ret %"struct.gl::InternalFormat"* %33
}

declare dereferenceable(128) %"struct.gl::InternalFormat"* @_ZN2gl26GetSizedInternalFormatInfoEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferVk10readPixelsEPKN2gl7ContextERKNS1_9RectangleEjjRKNS1_14PixelPackStateEPNS1_6BufferEPv(%"class.rx::FramebufferVk"*, %"class.gl::Context"* nocapture readonly, %"struct.gl::Rectangle"* dereferenceable(16), i32, i32, %"struct.gl::PixelPackState"* dereferenceable(28), %"class.gl::Buffer"*, i8*) unnamed_addr #3 align 2 {
  %9 = alloca %"struct.gl::Box", align 4
  %10 = alloca %"struct.gl::Rectangle", align 4
  %11 = alloca %"struct.gl::Rectangle", align 4
  %12 = alloca i32, align 4
  %13 = alloca %"struct.rx::PackPixelsParams", align 8
  %14 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %15 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %14, align 8
  %16 = tail call %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState23getReadPixelsAttachmentEj(%"class.gl::FramebufferState"* %15, i32 %3) #16
  %17 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %16, i64 0, i32 2
  %18 = load %"class.gl::FramebufferAttachmentObject"*, %"class.gl::FramebufferAttachmentObject"** %17, align 8
  %19 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %16, i64 0, i32 1, i32 1
  %20 = bitcast %"class.gl::FramebufferAttachmentObject"* %18 to { i64, i32 } (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)***
  %21 = load { i64, i32 } (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)**, { i64, i32 } (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)*** %20, align 8
  %22 = getelementptr inbounds { i64, i32 } (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)*, { i64, i32 } (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)** %21, i64 2
  %23 = load { i64, i32 } (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)*, { i64, i32 } (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)** %22, align 8
  %24 = tail call { i64, i32 } %23(%"class.gl::FramebufferAttachmentObject"* %18, %"class.gl::ImageIndex"* dereferenceable(16) %19) #16
  %25 = extractvalue { i64, i32 } %24, 0
  %26 = trunc i64 %25 to i32
  %27 = lshr i64 %25, 32
  %28 = trunc i64 %27 to i32
  %29 = bitcast %"struct.gl::Rectangle"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #16
  %30 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %10, i64 0, i32 0
  %31 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %10, i64 0, i32 1
  %32 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %10, i64 0, i32 2
  %33 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %10, i64 0, i32 3
  store i32 0, i32* %30, align 4
  store i32 0, i32* %31, align 4
  store i32 %26, i32* %32, align 4
  store i32 %28, i32* %33, align 4
  %34 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %35 = bitcast %"class.rx::ContextImpl"** %34 to %"class.rx::ContextVk"**
  %36 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %35, align 8
  %37 = bitcast %"struct.gl::Rectangle"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #16
  %38 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %11, i64 0, i32 0
  %39 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %11, i64 0, i32 1
  %40 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %11, i64 0, i32 2
  %41 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %11, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %37, i8 0, i64 16, i1 false) #16
  %42 = call zeroext i1 @_ZN2gl13ClipRectangleERKNS_9RectangleES2_PS0_(%"struct.gl::Rectangle"* dereferenceable(16) %2, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %10, %"struct.gl::Rectangle"* nonnull %11) #16
  br i1 %42, label %43, label %164

43:                                               ; preds = %8
  %44 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 1, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %63, label %47

47:                                               ; preds = %43
  %48 = bitcast %"struct.gl::Box"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #16
  %49 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %14, align 8
  call void @_ZNK2gl16FramebufferState13getDimensionsEv(%"struct.gl::Box"* nonnull sret %9, %"class.gl::FramebufferState"* %49) #16
  %50 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %9, i64 0, i32 3
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %9, i64 0, i32 4
  %53 = load i32, i32* %52, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #16
  %54 = call zeroext i1 @_ZNK2rx9ContextVk30isRotatedAspectRatioForDrawFBOEv(%"class.rx::ContextVk"* %36) #16
  %55 = select i1 %54, i32 %51, i32 %53
  %56 = select i1 %54, i32 %53, i32 %51
  %57 = zext i32 %55 to i64
  %58 = shl nuw i64 %57, 32
  %59 = zext i32 %56 to i64
  %60 = or i64 %58, %59
  %61 = call i32 @_ZN2rx9ContextVk15startRenderPassEN2gl9RectangleEPPNS_2vk4priv22SecondaryCommandBufferEPb(%"class.rx::ContextVk"* %36, i64 0, i64 %60, %"class.rx::vk::priv::SecondaryCommandBuffer"** null, i8* null) #16
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %164, label %63

63:                                               ; preds = %43, %47
  %64 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64) #16
  store i32 0, i32* %12, align 4
  %65 = bitcast %"struct.rx::PackPixelsParams"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %65) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 64, i1 false)
  call void @_ZN2rx16PackPixelsParamsC1Ev(%"struct.rx::PackPixelsParams"* nonnull %13) #16
  %66 = call i32 @_ZN2rx2vk11ImageHelper19GetReadPixelsParamsEPNS_9ContextVkERKN2gl14PixelPackStateEPNS4_6BufferEjjRKNS4_9RectangleESC_PNS_16PackPixelsParamsEPj(%"class.rx::ContextVk"* %36, %"struct.gl::PixelPackState"* dereferenceable(28) %5, %"class.gl::Buffer"* %6, i32 %3, i32 %4, %"struct.gl::Rectangle"* dereferenceable(16) %2, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %11, %"struct.rx::PackPixelsParams"* nonnull %13, i32* nonnull %12) #16
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %162, label %68

68:                                               ; preds = %63
  %69 = call zeroext i1 @_ZNK2rx9ContextVk31isViewportFlipEnabledForReadFBOEv(%"class.rx::ContextVk"* %36) #16
  %70 = call i32 @_ZNK2rx9ContextVk26getRotationReadFramebufferEv(%"class.rx::ContextVk"* %36) #16
  %71 = getelementptr inbounds %"struct.rx::PackPixelsParams", %"struct.rx::PackPixelsParams"* %13, i64 0, i32 8
  store i32 %70, i32* %71, align 8
  switch i32 %70, label %138 [
    i32 0, label %72
    i32 1, label %80
    i32 2, label %98
    i32 3, label %116
  ]

72:                                               ; preds = %68
  br i1 %69, label %73, label %143

73:                                               ; preds = %72
  %74 = load i32, i32* %33, align 4
  %75 = load i32, i32* %39, align 4
  %76 = sub i32 %74, %75
  %77 = load i32, i32* %41, align 4
  %78 = sub i32 %76, %77
  %79 = getelementptr inbounds %"struct.rx::PackPixelsParams", %"struct.rx::PackPixelsParams"* %13, i64 0, i32 0, i32 1
  store i32 %78, i32* %79, align 4
  br label %139

80:                                               ; preds = %68
  %81 = load i32, i32* %39, align 4
  %82 = getelementptr inbounds %"struct.rx::PackPixelsParams", %"struct.rx::PackPixelsParams"* %13, i64 0, i32 0, i32 0
  store i32 %81, i32* %82, align 8
  br i1 %69, label %83, label %85

83:                                               ; preds = %80
  %84 = load i32, i32* %38, align 4
  br label %91

85:                                               ; preds = %80
  %86 = load i32, i32* %32, align 4
  %87 = load i32, i32* %38, align 4
  %88 = sub i32 %86, %87
  %89 = load i32, i32* %40, align 4
  %90 = sub i32 %88, %89
  br label %91

91:                                               ; preds = %85, %83
  %92 = phi i32 [ %84, %83 ], [ %90, %85 ]
  %93 = getelementptr inbounds %"struct.rx::PackPixelsParams", %"struct.rx::PackPixelsParams"* %13, i64 0, i32 0, i32 1
  store i32 %92, i32* %93, align 4
  %94 = getelementptr inbounds %"struct.rx::PackPixelsParams", %"struct.rx::PackPixelsParams"* %13, i64 0, i32 0, i32 2
  %95 = getelementptr inbounds %"struct.rx::PackPixelsParams", %"struct.rx::PackPixelsParams"* %13, i64 0, i32 0, i32 3
  %96 = load i32, i32* %94, align 8
  %97 = load i32, i32* %95, align 4
  store i32 %97, i32* %94, align 8
  store i32 %96, i32* %95, align 4
  br label %138

98:                                               ; preds = %68
  %99 = load i32, i32* %32, align 4
  %100 = load i32, i32* %38, align 4
  %101 = sub i32 %99, %100
  %102 = load i32, i32* %40, align 4
  %103 = sub i32 %101, %102
  %104 = getelementptr inbounds %"struct.rx::PackPixelsParams", %"struct.rx::PackPixelsParams"* %13, i64 0, i32 0, i32 0
  store i32 %103, i32* %104, align 8
  br i1 %69, label %105, label %107

105:                                              ; preds = %98
  %106 = load i32, i32* %39, align 4
  br label %113

107:                                              ; preds = %98
  %108 = load i32, i32* %33, align 4
  %109 = load i32, i32* %39, align 4
  %110 = sub i32 %108, %109
  %111 = load i32, i32* %41, align 4
  %112 = sub i32 %110, %111
  br label %113

113:                                              ; preds = %107, %105
  %114 = phi i32 [ %106, %105 ], [ %112, %107 ]
  %115 = getelementptr inbounds %"struct.rx::PackPixelsParams", %"struct.rx::PackPixelsParams"* %13, i64 0, i32 0, i32 1
  store i32 %114, i32* %115, align 4
  br label %138

116:                                              ; preds = %68
  %117 = load i32, i32* %33, align 4
  %118 = load i32, i32* %39, align 4
  %119 = sub i32 %117, %118
  %120 = load i32, i32* %41, align 4
  %121 = sub i32 %119, %120
  %122 = getelementptr inbounds %"struct.rx::PackPixelsParams", %"struct.rx::PackPixelsParams"* %13, i64 0, i32 0, i32 0
  store i32 %121, i32* %122, align 8
  br i1 %69, label %123, label %129

123:                                              ; preds = %116
  %124 = load i32, i32* %32, align 4
  %125 = load i32, i32* %38, align 4
  %126 = sub i32 %124, %125
  %127 = load i32, i32* %40, align 4
  %128 = sub i32 %126, %127
  br label %131

129:                                              ; preds = %116
  %130 = load i32, i32* %38, align 4
  br label %131

131:                                              ; preds = %129, %123
  %132 = phi i32 [ %128, %123 ], [ %130, %129 ]
  %133 = getelementptr inbounds %"struct.rx::PackPixelsParams", %"struct.rx::PackPixelsParams"* %13, i64 0, i32 0, i32 1
  store i32 %132, i32* %133, align 4
  %134 = getelementptr inbounds %"struct.rx::PackPixelsParams", %"struct.rx::PackPixelsParams"* %13, i64 0, i32 0, i32 2
  %135 = getelementptr inbounds %"struct.rx::PackPixelsParams", %"struct.rx::PackPixelsParams"* %13, i64 0, i32 0, i32 3
  %136 = load i32, i32* %134, align 8
  %137 = load i32, i32* %135, align 4
  store i32 %137, i32* %134, align 8
  store i32 %136, i32* %135, align 4
  br label %138

138:                                              ; preds = %68, %131, %113, %91
  br i1 %69, label %139, label %143

139:                                              ; preds = %73, %138
  %140 = getelementptr inbounds %"struct.rx::PackPixelsParams", %"struct.rx::PackPixelsParams"* %13, i64 0, i32 5
  %141 = load i8, i8* %140, align 8, !range !8
  %142 = xor i8 %141, 1
  store i8 %142, i8* %140, align 8
  br label %143

143:                                              ; preds = %72, %138, %139
  %144 = getelementptr inbounds %"struct.rx::PackPixelsParams", %"struct.rx::PackPixelsParams"* %13, i64 0, i32 0
  %145 = icmp eq i32 %3, 6401
  %146 = select i1 %145, i32 4, i32 1
  %147 = icmp eq i32 %3, 6402
  %148 = select i1 %147, i32 2, i32 %146
  %149 = add i32 %3, -6401
  %150 = icmp ult i32 %149, 2
  %151 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 2
  %152 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 0
  %153 = select i1 %150, %"class.rx::RenderTargetVk"** %151, %"class.rx::RenderTargetVk"** %152
  %154 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %153, align 8
  %155 = load i32, i32* %12, align 4
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds i8, i8* %7, i64 %156
  %158 = call i32 @_ZN2rx13FramebufferVk14readPixelsImplEPNS_9ContextVkERKN2gl9RectangleERKNS_16PackPixelsParamsE21VkImageAspectFlagBitsPNS_14RenderTargetVkEPv(%"class.rx::FramebufferVk"* %0, %"class.rx::ContextVk"* %36, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %144, %"struct.rx::PackPixelsParams"* nonnull dereferenceable(64) %13, i32 %148, %"class.rx::RenderTargetVk"* %154, i8* %157)
  %159 = icmp eq i32 %158, 1
  br i1 %159, label %162, label %160

160:                                              ; preds = %143
  %161 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 7
  call void @_ZN2rx2vk13DynamicBuffer22releaseInFlightBuffersEPNS_9ContextVkE(%"class.rx::vk::DynamicBuffer"* %161, %"class.rx::ContextVk"* %36) #16
  br label %162

162:                                              ; preds = %143, %63, %160
  %163 = phi i32 [ 1, %63 ], [ 0, %160 ], [ 1, %143 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %65) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64) #16
  br label %164

164:                                              ; preds = %47, %8, %162
  %165 = phi i32 [ %163, %162 ], [ 0, %8 ], [ 1, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #16
  ret i32 %165
}

declare %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState23getReadPixelsAttachmentEj(%"class.gl::FramebufferState"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #0

declare void @_ZN2rx16PackPixelsParamsC1Ev(%"struct.rx::PackPixelsParams"*) unnamed_addr #1

declare i32 @_ZN2rx2vk11ImageHelper19GetReadPixelsParamsEPNS_9ContextVkERKN2gl14PixelPackStateEPNS4_6BufferEjjRKNS4_9RectangleESC_PNS_16PackPixelsParamsEPj(%"class.rx::ContextVk"*, %"struct.gl::PixelPackState"* dereferenceable(28), %"class.gl::Buffer"*, i32, i32, %"struct.gl::Rectangle"* dereferenceable(16), %"struct.gl::Rectangle"* dereferenceable(16), %"struct.rx::PackPixelsParams"*, i32*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2rx9ContextVk31isViewportFlipEnabledForReadFBOEv(%"class.rx::ContextVk"*) local_unnamed_addr #1

declare i32 @_ZNK2rx9ContextVk26getRotationReadFramebufferEv(%"class.rx::ContextVk"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferVk14readPixelsImplEPNS_9ContextVkERKN2gl9RectangleERKNS_16PackPixelsParamsE21VkImageAspectFlagBitsPNS_14RenderTargetVkEPv(%"class.rx::FramebufferVk"*, %"class.rx::ContextVk"*, %"struct.gl::Rectangle"* dereferenceable(16), %"struct.rx::PackPixelsParams"* dereferenceable(64), i32, %"class.rx::RenderTargetVk"*, i8*) local_unnamed_addr #3 align 2 {
  %8 = alloca %"class.gl::TraceEvent::TraceEndOnScopeClose", align 8
  %9 = load atomic i8, i8* bitcast (i64* @_ZGVZN2rx13FramebufferVk14readPixelsImplEPNS_9ContextVkERKN2gl9RectangleERKNS_16PackPixelsParamsE21VkImageAspectFlagBitsPNS_14RenderTargetVkEPvE32trace_event_unique_catstatic2686 to i8*) acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %17, !prof !18

11:                                               ; preds = %7
  %12 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2rx13FramebufferVk14readPixelsImplEPNS_9ContextVkERKN2gl9RectangleERKNS_16PackPixelsParamsE21VkImageAspectFlagBitsPNS_14RenderTargetVkEPvE32trace_event_unique_catstatic2686) #16
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = tail call %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() #16
  %16 = tail call i8* @_ZN5angle27GetTraceCategoryEnabledFlagEPNS_15PlatformMethodsEPKc(%"struct.angle::PlatformMethods"* %15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0)) #16
  store i8* %16, i8** @_ZZN2rx13FramebufferVk14readPixelsImplEPNS_9ContextVkERKN2gl9RectangleERKNS_16PackPixelsParamsE21VkImageAspectFlagBitsPNS_14RenderTargetVkEPvE32trace_event_unique_catstatic2686, align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN2rx13FramebufferVk14readPixelsImplEPNS_9ContextVkERKN2gl9RectangleERKNS_16PackPixelsParamsE21VkImageAspectFlagBitsPNS_14RenderTargetVkEPvE32trace_event_unique_catstatic2686) #16
  br label %17

17:                                               ; preds = %11, %14, %7
  %18 = bitcast %"class.gl::TraceEvent::TraceEndOnScopeClose"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #16
  %19 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %8, i64 0, i32 0
  %20 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %8, i64 0, i32 1
  %21 = bitcast %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  store %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* null, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"** %19, align 8
  %22 = load i8*, i8** @_ZZN2rx13FramebufferVk14readPixelsImplEPNS_9ContextVkERKN2gl9RectangleERKNS_16PackPixelsParamsE21VkImageAspectFlagBitsPNS_14RenderTargetVkEPvE32trace_event_unique_catstatic2686, align 8
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %36, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %8, i64 0, i32 1, i32 2
  %27 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %8, i64 0, i32 1, i32 1
  %28 = tail call %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() #16
  %29 = load i8*, i8** @_ZZN2rx13FramebufferVk14readPixelsImplEPNS_9ContextVkERKN2gl9RectangleERKNS_16PackPixelsParamsE21VkImageAspectFlagBitsPNS_14RenderTargetVkEPvE32trace_event_unique_catstatic2686, align 8
  %30 = tail call i64 @_ZN5angle13AddTraceEventEPNS_15PlatformMethodsEcPKhPKcyiPS5_S3_PKyh(%"struct.angle::PlatformMethods"* %28, i8 signext 66, i8* %29, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #16
  %31 = tail call %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() #16
  %32 = load i64, i64* bitcast (i8** @_ZZN2rx13FramebufferVk14readPixelsImplEPNS_9ContextVkERKN2gl9RectangleERKNS_16PackPixelsParamsE21VkImageAspectFlagBitsPNS_14RenderTargetVkEPvE32trace_event_unique_catstatic2686 to i64*), align 8
  %33 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %8, i64 0, i32 1
  %34 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %33, i64 0, i32 0
  store %"struct.angle::PlatformMethods"* %31, %"struct.angle::PlatformMethods"** %34, align 8
  %35 = bitcast i8** %27 to i64*
  store i64 %32, i64* %35, align 8
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i64 0, i64 0), i8** %26, align 8
  store %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %33, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"** %19, align 8
  br label %36

36:                                               ; preds = %17, %25
  %37 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %5, i64 0, i32 5, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %5, i64 0, i32 6
  %40 = load i32, i32* %39, align 4
  %41 = call dereferenceable(440) %"class.rx::vk::ImageHelper"* @_ZNK2rx14RenderTargetVk15getImageForCopyEv(%"class.rx::RenderTargetVk"* %5) #16
  %42 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 7
  %43 = call i32 @_ZN2rx2vk11ImageHelper10readPixelsEPNS_9ContextVkERKN2gl9RectangleERKNS_16PackPixelsParamsE21VkImageAspectFlagBitsNS4_17LevelIndexWrapperIiEEjPvPNS0_13DynamicBufferE(%"class.rx::vk::ImageHelper"* %41, %"class.rx::ContextVk"* %1, %"struct.gl::Rectangle"* dereferenceable(16) %2, %"struct.rx::PackPixelsParams"* dereferenceable(64) %3, i32 %4, i32 %38, i32 %40, i8* %6, %"class.rx::vk::DynamicBuffer"* %42) #16
  %44 = load %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"*, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"** %19, align 8
  %45 = icmp eq %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %44, null
  br i1 %45, label %57, label %46

46:                                               ; preds = %36
  %47 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %44, i64 0, i32 1
  %48 = load i8*, i8** %47, align 8
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %44, i64 0, i32 0
  %53 = load %"struct.angle::PlatformMethods"*, %"struct.angle::PlatformMethods"** %52, align 8
  %54 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %44, i64 0, i32 2
  %55 = load i8*, i8** %54, align 8
  %56 = call i64 @_ZN5angle13AddTraceEventEPNS_15PlatformMethodsEcPKhPKcyiPS5_S3_PKyh(%"struct.angle::PlatformMethods"* %53, i8 signext 69, i8* %48, i8* %55, i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #16
  br label %57

57:                                               ; preds = %36, %46, %51
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #16
  ret i32 %43
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK2rx13FramebufferVk24getReadPixelsAspectFlagsEj(%"class.rx::FramebufferVk"* nocapture readnone, i32) local_unnamed_addr #9 align 2 {
  %3 = icmp eq i32 %1, 6401
  %4 = select i1 %3, i32 4, i32 1
  %5 = icmp eq i32 %1, 6402
  %6 = select i1 %5, i32 2, i32 %4
  ret i32 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.rx::RenderTargetVk"* @_ZNK2rx13FramebufferVk25getReadPixelsRenderTargetEj(%"class.rx::FramebufferVk"* nocapture readonly, i32) local_unnamed_addr #10 align 2 {
  %3 = add i32 %1, -6401
  %4 = icmp ult i32 %3, 2
  %5 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 2
  %6 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 0
  %7 = select i1 %4, %"class.rx::RenderTargetVk"** %5, %"class.rx::RenderTargetVk"** %6
  %8 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %7, align 8
  ret %"class.rx::RenderTargetVk"* %8
}

declare void @_ZN2rx2vk13DynamicBuffer22releaseInFlightBuffersEPNS_9ContextVkE(%"class.rx::vk::DynamicBuffer"*, %"class.rx::ContextVk"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.rx::RenderTargetVk"* @_ZNK2rx13FramebufferVk27getDepthStencilRenderTargetEv(%"class.rx::FramebufferVk"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 2
  %3 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %2, align 8
  ret %"class.rx::RenderTargetVk"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.rx::RenderTargetVk"* @_ZNK2rx13FramebufferVk24getColorDrawRenderTargetEm(%"class.rx::FramebufferVk"* nocapture readonly, i64) local_unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 1, i32 0, i64 %1
  %4 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %3, align 8
  ret %"class.rx::RenderTargetVk"* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.rx::RenderTargetVk"* @_ZNK2rx13FramebufferVk24getColorReadRenderTargetEv(%"class.rx::FramebufferVk"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 0
  %3 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %2, align 8
  ret %"class.rx::RenderTargetVk"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferVk15blitWithCommandEPNS_9ContextVkERKN2gl9RectangleES6_PNS_14RenderTargetVkES8_jbbbbb(%"class.rx::FramebufferVk"* nocapture readnone, %"class.rx::ContextVk"*, %"struct.gl::Rectangle"* nocapture readonly dereferenceable(16), %"struct.gl::Rectangle"* nocapture readonly dereferenceable(16), %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"*, i32, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #3 align 2 {
  %13 = alloca %"class.rx::vk::CommandBufferAccess", align 8
  %14 = tail call dereferenceable(440) %"class.rx::vk::ImageHelper"* @_ZNK2rx14RenderTargetVk15getImageForCopyEv(%"class.rx::RenderTargetVk"* %4) #16
  %15 = tail call dereferenceable(440) %"class.rx::vk::ImageHelper"* @_ZNK2rx14RenderTargetVk16getImageForWriteEv(%"class.rx::RenderTargetVk"* %5) #16
  %16 = tail call i32 @_ZNK2rx2vk11ImageHelper14getAspectFlagsEv(%"class.rx::vk::ImageHelper"* %14) #16
  %17 = and i32 %16, -3
  %18 = select i1 %8, i32 %16, i32 %17
  %19 = and i32 %18, -5
  %20 = select i1 %9, i32 %18, i32 %19
  %21 = bitcast %"class.rx::vk::CommandBufferAccess"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %21) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 160, i1 false)
  call void @_ZN2rx2vk19CommandBufferAccessC1Ev(%"class.rx::vk::CommandBufferAccess"* nonnull %13) #16
  call void @_ZN2rx2vk19CommandBufferAccess11onImageReadEjNS0_11ImageLayoutEPNS0_11ImageHelperE(%"class.rx::vk::CommandBufferAccess"* nonnull %13, i32 %16, i32 13, %"class.rx::vk::ImageHelper"* %14) #16
  %22 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %5, i64 0, i32 5, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %5, i64 0, i32 6
  %25 = load i32, i32* %24, align 4
  call void @_ZN2rx2vk19CommandBufferAccess12onImageWriteEN2gl17LevelIndexWrapperIiEEjjjjNS0_11ImageLayoutEPNS0_11ImageHelperE(%"class.rx::vk::CommandBufferAccess"* nonnull %13, i32 %23, i32 1, i32 %25, i32 1, i32 %16, i32 14, %"class.rx::vk::ImageHelper"* %15) #16
  %26 = call i32 @_ZN2rx9ContextVk16onResourceAccessERKNS_2vk19CommandBufferAccessE(%"class.rx::ContextVk"* %1, %"class.rx::vk::CommandBufferAccess"* nonnull dereferenceable(160) %13) #16
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %216, label %28

28:                                               ; preds = %12
  %29 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 53
  %30 = load %"class.rx::vk::CommandBufferHelper"*, %"class.rx::vk::CommandBufferHelper"** %29, align 8
  %31 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %4, i64 0, i32 5, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = call i32 @_ZNK2rx2vk11ImageHelper9toVkLevelEN2gl17LevelIndexWrapperIiEE(%"class.rx::vk::ImageHelper"* %14, i32 %32) #16
  %34 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %4, i64 0, i32 6
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = add nsw i32 %41, %37
  %43 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 3
  %44 = load i32, i32* %43, align 4
  %45 = add nsw i32 %44, %39
  %46 = load i32, i32* %22, align 8
  %47 = call i32 @_ZNK2rx2vk11ImageHelper9toVkLevelEN2gl17LevelIndexWrapperIiEE(%"class.rx::vk::ImageHelper"* %15, i32 %46) #16
  %48 = load i32, i32* %24, align 4
  %49 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %3, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %3, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %3, i64 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = add nsw i32 %54, %50
  %56 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %3, i64 0, i32 3
  %57 = load i32, i32* %56, align 4
  %58 = add nsw i32 %57, %52
  %59 = getelementptr inbounds %"class.rx::vk::ImageHelper", %"class.rx::vk::ImageHelper"* %14, i64 0, i32 2
  %60 = getelementptr inbounds %"class.rx::vk::ImageHelper", %"class.rx::vk::ImageHelper"* %15, i64 0, i32 2
  %61 = call i32 @_ZN2rx5gl_vk9GetFilterEj(i32 %6) #16
  %62 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %30, i64 0, i32 4, i32 4
  %63 = load i64, i64* %62, align 8
  %64 = icmp ult i64 %63, 112
  br i1 %64, label %65, label %155

65:                                               ; preds = %28
  %66 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %30, i64 0, i32 4, i32 2
  %67 = load %"class.angle::PoolAllocator"*, %"class.angle::PoolAllocator"** %66, align 8
  %68 = getelementptr inbounds %"class.angle::PoolAllocator", %"class.angle::PoolAllocator"* %67, i64 0, i32 2
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"class.angle::PoolAllocator", %"class.angle::PoolAllocator"* %67, i64 0, i32 4
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 %69, %71
  %73 = icmp ult i64 %72, 1364
  br i1 %73, label %80, label %74

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"class.angle::PoolAllocator", %"class.angle::PoolAllocator"* %67, i64 0, i32 6
  %76 = bitcast %"struct.angle::PoolAllocator::Header"** %75 to i8**
  %77 = load i8*, i8** %76, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 %71
  %79 = add i64 %71, 1364
  store i64 %79, i64* %70, align 8
  br label %82

80:                                               ; preds = %65
  %81 = call i8* @_ZN5angle13PoolAllocator15allocateNewPageEmm(%"class.angle::PoolAllocator"* %67, i64 1364, i64 1364) #16
  br label %82

82:                                               ; preds = %80, %74
  %83 = phi i8* [ %78, %74 ], [ %81, %80 ]
  %84 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %30, i64 0, i32 4, i32 3
  store i8* %83, i8** %84, align 8
  store i64 1364, i64* %62, align 8
  %85 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %30, i64 0, i32 4, i32 1
  %86 = ptrtoint i8* %83 to i64
  %87 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %30, i64 0, i32 4, i32 1, i32 0, i32 1
  %88 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %87, align 8
  %89 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %30, i64 0, i32 4, i32 1, i32 0, i32 2, i32 0, i32 0
  %90 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %89, align 8
  %91 = icmp ult %"struct.rx::vk::priv::CommandHeader"** %88, %90
  %92 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %90 to i64
  br i1 %91, label %93, label %98

93:                                               ; preds = %82
  %94 = bitcast %"struct.rx::vk::priv::CommandHeader"** %88 to i64*
  store i64 %86, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %88, i64 1
  %96 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %95 to i64
  %97 = bitcast %"struct.rx::vk::priv::CommandHeader"*** %87 to i64*
  store i64 %96, i64* %97, align 8
  br label %155

98:                                               ; preds = %82
  %99 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %88 to i64
  %100 = bitcast %"struct.rx::vk::priv::CommandHeader"*** %87 to i64*
  %101 = bitcast %"class.std::__1::vector.941"* %85 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = sub i64 %99, %102
  %104 = ashr exact i64 %103, 3
  %105 = add nsw i64 %104, 1
  %106 = icmp ugt i64 %105, 2305843009213693951
  br i1 %106, label %107, label %109

107:                                              ; preds = %98
  %108 = bitcast %"class.std::__1::vector.941"* %85 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %108) #19
  unreachable

109:                                              ; preds = %98
  %110 = bitcast %"struct.rx::vk::priv::CommandHeader"*** %89 to i64*
  %111 = sub i64 %92, %102
  %112 = ashr exact i64 %111, 3
  %113 = icmp ult i64 %112, 1152921504606846975
  br i1 %113, label %114, label %122

114:                                              ; preds = %109
  %115 = ashr exact i64 %111, 2
  %116 = icmp ult i64 %115, %105
  %117 = select i1 %116, i64 %105, i64 %115
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %127, label %119

119:                                              ; preds = %114
  %120 = icmp ugt i64 %117, 2305843009213693951
  br i1 %120, label %121, label %122

121:                                              ; preds = %119
  call void @abort() #19
  unreachable

122:                                              ; preds = %119, %109
  %123 = phi i64 [ %117, %119 ], [ 2305843009213693951, %109 ]
  %124 = shl i64 %123, 3
  %125 = call i8* @_Znwm(i64 %124) #18
  %126 = bitcast i8* %125 to %"struct.rx::vk::priv::CommandHeader"**
  br label %127

127:                                              ; preds = %122, %114
  %128 = phi i64 [ %123, %122 ], [ 0, %114 ]
  %129 = phi %"struct.rx::vk::priv::CommandHeader"** [ %126, %122 ], [ null, %114 ]
  %130 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %129, i64 %104
  %131 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %129, i64 %128
  %132 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %131 to i64
  %133 = bitcast %"struct.rx::vk::priv::CommandHeader"** %130 to i64*
  store i64 %86, i64* %133, align 8
  %134 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %130, i64 1
  %135 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %134 to i64
  %136 = getelementptr inbounds %"class.std::__1::vector.941", %"class.std::__1::vector.941"* %85, i64 0, i32 0, i32 0
  %137 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %136, align 8
  %138 = load i64, i64* %100, align 8
  %139 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %137 to i64
  %140 = sub i64 %138, %139
  %141 = ashr exact i64 %140, 3
  %142 = sub nsw i64 0, %141
  %143 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %130, i64 %142
  %144 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %143 to i64
  %145 = icmp sgt i64 %140, 0
  br i1 %145, label %146, label %150

146:                                              ; preds = %127
  %147 = bitcast %"struct.rx::vk::priv::CommandHeader"** %143 to i8*
  %148 = bitcast %"struct.rx::vk::priv::CommandHeader"** %137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %148, i64 %140, i1 false) #16
  %149 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %136, align 8
  br label %150

150:                                              ; preds = %146, %127
  %151 = phi %"struct.rx::vk::priv::CommandHeader"** [ %137, %127 ], [ %149, %146 ]
  store i64 %144, i64* %101, align 8
  store i64 %135, i64* %100, align 8
  store i64 %132, i64* %110, align 8
  %152 = icmp eq %"struct.rx::vk::priv::CommandHeader"** %151, null
  br i1 %152, label %155, label %153

153:                                              ; preds = %150
  %154 = bitcast %"struct.rx::vk::priv::CommandHeader"** %151 to i8*
  call void @_ZdlPv(i8* %154) #18
  br label %155

155:                                              ; preds = %28, %93, %150, %153
  %156 = load i64, i64* %62, align 8
  %157 = add i64 %156, -108
  store i64 %157, i64* %62, align 8
  %158 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %30, i64 0, i32 4, i32 3
  %159 = bitcast i8** %158 to %"struct.rx::vk::priv::CommandHeader"**
  %160 = load %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %159, align 8
  %161 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader", %"struct.rx::vk::priv::CommandHeader"* %160, i64 0, i32 0
  store i16 10, i16* %161, align 2
  %162 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader", %"struct.rx::vk::priv::CommandHeader"* %160, i64 0, i32 1
  store i16 108, i16* %162, align 2
  %163 = load i8*, i8** %158, align 8
  %164 = getelementptr inbounds i8, i8* %163, i64 108
  store i8* %164, i8** %158, align 8
  %165 = bitcast i8* %164 to i16*
  store i16 0, i16* %165, align 2
  %166 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader", %"struct.rx::vk::priv::CommandHeader"* %160, i64 1
  %167 = bitcast %"class.rx::vk::Image"* %59 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.rx::vk::priv::CommandHeader"* %166 to i64*
  store i64 %168, i64* %169, align 8
  %170 = bitcast %"class.rx::vk::Image"* %60 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader", %"struct.rx::vk::priv::CommandHeader"* %160, i64 3
  %173 = bitcast %"struct.rx::vk::priv::CommandHeader"* %172 to i64*
  store i64 %171, i64* %173, align 8
  %174 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader", %"struct.rx::vk::priv::CommandHeader"* %160, i64 5
  %175 = bitcast %"struct.rx::vk::priv::CommandHeader"* %174 to i32*
  store i32 %61, i32* %175, align 8
  %176 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader", %"struct.rx::vk::priv::CommandHeader"* %160, i64 6
  %177 = bitcast %"struct.rx::vk::priv::CommandHeader"* %176 to i32*
  store i32 %20, i32* %177, align 4
  %178 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader", %"struct.rx::vk::priv::CommandHeader"* %160, i64 7
  %179 = bitcast %"struct.rx::vk::priv::CommandHeader"* %178 to i32*
  store i32 %33, i32* %179, align 4
  %180 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader", %"struct.rx::vk::priv::CommandHeader"* %160, i64 8
  %181 = bitcast %"struct.rx::vk::priv::CommandHeader"* %180 to i32*
  store i32 %35, i32* %181, align 4
  %182 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader", %"struct.rx::vk::priv::CommandHeader"* %160, i64 9
  %183 = bitcast %"struct.rx::vk::priv::CommandHeader"* %182 to i32*
  store i32 1, i32* %183, align 4
  %184 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader", %"struct.rx::vk::priv::CommandHeader"* %160, i64 10
  %185 = bitcast %"struct.rx::vk::priv::CommandHeader"* %184 to i32*
  store i32 %37, i32* %185, align 4
  %186 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader", %"struct.rx::vk::priv::CommandHeader"* %160, i64 11
  %187 = bitcast %"struct.rx::vk::priv::CommandHeader"* %186 to i32*
  store i32 %39, i32* %187, align 4
  %188 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader", %"struct.rx::vk::priv::CommandHeader"* %160, i64 12
  %189 = bitcast %"struct.rx::vk::priv::CommandHeader"* %188 to i32*
  store i32 0, i32* %189, align 4
  %190 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader", %"struct.rx::vk::priv::CommandHeader"* %160, i64 13
  %191 = bitcast %"struct.rx::vk::priv::CommandHeader"* %190 to i32*
  store i32 %42, i32* %191, align 4
  %192 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader", %"struct.rx::vk::priv::CommandHeader"* %160, i64 14
  %193 = bitcast %"struct.rx::vk::priv::CommandHeader"* %192 to i32*
  store i32 %45, i32* %193, align 4
  %194 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader", %"struct.rx::vk::priv::CommandHeader"* %160, i64 15
  %195 = bitcast %"struct.rx::vk::priv::CommandHeader"* %194 to i32*
  store i32 1, i32* %195, align 4
  %196 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader", %"struct.rx::vk::priv::CommandHeader"* %160, i64 16
  %197 = bitcast %"struct.rx::vk::priv::CommandHeader"* %196 to i32*
  store i32 %20, i32* %197, align 4
  %198 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader", %"struct.rx::vk::priv::CommandHeader"* %160, i64 17
  %199 = bitcast %"struct.rx::vk::priv::CommandHeader"* %198 to i32*
  store i32 %47, i32* %199, align 4
  %200 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader", %"struct.rx::vk::priv::CommandHeader"* %160, i64 18
  %201 = bitcast %"struct.rx::vk::priv::CommandHeader"* %200 to i32*
  store i32 %48, i32* %201, align 4
  %202 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader", %"struct.rx::vk::priv::CommandHeader"* %160, i64 19
  %203 = bitcast %"struct.rx::vk::priv::CommandHeader"* %202 to i32*
  store i32 1, i32* %203, align 4
  %204 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader", %"struct.rx::vk::priv::CommandHeader"* %160, i64 20
  %205 = bitcast %"struct.rx::vk::priv::CommandHeader"* %204 to i32*
  store i32 %50, i32* %205, align 4
  %206 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader", %"struct.rx::vk::priv::CommandHeader"* %160, i64 21
  %207 = bitcast %"struct.rx::vk::priv::CommandHeader"* %206 to i32*
  store i32 %52, i32* %207, align 4
  %208 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader", %"struct.rx::vk::priv::CommandHeader"* %160, i64 22
  %209 = bitcast %"struct.rx::vk::priv::CommandHeader"* %208 to i32*
  store i32 0, i32* %209, align 4
  %210 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader", %"struct.rx::vk::priv::CommandHeader"* %160, i64 23
  %211 = bitcast %"struct.rx::vk::priv::CommandHeader"* %210 to i32*
  store i32 %55, i32* %211, align 4
  %212 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader", %"struct.rx::vk::priv::CommandHeader"* %160, i64 24
  %213 = bitcast %"struct.rx::vk::priv::CommandHeader"* %212 to i32*
  store i32 %58, i32* %213, align 4
  %214 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader", %"struct.rx::vk::priv::CommandHeader"* %160, i64 25
  %215 = bitcast %"struct.rx::vk::priv::CommandHeader"* %214 to i32*
  store i32 1, i32* %215, align 4
  br label %216

216:                                              ; preds = %12, %155
  %217 = phi i32 [ 0, %155 ], [ 1, %12 ]
  call void @_ZN2rx2vk19CommandBufferAccessD1Ev(%"class.rx::vk::CommandBufferAccess"* nonnull %13) #16
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %21) #16
  ret i32 %217
}

declare dereferenceable(440) %"class.rx::vk::ImageHelper"* @_ZNK2rx14RenderTargetVk15getImageForCopyEv(%"class.rx::RenderTargetVk"*) local_unnamed_addr #1

declare dereferenceable(440) %"class.rx::vk::ImageHelper"* @_ZNK2rx14RenderTargetVk16getImageForWriteEv(%"class.rx::RenderTargetVk"*) local_unnamed_addr #1

declare i32 @_ZNK2rx2vk11ImageHelper14getAspectFlagsEv(%"class.rx::vk::ImageHelper"*) local_unnamed_addr #1

declare void @_ZN2rx2vk19CommandBufferAccessC1Ev(%"class.rx::vk::CommandBufferAccess"*) unnamed_addr #1

declare i32 @_ZNK2rx2vk11ImageHelper9toVkLevelEN2gl17LevelIndexWrapperIiEE(%"class.rx::vk::ImageHelper"*, i32) local_unnamed_addr #1

declare i32 @_ZN2rx5gl_vk9GetFilterEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2rx2vk19CommandBufferAccessD1Ev(%"class.rx::vk::CommandBufferAccess"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferVk4blitEPKN2gl7ContextERKNS1_9RectangleES7_jj(%"class.rx::FramebufferVk"*, %"class.gl::Context"* nocapture readonly, %"struct.gl::Rectangle"* nocapture readonly dereferenceable(16), %"struct.gl::Rectangle"* nocapture readonly dereferenceable(16), i32, i32) unnamed_addr #3 align 2 {
  %7 = alloca %"struct.gl::Box", align 4
  %8 = alloca <2 x i64>, align 16
  %9 = alloca { i64, i64 }, align 8
  %10 = alloca { i64, i64 }, align 8
  %11 = alloca %"struct.gl::Box", align 4
  %12 = alloca %"struct.gl::Box", align 4
  %13 = alloca %"class.rx::vk::GarbageObject", align 8
  %14 = alloca %"struct.gl::Box", align 4
  %15 = alloca %"class.rx::vk::GarbageObject", align 8
  %16 = alloca <4 x i32>, align 16
  %17 = bitcast <4 x i32>* %16 to %"struct.gl::Rectangle"*
  %18 = alloca %"struct.gl::Rectangle", align 8
  %19 = alloca { i64, i64 }, align 8
  %20 = bitcast { i64, i64 }* %19 to %"struct.gl::Rectangle"*
  %21 = alloca { i64, i64 }, align 8
  %22 = bitcast { i64, i64 }* %21 to %"struct.gl::Rectangle"*
  %23 = alloca %"struct.gl::Rectangle", align 4
  %24 = alloca %"struct.gl::Rectangle", align 4
  %25 = alloca %"struct.gl::Rectangle", align 4
  %26 = alloca <2 x i64>, align 16
  %27 = bitcast <2 x i64>* %26 to %"struct.gl::Rectangle"*
  %28 = alloca %"struct.gl::Rectangle", align 8
  %29 = alloca %"struct.rx::UtilsVk::BlitResolveParameters", align 4
  %30 = alloca %"class.rx::vk::Framebuffer"*, align 8
  %31 = alloca %"class.rx::vk::ImageView"*, align 8
  %32 = alloca %"struct.rx::UtilsVk::BlitResolveParameters", align 4
  %33 = alloca %"class.rx::vk::DeviceScoped", align 8
  %34 = alloca %"class.rx::vk::DeviceScoped", align 8
  %35 = alloca %"struct.gl::SwizzleState", align 4
  %36 = alloca %"struct.gl::SwizzleState", align 4
  %37 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %38 = bitcast %"class.rx::ContextImpl"** %37 to %"class.rx::ContextVk"**
  %39 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %38, align 8
  %40 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %39, i64 0, i32 1
  %41 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %39, i64 0, i32 1, i32 1
  %42 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %41, align 8
  %43 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %39, i64 0, i32 57
  %44 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 1, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %64, label %47

47:                                               ; preds = %6
  %48 = bitcast %"struct.gl::Box"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #16
  %49 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %50 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %49, align 8
  call void @_ZNK2gl16FramebufferState13getDimensionsEv(%"struct.gl::Box"* nonnull sret %14, %"class.gl::FramebufferState"* %50) #16
  %51 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %14, i64 0, i32 3
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %14, i64 0, i32 4
  %54 = load i32, i32* %53, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #16
  %55 = call zeroext i1 @_ZNK2rx9ContextVk30isRotatedAspectRatioForDrawFBOEv(%"class.rx::ContextVk"* %39) #16
  %56 = select i1 %55, i32 %52, i32 %54
  %57 = select i1 %55, i32 %54, i32 %52
  %58 = zext i32 %56 to i64
  %59 = shl nuw i64 %58, 32
  %60 = zext i32 %57 to i64
  %61 = or i64 %59, %60
  %62 = call i32 @_ZN2rx9ContextVk15startRenderPassEN2gl9RectangleEPPNS_2vk4priv22SecondaryCommandBufferEPb(%"class.rx::ContextVk"* %39, i64 0, i64 %61, %"class.rx::vk::priv::SecondaryCommandBuffer"** null, i8* null) #16
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %1062, label %64

64:                                               ; preds = %6, %47
  %65 = phi i32 [ %62, %47 ], [ 0, %6 ]
  %66 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %39, i64 0, i32 0, i32 1
  %67 = load %"class.gl::State"*, %"class.gl::State"** %66, align 8
  %68 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %67, i64 0, i32 60
  %69 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %68, align 8
  %70 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %69, i64 0, i32 4
  %71 = bitcast %"class.rx::FramebufferImpl"** %70 to %"class.rx::FramebufferVk"**
  %72 = load %"class.rx::FramebufferVk"*, %"class.rx::FramebufferVk"** %71, align 8
  %73 = and i32 %4, 16384
  %74 = icmp ne i32 %73, 0
  %75 = and i32 %4, 256
  %76 = icmp ne i32 %75, 0
  %77 = and i32 %4, 1024
  %78 = icmp ne i32 %77, 0
  br i1 %74, label %79, label %86

79:                                               ; preds = %64
  %80 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %72, i64 0, i32 5, i32 0
  %81 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %80, align 8
  %82 = call dereferenceable(440) %"class.rx::vk::ImageHelper"* @_ZNK2rx14RenderTargetVk15getImageForCopyEv(%"class.rx::RenderTargetVk"* %81) #16
  %83 = getelementptr inbounds %"class.rx::vk::ImageHelper", %"class.rx::vk::ImageHelper"* %82, i64 0, i32 12
  %84 = load i32, i32* %83, align 8
  %85 = icmp sgt i32 %84, 1
  br label %86

86:                                               ; preds = %79, %64
  %87 = phi i1 [ false, %64 ], [ %85, %79 ]
  %88 = and i32 %4, 1280
  %89 = icmp ne i32 %88, 0
  br i1 %89, label %90, label %97

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %72, i64 0, i32 5, i32 2
  %92 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %91, align 8
  %93 = call dereferenceable(440) %"class.rx::vk::ImageHelper"* @_ZNK2rx14RenderTargetVk15getImageForCopyEv(%"class.rx::RenderTargetVk"* %92) #16
  %94 = getelementptr inbounds %"class.rx::vk::ImageHelper", %"class.rx::vk::ImageHelper"* %93, i64 0, i32 12
  %95 = load i32, i32* %94, align 8
  %96 = icmp sgt i32 %95, 1
  br label %97

97:                                               ; preds = %86, %90
  %98 = phi i1 [ %96, %90 ], [ false, %86 ]
  %99 = call zeroext i1 @_ZNK2rx9ContextVk31isViewportFlipEnabledForReadFBOEv(%"class.rx::ContextVk"* %39) #16
  %100 = zext i1 %99 to i8
  %101 = call zeroext i1 @_ZNK2rx9ContextVk31isViewportFlipEnabledForDrawFBOEv(%"class.rx::ContextVk"* %39) #16
  %102 = zext i1 %101 to i8
  %103 = bitcast <4 x i32>* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103) #16
  %104 = getelementptr inbounds <4 x i32>, <4 x i32>* %16, i64 0, i64 0
  %105 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %17, i64 0, i32 1
  %106 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %17, i64 0, i32 2
  %107 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %17, i64 0, i32 3
  %108 = bitcast %"struct.gl::Rectangle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %103, i8* align 4 %108, i64 16, i1 false)
  %109 = bitcast %"struct.gl::Rectangle"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #16
  %110 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %18, i64 0, i32 0
  %111 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %18, i64 0, i32 1
  %112 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %18, i64 0, i32 2
  %113 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %18, i64 0, i32 3
  %114 = bitcast %"struct.gl::Rectangle"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %109, i8* align 4 %114, i64 16, i1 false)
  %115 = bitcast { i64, i64 }* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %115) #16
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i64 0, i32 1
  %117 = bitcast i64* %116 to i32*
  %118 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %20, i64 0, i32 3
  %119 = bitcast %"struct.gl::Box"* %12 to i8*
  %120 = bitcast { i64, i64 }* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %120, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #16
  %121 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %72, i64 0, i32 0, i32 1
  %122 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %121, align 8
  call void @_ZNK2gl16FramebufferState13getDimensionsEv(%"struct.gl::Box"* nonnull sret %12, %"class.gl::FramebufferState"* %122) #16
  %123 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %12, i64 0, i32 3
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %12, i64 0, i32 4
  %126 = load i32, i32* %125, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #16
  %127 = zext i32 %126 to i64
  %128 = shl nuw i64 %127, 32
  %129 = zext i32 %124 to i64
  %130 = or i64 %128, %129
  %131 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i64 0, i32 0
  store i64 0, i64* %131, align 8
  store i64 %130, i64* %116, align 8
  %132 = bitcast %"struct.gl::Box"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %132) #16
  %133 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %134 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %133, align 8
  call void @_ZNK2gl16FramebufferState13getDimensionsEv(%"struct.gl::Box"* nonnull sret %11, %"class.gl::FramebufferState"* %134) #16
  %135 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %11, i64 0, i32 3
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %11, i64 0, i32 4
  %138 = load i32, i32* %137, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %132) #16
  %139 = load i32, i32* %112, align 8
  %140 = icmp slt i32 %139, 0
  %141 = load i32, i32* %113, align 4
  %142 = icmp slt i32 %141, 0
  %143 = call { i64, i64 } @_ZNK2gl9Rectangle4flipEbb(%"struct.gl::Rectangle"* nonnull %17, i1 zeroext %140, i1 zeroext %142) #16
  %144 = extractvalue { i64, i64 } %143, 0
  %145 = extractvalue { i64, i64 } %143, 1
  %146 = bitcast <4 x i32>* %16 to i64*
  store i64 %144, i64* %146, align 16
  %147 = bitcast i32* %106 to i64*
  store i64 %145, i64* %147, align 8
  %148 = call { i64, i64 } @_ZNK2gl9Rectangle14removeReversalEv(%"struct.gl::Rectangle"* nonnull %18) #16
  %149 = extractvalue { i64, i64 } %148, 0
  %150 = extractvalue { i64, i64 } %148, 1
  %151 = bitcast %"struct.gl::Rectangle"* %18 to i64*
  store i64 %149, i64* %151, align 8
  %152 = bitcast i32* %112 to i64*
  store i64 %150, i64* %152, align 8
  %153 = load i32, i32* %106, align 8
  %154 = sitofp i32 %153 to double
  %155 = trunc i64 %150 to i32
  %156 = sitofp i32 %155 to double
  %157 = fdiv double %154, %156
  %158 = call double @llvm.fabs.f64(double %157) #16
  %159 = load i32, i32* %107, align 4
  %160 = sitofp i32 %159 to double
  %161 = lshr i64 %150, 32
  %162 = trunc i64 %161 to i32
  %163 = sitofp i32 %162 to double
  %164 = fdiv double %160, %163
  %165 = call double @llvm.fabs.f64(double %164) #16
  %166 = call i32 @_ZNK2rx9ContextVk26getRotationReadFramebufferEv(%"class.rx::ContextVk"* %39) #16
  %167 = call i32 @_ZNK2rx9ContextVk26getRotationDrawFramebufferEv(%"class.rx::ContextVk"* %39) #16
  switch i32 %166, label %171 [
    i32 3, label %170
    i32 1, label %168
    i32 2, label %169
  ]

168:                                              ; preds = %97
  br label %171

169:                                              ; preds = %97
  br label %171

170:                                              ; preds = %97
  br label %171

171:                                              ; preds = %97, %168, %169, %170
  %172 = phi i32 [ 0, %97 ], [ %166, %169 ], [ %166, %168 ], [ %166, %170 ]
  %173 = phi i8 [ %100, %97 ], [ %100, %169 ], [ 0, %168 ], [ 0, %170 ]
  switch i32 %167, label %177 [
    i32 3, label %176
    i32 1, label %174
    i32 2, label %175
  ]

174:                                              ; preds = %171
  br label %177

175:                                              ; preds = %171
  br label %177

176:                                              ; preds = %171
  br label %177

177:                                              ; preds = %171, %174, %175, %176
  %178 = phi i32 [ %172, %171 ], [ %167, %175 ], [ %167, %174 ], [ %167, %176 ]
  %179 = phi i8 [ %102, %171 ], [ %102, %175 ], [ 0, %174 ], [ 0, %176 ]
  %180 = bitcast { i64, i64 }* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %180) #16
  %181 = bitcast { i64, i64 }* %21 to i32*
  %182 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %22, i64 0, i32 1
  %183 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i64 0, i32 1
  %184 = bitcast i64* %183 to i32*
  %185 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %22, i64 0, i32 3
  %186 = bitcast { i64, i64 }* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %186, i8 -86, i64 16, i1 false)
  %187 = call { i64, i64 } @_ZNK2gl9Rectangle14removeReversalEv(%"struct.gl::Rectangle"* nonnull %17) #16
  %188 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i64 0, i32 0
  %189 = extractvalue { i64, i64 } %187, 0
  store i64 %189, i64* %188, align 8
  %190 = extractvalue { i64, i64 } %187, 1
  store i64 %190, i64* %183, align 8
  %191 = bitcast %"struct.gl::Rectangle"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %191) #16
  %192 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %23, i64 0, i32 0
  %193 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %23, i64 0, i32 1
  %194 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %23, i64 0, i32 2
  %195 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %23, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %191, i8 0, i64 16, i1 false) #16
  %196 = call zeroext i1 @_ZN2gl13ClipRectangleERKNS_9RectangleES2_PS0_(%"struct.gl::Rectangle"* nonnull dereferenceable(16) %20, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %22, %"struct.gl::Rectangle"* nonnull %23) #16
  br i1 %196, label %197, label %1060

197:                                              ; preds = %177
  %198 = or i1 %87, %98
  %199 = bitcast %"struct.gl::Rectangle"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %199) #16
  %200 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %24, i64 0, i32 0
  %201 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %24, i64 0, i32 1
  %202 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %24, i64 0, i32 2
  %203 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %24, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %199, i8 0, i64 16, i1 false) #16
  br i1 %198, label %204, label %230

204:                                              ; preds = %197
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %199, i8* nonnull align 4 %191, i64 16, i1 false)
  switch i32 %167, label %341 [
    i32 3, label %219
    i32 1, label %205
    i32 2, label %210
  ]

205:                                              ; preds = %204
  %206 = load i32, i32* %193, align 4
  store i32 %206, i32* %200, align 4
  %207 = load i32, i32* %192, align 4
  store i32 %207, i32* %201, align 4
  %208 = load i32, i32* %202, align 4
  %209 = load i32, i32* %203, align 4
  store i32 %209, i32* %202, align 4
  store i32 %208, i32* %203, align 4
  br label %341

210:                                              ; preds = %204
  %211 = load i32, i32* %192, align 4
  %212 = sub i32 %136, %211
  %213 = load i32, i32* %194, align 4
  %214 = sub i32 %212, %213
  store i32 %214, i32* %200, align 4
  %215 = load i32, i32* %193, align 4
  %216 = sub i32 %138, %215
  %217 = load i32, i32* %195, align 4
  %218 = sub i32 %216, %217
  store i32 %218, i32* %201, align 4
  br label %341

219:                                              ; preds = %204
  %220 = load i32, i32* %193, align 4
  %221 = sub i32 %138, %220
  %222 = load i32, i32* %195, align 4
  %223 = sub i32 %221, %222
  store i32 %223, i32* %200, align 4
  %224 = load i32, i32* %192, align 4
  %225 = sub i32 %136, %224
  %226 = load i32, i32* %194, align 4
  %227 = sub i32 %225, %226
  store i32 %227, i32* %201, align 4
  %228 = load i32, i32* %202, align 4
  %229 = load i32, i32* %203, align 4
  store i32 %229, i32* %202, align 4
  store i32 %228, i32* %203, align 4
  br label %341

230:                                              ; preds = %197
  %231 = load i32, i32* %192, align 4
  %232 = load i32, i32* %181, align 8
  %233 = icmp eq i32 %232, %231
  %234 = load i32, i32* %193, align 4
  %235 = load i32, i32* %182, align 4
  %236 = icmp eq i32 %234, %235
  %237 = and i1 %233, %236
  br i1 %237, label %238, label %272

238:                                              ; preds = %230
  %239 = load i32, i32* %194, align 4
  %240 = load i32, i32* %184, align 8
  %241 = icmp eq i32 %239, %240
  br i1 %241, label %242, label %272

242:                                              ; preds = %238
  %243 = load i32, i32* %195, align 4
  %244 = load i32, i32* %185, align 4
  %245 = icmp eq i32 %243, %244
  br i1 %245, label %246, label %272

246:                                              ; preds = %242
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %199, i8* nonnull align 8 %109, i64 16, i1 false)
  switch i32 %167, label %341 [
    i32 3, label %261
    i32 1, label %247
    i32 2, label %252
  ]

247:                                              ; preds = %246
  %248 = load i32, i32* %111, align 4
  store i32 %248, i32* %200, align 4
  %249 = load i32, i32* %110, align 8
  store i32 %249, i32* %201, align 4
  %250 = load i32, i32* %202, align 4
  %251 = load i32, i32* %203, align 4
  store i32 %251, i32* %202, align 4
  store i32 %250, i32* %203, align 4
  br label %341

252:                                              ; preds = %246
  %253 = load i32, i32* %110, align 8
  %254 = sub i32 %136, %253
  %255 = load i32, i32* %112, align 8
  %256 = sub i32 %254, %255
  store i32 %256, i32* %200, align 4
  %257 = load i32, i32* %111, align 4
  %258 = sub i32 %138, %257
  %259 = load i32, i32* %113, align 4
  %260 = sub i32 %258, %259
  store i32 %260, i32* %201, align 4
  br label %341

261:                                              ; preds = %246
  %262 = load i32, i32* %111, align 4
  %263 = sub i32 %138, %262
  %264 = load i32, i32* %113, align 4
  %265 = sub i32 %263, %264
  store i32 %265, i32* %200, align 4
  %266 = load i32, i32* %110, align 8
  %267 = sub i32 %136, %266
  %268 = load i32, i32* %112, align 8
  %269 = sub i32 %267, %268
  store i32 %269, i32* %201, align 4
  %270 = load i32, i32* %202, align 4
  %271 = load i32, i32* %203, align 4
  store i32 %271, i32* %202, align 4
  store i32 %270, i32* %203, align 4
  br label %341

272:                                              ; preds = %230, %238, %242
  %273 = phi i32 [ %234, %238 ], [ %234, %242 ], [ %235, %230 ]
  %274 = sub nsw i32 %231, %232
  %275 = sitofp i32 %274 to double
  %276 = fdiv double %275, %158
  %277 = call double @llvm.round.f64(double %276)
  %278 = bitcast double %277 to i64
  %279 = sub nsw i32 %234, %273
  %280 = sitofp i32 %279 to double
  %281 = fdiv double %280, %165
  %282 = call double @llvm.round.f64(double %281)
  %283 = bitcast double %282 to i64
  %284 = load i32, i32* %184, align 8
  %285 = load i32, i32* %194, align 4
  %286 = sub i32 %232, %231
  %287 = add i32 %286, %284
  %288 = sub i32 %287, %285
  %289 = sitofp i32 %288 to double
  %290 = fdiv double %289, %158
  %291 = call double @llvm.round.f64(double %290)
  %292 = bitcast double %291 to i64
  %293 = load i32, i32* %185, align 4
  %294 = load i32, i32* %195, align 4
  %295 = sub i32 %273, %234
  %296 = add i32 %295, %293
  %297 = sub i32 %296, %294
  %298 = sitofp i32 %297 to double
  %299 = fdiv double %298, %165
  %300 = call double @llvm.round.f64(double %299)
  %301 = bitcast double %300 to i64
  %302 = load i32, i32* %106, align 8
  %303 = icmp slt i32 %302, 0
  %304 = select i1 %303, i64 %278, i64 %292
  %305 = select i1 %303, i64 %292, i64 %278
  %306 = load i32, i32* %107, align 4
  %307 = icmp slt i32 %306, 0
  %308 = select i1 %307, i64 %283, i64 %301
  %309 = select i1 %307, i64 %301, i64 %283
  %310 = load i32, i32* %110, align 8
  %311 = bitcast i64 %305 to double
  %312 = fptosi double %311 to i32
  %313 = add nsw i32 %310, %312
  store i32 %313, i32* %200, align 4
  %314 = load i32, i32* %111, align 4
  %315 = bitcast i64 %309 to double
  %316 = fptosi double %315 to i32
  %317 = add nsw i32 %314, %316
  store i32 %317, i32* %201, align 4
  %318 = load i32, i32* %112, align 8
  %319 = bitcast i64 %304 to double
  %320 = fptosi double %319 to i32
  %321 = load i32, i32* %113, align 4
  %322 = add nsw i32 %321, %314
  %323 = bitcast i64 %308 to double
  %324 = fptosi double %323 to i32
  %325 = sub i32 %322, %324
  %326 = sub i32 %310, %320
  %327 = add i32 %326, %318
  %328 = sub i32 %327, %313
  store i32 %328, i32* %202, align 4
  %329 = sub i32 %325, %317
  store i32 %329, i32* %203, align 4
  switch i32 %167, label %341 [
    i32 2, label %331
    i32 3, label %336
    i32 1, label %330
  ]

330:                                              ; preds = %272
  store i32 %317, i32* %200, align 4
  store i32 %313, i32* %201, align 4
  store i32 %329, i32* %202, align 4
  store i32 %328, i32* %203, align 4
  br label %341

331:                                              ; preds = %272
  %332 = sub i32 %136, %313
  %333 = sub i32 %332, %328
  store i32 %333, i32* %200, align 4
  %334 = sub i32 %138, %317
  %335 = sub i32 %334, %329
  store i32 %335, i32* %201, align 4
  br label %341

336:                                              ; preds = %272
  %337 = sub i32 %138, %317
  %338 = sub i32 %337, %329
  store i32 %338, i32* %200, align 4
  %339 = sub i32 %136, %313
  %340 = sub i32 %339, %328
  store i32 %340, i32* %201, align 4
  store i32 %329, i32* %202, align 4
  store i32 %328, i32* %203, align 4
  br label %341

341:                                              ; preds = %272, %330, %331, %336, %261, %252, %247, %246, %219, %210, %205, %204
  %342 = icmp eq i8 %173, 0
  br i1 %342, label %349, label %343

343:                                              ; preds = %341
  %344 = load i32, i32* %118, align 4
  %345 = load i32, i32* %105, align 4
  %346 = sub nsw i32 %344, %345
  store i32 %346, i32* %105, align 4
  %347 = load i32, i32* %107, align 4
  %348 = sub nsw i32 0, %347
  store i32 %348, i32* %107, align 4
  br label %349

349:                                              ; preds = %341, %343
  %350 = icmp eq i8 %179, 0
  br i1 %350, label %351, label %353

351:                                              ; preds = %349
  %352 = load i32, i32* %113, align 4
  br label %362

353:                                              ; preds = %349
  %354 = load i32, i32* %111, align 4
  %355 = sub nsw i32 %138, %354
  store i32 %355, i32* %111, align 4
  %356 = load i32, i32* %113, align 4
  %357 = sub nsw i32 0, %356
  store i32 %357, i32* %113, align 4
  %358 = load i32, i32* %201, align 4
  %359 = sub i32 %138, %358
  %360 = load i32, i32* %203, align 4
  %361 = sub i32 %359, %360
  store i32 %361, i32* %201, align 4
  br label %362

362:                                              ; preds = %351, %353
  %363 = phi i32 [ %352, %351 ], [ %357, %353 ]
  %364 = load i32, i32* %106, align 8
  %365 = load i32, i32* %112, align 8
  %366 = xor i32 %365, %364
  %367 = lshr i32 %366, 31
  %368 = trunc i32 %367 to i8
  %369 = load i32, i32* %107, align 4
  %370 = icmp slt i32 %363, 0
  %371 = xor i32 %363, %369
  %372 = lshr i32 %371, 31
  %373 = trunc i32 %372 to i8
  %374 = call { i64, i64 } @_ZNK2gl9Rectangle4flipEbb(%"struct.gl::Rectangle"* nonnull %17, i1 zeroext false, i1 zeroext %370) #16
  %375 = extractvalue { i64, i64 } %374, 0
  %376 = extractvalue { i64, i64 } %374, 1
  store i64 %375, i64* %146, align 16
  store i64 %376, i64* %147, align 8
  %377 = call { i64, i64 } @_ZNK2gl9Rectangle14removeReversalEv(%"struct.gl::Rectangle"* nonnull %18) #16
  %378 = extractvalue { i64, i64 } %377, 0
  %379 = extractvalue { i64, i64 } %377, 1
  store i64 %378, i64* %151, align 8
  store i64 %379, i64* %152, align 8
  %380 = load <4 x i32>, <4 x i32>* %16, align 16
  %381 = shufflevector <4 x i32> %380, <4 x i32> undef, <4 x i32> <i32 1, i32 0, i32 3, i32 2>
  %382 = trunc i64 %378 to i32
  %383 = lshr i64 %378, 32
  %384 = trunc i64 %383 to i32
  %385 = trunc i64 %379 to i32
  %386 = lshr i64 %379, 32
  %387 = trunc i64 %386 to i32
  %388 = icmp eq i32 %166, %178
  br i1 %388, label %389, label %415

389:                                              ; preds = %362
  switch i32 %166, label %415 [
    i32 3, label %404
    i32 1, label %390
    i32 2, label %393
  ]

390:                                              ; preds = %389
  store <4 x i32> %381, <4 x i32>* %16, align 16
  %391 = load i32, i32* %117, align 8
  %392 = load i32, i32* %118, align 4
  store i32 %392, i32* %117, align 8
  store i32 %391, i32* %118, align 4
  br label %415

393:                                              ; preds = %389
  %394 = load i32, i32* %117, align 8
  %395 = extractelement <4 x i32> %380, i32 0
  %396 = extractelement <4 x i32> %380, i32 2
  %397 = add i32 %396, %395
  %398 = sub i32 %394, %397
  store i32 %398, i32* %104, align 16
  %399 = load i32, i32* %118, align 4
  %400 = extractelement <4 x i32> %380, i32 1
  %401 = extractelement <4 x i32> %380, i32 3
  %402 = add i32 %401, %400
  %403 = sub i32 %399, %402
  store i32 %403, i32* %105, align 4
  br label %415

404:                                              ; preds = %389
  %405 = load i32, i32* %118, align 4
  %406 = extractelement <4 x i32> %380, i32 1
  %407 = extractelement <4 x i32> %380, i32 3
  %408 = add i32 %407, %406
  %409 = sub i32 %405, %408
  store i32 %409, i32* %104, align 16
  %410 = load i32, i32* %117, align 8
  %411 = extractelement <4 x i32> %380, i32 0
  %412 = extractelement <4 x i32> %380, i32 2
  %413 = add i32 %412, %411
  %414 = sub i32 %410, %413
  store i32 %414, i32* %105, align 4
  store i32 %407, i32* %106, align 8
  store i32 %412, i32* %107, align 4
  store i32 %405, i32* %117, align 8
  store i32 %410, i32* %118, align 4
  br label %415

415:                                              ; preds = %389, %404, %390, %393, %362
  %416 = phi i8 [ %368, %362 ], [ %373, %390 ], [ %373, %404 ], [ %368, %393 ], [ %368, %389 ]
  %417 = phi i8 [ %373, %362 ], [ %368, %390 ], [ %368, %404 ], [ %373, %393 ], [ %373, %389 ]
  %418 = icmp eq i32 %166, 1
  %419 = select i1 %418, i32 %178, i32 %167
  switch i32 %419, label %431 [
    i32 3, label %426
    i32 1, label %420
    i32 2, label %421
  ]

420:                                              ; preds = %415
  store i32 %384, i32* %110, align 8
  store i32 %382, i32* %111, align 4
  store i32 %387, i32* %112, align 8
  store i32 %385, i32* %113, align 4
  br label %431

421:                                              ; preds = %415
  %422 = sub i32 %136, %382
  %423 = sub i32 %422, %385
  store i32 %423, i32* %110, align 8
  %424 = sub i32 %138, %384
  %425 = sub i32 %424, %387
  store i32 %425, i32* %111, align 4
  br label %431

426:                                              ; preds = %415
  %427 = sub i32 %138, %384
  %428 = sub i32 %427, %387
  store i32 %428, i32* %110, align 8
  %429 = sub i32 %136, %382
  %430 = sub i32 %429, %385
  store i32 %430, i32* %111, align 4
  store i32 %387, i32* %112, align 8
  store i32 %385, i32* %113, align 4
  br label %431

431:                                              ; preds = %415, %420, %421, %426
  %432 = bitcast %"struct.gl::Rectangle"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %432) #16
  %433 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %25, i64 0, i32 1
  %434 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %25, i64 0, i32 2
  %435 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %25, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %432, i8 0, i64 16, i1 false) #16
  %436 = bitcast <2 x i64>* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %436) #16
  %437 = bitcast <2 x i64>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %437)
  %438 = bitcast <2 x i64>* %8 to %"struct.gl::Rectangle"*
  %439 = bitcast { i64, i64 }* %9 to %"struct.gl::Rectangle"*
  %440 = bitcast { i64, i64 }* %10 to %"struct.gl::Rectangle"*
  %441 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %441) #16
  %442 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %443 = bitcast i64* %442 to i32*
  %444 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %439, i64 0, i32 3
  %445 = bitcast %"struct.gl::Box"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %445) #16
  %446 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %133, align 8
  call void @_ZNK2gl16FramebufferState13getDimensionsEv(%"struct.gl::Box"* nonnull sret %7, %"class.gl::FramebufferState"* %446) #16
  %447 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %7, i64 0, i32 3
  %448 = load i32, i32* %447, align 4
  %449 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %7, i64 0, i32 4
  %450 = load i32, i32* %449, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %445) #16
  %451 = zext i32 %450 to i64
  %452 = shl nuw i64 %451, 32
  %453 = zext i32 %448 to i64
  %454 = or i64 %452, %453
  %455 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  store i64 0, i64* %455, align 8
  store i64 %454, i64* %442, align 8
  %456 = call zeroext i1 @_ZNK2rx9ContextVk31isViewportFlipEnabledForDrawFBOEv(%"class.rx::ContextVk"* %39) #16
  %457 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %457) #16
  %458 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %459 = load %"class.gl::State"*, %"class.gl::State"** %66, align 8
  %460 = call { i64, i64 } @_ZN2rx17ClipRectToScissorERKN2gl5StateERKNS0_9RectangleEb(%"class.gl::State"* dereferenceable(12296) %459, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %439, i1 zeroext false) #16
  %461 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  %462 = extractvalue { i64, i64 } %460, 0
  store i64 %462, i64* %461, align 8
  %463 = extractvalue { i64, i64 } %460, 1
  store i64 %463, i64* %458, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %437, i8 0, i64 16, i1 false) #16
  %464 = call i32 @_ZNK2rx9ContextVk26getRotationDrawFramebufferEv(%"class.rx::ContextVk"* %39) #16
  %465 = load i32, i32* %443, align 8
  %466 = load i32, i32* %444, align 4
  call void @_ZN2rx15RotateRectangleENS_15SurfaceRotationEbiiRKN2gl9RectangleEPS2_(i32 %464, i1 zeroext %456, i32 %465, i32 %466, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %440, %"struct.gl::Rectangle"* nonnull %438) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %457) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %441) #16
  %467 = load <2 x i64>, <2 x i64>* %8, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %437)
  store <2 x i64> %467, <2 x i64>* %26, align 16
  %468 = call zeroext i1 @_ZN2gl13ClipRectangleERKNS_9RectangleES2_PS0_(%"struct.gl::Rectangle"* nonnull dereferenceable(16) %27, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %24, %"struct.gl::Rectangle"* nonnull %25) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %436) #16
  br i1 %468, label %469, label %1058

469:                                              ; preds = %431
  %470 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %25, i64 0, i32 0
  %471 = load i32, i32* %470, align 4
  %472 = load i32, i32* %110, align 8
  %473 = icmp eq i32 %471, %472
  br i1 %473, label %476, label %474

474:                                              ; preds = %469
  %475 = load i32, i32* %111, align 4
  br label %488

476:                                              ; preds = %469
  %477 = load i32, i32* %433, align 4
  %478 = load i32, i32* %111, align 4
  %479 = icmp eq i32 %477, %478
  br i1 %479, label %480, label %488

480:                                              ; preds = %476
  %481 = load i32, i32* %434, align 4
  %482 = load i32, i32* %112, align 8
  %483 = icmp eq i32 %481, %482
  br i1 %483, label %484, label %488

484:                                              ; preds = %480
  %485 = load i32, i32* %435, align 4
  %486 = load i32, i32* %113, align 4
  %487 = icmp eq i32 %485, %486
  br label %488

488:                                              ; preds = %474, %476, %480, %484
  %489 = phi i32 [ %477, %480 ], [ %478, %476 ], [ %475, %474 ], [ %477, %484 ]
  %490 = phi i1 [ false, %480 ], [ false, %476 ], [ false, %474 ], [ %487, %484 ]
  %491 = fcmp oeq double %158, 1.000000e+00
  %492 = and i1 %491, %490
  %493 = fcmp oeq double %165, 1.000000e+00
  %494 = and i1 %493, %492
  %495 = or i8 %417, %416
  %496 = icmp eq i8 %495, 0
  %497 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %41, align 8
  %498 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %497, i64 0, i32 7, i32 35, i32 4
  %499 = load i8, i8* %498, align 8, !range !8
  %500 = icmp ne i8 %499, 0
  %501 = bitcast %"struct.gl::Rectangle"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %501)
  %502 = load i32, i32* %104, align 16
  %503 = load i32, i32* %105, align 4
  %504 = load i32, i32* %106, align 8
  %505 = icmp slt i32 %504, 0
  %506 = sub nsw i32 0, %504
  %507 = select i1 %505, i32 %506, i32 %504
  %508 = load i32, i32* %107, align 4
  %509 = icmp slt i32 %508, 0
  %510 = sub nsw i32 0, %508
  %511 = select i1 %509, i32 %510, i32 %508
  %512 = fptrunc double %157 to float
  %513 = call float @llvm.fabs.f32(float %512)
  %514 = fptrunc double %164 to float
  %515 = call float @llvm.fabs.f32(float %514)
  %516 = load i32, i32* %117, align 8
  %517 = load i32, i32* %118, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %501, i8* nonnull align 4 %432, i64 16, i1 false)
  %518 = icmp eq i32 %5, 9729
  %519 = zext i1 %518 to i8
  br i1 %74, label %520, label %797

520:                                              ; preds = %488
  %521 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %72, i64 0, i32 5, i32 0
  %522 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %521, align 8
  %523 = bitcast %"struct.rx::UtilsVk::BlitResolveParameters"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %523) #16
  %524 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %29, i64 0, i32 0, i64 0
  store i32 %502, i32* %524, align 4
  %525 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %29, i64 0, i32 0, i64 1
  store i32 %503, i32* %525, align 4
  %526 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %29, i64 0, i32 1, i64 0
  store i32 %472, i32* %526, align 4
  %527 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %29, i64 0, i32 1, i64 1
  store i32 %489, i32* %527, align 4
  %528 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %29, i64 0, i32 2, i64 0
  store i32 %507, i32* %528, align 4
  %529 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %29, i64 0, i32 2, i64 1
  store i32 %511, i32* %529, align 4
  %530 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %29, i64 0, i32 3, i64 0
  store float %513, float* %530, align 4
  %531 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %29, i64 0, i32 3, i64 1
  store float %515, float* %531, align 4
  %532 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %29, i64 0, i32 4, i64 0
  store i32 %516, i32* %532, align 4
  %533 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %29, i64 0, i32 4, i64 1
  store i32 %517, i32* %533, align 4
  %534 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %29, i64 0, i32 5
  %535 = bitcast %"struct.gl::Rectangle"* %534 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %535, i8* nonnull align 8 %501, i64 16, i1 false)
  %536 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %29, i64 0, i32 6
  store i32 -1431655766, i32* %536, align 4
  %537 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %29, i64 0, i32 7
  store i8 %519, i8* %537, align 4
  %538 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %29, i64 0, i32 8
  store i8 %416, i8* %538, align 1
  %539 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %29, i64 0, i32 9
  store i8 %417, i8* %539, align 2
  %540 = getelementptr inbounds i8, i8* %523, i64 63
  store i8 -86, i8* %540, align 1
  %541 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %29, i64 0, i32 10
  store i32 %178, i32* %541, align 4
  %542 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %522, i64 0, i32 6
  %543 = load i32, i32* %542, align 4
  store i32 %543, i32* %536, align 4
  %544 = xor i1 %87, true
  %545 = and i1 %494, %544
  %546 = xor i1 %500, true
  %547 = or i1 %496, %546
  %548 = and i1 %545, %547
  br i1 %548, label %549, label %556

549:                                              ; preds = %520
  %550 = call dereferenceable(64) %"struct.rx::vk::Format"* @_ZNK2rx14RenderTargetVk14getImageFormatEv(%"class.rx::RenderTargetVk"* %522) #16
  %551 = getelementptr inbounds %"struct.rx::vk::Format", %"struct.rx::vk::Format"* %550, i64 0, i32 2
  %552 = load i32, i32* %551, align 8
  %553 = call zeroext i1 @_ZNK2rx10RendererVk25hasImageFormatFeatureBitsEN5angle8FormatIDEj(%"class.rx::RendererVk"* %42, i32 %552, i32 1024) #16
  %554 = icmp eq i32 %178, 0
  %555 = and i1 %554, %553
  br label %556

556:                                              ; preds = %549, %520
  %557 = phi i1 [ false, %520 ], [ %555, %549 ]
  %558 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10, i32 0
  %559 = load i32, i32* %558, align 4
  %560 = trunc i32 %559 to i16
  %561 = icmp slt i16 %560, 0
  %562 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %133, align 8
  %563 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %562, i64 0, i32 9, i32 0
  %564 = load i8, i8* %563, align 1, !noalias !59
  %565 = icmp eq i8 %564, 0
  br i1 %565, label %572, label %576

566:                                              ; preds = %625
  %567 = getelementptr inbounds %"struct.rx::vk::Format", %"struct.rx::vk::Format"* %629, i64 0, i32 2
  %568 = load i32, i32* %567, align 8
  %569 = getelementptr inbounds %"struct.rx::vk::Format", %"struct.rx::vk::Format"* %628, i64 0, i32 2
  %570 = load i32, i32* %569, align 8
  %571 = icmp eq i32 %570, %568
  br label %572

572:                                              ; preds = %556, %566
  %573 = phi i1 [ %591, %566 ], [ %557, %556 ]
  %574 = phi i8 [ %627, %566 ], [ 1, %556 ]
  %575 = phi i1 [ %571, %566 ], [ true, %556 ]
  br i1 %87, label %635, label %659

576:                                              ; preds = %556, %625
  %577 = phi i8 [ %633, %625 ], [ %564, %556 ]
  %578 = phi i8 [ %627, %625 ], [ 1, %556 ]
  %579 = phi i1 [ %591, %625 ], [ %557, %556 ]
  %580 = zext i8 %577 to i32
  %581 = call i32 @llvm.cttz.i32(i32 %580, i1 true) #16, !range !2
  %582 = zext i32 %581 to i64
  %583 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 1, i32 0, i64 %582
  %584 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %583, align 8
  br i1 %579, label %585, label %590

585:                                              ; preds = %576
  %586 = call dereferenceable(64) %"struct.rx::vk::Format"* @_ZNK2rx14RenderTargetVk14getImageFormatEv(%"class.rx::RenderTargetVk"* %584) #16
  %587 = getelementptr inbounds %"struct.rx::vk::Format", %"struct.rx::vk::Format"* %586, i64 0, i32 2
  %588 = load i32, i32* %587, align 8
  %589 = call zeroext i1 @_ZNK2rx10RendererVk25hasImageFormatFeatureBitsEN5angle8FormatIDEj(%"class.rx::RendererVk"* %42, i32 %588, i32 2048) #16
  br label %590

590:                                              ; preds = %585, %576
  %591 = phi i1 [ false, %576 ], [ %589, %585 ]
  %592 = icmp eq i8 %578, 0
  br i1 %592, label %625, label %593

593:                                              ; preds = %590
  %594 = call dereferenceable(64) %"struct.rx::vk::Format"* @_ZNK2rx14RenderTargetVk14getImageFormatEv(%"class.rx::RenderTargetVk"* %522) #16
  %595 = getelementptr inbounds %"struct.rx::vk::Format", %"struct.rx::vk::Format"* %594, i64 0, i32 0
  %596 = load i32, i32* %595, align 8
  %597 = sext i32 %596 to i64
  %598 = call dereferenceable(64) %"struct.rx::vk::Format"* @_ZNK2rx14RenderTargetVk14getImageFormatEv(%"class.rx::RenderTargetVk"* %584) #16
  %599 = getelementptr inbounds %"struct.rx::vk::Format", %"struct.rx::vk::Format"* %598, i64 0, i32 0
  %600 = load i32, i32* %599, align 8
  %601 = sext i32 %600 to i64
  %602 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %601, i32 9
  %603 = load i32, i32* %602, align 8
  %604 = icmp eq i32 %603, 0
  br i1 %604, label %605, label %609

605:                                              ; preds = %593
  %606 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %597, i32 9
  %607 = load i32, i32* %606, align 8
  %608 = icmp eq i32 %607, 0
  br i1 %608, label %609, label %625

609:                                              ; preds = %605, %593
  %610 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %601, i32 10
  %611 = load i32, i32* %610, align 4
  %612 = icmp eq i32 %611, 0
  br i1 %612, label %613, label %617

613:                                              ; preds = %609
  %614 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %597, i32 10
  %615 = load i32, i32* %614, align 4
  %616 = icmp eq i32 %615, 0
  br i1 %616, label %617, label %625

617:                                              ; preds = %613, %609
  %618 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %601, i32 11
  %619 = load i32, i32* %618, align 8
  %620 = icmp eq i32 %619, 0
  br i1 %620, label %621, label %625

621:                                              ; preds = %617
  %622 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %597, i32 11
  %623 = load i32, i32* %622, align 8
  %624 = icmp eq i32 %623, 0
  br label %625

625:                                              ; preds = %621, %617, %613, %605, %590
  %626 = phi i1 [ false, %590 ], [ false, %613 ], [ false, %605 ], [ true, %617 ], [ %624, %621 ]
  %627 = zext i1 %626 to i8
  %628 = call dereferenceable(64) %"struct.rx::vk::Format"* @_ZNK2rx14RenderTargetVk14getImageFormatEv(%"class.rx::RenderTargetVk"* %522) #16
  %629 = call dereferenceable(64) %"struct.rx::vk::Format"* @_ZNK2rx14RenderTargetVk14getImageFormatEv(%"class.rx::RenderTargetVk"* %584) #16
  %630 = shl i32 1, %581
  %631 = trunc i32 %630 to i8
  %632 = xor i8 %631, -1
  %633 = and i8 %577, %632
  %634 = icmp eq i8 %633, 0
  br i1 %634, label %566, label %576

635:                                              ; preds = %572
  %636 = load i32, i32* %104, align 16
  store i32 %636, i32* %524, align 4
  %637 = load i32, i32* %105, align 4
  store i32 %637, i32* %525, align 4
  %638 = load i32, i32* %110, align 8
  store i32 %638, i32* %526, align 4
  %639 = load i32, i32* %111, align 4
  store i32 %639, i32* %527, align 4
  %640 = load i32, i32* %106, align 8
  %641 = icmp slt i32 %640, 0
  br i1 %641, label %642, label %644

642:                                              ; preds = %635
  %643 = add nsw i32 %636, -1
  store i32 %643, i32* %524, align 4
  br label %644

644:                                              ; preds = %642, %635
  %645 = load i32, i32* %107, align 4
  %646 = icmp slt i32 %645, 0
  br i1 %646, label %647, label %649

647:                                              ; preds = %644
  %648 = add nsw i32 %637, -1
  store i32 %648, i32* %525, align 4
  br label %649

649:                                              ; preds = %647, %644
  %650 = load i32, i32* %112, align 8
  %651 = icmp slt i32 %650, 0
  br i1 %651, label %652, label %654

652:                                              ; preds = %649
  %653 = add nsw i32 %638, -1
  store i32 %653, i32* %526, align 4
  br label %654

654:                                              ; preds = %652, %649
  %655 = load i32, i32* %113, align 4
  %656 = icmp slt i32 %655, 0
  br i1 %656, label %657, label %659

657:                                              ; preds = %654
  %658 = add nsw i32 %639, -1
  store i32 %658, i32* %527, align 4
  br label %659

659:                                              ; preds = %657, %654, %572
  switch i32 %178, label %699 [
    i32 3, label %681
    i32 1, label %660
    i32 2, label %676
  ]

660:                                              ; preds = %659
  %661 = load i32, i32* %524, align 4
  %662 = load i32, i32* %525, align 4
  store i32 %662, i32* %524, align 4
  store i32 %661, i32* %525, align 4
  %663 = bitcast i32* %528 to <4 x i32>*
  %664 = load <4 x i32>, <4 x i32>* %663, align 4
  %665 = shufflevector <4 x i32> %664, <4 x i32> undef, <4 x i32> <i32 1, i32 0, i32 3, i32 2>
  %666 = bitcast i32* %528 to <4 x i32>*
  store <4 x i32> %665, <4 x i32>* %666, align 4
  %667 = load i8, i8* %538, align 1, !range !8
  %668 = load i8, i8* %539, align 2, !range !8
  store i8 %668, i8* %538, align 1
  store i8 %667, i8* %539, align 2
  br i1 %418, label %669, label %699

669:                                              ; preds = %660
  %670 = bitcast float* %531 to i32*
  %671 = bitcast float* %530 to i32*
  %672 = load i32, i32* %526, align 4
  %673 = load i32, i32* %527, align 4
  store i32 %673, i32* %526, align 4
  store i32 %672, i32* %527, align 4
  %674 = extractelement <4 x i32> %664, i32 2
  store i32 %674, i32* %671, align 4
  %675 = extractelement <4 x i32> %664, i32 3
  store i32 %675, i32* %670, align 4
  br label %699

676:                                              ; preds = %659
  %677 = load i8, i8* %538, align 1, !range !8
  %678 = xor i8 %677, 1
  store i8 %678, i8* %538, align 1
  %679 = load i8, i8* %539, align 2, !range !8
  %680 = xor i8 %679, 1
  store i8 %680, i8* %539, align 2
  br label %699

681:                                              ; preds = %659
  %682 = load i32, i32* %524, align 4
  %683 = load i32, i32* %525, align 4
  store i32 %683, i32* %524, align 4
  store i32 %682, i32* %525, align 4
  %684 = bitcast i32* %528 to <4 x i32>*
  %685 = load <4 x i32>, <4 x i32>* %684, align 4
  %686 = shufflevector <4 x i32> %685, <4 x i32> undef, <4 x i32> <i32 1, i32 0, i32 3, i32 2>
  %687 = bitcast i32* %528 to <4 x i32>*
  store <4 x i32> %686, <4 x i32>* %687, align 4
  %688 = icmp eq i32 %166, 3
  br i1 %688, label %689, label %694

689:                                              ; preds = %681
  %690 = bitcast float* %531 to i32*
  %691 = bitcast float* %530 to i32*
  %692 = extractelement <4 x i32> %685, i32 2
  store i32 %692, i32* %691, align 4
  %693 = extractelement <4 x i32> %685, i32 3
  store i32 %693, i32* %690, align 4
  br label %694

694:                                              ; preds = %689, %681
  %695 = load i8, i8* %538, align 1, !range !8
  %696 = xor i8 %695, 1
  %697 = load i8, i8* %539, align 2, !range !8
  %698 = xor i8 %697, 1
  store i8 %698, i8* %538, align 1
  store i8 %696, i8* %539, align 2
  br label %699

699:                                              ; preds = %659, %660, %669, %676, %694
  %700 = xor i1 %573, true
  %701 = icmp eq i8 %574, 0
  %702 = or i1 %701, %700
  %703 = or i1 %561, %702
  br i1 %703, label %733, label %704

704:                                              ; preds = %699
  %705 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %133, align 8
  %706 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %705, i64 0, i32 9, i32 0
  %707 = load i8, i8* %706, align 1, !noalias !62
  %708 = icmp eq i8 %707, 0
  br i1 %708, label %795, label %709

709:                                              ; preds = %704
  %710 = zext i8 %707 to i32
  %711 = call i32 @llvm.cttz.i32(i32 %710, i1 true) #16, !range !2
  %712 = zext i32 %711 to i64
  %713 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 1, i32 0, i64 %712
  %714 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %713, align 8
  %715 = call i32 @_ZN2rx13FramebufferVk15blitWithCommandEPNS_9ContextVkERKN2gl9RectangleES6_PNS_14RenderTargetVkES8_jbbbbb(%"class.rx::FramebufferVk"* undef, %"class.rx::ContextVk"* %39, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %17, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %18, %"class.rx::RenderTargetVk"* %522, %"class.rx::RenderTargetVk"* %714, i32 %5, i1 zeroext undef, i1 zeroext false, i1 zeroext false, i1 zeroext undef, i1 zeroext undef)
  %716 = icmp eq i32 %715, 1
  br i1 %716, label %1053, label %717

717:                                              ; preds = %709, %725
  %718 = phi i32 [ %727, %725 ], [ %711, %709 ]
  %719 = phi i8 [ %723, %725 ], [ %707, %709 ]
  %720 = shl i32 1, %718
  %721 = trunc i32 %720 to i8
  %722 = xor i8 %721, -1
  %723 = and i8 %719, %722
  %724 = icmp eq i8 %723, 0
  br i1 %724, label %795, label %725

725:                                              ; preds = %717
  %726 = zext i8 %723 to i32
  %727 = call i32 @llvm.cttz.i32(i32 %726, i1 true) #16, !range !2
  %728 = zext i32 %727 to i64
  %729 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 1, i32 0, i64 %728
  %730 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %729, align 8
  %731 = call i32 @_ZN2rx13FramebufferVk15blitWithCommandEPNS_9ContextVkERKN2gl9RectangleES6_PNS_14RenderTargetVkES8_jbbbbb(%"class.rx::FramebufferVk"* undef, %"class.rx::ContextVk"* %39, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %17, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %18, %"class.rx::RenderTargetVk"* %522, %"class.rx::RenderTargetVk"* %730, i32 %5, i1 zeroext undef, i1 zeroext false, i1 zeroext false, i1 zeroext undef, i1 zeroext undef)
  %732 = icmp eq i32 %731, 1
  br i1 %732, label %1053, label %717

733:                                              ; preds = %699
  %734 = and i1 %87, %496
  %735 = xor i1 %734, true
  %736 = or i1 %701, %735
  br i1 %736, label %785, label %737

737:                                              ; preds = %733
  %738 = icmp eq i32 %178, 0
  %739 = and i1 %738, %575
  %740 = xor i1 %739, true
  %741 = or i1 %561, %740
  br i1 %741, label %785, label %742

742:                                              ; preds = %737
  %743 = bitcast %"class.rx::vk::Framebuffer"** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %743) #16
  store %"class.rx::vk::Framebuffer"* null, %"class.rx::vk::Framebuffer"** %30, align 8
  %744 = call i32 @_ZN2rx13FramebufferVk14getFramebufferEPNS_9ContextVkEPPNS_2vk11FramebufferEPKNS3_9ImageViewE(%"class.rx::FramebufferVk"* %72, %"class.rx::ContextVk"* %39, %"class.rx::vk::Framebuffer"** nonnull %30, %"class.rx::vk::ImageView"* null)
  %745 = icmp eq i32 %744, 1
  %746 = select i1 %745, i32 1, i32 %65, !prof !4
  br i1 %745, label %783, label %747

747:                                              ; preds = %742
  %748 = load %"class.rx::vk::Framebuffer"*, %"class.rx::vk::Framebuffer"** %30, align 8
  call void @_ZN2rx9ContextVk25restoreFinishedRenderPassEPNS_2vk11FramebufferE(%"class.rx::ContextVk"* %39, %"class.rx::vk::Framebuffer"* %748) #16
  %749 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %133, align 8
  %750 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %749, i64 0, i32 9, i32 0
  %751 = load i8, i8* %750, align 1, !noalias !65
  %752 = zext i8 %751 to i32
  %753 = call i32 @llvm.ctpop.i32(i32 %752) #16, !range !2
  %754 = icmp eq i32 %753, 1
  br i1 %754, label %755, label %779

755:                                              ; preds = %747
  %756 = load i32, i32* %558, align 4
  %757 = and i32 %756, 32704
  %758 = icmp eq i32 %757, 64
  br i1 %758, label %759, label %779

759:                                              ; preds = %755
  %760 = load %"class.rx::vk::Framebuffer"*, %"class.rx::vk::Framebuffer"** %30, align 8
  %761 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %39, i64 0, i32 5
  %762 = load %"class.rx::vk::priv::SecondaryCommandBuffer"*, %"class.rx::vk::priv::SecondaryCommandBuffer"** %761, align 8
  %763 = icmp eq %"class.rx::vk::priv::SecondaryCommandBuffer"* %762, null
  br i1 %763, label %779, label %764

764:                                              ; preds = %759
  %765 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %39, i64 0, i32 54
  %766 = load %"class.rx::vk::CommandBufferHelper"*, %"class.rx::vk::CommandBufferHelper"** %765, align 8
  %767 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %766, i64 0, i32 11
  %768 = load i8, i8* %767, align 8, !range !8
  %769 = icmp eq i8 %768, 0
  br i1 %769, label %779, label %770

770:                                              ; preds = %764
  %771 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %766, i64 0, i32 8, i32 0, i32 0
  %772 = load %struct.VkFramebuffer_T*, %struct.VkFramebuffer_T** %771, align 8
  %773 = getelementptr inbounds %"class.rx::vk::Framebuffer", %"class.rx::vk::Framebuffer"* %760, i64 0, i32 0, i32 0
  %774 = load %struct.VkFramebuffer_T*, %struct.VkFramebuffer_T** %773, align 8
  %775 = icmp eq %struct.VkFramebuffer_T* %772, %774
  br i1 %775, label %776, label %779

776:                                              ; preds = %770
  %777 = call i32 @_ZN2rx13FramebufferVk23resolveColorWithSubpassEPNS_9ContextVkERKNS_7UtilsVk21BlitResolveParametersE(%"class.rx::FramebufferVk"* %0, %"class.rx::ContextVk"* %39, %"struct.rx::UtilsVk::BlitResolveParameters"* dereferenceable(68) undef)
  %778 = icmp eq i32 %777, 1
  br i1 %778, label %783, label %784

779:                                              ; preds = %759, %764, %747, %755, %770
  %780 = call dereferenceable(440) %"class.rx::vk::ImageHelper"* @_ZNK2rx14RenderTargetVk15getImageForCopyEv(%"class.rx::RenderTargetVk"* %522) #16
  %781 = call i32 @_ZN2rx13FramebufferVk23resolveColorWithCommandEPNS_9ContextVkERKNS_7UtilsVk21BlitResolveParametersEPNS_2vk11ImageHelperE(%"class.rx::FramebufferVk"* %0, %"class.rx::ContextVk"* %39, %"struct.rx::UtilsVk::BlitResolveParameters"* nonnull dereferenceable(68) %29, %"class.rx::vk::ImageHelper"* %780)
  %782 = icmp eq i32 %781, 1
  br i1 %782, label %783, label %784

783:                                              ; preds = %776, %779, %742
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %743) #16
  br label %1053

784:                                              ; preds = %776, %779
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %743) #16
  br label %795

785:                                              ; preds = %737, %733
  %786 = bitcast %"class.rx::vk::ImageView"** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %786) #16
  store %"class.rx::vk::ImageView"* null, %"class.rx::vk::ImageView"** %31, align 8
  %787 = call i32 @_ZNK2rx14RenderTargetVk25getAndRetainCopyImageViewEPNS_9ContextVkEPPKNS_2vk9ImageViewE(%"class.rx::RenderTargetVk"* %522, %"class.rx::ContextVk"* %39, %"class.rx::vk::ImageView"** nonnull %31) #16
  %788 = icmp eq i32 %787, 1
  br i1 %788, label %789, label %790

789:                                              ; preds = %785
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %786) #16
  br label %1053

790:                                              ; preds = %785
  %791 = call dereferenceable(440) %"class.rx::vk::ImageHelper"* @_ZNK2rx14RenderTargetVk15getImageForCopyEv(%"class.rx::RenderTargetVk"* %522) #16
  %792 = load %"class.rx::vk::ImageView"*, %"class.rx::vk::ImageView"** %31, align 8
  %793 = call i32 @_ZN2rx7UtilsVk16colorBlitResolveEPNS_9ContextVkEPNS_13FramebufferVkEPNS_2vk11ImageHelperEPKNS5_9ImageViewERKNS0_21BlitResolveParametersE(%"class.rx::UtilsVk"* %43, %"class.rx::ContextVk"* %39, %"class.rx::FramebufferVk"* %0, %"class.rx::vk::ImageHelper"* %791, %"class.rx::vk::ImageView"* %792, %"struct.rx::UtilsVk::BlitResolveParameters"* nonnull dereferenceable(68) %29) #16
  %794 = icmp eq i32 %793, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %786) #16
  br i1 %794, label %1053, label %795

795:                                              ; preds = %717, %704, %790, %784
  %796 = phi i32 [ %65, %790 ], [ %746, %784 ], [ %65, %704 ], [ %65, %717 ]
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %523) #16
  br label %797

797:                                              ; preds = %795, %488
  %798 = phi i32 [ %796, %795 ], [ %65, %488 ]
  br i1 %89, label %799, label %1056

799:                                              ; preds = %797
  %800 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %72, i64 0, i32 5, i32 2
  %801 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %800, align 8
  %802 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 2
  %803 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %802, align 8
  %804 = bitcast %"struct.rx::UtilsVk::BlitResolveParameters"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %804) #16
  %805 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %32, i64 0, i32 0, i64 0
  store i32 %502, i32* %805, align 4
  %806 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %32, i64 0, i32 0, i64 1
  store i32 %503, i32* %806, align 4
  %807 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %32, i64 0, i32 1, i64 0
  store i32 %472, i32* %807, align 4
  %808 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %32, i64 0, i32 1, i64 1
  store i32 %489, i32* %808, align 4
  %809 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %32, i64 0, i32 2, i64 0
  store i32 %507, i32* %809, align 4
  %810 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %32, i64 0, i32 2, i64 1
  store i32 %511, i32* %810, align 4
  %811 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %32, i64 0, i32 3, i64 0
  store float %513, float* %811, align 4
  %812 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %32, i64 0, i32 3, i64 1
  store float %515, float* %812, align 4
  %813 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %32, i64 0, i32 4, i64 0
  store i32 %516, i32* %813, align 4
  %814 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %32, i64 0, i32 4, i64 1
  store i32 %517, i32* %814, align 4
  %815 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %32, i64 0, i32 5
  %816 = bitcast %"struct.gl::Rectangle"* %815 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %816, i8* nonnull align 8 %501, i64 16, i1 false)
  %817 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %32, i64 0, i32 6
  store i32 -1431655766, i32* %817, align 4
  %818 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %32, i64 0, i32 7
  store i8 %519, i8* %818, align 4
  %819 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %32, i64 0, i32 8
  store i8 %416, i8* %819, align 1
  %820 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %32, i64 0, i32 9
  store i8 %417, i8* %820, align 2
  %821 = getelementptr inbounds i8, i8* %804, i64 63
  store i8 -86, i8* %821, align 1
  %822 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %32, i64 0, i32 10
  store i32 %178, i32* %822, align 4
  %823 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %801, i64 0, i32 6
  %824 = load i32, i32* %823, align 4
  store i32 %824, i32* %817, align 4
  %825 = xor i1 %98, true
  %826 = and i1 %494, %825
  %827 = xor i1 %500, true
  %828 = or i1 %496, %827
  %829 = and i1 %826, %828
  br i1 %829, label %830, label %842

830:                                              ; preds = %799
  %831 = call dereferenceable(64) %"struct.rx::vk::Format"* @_ZNK2rx14RenderTargetVk14getImageFormatEv(%"class.rx::RenderTargetVk"* %801) #16
  %832 = getelementptr inbounds %"struct.rx::vk::Format", %"struct.rx::vk::Format"* %831, i64 0, i32 2
  %833 = load i32, i32* %832, align 8
  %834 = call zeroext i1 @_ZNK2rx10RendererVk25hasImageFormatFeatureBitsEN5angle8FormatIDEj(%"class.rx::RendererVk"* %42, i32 %833, i32 1024) #16
  br i1 %834, label %835, label %842

835:                                              ; preds = %830
  %836 = call dereferenceable(64) %"struct.rx::vk::Format"* @_ZNK2rx14RenderTargetVk14getImageFormatEv(%"class.rx::RenderTargetVk"* %803) #16
  %837 = getelementptr inbounds %"struct.rx::vk::Format", %"struct.rx::vk::Format"* %836, i64 0, i32 2
  %838 = load i32, i32* %837, align 8
  %839 = call zeroext i1 @_ZNK2rx10RendererVk25hasImageFormatFeatureBitsEN5angle8FormatIDEj(%"class.rx::RendererVk"* %42, i32 %838, i32 2048) #16
  %840 = icmp eq i32 %178, 0
  %841 = and i1 %840, %839
  br label %842

842:                                              ; preds = %835, %799, %830
  %843 = phi i1 [ false, %830 ], [ false, %799 ], [ %841, %835 ]
  %844 = call dereferenceable(64) %"struct.rx::vk::Format"* @_ZNK2rx14RenderTargetVk14getImageFormatEv(%"class.rx::RenderTargetVk"* %801) #16
  %845 = getelementptr inbounds %"struct.rx::vk::Format", %"struct.rx::vk::Format"* %844, i64 0, i32 0
  %846 = load i32, i32* %845, align 8
  %847 = sext i32 %846 to i64
  %848 = call dereferenceable(64) %"struct.rx::vk::Format"* @_ZNK2rx14RenderTargetVk14getImageFormatEv(%"class.rx::RenderTargetVk"* %803) #16
  %849 = getelementptr inbounds %"struct.rx::vk::Format", %"struct.rx::vk::Format"* %848, i64 0, i32 0
  %850 = load i32, i32* %849, align 8
  %851 = sext i32 %850 to i64
  %852 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %851, i32 13
  %853 = load i32, i32* %852, align 8
  %854 = icmp eq i32 %853, 0
  br i1 %854, label %855, label %859

855:                                              ; preds = %842
  %856 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %847, i32 13
  %857 = load i32, i32* %856, align 8
  %858 = icmp eq i32 %857, 0
  br i1 %858, label %859, label %873

859:                                              ; preds = %855, %842
  %860 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %851, i32 14
  %861 = load i32, i32* %860, align 4
  %862 = icmp eq i32 %861, 0
  br i1 %862, label %863, label %867

863:                                              ; preds = %859
  %864 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %847, i32 14
  %865 = load i32, i32* %864, align 4
  %866 = icmp eq i32 %865, 0
  br label %867

867:                                              ; preds = %859, %863
  %868 = phi i1 [ true, %859 ], [ %866, %863 ]
  %869 = and i1 %843, %868
  br i1 %869, label %870, label %873

870:                                              ; preds = %867
  %871 = call i32 @_ZN2rx13FramebufferVk15blitWithCommandEPNS_9ContextVkERKN2gl9RectangleES6_PNS_14RenderTargetVkES8_jbbbbb(%"class.rx::FramebufferVk"* undef, %"class.rx::ContextVk"* %39, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %17, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %18, %"class.rx::RenderTargetVk"* %801, %"class.rx::RenderTargetVk"* %803, i32 %5, i1 zeroext undef, i1 zeroext %76, i1 zeroext %78, i1 zeroext undef, i1 zeroext undef)
  %872 = icmp eq i32 %871, 1
  br i1 %872, label %1053, label %1052

873:                                              ; preds = %867, %855
  br i1 %98, label %874, label %898

874:                                              ; preds = %873
  %875 = load i32, i32* %104, align 16
  store i32 %875, i32* %805, align 4
  %876 = load i32, i32* %105, align 4
  store i32 %876, i32* %806, align 4
  %877 = load i32, i32* %110, align 8
  store i32 %877, i32* %807, align 4
  %878 = load i32, i32* %111, align 4
  store i32 %878, i32* %808, align 4
  %879 = load i32, i32* %106, align 8
  %880 = icmp slt i32 %879, 0
  br i1 %880, label %881, label %883

881:                                              ; preds = %874
  %882 = add nsw i32 %875, -1
  store i32 %882, i32* %805, align 4
  br label %883

883:                                              ; preds = %881, %874
  %884 = load i32, i32* %107, align 4
  %885 = icmp slt i32 %884, 0
  br i1 %885, label %886, label %888

886:                                              ; preds = %883
  %887 = add nsw i32 %876, -1
  store i32 %887, i32* %806, align 4
  br label %888

888:                                              ; preds = %886, %883
  %889 = load i32, i32* %112, align 8
  %890 = icmp slt i32 %889, 0
  br i1 %890, label %891, label %893

891:                                              ; preds = %888
  %892 = add nsw i32 %877, -1
  store i32 %892, i32* %807, align 4
  br label %893

893:                                              ; preds = %891, %888
  %894 = load i32, i32* %113, align 4
  %895 = icmp slt i32 %894, 0
  br i1 %895, label %896, label %898

896:                                              ; preds = %893
  %897 = add nsw i32 %878, -1
  store i32 %897, i32* %808, align 4
  br label %898

898:                                              ; preds = %896, %893, %873
  switch i32 %178, label %938 [
    i32 3, label %920
    i32 1, label %899
    i32 2, label %915
  ]

899:                                              ; preds = %898
  %900 = load i32, i32* %805, align 4
  %901 = load i32, i32* %806, align 4
  store i32 %901, i32* %805, align 4
  store i32 %900, i32* %806, align 4
  %902 = bitcast i32* %809 to <4 x i32>*
  %903 = load <4 x i32>, <4 x i32>* %902, align 4
  %904 = shufflevector <4 x i32> %903, <4 x i32> undef, <4 x i32> <i32 1, i32 0, i32 3, i32 2>
  %905 = bitcast i32* %809 to <4 x i32>*
  store <4 x i32> %904, <4 x i32>* %905, align 4
  %906 = load i8, i8* %819, align 1, !range !8
  %907 = load i8, i8* %820, align 2, !range !8
  store i8 %907, i8* %819, align 1
  store i8 %906, i8* %820, align 2
  br i1 %418, label %908, label %938

908:                                              ; preds = %899
  %909 = bitcast float* %812 to i32*
  %910 = bitcast float* %811 to i32*
  %911 = load i32, i32* %807, align 4
  %912 = load i32, i32* %808, align 4
  store i32 %912, i32* %807, align 4
  store i32 %911, i32* %808, align 4
  %913 = extractelement <4 x i32> %903, i32 2
  store i32 %913, i32* %910, align 4
  %914 = extractelement <4 x i32> %903, i32 3
  store i32 %914, i32* %909, align 4
  br label %938

915:                                              ; preds = %898
  %916 = load i8, i8* %819, align 1, !range !8
  %917 = xor i8 %916, 1
  store i8 %917, i8* %819, align 1
  %918 = load i8, i8* %820, align 2, !range !8
  %919 = xor i8 %918, 1
  store i8 %919, i8* %820, align 2
  br label %938

920:                                              ; preds = %898
  %921 = load i32, i32* %805, align 4
  %922 = load i32, i32* %806, align 4
  store i32 %922, i32* %805, align 4
  store i32 %921, i32* %806, align 4
  %923 = bitcast i32* %809 to <4 x i32>*
  %924 = load <4 x i32>, <4 x i32>* %923, align 4
  %925 = shufflevector <4 x i32> %924, <4 x i32> undef, <4 x i32> <i32 1, i32 0, i32 3, i32 2>
  %926 = bitcast i32* %809 to <4 x i32>*
  store <4 x i32> %925, <4 x i32>* %926, align 4
  %927 = icmp eq i32 %166, 3
  br i1 %927, label %928, label %933

928:                                              ; preds = %920
  %929 = bitcast float* %812 to i32*
  %930 = bitcast float* %811 to i32*
  %931 = extractelement <4 x i32> %924, i32 2
  store i32 %931, i32* %930, align 4
  %932 = extractelement <4 x i32> %924, i32 3
  store i32 %932, i32* %929, align 4
  br label %933

933:                                              ; preds = %928, %920
  %934 = load i8, i8* %819, align 1, !range !8
  %935 = xor i8 %934, 1
  %936 = load i8, i8* %820, align 2, !range !8
  %937 = xor i8 %936, 1
  store i8 %937, i8* %819, align 1
  store i8 %935, i8* %820, align 2
  br label %938

938:                                              ; preds = %898, %899, %908, %915, %933
  %939 = bitcast %"class.rx::vk::DeviceScoped"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %939) #16
  %940 = getelementptr inbounds %"class.rx::vk::DeviceScoped", %"class.rx::vk::DeviceScoped"* %33, i64 0, i32 0
  %941 = getelementptr inbounds %"class.rx::vk::DeviceScoped", %"class.rx::vk::DeviceScoped"* %33, i64 0, i32 1, i32 0, i32 0
  %942 = call %struct.VkDevice_T* @_ZNK2rx9ContextVk9getDeviceEv(%"class.rx::ContextVk"* %39) #16
  store %struct.VkDevice_T* %942, %struct.VkDevice_T** %940, align 8
  store %struct.VkImageView_T* null, %struct.VkImageView_T** %941, align 8
  %943 = bitcast %"class.rx::vk::DeviceScoped"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %943) #16
  %944 = getelementptr inbounds %"class.rx::vk::DeviceScoped", %"class.rx::vk::DeviceScoped"* %34, i64 0, i32 0
  %945 = getelementptr inbounds %"class.rx::vk::DeviceScoped", %"class.rx::vk::DeviceScoped"* %34, i64 0, i32 1, i32 0, i32 0
  %946 = call %struct.VkDevice_T* @_ZNK2rx9ContextVk9getDeviceEv(%"class.rx::ContextVk"* %39) #16
  store %struct.VkDevice_T* %946, %struct.VkDevice_T** %944, align 8
  store %struct.VkImageView_T* null, %struct.VkImageView_T** %945, align 8
  %947 = call dereferenceable(440) %"class.rx::vk::ImageHelper"* @_ZNK2rx14RenderTargetVk15getImageForCopyEv(%"class.rx::RenderTargetVk"* %801) #16
  %948 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %801, i64 0, i32 5, i32 0
  %949 = load i32, i32* %948, align 8
  %950 = call i32 @_ZNK2rx2vk11ImageHelper9toVkLevelEN2gl17LevelIndexWrapperIiEE(%"class.rx::vk::ImageHelper"* %947, i32 %949) #16
  %951 = load i32, i32* %823, align 4
  %952 = getelementptr inbounds %"class.rx::vk::ImageHelper", %"class.rx::vk::ImageHelper"* %947, i64 0, i32 23
  %953 = load i32, i32* %952, align 4
  %954 = getelementptr inbounds %"class.rx::vk::ImageHelper", %"class.rx::vk::ImageHelper"* %947, i64 0, i32 12
  %955 = load i32, i32* %954, align 8
  %956 = call zeroext i8 @_ZN2rx2vk16Get2DTextureTypeEji(i32 %953, i32 %955) #16
  br i1 %76, label %957, label %964

957:                                              ; preds = %938
  %958 = icmp eq %"class.rx::ContextVk"* %39, null
  %959 = select i1 %958, %"class.rx::vk::Context"* null, %"class.rx::vk::Context"* %40
  %960 = bitcast %"struct.gl::SwizzleState"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %960) #16
  call void @_ZN2gl12SwizzleStateC1Ev(%"struct.gl::SwizzleState"* nonnull %35) #16
  %961 = getelementptr inbounds %"class.rx::vk::DeviceScoped", %"class.rx::vk::DeviceScoped"* %33, i64 0, i32 1
  %962 = call i32 @_ZNK2rx2vk11ImageHelper18initLayerImageViewEPNS0_7ContextEN2gl11TextureTypeEjRKNS4_12SwizzleStateEPNS0_9ImageViewENS4_17LevelIndexWrapperIjEEjjjNS4_20SrgbWriteControlModeE(%"class.rx::vk::ImageHelper"* %947, %"class.rx::vk::Context"* %959, i8 zeroext %956, i32 2, %"struct.gl::SwizzleState"* nonnull dereferenceable(16) %35, %"class.rx::vk::ImageView"* %961, i32 %950, i32 1, i32 %951, i32 1, i32 0) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %960) #16
  %963 = icmp eq i32 %962, 1
  br i1 %963, label %1036, label %964

964:                                              ; preds = %957, %938
  br i1 %78, label %965, label %972

965:                                              ; preds = %964
  %966 = icmp eq %"class.rx::ContextVk"* %39, null
  %967 = select i1 %966, %"class.rx::vk::Context"* null, %"class.rx::vk::Context"* %40
  %968 = bitcast %"struct.gl::SwizzleState"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %968) #16
  call void @_ZN2gl12SwizzleStateC1Ev(%"struct.gl::SwizzleState"* nonnull %36) #16
  %969 = getelementptr inbounds %"class.rx::vk::DeviceScoped", %"class.rx::vk::DeviceScoped"* %34, i64 0, i32 1
  %970 = call i32 @_ZNK2rx2vk11ImageHelper18initLayerImageViewEPNS0_7ContextEN2gl11TextureTypeEjRKNS4_12SwizzleStateEPNS0_9ImageViewENS4_17LevelIndexWrapperIjEEjjjNS4_20SrgbWriteControlModeE(%"class.rx::vk::ImageHelper"* %947, %"class.rx::vk::Context"* %967, i8 zeroext %956, i32 4, %"struct.gl::SwizzleState"* nonnull dereferenceable(16) %36, %"class.rx::vk::ImageView"* %969, i32 %950, i32 1, i32 %951, i32 1, i32 0) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %968) #16
  %971 = icmp eq i32 %970, 1
  br i1 %971, label %1036, label %972

972:                                              ; preds = %965, %964
  %973 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %41, align 8
  %974 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %973, i64 0, i32 7, i32 24, i32 4
  %975 = load i8, i8* %974, align 8, !range !8
  %976 = icmp ne i8 %975, 0
  br i1 %76, label %979, label %977

977:                                              ; preds = %972
  %978 = and i1 %78, %976
  br i1 %978, label %982, label %989

979:                                              ; preds = %972
  %980 = getelementptr inbounds %"class.rx::vk::DeviceScoped", %"class.rx::vk::DeviceScoped"* %33, i64 0, i32 1
  %981 = and i1 %78, %976
  br label %982

982:                                              ; preds = %977, %979
  %983 = phi i1 [ true, %977 ], [ %981, %979 ]
  %984 = phi %"class.rx::vk::ImageView"* [ null, %977 ], [ %980, %979 ]
  %985 = getelementptr inbounds %"class.rx::vk::DeviceScoped", %"class.rx::vk::DeviceScoped"* %34, i64 0, i32 1
  %986 = select i1 %983, %"class.rx::vk::ImageView"* %985, %"class.rx::vk::ImageView"* null
  %987 = call i32 @_ZN2rx7UtilsVk23depthStencilBlitResolveEPNS_9ContextVkEPNS_13FramebufferVkEPNS_2vk11ImageHelperEPKNS5_9ImageViewESA_RKNS0_21BlitResolveParametersE(%"class.rx::UtilsVk"* %43, %"class.rx::ContextVk"* %39, %"class.rx::FramebufferVk"* %0, %"class.rx::vk::ImageHelper"* %947, %"class.rx::vk::ImageView"* %984, %"class.rx::vk::ImageView"* %986, %"struct.rx::UtilsVk::BlitResolveParameters"* nonnull dereferenceable(68) %32) #16
  %988 = icmp eq i32 %987, 1
  br i1 %988, label %1036, label %989

989:                                              ; preds = %982, %977
  %990 = xor i1 %78, true
  %991 = or i1 %976, %990
  br i1 %991, label %998, label %992

992:                                              ; preds = %989
  %993 = load %"class.gl::State"*, %"class.gl::State"** %66, align 8
  %994 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %993, i64 0, i32 91
  call void @_ZNK2gl5Debug17insertPerfWarningEjPKcPj(%"class.gl::Debug"* %994, i32 37192, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.5, i64 0, i64 0), i32* nonnull @_ZZN2rx13FramebufferVk4blitEPKN2gl7ContextERKNS1_9RectangleES7_jjE12sRepeatCount) #16
  %995 = getelementptr inbounds %"class.rx::vk::DeviceScoped", %"class.rx::vk::DeviceScoped"* %34, i64 0, i32 1
  %996 = call i32 @_ZN2rx7UtilsVk32stencilBlitResolveNoShaderExportEPNS_9ContextVkEPNS_13FramebufferVkEPNS_2vk11ImageHelperEPKNS5_9ImageViewERKNS0_21BlitResolveParametersE(%"class.rx::UtilsVk"* %43, %"class.rx::ContextVk"* %39, %"class.rx::FramebufferVk"* %0, %"class.rx::vk::ImageHelper"* %947, %"class.rx::vk::ImageView"* %995, %"struct.rx::UtilsVk::BlitResolveParameters"* nonnull dereferenceable(68) %32) #16
  %997 = icmp eq i32 %996, 1
  br i1 %997, label %1036, label %998

998:                                              ; preds = %992, %989
  %999 = getelementptr inbounds %"class.rx::vk::DeviceScoped", %"class.rx::vk::DeviceScoped"* %33, i64 0, i32 1, i32 0, i32 0
  %1000 = load %struct.VkImageView_T*, %struct.VkImageView_T** %999, align 8
  store %struct.VkImageView_T* null, %struct.VkImageView_T** %999, align 8
  %1001 = getelementptr inbounds %"class.rx::vk::DeviceScoped", %"class.rx::vk::DeviceScoped"* %34, i64 0, i32 1, i32 0, i32 0
  %1002 = load %struct.VkImageView_T*, %struct.VkImageView_T** %1001, align 8
  store %struct.VkImageView_T* null, %struct.VkImageView_T** %1001, align 8
  %1003 = icmp eq %struct.VkImageView_T* %1000, null
  br i1 %1003, label %1019, label %1004

1004:                                             ; preds = %998
  %1005 = bitcast %struct.VkImageView_T* %1000 to %"struct.rx::vk::GarbageHandle_T"*
  %1006 = bitcast %"class.rx::vk::GarbageObject"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1006) #16
  call void @_ZN2rx2vk13GarbageObjectC1ENS0_10HandleTypeEPNS0_15GarbageHandle_TE(%"class.rx::vk::GarbageObject"* nonnull %13, i32 14, %"struct.rx::vk::GarbageHandle_T"* nonnull %1005) #16
  %1007 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %39, i64 0, i32 51, i32 0, i32 1
  %1008 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %1007, align 8
  %1009 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %39, i64 0, i32 51, i32 0, i32 2, i32 0, i32 0
  %1010 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %1009, align 8
  %1011 = icmp ult %"class.rx::vk::GarbageObject"* %1008, %1010
  br i1 %1011, label %1012, label %1016

1012:                                             ; preds = %1004
  call void @_ZN2rx2vk13GarbageObjectC1EOS1_(%"class.rx::vk::GarbageObject"* %1008, %"class.rx::vk::GarbageObject"* nonnull dereferenceable(16) %13) #16
  %1013 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %1008, i64 1
  %1014 = ptrtoint %"class.rx::vk::GarbageObject"* %1013 to i64
  %1015 = bitcast %"class.rx::vk::GarbageObject"** %1007 to i64*
  store i64 %1014, i64* %1015, align 8
  br label %1018

1016:                                             ; preds = %1004
  %1017 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %39, i64 0, i32 51
  call void @_ZNSt3__16vectorIN2rx2vk13GarbageObjectENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector.859"* %1017, %"class.rx::vk::GarbageObject"* nonnull dereferenceable(16) %13) #16
  br label %1018

1018:                                             ; preds = %1016, %1012
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1006) #16
  br label %1019

1019:                                             ; preds = %998, %1018
  %1020 = icmp eq %struct.VkImageView_T* %1002, null
  br i1 %1020, label %1036, label %1021

1021:                                             ; preds = %1019
  %1022 = bitcast %struct.VkImageView_T* %1002 to %"struct.rx::vk::GarbageHandle_T"*
  %1023 = bitcast %"class.rx::vk::GarbageObject"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1023) #16
  call void @_ZN2rx2vk13GarbageObjectC1ENS0_10HandleTypeEPNS0_15GarbageHandle_TE(%"class.rx::vk::GarbageObject"* nonnull %15, i32 14, %"struct.rx::vk::GarbageHandle_T"* nonnull %1022) #16
  %1024 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %39, i64 0, i32 51, i32 0, i32 1
  %1025 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %1024, align 8
  %1026 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %39, i64 0, i32 51, i32 0, i32 2, i32 0, i32 0
  %1027 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %1026, align 8
  %1028 = icmp ult %"class.rx::vk::GarbageObject"* %1025, %1027
  br i1 %1028, label %1029, label %1033

1029:                                             ; preds = %1021
  call void @_ZN2rx2vk13GarbageObjectC1EOS1_(%"class.rx::vk::GarbageObject"* %1025, %"class.rx::vk::GarbageObject"* nonnull dereferenceable(16) %15) #16
  %1030 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %1025, i64 1
  %1031 = ptrtoint %"class.rx::vk::GarbageObject"* %1030 to i64
  %1032 = bitcast %"class.rx::vk::GarbageObject"** %1024 to i64*
  store i64 %1031, i64* %1032, align 8
  br label %1035

1033:                                             ; preds = %1021
  %1034 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %39, i64 0, i32 51
  call void @_ZNSt3__16vectorIN2rx2vk13GarbageObjectENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector.859"* %1034, %"class.rx::vk::GarbageObject"* nonnull dereferenceable(16) %15) #16
  br label %1035

1035:                                             ; preds = %1033, %1029
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1023) #16
  br label %1036

1036:                                             ; preds = %957, %965, %992, %982, %1035, %1019
  %1037 = phi i32 [ 1, %965 ], [ 1, %957 ], [ 1, %992 ], [ 1, %982 ], [ 0, %1019 ], [ 0, %1035 ]
  %1038 = phi i32 [ 1, %965 ], [ 1, %957 ], [ 1, %992 ], [ 1, %982 ], [ %798, %1019 ], [ %798, %1035 ]
  %1039 = load %struct.VkImageView_T*, %struct.VkImageView_T** %945, align 8
  %1040 = icmp eq %struct.VkImageView_T* %1039, null
  br i1 %1040, label %1044, label %1041

1041:                                             ; preds = %1036
  %1042 = load %struct.VkDevice_T*, %struct.VkDevice_T** %944, align 8
  %1043 = load void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)** @vkDestroyImageView, align 8
  call void %1043(%struct.VkDevice_T* %1042, %struct.VkImageView_T* nonnull %1039, %struct.VkAllocationCallbacks* null) #16
  store %struct.VkImageView_T* null, %struct.VkImageView_T** %945, align 8
  br label %1044

1044:                                             ; preds = %1036, %1041
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %943) #16
  %1045 = load %struct.VkImageView_T*, %struct.VkImageView_T** %941, align 8
  %1046 = icmp eq %struct.VkImageView_T* %1045, null
  br i1 %1046, label %1050, label %1047

1047:                                             ; preds = %1044
  %1048 = load %struct.VkDevice_T*, %struct.VkDevice_T** %940, align 8
  %1049 = load void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)** @vkDestroyImageView, align 8
  call void %1049(%struct.VkDevice_T* %1048, %struct.VkImageView_T* nonnull %1045, %struct.VkAllocationCallbacks* null) #16
  store %struct.VkImageView_T* null, %struct.VkImageView_T** %941, align 8
  br label %1050

1050:                                             ; preds = %1044, %1047
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %939) #16
  %1051 = icmp eq i32 %1037, 0
  br i1 %1051, label %1052, label %1053

1052:                                             ; preds = %870, %1050
  br label %1053

1053:                                             ; preds = %725, %1050, %870, %789, %783, %790, %709, %1052
  %1054 = phi i8* [ %804, %1052 ], [ %523, %709 ], [ %523, %790 ], [ %523, %783 ], [ %523, %789 ], [ %804, %870 ], [ %804, %1050 ], [ %523, %725 ]
  %1055 = phi i32 [ 0, %1052 ], [ 1, %709 ], [ 1, %790 ], [ 1, %783 ], [ 1, %789 ], [ 1, %870 ], [ %1038, %1050 ], [ 1, %725 ]
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %1054) #16
  br label %1056

1056:                                             ; preds = %1053, %797
  %1057 = phi i32 [ 0, %797 ], [ %1055, %1053 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %501)
  br label %1058

1058:                                             ; preds = %431, %1056
  %1059 = phi i32 [ %1057, %1056 ], [ 0, %431 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %432) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %199) #16
  br label %1060

1060:                                             ; preds = %177, %1058
  %1061 = phi i32 [ %1059, %1058 ], [ 0, %177 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %191) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %180) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %115) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #16
  br label %1062

1062:                                             ; preds = %47, %1060
  %1063 = phi i32 [ %1061, %1060 ], [ 1, %47 ]
  ret i32 %1063
}

declare { i64, i64 } @_ZNK2gl9Rectangle4flipEbb(%"struct.gl::Rectangle"*, i1 zeroext, i1 zeroext) local_unnamed_addr #1

declare { i64, i64 } @_ZNK2gl9Rectangle14removeReversalEv(%"struct.gl::Rectangle"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.round.f64(double) #11

declare void @_ZN2rx9ContextVk25restoreFinishedRenderPassEPNS_2vk11FramebufferE(%"class.rx::ContextVk"*, %"class.rx::vk::Framebuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferVk23resolveColorWithSubpassEPNS_9ContextVkERKNS_7UtilsVk21BlitResolveParametersE(%"class.rx::FramebufferVk"* nocapture readonly, %"class.rx::ContextVk"*, %"struct.rx::UtilsVk::BlitResolveParameters"* nocapture readnone dereferenceable(68)) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.rx::vk::ImageView"*, align 8
  %5 = alloca %"class.rx::vk::Framebuffer"*, align 8
  %6 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %7 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %6, align 8
  %8 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %7, i64 0, i32 9, i32 0
  %9 = load i8, i8* %8, align 1, !noalias !68
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %3
  %12 = zext i8 %9 to i32
  %13 = tail call i32 @llvm.cttz.i32(i32 %12, i1 true) #16, !range !2
  %14 = zext i32 %13 to i64
  br label %15

15:                                               ; preds = %3, %11
  %16 = phi i64 [ %14, %11 ], [ 0, %3 ]
  %17 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 0, i32 1
  %18 = load %"class.gl::State"*, %"class.gl::State"** %17, align 8
  %19 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %18, i64 0, i32 60
  %20 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %19, align 8
  %21 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %20, i64 0, i32 4
  %22 = bitcast %"class.rx::FramebufferImpl"** %21 to %"class.rx::FramebufferVk"**
  %23 = load %"class.rx::FramebufferVk"*, %"class.rx::FramebufferVk"** %22, align 8
  %24 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %20, i64 0, i32 3
  %25 = tail call i32 @_ZNK2gl16FramebufferState12getReadIndexEv(%"class.gl::FramebufferState"* %24) #16
  %26 = add nuw nsw i64 %16, 1
  %27 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10, i32 1, i32 0, i64 %26
  %28 = bitcast %"struct.rx::vk::ImageOrBufferViewSubresourceSerial"* %27 to i64*
  %29 = load i64, i64* %28, align 4
  %30 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %23, i64 0, i32 10
  tail call void @_ZN2rx2vk15FramebufferDesc18updateColorResolveEjNS0_34ImageOrBufferViewSubresourceSerialE(%"class.rx::vk::FramebufferDesc"* %30, i32 %25, i64 %29) #16
  %31 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %23, i64 0, i32 4
  store %"class.rx::vk::FramebufferHelper"* null, %"class.rx::vk::FramebufferHelper"** %31, align 8
  %32 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %23, i64 0, i32 2
  %33 = zext i32 %25 to i64
  tail call void @_ZN2rx2vk14RenderPassDesc26packColorResolveAttachmentEm(%"class.rx::vk::RenderPassDesc"* %32, i64 %33) #16
  %34 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 1, i32 0, i64 %16
  %35 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %34, align 8
  %36 = bitcast %"class.rx::vk::ImageView"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #16
  store %"class.rx::vk::ImageView"* null, %"class.rx::vk::ImageView"** %4, align 8
  %37 = call i32 @_ZNK2rx14RenderTargetVk12getImageViewEPNS_9ContextVkEPPKNS_2vk9ImageViewE(%"class.rx::RenderTargetVk"* %35, %"class.rx::ContextVk"* %1, %"class.rx::vk::ImageView"** nonnull %4) #16
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %57, label %39

39:                                               ; preds = %15
  %40 = bitcast %"class.rx::vk::Framebuffer"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #16
  store %"class.rx::vk::Framebuffer"* null, %"class.rx::vk::Framebuffer"** %5, align 8
  %41 = load %"class.rx::vk::ImageView"*, %"class.rx::vk::ImageView"** %4, align 8
  %42 = call i32 @_ZN2rx13FramebufferVk14getFramebufferEPNS_9ContextVkEPPNS_2vk11FramebufferEPKNS3_9ImageViewE(%"class.rx::FramebufferVk"* %23, %"class.rx::ContextVk"* %1, %"class.rx::vk::Framebuffer"** nonnull %5, %"class.rx::vk::ImageView"* %41)
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %55, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 54
  %46 = load %"class.rx::vk::CommandBufferHelper"*, %"class.rx::vk::CommandBufferHelper"** %45, align 8
  %47 = load %"class.rx::vk::Framebuffer"*, %"class.rx::vk::Framebuffer"** %5, align 8
  call void @_ZN2rx2vk19CommandBufferHelper26updateRenderPassForResolveEPNS_9ContextVkEPNS0_11FramebufferERKNS0_14RenderPassDescE(%"class.rx::vk::CommandBufferHelper"* %46, %"class.rx::ContextVk"* %1, %"class.rx::vk::Framebuffer"* %47, %"class.rx::vk::RenderPassDesc"* dereferenceable(12) %32) #16
  %48 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = lshr i32 %49, 6
  %51 = and i32 %50, 511
  call void @_ZN2rx14RenderTargetVk14onColorResolveEPNS_9ContextVkEj(%"class.rx::RenderTargetVk"* %35, %"class.rx::ContextVk"* %1, i32 %51) #16
  %52 = call i32 @_ZN2rx9ContextVk29flushCommandsAndEndRenderPassEv(%"class.rx::ContextVk"* %1) #16
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %55, label %54

54:                                               ; preds = %44
  call void @_ZN2rx2vk15FramebufferDesc18updateColorResolveEjNS0_34ImageOrBufferViewSubresourceSerialE(%"class.rx::vk::FramebufferDesc"* %30, i32 %25, i64 0) #16
  store %"class.rx::vk::FramebufferHelper"* null, %"class.rx::vk::FramebufferHelper"** %31, align 8
  call void @_ZN2rx2vk14RenderPassDesc28removeColorResolveAttachmentEm(%"class.rx::vk::RenderPassDesc"* %32, i64 %33) #16
  br label %55

55:                                               ; preds = %44, %39, %54
  %56 = phi i32 [ 1, %39 ], [ 0, %54 ], [ 1, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #16
  br label %57

57:                                               ; preds = %15, %55
  %58 = phi i32 [ %56, %55 ], [ 1, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #16
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferVk23resolveColorWithCommandEPNS_9ContextVkERKNS_7UtilsVk21BlitResolveParametersEPNS_2vk11ImageHelperE(%"class.rx::FramebufferVk"* nocapture readonly, %"class.rx::ContextVk"*, %"struct.rx::UtilsVk::BlitResolveParameters"* nocapture readonly dereferenceable(68), %"class.rx::vk::ImageHelper"*) local_unnamed_addr #3 align 2 {
  %5 = alloca %"class.rx::vk::CommandBufferAccess", align 8
  %6 = alloca %struct.VkImageResolve, align 4
  %7 = bitcast %"class.rx::vk::CommandBufferAccess"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %7) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 160, i1 false)
  call void @_ZN2rx2vk19CommandBufferAccessC1Ev(%"class.rx::vk::CommandBufferAccess"* nonnull %5) #16
  call void @_ZN2rx2vk19CommandBufferAccess11onImageReadEjNS0_11ImageLayoutEPNS0_11ImageHelperE(%"class.rx::vk::CommandBufferAccess"* nonnull %5, i32 1, i32 13, %"class.rx::vk::ImageHelper"* %3) #16
  %8 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %9 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %8, align 8
  %10 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %9, i64 0, i32 9, i32 0
  %11 = load i8, i8* %10, align 1, !noalias !71
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %16, %4
  %14 = call i32 @_ZN2rx9ContextVk16onResourceAccessERKNS_2vk19CommandBufferAccessE(%"class.rx::ContextVk"* %1, %"class.rx::vk::CommandBufferAccess"* nonnull dereferenceable(160) %5) #16
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %102, label %33

16:                                               ; preds = %4, %16
  %17 = phi i8 [ %31, %16 ], [ %11, %4 ]
  %18 = zext i8 %17 to i32
  %19 = call i32 @llvm.cttz.i32(i32 %18, i1 true) #16, !range !2
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 1, i32 0, i64 %20
  %22 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %21, align 8
  %23 = call dereferenceable(440) %"class.rx::vk::ImageHelper"* @_ZNK2rx14RenderTargetVk16getImageForWriteEv(%"class.rx::RenderTargetVk"* %22) #16
  %24 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %22, i64 0, i32 5, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %22, i64 0, i32 6
  %27 = load i32, i32* %26, align 4
  call void @_ZN2rx2vk19CommandBufferAccess12onImageWriteEN2gl17LevelIndexWrapperIiEEjjjjNS0_11ImageLayoutEPNS0_11ImageHelperE(%"class.rx::vk::CommandBufferAccess"* nonnull %5, i32 %25, i32 1, i32 %27, i32 1, i32 1, i32 14, %"class.rx::vk::ImageHelper"* %23) #16
  %28 = shl i32 1, %19
  %29 = trunc i32 %28 to i8
  %30 = xor i8 %29, -1
  %31 = and i8 %17, %30
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %13, label %16

33:                                               ; preds = %13
  %34 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 53
  %35 = load %"class.rx::vk::CommandBufferHelper"*, %"class.rx::vk::CommandBufferHelper"** %34, align 8
  %36 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %35, i64 0, i32 4
  %37 = bitcast %struct.VkImageResolve* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %37) #16
  %38 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 2, i32 1
  %39 = bitcast i32* %38 to i64*
  store i64 0, i64* %39, align 4
  %40 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 0, i32 0
  store i32 1, i32* %40, align 4
  %41 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 0, i32 1
  store i32 0, i32* %41, align 4
  %42 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %2, i64 0, i32 6
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 0, i32 2
  store i32 %43, i32* %44, align 4
  %45 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 0, i32 3
  store i32 1, i32* %45, align 4
  %46 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %2, i64 0, i32 0, i64 0
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 1, i32 0
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %2, i64 0, i32 0, i64 1
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 1, i32 1
  store i32 %50, i32* %51, align 4
  %52 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 1, i32 2
  store i32 0, i32* %52, align 4
  %53 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 2, i32 0
  store i32 1, i32* %53, align 4
  %54 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 2, i32 3
  store i32 1, i32* %54, align 4
  %55 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %2, i64 0, i32 1, i64 0
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 3, i32 0
  store i32 %56, i32* %57, align 4
  %58 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %2, i64 0, i32 1, i64 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 3, i32 1
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 3, i32 2
  store i32 0, i32* %61, align 4
  %62 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %2, i64 0, i32 4, i64 0
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 4, i32 0
  store i32 %63, i32* %64, align 4
  %65 = getelementptr inbounds %"struct.rx::UtilsVk::BlitResolveParameters", %"struct.rx::UtilsVk::BlitResolveParameters"* %2, i64 0, i32 4, i64 1
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 4, i32 1
  store i32 %66, i32* %67, align 4
  %68 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 4, i32 2
  store i32 1, i32* %68, align 4
  %69 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %8, align 8
  %70 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %69, i64 0, i32 9, i32 0
  %71 = load i8, i8* %70, align 1, !noalias !74
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %79, label %73

73:                                               ; preds = %33
  %74 = zext i8 %71 to i32
  %75 = call i32 @llvm.cttz.i32(i32 %74, i1 true) #16, !range !2
  %76 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 2, i32 1
  %77 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 2, i32 2
  %78 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 70, i32 4
  br label %80

79:                                               ; preds = %80, %33
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %37) #16
  br label %102

80:                                               ; preds = %99, %73
  %81 = phi i8 [ %71, %73 ], [ %97, %99 ]
  %82 = phi i32 [ %75, %73 ], [ %101, %99 ]
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 1, i32 0, i64 %83
  %85 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %84, align 8
  %86 = call dereferenceable(440) %"class.rx::vk::ImageHelper"* @_ZNK2rx14RenderTargetVk16getImageForWriteEv(%"class.rx::RenderTargetVk"* %85) #16
  %87 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %85, i64 0, i32 5, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = call i32 @_ZNK2rx2vk11ImageHelper9toVkLevelEN2gl17LevelIndexWrapperIiEE(%"class.rx::vk::ImageHelper"* %86, i32 %88) #16
  store i32 %89, i32* %76, align 4
  %90 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %85, i64 0, i32 6
  %91 = load i32, i32* %90, align 4
  store i32 %91, i32* %77, align 4
  call void @_ZN2rx2vk11ImageHelper7resolveEPS1_RK14VkImageResolvePNS0_4priv22SecondaryCommandBufferE(%"class.rx::vk::ImageHelper"* %3, %"class.rx::vk::ImageHelper"* %86, %struct.VkImageResolve* nonnull dereferenceable(68) %6, %"class.rx::vk::priv::SecondaryCommandBuffer"* %36) #16
  %92 = load i32, i32* %78, align 4
  %93 = add i32 %92, 1
  store i32 %93, i32* %78, align 4
  %94 = shl i32 1, %82
  %95 = trunc i32 %94 to i8
  %96 = xor i8 %95, -1
  %97 = and i8 %81, %96
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %79, label %99

99:                                               ; preds = %80
  %100 = zext i8 %97 to i32
  %101 = call i32 @llvm.cttz.i32(i32 %100, i1 true) #16, !range !2
  br label %80

102:                                              ; preds = %13, %79
  %103 = phi i32 [ 0, %79 ], [ 1, %13 ]
  call void @_ZN2rx2vk19CommandBufferAccessD1Ev(%"class.rx::vk::CommandBufferAccess"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %7) #16
  ret i32 %103
}

declare i32 @_ZNK2rx14RenderTargetVk25getAndRetainCopyImageViewEPNS_9ContextVkEPPKNS_2vk9ImageViewE(%"class.rx::RenderTargetVk"*, %"class.rx::ContextVk"*, %"class.rx::vk::ImageView"**) local_unnamed_addr #1

declare i32 @_ZN2rx7UtilsVk16colorBlitResolveEPNS_9ContextVkEPNS_13FramebufferVkEPNS_2vk11ImageHelperEPKNS5_9ImageViewERKNS0_21BlitResolveParametersE(%"class.rx::UtilsVk"*, %"class.rx::ContextVk"*, %"class.rx::FramebufferVk"*, %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageView"*, %"struct.rx::UtilsVk::BlitResolveParameters"* dereferenceable(68)) local_unnamed_addr #1

declare %struct.VkDevice_T* @_ZNK2rx9ContextVk9getDeviceEv(%"class.rx::ContextVk"*) local_unnamed_addr #1

declare zeroext i8 @_ZN2rx2vk16Get2DTextureTypeEji(i32, i32) local_unnamed_addr #1

declare i32 @_ZNK2rx2vk11ImageHelper18initLayerImageViewEPNS0_7ContextEN2gl11TextureTypeEjRKNS4_12SwizzleStateEPNS0_9ImageViewENS4_17LevelIndexWrapperIjEEjjjNS4_20SrgbWriteControlModeE(%"class.rx::vk::ImageHelper"*, %"class.rx::vk::Context"*, i8 zeroext, i32, %"struct.gl::SwizzleState"* dereferenceable(16), %"class.rx::vk::ImageView"*, i32, i32, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2gl12SwizzleStateC1Ev(%"struct.gl::SwizzleState"*) unnamed_addr #1

declare i32 @_ZN2rx7UtilsVk23depthStencilBlitResolveEPNS_9ContextVkEPNS_13FramebufferVkEPNS_2vk11ImageHelperEPKNS5_9ImageViewESA_RKNS0_21BlitResolveParametersE(%"class.rx::UtilsVk"*, %"class.rx::ContextVk"*, %"class.rx::FramebufferVk"*, %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageView"*, %"class.rx::vk::ImageView"*, %"struct.rx::UtilsVk::BlitResolveParameters"* dereferenceable(68)) local_unnamed_addr #1

declare i32 @_ZN2rx7UtilsVk32stencilBlitResolveNoShaderExportEPNS_9ContextVkEPNS_13FramebufferVkEPNS_2vk11ImageHelperEPKNS5_9ImageViewERKNS0_21BlitResolveParametersE(%"class.rx::UtilsVk"*, %"class.rx::ContextVk"*, %"class.rx::FramebufferVk"*, %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageView"*, %"struct.rx::UtilsVk::BlitResolveParameters"* dereferenceable(68)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13FramebufferVk28updateColorResolveAttachmentEjNS_2vk34ImageOrBufferViewSubresourceSerialE(%"class.rx::FramebufferVk"*, i32, i64) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10
  tail call void @_ZN2rx2vk15FramebufferDesc18updateColorResolveEjNS0_34ImageOrBufferViewSubresourceSerialE(%"class.rx::vk::FramebufferDesc"* %4, i32 %1, i64 %2) #16
  %5 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 4
  store %"class.rx::vk::FramebufferHelper"* null, %"class.rx::vk::FramebufferHelper"** %5, align 8
  %6 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 2
  %7 = zext i32 %1 to i64
  tail call void @_ZN2rx2vk14RenderPassDesc26packColorResolveAttachmentEm(%"class.rx::vk::RenderPassDesc"* %6, i64 %7) #16
  ret void
}

declare void @_ZN2rx2vk15FramebufferDesc18updateColorResolveEjNS0_34ImageOrBufferViewSubresourceSerialE(%"class.rx::vk::FramebufferDesc"*, i32, i64) local_unnamed_addr #1

declare void @_ZN2rx2vk14RenderPassDesc26packColorResolveAttachmentEm(%"class.rx::vk::RenderPassDesc"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13FramebufferVk28removeColorResolveAttachmentEj(%"class.rx::FramebufferVk"*, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10
  tail call void @_ZN2rx2vk15FramebufferDesc18updateColorResolveEjNS0_34ImageOrBufferViewSubresourceSerialE(%"class.rx::vk::FramebufferDesc"* %3, i32 %1, i64 0) #16
  %4 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 4
  store %"class.rx::vk::FramebufferHelper"* null, %"class.rx::vk::FramebufferHelper"** %4, align 8
  %5 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 2
  %6 = zext i32 %1 to i64
  tail call void @_ZN2rx2vk14RenderPassDesc28removeColorResolveAttachmentEm(%"class.rx::vk::RenderPassDesc"* %5, i64 %6) #16
  ret void
}

declare void @_ZN2rx2vk14RenderPassDesc28removeColorResolveAttachmentEm(%"class.rx::vk::RenderPassDesc"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13FramebufferVk16updateLayerCountEv(%"class.rx::FramebufferVk"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %2, align 8
  %4 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %3, i64 0, i32 6, i32 0
  %5 = load i8, i8* %4, align 1, !noalias !77
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = zext i8 %5 to i32
  %9 = tail call i32 @llvm.cttz.i32(i32 %8, i1 true) #16, !range !2
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 1, i32 0, i64 %10
  %12 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %11, align 8
  %13 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %12, i64 0, i32 7
  %14 = load i32, i32* %13, align 8
  %15 = shl i32 1, %9
  %16 = trunc i32 %15 to i8
  %17 = xor i8 %16, -1
  %18 = and i8 %5, %17
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %25

20:                                               ; preds = %25, %7, %1
  %21 = phi i32 [ -1, %1 ], [ %14, %7 ], [ %36, %25 ]
  %22 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 2
  %23 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %22, align 8
  %24 = icmp eq %"class.rx::RenderTargetVk"* %23, null
  br i1 %24, label %47, label %42

25:                                               ; preds = %7, %25
  %26 = phi i8 [ %40, %25 ], [ %18, %7 ]
  %27 = phi i32 [ %36, %25 ], [ %14, %7 ]
  %28 = zext i8 %26 to i32
  %29 = tail call i32 @llvm.cttz.i32(i32 %28, i1 true) #16, !range !2
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 1, i32 0, i64 %30
  %32 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %31, align 8
  %33 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %32, i64 0, i32 7
  %34 = load i32, i32* %33, align 8
  %35 = icmp ult i32 %34, %27
  %36 = select i1 %35, i32 %34, i32 %27
  %37 = shl i32 1, %29
  %38 = trunc i32 %37 to i8
  %39 = xor i8 %38, -1
  %40 = and i8 %26, %39
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %20, label %25

42:                                               ; preds = %20
  %43 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %23, i64 0, i32 7
  %44 = load i32, i32* %43, align 8
  %45 = icmp ult i32 %44, %21
  %46 = select i1 %45, i32 %44, i32 %21
  br label %47

47:                                               ; preds = %20, %42
  %48 = phi i32 [ %21, %20 ], [ %46, %42 ]
  %49 = icmp eq i32 %48, -1
  br i1 %49, label %50, label %53

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %3, i64 0, i32 15
  %52 = load i32, i32* %51, align 8
  br label %53

53:                                               ; preds = %50, %47
  %54 = phi i32 [ %52, %50 ], [ %48, %47 ]
  %55 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10
  tail call void @_ZN2rx2vk15FramebufferDesc16updateLayerCountEj(%"class.rx::vk::FramebufferDesc"* %55, i32 %54) #16
  ret void
}

declare void @_ZN2rx2vk15FramebufferDesc16updateLayerCountEj(%"class.rx::vk::FramebufferDesc"*, i32) local_unnamed_addr #1

declare i32 @_ZNK2gl16FramebufferState12getReadIndexEv(%"class.gl::FramebufferState"*) local_unnamed_addr #1

declare i32 @_ZNK2rx14RenderTargetVk12getImageViewEPNS_9ContextVkEPPKNS_2vk9ImageViewE(%"class.rx::RenderTargetVk"*, %"class.rx::ContextVk"*, %"class.rx::vk::ImageView"**) local_unnamed_addr #1

declare void @_ZN2rx2vk19CommandBufferHelper26updateRenderPassForResolveEPNS_9ContextVkEPNS0_11FramebufferERKNS0_14RenderPassDescE(%"class.rx::vk::CommandBufferHelper"*, %"class.rx::ContextVk"*, %"class.rx::vk::Framebuffer"*, %"class.rx::vk::RenderPassDesc"* dereferenceable(12)) local_unnamed_addr #1

declare void @_ZN2rx14RenderTargetVk14onColorResolveEPNS_9ContextVkEj(%"class.rx::RenderTargetVk"*, %"class.rx::ContextVk"*, i32) local_unnamed_addr #1

declare i32 @_ZN2rx9ContextVk29flushCommandsAndEndRenderPassEv(%"class.rx::ContextVk"*) local_unnamed_addr #1

declare void @_ZN2rx2vk11ImageHelper7resolveEPS1_RK14VkImageResolvePNS0_4priv22SecondaryCommandBufferE(%"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"*, %struct.VkImageResolve* dereferenceable(68), %"class.rx::vk::priv::SecondaryCommandBuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i32, i8* } @_ZNK2rx13FramebufferVk11checkStatusEPKN2gl7ContextE(%"class.rx::FramebufferVk"* nocapture readonly, %"class.gl::Context"* nocapture readnone) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %3, align 8
  %5 = tail call zeroext i1 @_ZNK2gl16FramebufferState37hasSeparateDepthAndStencilAttachmentsEv(%"class.gl::FramebufferState"* %4) #16
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call { i32, i8* } @_ZN2gl17FramebufferStatus10IncompleteEjPKc(i32 36061, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.8, i64 0, i64 0)) #16
  br label %10

8:                                                ; preds = %2
  %9 = tail call { i32, i8* } @_ZN2gl17FramebufferStatus8CompleteEv() #16
  br label %10

10:                                               ; preds = %8, %6
  %11 = phi { i32, i8* } [ %9, %8 ], [ %7, %6 ]
  ret { i32, i8* } %11
}

declare zeroext i1 @_ZNK2gl16FramebufferState37hasSeparateDepthAndStencilAttachmentsEv(%"class.gl::FramebufferState"*) local_unnamed_addr #1

declare { i32, i8* } @_ZN2gl17FramebufferStatus10IncompleteEjPKc(i32, i8*) local_unnamed_addr #1

declare { i32, i8* } @_ZN2gl17FramebufferStatus8CompleteEv() local_unnamed_addr #1

declare void @_ZN2rx2vk19CommandBufferHelper35invalidateRenderPassColorAttachmentENS0_21PackedAttachmentIndexE(%"class.rx::vk::CommandBufferHelper"*, i32) local_unnamed_addr #1

declare void @_ZN2rx2vk19CommandBufferHelper35invalidateRenderPassDepthAttachmentERKN2gl17DepthStencilStateERKNS2_9RectangleE(%"class.rx::vk::CommandBufferHelper"*, %"struct.gl::DepthStencilState"* dereferenceable(60), %"struct.gl::Rectangle"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN2rx2vk19CommandBufferHelper37invalidateRenderPassStencilAttachmentERKN2gl17DepthStencilStateERKNS2_9RectangleE(%"class.rx::vk::CommandBufferHelper"*, %"struct.gl::DepthStencilState"* dereferenceable(60), %"struct.gl::Rectangle"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN2rx14RenderTargetVk23invalidateEntireContentEPNS_9ContextVkE(%"class.rx::RenderTargetVk"*, %"class.rx::ContextVk"*) local_unnamed_addr #1

declare void @_ZN2rx14RenderTargetVk30invalidateEntireStencilContentEPNS_9ContextVkE(%"class.rx::RenderTargetVk"*, %"class.rx::ContextVk"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferVk21updateColorAttachmentEPKN2gl7ContextEj(%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i32) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %5 = bitcast %"class.rx::ContextImpl"** %4 to %"class.rx::ContextVk"**
  %6 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %5, align 8
  %7 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %9 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %8, align 8
  %10 = zext i32 %2 to i64
  %11 = tail call i32 @_ZN2rx17RenderTargetCacheINS_14RenderTargetVkEE23updateColorRenderTargetEPKN2gl7ContextERKNS3_16FramebufferStateEm(%"class.rx::RenderTargetCache"* %7, %"class.gl::Context"* %1, %"class.gl::FramebufferState"* dereferenceable(464) %9, i64 %10)
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %104, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 1, i32 0, i64 %10
  %15 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %14, align 8
  %16 = icmp eq %"class.rx::RenderTargetVk"* %15, null
  br i1 %16, label %71, label %17

17:                                               ; preds = %13
  %18 = tail call dereferenceable(64) %"struct.rx::vk::Format"* @_ZNK2rx14RenderTargetVk14getImageFormatEv(%"class.rx::RenderTargetVk"* nonnull %15) #16
  %19 = getelementptr inbounds %"struct.rx::vk::Format", %"struct.rx::vk::Format"* %18, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %21, i32 8
  %23 = load i32, i32* %22, align 4
  %24 = icmp ne i32 %23, 0
  %25 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %21, i32 9
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %21, i32 10
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %21, i32 11
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 0
  %34 = zext i1 %24 to i64
  %35 = select i1 %27, i64 0, i64 2
  %36 = or i64 %35, %34
  %37 = select i1 %30, i64 0, i64 4
  %38 = or i64 %36, %37
  %39 = select i1 %33, i64 0, i64 8
  %40 = or i64 %38, %39
  %41 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 6
  %42 = shl nuw nsw i64 %10, 3
  %43 = shl i64 255, %42
  %44 = shl i64 %40, %42
  %45 = load i64, i64* %41, align 8
  %46 = xor i64 %44, %45
  %47 = and i64 %46, %43
  %48 = xor i64 %47, %45
  store i64 %48, i64* %41, align 8
  %49 = tail call dereferenceable(64) %"struct.rx::vk::Format"* @_ZNK2rx14RenderTargetVk14getImageFormatEv(%"class.rx::RenderTargetVk"* nonnull %15) #16
  %50 = getelementptr inbounds %"struct.rx::vk::Format", %"struct.rx::vk::Format"* %49, i64 0, i32 0
  %51 = load i32, i32* %50, align 8
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 8
  %54 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %52, i32 11
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 0
  %57 = load i32, i32* %31, align 8
  %58 = icmp ne i32 %57, 0
  %59 = and i1 %56, %58
  %60 = shl i32 1, %2
  %61 = trunc i32 %60 to i8
  br i1 %59, label %62, label %66

62:                                               ; preds = %17
  %63 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %53, i64 0, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = or i8 %64, %61
  store i8 %65, i8* %63, align 1
  br label %78

66:                                               ; preds = %17
  %67 = xor i8 %61, -1
  %68 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %53, i64 0, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = and i8 %69, %67
  store i8 %70, i8* %68, align 1
  br label %78

71:                                               ; preds = %13
  %72 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 6
  %73 = shl nuw nsw i64 %10, 3
  %74 = shl i64 255, %73
  %75 = load i64, i64* %72, align 8
  %76 = xor i64 %74, -1
  %77 = and i64 %75, %76
  store i64 %77, i64* %72, align 8
  br label %94

78:                                               ; preds = %62, %66
  %79 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 31
  tail call void @_ZN2rx9ContextVk16updateColorMasksERKN2gl13BlendStateExtE(%"class.rx::ContextVk"* %6, %"class.gl::BlendStateExt"* dereferenceable(96) %79) #16
  %80 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %8, align 8
  %81 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %80, i64 0, i32 3, i32 0, i32 0
  %82 = load %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"** %81, align 8
  %83 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %82, i64 %10, i32 0
  %84 = load i32, i32* %83, align 8
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %94, label %86

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %15, i64 0, i32 3
  %88 = load %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"** %87, align 8
  %89 = icmp eq %"class.rx::vk::ImageHelper"* %88, null
  br i1 %89, label %96, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %15, i64 0, i32 8
  %92 = load i32, i32* %91, align 4
  %93 = icmp ne i32 %92, 2
  br label %96

94:                                               ; preds = %78, %71
  %95 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10
  tail call void @_ZN2rx2vk15FramebufferDesc11updateColorEjNS0_34ImageOrBufferViewSubresourceSerialE(%"class.rx::vk::FramebufferDesc"* %95, i32 %2, i64 0) #16
  br label %102

96:                                               ; preds = %90, %86
  %97 = phi i1 [ %93, %90 ], [ false, %86 ]
  %98 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10
  %99 = tail call i64 @_ZNK2rx14RenderTargetVk24getDrawSubresourceSerialEv(%"class.rx::RenderTargetVk"* nonnull %15) #16
  tail call void @_ZN2rx2vk15FramebufferDesc11updateColorEjNS0_34ImageOrBufferViewSubresourceSerialE(%"class.rx::vk::FramebufferDesc"* %98, i32 %2, i64 %99) #16
  br i1 %97, label %100, label %102

100:                                              ; preds = %96
  %101 = tail call i64 @_ZNK2rx14RenderTargetVk27getResolveSubresourceSerialEv(%"class.rx::RenderTargetVk"* nonnull %15) #16
  tail call void @_ZN2rx2vk15FramebufferDesc18updateColorResolveEjNS0_34ImageOrBufferViewSubresourceSerialE(%"class.rx::vk::FramebufferDesc"* %98, i32 %2, i64 %101) #16
  br label %104

102:                                              ; preds = %94, %96
  %103 = phi %"class.rx::vk::FramebufferDesc"* [ %95, %94 ], [ %98, %96 ]
  tail call void @_ZN2rx2vk15FramebufferDesc18updateColorResolveEjNS0_34ImageOrBufferViewSubresourceSerialE(%"class.rx::vk::FramebufferDesc"* %103, i32 %2, i64 0) #16
  br label %104

104:                                              ; preds = %3, %100, %102
  %105 = phi i32 [ 1, %3 ], [ 0, %102 ], [ 0, %100 ]
  ret i32 %105
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2rx17RenderTargetCacheINS_14RenderTargetVkEE23updateColorRenderTargetEPKN2gl7ContextERKNS3_16FramebufferStateEm(%"class.rx::RenderTargetCache"*, %"class.gl::Context"*, %"class.gl::FramebufferState"* dereferenceable(464), i64) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca %"class.rx::RenderTargetVk"*, align 8
  %6 = alloca %"class.rx::RenderTargetVk"*, align 8
  %7 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %2, i64 0, i32 8
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %35, label %10

10:                                               ; preds = %4
  %11 = tail call i32 @_ZNK2gl16FramebufferState12getReadIndexEv(%"class.gl::FramebufferState"* %2) #16
  %12 = zext i32 %11 to i64
  %13 = icmp eq i64 %12, %3
  br i1 %13, label %14, label %35

14:                                               ; preds = %10
  %15 = tail call %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState17getReadAttachmentEv(%"class.gl::FramebufferState"* %2) #16
  %16 = bitcast %"class.rx::RenderTargetVk"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  store %"class.rx::RenderTargetVk"* null, %"class.rx::RenderTargetVk"** %5, align 8
  %17 = icmp eq %"class.gl::FramebufferAttachment"* %15, null
  br i1 %17, label %32, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %15, i64 0, i32 6
  %20 = load i32, i32* %19, align 4
  %21 = bitcast %"class.rx::RenderTargetVk"** %5 to %"class.rx::FramebufferAttachmentRenderTarget"**
  %22 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %15, i64 0, i32 2
  %23 = load %"class.gl::FramebufferAttachmentObject"*, %"class.gl::FramebufferAttachmentObject"** %22, align 8
  %24 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %15, i64 0, i32 1, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %15, i64 0, i32 1, i32 1
  %27 = call i32 @_ZNK2gl27FramebufferAttachmentObject25getAttachmentRenderTargetEPKNS_7ContextEjRKNS_10ImageIndexEiPPN2rx33FramebufferAttachmentRenderTargetE(%"class.gl::FramebufferAttachmentObject"* %23, %"class.gl::Context"* %1, i32 %25, %"class.gl::ImageIndex"* dereferenceable(16) %26, i32 %20, %"class.rx::FramebufferAttachmentRenderTarget"** nonnull %21) #16
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %57, label %29

29:                                               ; preds = %18
  %30 = bitcast %"class.rx::RenderTargetVk"** %5 to i64*
  %31 = load i64, i64* %30, align 8
  br label %32

32:                                               ; preds = %29, %14
  %33 = phi i64 [ %31, %29 ], [ 0, %14 ]
  %34 = bitcast %"class.rx::RenderTargetCache"* %0 to i64*
  store i64 %33, i64* %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  br label %35

35:                                               ; preds = %32, %4, %10
  %36 = call %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState18getColorAttachmentEm(%"class.gl::FramebufferState"* %2, i64 %3) #16
  %37 = getelementptr inbounds %"class.rx::RenderTargetCache", %"class.rx::RenderTargetCache"* %0, i64 0, i32 1, i32 0, i64 %3
  %38 = bitcast %"class.rx::RenderTargetVk"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #16
  store %"class.rx::RenderTargetVk"* null, %"class.rx::RenderTargetVk"** %6, align 8
  %39 = icmp eq %"class.gl::FramebufferAttachment"* %36, null
  br i1 %39, label %54, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %36, i64 0, i32 6
  %42 = load i32, i32* %41, align 4
  %43 = bitcast %"class.rx::RenderTargetVk"** %6 to %"class.rx::FramebufferAttachmentRenderTarget"**
  %44 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %36, i64 0, i32 2
  %45 = load %"class.gl::FramebufferAttachmentObject"*, %"class.gl::FramebufferAttachmentObject"** %44, align 8
  %46 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %36, i64 0, i32 1, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %36, i64 0, i32 1, i32 1
  %49 = call i32 @_ZNK2gl27FramebufferAttachmentObject25getAttachmentRenderTargetEPKNS_7ContextEjRKNS_10ImageIndexEiPPN2rx33FramebufferAttachmentRenderTargetE(%"class.gl::FramebufferAttachmentObject"* %45, %"class.gl::Context"* %1, i32 %47, %"class.gl::ImageIndex"* dereferenceable(16) %48, i32 %42, %"class.rx::FramebufferAttachmentRenderTarget"** nonnull %43) #16
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %57, label %51

51:                                               ; preds = %40
  %52 = bitcast %"class.rx::RenderTargetVk"** %6 to i64*
  %53 = load i64, i64* %52, align 8
  br label %54

54:                                               ; preds = %51, %35
  %55 = phi i64 [ %53, %51 ], [ 0, %35 ]
  %56 = bitcast %"class.rx::RenderTargetVk"** %37 to i64*
  store i64 %55, i64* %56, align 8
  br label %57

57:                                               ; preds = %54, %40, %18
  %58 = phi i8* [ %16, %18 ], [ %38, %40 ], [ %38, %54 ]
  %59 = phi i32 [ 1, %18 ], [ 1, %40 ], [ 0, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #16
  ret i32 %59
}

declare dereferenceable(64) %"struct.rx::vk::Format"* @_ZNK2rx14RenderTargetVk14getImageFormatEv(%"class.rx::RenderTargetVk"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx13FramebufferVk22updateActiveColorMasksEmbbbb(%"class.rx::FramebufferVk"* nocapture, i64, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #12 align 2 {
  %7 = zext i1 %2 to i64
  %8 = select i1 %3, i64 2, i64 0
  %9 = or i64 %8, %7
  %10 = select i1 %4, i64 4, i64 0
  %11 = or i64 %9, %10
  %12 = select i1 %5, i64 8, i64 0
  %13 = or i64 %11, %12
  %14 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 6
  %15 = shl i64 %1, 3
  %16 = shl i64 255, %15
  %17 = shl i64 %13, %15
  %18 = load i64, i64* %14, align 8
  %19 = xor i64 %18, %17
  %20 = and i64 %19, %16
  %21 = xor i64 %20, %18
  store i64 %21, i64* %14, align 8
  ret void
}

declare void @_ZN2rx9ContextVk16updateColorMasksERKN2gl13BlendStateExtE(%"class.rx::ContextVk"*, %"class.gl::BlendStateExt"* dereferenceable(96)) local_unnamed_addr #1

declare void @_ZN2rx2vk15FramebufferDesc11updateColorEjNS0_34ImageOrBufferViewSubresourceSerialE(%"class.rx::vk::FramebufferDesc"*, i32, i64) local_unnamed_addr #1

declare i64 @_ZNK2rx14RenderTargetVk24getDrawSubresourceSerialEv(%"class.rx::RenderTargetVk"*) local_unnamed_addr #1

declare i64 @_ZNK2rx14RenderTargetVk27getResolveSubresourceSerialEv(%"class.rx::RenderTargetVk"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferVk28updateDepthStencilAttachmentEPKN2gl7ContextE(%"class.rx::FramebufferVk"*, %"class.gl::Context"*) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.rx::RenderTargetVk"*, align 8
  %4 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %4, align 8
  %6 = tail call %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState27getDepthOrStencilAttachmentEv(%"class.gl::FramebufferState"* %5) #16
  %7 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 2
  %8 = bitcast %"class.rx::RenderTargetVk"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #16
  store %"class.rx::RenderTargetVk"* null, %"class.rx::RenderTargetVk"** %3, align 8
  %9 = icmp eq %"class.gl::FramebufferAttachment"* %6, null
  br i1 %9, label %25, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %6, i64 0, i32 6
  %12 = load i32, i32* %11, align 4
  %13 = bitcast %"class.rx::RenderTargetVk"** %3 to %"class.rx::FramebufferAttachmentRenderTarget"**
  %14 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %6, i64 0, i32 2
  %15 = load %"class.gl::FramebufferAttachmentObject"*, %"class.gl::FramebufferAttachmentObject"** %14, align 8
  %16 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %6, i64 0, i32 1, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %6, i64 0, i32 1, i32 1
  %19 = call i32 @_ZNK2gl27FramebufferAttachmentObject25getAttachmentRenderTargetEPKNS_7ContextEjRKNS_10ImageIndexEiPPN2rx33FramebufferAttachmentRenderTargetE(%"class.gl::FramebufferAttachmentObject"* %15, %"class.gl::Context"* %1, i32 %17, %"class.gl::ImageIndex"* dereferenceable(16) %18, i32 %12, %"class.rx::FramebufferAttachmentRenderTarget"** nonnull %13) #16
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %24, label %21

21:                                               ; preds = %10
  %22 = bitcast %"class.rx::RenderTargetVk"** %3 to i64*
  %23 = load i64, i64* %22, align 8
  br label %25

24:                                               ; preds = %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #16
  br label %28

25:                                               ; preds = %21, %2
  %26 = phi i64 [ %23, %21 ], [ 0, %2 ]
  %27 = bitcast %"class.rx::RenderTargetVk"** %7 to i64*
  store i64 %26, i64* %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #16
  call void @_ZN2rx13FramebufferVk34updateDepthStencilAttachmentSerialEPNS_9ContextVkE(%"class.rx::FramebufferVk"* %0, %"class.rx::ContextVk"* undef)
  br label %28

28:                                               ; preds = %24, %25
  %29 = phi i32 [ 0, %25 ], [ 1, %24 ]
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13FramebufferVk34updateDepthStencilAttachmentSerialEPNS_9ContextVkE(%"class.rx::FramebufferVk"*, %"class.rx::ContextVk"* nocapture readnone) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 2
  %4 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %3, align 8
  %5 = icmp eq %"class.rx::RenderTargetVk"* %4, null
  %6 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10
  br i1 %5, label %7, label %8

7:                                                ; preds = %2
  tail call void @_ZN2rx2vk15FramebufferDesc18updateDepthStencilENS0_34ImageOrBufferViewSubresourceSerialE(%"class.rx::vk::FramebufferDesc"* %6, i64 0) #16
  br label %19

8:                                                ; preds = %2
  %9 = tail call i64 @_ZNK2rx14RenderTargetVk24getDrawSubresourceSerialEv(%"class.rx::RenderTargetVk"* nonnull %4) #16
  tail call void @_ZN2rx2vk15FramebufferDesc18updateDepthStencilENS0_34ImageOrBufferViewSubresourceSerialE(%"class.rx::vk::FramebufferDesc"* %6, i64 %9) #16
  %10 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %4, i64 0, i32 3
  %11 = load %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"** %10, align 8
  %12 = icmp eq %"class.rx::vk::ImageHelper"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %4, i64 0, i32 8
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 2
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = tail call i64 @_ZNK2rx14RenderTargetVk27getResolveSubresourceSerialEv(%"class.rx::RenderTargetVk"* nonnull %4) #16
  br label %19

19:                                               ; preds = %7, %8, %13, %17
  %20 = phi i64 [ %18, %17 ], [ 0, %13 ], [ 0, %8 ], [ 0, %7 ]
  tail call void @_ZN2rx2vk15FramebufferDesc25updateDepthStencilResolveENS0_34ImageOrBufferViewSubresourceSerialE(%"class.rx::vk::FramebufferDesc"* %6, i64 %20) #16
  ret void
}

declare void @_ZN2rx2vk15FramebufferDesc18updateDepthStencilENS0_34ImageOrBufferViewSubresourceSerialE(%"class.rx::vk::FramebufferDesc"*, i64) local_unnamed_addr #1

declare void @_ZN2rx2vk15FramebufferDesc25updateDepthStencilResolveENS0_34ImageOrBufferViewSubresourceSerialE(%"class.rx::vk::FramebufferDesc"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferVk27flushColorAttachmentUpdatesEPKN2gl7ContextEbj(%"class.rx::FramebufferVk"*, %"class.gl::Context"* nocapture readonly, i1 zeroext, i32) local_unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %6 = bitcast %"class.rx::ContextImpl"** %5 to %"class.rx::ContextVk"**
  %7 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %6, align 8
  %8 = zext i32 %3 to i64
  %9 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 1, i32 0, i64 %8
  %10 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %9, align 8
  %11 = icmp eq %"class.rx::RenderTargetVk"* %10, null
  br i1 %11, label %35, label %12

12:                                               ; preds = %4
  br i1 %2, label %13, label %29

13:                                               ; preds = %12
  %14 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %15 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %14, align 8
  %16 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %15, i64 0, i32 9, i32 0
  %17 = load i8, i8* %16, align 1, !noalias !80
  %18 = shl i32 1, %3
  %19 = trunc i32 %18 to i8
  %20 = and i8 %17, %19
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12
  %24 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = lshr i32 %25, 6
  %27 = and i32 %26, 511
  %28 = tail call i32 @_ZN2rx14RenderTargetVk18flushStagedUpdatesEPNS_9ContextVkEPNS_2vk16ClearValuesArrayEjj(%"class.rx::RenderTargetVk"* nonnull %10, %"class.rx::ContextVk"* %7, %"class.rx::vk::ClearValuesArray"* %23, i32 %3, i32 %27) #16
  br label %35

29:                                               ; preds = %13, %12
  %30 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = lshr i32 %31, 6
  %33 = and i32 %32, 511
  %34 = tail call i32 @_ZN2rx14RenderTargetVk18flushStagedUpdatesEPNS_9ContextVkEPNS_2vk16ClearValuesArrayEjj(%"class.rx::RenderTargetVk"* nonnull %10, %"class.rx::ContextVk"* %7, %"class.rx::vk::ClearValuesArray"* null, i32 0, i32 %33) #16
  br label %35

35:                                               ; preds = %4, %29, %22
  %36 = phi i32 [ %28, %22 ], [ %34, %29 ], [ 0, %4 ]
  ret i32 %36
}

declare i32 @_ZN2rx14RenderTargetVk18flushStagedUpdatesEPNS_9ContextVkEPNS_2vk16ClearValuesArrayEjj(%"class.rx::RenderTargetVk"*, %"class.rx::ContextVk"*, %"class.rx::vk::ClearValuesArray"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferVk34flushDepthStencilAttachmentUpdatesEPKN2gl7ContextEb(%"class.rx::FramebufferVk"*, %"class.gl::Context"* nocapture readonly, i1 zeroext) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %5 = bitcast %"class.rx::ContextImpl"** %4 to %"class.rx::ContextVk"**
  %6 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %5, align 8
  %7 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 2
  %8 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %7, align 8
  %9 = icmp eq %"class.rx::RenderTargetVk"* %8, null
  br i1 %9, label %24, label %10

10:                                               ; preds = %3
  br i1 %2, label %11, label %18

11:                                               ; preds = %10
  %12 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12
  %13 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = lshr i32 %14, 6
  %16 = and i32 %15, 511
  %17 = tail call i32 @_ZN2rx14RenderTargetVk18flushStagedUpdatesEPNS_9ContextVkEPNS_2vk16ClearValuesArrayEjj(%"class.rx::RenderTargetVk"* nonnull %8, %"class.rx::ContextVk"* %6, %"class.rx::vk::ClearValuesArray"* %12, i32 8, i32 %16) #16
  br label %24

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = lshr i32 %20, 6
  %22 = and i32 %21, 511
  %23 = tail call i32 @_ZN2rx14RenderTargetVk18flushStagedUpdatesEPNS_9ContextVkEPNS_2vk16ClearValuesArrayEjj(%"class.rx::RenderTargetVk"* nonnull %8, %"class.rx::ContextVk"* %6, %"class.rx::vk::ClearValuesArray"* null, i32 0, i32 %22) #16
  br label %24

24:                                               ; preds = %3, %18, %11
  %25 = phi i32 [ %17, %11 ], [ %23, %18 ], [ 0, %3 ]
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferVk9syncStateEPKN2gl7ContextEjRKN5angle7BitSetTILm28EmmEENS1_7CommandE(%"class.rx::FramebufferVk"*, %"class.gl::Context"*, i32, %"class.angle::BitSetT.332"* dereferenceable(8), i32) unnamed_addr #3 align 2 {
  %6 = alloca %"class.rx::RenderTargetVk"*, align 8
  %7 = alloca %"class.rx::vk::FramebufferDesc", align 4
  %8 = alloca %"class.rx::vk::ClearValuesArray", align 8
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = bitcast %"class.rx::ContextImpl"** %9 to %"class.rx::ContextVk"**
  %11 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %10, align 8
  %12 = bitcast %"class.rx::vk::FramebufferDesc"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 148, i8* nonnull %12) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %12, i8 -86, i64 148, i1 false)
  %13 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10
  call void @_ZN2rx2vk15FramebufferDescC1ERKS1_(%"class.rx::vk::FramebufferDesc"* nonnull %7, %"class.rx::vk::FramebufferDesc"* dereferenceable(148) %13) #16
  %14 = getelementptr inbounds %"class.angle::BitSetT.332", %"class.angle::BitSetT.332"* %3, i64 0, i32 0
  %15 = load i64, i64* %14, align 8, !noalias !83
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %162, label %17

17:                                               ; preds = %5
  %18 = call i64 @llvm.cttz.i64(i64 %15, i1 true) #16, !range !86
  %19 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 11
  %20 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5
  %21 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 2
  %23 = bitcast %"class.rx::RenderTargetVk"** %6 to i8*
  %24 = bitcast %"class.rx::RenderTargetVk"** %6 to %"class.rx::FramebufferAttachmentRenderTarget"**
  %25 = bitcast %"class.rx::RenderTargetVk"** %6 to i64*
  %26 = bitcast %"class.rx::RenderTargetVk"** %22 to i64*
  br label %27

27:                                               ; preds = %17, %72
  %28 = phi i8 [ 0, %17 ], [ %77, %72 ]
  %29 = phi i8 [ 0, %17 ], [ %76, %72 ]
  %30 = phi i8 [ 0, %17 ], [ %75, %72 ]
  %31 = phi i8 [ 0, %17 ], [ %74, %72 ]
  %32 = phi i8 [ 0, %17 ], [ %73, %72 ]
  %33 = phi i64 [ %18, %17 ], [ %82, %72 ]
  %34 = phi i64 [ %15, %17 ], [ %80, %72 ]
  switch i64 %33, label %60 [
    i64 8, label %35
    i64 18, label %35
    i64 9, label %35
    i64 19, label %35
    i64 21, label %53
    i64 20, label %72
    i64 22, label %57
    i64 23, label %57
    i64 24, label %57
    i64 25, label %57
    i64 27, label %58
    i64 26, label %59
  ]

35:                                               ; preds = %27, %27, %27, %27
  %36 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %21, align 8
  %37 = call %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState27getDepthOrStencilAttachmentEv(%"class.gl::FramebufferState"* %36) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #16
  store %"class.rx::RenderTargetVk"* null, %"class.rx::RenderTargetVk"** %6, align 8
  %38 = icmp eq %"class.gl::FramebufferAttachment"* %37, null
  br i1 %38, label %51, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %37, i64 0, i32 6
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %37, i64 0, i32 2
  %43 = load %"class.gl::FramebufferAttachmentObject"*, %"class.gl::FramebufferAttachmentObject"** %42, align 8
  %44 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %37, i64 0, i32 1, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %37, i64 0, i32 1, i32 1
  %47 = call i32 @_ZNK2gl27FramebufferAttachmentObject25getAttachmentRenderTargetEPKNS_7ContextEjRKNS_10ImageIndexEiPPN2rx33FramebufferAttachmentRenderTargetE(%"class.gl::FramebufferAttachmentObject"* %43, %"class.gl::Context"* %1, i32 %45, %"class.gl::ImageIndex"* dereferenceable(16) %46, i32 %41, %"class.rx::FramebufferAttachmentRenderTarget"** nonnull %24) #16
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %71, label %49

49:                                               ; preds = %39
  %50 = load i64, i64* %25, align 8
  br label %51

51:                                               ; preds = %35, %49
  %52 = phi i64 [ %50, %49 ], [ 0, %35 ]
  store i64 %52, i64* %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #16
  call void @_ZN2rx13FramebufferVk34updateDepthStencilAttachmentSerialEPNS_9ContextVkE(%"class.rx::FramebufferVk"* %0, %"class.rx::ContextVk"* undef) #16
  br label %72

53:                                               ; preds = %27
  %54 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %21, align 8
  %55 = call i32 @_ZN2rx17RenderTargetCacheINS_14RenderTargetVkEE6updateEPKN2gl7ContextERKNS3_16FramebufferStateERKN5angle7BitSetTILm28EmmEE(%"class.rx::RenderTargetCache"* %20, %"class.gl::Context"* %1, %"class.gl::FramebufferState"* dereferenceable(464) %54, %"class.angle::BitSetT.332"* dereferenceable(8) %3)
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %245, label %72

57:                                               ; preds = %27, %27, %27, %27
  call void @_ZN2rx16FramebufferCache5clearEPNS_9ContextVkE(%"class.rx::FramebufferCache"* %19, %"class.rx::ContextVk"* %11)
  br label %72

58:                                               ; preds = %27
  br label %72

59:                                               ; preds = %27
  br label %72

60:                                               ; preds = %27
  %61 = icmp ult i64 %33, 8
  %62 = trunc i64 %33 to i32
  %63 = add nsw i32 %62, -10
  %64 = select i1 %61, i32 %62, i32 %63
  %65 = call i32 @_ZN2rx13FramebufferVk21updateColorAttachmentEPKN2gl7ContextEj(%"class.rx::FramebufferVk"* %0, %"class.gl::Context"* %1, i32 %64)
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %245, label %67

67:                                               ; preds = %60
  %68 = shl i32 1, %64
  %69 = trunc i32 %68 to i8
  %70 = or i8 %32, %69
  br label %72

71:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #16
  br label %245

72:                                               ; preds = %53, %57, %58, %59, %27, %51, %67
  %73 = phi i8 [ %32, %59 ], [ %32, %58 ], [ %32, %57 ], [ %32, %27 ], [ %32, %53 ], [ %32, %51 ], [ %70, %67 ]
  %74 = phi i8 [ %31, %59 ], [ 1, %58 ], [ %31, %57 ], [ %31, %27 ], [ %31, %53 ], [ %31, %51 ], [ %31, %67 ]
  %75 = phi i8 [ 1, %59 ], [ %30, %58 ], [ %30, %57 ], [ 1, %27 ], [ %30, %53 ], [ 1, %51 ], [ 1, %67 ]
  %76 = phi i8 [ %29, %59 ], [ %29, %58 ], [ %29, %57 ], [ 1, %27 ], [ %29, %53 ], [ %29, %51 ], [ 1, %67 ]
  %77 = phi i8 [ %28, %59 ], [ %28, %58 ], [ %28, %57 ], [ %28, %27 ], [ %28, %53 ], [ 1, %51 ], [ %28, %67 ]
  %78 = shl i64 1, %33
  %79 = xor i64 %78, -1
  %80 = and i64 %34, %79
  %81 = icmp eq i64 %80, 0
  %82 = call i64 @llvm.cttz.i64(i64 %80, i1 true) #16, !range !86
  br i1 %81, label %83, label %27

83:                                               ; preds = %72
  %84 = and i8 %74, 1
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %100, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %88 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %87, align 8
  %89 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %88, i64 0, i32 23
  %90 = load i32, i32* %89, align 8
  %91 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %13, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = shl i32 %90, 15
  %94 = and i32 %93, 32768
  %95 = and i32 %92, -32769
  %96 = or i32 %95, %94
  store i32 %96, i32* %91, align 4
  %97 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 2
  call void @_ZN2rx2vk14RenderPassDesc19setWriteControlModeEN2gl20SrgbWriteControlModeE(%"class.rx::vk::RenderPassDesc"* %97, i32 %90) #16
  %98 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 4
  store %"class.rx::vk::FramebufferHelper"* null, %"class.rx::vk::FramebufferHelper"** %98, align 8
  %99 = call i32 @_ZN2rx9ContextVk19onFramebufferChangeEPNS_13FramebufferVkE(%"class.rx::ContextVk"* %11, %"class.rx::FramebufferVk"* %0) #16
  br label %100

100:                                              ; preds = %83, %86
  %101 = and i8 %76, 1
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 31
  call void @_ZN2rx9ContextVk16updateColorMasksERKN2gl13BlendStateExtE(%"class.rx::ContextVk"* %11, %"class.gl::BlendStateExt"* dereferenceable(96) %104) #16
  br label %105

105:                                              ; preds = %100, %103
  %106 = and i8 %75, 1
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %162, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %110 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %109, align 8
  %111 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %110, i64 0, i32 6, i32 0
  %112 = load i8, i8* %111, align 1, !noalias !87
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %127, label %114

114:                                              ; preds = %108
  %115 = zext i8 %112 to i32
  %116 = call i32 @llvm.cttz.i32(i32 %115, i1 true) #16, !range !2
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 1, i32 0, i64 %117
  %119 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %118, align 8
  %120 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %119, i64 0, i32 7
  %121 = load i32, i32* %120, align 8
  %122 = shl i32 1, %116
  %123 = trunc i32 %122 to i8
  %124 = xor i8 %123, -1
  %125 = and i8 %112, %124
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %127, label %132

127:                                              ; preds = %132, %114, %108
  %128 = phi i32 [ -1, %108 ], [ %121, %114 ], [ %143, %132 ]
  %129 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 2
  %130 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %129, align 8
  %131 = icmp eq %"class.rx::RenderTargetVk"* %130, null
  br i1 %131, label %154, label %149

132:                                              ; preds = %114, %132
  %133 = phi i8 [ %147, %132 ], [ %125, %114 ]
  %134 = phi i32 [ %143, %132 ], [ %121, %114 ]
  %135 = zext i8 %133 to i32
  %136 = call i32 @llvm.cttz.i32(i32 %135, i1 true) #16, !range !2
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 1, i32 0, i64 %137
  %139 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %138, align 8
  %140 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %139, i64 0, i32 7
  %141 = load i32, i32* %140, align 8
  %142 = icmp ult i32 %141, %134
  %143 = select i1 %142, i32 %141, i32 %134
  %144 = shl i32 1, %136
  %145 = trunc i32 %144 to i8
  %146 = xor i8 %145, -1
  %147 = and i8 %133, %146
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %127, label %132

149:                                              ; preds = %127
  %150 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %130, i64 0, i32 7
  %151 = load i32, i32* %150, align 8
  %152 = icmp ult i32 %151, %128
  %153 = select i1 %152, i32 %151, i32 %128
  br label %154

154:                                              ; preds = %149, %127
  %155 = phi i32 [ %128, %127 ], [ %153, %149 ]
  %156 = icmp eq i32 %155, -1
  br i1 %156, label %157, label %160

157:                                              ; preds = %154
  %158 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %110, i64 0, i32 15
  %159 = load i32, i32* %158, align 8
  br label %160

160:                                              ; preds = %154, %157
  %161 = phi i32 [ %159, %157 ], [ %155, %154 ]
  call void @_ZN2rx2vk15FramebufferDesc16updateLayerCountEj(%"class.rx::vk::FramebufferDesc"* %13, i32 %161) #16
  br label %162

162:                                              ; preds = %5, %105, %160
  %163 = phi i8 [ %77, %105 ], [ %77, %160 ], [ 0, %5 ]
  %164 = phi i8 [ %73, %105 ], [ %73, %160 ], [ 0, %5 ]
  %165 = icmp eq i32 %2, 36009
  %166 = bitcast %"class.rx::vk::ClearValuesArray"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %166) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %166, i8* align 8 bitcast (%"class.rx::vk::ClearValuesArray"* @__const._ZN2rx13FramebufferVk9syncStateEPKN2gl7ContextEjRKN5angle7BitSetTILm28EmmEENS1_7CommandE.previousDeferredClears to i8*), i64 168, i1 false)
  %167 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12
  call void @_ZN2rx2vk16ClearValuesArrayC1ERKS1_(%"class.rx::vk::ClearValuesArray"* nonnull %8, %"class.rx::vk::ClearValuesArray"* dereferenceable(168) %167) #16
  %168 = icmp eq i8 %164, 0
  br i1 %168, label %213, label %169

169:                                              ; preds = %162
  %170 = zext i8 %164 to i32
  %171 = call i32 @llvm.cttz.i32(i32 %170, i1 true) #16, !range !2
  %172 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %173 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10, i32 0
  br label %174

174:                                              ; preds = %210, %169
  %175 = phi i8 [ %164, %169 ], [ %208, %210 ]
  %176 = phi i32 [ %171, %169 ], [ %212, %210 ]
  %177 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %10, align 8
  %178 = zext i32 %176 to i64
  %179 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 1, i32 0, i64 %178
  %180 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %179, align 8
  %181 = icmp eq %"class.rx::RenderTargetVk"* %180, null
  br i1 %181, label %204, label %182

182:                                              ; preds = %174
  br i1 %165, label %183, label %196

183:                                              ; preds = %182
  %184 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %172, align 8
  %185 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %184, i64 0, i32 9, i32 0
  %186 = load i8, i8* %185, align 1, !noalias !90
  %187 = shl i32 1, %176
  %188 = trunc i32 %187 to i8
  %189 = and i8 %186, %188
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %196, label %191

191:                                              ; preds = %183
  %192 = load i32, i32* %173, align 4
  %193 = lshr i32 %192, 6
  %194 = and i32 %193, 511
  %195 = call i32 @_ZN2rx14RenderTargetVk18flushStagedUpdatesEPNS_9ContextVkEPNS_2vk16ClearValuesArrayEjj(%"class.rx::RenderTargetVk"* nonnull %180, %"class.rx::ContextVk"* %177, %"class.rx::vk::ClearValuesArray"* %167, i32 %176, i32 %194) #16
  br label %201

196:                                              ; preds = %183, %182
  %197 = load i32, i32* %173, align 4
  %198 = lshr i32 %197, 6
  %199 = and i32 %198, 511
  %200 = call i32 @_ZN2rx14RenderTargetVk18flushStagedUpdatesEPNS_9ContextVkEPNS_2vk16ClearValuesArrayEjj(%"class.rx::RenderTargetVk"* nonnull %180, %"class.rx::ContextVk"* %177, %"class.rx::vk::ClearValuesArray"* null, i32 0, i32 %199) #16
  br label %201

201:                                              ; preds = %191, %196
  %202 = phi i32 [ %195, %191 ], [ %200, %196 ]
  %203 = icmp eq i32 %202, 1
  br i1 %203, label %243, label %204

204:                                              ; preds = %201, %174
  %205 = shl i32 1, %176
  %206 = trunc i32 %205 to i8
  %207 = xor i8 %206, -1
  %208 = and i8 %175, %207
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %213, label %210

210:                                              ; preds = %204
  %211 = zext i8 %208 to i32
  %212 = call i32 @llvm.cttz.i32(i32 %211, i1 true) #16, !range !2
  br label %174

213:                                              ; preds = %204, %162
  %214 = and i8 %163, 1
  %215 = icmp eq i8 %214, 0
  br i1 %215, label %233, label %216

216:                                              ; preds = %213
  %217 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %10, align 8
  %218 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 2
  %219 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %218, align 8
  %220 = icmp eq %"class.rx::RenderTargetVk"* %219, null
  br i1 %220, label %233, label %221

221:                                              ; preds = %216
  %222 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = lshr i32 %223, 6
  %225 = and i32 %224, 511
  br i1 %165, label %226, label %228

226:                                              ; preds = %221
  %227 = call i32 @_ZN2rx14RenderTargetVk18flushStagedUpdatesEPNS_9ContextVkEPNS_2vk16ClearValuesArrayEjj(%"class.rx::RenderTargetVk"* nonnull %219, %"class.rx::ContextVk"* %217, %"class.rx::vk::ClearValuesArray"* %167, i32 8, i32 %225) #16
  br label %230

228:                                              ; preds = %221
  %229 = call i32 @_ZN2rx14RenderTargetVk18flushStagedUpdatesEPNS_9ContextVkEPNS_2vk16ClearValuesArrayEjj(%"class.rx::RenderTargetVk"* nonnull %219, %"class.rx::ContextVk"* %217, %"class.rx::vk::ClearValuesArray"* null, i32 0, i32 %225) #16
  br label %230

230:                                              ; preds = %226, %228
  %231 = phi i32 [ %227, %226 ], [ %229, %228 ]
  %232 = icmp eq i32 %231, 1
  br i1 %232, label %243, label %233

233:                                              ; preds = %230, %216, %213
  %234 = call zeroext i1 @_ZNK2rx2vk15FramebufferDesceqERKS1_(%"class.rx::vk::FramebufferDesc"* %13, %"class.rx::vk::FramebufferDesc"* nonnull dereferenceable(148) %7) #16
  br i1 %234, label %243, label %235

235:                                              ; preds = %233
  %236 = icmp eq i32 %4, 0
  br i1 %236, label %240, label %237

237:                                              ; preds = %235
  %238 = call i32 @_ZN2rx9ContextVk29flushCommandsAndEndRenderPassEv(%"class.rx::ContextVk"* %11) #16
  %239 = icmp eq i32 %238, 1
  br i1 %239, label %243, label %240

240:                                              ; preds = %237, %235
  call void @_ZN2rx13FramebufferVk20updateRenderPassDescEPNS_9ContextVkE(%"class.rx::FramebufferVk"* %0, %"class.rx::ContextVk"* %11)
  %241 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 4
  store %"class.rx::vk::FramebufferHelper"* null, %"class.rx::vk::FramebufferHelper"** %241, align 8
  %242 = call i32 @_ZN2rx9ContextVk19onFramebufferChangeEPNS_13FramebufferVkE(%"class.rx::ContextVk"* %11, %"class.rx::FramebufferVk"* %0) #16
  br label %243

243:                                              ; preds = %201, %237, %230, %233, %240
  %244 = phi i32 [ %242, %240 ], [ 1, %237 ], [ 1, %230 ], [ 0, %233 ], [ 1, %201 ]
  call void @_ZN2rx2vk16ClearValuesArrayD1Ev(%"class.rx::vk::ClearValuesArray"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %166) #16
  br label %245

245:                                              ; preds = %60, %53, %71, %243
  %246 = phi i32 [ %244, %243 ], [ 1, %71 ], [ 1, %53 ], [ 1, %60 ]
  call void @_ZN2rx2vk15FramebufferDescD1Ev(%"class.rx::vk::FramebufferDesc"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 148, i8* nonnull %12) #16
  ret i32 %246
}

declare void @_ZN2rx2vk15FramebufferDescC1ERKS1_(%"class.rx::vk::FramebufferDesc"*, %"class.rx::vk::FramebufferDesc"* dereferenceable(148)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2rx17RenderTargetCacheINS_14RenderTargetVkEE6updateEPKN2gl7ContextERKNS3_16FramebufferStateERKN5angle7BitSetTILm28EmmEE(%"class.rx::RenderTargetCache"*, %"class.gl::Context"*, %"class.gl::FramebufferState"* dereferenceable(464), %"class.angle::BitSetT.332"* dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca %"class.rx::RenderTargetVk"*, align 8
  %6 = alloca %"class.rx::RenderTargetVk"*, align 8
  %7 = getelementptr inbounds %"class.angle::BitSetT.332", %"class.angle::BitSetT.332"* %3, i64 0, i32 0
  %8 = load i64, i64* %7, align 8, !noalias !93
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %71, label %10

10:                                               ; preds = %4
  %11 = tail call i64 @llvm.cttz.i64(i64 %8, i1 true) #16, !range !86
  %12 = bitcast %"class.rx::RenderTargetVk"** %6 to i8*
  %13 = bitcast %"class.rx::RenderTargetVk"** %6 to %"class.rx::FramebufferAttachmentRenderTarget"**
  %14 = bitcast %"class.rx::RenderTargetVk"** %6 to i64*
  %15 = bitcast %"class.rx::RenderTargetCache"* %0 to i64*
  %16 = getelementptr inbounds %"class.rx::RenderTargetCache", %"class.rx::RenderTargetCache"* %0, i64 0, i32 2
  %17 = bitcast %"class.rx::RenderTargetVk"** %5 to i8*
  %18 = bitcast %"class.rx::RenderTargetVk"** %5 to %"class.rx::FramebufferAttachmentRenderTarget"**
  %19 = bitcast %"class.rx::RenderTargetVk"** %5 to i64*
  %20 = bitcast %"class.rx::RenderTargetVk"** %16 to i64*
  br label %21

21:                                               ; preds = %10, %65
  %22 = phi i64 [ %11, %10 ], [ %70, %65 ]
  %23 = phi i64 [ %8, %10 ], [ %68, %65 ]
  switch i64 %22, label %58 [
    i64 8, label %24
    i64 9, label %24
    i64 21, label %41
    i64 20, label %65
    i64 22, label %65
    i64 23, label %65
    i64 24, label %65
    i64 25, label %65
  ]

24:                                               ; preds = %21, %21
  %25 = call %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState27getDepthOrStencilAttachmentEv(%"class.gl::FramebufferState"* %2) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  store %"class.rx::RenderTargetVk"* null, %"class.rx::RenderTargetVk"** %5, align 8
  %26 = icmp eq %"class.gl::FramebufferAttachment"* %25, null
  br i1 %26, label %39, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %25, i64 0, i32 6
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %25, i64 0, i32 2
  %31 = load %"class.gl::FramebufferAttachmentObject"*, %"class.gl::FramebufferAttachmentObject"** %30, align 8
  %32 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %25, i64 0, i32 1, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %25, i64 0, i32 1, i32 1
  %35 = call i32 @_ZNK2gl27FramebufferAttachmentObject25getAttachmentRenderTargetEPKNS_7ContextEjRKNS_10ImageIndexEiPPN2rx33FramebufferAttachmentRenderTargetE(%"class.gl::FramebufferAttachmentObject"* %31, %"class.gl::Context"* %1, i32 %33, %"class.gl::ImageIndex"* dereferenceable(16) %34, i32 %29, %"class.rx::FramebufferAttachmentRenderTarget"** nonnull %18) #16
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %64, label %37

37:                                               ; preds = %27
  %38 = load i64, i64* %19, align 8
  br label %39

39:                                               ; preds = %24, %37
  %40 = phi i64 [ %38, %37 ], [ 0, %24 ]
  store i64 %40, i64* %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %65

41:                                               ; preds = %21
  %42 = call %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState17getReadAttachmentEv(%"class.gl::FramebufferState"* %2) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #16
  store %"class.rx::RenderTargetVk"* null, %"class.rx::RenderTargetVk"** %6, align 8
  %43 = icmp eq %"class.gl::FramebufferAttachment"* %42, null
  br i1 %43, label %56, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %42, i64 0, i32 6
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %42, i64 0, i32 2
  %48 = load %"class.gl::FramebufferAttachmentObject"*, %"class.gl::FramebufferAttachmentObject"** %47, align 8
  %49 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %42, i64 0, i32 1, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %42, i64 0, i32 1, i32 1
  %52 = call i32 @_ZNK2gl27FramebufferAttachmentObject25getAttachmentRenderTargetEPKNS_7ContextEjRKNS_10ImageIndexEiPPN2rx33FramebufferAttachmentRenderTargetE(%"class.gl::FramebufferAttachmentObject"* %48, %"class.gl::Context"* %1, i32 %50, %"class.gl::ImageIndex"* dereferenceable(16) %51, i32 %46, %"class.rx::FramebufferAttachmentRenderTarget"** nonnull %13) #16
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %63, label %54

54:                                               ; preds = %44
  %55 = load i64, i64* %14, align 8
  br label %56

56:                                               ; preds = %41, %54
  %57 = phi i64 [ %55, %54 ], [ 0, %41 ]
  store i64 %57, i64* %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #16
  br label %65

58:                                               ; preds = %21
  %59 = icmp ult i64 %22, 8
  br i1 %59, label %60, label %65

60:                                               ; preds = %58
  %61 = call i32 @_ZN2rx17RenderTargetCacheINS_14RenderTargetVkEE23updateColorRenderTargetEPKN2gl7ContextERKNS3_16FramebufferStateEm(%"class.rx::RenderTargetCache"* %0, %"class.gl::Context"* %1, %"class.gl::FramebufferState"* dereferenceable(464) %2, i64 %22)
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %71, label %65

63:                                               ; preds = %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #16
  br label %71

64:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %71

65:                                               ; preds = %60, %21, %21, %21, %21, %21, %58, %39, %56
  %66 = shl i64 1, %22
  %67 = xor i64 %66, -1
  %68 = and i64 %23, %67
  %69 = icmp eq i64 %68, 0
  %70 = call i64 @llvm.cttz.i64(i64 %68, i1 true) #16, !range !86
  br i1 %69, label %71, label %21

71:                                               ; preds = %65, %60, %4, %64, %63
  %72 = phi i32 [ 1, %64 ], [ 1, %63 ], [ 0, %4 ], [ 0, %65 ], [ 1, %60 ]
  ret i32 %72
}

declare void @_ZN2rx2vk14RenderPassDesc19setWriteControlModeEN2gl20SrgbWriteControlModeE(%"class.rx::vk::RenderPassDesc"*, i32) local_unnamed_addr #1

declare i32 @_ZN2rx9ContextVk19onFramebufferChangeEPNS_13FramebufferVkE(%"class.rx::ContextVk"*, %"class.rx::FramebufferVk"*) local_unnamed_addr #1

declare void @_ZN2rx2vk16ClearValuesArrayC1ERKS1_(%"class.rx::vk::ClearValuesArray"*, %"class.rx::vk::ClearValuesArray"* dereferenceable(168)) unnamed_addr #1

declare zeroext i1 @_ZNK2rx2vk15FramebufferDesceqERKS1_(%"class.rx::vk::FramebufferDesc"*, %"class.rx::vk::FramebufferDesc"* dereferenceable(148)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13FramebufferVk20updateRenderPassDescEPNS_9ContextVkE(%"class.rx::FramebufferVk"*, %"class.rx::ContextVk"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.rx::vk::RenderPassDesc", align 4
  %4 = alloca %"class.angle::BitSetT.1442", align 2
  %5 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #16
  call void @_ZN2rx2vk14RenderPassDescC1Ev(%"class.rx::vk::RenderPassDesc"* nonnull %3) #16
  %6 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 2
  %7 = call dereferenceable(12) %"class.rx::vk::RenderPassDesc"* @_ZN2rx2vk14RenderPassDescaSERKS1_(%"class.rx::vk::RenderPassDesc"* %6, %"class.rx::vk::RenderPassDesc"* nonnull dereferenceable(12) %3) #16
  call void @_ZN2rx2vk14RenderPassDescD1Ev(%"class.rx::vk::RenderPassDesc"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #16
  %8 = call i32 @_ZNK2rx13FramebufferVk10getSamplesEv(%"class.rx::FramebufferVk"* %0)
  call void @_ZN2rx2vk14RenderPassDesc10setSamplesEi(%"class.rx::vk::RenderPassDesc"* %6, i32 %8) #16
  %9 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %10 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %9, align 8
  %11 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %10, i64 0, i32 6, i32 0
  %12 = load i8, i8* %11, align 1, !noalias !96
  br label %17

13:                                               ; preds = %41
  %14 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 2
  %15 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %14, align 8
  %16 = icmp eq %"class.rx::RenderTargetVk"* %15, null
  br i1 %16, label %58, label %44

17:                                               ; preds = %41, %2
  %18 = phi i64 [ 0, %2 ], [ %42, %41 ]
  %19 = trunc i64 %18 to i32
  %20 = shl i32 1, %19
  %21 = trunc i32 %20 to i8
  %22 = and i8 %12, %21
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %40, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 1, i32 0, i64 %18
  %26 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %25, align 8
  %27 = call dereferenceable(440) %"class.rx::vk::ImageHelper"* @_ZN2rx14RenderTargetVk21getImageForRenderPassEv(%"class.rx::RenderTargetVk"* %26) #16
  %28 = getelementptr inbounds %"class.rx::vk::ImageHelper", %"class.rx::vk::ImageHelper"* %27, i64 0, i32 11
  %29 = load %"struct.rx::vk::Format"*, %"struct.rx::vk::Format"** %28, align 8
  %30 = getelementptr inbounds %"struct.rx::vk::Format", %"struct.rx::vk::Format"* %29, i64 0, i32 0
  %31 = load i32, i32* %30, align 8
  call void @_ZN2rx2vk14RenderPassDesc19packColorAttachmentEmN5angle8FormatIDE(%"class.rx::vk::RenderPassDesc"* %6, i64 %18, i32 %31) #16
  %32 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %26, i64 0, i32 3
  %33 = load %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"** %32, align 8
  %34 = icmp eq %"class.rx::vk::ImageHelper"* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %26, i64 0, i32 8
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 2
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  call void @_ZN2rx2vk14RenderPassDesc26packColorResolveAttachmentEm(%"class.rx::vk::RenderPassDesc"* %6, i64 %18) #16
  br label %41

40:                                               ; preds = %17
  call void @_ZN2rx2vk14RenderPassDesc22packColorAttachmentGapEm(%"class.rx::vk::RenderPassDesc"* %6, i64 %18) #16
  br label %41

41:                                               ; preds = %35, %24, %39, %40
  %42 = add nuw nsw i64 %18, 1
  %43 = icmp eq i64 %42, 8
  br i1 %43, label %13, label %17

44:                                               ; preds = %13
  %45 = call dereferenceable(440) %"class.rx::vk::ImageHelper"* @_ZN2rx14RenderTargetVk21getImageForRenderPassEv(%"class.rx::RenderTargetVk"* nonnull %15) #16
  %46 = getelementptr inbounds %"class.rx::vk::ImageHelper", %"class.rx::vk::ImageHelper"* %45, i64 0, i32 11
  %47 = load %"struct.rx::vk::Format"*, %"struct.rx::vk::Format"** %46, align 8
  %48 = getelementptr inbounds %"struct.rx::vk::Format", %"struct.rx::vk::Format"* %47, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  call void @_ZN2rx2vk14RenderPassDesc26packDepthStencilAttachmentEN5angle8FormatIDE(%"class.rx::vk::RenderPassDesc"* %6, i32 %49) #16
  %50 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %15, i64 0, i32 3
  %51 = load %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"** %50, align 8
  %52 = icmp eq %"class.rx::vk::ImageHelper"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %44
  %54 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %15, i64 0, i32 8
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 2
  br i1 %56, label %58, label %57

57:                                               ; preds = %53
  call void @_ZN2rx2vk14RenderPassDesc33packDepthStencilResolveAttachmentEv(%"class.rx::vk::RenderPassDesc"* %6) #16
  br label %58

58:                                               ; preds = %53, %44, %13, %57
  %59 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 0, i32 1
  %60 = load %"class.gl::State"*, %"class.gl::State"** %59, align 8
  %61 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %60, i64 0, i32 65
  %62 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %61, align 8
  %63 = icmp eq %"class.gl::ProgramExecutable"* %62, null
  br i1 %63, label %64, label %68

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %6, i64 0, i32 0
  %66 = load i8, i8* %65, align 4
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %74, label %77

68:                                               ; preds = %58
  %69 = call zeroext i1 @_ZNK2gl17ProgramExecutable20usesFramebufferFetchEv(%"class.gl::ProgramExecutable"* nonnull %62) #16
  %70 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %6, i64 0, i32 0
  %71 = load i8, i8* %70, align 4
  %72 = icmp slt i8 %71, 0
  %73 = xor i1 %69, %72
  br i1 %73, label %74, label %77

74:                                               ; preds = %64, %68
  %75 = phi i1 [ false, %64 ], [ %69, %68 ]
  %76 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10
  call void @_ZN2rx2vk15FramebufferDesc26updateFramebufferFetchModeEb(%"class.rx::vk::FramebufferDesc"* %76, i1 zeroext %75) #16
  call void @_ZN2rx2vk14RenderPassDesc23setFramebufferFetchModeEb(%"class.rx::vk::RenderPassDesc"* %6, i1 zeroext %75) #16
  br label %77

77:                                               ; preds = %64, %74, %68
  %78 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %79 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %78, align 8
  %80 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %79, i64 0, i32 7, i32 31, i32 4
  %81 = load i8, i8* %80, align 8, !range !8
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %135, label %83

83:                                               ; preds = %77
  %84 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %9, align 8
  %85 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %84, i64 0, i32 9, i32 0
  %86 = load i8, i8* %85, align 1, !noalias !99
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %119, label %88

88:                                               ; preds = %83
  %89 = zext i8 %86 to i32
  %90 = call i32 @llvm.cttz.i32(i32 %89, i1 true) #16, !range !2
  %91 = load i32, i32* @_ZN2gl21FramebufferAttachment30kDefaultRenderToTextureSamplesE, align 4
  %92 = zext i32 %90 to i64
  %93 = call %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState18getColorAttachmentEm(%"class.gl::FramebufferState"* %84, i64 %92) #16
  %94 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %93, i64 0, i32 6
  %95 = load i32, i32* %94, align 4
  %96 = icmp ne i32 %95, %91
  br i1 %96, label %115, label %97

97:                                               ; preds = %88, %106
  %98 = phi i1 [ %114, %106 ], [ %96, %88 ]
  %99 = phi i32 [ %108, %106 ], [ %90, %88 ]
  %100 = phi i8 [ %104, %106 ], [ %86, %88 ]
  %101 = shl i32 1, %99
  %102 = trunc i32 %101 to i8
  %103 = xor i8 %102, -1
  %104 = and i8 %100, %103
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %115, label %106

106:                                              ; preds = %97
  %107 = zext i8 %104 to i32
  %108 = call i32 @llvm.cttz.i32(i32 %107, i1 true) #16, !range !2
  %109 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %9, align 8
  %110 = zext i32 %108 to i64
  %111 = call %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState18getColorAttachmentEm(%"class.gl::FramebufferState"* %109, i64 %110) #16
  %112 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %111, i64 0, i32 6
  %113 = load i32, i32* %112, align 4
  %114 = icmp ne i32 %113, %91
  br i1 %114, label %115, label %97

115:                                              ; preds = %106, %97, %88
  %116 = phi i1 [ %96, %88 ], [ %114, %106 ], [ %98, %97 ]
  %117 = zext i1 %116 to i8
  %118 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %9, align 8
  br label %119

119:                                              ; preds = %83, %115
  %120 = phi %"class.gl::FramebufferState"* [ %118, %115 ], [ %84, %83 ]
  %121 = phi i8 [ %117, %115 ], [ 0, %83 ]
  %122 = call %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState25getDepthStencilAttachmentEv(%"class.gl::FramebufferState"* %120) #16
  %123 = icmp eq %"class.gl::FramebufferAttachment"* %122, null
  br i1 %123, label %130, label %124

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %122, i64 0, i32 6
  %126 = load i32, i32* %125, align 4
  %127 = load i32, i32* @_ZN2gl21FramebufferAttachment30kDefaultRenderToTextureSamplesE, align 4
  %128 = icmp eq i32 %126, %127
  %129 = select i1 %128, i8 %121, i8 1
  br label %130

130:                                              ; preds = %124, %119
  %131 = phi i8 [ %121, %119 ], [ %129, %124 ]
  %132 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10
  %133 = and i8 %131, 1
  %134 = icmp ne i8 %133, 0
  call void @_ZN2rx2vk15FramebufferDesc21updateRenderToTextureEb(%"class.rx::vk::FramebufferDesc"* %132, i1 zeroext %134) #16
  call void @_ZN2rx2vk14RenderPassDesc21updateRenderToTextureEb(%"class.rx::vk::RenderPassDesc"* %6, i1 zeroext %134) #16
  br label %135

135:                                              ; preds = %77, %130
  %136 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10
  %137 = getelementptr inbounds %"class.angle::BitSetT.1442", %"class.angle::BitSetT.1442"* %4, i64 0, i32 0
  store i16 0, i16* %137, align 2
  call void @_ZN2rx2vk15FramebufferDesc19updateUnresolveMaskEN5angle7BitSetTILm9EtmEE(%"class.rx::vk::FramebufferDesc"* %136, %"class.angle::BitSetT.1442"* nonnull %4) #16
  %138 = getelementptr inbounds %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferDesc"* %136, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  %140 = lshr i32 %139, 15
  %141 = and i32 %140, 1
  call void @_ZN2rx2vk14RenderPassDesc19setWriteControlModeEN2gl20SrgbWriteControlModeE(%"class.rx::vk::RenderPassDesc"* %6, i32 %141) #16
  ret void
}

declare dereferenceable(12) %"class.rx::vk::RenderPassDesc"* @_ZN2rx2vk14RenderPassDescaSERKS1_(%"class.rx::vk::RenderPassDesc"*, %"class.rx::vk::RenderPassDesc"* dereferenceable(12)) local_unnamed_addr #1

declare void @_ZN2rx2vk14RenderPassDesc10setSamplesEi(%"class.rx::vk::RenderPassDesc"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2rx13FramebufferVk10getSamplesEv(%"class.rx::FramebufferVk"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %2, align 8
  %4 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %3, i64 0, i32 9, i32 0
  %5 = load i8, i8* %4, align 1, !noalias !102
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %36, label %7

7:                                                ; preds = %1
  %8 = zext i8 %5 to i32
  %9 = tail call i32 @llvm.cttz.i32(i32 %8, i1 true) #16, !range !2
  %10 = load i32, i32* @_ZN2gl21FramebufferAttachment30kDefaultRenderToTextureSamplesE, align 4
  %11 = zext i32 %9 to i64
  %12 = tail call %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState18getColorAttachmentEm(%"class.gl::FramebufferState"* %3, i64 %11) #16
  %13 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %12, i64 0, i32 6
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, %10
  br i1 %15, label %16, label %67

16:                                               ; preds = %7, %25
  %17 = phi %"class.gl::FramebufferAttachment"* [ %30, %25 ], [ %12, %7 ]
  %18 = phi i8 [ %23, %25 ], [ %5, %7 ]
  %19 = phi i32 [ %27, %25 ], [ %9, %7 ]
  %20 = shl i32 1, %19
  %21 = trunc i32 %20 to i8
  %22 = xor i8 %21, -1
  %23 = and i8 %18, %22
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %34, label %25

25:                                               ; preds = %16
  %26 = zext i8 %23 to i32
  %27 = tail call i32 @llvm.cttz.i32(i32 %26, i1 true) #16, !range !2
  %28 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %2, align 8
  %29 = zext i32 %27 to i64
  %30 = tail call %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState18getColorAttachmentEm(%"class.gl::FramebufferState"* %28, i64 %29) #16
  %31 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %30, i64 0, i32 6
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, %10
  br i1 %33, label %16, label %67

34:                                               ; preds = %16
  %35 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %2, align 8
  br label %36

36:                                               ; preds = %1, %34
  %37 = phi %"class.gl::FramebufferAttachment"* [ %17, %34 ], [ null, %1 ]
  %38 = phi %"class.gl::FramebufferState"* [ %35, %34 ], [ %3, %1 ]
  %39 = tail call %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState27getDepthOrStencilAttachmentEv(%"class.gl::FramebufferState"* %38) #16
  %40 = icmp eq %"class.gl::FramebufferAttachment"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %39, i64 0, i32 6
  %43 = load i32, i32* %42, align 4
  %44 = load i32, i32* @_ZN2gl21FramebufferAttachment30kDefaultRenderToTextureSamplesE, align 4
  %45 = icmp eq i32 %43, %44
  br i1 %45, label %53, label %67

46:                                               ; preds = %36
  %47 = icmp eq %"class.gl::FramebufferAttachment"* %37, null
  br i1 %47, label %67, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %37, i64 0, i32 6
  %50 = load i32, i32* %49, align 4
  %51 = load i32, i32* @_ZN2gl21FramebufferAttachment30kDefaultRenderToTextureSamplesE, align 4
  %52 = icmp eq i32 %50, %51
  br i1 %52, label %53, label %63

53:                                               ; preds = %41, %48
  %54 = phi %"class.gl::FramebufferAttachment"* [ %37, %48 ], [ %39, %41 ]
  %55 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %54, i64 0, i32 2
  %56 = load %"class.gl::FramebufferAttachmentObject"*, %"class.gl::FramebufferAttachmentObject"** %55, align 8
  %57 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %54, i64 0, i32 1, i32 1
  %58 = bitcast %"class.gl::FramebufferAttachmentObject"* %56 to i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)***
  %59 = load i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)**, i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)*** %58, align 8
  %60 = getelementptr inbounds i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)*, i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)** %59, i64 4
  %61 = load i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)*, i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)** %60, align 8
  %62 = tail call i32 %61(%"class.gl::FramebufferAttachmentObject"* %56, %"class.gl::ImageIndex"* dereferenceable(16) %57) #16
  br label %63

63:                                               ; preds = %53, %48
  %64 = phi i32 [ %62, %53 ], [ %50, %48 ]
  %65 = icmp sgt i32 %64, 1
  %66 = select i1 %65, i32 %64, i32 1
  ret i32 %66

67:                                               ; preds = %25, %7, %41, %46
  %68 = phi i32 [ 1, %46 ], [ %43, %41 ], [ %14, %7 ], [ %32, %25 ]
  ret i32 %68
}

declare void @_ZN2rx2vk14RenderPassDesc19packColorAttachmentEmN5angle8FormatIDE(%"class.rx::vk::RenderPassDesc"*, i64, i32) local_unnamed_addr #1

declare dereferenceable(440) %"class.rx::vk::ImageHelper"* @_ZN2rx14RenderTargetVk21getImageForRenderPassEv(%"class.rx::RenderTargetVk"*) local_unnamed_addr #1

declare void @_ZN2rx2vk14RenderPassDesc22packColorAttachmentGapEm(%"class.rx::vk::RenderPassDesc"*, i64) local_unnamed_addr #1

declare void @_ZN2rx2vk14RenderPassDesc26packDepthStencilAttachmentEN5angle8FormatIDE(%"class.rx::vk::RenderPassDesc"*, i32) local_unnamed_addr #1

declare void @_ZN2rx2vk14RenderPassDesc33packDepthStencilResolveAttachmentEv(%"class.rx::vk::RenderPassDesc"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2gl17ProgramExecutable20usesFramebufferFetchEv(%"class.gl::ProgramExecutable"*) local_unnamed_addr #1

declare void @_ZN2rx2vk15FramebufferDesc26updateFramebufferFetchModeEb(%"class.rx::vk::FramebufferDesc"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN2rx2vk14RenderPassDesc23setFramebufferFetchModeEb(%"class.rx::vk::RenderPassDesc"*, i1 zeroext) local_unnamed_addr #1

declare %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState18getColorAttachmentEm(%"class.gl::FramebufferState"*, i64) local_unnamed_addr #1

declare %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState25getDepthStencilAttachmentEv(%"class.gl::FramebufferState"*) local_unnamed_addr #1

declare void @_ZN2rx2vk15FramebufferDesc21updateRenderToTextureEb(%"class.rx::vk::FramebufferDesc"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN2rx2vk14RenderPassDesc21updateRenderToTextureEb(%"class.rx::vk::RenderPassDesc"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN2rx2vk15FramebufferDesc19updateUnresolveMaskEN5angle7BitSetTILm9EtmEE(%"class.rx::vk::FramebufferDesc"*, %"class.angle::BitSetT.1442"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2rx16FramebufferCache3getEPNS_9ContextVkERKNS_2vk15FramebufferDescEPPNS3_17FramebufferHelperE(%"class.rx::FramebufferCache"*, %"class.rx::ContextVk"* nocapture readnone, %"class.rx::vk::FramebufferDesc"* dereferenceable(148), %"class.rx::vk::FramebufferHelper"** nocapture) local_unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"class.rx::FramebufferCache", %"class.rx::FramebufferCache"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = tail call { i8*, %"union.absl::container_internal::map_slot_type.831"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE4findIS5_EENSJ_8iteratorERSG_(%"class.absl::container_internal::raw_hash_set.830"* %5, %"class.rx::vk::FramebufferDesc"* dereferenceable(148) %2)
  %7 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.831"* } %6, 0
  %8 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.831"* } %6, 1
  %9 = icmp eq i8* %7, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %4
  %11 = load i8, i8* %7, align 1
  %12 = icmp sgt i8 %11, -1
  br i1 %12, label %14, label %13, !prof !3

13:                                               ; preds = %10
  tail call void @llvm.trap() #16
  unreachable

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %8, i64 0, i32 0, i32 1
  store %"class.rx::vk::FramebufferHelper"* %15, %"class.rx::vk::FramebufferHelper"** %3, align 8
  %16 = getelementptr inbounds %"class.rx::FramebufferCache", %"class.rx::FramebufferCache"* %0, i64 0, i32 1, i32 0
  br label %19

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.rx::FramebufferCache", %"class.rx::FramebufferCache"* %0, i64 0, i32 1, i32 1
  br label %19

19:                                               ; preds = %17, %14
  %20 = phi i64* [ %18, %17 ], [ %16, %14 ]
  %21 = phi i1 [ false, %17 ], [ true, %14 ]
  %22 = load i64, i64* %20, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %20, align 8
  ret i1 %21
}

declare i32 @_ZN2rx9ContextVk23getCompatibleRenderPassERKNS_2vk14RenderPassDescEPPNS1_10RenderPassE(%"class.rx::ContextVk"*, %"class.rx::vk::RenderPassDesc"* dereferenceable(12), %"class.rx::vk::RenderPass"**) local_unnamed_addr #1

declare i32 @_ZN2rx15WindowSurfaceVk21getCurrentFramebufferEPNS_9ContextVkERKNS_2vk10RenderPassEPPNS3_11FramebufferE(%"class.rx::WindowSurfaceVk"*, %"class.rx::ContextVk"*, %"class.rx::vk::RenderPass"* dereferenceable(8), %"class.rx::vk::Framebuffer"**) local_unnamed_addr #1

declare { i64, i32 } @_ZNK2gl16FramebufferState10getExtentsEv(%"class.gl::FramebufferState"*) local_unnamed_addr #1

declare i32 @_ZNK2rx14RenderTargetVk26getImageViewWithColorspaceEPNS_9ContextVkEN2gl20SrgbWriteControlModeEPPKNS_2vk9ImageViewE(%"class.rx::RenderTargetVk"*, %"class.rx::ContextVk"*, i32, %"class.rx::vk::ImageView"**) local_unnamed_addr #1

declare i32 @_ZNK2rx14RenderTargetVk19getResolveImageViewEPNS_9ContextVkEPPKNS_2vk9ImageViewE(%"class.rx::RenderTargetVk"*, %"class.rx::ContextVk"*, %"class.rx::vk::ImageView"**) local_unnamed_addr #1

declare void @_ZN2rx2vk17FramebufferHelperC1Ev(%"class.rx::vk::FramebufferHelper"*) unnamed_addr #1

declare i32 @_ZN2rx2vk17FramebufferHelper4initEPNS_9ContextVkERK23VkFramebufferCreateInfo(%"class.rx::vk::FramebufferHelper"*, %"class.rx::ContextVk"*, %struct.VkFramebufferCreateInfo* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx16FramebufferCache6insertERKNS_2vk15FramebufferDescEONS1_17FramebufferHelperE(%"class.rx::FramebufferCache"*, %"class.rx::vk::FramebufferDesc"* dereferenceable(148), %"class.rx::vk::FramebufferHelper"* dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.rx::FramebufferCache", %"class.rx::FramebufferCache"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = tail call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE22find_or_prepare_insertIS5_EENSF_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.830"* %4, %"class.rx::vk::FramebufferDesc"* dereferenceable(148) %1) #16, !noalias !105
  %6 = extractvalue { i64, i8 } %5, 0
  %7 = extractvalue { i64, i8 } %5, 1
  %8 = and i8 %7, 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.rx::FramebufferCache", %"class.rx::FramebufferCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = load %"union.absl::container_internal::map_slot_type.831"*, %"union.absl::container_internal::map_slot_type.831"** %11, align 8, !noalias !105
  %13 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %12, i64 %6, i32 0, i32 0
  tail call void @_ZN2rx2vk15FramebufferDescC1ERKS1_(%"class.rx::vk::FramebufferDesc"* %13, %"class.rx::vk::FramebufferDesc"* dereferenceable(148) %1) #16, !noalias !105
  %14 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %12, i64 %6, i32 0, i32 1
  tail call void @_ZN2rx2vk17FramebufferHelperC1EOS1_(%"class.rx::vk::FramebufferHelper"* %14, %"class.rx::vk::FramebufferHelper"* dereferenceable(24) %2) #16, !noalias !105
  br label %15

15:                                               ; preds = %3, %10
  %16 = getelementptr inbounds %"class.rx::FramebufferCache", %"class.rx::FramebufferCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8, !noalias !105
  %18 = getelementptr inbounds i8, i8* %17, i64 %6
  %19 = icmp ne i8* %18, null
  tail call void @llvm.assume(i1 %19) #16, !noalias !105
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2rx2vk17FramebufferHelperD1Ev(%"class.rx::vk::FramebufferHelper"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK2rx13FramebufferVk27getCorrectedColorClearValueEmRK17VkClearColorValue(%"class.rx::FramebufferVk"* nocapture readonly, i64, %union.VkClearColorValue* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %4 = bitcast %union.VkClearColorValue* %2 to i64*
  %5 = load i64, i64* %4, align 4
  %6 = getelementptr inbounds %union.VkClearColorValue, %union.VkClearColorValue* %2, i64 0, i32 0, i64 2
  %7 = bitcast float* %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %union.VkClearColorValue, %union.VkClearColorValue* %2, i64 0, i32 0, i64 3
  %10 = bitcast float* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 8, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = trunc i64 %1 to i32
  %15 = shl i32 1, %14
  %16 = trunc i32 %15 to i8
  %17 = and i8 %13, %16
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %27, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 1, i32 0, i64 %1
  %21 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %20, align 8
  %22 = tail call dereferenceable(64) %"struct.rx::vk::Format"* @_ZNK2rx14RenderTargetVk14getImageFormatEv(%"class.rx::RenderTargetVk"* %21) #16
  %23 = getelementptr inbounds %"struct.rx::vk::Format", %"struct.rx::vk::Format"* %22, i64 0, i32 14
  %24 = load i8, i8* %23, align 4, !range !8
  %25 = icmp eq i8 %24, 0
  %26 = select i1 %25, i32 1065353216, i32 1
  br label %27

27:                                               ; preds = %3, %19
  %28 = phi i32 [ %26, %19 ], [ %11, %3 ]
  %29 = insertvalue { i64, i64 } undef, i64 %5, 0
  %30 = zext i32 %28 to i64
  %31 = shl nuw i64 %30, 32
  %32 = zext i32 %8 to i64
  %33 = or i64 %31, %32
  %34 = insertvalue { i64, i64 } %29, i64 %33, 1
  ret { i64, i64 } %34
}

declare void @_ZN2rx2vk16ClearValuesArray5storeEjjRK12VkClearValue(%"class.rx::vk::ClearValuesArray"*, i32, i32, %union.VkClearValue* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN2rx7UtilsVk26ClearFramebufferParametersC1Ev(%"struct.rx::UtilsVk::ClearFramebufferParameters"*) unnamed_addr #1

declare dereferenceable(440) %"class.rx::vk::ImageHelper"* @_ZNK2rx14RenderTargetVk21getImageForRenderPassEv(%"class.rx::RenderTargetVk"*) local_unnamed_addr #1

declare i32 @_ZN2rx7UtilsVk16clearFramebufferEPNS_9ContextVkEPNS_13FramebufferVkERKNS0_26ClearFramebufferParametersE(%"class.rx::UtilsVk"*, %"class.rx::ContextVk"*, %"class.rx::FramebufferVk"*, %"struct.rx::UtilsVk::ClearFramebufferParameters"* dereferenceable(64)) local_unnamed_addr #1

declare void @_ZNK2rx2vk16ClearValuesArray12getColorMaskEv(%"class.angle::BitSetT"* sret, %"class.rx::vk::ClearValuesArray"*) local_unnamed_addr #1

declare void @_ZNK2rx14RenderTargetVk21getImageIndexForClearEj(%"class.gl::ImageIndex"* sret, %"class.rx::RenderTargetVk"*, i32) local_unnamed_addr #1

declare void @_ZN2rx2vk11ImageHelper10stageClearERKN2gl10ImageIndexEjRK12VkClearValue(%"class.rx::vk::ImageHelper"*, %"class.gl::ImageIndex"* dereferenceable(16), i32, %union.VkClearValue* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN2rx2vk19CommandBufferHelper14growRenderAreaEPNS_9ContextVkERKN2gl9RectangleE(%"class.rx::vk::CommandBufferHelper"*, %"class.rx::ContextVk"*, %"struct.gl::Rectangle"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN2rx2vk19CommandBufferHelper13onDepthAccessENS0_14ResourceAccessE(%"class.rx::vk::CommandBufferHelper"*, i32) local_unnamed_addr #1

declare void @_ZN2rx2vk19CommandBufferHelper15onStencilAccessENS0_14ResourceAccessE(%"class.rx::vk::CommandBufferHelper"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13FramebufferVk33updateRenderPassReadOnlyDepthModeEPNS_9ContextVkEPNS_2vk19CommandBufferHelperE(%"class.rx::FramebufferVk"* nocapture readonly, %"class.rx::ContextVk"* nocapture readnone, %"class.rx::vk::CommandBufferHelper"*) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 2
  %5 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %4, align 8
  %6 = icmp eq %"class.rx::RenderTargetVk"* %5, null
  br i1 %6, label %43, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %5, i64 0, i32 3
  %9 = load %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"** %8, align 8
  %10 = icmp eq %"class.rx::vk::ImageHelper"* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %5, i64 0, i32 8
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %15, label %43

15:                                               ; preds = %11, %7
  %16 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 13
  %17 = load i8, i8* %16, align 8, !range !8
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %43

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %2, i64 0, i32 19
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 2
  br i1 %22, label %43, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %2, i64 0, i32 20
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 2
  br i1 %26, label %43, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %2, i64 0, i32 7
  %29 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %2, i64 0, i32 27, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = tail call dereferenceable(4) %"struct.rx::vk::PackedAttachmentOpsDesc"* @_ZNK2rx2vk18AttachmentOpsArrayixENS0_21PackedAttachmentIndexE(%"class.rx::vk::AttachmentOpsArray"* %28, i32 %30) #16
  %32 = getelementptr inbounds %"struct.rx::vk::PackedAttachmentOpsDesc", %"struct.rx::vk::PackedAttachmentOpsDesc"* %31, i64 0, i32 0
  %33 = load i32, i32* %32, align 2
  %34 = and i32 %33, 3
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %43, label %36

36:                                               ; preds = %27
  %37 = load i32, i32* %29, align 4
  %38 = tail call dereferenceable(4) %"struct.rx::vk::PackedAttachmentOpsDesc"* @_ZNK2rx2vk18AttachmentOpsArrayixENS0_21PackedAttachmentIndexE(%"class.rx::vk::AttachmentOpsArray"* %28, i32 %37) #16
  %39 = getelementptr inbounds %"struct.rx::vk::PackedAttachmentOpsDesc", %"struct.rx::vk::PackedAttachmentOpsDesc"* %38, i64 0, i32 0
  %40 = load i32, i32* %39, align 2
  %41 = and i32 %40, 48
  %42 = icmp ne i32 %41, 16
  br label %43

43:                                               ; preds = %36, %27, %23, %19, %11, %15, %3
  %44 = phi i1 [ false, %11 ], [ false, %3 ], [ true, %15 ], [ false, %27 ], [ false, %23 ], [ false, %19 ], [ %42, %36 ]
  tail call void @_ZN2rx2vk19CommandBufferHelper36updateStartedRenderPassWithDepthModeEb(%"class.rx::vk::CommandBufferHelper"* %2, i1 zeroext %44) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2rx13FramebufferVk17getSamplePositionEPKN2gl7ContextEmPf(%"class.rx::FramebufferVk"* nocapture readonly, %"class.gl::Context"* nocapture readnone, i64, float*) unnamed_addr #3 align 2 {
  %5 = tail call i32 @_ZNK2rx13FramebufferVk10getSamplesEv(%"class.rx::FramebufferVk"* %0)
  tail call void @_ZN2rx17GetSamplePositionEimPf(i32 %5, i64 %2, float* %3) #16
  ret i32 0
}

declare void @_ZN2rx17GetSamplePositionEimPf(i32, i64, float*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferVk18startNewRenderPassEPNS_9ContextVkERKN2gl9RectangleEPPNS_2vk4priv22SecondaryCommandBufferEPb(%"class.rx::FramebufferVk"*, %"class.rx::ContextVk"*, %"struct.gl::Rectangle"* nocapture readonly dereferenceable(16), %"class.rx::vk::priv::SecondaryCommandBuffer"**, i8*) local_unnamed_addr #3 align 2 {
  %6 = alloca %"struct.gl::Box", align 4
  %7 = alloca %"class.rx::vk::AttachmentOpsArray", align 2
  %8 = alloca %"class.rx::vk::PackedClearValuesArray", align 4
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %union.VkClearValue*
  %11 = alloca %union.VkClearValue, align 4
  %12 = alloca %"class.angle::BitSetT.1442", align 2
  %13 = alloca %"class.rx::vk::Framebuffer"*, align 8
  %14 = alloca %"struct.gl::Rectangle", align 8
  %15 = alloca %"struct.rx::UtilsVk::UnresolveParameters", align 1
  %16 = tail call i32 @_ZN2rx9ContextVk29flushCommandsAndEndRenderPassEv(%"class.rx::ContextVk"* %1) #16
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %343, label %18

18:                                               ; preds = %5
  %19 = bitcast %"class.rx::vk::AttachmentOpsArray"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %19, i8 -86, i64 40, i1 false)
  call void @_ZN2rx2vk18AttachmentOpsArrayC1Ev(%"class.rx::vk::AttachmentOpsArray"* nonnull %7) #16
  %20 = bitcast %"class.rx::vk::PackedClearValuesArray"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %20) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %20, i8 -1, i64 160, i1 false)
  call void @_ZN2rx2vk22PackedClearValuesArrayC1Ev(%"class.rx::vk::PackedClearValuesArray"* nonnull %8) #16
  %21 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 2
  %22 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 2, i32 2, i32 0
  %23 = load i8, i8* %22, align 1, !noalias !118
  %24 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 1, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  %27 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 2, i32 3, i32 0, i64 8
  %28 = load i8, i8* %27, align 1
  %29 = and i8 %28, 32
  %30 = icmp ne i8 %29, 0
  %31 = and i8 %28, 16
  %32 = icmp ne i8 %31, 0
  %33 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 0, i32 1
  %34 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %33, align 8
  %35 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %34, i64 0, i32 6, i32 0
  %36 = load i8, i8* %35, align 1, !noalias !121
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %18
  %39 = zext i8 %36 to i32
  %40 = call i32 @llvm.cttz.i32(i32 %39, i1 true) #16, !range !2
  %41 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 8, i32 0
  %42 = bitcast { i64, i64 }* %9 to i8*
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %44 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %45 = bitcast { i64, i64 }* %9 to i8*
  br label %51

46:                                               ; preds = %114, %18
  %47 = phi i32 [ 0, %18 ], [ %115, %114 ]
  %48 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 2
  %49 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %48, align 8
  %50 = icmp ne %"class.rx::RenderTargetVk"* %49, null
  br i1 %50, label %125, label %230

51:                                               ; preds = %121, %38
  %52 = phi i64 [ %25, %38 ], [ %124, %121 ]
  %53 = phi i32 [ 0, %38 ], [ %115, %121 ]
  %54 = phi i32 [ %40, %38 ], [ %123, %121 ]
  %55 = phi i8 [ %36, %38 ], [ %119, %121 ]
  %56 = zext i32 %54 to i64
  %57 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 1, i32 0, i64 %56
  %58 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %57, align 8
  %59 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %58, i64 0, i32 8
  %60 = load i32, i32* %59, align 4
  %61 = icmp ne i32 %60, 0
  %62 = zext i1 %61 to i32
  %63 = shl i64 1, %56
  %64 = and i64 %52, %63
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %51
  call void @_ZN2rx2vk18AttachmentOpsArray6setOpsENS0_21PackedAttachmentIndexE18VkAttachmentLoadOpNS0_17RenderPassStoreOpE(%"class.rx::vk::AttachmentOpsArray"* nonnull %7, i32 %53, i32 1, i32 %62) #16
  %67 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 0, i32 0, i64 %56
  call void @_ZN2rx2vk22PackedClearValuesArray5storeENS0_21PackedAttachmentIndexEjRK12VkClearValue(%"class.rx::vk::PackedClearValuesArray"* nonnull %8, i32 %53, i32 1, %union.VkClearValue* dereferenceable(16) %67) #16
  %68 = bitcast %union.VkClearValue* %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %68, i8 0, i64 16, i1 false) #16
  %69 = xor i64 %63, -1
  %70 = load i64, i64* %24, align 8
  %71 = and i64 %70, %69
  store i64 %71, i64* %24, align 8
  br label %95

72:                                               ; preds = %51
  %73 = call zeroext i1 @_ZNK2rx14RenderTargetVk17hasDefinedContentEv(%"class.rx::RenderTargetVk"* %58) #16
  %74 = select i1 %73, i32 0, i32 2
  br i1 %73, label %94, label %75

75:                                               ; preds = %72
  %76 = load i8, i8* %41, align 1
  %77 = shl i32 1, %54
  %78 = trunc i32 %77 to i8
  %79 = and i8 %76, %78
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %94, label %81

81:                                               ; preds = %75
  call void @_ZN2rx2vk18AttachmentOpsArray6setOpsENS0_21PackedAttachmentIndexE18VkAttachmentLoadOpNS0_17RenderPassStoreOpE(%"class.rx::vk::AttachmentOpsArray"* nonnull %7, i32 %53, i32 1, i32 %62) #16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -1, i64 16, i1 false)
  %82 = load i8, i8* %41, align 1
  %83 = and i8 %82, %78
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %92, label %85

85:                                               ; preds = %81
  %86 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %57, align 8
  %87 = call dereferenceable(64) %"struct.rx::vk::Format"* @_ZNK2rx14RenderTargetVk14getImageFormatEv(%"class.rx::RenderTargetVk"* %86) #16
  %88 = getelementptr inbounds %"struct.rx::vk::Format", %"struct.rx::vk::Format"* %87, i64 0, i32 14
  %89 = load i8, i8* %88, align 4, !range !8
  %90 = icmp eq i8 %89, 0
  %91 = select i1 %90, i64 4575657221408423936, i64 4294967296
  br label %92

92:                                               ; preds = %81, %85
  %93 = phi i64 [ %91, %85 ], [ 0, %81 ]
  store i64 0, i64* %44, align 8
  store i64 %93, i64* %43, align 8
  call void @_ZN2rx2vk22PackedClearValuesArray5storeENS0_21PackedAttachmentIndexEjRK12VkClearValue(%"class.rx::vk::PackedClearValuesArray"* nonnull %8, i32 %53, i32 1, %union.VkClearValue* nonnull dereferenceable(16) %10) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #16
  br label %95

94:                                               ; preds = %75, %72
  call void @_ZN2rx2vk18AttachmentOpsArray6setOpsENS0_21PackedAttachmentIndexE18VkAttachmentLoadOpNS0_17RenderPassStoreOpE(%"class.rx::vk::AttachmentOpsArray"* nonnull %7, i32 %53, i32 %74, i32 %62) #16
  call void @_ZN2rx2vk22PackedClearValuesArray5storeENS0_21PackedAttachmentIndexEjRK12VkClearValue(%"class.rx::vk::PackedClearValuesArray"* nonnull %8, i32 %53, i32 1, %union.VkClearValue* nonnull dereferenceable(16) @_ZN2rx12_GLOBAL__N_124kUninitializedClearValueE) #16
  br label %95

95:                                               ; preds = %92, %94, %66
  call void @_ZN2rx2vk18AttachmentOpsArray13setStencilOpsENS0_21PackedAttachmentIndexE18VkAttachmentLoadOpNS0_17RenderPassStoreOpE(%"class.rx::vk::AttachmentOpsArray"* nonnull %7, i32 %53, i32 2, i32 1) #16
  %96 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %58, i64 0, i32 3
  %97 = load %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"** %96, align 8
  %98 = icmp eq %"class.rx::vk::ImageHelper"* %97, null
  br i1 %98, label %114, label %99

99:                                               ; preds = %95
  %100 = load i32, i32* %59, align 4
  switch i32 %100, label %101 [
    i32 2, label %114
    i32 0, label %114
  ]

101:                                              ; preds = %99
  %102 = call dereferenceable(4) %"struct.rx::vk::PackedAttachmentOpsDesc"* @_ZN2rx2vk18AttachmentOpsArrayixENS0_21PackedAttachmentIndexE(%"class.rx::vk::AttachmentOpsArray"* nonnull %7, i32 %53) #16
  %103 = getelementptr inbounds %"struct.rx::vk::PackedAttachmentOpsDesc", %"struct.rx::vk::PackedAttachmentOpsDesc"* %102, i64 0, i32 0
  %104 = load i32, i32* %103, align 2
  %105 = and i32 %104, 3
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %113

107:                                              ; preds = %101
  %108 = call dereferenceable(4) %"struct.rx::vk::PackedAttachmentOpsDesc"* @_ZN2rx2vk18AttachmentOpsArrayixENS0_21PackedAttachmentIndexE(%"class.rx::vk::AttachmentOpsArray"* nonnull %7, i32 %53) #16
  %109 = getelementptr inbounds %"struct.rx::vk::PackedAttachmentOpsDesc", %"struct.rx::vk::PackedAttachmentOpsDesc"* %108, i64 0, i32 0
  %110 = load i32, i32* %109, align 2
  %111 = and i32 %110, -4
  %112 = or i32 %111, 2
  store i32 %112, i32* %109, align 2
  call void @_ZN2rx2vk14RenderPassDesc28packColorUnresolveAttachmentEm(%"class.rx::vk::RenderPassDesc"* %21, i64 %56) #16
  br label %114

113:                                              ; preds = %101
  call void @_ZN2rx2vk14RenderPassDesc30removeColorUnresolveAttachmentEm(%"class.rx::vk::RenderPassDesc"* %21, i64 %56) #16
  br label %114

114:                                              ; preds = %99, %99, %95, %107, %113
  %115 = add i32 %53, 1
  %116 = shl i32 1, %54
  %117 = trunc i32 %116 to i8
  %118 = xor i8 %117, -1
  %119 = and i8 %55, %118
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %46, label %121

121:                                              ; preds = %114
  %122 = zext i8 %119 to i32
  %123 = call i32 @llvm.cttz.i32(i32 %122, i1 true) #16, !range !2
  %124 = load i64, i64* %24, align 8
  br label %51

125:                                              ; preds = %46
  %126 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %127 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %126, align 8
  %128 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %127, i64 0, i32 7, i32 24, i32 4
  %129 = load i8, i8* %128, align 8, !range !8
  %130 = icmp ne i8 %129, 0
  %131 = call zeroext i1 @_ZNK2rx14RenderTargetVk17hasDefinedContentEv(%"class.rx::RenderTargetVk"* nonnull %49) #16
  br i1 %131, label %132, label %136

132:                                              ; preds = %125
  %133 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %49, i64 0, i32 8
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, 2
  br i1 %135, label %136, label %137

136:                                              ; preds = %132, %125
  br label %137

137:                                              ; preds = %136, %132
  %138 = phi i32 [ 2, %136 ], [ 0, %132 ]
  %139 = call zeroext i1 @_ZNK2rx14RenderTargetVk24hasDefinedStencilContentEv(%"class.rx::RenderTargetVk"* nonnull %49) #16
  %140 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %49, i64 0, i32 8
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %137
  %143 = icmp eq i32 %141, 2
  br i1 %143, label %144, label %146

144:                                              ; preds = %137, %142
  %145 = phi i32 [ 2, %142 ], [ %141, %137 ]
  br label %146

146:                                              ; preds = %144, %142
  %147 = phi i32 [ %145, %144 ], [ %141, %142 ]
  %148 = phi i32 [ 2, %144 ], [ 0, %142 ]
  %149 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %49, i64 0, i32 8
  %150 = icmp eq i32 %147, 0
  br i1 %150, label %155, label %151

151:                                              ; preds = %146
  %152 = icmp eq i32 %147, 2
  %153 = or i1 %130, %152
  %154 = zext i1 %153 to i32
  br label %155

155:                                              ; preds = %146, %151
  %156 = phi i32 [ 0, %146 ], [ 1, %151 ]
  %157 = phi i32 [ 0, %146 ], [ %154, %151 ]
  %158 = load i64, i64* %24, align 8
  %159 = and i64 %158, 256
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %166

161:                                              ; preds = %155
  %162 = and i64 %158, 512
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %195, label %164

164:                                              ; preds = %161
  %165 = bitcast %union.VkClearValue* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %165) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %165, i8 0, i64 16, i1 false)
  br label %179

166:                                              ; preds = %155
  %167 = bitcast %union.VkClearValue* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %167) #16
  %168 = getelementptr inbounds %union.VkClearValue, %union.VkClearValue* %11, i64 0, i32 0, i32 0, i64 1
  %169 = bitcast float* %168 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %169, i8 0, i64 12, i1 false)
  %170 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 0, i32 0, i64 8, i32 0, i32 0, i64 0
  %171 = bitcast float* %170 to i32*
  %172 = load i32, i32* %171, align 4
  %173 = bitcast %union.VkClearValue* %11 to i32*
  store i32 %172, i32* %173, align 4
  %174 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 0, i32 0, i64 8
  %175 = bitcast %union.VkClearValue* %174 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %175, i8 0, i64 16, i1 false) #16
  %176 = and i64 %158, -257
  store i64 %176, i64* %24, align 8
  %177 = and i64 %158, 512
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %191, label %179

179:                                              ; preds = %164, %166
  %180 = phi i32 [ %138, %164 ], [ 1, %166 ]
  %181 = phi i8* [ %165, %164 ], [ %167, %166 ]
  %182 = phi i64 [ %158, %164 ], [ %176, %166 ]
  %183 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 0, i32 0, i64 9, i32 0, i32 0, i64 1
  %184 = bitcast float* %183 to i32*
  %185 = load i32, i32* %184, align 4
  %186 = getelementptr inbounds %union.VkClearValue, %union.VkClearValue* %11, i64 0, i32 0, i32 0, i64 1
  %187 = bitcast float* %186 to i32*
  store i32 %185, i32* %187, align 4
  %188 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 12, i32 0, i32 0, i64 9
  %189 = bitcast %union.VkClearValue* %188 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %189, i8 0, i64 16, i1 false) #16
  %190 = and i64 %182, -513
  store i64 %190, i64* %24, align 8
  br label %191

191:                                              ; preds = %166, %179
  %192 = phi i32 [ %180, %179 ], [ 1, %166 ]
  %193 = phi i8* [ %181, %179 ], [ %167, %166 ]
  %194 = phi i32 [ 1, %179 ], [ %148, %166 ]
  call void @_ZN2rx2vk22PackedClearValuesArray5storeENS0_21PackedAttachmentIndexEjRK12VkClearValue(%"class.rx::vk::PackedClearValuesArray"* nonnull %8, i32 %47, i32 2, %union.VkClearValue* nonnull dereferenceable(16) %11) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %193) #16
  br label %196

195:                                              ; preds = %161
  call void @_ZN2rx2vk22PackedClearValuesArray5storeENS0_21PackedAttachmentIndexEjRK12VkClearValue(%"class.rx::vk::PackedClearValuesArray"* nonnull %8, i32 %47, i32 2, %union.VkClearValue* nonnull dereferenceable(16) @_ZN2rx12_GLOBAL__N_124kUninitializedClearValueE) #16
  br label %196

196:                                              ; preds = %195, %191
  %197 = phi i32 [ %192, %191 ], [ %138, %195 ]
  %198 = phi i32 [ %194, %191 ], [ %148, %195 ]
  %199 = call dereferenceable(64) %"struct.rx::vk::Format"* @_ZNK2rx14RenderTargetVk14getImageFormatEv(%"class.rx::RenderTargetVk"* nonnull %49) #16
  %200 = getelementptr inbounds %"struct.rx::vk::Format", %"struct.rx::vk::Format"* %199, i64 0, i32 0
  %201 = load i32, i32* %200, align 8
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %202, i32 14
  %204 = load i32, i32* %203, align 4
  %205 = icmp eq i32 %204, 0
  %206 = select i1 %205, i32 2, i32 %198
  %207 = select i1 %205, i32 1, i32 %157
  %208 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %202, i32 13
  %209 = load i32, i32* %208, align 8
  %210 = icmp eq i32 %209, 0
  %211 = select i1 %210, i32 2, i32 %197
  %212 = select i1 %210, i32 1, i32 %156
  %213 = getelementptr inbounds %"class.rx::RenderTargetVk", %"class.rx::RenderTargetVk"* %49, i64 0, i32 3
  %214 = load %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"** %213, align 8
  %215 = icmp eq %"class.rx::vk::ImageHelper"* %214, null
  br i1 %215, label %227, label %216

216:                                              ; preds = %196
  %217 = load i32, i32* %149, align 4
  switch i32 %217, label %218 [
    i32 2, label %227
    i32 0, label %227
  ]

218:                                              ; preds = %216
  %219 = icmp eq i32 %211, 0
  %220 = icmp eq i32 %206, 0
  %221 = and i1 %130, %220
  %222 = select i1 %219, i32 2, i32 %211
  %223 = select i1 %221, i32 2, i32 %206
  %224 = or i1 %219, %221
  br i1 %224, label %225, label %226

225:                                              ; preds = %218
  call void @_ZN2rx2vk14RenderPassDesc35packDepthStencilUnresolveAttachmentEbb(%"class.rx::vk::RenderPassDesc"* %21, i1 zeroext %219, i1 zeroext %221) #16
  br label %227

226:                                              ; preds = %218
  call void @_ZN2rx2vk14RenderPassDesc37removeDepthStencilUnresolveAttachmentEv(%"class.rx::vk::RenderPassDesc"* %21) #16
  br label %227

227:                                              ; preds = %216, %216, %196, %225, %226
  %228 = phi i32 [ %211, %216 ], [ %222, %226 ], [ %222, %225 ], [ %211, %196 ], [ %211, %216 ]
  %229 = phi i32 [ %206, %216 ], [ %223, %226 ], [ %223, %225 ], [ %206, %196 ], [ %206, %216 ]
  call void @_ZN2rx2vk18AttachmentOpsArray6setOpsENS0_21PackedAttachmentIndexE18VkAttachmentLoadOpNS0_17RenderPassStoreOpE(%"class.rx::vk::AttachmentOpsArray"* nonnull %7, i32 %47, i32 %228, i32 %212) #16
  call void @_ZN2rx2vk18AttachmentOpsArray13setStencilOpsENS0_21PackedAttachmentIndexE18VkAttachmentLoadOpNS0_17RenderPassStoreOpE(%"class.rx::vk::AttachmentOpsArray"* nonnull %7, i32 %47, i32 %229, i32 %207) #16
  br label %230

230:                                              ; preds = %227, %46
  %231 = phi i32 [ %47, %227 ], [ -1, %46 ]
  %232 = load i8, i8* %22, align 1, !noalias !124
  %233 = load i8, i8* %27, align 1
  %234 = and i8 %233, 32
  %235 = icmp ne i8 %234, 0
  %236 = lshr exact i8 %234, 5
  %237 = and i8 %233, 16
  %238 = icmp ne i8 %237, 0
  %239 = lshr exact i8 %237, 4
  %240 = icmp ne i8 %23, %232
  %241 = xor i1 %30, %235
  %242 = or i1 %240, %241
  %243 = xor i1 %32, %238
  %244 = or i1 %243, %242
  br i1 %244, label %245, label %253

245:                                              ; preds = %230
  %246 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 4
  store %"class.rx::vk::FramebufferHelper"* null, %"class.rx::vk::FramebufferHelper"** %246, align 8
  %247 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10
  %248 = getelementptr inbounds %"class.angle::BitSetT.1442", %"class.angle::BitSetT.1442"* %12, i64 0, i32 0
  %249 = zext i8 %232 to i16
  %250 = zext i8 %234 to i16
  %251 = shl nuw nsw i16 %250, 3
  %252 = or i16 %251, %249
  store i16 %252, i16* %248, align 2, !alias.scope !127
  call void @_ZN2rx2vk15FramebufferDesc19updateUnresolveMaskEN5angle7BitSetTILm9EtmEE(%"class.rx::vk::FramebufferDesc"* %247, %"class.angle::BitSetT.1442"* nonnull %12) #16
  br label %253

253:                                              ; preds = %245, %230
  %254 = bitcast %"class.rx::vk::Framebuffer"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %254) #16
  store %"class.rx::vk::Framebuffer"* null, %"class.rx::vk::Framebuffer"** %13, align 8
  %255 = call i32 @_ZN2rx13FramebufferVk14getFramebufferEPNS_9ContextVkEPPNS_2vk11FramebufferEPKNS3_9ImageViewE(%"class.rx::FramebufferVk"* %0, %"class.rx::ContextVk"* %1, %"class.rx::vk::Framebuffer"** nonnull %13, %"class.rx::vk::ImageView"* null)
  %256 = icmp eq i32 %255, 1
  br i1 %256, label %341, label %257

257:                                              ; preds = %253
  %258 = bitcast %"struct.gl::Rectangle"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %258) #16
  %259 = bitcast %"struct.gl::Rectangle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %258, i8* align 4 %259, i64 16, i1 false)
  br i1 %26, label %277, label %260

260:                                              ; preds = %257
  %261 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %14, i64 0, i32 2
  %262 = bitcast %"struct.gl::Box"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %262) #16
  %263 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %33, align 8
  call void @_ZNK2gl16FramebufferState13getDimensionsEv(%"struct.gl::Box"* nonnull sret %6, %"class.gl::FramebufferState"* %263) #16
  %264 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %6, i64 0, i32 3
  %265 = load i32, i32* %264, align 4
  %266 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %6, i64 0, i32 4
  %267 = load i32, i32* %266, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %262) #16
  %268 = call zeroext i1 @_ZNK2rx9ContextVk30isRotatedAspectRatioForDrawFBOEv(%"class.rx::ContextVk"* %1) #16
  %269 = select i1 %268, i32 %265, i32 %267
  %270 = select i1 %268, i32 %267, i32 %265
  %271 = zext i32 %269 to i64
  %272 = shl nuw i64 %271, 32
  %273 = zext i32 %270 to i64
  %274 = or i64 %272, %273
  %275 = bitcast %"struct.gl::Rectangle"* %14 to i64*
  store i64 0, i64* %275, align 8
  %276 = bitcast i32* %261 to i64*
  store i64 %274, i64* %276, align 8
  br label %277

277:                                              ; preds = %257, %260
  %278 = load %"class.rx::vk::Framebuffer"*, %"class.rx::vk::Framebuffer"** %13, align 8
  %279 = call i32 @_ZN2rx9ContextVk18beginNewRenderPassERKNS_2vk11FramebufferERKN2gl9RectangleERKNS1_14RenderPassDescERKNS1_18AttachmentOpsArrayENS1_21PackedAttachmentIndexESF_RKNS1_22PackedClearValuesArrayEPPNS1_4priv22SecondaryCommandBufferE(%"class.rx::ContextVk"* %1, %"class.rx::vk::Framebuffer"* dereferenceable(8) %278, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %14, %"class.rx::vk::RenderPassDesc"* dereferenceable(12) %21, %"class.rx::vk::AttachmentOpsArray"* nonnull dereferenceable(40) %7, i32 %47, i32 %231, %"class.rx::vk::PackedClearValuesArray"* nonnull dereferenceable(160) %8, %"class.rx::vk::priv::SecondaryCommandBuffer"** %3) #16
  %280 = icmp eq i32 %279, 1
  br i1 %280, label %339, label %281

281:                                              ; preds = %277
  %282 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %33, align 8
  %283 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %282, i64 0, i32 6, i32 0
  %284 = load i8, i8* %283, align 1, !noalias !130
  %285 = icmp eq i8 %284, 0
  br i1 %285, label %301, label %286

286:                                              ; preds = %281
  %287 = zext i8 %284 to i32
  %288 = call i32 @llvm.cttz.i32(i32 %287, i1 true) #16, !range !2
  %289 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10, i32 0
  %290 = zext i32 %288 to i64
  %291 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 1, i32 0, i64 %290
  %292 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %291, align 8
  %293 = load i32, i32* %289, align 4
  %294 = lshr i32 %293, 6
  %295 = and i32 %294, 511
  call void @_ZN2rx14RenderTargetVk11onColorDrawEPNS_9ContextVkEjNS_2vk21PackedAttachmentIndexE(%"class.rx::RenderTargetVk"* %292, %"class.rx::ContextVk"* %1, i32 %295, i32 0) #16
  %296 = shl i32 1, %288
  %297 = trunc i32 %296 to i8
  %298 = xor i8 %297, -1
  %299 = and i8 %284, %298
  %300 = icmp eq i8 %299, 0
  br i1 %300, label %301, label %302

301:                                              ; preds = %302, %286, %281
  br i1 %50, label %319, label %324

302:                                              ; preds = %286, %302
  %303 = phi i8 [ %317, %302 ], [ %299, %286 ]
  %304 = phi i32 [ %305, %302 ], [ 0, %286 ]
  %305 = add i32 %304, 1
  %306 = zext i8 %303 to i32
  %307 = call i32 @llvm.cttz.i32(i32 %306, i1 true) #16, !range !2
  %308 = zext i32 %307 to i64
  %309 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 1, i32 0, i64 %308
  %310 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %309, align 8
  %311 = load i32, i32* %289, align 4
  %312 = lshr i32 %311, 6
  %313 = and i32 %312, 511
  call void @_ZN2rx14RenderTargetVk11onColorDrawEPNS_9ContextVkEjNS_2vk21PackedAttachmentIndexE(%"class.rx::RenderTargetVk"* %310, %"class.rx::ContextVk"* %1, i32 %313, i32 %305) #16
  %314 = shl i32 1, %307
  %315 = trunc i32 %314 to i8
  %316 = xor i8 %315, -1
  %317 = and i8 %303, %316
  %318 = icmp eq i8 %317, 0
  br i1 %318, label %301, label %302

319:                                              ; preds = %301
  %320 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10, i32 0
  %321 = load i32, i32* %320, align 4
  %322 = lshr i32 %321, 6
  %323 = and i32 %322, 511
  call void @_ZN2rx14RenderTargetVk18onDepthStencilDrawEPNS_9ContextVkEj(%"class.rx::RenderTargetVk"* nonnull %49, %"class.rx::ContextVk"* %1, i32 %323) #16
  br label %324

324:                                              ; preds = %319, %301
  %325 = and i8 %233, 48
  %326 = or i8 %325, %232
  %327 = icmp eq i8 %326, 0
  br i1 %327, label %337, label %328

328:                                              ; preds = %324
  %329 = getelementptr inbounds %"struct.rx::UtilsVk::UnresolveParameters", %"struct.rx::UtilsVk::UnresolveParameters"* %15, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %329) #16
  %330 = getelementptr inbounds %"struct.rx::UtilsVk::UnresolveParameters", %"struct.rx::UtilsVk::UnresolveParameters"* %15, i64 0, i32 1
  %331 = getelementptr inbounds %"struct.rx::UtilsVk::UnresolveParameters", %"struct.rx::UtilsVk::UnresolveParameters"* %15, i64 0, i32 2
  store i8 %232, i8* %329, align 1
  store i8 %236, i8* %330, align 1
  store i8 %239, i8* %331, align 1
  %332 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 57
  %333 = call i32 @_ZN2rx7UtilsVk9unresolveEPNS_9ContextVkEPKNS_13FramebufferVkERKNS0_19UnresolveParametersE(%"class.rx::UtilsVk"* %332, %"class.rx::ContextVk"* %1, %"class.rx::FramebufferVk"* %0, %"struct.rx::UtilsVk::UnresolveParameters"* nonnull dereferenceable(3) %15) #16
  %334 = icmp eq i32 %333, 1
  br i1 %334, label %336, label %335

335:                                              ; preds = %328
  call void @_ZN2rx9ContextVk16startNextSubpassEv(%"class.rx::ContextVk"* %1) #16
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %329) #16
  br label %338

336:                                              ; preds = %328
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %329) #16
  br label %339

337:                                              ; preds = %324
  br i1 %244, label %338, label %339

338:                                              ; preds = %335, %337
  call void @_ZN2rx9ContextVk37onDrawFramebufferRenderPassDescChangeEPNS_13FramebufferVkEPb(%"class.rx::ContextVk"* %1, %"class.rx::FramebufferVk"* %0, i8* %4) #16
  br label %339

339:                                              ; preds = %277, %337, %338, %336
  %340 = phi i32 [ 1, %277 ], [ 1, %336 ], [ 0, %337 ], [ 0, %338 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %258) #16
  br label %341

341:                                              ; preds = %253, %339
  %342 = phi i32 [ %340, %339 ], [ 1, %253 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %254) #16
  call void @_ZN2rx2vk22PackedClearValuesArrayD1Ev(%"class.rx::vk::PackedClearValuesArray"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %20) #16
  call void @_ZN2rx2vk18AttachmentOpsArrayD1Ev(%"class.rx::vk::AttachmentOpsArray"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #16
  br label %343

343:                                              ; preds = %5, %341
  %344 = phi i32 [ %342, %341 ], [ 1, %5 ]
  ret i32 %344
}

declare void @_ZN2rx2vk18AttachmentOpsArrayC1Ev(%"class.rx::vk::AttachmentOpsArray"*) unnamed_addr #1

declare void @_ZN2rx2vk22PackedClearValuesArrayC1Ev(%"class.rx::vk::PackedClearValuesArray"*) unnamed_addr #1

declare void @_ZN2rx2vk18AttachmentOpsArray6setOpsENS0_21PackedAttachmentIndexE18VkAttachmentLoadOpNS0_17RenderPassStoreOpE(%"class.rx::vk::AttachmentOpsArray"*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2rx2vk22PackedClearValuesArray5storeENS0_21PackedAttachmentIndexEjRK12VkClearValue(%"class.rx::vk::PackedClearValuesArray"*, i32, i32, %union.VkClearValue* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZNK2rx14RenderTargetVk17hasDefinedContentEv(%"class.rx::RenderTargetVk"*) local_unnamed_addr #1

declare void @_ZN2rx2vk18AttachmentOpsArray13setStencilOpsENS0_21PackedAttachmentIndexE18VkAttachmentLoadOpNS0_17RenderPassStoreOpE(%"class.rx::vk::AttachmentOpsArray"*, i32, i32, i32) local_unnamed_addr #1

declare dereferenceable(4) %"struct.rx::vk::PackedAttachmentOpsDesc"* @_ZN2rx2vk18AttachmentOpsArrayixENS0_21PackedAttachmentIndexE(%"class.rx::vk::AttachmentOpsArray"*, i32) local_unnamed_addr #1

declare void @_ZN2rx2vk14RenderPassDesc28packColorUnresolveAttachmentEm(%"class.rx::vk::RenderPassDesc"*, i64) local_unnamed_addr #1

declare void @_ZN2rx2vk14RenderPassDesc30removeColorUnresolveAttachmentEm(%"class.rx::vk::RenderPassDesc"*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZNK2rx14RenderTargetVk24hasDefinedStencilContentEv(%"class.rx::RenderTargetVk"*) local_unnamed_addr #1

declare void @_ZN2rx2vk14RenderPassDesc35packDepthStencilUnresolveAttachmentEbb(%"class.rx::vk::RenderPassDesc"*, i1 zeroext, i1 zeroext) local_unnamed_addr #1

declare void @_ZN2rx2vk14RenderPassDesc37removeDepthStencilUnresolveAttachmentEv(%"class.rx::vk::RenderPassDesc"*) local_unnamed_addr #1

declare i32 @_ZN2rx9ContextVk18beginNewRenderPassERKNS_2vk11FramebufferERKN2gl9RectangleERKNS1_14RenderPassDescERKNS1_18AttachmentOpsArrayENS1_21PackedAttachmentIndexESF_RKNS1_22PackedClearValuesArrayEPPNS1_4priv22SecondaryCommandBufferE(%"class.rx::ContextVk"*, %"class.rx::vk::Framebuffer"* dereferenceable(8), %"struct.gl::Rectangle"* dereferenceable(16), %"class.rx::vk::RenderPassDesc"* dereferenceable(12), %"class.rx::vk::AttachmentOpsArray"* dereferenceable(40), i32, i32, %"class.rx::vk::PackedClearValuesArray"* dereferenceable(160), %"class.rx::vk::priv::SecondaryCommandBuffer"**) local_unnamed_addr #1

declare void @_ZN2rx14RenderTargetVk11onColorDrawEPNS_9ContextVkEjNS_2vk21PackedAttachmentIndexE(%"class.rx::RenderTargetVk"*, %"class.rx::ContextVk"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2rx14RenderTargetVk18onDepthStencilDrawEPNS_9ContextVkEj(%"class.rx::RenderTargetVk"*, %"class.rx::ContextVk"*, i32) local_unnamed_addr #1

declare i32 @_ZN2rx7UtilsVk9unresolveEPNS_9ContextVkEPKNS_13FramebufferVkERKNS0_19UnresolveParametersE(%"class.rx::UtilsVk"*, %"class.rx::ContextVk"*, %"class.rx::FramebufferVk"*, %"struct.rx::UtilsVk::UnresolveParameters"* dereferenceable(3)) local_unnamed_addr #1

declare void @_ZN2rx9ContextVk16startNextSubpassEv(%"class.rx::ContextVk"*) local_unnamed_addr #1

declare void @_ZN2rx9ContextVk37onDrawFramebufferRenderPassDescChangeEPNS_13FramebufferVkEPb(%"class.rx::ContextVk"*, %"class.rx::FramebufferVk"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2rx2vk22PackedClearValuesArrayD1Ev(%"class.rx::vk::PackedClearValuesArray"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN2rx2vk18AttachmentOpsArrayD1Ev(%"class.rx::vk::AttachmentOpsArray"*) unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(1) %"class.angle::BitSetT"* @_ZNK2rx13FramebufferVk30getEmulatedAlphaAttachmentMaskEv(%"class.rx::FramebufferVk"* readnone) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 8
  ret %"class.angle::BitSetT"* %2
}

declare i32 @_ZN2rx2vk11ImageHelper10readPixelsEPNS_9ContextVkERKN2gl9RectangleERKNS_16PackPixelsParamsE21VkImageAspectFlagBitsNS4_17LevelIndexWrapperIiEEjPvPNS0_13DynamicBufferE(%"class.rx::vk::ImageHelper"*, %"class.rx::ContextVk"*, %"struct.gl::Rectangle"* dereferenceable(16), %"struct.rx::PackPixelsParams"* dereferenceable(64), i32, i32, i32, i8*, %"class.rx::vk::DynamicBuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZNK2rx13FramebufferVk19getReadImageExtentsEv(%"class.rx::FramebufferVk"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 5, i32 0
  %3 = load %"class.rx::RenderTargetVk"*, %"class.rx::RenderTargetVk"** %2, align 8
  %4 = tail call { i64, i32 } @_ZNK2rx14RenderTargetVk10getExtentsEv(%"class.rx::RenderTargetVk"* %3) #16
  ret { i64, i32 } %4
}

declare { i64, i32 } @_ZNK2rx14RenderTargetVk10getExtentsEv(%"class.rx::RenderTargetVk"*) local_unnamed_addr #1

declare void @_ZNK2gl16FramebufferState13getDimensionsEv(%"struct.gl::Box"* sret, %"class.gl::FramebufferState"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2rx9ContextVk30isRotatedAspectRatioForDrawFBOEv(%"class.rx::ContextVk"*) local_unnamed_addr #1

declare { i64, i64 } @_ZN2rx17ClipRectToScissorERKN2gl5StateERKNS0_9RectangleEb(%"class.gl::State"* dereferenceable(12296), %"struct.gl::Rectangle"* dereferenceable(16), i1 zeroext) local_unnamed_addr #1

declare %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState27getDepthOrStencilAttachmentEv(%"class.gl::FramebufferState"*) local_unnamed_addr #1

declare i32 @_ZN2rx9ContextVk15startRenderPassEN2gl9RectangleEPPNS_2vk4priv22SecondaryCommandBufferEPb(%"class.rx::ContextVk"*, i64, i64, %"class.rx::vk::priv::SecondaryCommandBuffer"**, i8*) local_unnamed_addr #1

declare void @_ZN2rx2vk19CommandBufferHelper36updateStartedRenderPassWithDepthModeEb(%"class.rx::vk::CommandBufferHelper"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13FramebufferVk31onSwitchProgramFramebufferFetchEPNS_9ContextVkEb(%"class.rx::FramebufferVk"*, %"class.rx::ContextVk"*, i1 zeroext) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.rx::vk::RenderPassDesc", %"class.rx::vk::RenderPassDesc"* %4, i64 0, i32 0
  %6 = load i8, i8* %5, align 4
  %7 = icmp slt i8 %6, 0
  %8 = xor i1 %7, %2
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 4
  store %"class.rx::vk::FramebufferHelper"* null, %"class.rx::vk::FramebufferHelper"** %10, align 8
  %11 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %0, i64 0, i32 10
  tail call void @_ZN2rx2vk15FramebufferDesc26updateFramebufferFetchModeEb(%"class.rx::vk::FramebufferDesc"* %11, i1 zeroext %2) #16
  tail call void @_ZN2rx2vk14RenderPassDesc23setFramebufferFetchModeEb(%"class.rx::vk::RenderPassDesc"* %4, i1 zeroext %2) #16
  tail call void @_ZN2rx9ContextVk37onDrawFramebufferRenderPassDescChangeEPNS_13FramebufferVkEPb(%"class.rx::ContextVk"* %1, %"class.rx::FramebufferVk"* %0, i8* null) #16
  br label %12

12:                                               ; preds = %9, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE5clearEv(%"class.absl::container_internal::raw_hash_set.830"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = icmp ugt i64 %3, 127
  br i1 %4, label %5, label %27

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 1
  br label %8

8:                                                ; preds = %20, %5
  %9 = phi i64 [ %3, %5 ], [ %21, %20 ]
  %10 = phi i64 [ 0, %5 ], [ %22, %20 ]
  %11 = load i8*, i8** %6, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %10
  %13 = load i8, i8* %12, align 1
  %14 = icmp sgt i8 %13, -1
  br i1 %14, label %15, label %20

15:                                               ; preds = %8
  %16 = load %"union.absl::container_internal::map_slot_type.831"*, %"union.absl::container_internal::map_slot_type.831"** %7, align 8
  %17 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %16, i64 %10, i32 0, i32 1
  tail call void @_ZN2rx2vk17FramebufferHelperD1Ev(%"class.rx::vk::FramebufferHelper"* %17) #16
  %18 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %16, i64 %10, i32 0, i32 0
  tail call void @_ZN2rx2vk15FramebufferDescD1Ev(%"class.rx::vk::FramebufferDesc"* %18) #16
  %19 = load i64, i64* %2, align 8
  br label %20

20:                                               ; preds = %15, %8
  %21 = phi i64 [ %9, %8 ], [ %19, %15 ]
  %22 = add i64 %10, 1
  %23 = icmp eq i64 %22, %21
  br i1 %23, label %24, label %8

24:                                               ; preds = %20
  %25 = load i8*, i8** %6, align 8
  tail call void @_ZdlPv(i8* %25) #18
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %6, align 8
  %26 = bitcast %"union.absl::container_internal::map_slot_type.831"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 32, i1 false) #16
  br label %62

27:                                               ; preds = %1
  %28 = icmp eq i64 %3, 0
  br i1 %28, label %62, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 0
  %31 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 1
  br label %46

32:                                               ; preds = %58
  %33 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 2
  store i64 0, i64* %33, align 8
  %34 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = add i64 %59, 16
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 -128, i64 %36, i1 false) #16
  %37 = load i8*, i8** %34, align 8
  %38 = load i64, i64* %2, align 8
  %39 = getelementptr inbounds i8, i8* %37, i64 %38
  store i8 -1, i8* %39, align 1
  %40 = load i64, i64* %2, align 8
  %41 = lshr i64 %40, 3
  %42 = sub i64 %40, %41
  %43 = load i64, i64* %33, align 8
  %44 = sub i64 %42, %43
  %45 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %44, i64* %45, align 8
  br label %62

46:                                               ; preds = %29, %58
  %47 = phi i64 [ %3, %29 ], [ %59, %58 ]
  %48 = phi i64 [ 0, %29 ], [ %60, %58 ]
  %49 = load i8*, i8** %30, align 8
  %50 = getelementptr inbounds i8, i8* %49, i64 %48
  %51 = load i8, i8* %50, align 1
  %52 = icmp sgt i8 %51, -1
  br i1 %52, label %53, label %58

53:                                               ; preds = %46
  %54 = load %"union.absl::container_internal::map_slot_type.831"*, %"union.absl::container_internal::map_slot_type.831"** %31, align 8
  %55 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %54, i64 %48, i32 0, i32 1
  tail call void @_ZN2rx2vk17FramebufferHelperD1Ev(%"class.rx::vk::FramebufferHelper"* %55) #16
  %56 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %54, i64 %48, i32 0, i32 0
  tail call void @_ZN2rx2vk15FramebufferDescD1Ev(%"class.rx::vk::FramebufferDesc"* %56) #16
  %57 = load i64, i64* %2, align 8
  br label %58

58:                                               ; preds = %46, %53
  %59 = phi i64 [ %47, %46 ], [ %57, %53 ]
  %60 = add i64 %48, 1
  %61 = icmp eq i64 %60, %59
  br i1 %61, label %32, label %46

62:                                               ; preds = %27, %32, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, %"union.absl::container_internal::map_slot_type.831"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE4findIS5_EENSJ_8iteratorERSG_(%"class.absl::container_internal::raw_hash_set.830"*, %"class.rx::vk::FramebufferDesc"* dereferenceable(148)) local_unnamed_addr #7 comdat align 2 {
  %3 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %4 = tail call i64 @_ZNK2rx2vk15FramebufferDesc4hashEv(%"class.rx::vk::FramebufferDesc"* %1) #16
  %5 = add i64 %4, %3
  %6 = zext i64 %5 to i128
  %7 = mul nuw i128 %6, 11376068507788127593
  %8 = lshr i128 %7, 64
  %9 = xor i128 %8, %7
  %10 = trunc i128 %9 to i64
  %11 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 0
  %12 = bitcast %"class.absl::container_internal::raw_hash_set.830"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %10, 7
  %17 = lshr i64 %13, 12
  %18 = xor i64 %16, %17
  %19 = trunc i128 %9 to i8
  %20 = and i8 %19, 127
  %21 = insertelement <16 x i8> undef, i8 %20, i32 0
  %22 = shufflevector <16 x i8> %21, <16 x i8> undef, <16 x i32> zeroinitializer
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 1
  %24 = inttoptr i64 %13 to i8*
  br label %25

25:                                               ; preds = %61, %2
  %26 = phi i8* [ %24, %2 ], [ %64, %61 ]
  %27 = phi i64 [ %18, %2 ], [ %63, %61 ]
  %28 = phi i64 [ 0, %2 ], [ %62, %61 ]
  %29 = and i64 %27, %15
  %30 = getelementptr inbounds i8, i8* %26, i64 %29
  %31 = bitcast i8* %30 to <16 x i8>*
  %32 = load <16 x i8>, <16 x i8>* %31, align 1
  %33 = icmp eq <16 x i8> %22, %32
  %34 = bitcast <16 x i1> %33 to i16
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %57, label %36

36:                                               ; preds = %25
  %37 = zext i16 %34 to i32
  br label %38

38:                                               ; preds = %47, %36
  %39 = phi i32 [ %49, %47 ], [ %37, %36 ]
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 false) #16, !range !2
  %41 = load %"union.absl::container_internal::map_slot_type.831"*, %"union.absl::container_internal::map_slot_type.831"** %23, align 8
  %42 = zext i32 %40 to i64
  %43 = add i64 %29, %42
  %44 = and i64 %43, %15
  %45 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %41, i64 %44, i32 0, i32 0
  %46 = tail call zeroext i1 @_ZNK2rx2vk15FramebufferDesceqERKS1_(%"class.rx::vk::FramebufferDesc"* %45, %"class.rx::vk::FramebufferDesc"* dereferenceable(148) %1) #16
  br i1 %46, label %51, label %47, !prof !3

47:                                               ; preds = %38
  %48 = add i32 %39, -1
  %49 = and i32 %48, %39
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %57, label %38

51:                                               ; preds = %38
  %52 = load i8*, i8** %11, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %44
  %54 = load %"union.absl::container_internal::map_slot_type.831"*, %"union.absl::container_internal::map_slot_type.831"** %23, align 8
  %55 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %54, i64 %44
  %56 = icmp ne i8* %53, null
  tail call void @llvm.assume(i1 %56) #16
  br label %65

57:                                               ; preds = %47, %25
  %58 = icmp eq <16 x i8> %32, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %59 = bitcast <16 x i1> %58 to i16
  %60 = icmp eq i16 %59, 0
  br i1 %60, label %61, label %65, !prof !4

61:                                               ; preds = %57
  %62 = add i64 %28, 16
  %63 = add i64 %62, %29
  %64 = load i8*, i8** %11, align 8
  br label %25

65:                                               ; preds = %57, %51
  %66 = phi %"union.absl::container_internal::map_slot_type.831"* [ %55, %51 ], [ undef, %57 ]
  %67 = phi i8* [ %53, %51 ], [ null, %57 ]
  %68 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type.831"* } undef, i8* %67, 0
  %69 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type.831"* } %68, %"union.absl::container_internal::map_slot_type.831"* %66, 1
  ret { i8*, %"union.absl::container_internal::map_slot_type.831"* } %69
}

declare void @_ZN2rx2vk17FramebufferHelper7releaseEPNS_9ContextVkE(%"class.rx::vk::FramebufferHelper"*, %"class.rx::ContextVk"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2rx15FramebufferImpl32shouldSyncStateBeforeCheckStatusEv(%"class.rx::FramebufferImpl"*) unnamed_addr #13 comdat align 2 {
  ret i1 false
}

declare i64 @_ZN5angle13AddTraceEventEPNS_15PlatformMethodsEcPKhPKcyiPS5_S3_PKyh(%"struct.angle::PlatformMethods"*, i8 signext, i8*, i8*, i64, i32, i8**, i8*, i64*, i8 zeroext) local_unnamed_addr #1

declare i32 @_ZN5angle6Format18InternalFormatToIDEj(i32) local_unnamed_addr #1

declare void @_ZN2rx2vk19CommandBufferAccess11onImageReadEjNS0_11ImageLayoutEPNS0_11ImageHelperE(%"class.rx::vk::CommandBufferAccess"*, i32, i32, %"class.rx::vk::ImageHelper"*) local_unnamed_addr #1

declare void @_ZN2rx2vk19CommandBufferAccess12onImageWriteEN2gl17LevelIndexWrapperIiEEjjjjNS0_11ImageLayoutEPNS0_11ImageHelperE(%"class.rx::vk::CommandBufferAccess"*, i32, i32, i32, i32, i32, i32, %"class.rx::vk::ImageHelper"*) local_unnamed_addr #1

declare i32 @_ZN2rx9ContextVk16onResourceAccessERKNS_2vk19CommandBufferAccessE(%"class.rx::ContextVk"*, %"class.rx::vk::CommandBufferAccess"* dereferenceable(160)) local_unnamed_addr #1

declare i8* @_ZN5angle13PoolAllocator15allocateNewPageEmm(%"class.angle::PoolAllocator"*, i64, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #14

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #15

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #11

declare zeroext i1 @_ZNK2rx10RendererVk25hasImageFormatFeatureBitsEN5angle8FormatIDEj(%"class.rx::RendererVk"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctpop.i32(i32) #11

declare dereferenceable(4) %"struct.rx::vk::PackedAttachmentOpsDesc"* @_ZNK2rx2vk18AttachmentOpsArrayixENS0_21PackedAttachmentIndexE(%"class.rx::vk::AttachmentOpsArray"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2rx2vk13GarbageObjectENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector.859"*, %"class.rx::vk::GarbageObject"* dereferenceable(16)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.859", %"class.std::__1::vector.859"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.rx::vk::GarbageObject"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.859"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.859"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.859", %"class.std::__1::vector.859"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.rx::vk::GarbageObject"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.rx::vk::GarbageObject"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.rx::vk::GarbageObject"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %36, i64 %9
  %38 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %36, i64 %35
  %39 = ptrtoint %"class.rx::vk::GarbageObject"* %38 to i64
  tail call void @_ZN2rx2vk13GarbageObjectC1EOS1_(%"class.rx::vk::GarbageObject"* %37, %"class.rx::vk::GarbageObject"* dereferenceable(16) %1) #16
  %40 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %37, i64 1
  %41 = ptrtoint %"class.rx::vk::GarbageObject"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.859", %"class.std::__1::vector.859"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %42, align 8
  %44 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %3, align 8
  %45 = icmp eq %"class.rx::vk::GarbageObject"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"class.rx::vk::GarbageObject"* %43 to i64
  br label %56

48:                                               ; preds = %34, %48
  %49 = phi %"class.rx::vk::GarbageObject"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"class.rx::vk::GarbageObject"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %49, i64 -1
  %52 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %50, i64 -1
  tail call void @_ZN2rx2vk13GarbageObjectC1EOS1_(%"class.rx::vk::GarbageObject"* %51, %"class.rx::vk::GarbageObject"* dereferenceable(16) %52) #16
  %53 = icmp eq %"class.rx::vk::GarbageObject"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  br label %56

56:                                               ; preds = %46, %54
  %57 = phi %"class.rx::vk::GarbageObject"* [ %37, %46 ], [ %51, %54 ]
  %58 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %59 = ptrtoint %"class.rx::vk::GarbageObject"* %57 to i64
  store i64 %59, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %60 = icmp eq i64 %58, 0
  br i1 %60, label %63, label %61

61:                                               ; preds = %56
  %62 = inttoptr i64 %58 to i8*
  tail call void @_ZdlPv(i8* %62) #18
  br label %63

63:                                               ; preds = %56, %61
  ret void
}

declare void @_ZN2rx2vk13GarbageObjectC1EOS1_(%"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN2rx2vk13GarbageObjectC1ENS0_10HandleTypeEPNS0_15GarbageHandle_TE(%"class.rx::vk::GarbageObject"*, i32, %"struct.rx::vk::GarbageHandle_T"*) unnamed_addr #1

declare i32 @_ZNK2gl27FramebufferAttachmentObject25getAttachmentRenderTargetEPKNS_7ContextEjRKNS_10ImageIndexEiPPN2rx33FramebufferAttachmentRenderTargetE(%"class.gl::FramebufferAttachmentObject"*, %"class.gl::Context"*, i32, %"class.gl::ImageIndex"* dereferenceable(16), i32, %"class.rx::FramebufferAttachmentRenderTarget"**) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.cttz.i64(i64, i1 immarg) #11

; Function Attrs: nounwind
declare void @llvm.assume(i1) #16

declare i64 @_ZNK2rx2vk15FramebufferDesc4hashEv(%"class.rx::vk::FramebufferDesc"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE22find_or_prepare_insertIS5_EENSF_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.830"*, %"class.rx::vk::FramebufferDesc"* dereferenceable(148)) local_unnamed_addr #7 comdat align 2 {
  %3 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %4 = tail call i64 @_ZNK2rx2vk15FramebufferDesc4hashEv(%"class.rx::vk::FramebufferDesc"* %1) #16
  %5 = add i64 %4, %3
  %6 = zext i64 %5 to i128
  %7 = mul nuw i128 %6, 11376068507788127593
  %8 = lshr i128 %7, 64
  %9 = xor i128 %8, %7
  %10 = trunc i128 %9 to i64
  %11 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 0
  %12 = bitcast %"class.absl::container_internal::raw_hash_set.830"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %10, 7
  %17 = lshr i64 %13, 12
  %18 = xor i64 %16, %17
  %19 = trunc i128 %9 to i8
  %20 = and i8 %19, 127
  %21 = insertelement <16 x i8> undef, i8 %20, i32 0
  %22 = shufflevector <16 x i8> %21, <16 x i8> undef, <16 x i32> zeroinitializer
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 1
  %24 = inttoptr i64 %13 to i8*
  br label %25

25:                                               ; preds = %55, %2
  %26 = phi i8* [ %24, %2 ], [ %58, %55 ]
  %27 = phi i64 [ %18, %2 ], [ %57, %55 ]
  %28 = phi i64 [ 0, %2 ], [ %56, %55 ]
  %29 = and i64 %27, %15
  %30 = getelementptr inbounds i8, i8* %26, i64 %29
  %31 = bitcast i8* %30 to <16 x i8>*
  %32 = load <16 x i8>, <16 x i8>* %31, align 1
  %33 = icmp eq <16 x i8> %22, %32
  %34 = bitcast <16 x i1> %33 to i16
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %51, label %36

36:                                               ; preds = %25
  %37 = zext i16 %34 to i32
  br label %38

38:                                               ; preds = %36, %47
  %39 = phi i32 [ %49, %47 ], [ %37, %36 ]
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 false) #16, !range !2
  %41 = load %"union.absl::container_internal::map_slot_type.831"*, %"union.absl::container_internal::map_slot_type.831"** %23, align 8
  %42 = zext i32 %40 to i64
  %43 = add i64 %29, %42
  %44 = and i64 %43, %15
  %45 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %41, i64 %44, i32 0, i32 0
  %46 = tail call zeroext i1 @_ZNK2rx2vk15FramebufferDesceqERKS1_(%"class.rx::vk::FramebufferDesc"* %45, %"class.rx::vk::FramebufferDesc"* dereferenceable(148) %1) #16
  br i1 %46, label %61, label %47, !prof !3

47:                                               ; preds = %38
  %48 = add i32 %39, -1
  %49 = and i32 %48, %39
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %38

51:                                               ; preds = %47, %25
  %52 = icmp eq <16 x i8> %32, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %53 = bitcast <16 x i1> %52 to i16
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %55, label %59, !prof !4

55:                                               ; preds = %51
  %56 = add i64 %28, 16
  %57 = add i64 %56, %29
  %58 = load i8*, i8** %11, align 8
  br label %25

59:                                               ; preds = %51
  %60 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.830"* %0, i64 %10)
  br label %61

61:                                               ; preds = %38, %59
  %62 = phi i64 [ %60, %59 ], [ %44, %38 ]
  %63 = phi i8 [ 1, %59 ], [ 0, %38 ]
  %64 = insertvalue { i64, i8 } undef, i64 %62, 0
  %65 = insertvalue { i64, i8 } %64, i8 %63, 1
  ret { i64, i8 } %65
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.830"*, i64) local_unnamed_addr #17 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #16, !range !2
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !3

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.830"* %0, i64 1) #16
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.830"* %0) #16
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.830"* %0, i64 %58) #16
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #16, !range !2
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.830"*, i64) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.831"*, %"union.absl::container_internal::map_slot_type.831"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = mul i64 %1, 176
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #18
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.831"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #16
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %93, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %89
  br i1 %24, label %93, label %92

28:                                               ; preds = %25, %89
  %29 = phi i64 [ 0, %25 ], [ %90, %89 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %89

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %6, i64 %29, i32 0, i32 0
  %35 = tail call i64 @_ZNK2rx2vk15FramebufferDesc4hashEv(%"class.rx::vk::FramebufferDesc"* %34) #16
  %36 = add i64 %35, %26
  %37 = zext i64 %36 to i128
  %38 = mul nuw i128 %37, 11376068507788127593
  %39 = lshr i128 %38, 64
  %40 = xor i128 %39, %38
  %41 = trunc i128 %40 to i64
  %42 = load i8*, i8** %3, align 8
  %43 = load i64, i64* %7, align 8
  %44 = lshr i64 %41, 7
  %45 = ptrtoint i8* %42 to i64
  %46 = lshr i64 %45, 12
  %47 = xor i64 %44, %46
  %48 = and i64 %47, %43
  %49 = getelementptr inbounds i8, i8* %42, i64 %48
  %50 = bitcast i8* %49 to <16 x i8>*
  %51 = load <16 x i8>, <16 x i8>* %50, align 1
  %52 = icmp slt <16 x i8> %51, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %53 = bitcast <16 x i1> %52 to i16
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %33, %55
  %56 = phi i64 [ %60, %55 ], [ %48, %33 ]
  %57 = phi i64 [ %58, %55 ], [ 0, %33 ]
  %58 = add i64 %57, 16
  %59 = add i64 %58, %56
  %60 = and i64 %59, %43
  %61 = getelementptr inbounds i8, i8* %42, i64 %60
  %62 = bitcast i8* %61 to <16 x i8>*
  %63 = load <16 x i8>, <16 x i8>* %62, align 1
  %64 = icmp slt <16 x i8> %63, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %55, label %67

67:                                               ; preds = %55, %33
  %68 = phi i64 [ %48, %33 ], [ %60, %55 ]
  %69 = phi i16 [ %53, %33 ], [ %65, %55 ]
  %70 = zext i16 %69 to i32
  %71 = tail call i32 @llvm.cttz.i32(i32 %70, i1 false) #16, !range !2
  %72 = zext i32 %71 to i64
  %73 = add i64 %68, %72
  %74 = and i64 %73, %43
  %75 = trunc i128 %40 to i8
  %76 = and i8 %75, 127
  %77 = getelementptr inbounds i8, i8* %42, i64 %74
  store i8 %76, i8* %77, align 1
  %78 = load i8*, i8** %3, align 8
  %79 = add i64 %74, -15
  %80 = load i64, i64* %7, align 8
  %81 = and i64 %79, %80
  %82 = and i64 %80, 15
  %83 = add i64 %81, %82
  %84 = getelementptr inbounds i8, i8* %78, i64 %83
  store i8 %76, i8* %84, align 1
  %85 = load %"union.absl::container_internal::map_slot_type.831"*, %"union.absl::container_internal::map_slot_type.831"** %5, align 8
  %86 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %85, i64 %74, i32 0, i32 0
  tail call void @_ZN2rx2vk15FramebufferDescC1ERKS1_(%"class.rx::vk::FramebufferDesc"* %86, %"class.rx::vk::FramebufferDesc"* dereferenceable(148) %34) #16
  %87 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %85, i64 %74, i32 0, i32 1
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %6, i64 %29, i32 0, i32 1
  tail call void @_ZN2rx2vk17FramebufferHelperC1EOS1_(%"class.rx::vk::FramebufferHelper"* %87, %"class.rx::vk::FramebufferHelper"* dereferenceable(24) %88) #16
  tail call void @_ZN2rx2vk17FramebufferHelperD1Ev(%"class.rx::vk::FramebufferHelper"* %88) #16
  tail call void @_ZN2rx2vk15FramebufferDescD1Ev(%"class.rx::vk::FramebufferDesc"* %34) #16
  br label %89

89:                                               ; preds = %28, %67
  %90 = add nuw i64 %29, 1
  %91 = icmp eq i64 %90, %8
  br i1 %91, label %27, label %28

92:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #18
  br label %93

93:                                               ; preds = %2, %27, %92
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.830"*) local_unnamed_addr #17 comdat align 2 {
  %2 = alloca %"union.absl::container_internal::map_slot_type.831", align 8
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %4, i64 %6) #16
  %7 = bitcast %"union.absl::container_internal::map_slot_type.831"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %7) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 176, i1 false)
  %8 = load i64, i64* %5, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 1
  %12 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %13 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %2, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %2, i64 0, i32 0, i32 1
  br label %23

15:                                               ; preds = %128, %1
  %16 = phi i64 [ 0, %1 ], [ %130, %128 ]
  %17 = lshr i64 %16, 3
  %18 = sub i64 %16, %17
  %19 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.830", %"class.absl::container_internal::raw_hash_set.830"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %21, i64* %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %7) #16
  ret void

23:                                               ; preds = %10, %128
  %24 = phi i64 [ 0, %10 ], [ %130, %128 ]
  %25 = load i8*, i8** %3, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 %24
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, -2
  br i1 %28, label %29, label %128

29:                                               ; preds = %23
  %30 = load %"union.absl::container_internal::map_slot_type.831"*, %"union.absl::container_internal::map_slot_type.831"** %11, align 8
  %31 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %30, i64 %24, i32 0, i32 0
  %32 = call i64 @_ZNK2rx2vk15FramebufferDesc4hashEv(%"class.rx::vk::FramebufferDesc"* %31) #16
  %33 = add i64 %32, %12
  %34 = zext i64 %33 to i128
  %35 = mul nuw i128 %34, 11376068507788127593
  %36 = lshr i128 %35, 64
  %37 = xor i128 %36, %35
  %38 = trunc i128 %37 to i64
  %39 = load i8*, i8** %3, align 8
  %40 = load i64, i64* %5, align 8
  %41 = lshr i64 %38, 7
  %42 = ptrtoint i8* %39 to i64
  %43 = lshr i64 %42, 12
  %44 = xor i64 %41, %43
  %45 = and i64 %44, %40
  %46 = getelementptr inbounds i8, i8* %39, i64 %45
  %47 = bitcast i8* %46 to <16 x i8>*
  %48 = load <16 x i8>, <16 x i8>* %47, align 1
  %49 = icmp slt <16 x i8> %48, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %50 = bitcast <16 x i1> %49 to i16
  %51 = icmp eq i16 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %29, %52
  %53 = phi i64 [ %57, %52 ], [ %45, %29 ]
  %54 = phi i64 [ %55, %52 ], [ 0, %29 ]
  %55 = add i64 %54, 16
  %56 = add i64 %55, %53
  %57 = and i64 %56, %40
  %58 = getelementptr inbounds i8, i8* %39, i64 %57
  %59 = bitcast i8* %58 to <16 x i8>*
  %60 = load <16 x i8>, <16 x i8>* %59, align 1
  %61 = icmp slt <16 x i8> %60, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %62 = bitcast <16 x i1> %61 to i16
  %63 = icmp eq i16 %62, 0
  br i1 %63, label %52, label %64

64:                                               ; preds = %52, %29
  %65 = phi i64 [ %45, %29 ], [ %57, %52 ]
  %66 = phi i16 [ %50, %29 ], [ %62, %52 ]
  %67 = zext i16 %66 to i32
  %68 = call i32 @llvm.cttz.i32(i32 %67, i1 false) #16, !range !2
  %69 = zext i32 %68 to i64
  %70 = add i64 %65, %69
  %71 = and i64 %70, %40
  %72 = sub i64 %71, %45
  %73 = sub i64 %24, %45
  %74 = xor i64 %72, %73
  %75 = and i64 %74, %40
  %76 = icmp ult i64 %75, 16
  br i1 %76, label %77, label %88, !prof !3

77:                                               ; preds = %64
  %78 = trunc i128 %37 to i8
  %79 = and i8 %78, 127
  %80 = getelementptr inbounds i8, i8* %39, i64 %24
  store i8 %79, i8* %80, align 1
  %81 = load i8*, i8** %3, align 8
  %82 = add i64 %24, -15
  %83 = load i64, i64* %5, align 8
  %84 = and i64 %83, %82
  %85 = and i64 %83, 15
  %86 = add i64 %84, %85
  %87 = getelementptr inbounds i8, i8* %81, i64 %86
  store i8 %79, i8* %87, align 1
  br label %128

88:                                               ; preds = %64
  %89 = getelementptr inbounds i8, i8* %39, i64 %71
  %90 = load i8, i8* %89, align 1
  %91 = icmp eq i8 %90, -128
  %92 = trunc i128 %37 to i8
  %93 = and i8 %92, 127
  store i8 %93, i8* %89, align 1
  %94 = load i8*, i8** %3, align 8
  %95 = add i64 %71, -15
  %96 = load i64, i64* %5, align 8
  %97 = and i64 %96, %95
  %98 = and i64 %96, 15
  %99 = add i64 %97, %98
  %100 = getelementptr inbounds i8, i8* %94, i64 %99
  store i8 %93, i8* %100, align 1
  %101 = load %"union.absl::container_internal::map_slot_type.831"*, %"union.absl::container_internal::map_slot_type.831"** %11, align 8
  br i1 %91, label %102, label %116

102:                                              ; preds = %88
  %103 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %101, i64 %71, i32 0, i32 0
  %104 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %101, i64 %24, i32 0, i32 0
  call void @_ZN2rx2vk15FramebufferDescC1ERKS1_(%"class.rx::vk::FramebufferDesc"* %103, %"class.rx::vk::FramebufferDesc"* dereferenceable(148) %104) #16
  %105 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %101, i64 %71, i32 0, i32 1
  %106 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %101, i64 %24, i32 0, i32 1
  call void @_ZN2rx2vk17FramebufferHelperC1EOS1_(%"class.rx::vk::FramebufferHelper"* %105, %"class.rx::vk::FramebufferHelper"* dereferenceable(24) %106) #16
  call void @_ZN2rx2vk17FramebufferHelperD1Ev(%"class.rx::vk::FramebufferHelper"* %106) #16
  call void @_ZN2rx2vk15FramebufferDescD1Ev(%"class.rx::vk::FramebufferDesc"* %104) #16
  %107 = load i8*, i8** %3, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 %24
  store i8 -128, i8* %108, align 1
  %109 = load i8*, i8** %3, align 8
  %110 = add i64 %24, -15
  %111 = load i64, i64* %5, align 8
  %112 = and i64 %111, %110
  %113 = and i64 %111, 15
  %114 = add i64 %112, %113
  %115 = getelementptr inbounds i8, i8* %109, i64 %114
  store i8 -128, i8* %115, align 1
  br label %128

116:                                              ; preds = %88
  %117 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %101, i64 %24, i32 0, i32 0
  call void @_ZN2rx2vk15FramebufferDescC1ERKS1_(%"class.rx::vk::FramebufferDesc"* nonnull %13, %"class.rx::vk::FramebufferDesc"* dereferenceable(148) %117) #16
  %118 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %101, i64 %24, i32 0, i32 1
  call void @_ZN2rx2vk17FramebufferHelperC1EOS1_(%"class.rx::vk::FramebufferHelper"* %14, %"class.rx::vk::FramebufferHelper"* dereferenceable(24) %118) #16
  call void @_ZN2rx2vk17FramebufferHelperD1Ev(%"class.rx::vk::FramebufferHelper"* %118) #16
  call void @_ZN2rx2vk15FramebufferDescD1Ev(%"class.rx::vk::FramebufferDesc"* %117) #16
  %119 = load %"union.absl::container_internal::map_slot_type.831"*, %"union.absl::container_internal::map_slot_type.831"** %11, align 8
  %120 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %119, i64 %24, i32 0, i32 0
  %121 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %119, i64 %71, i32 0, i32 0
  call void @_ZN2rx2vk15FramebufferDescC1ERKS1_(%"class.rx::vk::FramebufferDesc"* %120, %"class.rx::vk::FramebufferDesc"* dereferenceable(148) %121) #16
  %122 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %119, i64 %24, i32 0, i32 1
  %123 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %119, i64 %71, i32 0, i32 1
  call void @_ZN2rx2vk17FramebufferHelperC1EOS1_(%"class.rx::vk::FramebufferHelper"* %122, %"class.rx::vk::FramebufferHelper"* dereferenceable(24) %123) #16
  call void @_ZN2rx2vk17FramebufferHelperD1Ev(%"class.rx::vk::FramebufferHelper"* %123) #16
  call void @_ZN2rx2vk15FramebufferDescD1Ev(%"class.rx::vk::FramebufferDesc"* %121) #16
  %124 = load %"union.absl::container_internal::map_slot_type.831"*, %"union.absl::container_internal::map_slot_type.831"** %11, align 8
  %125 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %124, i64 %71, i32 0, i32 0
  call void @_ZN2rx2vk15FramebufferDescC1ERKS1_(%"class.rx::vk::FramebufferDesc"* %125, %"class.rx::vk::FramebufferDesc"* nonnull dereferenceable(148) %13) #16
  %126 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.831", %"union.absl::container_internal::map_slot_type.831"* %124, i64 %71, i32 0, i32 1
  call void @_ZN2rx2vk17FramebufferHelperC1EOS1_(%"class.rx::vk::FramebufferHelper"* %126, %"class.rx::vk::FramebufferHelper"* dereferenceable(24) %14) #16
  call void @_ZN2rx2vk17FramebufferHelperD1Ev(%"class.rx::vk::FramebufferHelper"* %14) #16
  call void @_ZN2rx2vk15FramebufferDescD1Ev(%"class.rx::vk::FramebufferDesc"* nonnull %13) #16
  %127 = add i64 %24, -1
  br label %128

128:                                              ; preds = %77, %116, %102, %23
  %129 = phi i64 [ %24, %23 ], [ %24, %77 ], [ %24, %102 ], [ %127, %116 ]
  %130 = add i64 %129, 1
  %131 = load i64, i64* %5, align 8
  %132 = icmp eq i64 %130, %131
  br i1 %132, label %15, label %23
}

declare void @_ZN2rx2vk17FramebufferHelperC1EOS1_(%"class.rx::vk::FramebufferHelper"*, %"class.rx::vk::FramebufferHelper"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #11

attributes #0 = { argmemonly nounwind }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind }
attributes #9 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind }
attributes #17 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { builtin nounwind }
attributes #19 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv: argument 0"}
!7 = distinct !{!7, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK2gl16FramebufferState23getColorAttachmentsMaskEv: argument 0"}
!11 = distinct !{!11, !"_ZNK2gl16FramebufferState23getColorAttachmentsMaskEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv: argument 0"}
!14 = distinct !{!14, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv: argument 0"}
!17 = distinct !{!17, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv"}
!18 = !{!"branch_weights", i32 1, i32 1048575}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv: argument 0"}
!21 = distinct !{!21, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK2gl16FramebufferState23getColorAttachmentsMaskEv: argument 0"}
!24 = distinct !{!24, !"_ZNK2gl16FramebufferState23getColorAttachmentsMaskEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK2gl16FramebufferState23getColorAttachmentsMaskEv: argument 0"}
!27 = distinct !{!27, !"_ZNK2gl16FramebufferState23getColorAttachmentsMaskEv"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK2gl16FramebufferState23getColorAttachmentsMaskEv: argument 0"}
!30 = distinct !{!30, !"_ZNK2gl16FramebufferState23getColorAttachmentsMaskEv"}
!31 = !{!32, !34, !36, !38, !40, !42}
!32 = distinct !{!32, !33, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE19EmplaceDecomposableclIS5_JRKNSB_21piecewise_construct_tENSB_5tupleIJRSG_EEENSP_IJOS6_EEEEEENSF_INSJ_8iteratorEbEERKT_DpOT0_: argument 0"}
!33 = distinct !{!33, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE19EmplaceDecomposableclIS5_JRKNSB_21piecewise_construct_tENSB_5tupleIJRSG_EEENSP_IJOS6_EEEEEENSF_INSJ_8iteratorEbEERKT_DpOT0_"}
!34 = distinct !{!34, !35, !"_ZN4absl18container_internal15memory_internal17DecomposePairImplINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS6_17FramebufferHelperEEENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSD_9allocatorINSD_4pairIKS7_S8_EEEEE19EmplaceDecomposableERSI_NSD_5tupleIJOS8_EEEEEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEL_ZNSD_L19piecewise_constructEEclsr3stdE7declvalINSO_IJSS_EEEEEclsr3stdE7declvalIT1_EEEEOSR_NSH_ISV_SW_EE: argument 0"}
!35 = distinct !{!35, !"_ZN4absl18container_internal15memory_internal17DecomposePairImplINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS6_17FramebufferHelperEEENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSD_9allocatorINSD_4pairIKS7_S8_EEEEE19EmplaceDecomposableERSI_NSD_5tupleIJOS8_EEEEEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEL_ZNSD_L19piecewise_constructEEclsr3stdE7declvalINSO_IJSS_EEEEEclsr3stdE7declvalIT1_EEEEOSR_NSH_ISV_SW_EE"}
!36 = distinct !{!36, !37, !"_ZN4absl18container_internal13DecomposePairINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS5_17FramebufferHelperEEENS_13hash_internal4HashIS6_EENSt3__18equal_toIS6_EENSC_9allocatorINSC_4pairIKS6_S7_EEEEE19EmplaceDecomposableEJRSH_S7_EEEDTclsr15memory_internalE17DecomposePairImplclsr3stdE7forwardIT_Efp_Ecl8PairArgsspclsr3stdE7forwardIT0_Efp0_EEEEOSN_DpOSO_: argument 0"}
!37 = distinct !{!37, !"_ZN4absl18container_internal13DecomposePairINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS5_17FramebufferHelperEEENS_13hash_internal4HashIS6_EENSt3__18equal_toIS6_EENSC_9allocatorINSC_4pairIKS6_S7_EEEEE19EmplaceDecomposableEJRSH_S7_EEEDTclsr15memory_internalE17DecomposePairImplclsr3stdE7forwardIT_Efp_Ecl8PairArgsspclsr3stdE7forwardIT0_Efp0_EEEEOSN_DpOSO_"}
!38 = distinct !{!38, !39, !"_ZN4absl18container_internal17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS3_17FramebufferHelperEE5applyINS0_12raw_hash_setIS6_NS_13hash_internal4HashIS4_EENSt3__18equal_toIS4_EENSC_9allocatorINSC_4pairIKS4_S5_EEEEE19EmplaceDecomposableEJRSH_S5_EEEDTclsr4absl18container_internalE13DecomposePairclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSN_DpOSO_: argument 0"}
!39 = distinct !{!39, !"_ZN4absl18container_internal17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS3_17FramebufferHelperEE5applyINS0_12raw_hash_setIS6_NS_13hash_internal4HashIS4_EENSt3__18equal_toIS4_EENSC_9allocatorINSC_4pairIKS4_S5_EEEEE19EmplaceDecomposableEJRSH_S5_EEEDTclsr4absl18container_internalE13DecomposePairclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSN_DpOSO_"}
!40 = distinct !{!40, !41, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEEvE5applyINS0_12raw_hash_setIS7_NS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSE_9allocatorINSE_4pairIKS5_S6_EEEEE19EmplaceDecomposableEJRSJ_S6_ES7_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSQ_DpOSR_: argument 0"}
!41 = distinct !{!41, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEEvE5applyINS0_12raw_hash_setIS7_NS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSE_9allocatorINSE_4pairIKS5_S6_EEEEE19EmplaceDecomposableEJRSJ_S6_ES7_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSQ_DpOSR_"}
!42 = distinct !{!42, !43, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE7emplaceIJRSG_S6_ELi0EEENSF_INSJ_8iteratorEbEEDpOT_: argument 0"}
!43 = distinct !{!43, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE7emplaceIJRSG_S6_ELi0EEENSF_INSJ_8iteratorEbEEDpOT_"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNK5angle7BitSetTILm8EhmE5beginEv: argument 0"}
!46 = distinct !{!46, !"_ZNK5angle7BitSetTILm8EhmE5beginEv"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNK5angle7BitSetTILm8EhmE5beginEv: argument 0"}
!49 = distinct !{!49, !"_ZNK5angle7BitSetTILm8EhmE5beginEv"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNK5angle7BitSetTILm8EhmE5beginEv: argument 0"}
!52 = distinct !{!52, !"_ZNK5angle7BitSetTILm8EhmE5beginEv"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZNK5angle7BitSetTILm8EhmE5beginEv: argument 0"}
!55 = distinct !{!55, !"_ZNK5angle7BitSetTILm8EhmE5beginEv"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZNK2gl21FramebufferAttachment9getFormatEv: argument 0"}
!58 = distinct !{!58, !"_ZNK2gl21FramebufferAttachment9getFormatEv"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv: argument 0"}
!61 = distinct !{!61, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv: argument 0"}
!64 = distinct !{!64, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv: argument 0"}
!67 = distinct !{!67, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv: argument 0"}
!70 = distinct !{!70, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv: argument 0"}
!73 = distinct !{!73, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv"}
!74 = !{!75}
!75 = distinct !{!75, !76, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv: argument 0"}
!76 = distinct !{!76, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZNK2gl16FramebufferState23getColorAttachmentsMaskEv: argument 0"}
!79 = distinct !{!79, !"_ZNK2gl16FramebufferState23getColorAttachmentsMaskEv"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv: argument 0"}
!82 = distinct !{!82, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZNK5angle7BitSetTILm28EmmE5beginEv: argument 0"}
!85 = distinct !{!85, !"_ZNK5angle7BitSetTILm28EmmE5beginEv"}
!86 = !{i64 0, i64 65}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_ZNK2gl16FramebufferState23getColorAttachmentsMaskEv: argument 0"}
!89 = distinct !{!89, !"_ZNK2gl16FramebufferState23getColorAttachmentsMaskEv"}
!90 = !{!91}
!91 = distinct !{!91, !92, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv: argument 0"}
!92 = distinct !{!92, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv"}
!93 = !{!94}
!94 = distinct !{!94, !95, !"_ZNK5angle7BitSetTILm28EmmE5beginEv: argument 0"}
!95 = distinct !{!95, !"_ZNK5angle7BitSetTILm28EmmE5beginEv"}
!96 = !{!97}
!97 = distinct !{!97, !98, !"_ZNK2gl16FramebufferState23getColorAttachmentsMaskEv: argument 0"}
!98 = distinct !{!98, !"_ZNK2gl16FramebufferState23getColorAttachmentsMaskEv"}
!99 = !{!100}
!100 = distinct !{!100, !101, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv: argument 0"}
!101 = distinct !{!101, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv"}
!102 = !{!103}
!103 = distinct !{!103, !104, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv: argument 0"}
!104 = distinct !{!104, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv"}
!105 = !{!106, !108, !110, !112, !114, !116}
!106 = distinct !{!106, !107, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE19EmplaceDecomposableclIS5_JRKNSB_21piecewise_construct_tENSB_5tupleIJRSG_EEENSP_IJOS6_EEEEEENSF_INSJ_8iteratorEbEERKT_DpOT0_: argument 0"}
!107 = distinct !{!107, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE19EmplaceDecomposableclIS5_JRKNSB_21piecewise_construct_tENSB_5tupleIJRSG_EEENSP_IJOS6_EEEEEENSF_INSJ_8iteratorEbEERKT_DpOT0_"}
!108 = distinct !{!108, !109, !"_ZN4absl18container_internal15memory_internal17DecomposePairImplINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS6_17FramebufferHelperEEENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSD_9allocatorINSD_4pairIKS7_S8_EEEEE19EmplaceDecomposableERSI_NSD_5tupleIJOS8_EEEEEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEL_ZNSD_L19piecewise_constructEEclsr3stdE7declvalINSO_IJSS_EEEEEclsr3stdE7declvalIT1_EEEEOSR_NSH_ISV_SW_EE: argument 0"}
!109 = distinct !{!109, !"_ZN4absl18container_internal15memory_internal17DecomposePairImplINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS6_17FramebufferHelperEEENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSD_9allocatorINSD_4pairIKS7_S8_EEEEE19EmplaceDecomposableERSI_NSD_5tupleIJOS8_EEEEEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEL_ZNSD_L19piecewise_constructEEclsr3stdE7declvalINSO_IJSS_EEEEEclsr3stdE7declvalIT1_EEEEOSR_NSH_ISV_SW_EE"}
!110 = distinct !{!110, !111, !"_ZN4absl18container_internal13DecomposePairINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS5_17FramebufferHelperEEENS_13hash_internal4HashIS6_EENSt3__18equal_toIS6_EENSC_9allocatorINSC_4pairIKS6_S7_EEEEE19EmplaceDecomposableEJRSH_S7_EEEDTclsr15memory_internalE17DecomposePairImplclsr3stdE7forwardIT_Efp_Ecl8PairArgsspclsr3stdE7forwardIT0_Efp0_EEEEOSN_DpOSO_: argument 0"}
!111 = distinct !{!111, !"_ZN4absl18container_internal13DecomposePairINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS5_17FramebufferHelperEEENS_13hash_internal4HashIS6_EENSt3__18equal_toIS6_EENSC_9allocatorINSC_4pairIKS6_S7_EEEEE19EmplaceDecomposableEJRSH_S7_EEEDTclsr15memory_internalE17DecomposePairImplclsr3stdE7forwardIT_Efp_Ecl8PairArgsspclsr3stdE7forwardIT0_Efp0_EEEEOSN_DpOSO_"}
!112 = distinct !{!112, !113, !"_ZN4absl18container_internal17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS3_17FramebufferHelperEE5applyINS0_12raw_hash_setIS6_NS_13hash_internal4HashIS4_EENSt3__18equal_toIS4_EENSC_9allocatorINSC_4pairIKS4_S5_EEEEE19EmplaceDecomposableEJRSH_S5_EEEDTclsr4absl18container_internalE13DecomposePairclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSN_DpOSO_: argument 0"}
!113 = distinct !{!113, !"_ZN4absl18container_internal17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS3_17FramebufferHelperEE5applyINS0_12raw_hash_setIS6_NS_13hash_internal4HashIS4_EENSt3__18equal_toIS4_EENSC_9allocatorINSC_4pairIKS4_S5_EEEEE19EmplaceDecomposableEJRSH_S5_EEEDTclsr4absl18container_internalE13DecomposePairclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSN_DpOSO_"}
!114 = distinct !{!114, !115, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEEvE5applyINS0_12raw_hash_setIS7_NS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSE_9allocatorINSE_4pairIKS5_S6_EEEEE19EmplaceDecomposableEJRSJ_S6_ES7_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSQ_DpOSR_: argument 0"}
!115 = distinct !{!115, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEEvE5applyINS0_12raw_hash_setIS7_NS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSE_9allocatorINSE_4pairIKS5_S6_EEEEE19EmplaceDecomposableEJRSJ_S6_ES7_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSQ_DpOSR_"}
!116 = distinct !{!116, !117, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE7emplaceIJRSG_S6_ELi0EEENSF_INSJ_8iteratorEbEEDpOT_: argument 0"}
!117 = distinct !{!117, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk15FramebufferDescENS4_17FramebufferHelperEEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSB_9allocatorINSB_4pairIKS5_S6_EEEEE7emplaceIJRSG_S6_ELi0EEENSF_INSJ_8iteratorEbEEDpOT_"}
!118 = !{!119}
!119 = distinct !{!119, !120, !"_ZNK2rx2vk14RenderPassDesc31getColorUnresolveAttachmentMaskEv: argument 0"}
!120 = distinct !{!120, !"_ZNK2rx2vk14RenderPassDesc31getColorUnresolveAttachmentMaskEv"}
!121 = !{!122}
!122 = distinct !{!122, !123, !"_ZNK2gl16FramebufferState23getColorAttachmentsMaskEv: argument 0"}
!123 = distinct !{!123, !"_ZNK2gl16FramebufferState23getColorAttachmentsMaskEv"}
!124 = !{!125}
!125 = distinct !{!125, !126, !"_ZNK2rx2vk14RenderPassDesc31getColorUnresolveAttachmentMaskEv: argument 0"}
!126 = distinct !{!126, !"_ZNK2rx2vk14RenderPassDesc31getColorUnresolveAttachmentMaskEv"}
!127 = !{!128}
!128 = distinct !{!128, !129, !"_ZN2rx12_GLOBAL__N_127MakeUnresolveAttachmentMaskERKNS_2vk14RenderPassDescE: argument 0"}
!129 = distinct !{!129, !"_ZN2rx12_GLOBAL__N_127MakeUnresolveAttachmentMaskERKNS_2vk14RenderPassDescE"}
!130 = !{!131}
!131 = distinct !{!131, !132, !"_ZNK2gl16FramebufferState23getColorAttachmentsMaskEv: argument 0"}
!132 = distinct !{!132, !"_ZNK2gl16FramebufferState23getColorAttachmentsMaskEv"}
