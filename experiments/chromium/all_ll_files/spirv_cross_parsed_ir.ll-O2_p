; ModuleID = '../../third_party/vulkan-deps/spirv-cross/src/spirv_cross_parsed_ir.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-cross/src/spirv_cross_parsed_ir.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.spirv_cross::ParsedIR" = type { %"class.std::__1::unique_ptr", %"class.std::__1::vector", %"class.spirv_cross::SmallVector", %"class.std::__1::unordered_map", [14 x %"class.spirv_cross::SmallVector.29"], %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.32", %"class.spirv_cross::SmallVector.35", %"class.spirv_cross::SmallVector.43", %"class.std::__1::unordered_map.46", %"class.std::__1::unordered_map.73", %"class.spirv_cross::TypedID.100", %"struct.spirv_cross::ParsedIR::Source", i32, i32, i32, i32, %"class.std::__1::basic_string", %"class.spirv_cross::Bitset", %"class.std::__1::unordered_set" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.spirv_cross::ObjectPoolGroup"* }
%"struct.spirv_cross::ObjectPoolGroup" = type { [14 x %"class.std::__1::unique_ptr.0"] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.spirv_cross::ObjectPoolBase"* }
%"class.spirv_cross::ObjectPoolBase" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i32* }
%"class.spirv_cross::SmallVector" = type { %"class.spirv_cross::VectorView", i64, %"class.spirv_cross::AlignedBuffer" }
%"class.spirv_cross::VectorView" = type { %"class.spirv_cross::Variant"*, i64 }
%"class.spirv_cross::Variant" = type <{ %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::IVariant"*, i32, i8, [3 x i8] }>
%"struct.spirv_cross::IVariant" = type <{ i32 (...)**, %"class.spirv_cross::TypedID", [4 x i8] }>
%"class.spirv_cross::TypedID" = type { i32 }
%"class.spirv_cross::AlignedBuffer" = type { [192 x i8] }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.10", %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.24", %"class.std::__1::__compressed_pair.26", [4 x i8] }>
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12", %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i64 }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { float }
%"class.spirv_cross::SmallVector.29" = type { %"class.spirv_cross::VectorView.30", i64, %"class.spirv_cross::AlignedBuffer.31" }
%"class.spirv_cross::VectorView.30" = type { %"class.spirv_cross::TypedID"*, i64 }
%"class.spirv_cross::AlignedBuffer.31" = type { [32 x i8] }
%"class.spirv_cross::SmallVector.32" = type { %"class.spirv_cross::VectorView.33", i64, %"class.spirv_cross::AlignedBuffer.34" }
%"class.spirv_cross::VectorView.33" = type { i32*, i64 }
%"class.spirv_cross::AlignedBuffer.34" = type { [32 x i8] }
%"class.spirv_cross::SmallVector.35" = type { %"class.spirv_cross::VectorView.36", i64, %"class.spirv_cross::AlignedBuffer.42" }
%"class.spirv_cross::VectorView.36" = type { %"class.std::__1::basic_string"*, i64 }
%"class.spirv_cross::AlignedBuffer.42" = type { [192 x i8] }
%"class.spirv_cross::SmallVector.43" = type { %"class.spirv_cross::VectorView.44", i64, %"class.spirv_cross::AlignedBuffer.45" }
%"class.spirv_cross::VectorView.44" = type { i8*, i64 }
%"class.spirv_cross::AlignedBuffer.45" = type { [8 x i8] }
%"class.std::__1::unordered_map.46" = type { %"class.std::__1::__hash_table.47" }
%"class.std::__1::__hash_table.47" = type <{ %"class.std::__1::unique_ptr.48", %"class.std::__1::__compressed_pair.58", %"class.std::__1::__compressed_pair.63", %"class.std::__1::__compressed_pair.67", [4 x i8] }>
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50", %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.std::__1::__hash_node_base.51"** }
%"struct.std::__1::__hash_node_base.51" = type { %"struct.std::__1::__hash_node_base.51"* }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.std::__1::__bucket_list_deallocator.53" }
%"class.std::__1::__bucket_list_deallocator.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"struct.std::__1::__hash_node_base.51" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unordered_map.73" = type { %"class.std::__1::__hash_table.74" }
%"class.std::__1::__hash_table.74" = type <{ %"class.std::__1::unique_ptr.75", %"class.std::__1::__compressed_pair.85", %"class.std::__1::__compressed_pair.90", %"class.std::__1::__compressed_pair.94", [4 x i8] }>
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77", %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.std::__1::__hash_node_base.78"** }
%"struct.std::__1::__hash_node_base.78" = type { %"struct.std::__1::__hash_node_base.78"* }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.std::__1::__bucket_list_deallocator.80" }
%"class.std::__1::__bucket_list_deallocator.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"struct.std::__1::__hash_node_base.78" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.spirv_cross::TypedID.100" = type { i32 }
%"struct.spirv_cross::ParsedIR::Source" = type <{ i32, i8, i8, i8, i8 }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.spirv_cross::Bitset" = type { i64, %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.101" }
%"class.std::__1::__hash_table.101" = type <{ %"class.std::__1::unique_ptr.102", %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.117", %"class.std::__1::__compressed_pair.120", [4 x i8] }>
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104", %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.105"** }
%"struct.std::__1::__hash_node_base.105" = type { %"struct.std::__1::__hash_node_base.105"* }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.std::__1::__bucket_list_deallocator.107" }
%"class.std::__1::__bucket_list_deallocator.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.std::__1::__hash_node_base.105" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.spirv_cross::ParsedIR::LoopLock" = type { i32* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.spirv_cross::Meta" = type { %"struct.spirv_cross::Meta::Decoration", %"class.spirv_cross::SmallVector.362", %"class.std::__1::unordered_map.366", i8, i32 }
%"struct.spirv_cross::Meta::Decoration" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.spirv_cross::Bitset", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, %"struct.spirv_cross::Meta::Decoration::Extended" }
%"struct.spirv_cross::Meta::Decoration::Extended" = type { %"class.spirv_cross::Bitset", [16 x i32] }
%"class.spirv_cross::SmallVector.362" = type <{ %"class.spirv_cross::VectorView.363", i64, %"class.spirv_cross::AlignedBuffer.364", [7 x i8] }>
%"class.spirv_cross::VectorView.363" = type { %"struct.spirv_cross::Meta::Decoration"*, i64 }
%"class.spirv_cross::AlignedBuffer.364" = type { i8 }
%"class.std::__1::unordered_map.366" = type { %"class.std::__1::__hash_table.367" }
%"class.std::__1::__hash_table.367" = type <{ %"class.std::__1::unique_ptr.368", %"class.std::__1::__compressed_pair.378", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.386", [4 x i8] }>
%"class.std::__1::unique_ptr.368" = type { %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370", %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"struct.std::__1::__hash_node_base.371"** }
%"struct.std::__1::__hash_node_base.371" = type { %"struct.std::__1::__hash_node_base.371"* }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"class.std::__1::__bucket_list_deallocator.373" }
%"class.std::__1::__bucket_list_deallocator.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"struct.std::__1::__hash_node_base.371" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::allocator.40" = type { i8 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.spirv_cross::TypedID"* }
%"class.std::__1::tuple.450" = type { i8 }
%"struct.std::__1::__hash_node" = type <{ %"struct.std::__1::__hash_node_base.105", i64, i32, [4 x i8] }>
%"class.std::__1::tuple.453" = type { %"struct.std::__1::__tuple_impl.454" }
%"struct.std::__1::__tuple_impl.454" = type { %"class.std::__1::__tuple_leaf.455" }
%"class.std::__1::__tuple_leaf.455" = type { %"class.spirv_cross::TypedID"* }
%"struct.spirv_cross::SPIRConstant" = type { %"struct.spirv_cross::IVariant.base", %"class.spirv_cross::TypedID.135", %"struct.spirv_cross::SPIRConstant::ConstantMatrix", i8, i8, i8, %"class.spirv_cross::SmallVector.189", %"class.std::__1::basic_string" }
%"struct.spirv_cross::IVariant.base" = type <{ i32 (...)**, %"class.spirv_cross::TypedID" }>
%"class.spirv_cross::TypedID.135" = type { i32 }
%"struct.spirv_cross::SPIRConstant::ConstantMatrix" = type { [4 x %"struct.spirv_cross::SPIRConstant::ConstantVector"], [4 x %"class.spirv_cross::TypedID"], i32, [4 x i8] }
%"struct.spirv_cross::SPIRConstant::ConstantVector" = type <{ [4 x %"union.spirv_cross::SPIRConstant::Constant"], [4 x %"class.spirv_cross::TypedID"], i32, [4 x i8] }>
%"union.spirv_cross::SPIRConstant::Constant" = type { i64 }
%"class.spirv_cross::SmallVector.189" = type { %"class.spirv_cross::VectorView.190", i64, %"class.spirv_cross::AlignedBuffer.192" }
%"class.spirv_cross::VectorView.190" = type { %"class.spirv_cross::TypedID.191"*, i64 }
%"class.spirv_cross::TypedID.191" = type { i32 }
%"class.spirv_cross::AlignedBuffer.192" = type { [32 x i8] }
%"struct.spirv_cross::SPIRType" = type { %"struct.spirv_cross::IVariant.base", i32, i32, i32, i32, %"class.spirv_cross::SmallVector.127", %"class.spirv_cross::SmallVector.130", i32, i8, i8, i32, %"class.spirv_cross::SmallVector.133", %"class.spirv_cross::SmallVector.127", %"struct.spirv_cross::SPIRType::ImageType", %"class.spirv_cross::TypedID.135", %"class.spirv_cross::TypedID.135", %"class.std::__1::unordered_set.137" }
%"class.spirv_cross::SmallVector.130" = type { %"class.spirv_cross::VectorView.131", i64, %"class.spirv_cross::AlignedBuffer.132" }
%"class.spirv_cross::VectorView.131" = type { i8*, i64 }
%"class.spirv_cross::AlignedBuffer.132" = type { [8 x i8] }
%"class.spirv_cross::SmallVector.133" = type { %"class.spirv_cross::VectorView.134", i64, %"class.spirv_cross::AlignedBuffer.136" }
%"class.spirv_cross::VectorView.134" = type { %"class.spirv_cross::TypedID.135"*, i64 }
%"class.spirv_cross::AlignedBuffer.136" = type { [32 x i8] }
%"class.spirv_cross::SmallVector.127" = type { %"class.spirv_cross::VectorView.128", i64, %"class.spirv_cross::AlignedBuffer.129" }
%"class.spirv_cross::VectorView.128" = type { i32*, i64 }
%"class.spirv_cross::AlignedBuffer.129" = type { [32 x i8] }
%"struct.spirv_cross::SPIRType::ImageType" = type { %"class.spirv_cross::TypedID.135", i32, i8, i8, i8, i32, i32, i32 }
%"class.std::__1::unordered_set.137" = type { %"class.std::__1::__hash_table.138" }
%"class.std::__1::__hash_table.138" = type <{ %"class.std::__1::unique_ptr.139", %"class.std::__1::__compressed_pair.149", %"class.std::__1::__compressed_pair.154", %"class.std::__1::__compressed_pair.158", [4 x i8] }>
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141", %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"struct.std::__1::__hash_node_base.142"** }
%"struct.std::__1::__hash_node_base.142" = type { %"struct.std::__1::__hash_node_base.142"* }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.std::__1::__bucket_list_deallocator.144" }
%"class.std::__1::__bucket_list_deallocator.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"struct.std::__1::__hash_node_base.142" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.spirv_cross::SPIRVariable" = type { %"struct.spirv_cross::IVariant.base", %"class.spirv_cross::TypedID.135", i32, i32, %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID.174", %"class.spirv_cross::SmallVector.127", i8, i8, %"class.spirv_cross::TypedID", %"class.spirv_cross::SmallVector.29", i8, i8, i8, i8, i8, i32, %"class.spirv_cross::TypedID.175", i8, i8, %"struct.spirv_cross::SPIRFunction::Parameter"* }
%"class.spirv_cross::TypedID.174" = type { i32 }
%"class.spirv_cross::TypedID.175" = type { i32 }
%"struct.spirv_cross::SPIRFunction::Parameter" = type <{ %"class.spirv_cross::TypedID.135", %"class.spirv_cross::TypedID", i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.396" = type { %"class.std::__1::__compressed_pair.397" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398", %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.398" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.115"*, i8, [7 x i8] }>
%"class.std::__1::allocator.115" = type { i8 }
%"class.spirv_cross::ObjectPool" = type <{ %"class.spirv_cross::ObjectPoolBase", %"class.spirv_cross::SmallVector.125", %"class.spirv_cross::SmallVector.164", i32, [4 x i8] }>
%"class.spirv_cross::SmallVector.125" = type <{ %"class.spirv_cross::VectorView.126", i64, %"class.spirv_cross::AlignedBuffer.163", [7 x i8] }>
%"class.spirv_cross::VectorView.126" = type { %"struct.spirv_cross::SPIRType"**, i64 }
%"class.spirv_cross::AlignedBuffer.163" = type { i8 }
%"class.spirv_cross::SmallVector.164" = type { %"class.spirv_cross::VectorView.165", i64, %"class.spirv_cross::AlignedBuffer.170" }
%"class.spirv_cross::VectorView.165" = type { %"class.std::__1::unique_ptr.166"*, i64 }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.spirv_cross::SPIRType"* }
%"class.spirv_cross::AlignedBuffer.170" = type { [64 x i8] }
%"class.spirv_cross::ObjectPool.171" = type <{ %"class.spirv_cross::ObjectPoolBase", %"class.spirv_cross::SmallVector.172", %"class.spirv_cross::SmallVector.178", i32, [4 x i8] }>
%"class.spirv_cross::SmallVector.172" = type <{ %"class.spirv_cross::VectorView.173", i64, %"class.spirv_cross::AlignedBuffer.176", [7 x i8] }>
%"class.spirv_cross::VectorView.173" = type { %"struct.spirv_cross::SPIRVariable"**, i64 }
%"class.spirv_cross::AlignedBuffer.176" = type { i8 }
%"class.spirv_cross::SmallVector.178" = type { %"class.spirv_cross::VectorView.179", i64, %"class.spirv_cross::AlignedBuffer.184" }
%"class.spirv_cross::VectorView.179" = type { %"class.std::__1::unique_ptr.180"*, i64 }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.spirv_cross::SPIRVariable"* }
%"class.spirv_cross::AlignedBuffer.184" = type { [64 x i8] }
%"class.spirv_cross::ObjectPool.186" = type <{ %"class.spirv_cross::ObjectPoolBase", %"class.spirv_cross::SmallVector.187", %"class.spirv_cross::SmallVector.195", i32, [4 x i8] }>
%"class.spirv_cross::SmallVector.187" = type <{ %"class.spirv_cross::VectorView.188", i64, %"class.spirv_cross::AlignedBuffer.193", [7 x i8] }>
%"class.spirv_cross::VectorView.188" = type { %"struct.spirv_cross::SPIRConstant"**, i64 }
%"class.spirv_cross::AlignedBuffer.193" = type { i8 }
%"class.spirv_cross::SmallVector.195" = type { %"class.spirv_cross::VectorView.196", i64, %"class.spirv_cross::AlignedBuffer.201" }
%"class.spirv_cross::VectorView.196" = type { %"class.std::__1::unique_ptr.197"*, i64 }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"struct.spirv_cross::SPIRConstant"* }
%"class.spirv_cross::AlignedBuffer.201" = type { [64 x i8] }
%"class.spirv_cross::ObjectPool.203" = type <{ %"class.spirv_cross::ObjectPoolBase", %"class.spirv_cross::SmallVector.204", %"class.spirv_cross::SmallVector.224", i32, [4 x i8] }>
%"class.spirv_cross::SmallVector.204" = type <{ %"class.spirv_cross::VectorView.205", i64, %"class.spirv_cross::AlignedBuffer.222", [7 x i8] }>
%"class.spirv_cross::VectorView.205" = type { %"struct.spirv_cross::SPIRFunction"**, i64 }
%"struct.spirv_cross::SPIRFunction" = type <{ %"struct.spirv_cross::IVariant.base", %"class.spirv_cross::TypedID.135", %"class.spirv_cross::TypedID.135", [4 x i8], %"class.spirv_cross::SmallVector.206", %"class.spirv_cross::SmallVector.206", %"class.spirv_cross::SmallVector.209", %"class.spirv_cross::TypedID.175", [4 x i8], %"class.spirv_cross::SmallVector.212", %"class.spirv_cross::SmallVector.215", %"struct.spirv_cross::SPIRFunction::EntryLine", %"class.spirv_cross::SmallVector.218", %"class.spirv_cross::SmallVector.218", %"class.spirv_cross::SmallVector.29", i8, i8, i8, [5 x i8] }>
%"class.spirv_cross::SmallVector.206" = type { %"class.spirv_cross::VectorView.207", i64, %"class.spirv_cross::AlignedBuffer.208" }
%"class.spirv_cross::VectorView.207" = type { %"struct.spirv_cross::SPIRFunction::Parameter"*, i64 }
%"class.spirv_cross::AlignedBuffer.208" = type { [160 x i8] }
%"class.spirv_cross::SmallVector.209" = type { %"class.spirv_cross::VectorView.210", i64, %"class.spirv_cross::AlignedBuffer.211" }
%"class.spirv_cross::VectorView.210" = type { %"class.spirv_cross::TypedID.174"*, i64 }
%"class.spirv_cross::AlignedBuffer.211" = type { [32 x i8] }
%"class.spirv_cross::SmallVector.212" = type { %"class.spirv_cross::VectorView.213", i64, %"class.spirv_cross::AlignedBuffer.214" }
%"class.spirv_cross::VectorView.213" = type { %"class.spirv_cross::TypedID.175"*, i64 }
%"class.spirv_cross::AlignedBuffer.214" = type { [32 x i8] }
%"class.spirv_cross::SmallVector.215" = type { %"class.spirv_cross::VectorView.216", i64, %"class.spirv_cross::AlignedBuffer.217" }
%"class.spirv_cross::VectorView.216" = type { %"struct.spirv_cross::SPIRFunction::CombinedImageSamplerParameter"*, i64 }
%"struct.spirv_cross::SPIRFunction::CombinedImageSamplerParameter" = type <{ %"class.spirv_cross::TypedID.174", %"class.spirv_cross::TypedID.174", %"class.spirv_cross::TypedID.174", i8, i8, i8, i8 }>
%"class.spirv_cross::AlignedBuffer.217" = type { [128 x i8] }
%"struct.spirv_cross::SPIRFunction::EntryLine" = type { i32, i32 }
%"class.spirv_cross::SmallVector.218" = type <{ %"class.spirv_cross::VectorView.219", i64, %"class.spirv_cross::AlignedBuffer.220", [7 x i8] }>
%"class.spirv_cross::VectorView.219" = type { %"class.std::__1::function"*, i64 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.spirv_cross::AlignedBuffer.220" = type { i8 }
%"class.spirv_cross::AlignedBuffer.222" = type { i8 }
%"class.spirv_cross::SmallVector.224" = type { %"class.spirv_cross::VectorView.225", i64, %"class.spirv_cross::AlignedBuffer.230" }
%"class.spirv_cross::VectorView.225" = type { %"class.std::__1::unique_ptr.226"*, i64 }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"struct.spirv_cross::SPIRFunction"* }
%"class.spirv_cross::AlignedBuffer.230" = type { [64 x i8] }
%"class.spirv_cross::ObjectPool.232" = type <{ %"class.spirv_cross::ObjectPoolBase", %"class.spirv_cross::SmallVector.233", %"class.spirv_cross::SmallVector.237", i32, [4 x i8] }>
%"class.spirv_cross::SmallVector.233" = type <{ %"class.spirv_cross::VectorView.234", i64, %"class.spirv_cross::AlignedBuffer.235", [7 x i8] }>
%"class.spirv_cross::VectorView.234" = type { %"struct.spirv_cross::SPIRFunctionPrototype"**, i64 }
%"struct.spirv_cross::SPIRFunctionPrototype" = type { %"struct.spirv_cross::IVariant.base", %"class.spirv_cross::TypedID.135", %"class.spirv_cross::SmallVector.127" }
%"class.spirv_cross::AlignedBuffer.235" = type { i8 }
%"class.spirv_cross::SmallVector.237" = type { %"class.spirv_cross::VectorView.238", i64, %"class.spirv_cross::AlignedBuffer.243" }
%"class.spirv_cross::VectorView.238" = type { %"class.std::__1::unique_ptr.239"*, i64 }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"struct.spirv_cross::SPIRFunctionPrototype"* }
%"class.spirv_cross::AlignedBuffer.243" = type { [64 x i8] }
%"class.spirv_cross::ObjectPool.245" = type <{ %"class.spirv_cross::ObjectPoolBase", %"class.spirv_cross::SmallVector.246", %"class.spirv_cross::SmallVector.262", i32, [4 x i8] }>
%"class.spirv_cross::SmallVector.246" = type <{ %"class.spirv_cross::VectorView.247", i64, %"class.spirv_cross::AlignedBuffer.260", [7 x i8] }>
%"class.spirv_cross::VectorView.247" = type { %"struct.spirv_cross::SPIRBlock"**, i64 }
%"struct.spirv_cross::SPIRBlock" = type { %"struct.spirv_cross::IVariant.base", i32, i32, i32, %"class.spirv_cross::TypedID.175", %"class.spirv_cross::TypedID.175", %"class.spirv_cross::TypedID.175", %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID.175", %"class.spirv_cross::TypedID.175", %"class.spirv_cross::TypedID.175", %"class.spirv_cross::SmallVector.248", %"class.spirv_cross::SmallVector.251", %"class.spirv_cross::SmallVector.254", %"class.spirv_cross::SmallVector.254", %"class.spirv_cross::SmallVector.257", i8, i8, i8, %"class.spirv_cross::TypedID.175", %"class.spirv_cross::TypedID.175", %"class.spirv_cross::SmallVector.209", %"class.spirv_cross::SmallVector.209", %"class.spirv_cross::SmallVector.29" }
%"class.spirv_cross::SmallVector.248" = type { %"class.spirv_cross::VectorView.249", i64, %"class.spirv_cross::AlignedBuffer.250" }
%"class.spirv_cross::VectorView.249" = type { %"struct.spirv_cross::Instruction"*, i64 }
%"struct.spirv_cross::Instruction" = type { i16, i16, i32, i32 }
%"class.spirv_cross::AlignedBuffer.250" = type { [96 x i8] }
%"class.spirv_cross::SmallVector.251" = type { %"class.spirv_cross::VectorView.252", i64, %"class.spirv_cross::AlignedBuffer.253" }
%"class.spirv_cross::VectorView.252" = type { %"struct.spirv_cross::SPIRBlock::Phi"*, i64 }
%"struct.spirv_cross::SPIRBlock::Phi" = type { %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID.175", %"class.spirv_cross::TypedID.174" }
%"class.spirv_cross::AlignedBuffer.253" = type { [96 x i8] }
%"class.spirv_cross::SmallVector.254" = type { %"class.spirv_cross::VectorView.255", i64, %"class.spirv_cross::AlignedBuffer.256" }
%"class.spirv_cross::VectorView.255" = type { %"struct.std::__1::pair"*, i64 }
%"struct.std::__1::pair" = type { %"class.spirv_cross::TypedID.135", %"class.spirv_cross::TypedID" }
%"class.spirv_cross::AlignedBuffer.256" = type { [64 x i8] }
%"class.spirv_cross::SmallVector.257" = type { %"class.spirv_cross::VectorView.258", i64, %"class.spirv_cross::AlignedBuffer.259" }
%"class.spirv_cross::VectorView.258" = type { %"struct.spirv_cross::SPIRBlock::Case"*, i64 }
%"struct.spirv_cross::SPIRBlock::Case" = type { i32, %"class.spirv_cross::TypedID.175" }
%"class.spirv_cross::AlignedBuffer.259" = type { [64 x i8] }
%"class.spirv_cross::AlignedBuffer.260" = type { i8 }
%"class.spirv_cross::SmallVector.262" = type { %"class.spirv_cross::VectorView.263", i64, %"class.spirv_cross::AlignedBuffer.268" }
%"class.spirv_cross::VectorView.263" = type { %"class.std::__1::unique_ptr.264"*, i64 }
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"struct.spirv_cross::SPIRBlock"* }
%"class.spirv_cross::AlignedBuffer.268" = type { [64 x i8] }
%"class.spirv_cross::ObjectPool.270" = type <{ %"class.spirv_cross::ObjectPoolBase", %"class.spirv_cross::SmallVector.271", %"class.spirv_cross::SmallVector.275", i32, [4 x i8] }>
%"class.spirv_cross::SmallVector.271" = type <{ %"class.spirv_cross::VectorView.272", i64, %"class.spirv_cross::AlignedBuffer.273", [7 x i8] }>
%"class.spirv_cross::VectorView.272" = type { %"struct.spirv_cross::SPIRExtension"**, i64 }
%"struct.spirv_cross::SPIRExtension" = type { %"struct.spirv_cross::IVariant.base", i32 }
%"class.spirv_cross::AlignedBuffer.273" = type { i8 }
%"class.spirv_cross::SmallVector.275" = type { %"class.spirv_cross::VectorView.276", i64, %"class.spirv_cross::AlignedBuffer.281" }
%"class.spirv_cross::VectorView.276" = type { %"class.std::__1::unique_ptr.277"*, i64 }
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"struct.spirv_cross::SPIRExtension"* }
%"class.spirv_cross::AlignedBuffer.281" = type { [64 x i8] }
%"class.spirv_cross::ObjectPool.283" = type <{ %"class.spirv_cross::ObjectPoolBase", %"class.spirv_cross::SmallVector.284", %"class.spirv_cross::SmallVector.288", i32, [4 x i8] }>
%"class.spirv_cross::SmallVector.284" = type <{ %"class.spirv_cross::VectorView.285", i64, %"class.spirv_cross::AlignedBuffer.286", [7 x i8] }>
%"class.spirv_cross::VectorView.285" = type { %"struct.spirv_cross::SPIRExpression"**, i64 }
%"struct.spirv_cross::SPIRExpression" = type <{ %"struct.spirv_cross::IVariant.base", %"class.spirv_cross::TypedID", %"class.std::__1::basic_string", %"class.spirv_cross::TypedID.135", %"class.spirv_cross::TypedID", i8, i8, i8, [5 x i8], %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.29", i32, [4 x i8] }>
%"class.spirv_cross::AlignedBuffer.286" = type { i8 }
%"class.spirv_cross::SmallVector.288" = type { %"class.spirv_cross::VectorView.289", i64, %"class.spirv_cross::AlignedBuffer.294" }
%"class.spirv_cross::VectorView.289" = type { %"class.std::__1::unique_ptr.290"*, i64 }
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.spirv_cross::SPIRExpression"* }
%"class.spirv_cross::AlignedBuffer.294" = type { [64 x i8] }
%"class.spirv_cross::ObjectPool.296" = type <{ %"class.spirv_cross::ObjectPoolBase", %"class.spirv_cross::SmallVector.297", %"class.spirv_cross::SmallVector.301", i32, [4 x i8] }>
%"class.spirv_cross::SmallVector.297" = type <{ %"class.spirv_cross::VectorView.298", i64, %"class.spirv_cross::AlignedBuffer.299", [7 x i8] }>
%"class.spirv_cross::VectorView.298" = type { %"struct.spirv_cross::SPIRConstantOp"**, i64 }
%"struct.spirv_cross::SPIRConstantOp" = type <{ %"struct.spirv_cross::IVariant.base", i32, %"class.spirv_cross::SmallVector.127", %"class.spirv_cross::TypedID.135", [4 x i8] }>
%"class.spirv_cross::AlignedBuffer.299" = type { i8 }
%"class.spirv_cross::SmallVector.301" = type { %"class.spirv_cross::VectorView.302", i64, %"class.spirv_cross::AlignedBuffer.307" }
%"class.spirv_cross::VectorView.302" = type { %"class.std::__1::unique_ptr.303"*, i64 }
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"struct.spirv_cross::SPIRConstantOp"* }
%"class.spirv_cross::AlignedBuffer.307" = type { [64 x i8] }
%"class.spirv_cross::ObjectPool.309" = type <{ %"class.spirv_cross::ObjectPoolBase", %"class.spirv_cross::SmallVector.310", %"class.spirv_cross::SmallVector.314", i32, [4 x i8] }>
%"class.spirv_cross::SmallVector.310" = type <{ %"class.spirv_cross::VectorView.311", i64, %"class.spirv_cross::AlignedBuffer.312", [7 x i8] }>
%"class.spirv_cross::VectorView.311" = type { %"struct.spirv_cross::SPIRCombinedImageSampler"**, i64 }
%"struct.spirv_cross::SPIRCombinedImageSampler" = type { %"struct.spirv_cross::IVariant.base", %"class.spirv_cross::TypedID.135", %"class.spirv_cross::TypedID.174", %"class.spirv_cross::TypedID.174" }
%"class.spirv_cross::AlignedBuffer.312" = type { i8 }
%"class.spirv_cross::SmallVector.314" = type { %"class.spirv_cross::VectorView.315", i64, %"class.spirv_cross::AlignedBuffer.320" }
%"class.spirv_cross::VectorView.315" = type { %"class.std::__1::unique_ptr.316"*, i64 }
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"struct.spirv_cross::SPIRCombinedImageSampler"* }
%"class.spirv_cross::AlignedBuffer.320" = type { [64 x i8] }
%"class.spirv_cross::ObjectPool.322" = type <{ %"class.spirv_cross::ObjectPoolBase", %"class.spirv_cross::SmallVector.323", %"class.spirv_cross::SmallVector.327", i32, [4 x i8] }>
%"class.spirv_cross::SmallVector.323" = type <{ %"class.spirv_cross::VectorView.324", i64, %"class.spirv_cross::AlignedBuffer.325", [7 x i8] }>
%"class.spirv_cross::VectorView.324" = type { %"struct.spirv_cross::SPIRAccessChain"**, i64 }
%"struct.spirv_cross::SPIRAccessChain" = type { %"struct.spirv_cross::IVariant.base", %"class.spirv_cross::TypedID.135", i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.spirv_cross::TypedID.174", i32, i32, i8, i8, %"class.spirv_cross::SmallVector.29" }
%"class.spirv_cross::AlignedBuffer.325" = type { i8 }
%"class.spirv_cross::SmallVector.327" = type { %"class.spirv_cross::VectorView.328", i64, %"class.spirv_cross::AlignedBuffer.333" }
%"class.spirv_cross::VectorView.328" = type { %"class.std::__1::unique_ptr.329"*, i64 }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"struct.spirv_cross::SPIRAccessChain"* }
%"class.spirv_cross::AlignedBuffer.333" = type { [64 x i8] }
%"class.spirv_cross::ObjectPool.335" = type <{ %"class.spirv_cross::ObjectPoolBase", %"class.spirv_cross::SmallVector.336", %"class.spirv_cross::SmallVector.340", i32, [4 x i8] }>
%"class.spirv_cross::SmallVector.336" = type <{ %"class.spirv_cross::VectorView.337", i64, %"class.spirv_cross::AlignedBuffer.338", [7 x i8] }>
%"class.spirv_cross::VectorView.337" = type { %"struct.spirv_cross::SPIRUndef"**, i64 }
%"struct.spirv_cross::SPIRUndef" = type { %"struct.spirv_cross::IVariant.base", %"class.spirv_cross::TypedID.135" }
%"class.spirv_cross::AlignedBuffer.338" = type { i8 }
%"class.spirv_cross::SmallVector.340" = type { %"class.spirv_cross::VectorView.341", i64, %"class.spirv_cross::AlignedBuffer.346" }
%"class.spirv_cross::VectorView.341" = type { %"class.std::__1::unique_ptr.342"*, i64 }
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"struct.spirv_cross::SPIRUndef"* }
%"class.spirv_cross::AlignedBuffer.346" = type { [64 x i8] }
%"class.spirv_cross::ObjectPool.348" = type <{ %"class.spirv_cross::ObjectPoolBase", %"class.spirv_cross::SmallVector.349", %"class.spirv_cross::SmallVector.353", i32, [4 x i8] }>
%"class.spirv_cross::SmallVector.349" = type <{ %"class.spirv_cross::VectorView.350", i64, %"class.spirv_cross::AlignedBuffer.351", [7 x i8] }>
%"class.spirv_cross::VectorView.350" = type { %"struct.spirv_cross::SPIRString"**, i64 }
%"struct.spirv_cross::SPIRString" = type { %"struct.spirv_cross::IVariant.base", %"class.std::__1::basic_string" }
%"class.spirv_cross::AlignedBuffer.351" = type { i8 }
%"class.spirv_cross::SmallVector.353" = type { %"class.spirv_cross::VectorView.354", i64, %"class.spirv_cross::AlignedBuffer.359" }
%"class.spirv_cross::VectorView.354" = type { %"class.std::__1::unique_ptr.355"*, i64 }
%"class.std::__1::unique_ptr.355" = type { %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"struct.spirv_cross::SPIRString"* }
%"class.spirv_cross::AlignedBuffer.359" = type { [64 x i8] }
%"class.std::__1::allocator.22" = type { i8 }
%"struct.std::__1::pair.392" = type { %"class.spirv_cross::TypedID", %"struct.spirv_cross::Meta" }
%"class.std::__1::allocator.88" = type { i8 }
%"struct.std::__1::pair.409" = type { %"class.spirv_cross::TypedID.100", [4 x i8], %"struct.spirv_cross::SPIREntryPoint" }
%"struct.spirv_cross::SPIREntryPoint" = type <{ %"class.spirv_cross::TypedID.100", [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.spirv_cross::SmallVector.209", %"class.spirv_cross::Bitset", %"struct.spirv_cross::SPIREntryPoint::WorkgroupSize", i32, i32, i32, i8, [3 x i8] }>
%"struct.spirv_cross::SPIREntryPoint::WorkgroupSize" = type { i32, i32, i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::pair.411" = type { %"class.spirv_cross::TypedID"*, %"struct.spirv_cross::Meta"* }
%"struct.std::__1::__hash_node.400" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.392" }
%"struct.std::__1::__hash_node.401" = type { %"struct.std::__1::__hash_node_base.371", i64, %"struct.std::__1::__hash_value_type.402" }
%"struct.std::__1::__hash_value_type.402" = type { %"struct.std::__1::pair.403" }
%"struct.std::__1::pair.403" = type { i32, i32 }
%"struct.std::__1::__hash_node.404" = type { %"struct.std::__1::__hash_node_base.51", i64, %"struct.std::__1::__hash_value_type.405" }
%"struct.std::__1::__hash_value_type.405" = type { %"struct.std::__1::pair.406" }
%"struct.std::__1::pair.406" = type { %"class.spirv_cross::TypedID.175", %"class.spirv_cross::TypedID.175" }
%"struct.std::__1::__hash_node.407" = type { %"struct.std::__1::__hash_node_base.78", i64, %"struct.std::__1::__hash_value_type.408" }
%"struct.std::__1::__hash_value_type.408" = type { %"struct.std::__1::pair.409" }

$_ZN11spirv_cross11SmallVectorINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELm8EEaSEOS8_ = comdat any

$_ZN11spirv_cross11SmallVectorINS_7VariantELm8EEaSEOS2_ = comdat any

$_ZN11spirv_cross11SmallVectorINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELm8EEaSERKS8_ = comdat any

$_ZN11spirv_cross11SmallVectorINS_7VariantELm8EE7reserveEm = comdat any

$_ZN11spirv_cross6Bitset9merge_andERKS0_ = comdat any

$_ZN11spirv_cross16report_and_abortERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEE = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE13__move_assignERS7_NS_17integral_constantIbLb1EEE = comdat any

$_ZN11spirv_cross15ObjectPoolGroupD2Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_8SPIRTypeEED2Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_8SPIRTypeEED0Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_8SPIRTypeEE11free_opaqueEPv = comdat any

$_ZN11spirv_cross11SmallVectorIPNS_8SPIRTypeELm0EE7reserveEm = comdat any

$_ZN11spirv_cross10ObjectPoolINS_12SPIRVariableEED2Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_12SPIRVariableEED0Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_12SPIRVariableEE11free_opaqueEPv = comdat any

$_ZN11spirv_cross11SmallVectorIPNS_12SPIRVariableELm0EE7reserveEm = comdat any

$_ZN11spirv_cross10ObjectPoolINS_12SPIRConstantEED2Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_12SPIRConstantEED0Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_12SPIRConstantEE11free_opaqueEPv = comdat any

$_ZN11spirv_cross11SmallVectorIPNS_12SPIRConstantELm0EE7reserveEm = comdat any

$_ZN11spirv_cross10ObjectPoolINS_12SPIRFunctionEED2Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_12SPIRFunctionEED0Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_12SPIRFunctionEE11free_opaqueEPv = comdat any

$_ZN11spirv_cross11SmallVectorIPNS_12SPIRFunctionELm0EE7reserveEm = comdat any

$_ZN11spirv_cross10ObjectPoolINS_21SPIRFunctionPrototypeEED2Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_21SPIRFunctionPrototypeEED0Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_21SPIRFunctionPrototypeEE11free_opaqueEPv = comdat any

$_ZN11spirv_cross11SmallVectorIPNS_21SPIRFunctionPrototypeELm0EE7reserveEm = comdat any

$_ZN11spirv_cross10ObjectPoolINS_9SPIRBlockEED2Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_9SPIRBlockEED0Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_9SPIRBlockEE11free_opaqueEPv = comdat any

$_ZN11spirv_cross11SmallVectorIPNS_9SPIRBlockELm0EE7reserveEm = comdat any

$_ZN11spirv_cross10ObjectPoolINS_13SPIRExtensionEED2Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_13SPIRExtensionEED0Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_13SPIRExtensionEE11free_opaqueEPv = comdat any

$_ZN11spirv_cross11SmallVectorIPNS_13SPIRExtensionELm0EE7reserveEm = comdat any

$_ZN11spirv_cross10ObjectPoolINS_14SPIRExpressionEED2Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_14SPIRExpressionEED0Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_14SPIRExpressionEE11free_opaqueEPv = comdat any

$_ZN11spirv_cross11SmallVectorIPNS_14SPIRExpressionELm0EE7reserveEm = comdat any

$_ZN11spirv_cross10ObjectPoolINS_14SPIRConstantOpEED2Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_14SPIRConstantOpEED0Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_14SPIRConstantOpEE11free_opaqueEPv = comdat any

$_ZN11spirv_cross11SmallVectorIPNS_14SPIRConstantOpELm0EE7reserveEm = comdat any

$_ZN11spirv_cross10ObjectPoolINS_24SPIRCombinedImageSamplerEED2Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_24SPIRCombinedImageSamplerEED0Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_24SPIRCombinedImageSamplerEE11free_opaqueEPv = comdat any

$_ZN11spirv_cross11SmallVectorIPNS_24SPIRCombinedImageSamplerELm0EE7reserveEm = comdat any

$_ZN11spirv_cross10ObjectPoolINS_15SPIRAccessChainEED2Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_15SPIRAccessChainEED0Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_15SPIRAccessChainEE11free_opaqueEPv = comdat any

$_ZN11spirv_cross11SmallVectorIPNS_15SPIRAccessChainELm0EE7reserveEm = comdat any

$_ZN11spirv_cross10ObjectPoolINS_9SPIRUndefEED2Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_9SPIRUndefEED0Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_9SPIRUndefEE11free_opaqueEPv = comdat any

$_ZN11spirv_cross11SmallVectorIPNS_9SPIRUndefELm0EE7reserveEm = comdat any

$_ZN11spirv_cross10ObjectPoolINS_10SPIRStringEED2Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_10SPIRStringEED0Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_10SPIRStringEE11free_opaqueEPv = comdat any

$_ZN11spirv_cross11SmallVectorIPNS_10SPIRStringELm0EE7reserveEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE13__move_assignERSI_NS_17integral_constantIbLb1EEE = comdat any

$_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS4_5TypesE0EEENS4_4MetaEEEPvEEEEE7destroyINS_4pairIKS7_S8_EEvvEEvRSC_PT_ = comdat any

$_ZN11spirv_cross4Meta10DecorationD2Ev = comdat any

$_ZN11spirv_cross11SmallVectorINS_7TypedIDILNS_5TypesE0EEELm8EE7reserveEm = comdat any

$_ZN11spirv_cross11SmallVectorIN3spv10CapabilityELm8EE7reserveEm = comdat any

$_ZN11spirv_cross11SmallVectorINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELm8EE7reserveEm = comdat any

$_ZN11spirv_cross11SmallVectorIhLm8EE7reserveEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE6EEES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE13__move_assignERSH_NS_17integral_constantIbLb1EEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE4EEENS2_14SPIREntryPointEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE13__move_assignERSI_NS_17integral_constantIbLb1EEE = comdat any

$_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS4_5TypesE4EEENS4_14SPIREntryPointEEEPvEEEEE7destroyINS_4pairIKS7_S8_EEvvEEvRSC_PT_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEEEEvT_SQ_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE19__node_insert_multiEPNS_11__hash_nodeIS7_PvEE = comdat any

$_ZNSt3__14pairIRN11spirv_cross7TypedIDILNS1_5TypesE0EEERNS1_4MetaEEaSIRKNS0_IKS4_S6_EELb0EEERS8_OT_ = comdat any

$_ZN11spirv_cross4Meta10DecorationaSERKS1_ = comdat any

$_ZN11spirv_cross11SmallVectorINS_4Meta10DecorationELm0EE7reserveEm = comdat any

$_ZN11spirv_cross4Meta10DecorationC2ERKS1_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeIS2_PvEEEEEEvT_SL_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE19__node_insert_multiEPNS_11__hash_nodeIS2_PvEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE27__node_insert_multi_prepareEmRS2_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE27__node_insert_multi_prepareEmRS7_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm = comdat any

$_ZNSt3__14pairIKN11spirv_cross7TypedIDILNS1_5TypesE0EEENS1_4MetaEEC2ERKS7_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_4pairIKjjEEEEENSF_INS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE6EEES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEEEEvT_SP_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE6EEES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE19__node_insert_multiEPNS_11__hash_nodeIS6_PvEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE6EEES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE27__node_insert_multi_prepareEmRS6_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE6EEES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE6EEES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE4EEENS2_14SPIREntryPointEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEEEEvT_SQ_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE4EEENS2_14SPIREntryPointEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE19__node_insert_multiEPNS_11__hash_nodeIS7_PvEE = comdat any

$_ZN11spirv_cross14SPIREntryPointaSERKS0_ = comdat any

$_ZN11spirv_cross11SmallVectorINS_7TypedIDILNS_5TypesE2EEELm8EE7reserveEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE4EEENS2_14SPIREntryPointEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE27__node_insert_multi_prepareEmRS7_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE4EEENS2_14SPIREntryPointEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE4EEENS2_14SPIREntryPointEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm = comdat any

$_ZN11spirv_cross14SPIREntryPointC2ERKS0_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEEEEvT_SF_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE19__node_insert_multiEPNS_11__hash_nodeIjPvEE = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE27__node_insert_multi_prepareEmRj = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZN11spirv_cross7Variant16allocate_and_setINS_12SPIRConstantEJRjEEEPT_NS_5TypesEDpOT0_ = comdat any

$_ZN11spirv_cross10ObjectPoolINS_12SPIRConstantEE8allocateIJRjEEEPS1_DpOT_ = comdat any

$_ZN11spirv_cross11SmallVectorINSt3__110unique_ptrINS_12SPIRConstantENS_10ObjectPoolIS3_E13MallocDeleterEEELm8EE7reserveEm = comdat any

$_ZN11spirv_cross12SPIRConstantD2Ev = comdat any

$_ZN11spirv_cross12SPIRConstantD0Ev = comdat any

$_ZN11spirv_cross12SPIRConstant5cloneEPNS_14ObjectPoolBaseE = comdat any

$_ZN11spirv_cross8IVariantD2Ev = comdat any

$_ZN11spirv_cross8IVariantD0Ev = comdat any

$_ZN11spirv_cross10ObjectPoolINS_12SPIRConstantEE8allocateIJRS1_EEEPS1_DpOT_ = comdat any

$_ZN11spirv_cross11SmallVectorINS_7TypedIDILNS_5TypesE3EEELm8EE7reserveEm = comdat any

$_ZN11spirv_cross11SmallVectorIjLm8EE7reserveEm = comdat any

$_ZN11spirv_cross7Variant16allocate_and_setINS_12SPIRConstantEJRjPjjbEEEPT_NS_5TypesEDpOT0_ = comdat any

$_ZN11spirv_cross10ObjectPoolINS_12SPIRConstantEE8allocateIJRjPjjbEEEPS1_DpOT_ = comdat any

$_ZN11spirv_cross12SPIRConstantC2ENS_7TypedIDILNS_5TypesE1EEEPKjjb = comdat any

$_ZTVN11spirv_cross10ObjectPoolINS_8SPIRTypeEEE = comdat any

$_ZTVN11spirv_cross10ObjectPoolINS_12SPIRVariableEEE = comdat any

$_ZTVN11spirv_cross10ObjectPoolINS_12SPIRConstantEEE = comdat any

$_ZTVN11spirv_cross10ObjectPoolINS_12SPIRFunctionEEE = comdat any

$_ZTVN11spirv_cross10ObjectPoolINS_21SPIRFunctionPrototypeEEE = comdat any

$_ZTVN11spirv_cross10ObjectPoolINS_9SPIRBlockEEE = comdat any

$_ZTVN11spirv_cross10ObjectPoolINS_13SPIRExtensionEEE = comdat any

$_ZTVN11spirv_cross10ObjectPoolINS_14SPIRExpressionEEE = comdat any

$_ZTVN11spirv_cross10ObjectPoolINS_14SPIRConstantOpEEE = comdat any

$_ZTVN11spirv_cross10ObjectPoolINS_24SPIRCombinedImageSamplerEEE = comdat any

$_ZTVN11spirv_cross10ObjectPoolINS_15SPIRAccessChainEEE = comdat any

$_ZTVN11spirv_cross10ObjectPoolINS_9SPIRUndefEEE = comdat any

$_ZTVN11spirv_cross10ObjectPoolINS_10SPIRStringEEE = comdat any

$_ZTVN11spirv_cross12SPIRConstantE = comdat any

$_ZTVN11spirv_cross8IVariantE = comdat any

@.str = private unnamed_addr constant [43 x i8] c"Cannot add typed ID while looping over it.\00", align 1
@.str.1 = private unnamed_addr constant [46 x i8] c"Cannot override IDs when loop is soft locked.\00", align 1
@.str.2 = private unnamed_addr constant [48 x i8] c"Array size of OpConstantNull must be a literal.\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"_m\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"gl_\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"spv\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"_RESERVED_IDENTIFIER_FIXUP_\00", align 1
@.str.7 = private unnamed_addr constant [27 x i8] c"_RESERVED_IDENTIFIER_FIXUP\00", align 1
@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZTVN11spirv_cross10ObjectPoolINS_8SPIRTypeEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spirv_cross::ObjectPool"*)* @_ZN11spirv_cross10ObjectPoolINS_8SPIRTypeEED2Ev to i8*), i8* bitcast (void (%"class.spirv_cross::ObjectPool"*)* @_ZN11spirv_cross10ObjectPoolINS_8SPIRTypeEED0Ev to i8*), i8* bitcast (void (%"class.spirv_cross::ObjectPool"*, i8*)* @_ZN11spirv_cross10ObjectPoolINS_8SPIRTypeEE11free_opaqueEPv to i8*)] }, comdat, align 8
@_ZTVN11spirv_cross10ObjectPoolINS_12SPIRVariableEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spirv_cross::ObjectPool.171"*)* @_ZN11spirv_cross10ObjectPoolINS_12SPIRVariableEED2Ev to i8*), i8* bitcast (void (%"class.spirv_cross::ObjectPool.171"*)* @_ZN11spirv_cross10ObjectPoolINS_12SPIRVariableEED0Ev to i8*), i8* bitcast (void (%"class.spirv_cross::ObjectPool.171"*, i8*)* @_ZN11spirv_cross10ObjectPoolINS_12SPIRVariableEE11free_opaqueEPv to i8*)] }, comdat, align 8
@_ZTVN11spirv_cross10ObjectPoolINS_12SPIRConstantEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spirv_cross::ObjectPool.186"*)* @_ZN11spirv_cross10ObjectPoolINS_12SPIRConstantEED2Ev to i8*), i8* bitcast (void (%"class.spirv_cross::ObjectPool.186"*)* @_ZN11spirv_cross10ObjectPoolINS_12SPIRConstantEED0Ev to i8*), i8* bitcast (void (%"class.spirv_cross::ObjectPool.186"*, i8*)* @_ZN11spirv_cross10ObjectPoolINS_12SPIRConstantEE11free_opaqueEPv to i8*)] }, comdat, align 8
@_ZTVN11spirv_cross10ObjectPoolINS_12SPIRFunctionEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spirv_cross::ObjectPool.203"*)* @_ZN11spirv_cross10ObjectPoolINS_12SPIRFunctionEED2Ev to i8*), i8* bitcast (void (%"class.spirv_cross::ObjectPool.203"*)* @_ZN11spirv_cross10ObjectPoolINS_12SPIRFunctionEED0Ev to i8*), i8* bitcast (void (%"class.spirv_cross::ObjectPool.203"*, i8*)* @_ZN11spirv_cross10ObjectPoolINS_12SPIRFunctionEE11free_opaqueEPv to i8*)] }, comdat, align 8
@_ZTVN11spirv_cross10ObjectPoolINS_21SPIRFunctionPrototypeEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spirv_cross::ObjectPool.232"*)* @_ZN11spirv_cross10ObjectPoolINS_21SPIRFunctionPrototypeEED2Ev to i8*), i8* bitcast (void (%"class.spirv_cross::ObjectPool.232"*)* @_ZN11spirv_cross10ObjectPoolINS_21SPIRFunctionPrototypeEED0Ev to i8*), i8* bitcast (void (%"class.spirv_cross::ObjectPool.232"*, i8*)* @_ZN11spirv_cross10ObjectPoolINS_21SPIRFunctionPrototypeEE11free_opaqueEPv to i8*)] }, comdat, align 8
@_ZTVN11spirv_cross10ObjectPoolINS_9SPIRBlockEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spirv_cross::ObjectPool.245"*)* @_ZN11spirv_cross10ObjectPoolINS_9SPIRBlockEED2Ev to i8*), i8* bitcast (void (%"class.spirv_cross::ObjectPool.245"*)* @_ZN11spirv_cross10ObjectPoolINS_9SPIRBlockEED0Ev to i8*), i8* bitcast (void (%"class.spirv_cross::ObjectPool.245"*, i8*)* @_ZN11spirv_cross10ObjectPoolINS_9SPIRBlockEE11free_opaqueEPv to i8*)] }, comdat, align 8
@_ZTVN11spirv_cross10ObjectPoolINS_13SPIRExtensionEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spirv_cross::ObjectPool.270"*)* @_ZN11spirv_cross10ObjectPoolINS_13SPIRExtensionEED2Ev to i8*), i8* bitcast (void (%"class.spirv_cross::ObjectPool.270"*)* @_ZN11spirv_cross10ObjectPoolINS_13SPIRExtensionEED0Ev to i8*), i8* bitcast (void (%"class.spirv_cross::ObjectPool.270"*, i8*)* @_ZN11spirv_cross10ObjectPoolINS_13SPIRExtensionEE11free_opaqueEPv to i8*)] }, comdat, align 8
@_ZTVN11spirv_cross10ObjectPoolINS_14SPIRExpressionEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spirv_cross::ObjectPool.283"*)* @_ZN11spirv_cross10ObjectPoolINS_14SPIRExpressionEED2Ev to i8*), i8* bitcast (void (%"class.spirv_cross::ObjectPool.283"*)* @_ZN11spirv_cross10ObjectPoolINS_14SPIRExpressionEED0Ev to i8*), i8* bitcast (void (%"class.spirv_cross::ObjectPool.283"*, i8*)* @_ZN11spirv_cross10ObjectPoolINS_14SPIRExpressionEE11free_opaqueEPv to i8*)] }, comdat, align 8
@_ZTVN11spirv_cross10ObjectPoolINS_14SPIRConstantOpEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spirv_cross::ObjectPool.296"*)* @_ZN11spirv_cross10ObjectPoolINS_14SPIRConstantOpEED2Ev to i8*), i8* bitcast (void (%"class.spirv_cross::ObjectPool.296"*)* @_ZN11spirv_cross10ObjectPoolINS_14SPIRConstantOpEED0Ev to i8*), i8* bitcast (void (%"class.spirv_cross::ObjectPool.296"*, i8*)* @_ZN11spirv_cross10ObjectPoolINS_14SPIRConstantOpEE11free_opaqueEPv to i8*)] }, comdat, align 8
@_ZTVN11spirv_cross10ObjectPoolINS_24SPIRCombinedImageSamplerEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spirv_cross::ObjectPool.309"*)* @_ZN11spirv_cross10ObjectPoolINS_24SPIRCombinedImageSamplerEED2Ev to i8*), i8* bitcast (void (%"class.spirv_cross::ObjectPool.309"*)* @_ZN11spirv_cross10ObjectPoolINS_24SPIRCombinedImageSamplerEED0Ev to i8*), i8* bitcast (void (%"class.spirv_cross::ObjectPool.309"*, i8*)* @_ZN11spirv_cross10ObjectPoolINS_24SPIRCombinedImageSamplerEE11free_opaqueEPv to i8*)] }, comdat, align 8
@_ZTVN11spirv_cross10ObjectPoolINS_15SPIRAccessChainEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spirv_cross::ObjectPool.322"*)* @_ZN11spirv_cross10ObjectPoolINS_15SPIRAccessChainEED2Ev to i8*), i8* bitcast (void (%"class.spirv_cross::ObjectPool.322"*)* @_ZN11spirv_cross10ObjectPoolINS_15SPIRAccessChainEED0Ev to i8*), i8* bitcast (void (%"class.spirv_cross::ObjectPool.322"*, i8*)* @_ZN11spirv_cross10ObjectPoolINS_15SPIRAccessChainEE11free_opaqueEPv to i8*)] }, comdat, align 8
@_ZTVN11spirv_cross10ObjectPoolINS_9SPIRUndefEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spirv_cross::ObjectPool.335"*)* @_ZN11spirv_cross10ObjectPoolINS_9SPIRUndefEED2Ev to i8*), i8* bitcast (void (%"class.spirv_cross::ObjectPool.335"*)* @_ZN11spirv_cross10ObjectPoolINS_9SPIRUndefEED0Ev to i8*), i8* bitcast (void (%"class.spirv_cross::ObjectPool.335"*, i8*)* @_ZN11spirv_cross10ObjectPoolINS_9SPIRUndefEE11free_opaqueEPv to i8*)] }, comdat, align 8
@_ZTVN11spirv_cross10ObjectPoolINS_10SPIRStringEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spirv_cross::ObjectPool.348"*)* @_ZN11spirv_cross10ObjectPoolINS_10SPIRStringEED2Ev to i8*), i8* bitcast (void (%"class.spirv_cross::ObjectPool.348"*)* @_ZN11spirv_cross10ObjectPoolINS_10SPIRStringEED0Ev to i8*), i8* bitcast (void (%"class.spirv_cross::ObjectPool.348"*, i8*)* @_ZN11spirv_cross10ObjectPoolINS_10SPIRStringEE11free_opaqueEPv to i8*)] }, comdat, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"nullptr\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"Bad cast\00", align 1
@_ZTVN11spirv_cross12SPIRConstantE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.spirv_cross::SPIRConstant"*)* @_ZN11spirv_cross12SPIRConstantD2Ev to i8*), i8* bitcast (void (%"struct.spirv_cross::SPIRConstant"*)* @_ZN11spirv_cross12SPIRConstantD0Ev to i8*), i8* bitcast (%"struct.spirv_cross::IVariant"* (%"struct.spirv_cross::SPIRConstant"*, %"class.spirv_cross::ObjectPoolBase"*)* @_ZN11spirv_cross12SPIRConstant5cloneEPNS_14ObjectPoolBaseE to i8*)] }, comdat, align 8
@_ZTVN11spirv_cross8IVariantE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.spirv_cross::IVariant"*)* @_ZN11spirv_cross8IVariantD2Ev to i8*), i8* bitcast (void (%"struct.spirv_cross::IVariant"*)* @_ZN11spirv_cross8IVariantD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.11 = private unnamed_addr constant [37 x i8] c"Overwriting a variant with new type.\00", align 1

@_ZN11spirv_cross8ParsedIRC1Ev = hidden unnamed_addr alias void (%"class.spirv_cross::ParsedIR"*), void (%"class.spirv_cross::ParsedIR"*)* @_ZN11spirv_cross8ParsedIRC2Ev
@_ZN11spirv_cross8ParsedIRC1EOS0_ = hidden unnamed_addr alias void (%"class.spirv_cross::ParsedIR"*, %"class.spirv_cross::ParsedIR"*), void (%"class.spirv_cross::ParsedIR"*, %"class.spirv_cross::ParsedIR"*)* @_ZN11spirv_cross8ParsedIRC2EOS0_
@_ZN11spirv_cross8ParsedIRC1ERKS0_ = hidden unnamed_addr alias void (%"class.spirv_cross::ParsedIR"*, %"class.spirv_cross::ParsedIR"*), void (%"class.spirv_cross::ParsedIR"*, %"class.spirv_cross::ParsedIR"*)* @_ZN11spirv_cross8ParsedIRC2ERKS0_
@_ZN11spirv_cross8ParsedIR8LoopLockD1Ev = hidden unnamed_addr alias void (%"class.spirv_cross::ParsedIR::LoopLock"*), void (%"class.spirv_cross::ParsedIR::LoopLock"*)* @_ZN11spirv_cross8ParsedIR8LoopLockD2Ev
@_ZN11spirv_cross8ParsedIR8LoopLockC1EPj = hidden unnamed_addr alias void (%"class.spirv_cross::ParsedIR::LoopLock"*, i32*), void (%"class.spirv_cross::ParsedIR::LoopLock"*, i32*)* @_ZN11spirv_cross8ParsedIR8LoopLockC2EPj
@_ZN11spirv_cross8ParsedIR8LoopLockC1EOS1_ = hidden unnamed_addr alias void (%"class.spirv_cross::ParsedIR::LoopLock"*, %"class.spirv_cross::ParsedIR::LoopLock"*), void (%"class.spirv_cross::ParsedIR::LoopLock"*, %"class.spirv_cross::ParsedIR::LoopLock"*)* @_ZN11spirv_cross8ParsedIR8LoopLockC2EOS1_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11spirv_cross8ParsedIRC2Ev(%"class.spirv_cross::ParsedIR"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 2, i32 1
  %4 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 2, i32 2
  %5 = bitcast %"class.spirv_cross::SmallVector"* %2 to %"class.spirv_cross::AlignedBuffer"**
  %6 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 2, i32 0, i32 1
  store i64 0, i64* %6, align 8
  %7 = bitcast %"class.spirv_cross::ParsedIR"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false)
  store %"class.spirv_cross::AlignedBuffer"* %4, %"class.spirv_cross::AlignedBuffer"** %5, align 8
  store i64 8, i64* %3, align 8
  %8 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 3
  %10 = bitcast %"class.std::__1::__compressed_pair.26"* %9 to i32*
  %11 = bitcast %"class.std::__1::unordered_map"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #17
  store i32 1065353216, i32* %10, align 4
  %12 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 0
  %13 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 0, i32 2
  %14 = bitcast %"class.spirv_cross::SmallVector.29"* %12 to %"class.spirv_cross::AlignedBuffer.31"**
  %15 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 0, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %13, %"class.spirv_cross::AlignedBuffer.31"** %14, align 8
  %16 = bitcast i64* %15 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %16, align 8
  %17 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 1
  %18 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 1, i32 2
  %19 = bitcast %"class.spirv_cross::SmallVector.29"* %17 to %"class.spirv_cross::AlignedBuffer.31"**
  %20 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 1, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %18, %"class.spirv_cross::AlignedBuffer.31"** %19, align 8
  %21 = bitcast i64* %20 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %21, align 8
  %22 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 2
  %23 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 2, i32 2
  %24 = bitcast %"class.spirv_cross::SmallVector.29"* %22 to %"class.spirv_cross::AlignedBuffer.31"**
  %25 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 2, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %23, %"class.spirv_cross::AlignedBuffer.31"** %24, align 8
  %26 = bitcast i64* %25 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %26, align 8
  %27 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 3
  %28 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 3, i32 2
  %29 = bitcast %"class.spirv_cross::SmallVector.29"* %27 to %"class.spirv_cross::AlignedBuffer.31"**
  %30 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 3, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %28, %"class.spirv_cross::AlignedBuffer.31"** %29, align 8
  %31 = bitcast i64* %30 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %31, align 8
  %32 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 4
  %33 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 4, i32 2
  %34 = bitcast %"class.spirv_cross::SmallVector.29"* %32 to %"class.spirv_cross::AlignedBuffer.31"**
  %35 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 4, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %33, %"class.spirv_cross::AlignedBuffer.31"** %34, align 8
  %36 = bitcast i64* %35 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %36, align 8
  %37 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 5
  %38 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 5, i32 2
  %39 = bitcast %"class.spirv_cross::SmallVector.29"* %37 to %"class.spirv_cross::AlignedBuffer.31"**
  %40 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 5, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %38, %"class.spirv_cross::AlignedBuffer.31"** %39, align 8
  %41 = bitcast i64* %40 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %41, align 8
  %42 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 6
  %43 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 6, i32 2
  %44 = bitcast %"class.spirv_cross::SmallVector.29"* %42 to %"class.spirv_cross::AlignedBuffer.31"**
  %45 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 6, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %43, %"class.spirv_cross::AlignedBuffer.31"** %44, align 8
  %46 = bitcast i64* %45 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %46, align 8
  %47 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 7
  %48 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 7, i32 2
  %49 = bitcast %"class.spirv_cross::SmallVector.29"* %47 to %"class.spirv_cross::AlignedBuffer.31"**
  %50 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 7, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %48, %"class.spirv_cross::AlignedBuffer.31"** %49, align 8
  %51 = bitcast i64* %50 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %51, align 8
  %52 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 8
  %53 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 8, i32 2
  %54 = bitcast %"class.spirv_cross::SmallVector.29"* %52 to %"class.spirv_cross::AlignedBuffer.31"**
  %55 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 8, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %53, %"class.spirv_cross::AlignedBuffer.31"** %54, align 8
  %56 = bitcast i64* %55 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %56, align 8
  %57 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 9
  %58 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 9, i32 1
  %59 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 9, i32 2
  %60 = bitcast %"class.spirv_cross::SmallVector.29"* %57 to %"class.spirv_cross::AlignedBuffer.31"**
  %61 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 9, i32 0, i32 1
  store i64 0, i64* %61, align 8
  store %"class.spirv_cross::AlignedBuffer.31"* %59, %"class.spirv_cross::AlignedBuffer.31"** %60, align 8
  store i64 8, i64* %58, align 8
  %62 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 10
  %63 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 10, i32 2
  %64 = bitcast %"class.spirv_cross::SmallVector.29"* %62 to %"class.spirv_cross::AlignedBuffer.31"**
  %65 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 10, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %63, %"class.spirv_cross::AlignedBuffer.31"** %64, align 8
  %66 = bitcast i64* %65 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %66, align 8
  %67 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 11
  %68 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 11, i32 2
  %69 = bitcast %"class.spirv_cross::SmallVector.29"* %67 to %"class.spirv_cross::AlignedBuffer.31"**
  %70 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 11, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %68, %"class.spirv_cross::AlignedBuffer.31"** %69, align 8
  %71 = bitcast i64* %70 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %71, align 8
  %72 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 12
  %73 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 12, i32 2
  %74 = bitcast %"class.spirv_cross::SmallVector.29"* %72 to %"class.spirv_cross::AlignedBuffer.31"**
  %75 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 12, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %73, %"class.spirv_cross::AlignedBuffer.31"** %74, align 8
  %76 = bitcast i64* %75 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %76, align 8
  %77 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 13
  %78 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 13, i32 2
  %79 = bitcast %"class.spirv_cross::SmallVector.29"* %77 to %"class.spirv_cross::AlignedBuffer.31"**
  %80 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 13, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %78, %"class.spirv_cross::AlignedBuffer.31"** %79, align 8
  %81 = bitcast i64* %80 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %81, align 8
  %82 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 5
  %83 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 5, i32 1
  %84 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 5, i32 2
  %85 = bitcast %"class.spirv_cross::SmallVector.29"* %82 to %"class.spirv_cross::AlignedBuffer.31"**
  %86 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 5, i32 0, i32 1
  store i64 0, i64* %86, align 8
  store %"class.spirv_cross::AlignedBuffer.31"* %84, %"class.spirv_cross::AlignedBuffer.31"** %85, align 8
  store i64 8, i64* %83, align 8
  %87 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 6
  %88 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 6, i32 2
  %89 = bitcast %"class.spirv_cross::SmallVector.29"* %87 to %"class.spirv_cross::AlignedBuffer.31"**
  %90 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 6, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %88, %"class.spirv_cross::AlignedBuffer.31"** %89, align 8
  %91 = bitcast i64* %90 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %91, align 8
  %92 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 7
  %93 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 7, i32 2
  %94 = bitcast %"class.spirv_cross::SmallVector.32"* %92 to %"class.spirv_cross::AlignedBuffer.34"**
  %95 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 7, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.34"* %93, %"class.spirv_cross::AlignedBuffer.34"** %94, align 8
  %96 = bitcast i64* %95 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %96, align 8
  %97 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 8
  %98 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 8, i32 2
  %99 = bitcast %"class.spirv_cross::SmallVector.35"* %97 to %"class.spirv_cross::AlignedBuffer.42"**
  %100 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 8, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.42"* %98, %"class.spirv_cross::AlignedBuffer.42"** %99, align 8
  %101 = bitcast i64* %100 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %101, align 8
  %102 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 9, i32 2, i32 0, i64 0
  %103 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 9, i32 0, i32 0
  %104 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 9, i32 0, i32 1
  store i8* %102, i8** %103, align 8
  %105 = bitcast i64* %104 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %105, align 8
  %106 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 10
  %107 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 10, i32 0, i32 3
  %108 = bitcast %"class.std::__1::__compressed_pair.67"* %107 to i32*
  %109 = bitcast %"class.std::__1::unordered_map.46"* %106 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 32, i1 false) #17
  store i32 1065353216, i32* %108, align 4
  %110 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 11
  %111 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 11, i32 0, i32 3
  %112 = bitcast %"class.std::__1::__compressed_pair.94"* %111 to i32*
  %113 = bitcast %"class.std::__1::unordered_map.73"* %110 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 32, i1 false) #17
  store i32 1065353216, i32* %112, align 4
  %114 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 12, i32 0
  %115 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 14
  %116 = bitcast i32* %114 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %116, i8 0, i64 11, i1 false)
  store i32 2147483647, i32* %115, align 4
  %117 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 15
  store i32 2147483647, i32* %117, align 8
  %118 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 16
  store i32 0, i32* %118, align 4
  %119 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 17
  store i32 0, i32* %119, align 8
  %120 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 18
  %121 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 19, i32 1, i32 0, i32 3
  %122 = bitcast %"class.std::__1::__compressed_pair.120"* %121 to i32*
  %123 = bitcast %"class.std::__1::basic_string"* %120 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 64, i1 false)
  store i32 1065353216, i32* %122, align 4
  %124 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 20
  %125 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 20, i32 0, i32 3
  %126 = bitcast %"class.std::__1::__compressed_pair.120"* %125 to i32*
  %127 = bitcast %"class.std::__1::unordered_set"* %124 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %127, i8 0, i64 32, i1 false) #17
  store i32 1065353216, i32* %126, align 4
  %128 = tail call i8* @_Znwm(i64 112) #18
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %128, i8 0, i64 112, i1 false) #17
  %129 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %130 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %129, align 8
  %131 = bitcast %"class.spirv_cross::ParsedIR"* %0 to i8**
  store i8* %128, i8** %131, align 8
  %132 = icmp eq %"struct.spirv_cross::ObjectPoolGroup"* %130, null
  %133 = bitcast i8* %128 to %"struct.spirv_cross::ObjectPoolGroup"*
  br i1 %132, label %137, label %134

134:                                              ; preds = %1
  tail call void @_ZN11spirv_cross15ObjectPoolGroupD2Ev(%"struct.spirv_cross::ObjectPoolGroup"* nonnull %130) #17
  %135 = bitcast %"struct.spirv_cross::ObjectPoolGroup"* %130 to i8*
  tail call void @_ZdlPv(i8* %135) #18
  %136 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %129, align 8
  br label %137

137:                                              ; preds = %1, %134
  %138 = phi %"struct.spirv_cross::ObjectPoolGroup"* [ %133, %1 ], [ %136, %134 ]
  %139 = tail call i8* @_Znwm(i64 136) #18
  %140 = bitcast i8* %139 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_8SPIRTypeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %140, align 8
  %141 = getelementptr inbounds i8, i8* %139, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 24, i1 false) #17
  %142 = getelementptr inbounds i8, i8* %139, i64 40
  %143 = getelementptr inbounds i8, i8* %139, i64 64
  %144 = getelementptr inbounds i8, i8* %139, i64 48
  %145 = bitcast i8* %142 to i8**
  store i8* %143, i8** %145, align 8
  %146 = bitcast i8* %144 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %146, align 8
  %147 = getelementptr inbounds i8, i8* %139, i64 128
  %148 = bitcast i8* %147 to i32*
  store i32 16, i32* %148, align 8
  %149 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %138, i64 0, i32 0, i64 1, i32 0, i32 0, i32 0
  %150 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %149, align 8
  %151 = bitcast %"class.spirv_cross::ObjectPoolBase"** %149 to i8**
  store i8* %139, i8** %151, align 8
  %152 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %150, null
  br i1 %152, label %158, label %153

153:                                              ; preds = %137
  %154 = bitcast %"class.spirv_cross::ObjectPoolBase"* %150 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %155 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %154, align 8
  %156 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %155, i64 1
  %157 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %156, align 8
  tail call void %157(%"class.spirv_cross::ObjectPoolBase"* nonnull %150) #17
  br label %158

158:                                              ; preds = %137, %153
  %159 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %129, align 8
  %160 = tail call i8* @_Znwm(i64 136) #18
  %161 = bitcast i8* %160 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_12SPIRVariableEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %161, align 8
  %162 = getelementptr inbounds i8, i8* %160, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %162, i8 0, i64 24, i1 false) #17
  %163 = getelementptr inbounds i8, i8* %160, i64 40
  %164 = getelementptr inbounds i8, i8* %160, i64 64
  %165 = getelementptr inbounds i8, i8* %160, i64 48
  %166 = bitcast i8* %163 to i8**
  store i8* %164, i8** %166, align 8
  %167 = bitcast i8* %165 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %167, align 8
  %168 = getelementptr inbounds i8, i8* %160, i64 128
  %169 = bitcast i8* %168 to i32*
  store i32 16, i32* %169, align 8
  %170 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %159, i64 0, i32 0, i64 2, i32 0, i32 0, i32 0
  %171 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %170, align 8
  %172 = bitcast %"class.spirv_cross::ObjectPoolBase"** %170 to i8**
  store i8* %160, i8** %172, align 8
  %173 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %171, null
  br i1 %173, label %179, label %174

174:                                              ; preds = %158
  %175 = bitcast %"class.spirv_cross::ObjectPoolBase"* %171 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %176 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %175, align 8
  %177 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %176, i64 1
  %178 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %177, align 8
  tail call void %178(%"class.spirv_cross::ObjectPoolBase"* nonnull %171) #17
  br label %179

179:                                              ; preds = %158, %174
  %180 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %129, align 8
  %181 = tail call i8* @_Znwm(i64 136) #18
  %182 = bitcast i8* %181 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_12SPIRConstantEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %182, align 8
  %183 = getelementptr inbounds i8, i8* %181, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %183, i8 0, i64 24, i1 false) #17
  %184 = getelementptr inbounds i8, i8* %181, i64 40
  %185 = getelementptr inbounds i8, i8* %181, i64 64
  %186 = getelementptr inbounds i8, i8* %181, i64 48
  %187 = bitcast i8* %184 to i8**
  store i8* %185, i8** %187, align 8
  %188 = bitcast i8* %186 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %188, align 8
  %189 = getelementptr inbounds i8, i8* %181, i64 128
  %190 = bitcast i8* %189 to i32*
  store i32 16, i32* %190, align 8
  %191 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %180, i64 0, i32 0, i64 3, i32 0, i32 0, i32 0
  %192 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %191, align 8
  %193 = bitcast %"class.spirv_cross::ObjectPoolBase"** %191 to i8**
  store i8* %181, i8** %193, align 8
  %194 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %192, null
  br i1 %194, label %200, label %195

195:                                              ; preds = %179
  %196 = bitcast %"class.spirv_cross::ObjectPoolBase"* %192 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %197 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %196, align 8
  %198 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %197, i64 1
  %199 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %198, align 8
  tail call void %199(%"class.spirv_cross::ObjectPoolBase"* nonnull %192) #17
  br label %200

200:                                              ; preds = %179, %195
  %201 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %129, align 8
  %202 = tail call i8* @_Znwm(i64 136) #18
  %203 = bitcast i8* %202 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_12SPIRFunctionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %203, align 8
  %204 = getelementptr inbounds i8, i8* %202, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %204, i8 0, i64 24, i1 false) #17
  %205 = getelementptr inbounds i8, i8* %202, i64 40
  %206 = getelementptr inbounds i8, i8* %202, i64 64
  %207 = getelementptr inbounds i8, i8* %202, i64 48
  %208 = bitcast i8* %205 to i8**
  store i8* %206, i8** %208, align 8
  %209 = bitcast i8* %207 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %209, align 8
  %210 = getelementptr inbounds i8, i8* %202, i64 128
  %211 = bitcast i8* %210 to i32*
  store i32 16, i32* %211, align 8
  %212 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %201, i64 0, i32 0, i64 4, i32 0, i32 0, i32 0
  %213 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %212, align 8
  %214 = bitcast %"class.spirv_cross::ObjectPoolBase"** %212 to i8**
  store i8* %202, i8** %214, align 8
  %215 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %213, null
  br i1 %215, label %221, label %216

216:                                              ; preds = %200
  %217 = bitcast %"class.spirv_cross::ObjectPoolBase"* %213 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %218 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %217, align 8
  %219 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %218, i64 1
  %220 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %219, align 8
  tail call void %220(%"class.spirv_cross::ObjectPoolBase"* nonnull %213) #17
  br label %221

221:                                              ; preds = %200, %216
  %222 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %129, align 8
  %223 = tail call i8* @_Znwm(i64 136) #18
  %224 = bitcast i8* %223 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_21SPIRFunctionPrototypeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %224, align 8
  %225 = getelementptr inbounds i8, i8* %223, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %225, i8 0, i64 24, i1 false) #17
  %226 = getelementptr inbounds i8, i8* %223, i64 40
  %227 = getelementptr inbounds i8, i8* %223, i64 64
  %228 = getelementptr inbounds i8, i8* %223, i64 48
  %229 = bitcast i8* %226 to i8**
  store i8* %227, i8** %229, align 8
  %230 = bitcast i8* %228 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %230, align 8
  %231 = getelementptr inbounds i8, i8* %223, i64 128
  %232 = bitcast i8* %231 to i32*
  store i32 16, i32* %232, align 8
  %233 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %222, i64 0, i32 0, i64 5, i32 0, i32 0, i32 0
  %234 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %233, align 8
  %235 = bitcast %"class.spirv_cross::ObjectPoolBase"** %233 to i8**
  store i8* %223, i8** %235, align 8
  %236 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %234, null
  br i1 %236, label %242, label %237

237:                                              ; preds = %221
  %238 = bitcast %"class.spirv_cross::ObjectPoolBase"* %234 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %239 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %238, align 8
  %240 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %239, i64 1
  %241 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %240, align 8
  tail call void %241(%"class.spirv_cross::ObjectPoolBase"* nonnull %234) #17
  br label %242

242:                                              ; preds = %221, %237
  %243 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %129, align 8
  %244 = tail call i8* @_Znwm(i64 136) #18
  %245 = bitcast i8* %244 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_9SPIRBlockEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %245, align 8
  %246 = getelementptr inbounds i8, i8* %244, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %246, i8 0, i64 24, i1 false) #17
  %247 = getelementptr inbounds i8, i8* %244, i64 40
  %248 = getelementptr inbounds i8, i8* %244, i64 64
  %249 = getelementptr inbounds i8, i8* %244, i64 48
  %250 = bitcast i8* %247 to i8**
  store i8* %248, i8** %250, align 8
  %251 = bitcast i8* %249 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %251, align 8
  %252 = getelementptr inbounds i8, i8* %244, i64 128
  %253 = bitcast i8* %252 to i32*
  store i32 16, i32* %253, align 8
  %254 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %243, i64 0, i32 0, i64 6, i32 0, i32 0, i32 0
  %255 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %254, align 8
  %256 = bitcast %"class.spirv_cross::ObjectPoolBase"** %254 to i8**
  store i8* %244, i8** %256, align 8
  %257 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %255, null
  br i1 %257, label %263, label %258

258:                                              ; preds = %242
  %259 = bitcast %"class.spirv_cross::ObjectPoolBase"* %255 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %260 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %259, align 8
  %261 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %260, i64 1
  %262 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %261, align 8
  tail call void %262(%"class.spirv_cross::ObjectPoolBase"* nonnull %255) #17
  br label %263

263:                                              ; preds = %242, %258
  %264 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %129, align 8
  %265 = tail call i8* @_Znwm(i64 136) #18
  %266 = bitcast i8* %265 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_13SPIRExtensionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %266, align 8
  %267 = getelementptr inbounds i8, i8* %265, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %267, i8 0, i64 24, i1 false) #17
  %268 = getelementptr inbounds i8, i8* %265, i64 40
  %269 = getelementptr inbounds i8, i8* %265, i64 64
  %270 = getelementptr inbounds i8, i8* %265, i64 48
  %271 = bitcast i8* %268 to i8**
  store i8* %269, i8** %271, align 8
  %272 = bitcast i8* %270 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %272, align 8
  %273 = getelementptr inbounds i8, i8* %265, i64 128
  %274 = bitcast i8* %273 to i32*
  store i32 16, i32* %274, align 8
  %275 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %264, i64 0, i32 0, i64 7, i32 0, i32 0, i32 0
  %276 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %275, align 8
  %277 = bitcast %"class.spirv_cross::ObjectPoolBase"** %275 to i8**
  store i8* %265, i8** %277, align 8
  %278 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %276, null
  br i1 %278, label %284, label %279

279:                                              ; preds = %263
  %280 = bitcast %"class.spirv_cross::ObjectPoolBase"* %276 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %281 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %280, align 8
  %282 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %281, i64 1
  %283 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %282, align 8
  tail call void %283(%"class.spirv_cross::ObjectPoolBase"* nonnull %276) #17
  br label %284

284:                                              ; preds = %263, %279
  %285 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %129, align 8
  %286 = tail call i8* @_Znwm(i64 136) #18
  %287 = bitcast i8* %286 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_14SPIRExpressionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %287, align 8
  %288 = getelementptr inbounds i8, i8* %286, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %288, i8 0, i64 24, i1 false) #17
  %289 = getelementptr inbounds i8, i8* %286, i64 40
  %290 = getelementptr inbounds i8, i8* %286, i64 64
  %291 = getelementptr inbounds i8, i8* %286, i64 48
  %292 = bitcast i8* %289 to i8**
  store i8* %290, i8** %292, align 8
  %293 = bitcast i8* %291 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %293, align 8
  %294 = getelementptr inbounds i8, i8* %286, i64 128
  %295 = bitcast i8* %294 to i32*
  store i32 16, i32* %295, align 8
  %296 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %285, i64 0, i32 0, i64 8, i32 0, i32 0, i32 0
  %297 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %296, align 8
  %298 = bitcast %"class.spirv_cross::ObjectPoolBase"** %296 to i8**
  store i8* %286, i8** %298, align 8
  %299 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %297, null
  br i1 %299, label %305, label %300

300:                                              ; preds = %284
  %301 = bitcast %"class.spirv_cross::ObjectPoolBase"* %297 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %302 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %301, align 8
  %303 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %302, i64 1
  %304 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %303, align 8
  tail call void %304(%"class.spirv_cross::ObjectPoolBase"* nonnull %297) #17
  br label %305

305:                                              ; preds = %284, %300
  %306 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %129, align 8
  %307 = tail call i8* @_Znwm(i64 136) #18
  %308 = bitcast i8* %307 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_14SPIRConstantOpEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %308, align 8
  %309 = getelementptr inbounds i8, i8* %307, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %309, i8 0, i64 24, i1 false) #17
  %310 = getelementptr inbounds i8, i8* %307, i64 40
  %311 = getelementptr inbounds i8, i8* %307, i64 64
  %312 = getelementptr inbounds i8, i8* %307, i64 48
  %313 = bitcast i8* %310 to i8**
  store i8* %311, i8** %313, align 8
  %314 = bitcast i8* %312 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %314, align 8
  %315 = getelementptr inbounds i8, i8* %307, i64 128
  %316 = bitcast i8* %315 to i32*
  store i32 16, i32* %316, align 8
  %317 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %306, i64 0, i32 0, i64 9, i32 0, i32 0, i32 0
  %318 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %317, align 8
  %319 = bitcast %"class.spirv_cross::ObjectPoolBase"** %317 to i8**
  store i8* %307, i8** %319, align 8
  %320 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %318, null
  br i1 %320, label %326, label %321

321:                                              ; preds = %305
  %322 = bitcast %"class.spirv_cross::ObjectPoolBase"* %318 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %323 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %322, align 8
  %324 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %323, i64 1
  %325 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %324, align 8
  tail call void %325(%"class.spirv_cross::ObjectPoolBase"* nonnull %318) #17
  br label %326

326:                                              ; preds = %305, %321
  %327 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %129, align 8
  %328 = tail call i8* @_Znwm(i64 136) #18
  %329 = bitcast i8* %328 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_24SPIRCombinedImageSamplerEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %329, align 8
  %330 = getelementptr inbounds i8, i8* %328, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %330, i8 0, i64 24, i1 false) #17
  %331 = getelementptr inbounds i8, i8* %328, i64 40
  %332 = getelementptr inbounds i8, i8* %328, i64 64
  %333 = getelementptr inbounds i8, i8* %328, i64 48
  %334 = bitcast i8* %331 to i8**
  store i8* %332, i8** %334, align 8
  %335 = bitcast i8* %333 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %335, align 8
  %336 = getelementptr inbounds i8, i8* %328, i64 128
  %337 = bitcast i8* %336 to i32*
  store i32 16, i32* %337, align 8
  %338 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %327, i64 0, i32 0, i64 10, i32 0, i32 0, i32 0
  %339 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %338, align 8
  %340 = bitcast %"class.spirv_cross::ObjectPoolBase"** %338 to i8**
  store i8* %328, i8** %340, align 8
  %341 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %339, null
  br i1 %341, label %347, label %342

342:                                              ; preds = %326
  %343 = bitcast %"class.spirv_cross::ObjectPoolBase"* %339 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %344 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %343, align 8
  %345 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %344, i64 1
  %346 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %345, align 8
  tail call void %346(%"class.spirv_cross::ObjectPoolBase"* nonnull %339) #17
  br label %347

347:                                              ; preds = %326, %342
  %348 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %129, align 8
  %349 = tail call i8* @_Znwm(i64 136) #18
  %350 = bitcast i8* %349 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_15SPIRAccessChainEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %350, align 8
  %351 = getelementptr inbounds i8, i8* %349, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %351, i8 0, i64 24, i1 false) #17
  %352 = getelementptr inbounds i8, i8* %349, i64 40
  %353 = getelementptr inbounds i8, i8* %349, i64 64
  %354 = getelementptr inbounds i8, i8* %349, i64 48
  %355 = bitcast i8* %352 to i8**
  store i8* %353, i8** %355, align 8
  %356 = bitcast i8* %354 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %356, align 8
  %357 = getelementptr inbounds i8, i8* %349, i64 128
  %358 = bitcast i8* %357 to i32*
  store i32 16, i32* %358, align 8
  %359 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %348, i64 0, i32 0, i64 11, i32 0, i32 0, i32 0
  %360 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %359, align 8
  %361 = bitcast %"class.spirv_cross::ObjectPoolBase"** %359 to i8**
  store i8* %349, i8** %361, align 8
  %362 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %360, null
  br i1 %362, label %368, label %363

363:                                              ; preds = %347
  %364 = bitcast %"class.spirv_cross::ObjectPoolBase"* %360 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %365 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %364, align 8
  %366 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %365, i64 1
  %367 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %366, align 8
  tail call void %367(%"class.spirv_cross::ObjectPoolBase"* nonnull %360) #17
  br label %368

368:                                              ; preds = %347, %363
  %369 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %129, align 8
  %370 = tail call i8* @_Znwm(i64 136) #18
  %371 = bitcast i8* %370 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_9SPIRUndefEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %371, align 8
  %372 = getelementptr inbounds i8, i8* %370, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %372, i8 0, i64 24, i1 false) #17
  %373 = getelementptr inbounds i8, i8* %370, i64 40
  %374 = getelementptr inbounds i8, i8* %370, i64 64
  %375 = getelementptr inbounds i8, i8* %370, i64 48
  %376 = bitcast i8* %373 to i8**
  store i8* %374, i8** %376, align 8
  %377 = bitcast i8* %375 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %377, align 8
  %378 = getelementptr inbounds i8, i8* %370, i64 128
  %379 = bitcast i8* %378 to i32*
  store i32 16, i32* %379, align 8
  %380 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %369, i64 0, i32 0, i64 12, i32 0, i32 0, i32 0
  %381 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %380, align 8
  %382 = bitcast %"class.spirv_cross::ObjectPoolBase"** %380 to i8**
  store i8* %370, i8** %382, align 8
  %383 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %381, null
  br i1 %383, label %389, label %384

384:                                              ; preds = %368
  %385 = bitcast %"class.spirv_cross::ObjectPoolBase"* %381 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %386 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %385, align 8
  %387 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %386, i64 1
  %388 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %387, align 8
  tail call void %388(%"class.spirv_cross::ObjectPoolBase"* nonnull %381) #17
  br label %389

389:                                              ; preds = %368, %384
  %390 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %129, align 8
  %391 = tail call i8* @_Znwm(i64 136) #18
  %392 = bitcast i8* %391 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_10SPIRStringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %392, align 8
  %393 = getelementptr inbounds i8, i8* %391, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %393, i8 0, i64 24, i1 false) #17
  %394 = getelementptr inbounds i8, i8* %391, i64 40
  %395 = getelementptr inbounds i8, i8* %391, i64 64
  %396 = getelementptr inbounds i8, i8* %391, i64 48
  %397 = bitcast i8* %394 to i8**
  store i8* %395, i8** %397, align 8
  %398 = bitcast i8* %396 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %398, align 8
  %399 = getelementptr inbounds i8, i8* %391, i64 128
  %400 = bitcast i8* %399 to i32*
  store i32 16, i32* %400, align 8
  %401 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %390, i64 0, i32 0, i64 13, i32 0, i32 0, i32 0
  %402 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %401, align 8
  %403 = bitcast %"class.spirv_cross::ObjectPoolBase"** %401 to i8**
  store i8* %391, i8** %403, align 8
  %404 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %402, null
  br i1 %404, label %410, label %405

405:                                              ; preds = %389
  %406 = bitcast %"class.spirv_cross::ObjectPoolBase"* %402 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %407 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %406, align 8
  %408 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %407, i64 1
  %409 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %408, align 8
  tail call void %409(%"class.spirv_cross::ObjectPoolBase"* nonnull %402) #17
  br label %410

410:                                              ; preds = %389, %405
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11spirv_cross8ParsedIRC2EOS0_(%"class.spirv_cross::ParsedIR"*, %"class.spirv_cross::ParsedIR"* dereferenceable(1712)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 2, i32 2
  %6 = bitcast %"class.spirv_cross::SmallVector"* %3 to %"class.spirv_cross::AlignedBuffer"**
  %7 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 2, i32 0, i32 1
  store i64 0, i64* %7, align 8
  %8 = bitcast %"class.spirv_cross::ParsedIR"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false)
  store %"class.spirv_cross::AlignedBuffer"* %5, %"class.spirv_cross::AlignedBuffer"** %6, align 8
  store i64 8, i64* %4, align 8
  %9 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 3
  %11 = bitcast %"class.std::__1::__compressed_pair.26"* %10 to i32*
  %12 = bitcast %"class.std::__1::unordered_map"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false) #17
  store i32 1065353216, i32* %11, align 4
  %13 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 0
  %14 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 0, i32 2
  %15 = bitcast %"class.spirv_cross::SmallVector.29"* %13 to %"class.spirv_cross::AlignedBuffer.31"**
  %16 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 0, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %14, %"class.spirv_cross::AlignedBuffer.31"** %15, align 8
  %17 = bitcast i64* %16 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %17, align 8
  %18 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 1
  %19 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 1, i32 2
  %20 = bitcast %"class.spirv_cross::SmallVector.29"* %18 to %"class.spirv_cross::AlignedBuffer.31"**
  %21 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 1, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %19, %"class.spirv_cross::AlignedBuffer.31"** %20, align 8
  %22 = bitcast i64* %21 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %22, align 8
  %23 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 2
  %24 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 2, i32 2
  %25 = bitcast %"class.spirv_cross::SmallVector.29"* %23 to %"class.spirv_cross::AlignedBuffer.31"**
  %26 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 2, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %24, %"class.spirv_cross::AlignedBuffer.31"** %25, align 8
  %27 = bitcast i64* %26 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %27, align 8
  %28 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 3
  %29 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 3, i32 2
  %30 = bitcast %"class.spirv_cross::SmallVector.29"* %28 to %"class.spirv_cross::AlignedBuffer.31"**
  %31 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 3, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %29, %"class.spirv_cross::AlignedBuffer.31"** %30, align 8
  %32 = bitcast i64* %31 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %32, align 8
  %33 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 4
  %34 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 4, i32 2
  %35 = bitcast %"class.spirv_cross::SmallVector.29"* %33 to %"class.spirv_cross::AlignedBuffer.31"**
  %36 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 4, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %34, %"class.spirv_cross::AlignedBuffer.31"** %35, align 8
  %37 = bitcast i64* %36 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %37, align 8
  %38 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 5
  %39 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 5, i32 2
  %40 = bitcast %"class.spirv_cross::SmallVector.29"* %38 to %"class.spirv_cross::AlignedBuffer.31"**
  %41 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 5, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %39, %"class.spirv_cross::AlignedBuffer.31"** %40, align 8
  %42 = bitcast i64* %41 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %42, align 8
  %43 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 6
  %44 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 6, i32 2
  %45 = bitcast %"class.spirv_cross::SmallVector.29"* %43 to %"class.spirv_cross::AlignedBuffer.31"**
  %46 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 6, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %44, %"class.spirv_cross::AlignedBuffer.31"** %45, align 8
  %47 = bitcast i64* %46 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %47, align 8
  %48 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 7
  %49 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 7, i32 2
  %50 = bitcast %"class.spirv_cross::SmallVector.29"* %48 to %"class.spirv_cross::AlignedBuffer.31"**
  %51 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 7, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %49, %"class.spirv_cross::AlignedBuffer.31"** %50, align 8
  %52 = bitcast i64* %51 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %52, align 8
  %53 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 8
  %54 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 8, i32 2
  %55 = bitcast %"class.spirv_cross::SmallVector.29"* %53 to %"class.spirv_cross::AlignedBuffer.31"**
  %56 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 8, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %54, %"class.spirv_cross::AlignedBuffer.31"** %55, align 8
  %57 = bitcast i64* %56 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %57, align 8
  %58 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 9
  %59 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 9, i32 1
  %60 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 9, i32 2
  %61 = bitcast %"class.spirv_cross::SmallVector.29"* %58 to %"class.spirv_cross::AlignedBuffer.31"**
  %62 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 9, i32 0, i32 1
  store i64 0, i64* %62, align 8
  store %"class.spirv_cross::AlignedBuffer.31"* %60, %"class.spirv_cross::AlignedBuffer.31"** %61, align 8
  store i64 8, i64* %59, align 8
  %63 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 10
  %64 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 10, i32 2
  %65 = bitcast %"class.spirv_cross::SmallVector.29"* %63 to %"class.spirv_cross::AlignedBuffer.31"**
  %66 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 10, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %64, %"class.spirv_cross::AlignedBuffer.31"** %65, align 8
  %67 = bitcast i64* %66 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %67, align 8
  %68 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 11
  %69 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 11, i32 2
  %70 = bitcast %"class.spirv_cross::SmallVector.29"* %68 to %"class.spirv_cross::AlignedBuffer.31"**
  %71 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 11, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %69, %"class.spirv_cross::AlignedBuffer.31"** %70, align 8
  %72 = bitcast i64* %71 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %72, align 8
  %73 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 12
  %74 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 12, i32 2
  %75 = bitcast %"class.spirv_cross::SmallVector.29"* %73 to %"class.spirv_cross::AlignedBuffer.31"**
  %76 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 12, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %74, %"class.spirv_cross::AlignedBuffer.31"** %75, align 8
  %77 = bitcast i64* %76 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %77, align 8
  %78 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 13
  %79 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 13, i32 2
  %80 = bitcast %"class.spirv_cross::SmallVector.29"* %78 to %"class.spirv_cross::AlignedBuffer.31"**
  %81 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 13, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %79, %"class.spirv_cross::AlignedBuffer.31"** %80, align 8
  %82 = bitcast i64* %81 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %82, align 8
  %83 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 5
  %84 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 5, i32 1
  %85 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 5, i32 2
  %86 = bitcast %"class.spirv_cross::SmallVector.29"* %83 to %"class.spirv_cross::AlignedBuffer.31"**
  %87 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 5, i32 0, i32 1
  store i64 0, i64* %87, align 8
  store %"class.spirv_cross::AlignedBuffer.31"* %85, %"class.spirv_cross::AlignedBuffer.31"** %86, align 8
  store i64 8, i64* %84, align 8
  %88 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 6
  %89 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 6, i32 2
  %90 = bitcast %"class.spirv_cross::SmallVector.29"* %88 to %"class.spirv_cross::AlignedBuffer.31"**
  %91 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 6, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.31"* %89, %"class.spirv_cross::AlignedBuffer.31"** %90, align 8
  %92 = bitcast i64* %91 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %92, align 8
  %93 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 7
  %94 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 7, i32 2
  %95 = bitcast %"class.spirv_cross::SmallVector.32"* %93 to %"class.spirv_cross::AlignedBuffer.34"**
  %96 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 7, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.34"* %94, %"class.spirv_cross::AlignedBuffer.34"** %95, align 8
  %97 = bitcast i64* %96 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %97, align 8
  %98 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 8
  %99 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 8, i32 2
  %100 = bitcast %"class.spirv_cross::SmallVector.35"* %98 to %"class.spirv_cross::AlignedBuffer.42"**
  %101 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 8, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.42"* %99, %"class.spirv_cross::AlignedBuffer.42"** %100, align 8
  %102 = bitcast i64* %101 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %102, align 8
  %103 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 9, i32 2, i32 0, i64 0
  %104 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 9, i32 0, i32 0
  %105 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 9, i32 0, i32 1
  store i8* %103, i8** %104, align 8
  %106 = bitcast i64* %105 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %106, align 8
  %107 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 10
  %108 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 10, i32 0, i32 3
  %109 = bitcast %"class.std::__1::__compressed_pair.67"* %108 to i32*
  %110 = bitcast %"class.std::__1::unordered_map.46"* %107 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 32, i1 false) #17
  store i32 1065353216, i32* %109, align 4
  %111 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 11
  %112 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 11, i32 0, i32 3
  %113 = bitcast %"class.std::__1::__compressed_pair.94"* %112 to i32*
  %114 = bitcast %"class.std::__1::unordered_map.73"* %111 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 32, i1 false) #17
  store i32 1065353216, i32* %113, align 4
  %115 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 12, i32 0
  %116 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 14
  %117 = bitcast i32* %115 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %117, i8 0, i64 11, i1 false)
  store i32 2147483647, i32* %116, align 4
  %118 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 15
  store i32 2147483647, i32* %118, align 8
  %119 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 16
  store i32 0, i32* %119, align 4
  %120 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 17
  store i32 0, i32* %120, align 8
  %121 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 18
  %122 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 19, i32 1, i32 0, i32 3
  %123 = bitcast %"class.std::__1::__compressed_pair.120"* %122 to i32*
  %124 = bitcast %"class.std::__1::basic_string"* %121 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 64, i1 false)
  store i32 1065353216, i32* %123, align 4
  %125 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 20
  %126 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 20, i32 0, i32 3
  %127 = bitcast %"class.std::__1::__compressed_pair.120"* %126 to i32*
  %128 = bitcast %"class.std::__1::unordered_set"* %125 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %128, i8 0, i64 32, i1 false) #17
  store i32 1065353216, i32* %127, align 4
  %129 = tail call dereferenceable(1712) %"class.spirv_cross::ParsedIR"* @_ZN11spirv_cross8ParsedIRaSEOS0_(%"class.spirv_cross::ParsedIR"* %0, %"class.spirv_cross::ParsedIR"* dereferenceable(1712) %1) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(1712) %"class.spirv_cross::ParsedIR"* @_ZN11spirv_cross8ParsedIRaSEOS0_(%"class.spirv_cross::ParsedIR"* returned, %"class.spirv_cross::ParsedIR"* dereferenceable(1712)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.spirv_cross::ParsedIR"* %0, %1
  br i1 %3, label %316, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.spirv_cross::ParsedIR"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  store %"struct.spirv_cross::ObjectPoolGroup"* null, %"struct.spirv_cross::ObjectPoolGroup"** %5, align 8
  %8 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %8, align 8
  %10 = bitcast %"class.spirv_cross::ParsedIR"* %0 to i64*
  store i64 %7, i64* %10, align 8
  %11 = icmp eq %"struct.spirv_cross::ObjectPoolGroup"* %9, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %4
  tail call void @_ZN11spirv_cross15ObjectPoolGroupD2Ev(%"struct.spirv_cross::ObjectPoolGroup"* nonnull %9) #17
  %13 = bitcast %"struct.spirv_cross::ObjectPoolGroup"* %9 to i8*
  tail call void @_ZdlPv(i8* %13) #18
  br label %14

14:                                               ; preds = %4, %12
  %15 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 1
  %16 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %16, i64 0, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = icmp eq i32* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %14
  %21 = ptrtoint i32* %18 to i64
  %22 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 1, i32 0, i32 1
  %23 = bitcast i32** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast i32* %18 to i8*
  tail call void @_ZdlPv(i8* %24) #18
  %25 = bitcast %"class.std::__1::vector"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #17
  br label %26

26:                                               ; preds = %14, %20
  %27 = bitcast %"class.std::__1::vector"* %15 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::vector"* %16 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 1, i32 0, i32 1
  %31 = bitcast i32** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 1, i32 0, i32 1
  %34 = bitcast i32** %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast i32** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast i32** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"class.std::__1::vector"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #17
  %41 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 3, i32 0
  %42 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE13__move_assignERSI_NS_17integral_constantIbLb1EEE(%"class.std::__1::__hash_table"* %42, %"class.std::__1::__hash_table"* dereferenceable(40) %41) #17
  br label %264

43:                                               ; preds = %313
  %44 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 5
  %45 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 5
  %46 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 5, i32 0, i32 1
  store i64 0, i64* %46, align 8
  %47 = getelementptr inbounds %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.29"* %44, i64 0, i32 0, i32 0
  %48 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %47, align 8
  %49 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 5, i32 2
  %50 = bitcast %"class.spirv_cross::AlignedBuffer.31"* %49 to %"class.spirv_cross::TypedID"*
  %51 = icmp eq %"class.spirv_cross::TypedID"* %48, %50
  br i1 %51, label %72, label %52

52:                                               ; preds = %43
  %53 = ptrtoint %"class.spirv_cross::TypedID"* %48 to i64
  %54 = getelementptr inbounds %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.29"* %45, i64 0, i32 0, i32 0
  %55 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %54, align 8
  %56 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 5, i32 2
  %57 = bitcast %"class.spirv_cross::AlignedBuffer.31"* %56 to %"class.spirv_cross::TypedID"*
  %58 = icmp eq %"class.spirv_cross::TypedID"* %55, %57
  br i1 %58, label %63, label %59

59:                                               ; preds = %52
  %60 = bitcast %"class.spirv_cross::TypedID"* %55 to i8*
  tail call void @free(i8* %60) #17
  %61 = bitcast %"class.spirv_cross::SmallVector.29"* %44 to i64*
  %62 = load i64, i64* %61, align 8
  br label %63

63:                                               ; preds = %59, %52
  %64 = phi i64 [ %62, %59 ], [ %53, %52 ]
  %65 = bitcast %"class.spirv_cross::SmallVector.29"* %45 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 5, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  store i64 %67, i64* %46, align 8
  %68 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 5, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 5, i32 1
  store i64 %69, i64* %70, align 8
  %71 = bitcast %"class.spirv_cross::SmallVector.29"* %44 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #17
  br label %91

72:                                               ; preds = %43
  %73 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 5, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  tail call void @_ZN11spirv_cross11SmallVectorINS_7TypedIDILNS_5TypesE0EEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.29"* %45, i64 %74) #17
  %75 = load i64, i64* %73, align 8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %79, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.29"* %45, i64 0, i32 0, i32 0
  br label %81

79:                                               ; preds = %81, %72
  %80 = phi i64 [ 0, %72 ], [ %89, %81 ]
  store i64 %80, i64* %46, align 8
  store i64 0, i64* %73, align 8
  br label %91

81:                                               ; preds = %81, %77
  %82 = phi i64 [ 0, %77 ], [ %88, %81 ]
  %83 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %78, align 8
  %84 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %47, align 8
  %85 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %84, i64 %82, i32 0
  %86 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %83, i64 %82, i32 0
  %87 = load i32, i32* %85, align 4
  store i32 %87, i32* %86, align 4
  %88 = add nuw i64 %82, 1
  %89 = load i64, i64* %73, align 8
  %90 = icmp ult i64 %88, %89
  br i1 %90, label %81, label %79

91:                                               ; preds = %63, %79
  %92 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 6
  %93 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 6
  %94 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 6, i32 0, i32 1
  store i64 0, i64* %94, align 8
  %95 = getelementptr inbounds %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.29"* %92, i64 0, i32 0, i32 0
  %96 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %95, align 8
  %97 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 6, i32 2
  %98 = bitcast %"class.spirv_cross::AlignedBuffer.31"* %97 to %"class.spirv_cross::TypedID"*
  %99 = icmp eq %"class.spirv_cross::TypedID"* %96, %98
  br i1 %99, label %120, label %100

100:                                              ; preds = %91
  %101 = ptrtoint %"class.spirv_cross::TypedID"* %96 to i64
  %102 = getelementptr inbounds %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.29"* %93, i64 0, i32 0, i32 0
  %103 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %102, align 8
  %104 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 6, i32 2
  %105 = bitcast %"class.spirv_cross::AlignedBuffer.31"* %104 to %"class.spirv_cross::TypedID"*
  %106 = icmp eq %"class.spirv_cross::TypedID"* %103, %105
  br i1 %106, label %111, label %107

107:                                              ; preds = %100
  %108 = bitcast %"class.spirv_cross::TypedID"* %103 to i8*
  tail call void @free(i8* %108) #17
  %109 = bitcast %"class.spirv_cross::SmallVector.29"* %92 to i64*
  %110 = load i64, i64* %109, align 8
  br label %111

111:                                              ; preds = %107, %100
  %112 = phi i64 [ %110, %107 ], [ %101, %100 ]
  %113 = bitcast %"class.spirv_cross::SmallVector.29"* %93 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 6, i32 0, i32 1
  %115 = load i64, i64* %114, align 8
  store i64 %115, i64* %94, align 8
  %116 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 6, i32 1
  %117 = load i64, i64* %116, align 8
  %118 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 6, i32 1
  store i64 %117, i64* %118, align 8
  %119 = bitcast %"class.spirv_cross::SmallVector.29"* %92 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %119, i8 0, i64 24, i1 false) #17
  br label %139

120:                                              ; preds = %91
  %121 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 6, i32 0, i32 1
  %122 = load i64, i64* %121, align 8
  tail call void @_ZN11spirv_cross11SmallVectorINS_7TypedIDILNS_5TypesE0EEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.29"* %93, i64 %122) #17
  %123 = load i64, i64* %121, align 8
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %127, label %125

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.29"* %93, i64 0, i32 0, i32 0
  br label %129

127:                                              ; preds = %129, %120
  %128 = phi i64 [ 0, %120 ], [ %137, %129 ]
  store i64 %128, i64* %94, align 8
  store i64 0, i64* %121, align 8
  br label %139

129:                                              ; preds = %129, %125
  %130 = phi i64 [ 0, %125 ], [ %136, %129 ]
  %131 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %126, align 8
  %132 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %95, align 8
  %133 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %132, i64 %130, i32 0
  %134 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %131, i64 %130, i32 0
  %135 = load i32, i32* %133, align 4
  store i32 %135, i32* %134, align 4
  %136 = add nuw i64 %130, 1
  %137 = load i64, i64* %121, align 8
  %138 = icmp ult i64 %136, %137
  br i1 %138, label %129, label %127

139:                                              ; preds = %111, %127
  %140 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 7
  %141 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 7
  %142 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 7, i32 0, i32 1
  store i64 0, i64* %142, align 8
  %143 = getelementptr inbounds %"class.spirv_cross::SmallVector.32", %"class.spirv_cross::SmallVector.32"* %140, i64 0, i32 0, i32 0
  %144 = load i32*, i32** %143, align 8
  %145 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 7, i32 2
  %146 = bitcast %"class.spirv_cross::AlignedBuffer.34"* %145 to i32*
  %147 = icmp eq i32* %144, %146
  br i1 %147, label %168, label %148

148:                                              ; preds = %139
  %149 = ptrtoint i32* %144 to i64
  %150 = getelementptr inbounds %"class.spirv_cross::SmallVector.32", %"class.spirv_cross::SmallVector.32"* %141, i64 0, i32 0, i32 0
  %151 = load i32*, i32** %150, align 8
  %152 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 7, i32 2
  %153 = bitcast %"class.spirv_cross::AlignedBuffer.34"* %152 to i32*
  %154 = icmp eq i32* %151, %153
  br i1 %154, label %159, label %155

155:                                              ; preds = %148
  %156 = bitcast i32* %151 to i8*
  tail call void @free(i8* %156) #17
  %157 = bitcast %"class.spirv_cross::SmallVector.32"* %140 to i64*
  %158 = load i64, i64* %157, align 8
  br label %159

159:                                              ; preds = %155, %148
  %160 = phi i64 [ %158, %155 ], [ %149, %148 ]
  %161 = bitcast %"class.spirv_cross::SmallVector.32"* %141 to i64*
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 7, i32 0, i32 1
  %163 = load i64, i64* %162, align 8
  store i64 %163, i64* %142, align 8
  %164 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 7, i32 1
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 7, i32 1
  store i64 %165, i64* %166, align 8
  %167 = bitcast %"class.spirv_cross::SmallVector.32"* %140 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %167, i8 0, i64 24, i1 false) #17
  br label %187

168:                                              ; preds = %139
  %169 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 7, i32 0, i32 1
  %170 = load i64, i64* %169, align 8
  tail call void @_ZN11spirv_cross11SmallVectorIN3spv10CapabilityELm8EE7reserveEm(%"class.spirv_cross::SmallVector.32"* %141, i64 %170) #17
  %171 = load i64, i64* %169, align 8
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %175, label %173

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"class.spirv_cross::SmallVector.32", %"class.spirv_cross::SmallVector.32"* %141, i64 0, i32 0, i32 0
  br label %177

175:                                              ; preds = %177, %168
  %176 = phi i64 [ 0, %168 ], [ %185, %177 ]
  store i64 %176, i64* %142, align 8
  store i64 0, i64* %169, align 8
  br label %187

177:                                              ; preds = %177, %173
  %178 = phi i64 [ 0, %173 ], [ %184, %177 ]
  %179 = load i32*, i32** %174, align 8
  %180 = getelementptr inbounds i32, i32* %179, i64 %178
  %181 = load i32*, i32** %143, align 8
  %182 = getelementptr inbounds i32, i32* %181, i64 %178
  %183 = load i32, i32* %182, align 4
  store i32 %183, i32* %180, align 4
  %184 = add nuw i64 %178, 1
  %185 = load i64, i64* %169, align 8
  %186 = icmp ult i64 %184, %185
  br i1 %186, label %177, label %175

187:                                              ; preds = %159, %175
  %188 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 8
  %189 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 8
  %190 = tail call dereferenceable(216) %"class.spirv_cross::SmallVector.35"* @_ZN11spirv_cross11SmallVectorINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELm8EEaSEOS8_(%"class.spirv_cross::SmallVector.35"* %189, %"class.spirv_cross::SmallVector.35"* dereferenceable(216) %188) #17
  %191 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 9
  %192 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 9
  %193 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 9, i32 0, i32 1
  store i64 0, i64* %193, align 8
  %194 = getelementptr inbounds %"class.spirv_cross::SmallVector.43", %"class.spirv_cross::SmallVector.43"* %191, i64 0, i32 0, i32 0
  %195 = load i8*, i8** %194, align 8
  %196 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 9, i32 2, i32 0, i64 0
  %197 = icmp eq i8* %195, %196
  br i1 %197, label %216, label %198

198:                                              ; preds = %187
  %199 = ptrtoint i8* %195 to i64
  %200 = getelementptr inbounds %"class.spirv_cross::SmallVector.43", %"class.spirv_cross::SmallVector.43"* %192, i64 0, i32 0, i32 0
  %201 = load i8*, i8** %200, align 8
  %202 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 9, i32 2, i32 0, i64 0
  %203 = icmp eq i8* %201, %202
  br i1 %203, label %207, label %204

204:                                              ; preds = %198
  tail call void @free(i8* %201) #17
  %205 = bitcast %"class.spirv_cross::SmallVector.43"* %191 to i64*
  %206 = load i64, i64* %205, align 8
  br label %207

207:                                              ; preds = %204, %198
  %208 = phi i64 [ %206, %204 ], [ %199, %198 ]
  %209 = bitcast %"class.spirv_cross::SmallVector.43"* %192 to i64*
  store i64 %208, i64* %209, align 8
  %210 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 9, i32 0, i32 1
  %211 = load i64, i64* %210, align 8
  store i64 %211, i64* %193, align 8
  %212 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 9, i32 1
  %213 = load i64, i64* %212, align 8
  %214 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 9, i32 1
  store i64 %213, i64* %214, align 8
  %215 = bitcast %"class.spirv_cross::SmallVector.43"* %191 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %215, i8 0, i64 24, i1 false) #17
  br label %235

216:                                              ; preds = %187
  %217 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 9, i32 0, i32 1
  %218 = load i64, i64* %217, align 8
  tail call void @_ZN11spirv_cross11SmallVectorIhLm8EE7reserveEm(%"class.spirv_cross::SmallVector.43"* %192, i64 %218) #17
  %219 = load i64, i64* %217, align 8
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %223, label %221

221:                                              ; preds = %216
  %222 = getelementptr inbounds %"class.spirv_cross::SmallVector.43", %"class.spirv_cross::SmallVector.43"* %192, i64 0, i32 0, i32 0
  br label %225

223:                                              ; preds = %225, %216
  %224 = phi i64 [ 0, %216 ], [ %233, %225 ]
  store i64 %224, i64* %193, align 8
  store i64 0, i64* %217, align 8
  br label %235

225:                                              ; preds = %225, %221
  %226 = phi i64 [ 0, %221 ], [ %232, %225 ]
  %227 = load i8*, i8** %222, align 8
  %228 = getelementptr inbounds i8, i8* %227, i64 %226
  %229 = load i8*, i8** %194, align 8
  %230 = getelementptr inbounds i8, i8* %229, i64 %226
  %231 = load i8, i8* %230, align 1
  store i8 %231, i8* %228, align 1
  %232 = add nuw i64 %226, 1
  %233 = load i64, i64* %217, align 8
  %234 = icmp ult i64 %232, %233
  br i1 %234, label %225, label %223

235:                                              ; preds = %207, %223
  %236 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 10, i32 0
  %237 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 10, i32 0
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE6EEES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE13__move_assignERSH_NS_17integral_constantIbLb1EEE(%"class.std::__1::__hash_table.47"* %237, %"class.std::__1::__hash_table.47"* dereferenceable(40) %236) #17
  %238 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 11, i32 0
  %239 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 11, i32 0
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE4EEENS2_14SPIREntryPointEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE13__move_assignERSI_NS_17integral_constantIbLb1EEE(%"class.std::__1::__hash_table.74"* %239, %"class.std::__1::__hash_table.74"* dereferenceable(40) %238) #17
  %240 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 2
  %241 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 2
  %242 = tail call dereferenceable(216) %"class.spirv_cross::SmallVector"* @_ZN11spirv_cross11SmallVectorINS_7VariantELm8EEaSEOS2_(%"class.spirv_cross::SmallVector"* %241, %"class.spirv_cross::SmallVector"* dereferenceable(216) %240) #17
  %243 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 14
  %244 = load i32, i32* %243, align 4
  %245 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 14
  store i32 %244, i32* %245, align 4
  %246 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 15
  %247 = load i32, i32* %246, align 8
  %248 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 15
  store i32 %247, i32* %248, align 8
  %249 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 12, i32 0
  %250 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 12, i32 0
  %251 = load i32, i32* %249, align 4
  store i32 %251, i32* %250, align 8
  %252 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 13
  %253 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 13
  %254 = bitcast %"struct.spirv_cross::ParsedIR::Source"* %253 to i8*
  %255 = bitcast %"struct.spirv_cross::ParsedIR::Source"* %252 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %254, i8* align 4 %255, i64 7, i1 false)
  %256 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 16
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 16
  store i32 %257, i32* %258, align 4
  %259 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 17
  %260 = load i32, i32* %259, align 8
  %261 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 17
  store i32 %260, i32* %261, align 8
  %262 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 20, i32 0
  %263 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 20, i32 0
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE13__move_assignERS7_NS_17integral_constantIbLb1EEE(%"class.std::__1::__hash_table.101"* %263, %"class.std::__1::__hash_table.101"* dereferenceable(40) %262) #17
  br label %316

264:                                              ; preds = %313, %26
  %265 = phi i64 [ 0, %26 ], [ %314, %313 ]
  %266 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 4, i64 %265
  %267 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 %265
  %268 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 %265, i32 0, i32 1
  store i64 0, i64* %268, align 8
  %269 = getelementptr inbounds %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.29"* %266, i64 0, i32 0, i32 0
  %270 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %269, align 8
  %271 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 4, i64 %265, i32 2
  %272 = bitcast %"class.spirv_cross::AlignedBuffer.31"* %271 to %"class.spirv_cross::TypedID"*
  %273 = icmp eq %"class.spirv_cross::TypedID"* %270, %272
  br i1 %273, label %294, label %274

274:                                              ; preds = %264
  %275 = ptrtoint %"class.spirv_cross::TypedID"* %270 to i64
  %276 = getelementptr inbounds %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.29"* %267, i64 0, i32 0, i32 0
  %277 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %276, align 8
  %278 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 %265, i32 2
  %279 = bitcast %"class.spirv_cross::AlignedBuffer.31"* %278 to %"class.spirv_cross::TypedID"*
  %280 = icmp eq %"class.spirv_cross::TypedID"* %277, %279
  br i1 %280, label %285, label %281

281:                                              ; preds = %274
  %282 = bitcast %"class.spirv_cross::TypedID"* %277 to i8*
  tail call void @free(i8* %282) #17
  %283 = bitcast %"class.spirv_cross::SmallVector.29"* %266 to i64*
  %284 = load i64, i64* %283, align 8
  br label %285

285:                                              ; preds = %281, %274
  %286 = phi i64 [ %284, %281 ], [ %275, %274 ]
  %287 = bitcast %"class.spirv_cross::SmallVector.29"* %267 to i64*
  store i64 %286, i64* %287, align 8
  %288 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 4, i64 %265, i32 0, i32 1
  %289 = load i64, i64* %288, align 8
  store i64 %289, i64* %268, align 8
  %290 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 4, i64 %265, i32 1
  %291 = load i64, i64* %290, align 8
  %292 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 %265, i32 1
  store i64 %291, i64* %292, align 8
  %293 = bitcast %"class.spirv_cross::SmallVector.29"* %266 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %293, i8 0, i64 24, i1 false) #17
  br label %313

294:                                              ; preds = %264
  %295 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 4, i64 %265, i32 0, i32 1
  %296 = load i64, i64* %295, align 8
  tail call void @_ZN11spirv_cross11SmallVectorINS_7TypedIDILNS_5TypesE0EEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.29"* %267, i64 %296) #17
  %297 = load i64, i64* %295, align 8
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %301, label %299

299:                                              ; preds = %294
  %300 = getelementptr inbounds %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.29"* %267, i64 0, i32 0, i32 0
  br label %303

301:                                              ; preds = %303, %294
  %302 = phi i64 [ 0, %294 ], [ %311, %303 ]
  store i64 %302, i64* %268, align 8
  store i64 0, i64* %295, align 8
  br label %313

303:                                              ; preds = %303, %299
  %304 = phi i64 [ 0, %299 ], [ %310, %303 ]
  %305 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %300, align 8
  %306 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %269, align 8
  %307 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %306, i64 %304, i32 0
  %308 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %305, i64 %304, i32 0
  %309 = load i32, i32* %307, align 4
  store i32 %309, i32* %308, align 4
  %310 = add nuw i64 %304, 1
  %311 = load i64, i64* %295, align 8
  %312 = icmp ult i64 %310, %311
  br i1 %312, label %303, label %301

313:                                              ; preds = %285, %301
  %314 = add nuw nsw i64 %265, 1
  %315 = icmp eq i64 %314, 14
  br i1 %315, label %43, label %264

316:                                              ; preds = %2, %235
  ret %"class.spirv_cross::ParsedIR"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(216) %"class.spirv_cross::SmallVector.35"* @_ZN11spirv_cross11SmallVectorINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELm8EEaSEOS8_(%"class.spirv_cross::SmallVector.35"*, %"class.spirv_cross::SmallVector.35"* dereferenceable(216)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spirv_cross::SmallVector.35", %"class.spirv_cross::SmallVector.35"* %0, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %25, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.spirv_cross::SmallVector.35", %"class.spirv_cross::SmallVector.35"* %0, i64 0, i32 0, i32 0
  br label %8

8:                                                ; preds = %21, %6
  %9 = phi i64 [ %4, %6 ], [ %22, %21 ]
  %10 = phi i64 [ 0, %6 ], [ %23, %21 ]
  %11 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 %10
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #18
  %20 = load i64, i64* %3, align 8
  br label %21

21:                                               ; preds = %17, %8
  %22 = phi i64 [ %9, %8 ], [ %20, %17 ]
  %23 = add nuw i64 %10, 1
  %24 = icmp ult i64 %23, %22
  br i1 %24, label %8, label %25

25:                                               ; preds = %21, %2
  store i64 0, i64* %3, align 8
  %26 = getelementptr inbounds %"class.spirv_cross::SmallVector.35", %"class.spirv_cross::SmallVector.35"* %1, i64 0, i32 0, i32 0
  %27 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %26, align 8
  %28 = getelementptr inbounds %"class.spirv_cross::SmallVector.35", %"class.spirv_cross::SmallVector.35"* %1, i64 0, i32 2
  %29 = bitcast %"class.spirv_cross::AlignedBuffer.42"* %28 to %"class.std::__1::basic_string"*
  %30 = icmp eq %"class.std::__1::basic_string"* %27, %29
  br i1 %30, label %51, label %31

31:                                               ; preds = %25
  %32 = ptrtoint %"class.std::__1::basic_string"* %27 to i64
  %33 = getelementptr inbounds %"class.spirv_cross::SmallVector.35", %"class.spirv_cross::SmallVector.35"* %0, i64 0, i32 0, i32 0
  %34 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %33, align 8
  %35 = getelementptr inbounds %"class.spirv_cross::SmallVector.35", %"class.spirv_cross::SmallVector.35"* %0, i64 0, i32 2
  %36 = bitcast %"class.spirv_cross::AlignedBuffer.42"* %35 to %"class.std::__1::basic_string"*
  %37 = icmp eq %"class.std::__1::basic_string"* %34, %36
  br i1 %37, label %42, label %38

38:                                               ; preds = %31
  %39 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  tail call void @free(i8* %39) #17
  %40 = bitcast %"class.spirv_cross::SmallVector.35"* %1 to i64*
  %41 = load i64, i64* %40, align 8
  br label %42

42:                                               ; preds = %31, %38
  %43 = phi i64 [ %41, %38 ], [ %32, %31 ]
  %44 = bitcast %"class.spirv_cross::SmallVector.35"* %0 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.spirv_cross::SmallVector.35", %"class.spirv_cross::SmallVector.35"* %1, i64 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  store i64 %46, i64* %3, align 8
  %47 = getelementptr inbounds %"class.spirv_cross::SmallVector.35", %"class.spirv_cross::SmallVector.35"* %1, i64 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spirv_cross::SmallVector.35", %"class.spirv_cross::SmallVector.35"* %0, i64 0, i32 1
  store i64 %48, i64* %49, align 8
  %50 = bitcast %"class.spirv_cross::SmallVector.35"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false)
  br label %81

51:                                               ; preds = %25
  %52 = getelementptr inbounds %"class.spirv_cross::SmallVector.35", %"class.spirv_cross::SmallVector.35"* %1, i64 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  tail call void @_ZN11spirv_cross11SmallVectorINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.35"* %0, i64 %53) #17
  %54 = load i64, i64* %52, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.spirv_cross::SmallVector.35", %"class.spirv_cross::SmallVector.35"* %0, i64 0, i32 0, i32 0
  br label %60

58:                                               ; preds = %77, %51
  %59 = phi i64 [ 0, %51 ], [ %79, %77 ]
  store i64 %59, i64* %3, align 8
  store i64 0, i64* %52, align 8
  br label %81

60:                                               ; preds = %56, %77
  %61 = phi i64 [ 0, %56 ], [ %78, %77 ]
  %62 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %57, align 8
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 %61
  %64 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %26, align 8
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %64, i64 %61
  %66 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  %67 = bitcast %"class.std::__1::basic_string"* %65 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 24, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 24, i1 false) #17
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %26, align 8
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 %61
  %70 = bitcast %"class.std::__1::basic_string"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %60
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  tail call void @_ZdlPv(i8* %76) #18
  br label %77

77:                                               ; preds = %60, %74
  %78 = add nuw i64 %61, 1
  %79 = load i64, i64* %52, align 8
  %80 = icmp ult i64 %78, %79
  br i1 %80, label %60, label %58

81:                                               ; preds = %58, %42
  ret %"class.spirv_cross::SmallVector.35"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(216) %"class.spirv_cross::SmallVector"* @_ZN11spirv_cross11SmallVectorINS_7VariantELm8EEaSEOS2_(%"class.spirv_cross::SmallVector"*, %"class.spirv_cross::SmallVector"* dereferenceable(216)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spirv_cross::SmallVector", %"class.spirv_cross::SmallVector"* %0, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %33, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.spirv_cross::SmallVector", %"class.spirv_cross::SmallVector"* %0, i64 0, i32 0, i32 0
  br label %8

8:                                                ; preds = %29, %6
  %9 = phi i64 [ %4, %6 ], [ %30, %29 ]
  %10 = phi i64 [ 0, %6 ], [ %31, %29 ]
  %11 = load %"class.spirv_cross::Variant"*, %"class.spirv_cross::Variant"** %7, align 8
  %12 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %11, i64 %10, i32 1
  %13 = load %"struct.spirv_cross::IVariant"*, %"struct.spirv_cross::IVariant"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::IVariant"* %13, null
  br i1 %14, label %29, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.spirv_cross::IVariant"* %13 to i8*
  %17 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %11, i64 %10, i32 0
  %18 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %17, align 8
  %19 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %11, i64 %10, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %18, i64 0, i32 0, i64 %21, i32 0, i32 0, i32 0
  %23 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %22, align 8
  %24 = bitcast %"class.spirv_cross::ObjectPoolBase"* %23 to void (%"class.spirv_cross::ObjectPoolBase"*, i8*)***
  %25 = load void (%"class.spirv_cross::ObjectPoolBase"*, i8*)**, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)** %25, i64 2
  %27 = load void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)** %26, align 8
  tail call void %27(%"class.spirv_cross::ObjectPoolBase"* %23, i8* nonnull %16) #17
  %28 = load i64, i64* %3, align 8
  br label %29

29:                                               ; preds = %15, %8
  %30 = phi i64 [ %9, %8 ], [ %28, %15 ]
  %31 = add nuw i64 %10, 1
  %32 = icmp ult i64 %31, %30
  br i1 %32, label %8, label %33

33:                                               ; preds = %29, %2
  store i64 0, i64* %3, align 8
  %34 = getelementptr inbounds %"class.spirv_cross::SmallVector", %"class.spirv_cross::SmallVector"* %1, i64 0, i32 0, i32 0
  %35 = load %"class.spirv_cross::Variant"*, %"class.spirv_cross::Variant"** %34, align 8
  %36 = getelementptr inbounds %"class.spirv_cross::SmallVector", %"class.spirv_cross::SmallVector"* %1, i64 0, i32 2
  %37 = bitcast %"class.spirv_cross::AlignedBuffer"* %36 to %"class.spirv_cross::Variant"*
  %38 = icmp eq %"class.spirv_cross::Variant"* %35, %37
  br i1 %38, label %59, label %39

39:                                               ; preds = %33
  %40 = ptrtoint %"class.spirv_cross::Variant"* %35 to i64
  %41 = getelementptr inbounds %"class.spirv_cross::SmallVector", %"class.spirv_cross::SmallVector"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.spirv_cross::Variant"*, %"class.spirv_cross::Variant"** %41, align 8
  %43 = getelementptr inbounds %"class.spirv_cross::SmallVector", %"class.spirv_cross::SmallVector"* %0, i64 0, i32 2
  %44 = bitcast %"class.spirv_cross::AlignedBuffer"* %43 to %"class.spirv_cross::Variant"*
  %45 = icmp eq %"class.spirv_cross::Variant"* %42, %44
  br i1 %45, label %50, label %46

46:                                               ; preds = %39
  %47 = bitcast %"class.spirv_cross::Variant"* %42 to i8*
  tail call void @free(i8* %47) #17
  %48 = bitcast %"class.spirv_cross::SmallVector"* %1 to i64*
  %49 = load i64, i64* %48, align 8
  br label %50

50:                                               ; preds = %39, %46
  %51 = phi i64 [ %49, %46 ], [ %40, %39 ]
  %52 = bitcast %"class.spirv_cross::SmallVector"* %0 to i64*
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"class.spirv_cross::SmallVector", %"class.spirv_cross::SmallVector"* %1, i64 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %3, align 8
  %55 = getelementptr inbounds %"class.spirv_cross::SmallVector", %"class.spirv_cross::SmallVector"* %1, i64 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.spirv_cross::SmallVector", %"class.spirv_cross::SmallVector"* %0, i64 0, i32 1
  store i64 %56, i64* %57, align 8
  %58 = bitcast %"class.spirv_cross::SmallVector"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 24, i1 false)
  br label %113

59:                                               ; preds = %33
  %60 = getelementptr inbounds %"class.spirv_cross::SmallVector", %"class.spirv_cross::SmallVector"* %1, i64 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  tail call void @_ZN11spirv_cross11SmallVectorINS_7VariantELm8EE7reserveEm(%"class.spirv_cross::SmallVector"* %0, i64 %61) #17
  %62 = load i64, i64* %60, align 8
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.spirv_cross::SmallVector", %"class.spirv_cross::SmallVector"* %0, i64 0, i32 0, i32 0
  br label %68

66:                                               ; preds = %109, %59
  %67 = phi i64 [ 0, %59 ], [ %111, %109 ]
  store i64 %67, i64* %3, align 8
  store i64 0, i64* %60, align 8
  br label %113

68:                                               ; preds = %64, %109
  %69 = phi i64 [ 0, %64 ], [ %110, %109 ]
  %70 = load %"class.spirv_cross::Variant"*, %"class.spirv_cross::Variant"** %65, align 8
  %71 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %70, i64 %69
  %72 = load %"class.spirv_cross::Variant"*, %"class.spirv_cross::Variant"** %34, align 8
  %73 = icmp eq %"class.spirv_cross::Variant"* %70, %72
  %74 = bitcast %"class.spirv_cross::Variant"* %71 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 21, i1 false) #17
  br i1 %73, label %91, label %75

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %72, i64 %69
  %77 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %70, i64 %69, i32 3
  %78 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %70, i64 %69, i32 2
  %79 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %70, i64 %69, i32 1
  %80 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %72, i64 %69, i32 1
  %81 = bitcast %"struct.spirv_cross::IVariant"** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"struct.spirv_cross::IVariant"** %79 to i64*
  store i64 %82, i64* %83, align 8
  %84 = bitcast %"class.spirv_cross::Variant"* %76 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.spirv_cross::Variant"* %71 to i64*
  store i64 %85, i64* %86, align 8
  %87 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %72, i64 %69, i32 2
  %88 = load i32, i32* %87, align 8
  store i32 %88, i32* %78, align 8
  %89 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %72, i64 %69, i32 3
  %90 = load i8, i8* %89, align 4, !range !2
  store i8 %90, i8* %77, align 4
  store %"struct.spirv_cross::IVariant"* null, %"struct.spirv_cross::IVariant"** %80, align 8
  store i32 0, i32* %87, align 8
  br label %91

91:                                               ; preds = %68, %75
  %92 = load %"class.spirv_cross::Variant"*, %"class.spirv_cross::Variant"** %34, align 8
  %93 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %92, i64 %69, i32 1
  %94 = load %"struct.spirv_cross::IVariant"*, %"struct.spirv_cross::IVariant"** %93, align 8
  %95 = icmp eq %"struct.spirv_cross::IVariant"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %91
  %97 = bitcast %"struct.spirv_cross::IVariant"* %94 to i8*
  %98 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %92, i64 %69, i32 0
  %99 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %98, align 8
  %100 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %92, i64 %69, i32 2
  %101 = load i32, i32* %100, align 8
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %99, i64 0, i32 0, i64 %102, i32 0, i32 0, i32 0
  %104 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %103, align 8
  %105 = bitcast %"class.spirv_cross::ObjectPoolBase"* %104 to void (%"class.spirv_cross::ObjectPoolBase"*, i8*)***
  %106 = load void (%"class.spirv_cross::ObjectPoolBase"*, i8*)**, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)** %106, i64 2
  %108 = load void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)** %107, align 8
  tail call void %108(%"class.spirv_cross::ObjectPoolBase"* %104, i8* nonnull %97) #17
  br label %109

109:                                              ; preds = %91, %96
  %110 = add nuw i64 %69, 1
  %111 = load i64, i64* %60, align 8
  %112 = icmp ult i64 %110, %111
  br i1 %112, label %68, label %66

113:                                              ; preds = %66, %50
  ret %"class.spirv_cross::SmallVector"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11spirv_cross8ParsedIRC2ERKS0_(%"class.spirv_cross::ParsedIR"*, %"class.spirv_cross::ParsedIR"* dereferenceable(1712)) unnamed_addr #0 align 2 {
  tail call void @_ZN11spirv_cross8ParsedIRC2Ev(%"class.spirv_cross::ParsedIR"* %0)
  %3 = tail call dereferenceable(1712) %"class.spirv_cross::ParsedIR"* @_ZN11spirv_cross8ParsedIRaSERKS0_(%"class.spirv_cross::ParsedIR"* %0, %"class.spirv_cross::ParsedIR"* dereferenceable(1712) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(1712) %"class.spirv_cross::ParsedIR"* @_ZN11spirv_cross8ParsedIRaSERKS0_(%"class.spirv_cross::ParsedIR"* returned, %"class.spirv_cross::ParsedIR"* dereferenceable(1712)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.spirv_cross::ParsedIR"* %0, %1
  br i1 %3, label %279, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 1, i32 0, i32 1
  %9 = load i32*, i32** %8, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %5, i32* %7, i32* %9) #17
  %10 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0
  %11 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0
  %12 = bitcast float* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0
  %15 = bitcast float* %14 to i32*
  store i32 %13, i32* %15, align 4
  %16 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %16, align 8
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEEEEvT_SQ_(%"class.std::__1::__hash_table"* %10, %"struct.std::__1::__hash_node_base"* %17, %"struct.std::__1::__hash_node_base"* null) #17
  br label %189

18:                                               ; preds = %210
  %19 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 5
  %20 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 5, i32 0, i32 1
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 5, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  tail call void @_ZN11spirv_cross11SmallVectorINS_7TypedIDILNS_5TypesE0EEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.29"* %19, i64 %22) #17
  %23 = load i64, i64* %21, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %38, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.29"* %19, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 5, i32 0, i32 0
  br label %28

28:                                               ; preds = %28, %25
  %29 = phi i64 [ 0, %25 ], [ %35, %28 ]
  %30 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %26, align 8
  %31 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %27, align 8
  %32 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %31, i64 %29, i32 0
  %33 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %30, i64 %29, i32 0
  %34 = load i32, i32* %32, align 4
  store i32 %34, i32* %33, align 4
  %35 = add nuw i64 %29, 1
  %36 = load i64, i64* %21, align 8
  %37 = icmp ult i64 %35, %36
  br i1 %37, label %28, label %38

38:                                               ; preds = %28, %18
  %39 = phi i64 [ 0, %18 ], [ %36, %28 ]
  store i64 %39, i64* %20, align 8
  %40 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 6
  %41 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 6, i32 0, i32 1
  store i64 0, i64* %41, align 8
  %42 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 6, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  tail call void @_ZN11spirv_cross11SmallVectorINS_7TypedIDILNS_5TypesE0EEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.29"* %40, i64 %43) #17
  %44 = load i64, i64* %42, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %59, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.29"* %40, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 6, i32 0, i32 0
  br label %49

49:                                               ; preds = %49, %46
  %50 = phi i64 [ 0, %46 ], [ %56, %49 ]
  %51 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %47, align 8
  %52 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %48, align 8
  %53 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %52, i64 %50, i32 0
  %54 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %51, i64 %50, i32 0
  %55 = load i32, i32* %53, align 4
  store i32 %55, i32* %54, align 4
  %56 = add nuw i64 %50, 1
  %57 = load i64, i64* %42, align 8
  %58 = icmp ult i64 %56, %57
  br i1 %58, label %49, label %59

59:                                               ; preds = %49, %38
  %60 = phi i64 [ 0, %38 ], [ %57, %49 ]
  store i64 %60, i64* %41, align 8
  %61 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 7
  %62 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 7, i32 0, i32 1
  store i64 0, i64* %62, align 8
  %63 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 7, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  tail call void @_ZN11spirv_cross11SmallVectorIN3spv10CapabilityELm8EE7reserveEm(%"class.spirv_cross::SmallVector.32"* %61, i64 %64) #17
  %65 = load i64, i64* %63, align 8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %80, label %67

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"class.spirv_cross::SmallVector.32", %"class.spirv_cross::SmallVector.32"* %61, i64 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 7, i32 0, i32 0
  br label %70

70:                                               ; preds = %70, %67
  %71 = phi i64 [ 0, %67 ], [ %77, %70 ]
  %72 = load i32*, i32** %68, align 8
  %73 = getelementptr inbounds i32, i32* %72, i64 %71
  %74 = load i32*, i32** %69, align 8
  %75 = getelementptr inbounds i32, i32* %74, i64 %71
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %73, align 4
  %77 = add nuw i64 %71, 1
  %78 = load i64, i64* %63, align 8
  %79 = icmp ult i64 %77, %78
  br i1 %79, label %70, label %80

80:                                               ; preds = %70, %59
  %81 = phi i64 [ 0, %59 ], [ %78, %70 ]
  store i64 %81, i64* %62, align 8
  %82 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 8
  %83 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 8
  %84 = tail call dereferenceable(216) %"class.spirv_cross::SmallVector.35"* @_ZN11spirv_cross11SmallVectorINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELm8EEaSERKS8_(%"class.spirv_cross::SmallVector.35"* %83, %"class.spirv_cross::SmallVector.35"* dereferenceable(216) %82) #17
  %85 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 9
  %86 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 9, i32 0, i32 1
  store i64 0, i64* %86, align 8
  %87 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 9, i32 0, i32 1
  %88 = load i64, i64* %87, align 8
  tail call void @_ZN11spirv_cross11SmallVectorIhLm8EE7reserveEm(%"class.spirv_cross::SmallVector.43"* %85, i64 %88) #17
  %89 = load i64, i64* %87, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %104, label %91

91:                                               ; preds = %80
  %92 = getelementptr inbounds %"class.spirv_cross::SmallVector.43", %"class.spirv_cross::SmallVector.43"* %85, i64 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 9, i32 0, i32 0
  br label %94

94:                                               ; preds = %94, %91
  %95 = phi i64 [ 0, %91 ], [ %101, %94 ]
  %96 = load i8*, i8** %92, align 8
  %97 = getelementptr inbounds i8, i8* %96, i64 %95
  %98 = load i8*, i8** %93, align 8
  %99 = getelementptr inbounds i8, i8* %98, i64 %95
  %100 = load i8, i8* %99, align 1
  store i8 %100, i8* %97, align 1
  %101 = add nuw i64 %95, 1
  %102 = load i64, i64* %87, align 8
  %103 = icmp ult i64 %101, %102
  br i1 %103, label %94, label %104

104:                                              ; preds = %94, %80
  %105 = phi i64 [ 0, %80 ], [ %102, %94 ]
  store i64 %105, i64* %86, align 8
  %106 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 10, i32 0
  %107 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 10, i32 0, i32 3, i32 0, i32 0
  %108 = bitcast float* %107 to i32*
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 10, i32 0, i32 3, i32 0, i32 0
  %111 = bitcast float* %110 to i32*
  store i32 %109, i32* %111, align 4
  %112 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %112, align 8
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE6EEES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEEEEvT_SP_(%"class.std::__1::__hash_table.47"* %106, %"struct.std::__1::__hash_node_base.51"* %113, %"struct.std::__1::__hash_node_base.51"* null) #17
  %114 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 11, i32 0
  %115 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 11, i32 0, i32 3, i32 0, i32 0
  %116 = bitcast float* %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 11, i32 0, i32 3, i32 0, i32 0
  %119 = bitcast float* %118 to i32*
  store i32 %117, i32* %119, align 4
  %120 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %121 = load %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %120, align 8
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE4EEENS2_14SPIREntryPointEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEEEEvT_SQ_(%"class.std::__1::__hash_table.74"* %114, %"struct.std::__1::__hash_node_base.78"* %121, %"struct.std::__1::__hash_node_base.78"* null) #17
  %122 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 12, i32 0
  %123 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 12, i32 0
  %124 = load i32, i32* %122, align 4
  store i32 %124, i32* %123, align 8
  %125 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 13
  %126 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 13
  %127 = bitcast %"struct.spirv_cross::ParsedIR::Source"* %126 to i8*
  %128 = bitcast %"struct.spirv_cross::ParsedIR::Source"* %125 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %127, i8* align 4 %128, i64 7, i1 false)
  %129 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 16
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 16
  store i32 %130, i32* %131, align 4
  %132 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 17
  %133 = load i32, i32* %132, align 8
  %134 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 17
  store i32 %133, i32* %134, align 8
  %135 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 14
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 14
  store i32 %136, i32* %137, align 4
  %138 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 15
  %139 = load i32, i32* %138, align 8
  %140 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 15
  store i32 %139, i32* %140, align 8
  %141 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 20, i32 0
  %142 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 20, i32 0, i32 3, i32 0, i32 0
  %143 = bitcast float* %142 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 20, i32 0, i32 3, i32 0, i32 0
  %146 = bitcast float* %145 to i32*
  store i32 %144, i32* %146, align 4
  %147 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 20, i32 0, i32 1, i32 0, i32 0, i32 0
  %148 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %147, align 8
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEEEEvT_SF_(%"class.std::__1::__hash_table.101"* %141, %"struct.std::__1::__hash_node_base.105"* %148, %"struct.std::__1::__hash_node_base.105"* null) #17
  %149 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 2
  %150 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 2, i32 0, i32 1
  %151 = load i64, i64* %150, align 8
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %180, label %153

153:                                              ; preds = %104
  %154 = getelementptr inbounds %"class.spirv_cross::SmallVector", %"class.spirv_cross::SmallVector"* %149, i64 0, i32 0, i32 0
  br label %155

155:                                              ; preds = %176, %153
  %156 = phi i64 [ %151, %153 ], [ %177, %176 ]
  %157 = phi i64 [ 0, %153 ], [ %178, %176 ]
  %158 = load %"class.spirv_cross::Variant"*, %"class.spirv_cross::Variant"** %154, align 8
  %159 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %158, i64 %157, i32 1
  %160 = load %"struct.spirv_cross::IVariant"*, %"struct.spirv_cross::IVariant"** %159, align 8
  %161 = icmp eq %"struct.spirv_cross::IVariant"* %160, null
  br i1 %161, label %176, label %162

162:                                              ; preds = %155
  %163 = bitcast %"struct.spirv_cross::IVariant"* %160 to i8*
  %164 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %158, i64 %157, i32 0
  %165 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %164, align 8
  %166 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %158, i64 %157, i32 2
  %167 = load i32, i32* %166, align 8
  %168 = zext i32 %167 to i64
  %169 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %165, i64 0, i32 0, i64 %168, i32 0, i32 0, i32 0
  %170 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %169, align 8
  %171 = bitcast %"class.spirv_cross::ObjectPoolBase"* %170 to void (%"class.spirv_cross::ObjectPoolBase"*, i8*)***
  %172 = load void (%"class.spirv_cross::ObjectPoolBase"*, i8*)**, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*** %171, align 8
  %173 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)** %172, i64 2
  %174 = load void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)** %173, align 8
  tail call void %174(%"class.spirv_cross::ObjectPoolBase"* %170, i8* nonnull %163) #17
  %175 = load i64, i64* %150, align 8
  br label %176

176:                                              ; preds = %162, %155
  %177 = phi i64 [ %156, %155 ], [ %175, %162 ]
  %178 = add nuw i64 %157, 1
  %179 = icmp ult i64 %178, %177
  br i1 %179, label %155, label %180

180:                                              ; preds = %176, %104
  store i64 0, i64* %150, align 8
  %181 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 2, i32 0, i32 1
  %182 = load i64, i64* %181, align 8
  tail call void @_ZN11spirv_cross11SmallVectorINS_7VariantELm8EE7reserveEm(%"class.spirv_cross::SmallVector"* %149, i64 %182) #17
  %183 = load i64, i64* %181, align 8
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %279, label %185

185:                                              ; preds = %180
  %186 = bitcast %"class.spirv_cross::ParsedIR"* %0 to i64*
  %187 = getelementptr inbounds %"class.spirv_cross::SmallVector", %"class.spirv_cross::SmallVector"* %149, i64 0, i32 0, i32 0
  %188 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 2, i32 0, i32 0
  br label %214

189:                                              ; preds = %4, %210
  %190 = phi i64 [ 0, %4 ], [ %212, %210 ]
  %191 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 %190
  %192 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 %190, i32 0, i32 1
  store i64 0, i64* %192, align 8
  %193 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 4, i64 %190, i32 0, i32 1
  %194 = load i64, i64* %193, align 8
  tail call void @_ZN11spirv_cross11SmallVectorINS_7TypedIDILNS_5TypesE0EEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.29"* %191, i64 %194) #17
  %195 = load i64, i64* %193, align 8
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %210, label %197

197:                                              ; preds = %189
  %198 = getelementptr inbounds %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.29"* %191, i64 0, i32 0, i32 0
  %199 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 4, i64 %190, i32 0, i32 0
  br label %200

200:                                              ; preds = %200, %197
  %201 = phi i64 [ 0, %197 ], [ %207, %200 ]
  %202 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %198, align 8
  %203 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %199, align 8
  %204 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %203, i64 %201, i32 0
  %205 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %202, i64 %201, i32 0
  %206 = load i32, i32* %204, align 4
  store i32 %206, i32* %205, align 4
  %207 = add nuw i64 %201, 1
  %208 = load i64, i64* %193, align 8
  %209 = icmp ult i64 %207, %208
  br i1 %209, label %200, label %210

210:                                              ; preds = %200, %189
  %211 = phi i64 [ 0, %189 ], [ %208, %200 ]
  store i64 %211, i64* %192, align 8
  %212 = add nuw nsw i64 %190, 1
  %213 = icmp eq i64 %212, 14
  br i1 %213, label %18, label %189

214:                                              ; preds = %185, %275
  %215 = phi i64 [ 0, %185 ], [ %276, %275 ]
  %216 = load i64, i64* %186, align 8
  %217 = load i64, i64* %150, align 8
  %218 = add i64 %217, 1
  tail call void @_ZN11spirv_cross11SmallVectorINS_7VariantELm8EE7reserveEm(%"class.spirv_cross::SmallVector"* %149, i64 %218) #17
  %219 = load %"class.spirv_cross::Variant"*, %"class.spirv_cross::Variant"** %187, align 8
  %220 = load i64, i64* %150, align 8
  %221 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %219, i64 %220
  %222 = bitcast %"class.spirv_cross::Variant"* %221 to i64*
  store i64 %216, i64* %222, align 8
  %223 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %219, i64 %220, i32 1
  store %"struct.spirv_cross::IVariant"* null, %"struct.spirv_cross::IVariant"** %223, align 8
  %224 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %219, i64 %220, i32 2
  store i32 0, i32* %224, align 8
  %225 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %219, i64 %220, i32 3
  store i8 0, i8* %225, align 4
  %226 = load i64, i64* %150, align 8
  %227 = add i64 %226, 1
  store i64 %227, i64* %150, align 8
  %228 = load %"class.spirv_cross::Variant"*, %"class.spirv_cross::Variant"** %188, align 8
  %229 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %228, i64 %215
  %230 = load %"class.spirv_cross::Variant"*, %"class.spirv_cross::Variant"** %187, align 8
  %231 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %230, i64 %226
  %232 = icmp eq %"class.spirv_cross::Variant"* %231, %229
  br i1 %232, label %275, label %233

233:                                              ; preds = %214
  %234 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %230, i64 %226, i32 1
  %235 = load %"struct.spirv_cross::IVariant"*, %"struct.spirv_cross::IVariant"** %234, align 8
  %236 = icmp eq %"struct.spirv_cross::IVariant"* %235, null
  br i1 %236, label %250, label %237

237:                                              ; preds = %233
  %238 = bitcast %"struct.spirv_cross::IVariant"* %235 to i8*
  %239 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %231, i64 0, i32 0
  %240 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %239, align 8
  %241 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %230, i64 %226, i32 2
  %242 = load i32, i32* %241, align 8
  %243 = zext i32 %242 to i64
  %244 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %240, i64 0, i32 0, i64 %243, i32 0, i32 0, i32 0
  %245 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %244, align 8
  %246 = bitcast %"class.spirv_cross::ObjectPoolBase"* %245 to void (%"class.spirv_cross::ObjectPoolBase"*, i8*)***
  %247 = load void (%"class.spirv_cross::ObjectPoolBase"*, i8*)**, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*** %246, align 8
  %248 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)** %247, i64 2
  %249 = load void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)** %248, align 8
  tail call void %249(%"class.spirv_cross::ObjectPoolBase"* %245, i8* nonnull %238) #17
  br label %250

250:                                              ; preds = %237, %233
  %251 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %228, i64 %215, i32 1
  %252 = load %"struct.spirv_cross::IVariant"*, %"struct.spirv_cross::IVariant"** %251, align 8
  %253 = icmp eq %"struct.spirv_cross::IVariant"* %252, null
  br i1 %253, label %267, label %254

254:                                              ; preds = %250
  %255 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %231, i64 0, i32 0
  %256 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %255, align 8
  %257 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %228, i64 %215, i32 2
  %258 = load i32, i32* %257, align 8
  %259 = zext i32 %258 to i64
  %260 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %256, i64 0, i32 0, i64 %259, i32 0, i32 0, i32 0
  %261 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %260, align 8
  %262 = bitcast %"struct.spirv_cross::IVariant"* %252 to %"struct.spirv_cross::IVariant"* (%"struct.spirv_cross::IVariant"*, %"class.spirv_cross::ObjectPoolBase"*)***
  %263 = load %"struct.spirv_cross::IVariant"* (%"struct.spirv_cross::IVariant"*, %"class.spirv_cross::ObjectPoolBase"*)**, %"struct.spirv_cross::IVariant"* (%"struct.spirv_cross::IVariant"*, %"class.spirv_cross::ObjectPoolBase"*)*** %262, align 8
  %264 = getelementptr inbounds %"struct.spirv_cross::IVariant"* (%"struct.spirv_cross::IVariant"*, %"class.spirv_cross::ObjectPoolBase"*)*, %"struct.spirv_cross::IVariant"* (%"struct.spirv_cross::IVariant"*, %"class.spirv_cross::ObjectPoolBase"*)** %263, i64 2
  %265 = load %"struct.spirv_cross::IVariant"* (%"struct.spirv_cross::IVariant"*, %"class.spirv_cross::ObjectPoolBase"*)*, %"struct.spirv_cross::IVariant"* (%"struct.spirv_cross::IVariant"*, %"class.spirv_cross::ObjectPoolBase"*)** %264, align 8
  %266 = tail call %"struct.spirv_cross::IVariant"* %265(%"struct.spirv_cross::IVariant"* nonnull %252, %"class.spirv_cross::ObjectPoolBase"* %261) #17
  br label %267

267:                                              ; preds = %254, %250
  %268 = phi %"struct.spirv_cross::IVariant"* [ %266, %254 ], [ null, %250 ]
  store %"struct.spirv_cross::IVariant"* %268, %"struct.spirv_cross::IVariant"** %234, align 8
  %269 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %228, i64 %215, i32 2
  %270 = load i32, i32* %269, align 8
  %271 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %230, i64 %226, i32 2
  store i32 %270, i32* %271, align 8
  %272 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %228, i64 %215, i32 3
  %273 = load i8, i8* %272, align 4, !range !2
  %274 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %230, i64 %226, i32 3
  store i8 %273, i8* %274, align 4
  br label %275

275:                                              ; preds = %214, %267
  %276 = add nuw i64 %215, 1
  %277 = load i64, i64* %181, align 8
  %278 = icmp ult i64 %276, %277
  br i1 %278, label %214, label %279

279:                                              ; preds = %275, %180, %2
  ret %"class.spirv_cross::ParsedIR"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(216) %"class.spirv_cross::SmallVector.35"* @_ZN11spirv_cross11SmallVectorINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELm8EEaSERKS8_(%"class.spirv_cross::SmallVector.35"*, %"class.spirv_cross::SmallVector.35"* dereferenceable(216)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spirv_cross::SmallVector.35"* %0, %1
  br i1 %3, label %59, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spirv_cross::SmallVector.35", %"class.spirv_cross::SmallVector.35"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %27, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.spirv_cross::SmallVector.35", %"class.spirv_cross::SmallVector.35"* %0, i64 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %23, %8
  %11 = phi i64 [ %6, %8 ], [ %24, %23 ]
  %12 = phi i64 [ 0, %8 ], [ %25, %23 ]
  %13 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 %12
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #18
  %22 = load i64, i64* %5, align 8
  br label %23

23:                                               ; preds = %19, %10
  %24 = phi i64 [ %11, %10 ], [ %22, %19 ]
  %25 = add nuw i64 %12, 1
  %26 = icmp ult i64 %25, %24
  br i1 %26, label %10, label %27

27:                                               ; preds = %23, %4
  store i64 0, i64* %5, align 8
  %28 = getelementptr inbounds %"class.spirv_cross::SmallVector.35", %"class.spirv_cross::SmallVector.35"* %1, i64 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  tail call void @_ZN11spirv_cross11SmallVectorINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.35"* %0, i64 %29) #17
  %30 = load i64, i64* %28, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.spirv_cross::SmallVector.35", %"class.spirv_cross::SmallVector.35"* %0, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.spirv_cross::SmallVector.35", %"class.spirv_cross::SmallVector.35"* %1, i64 0, i32 0, i32 0
  br label %37

35:                                               ; preds = %55, %27
  %36 = phi i64 [ 0, %27 ], [ %57, %55 ]
  store i64 %36, i64* %5, align 8
  br label %59

37:                                               ; preds = %32, %55
  %38 = phi i64 [ 0, %32 ], [ %56, %55 ]
  %39 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %33, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 %38
  %41 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %34, align 8
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 %38
  %43 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %37
  %48 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %49 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false) #17
  br label %55

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 %38, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %40, i8* %52, i64 %54) #17
  br label %55

55:                                               ; preds = %47, %50
  %56 = add nuw i64 %38, 1
  %57 = load i64, i64* %28, align 8
  %58 = icmp ult i64 %56, %57
  br i1 %58, label %37, label %35

59:                                               ; preds = %2, %35
  ret %"class.spirv_cross::SmallVector.35"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross11SmallVectorINS_7VariantELm8EE7reserveEm(%"class.spirv_cross::SmallVector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 768614336404564650
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @_ZSt9terminatev() #19
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.spirv_cross::SmallVector", %"class.spirv_cross::SmallVector"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %95

9:                                                ; preds = %5
  %10 = icmp eq i64 %7, 0
  %11 = select i1 %10, i64 1, i64 %7
  %12 = icmp ugt i64 %11, 8
  %13 = select i1 %12, i64 %11, i64 8
  br label %14

14:                                               ; preds = %14, %9
  %15 = phi i64 [ %13, %9 ], [ %17, %14 ]
  %16 = icmp ult i64 %15, %1
  %17 = shl i64 %15, 1
  br i1 %16, label %14, label %18

18:                                               ; preds = %14
  %19 = icmp ugt i64 %15, 8
  br i1 %19, label %20, label %24

20:                                               ; preds = %18
  %21 = mul i64 %15, 24
  %22 = tail call noalias i8* @malloc(i64 %21) #17
  %23 = bitcast i8* %22 to %"class.spirv_cross::Variant"*
  br label %27

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.spirv_cross::SmallVector", %"class.spirv_cross::SmallVector"* %0, i64 0, i32 2
  %26 = bitcast %"class.spirv_cross::AlignedBuffer"* %25 to %"class.spirv_cross::Variant"*
  br label %27

27:                                               ; preds = %24, %20
  %28 = phi %"class.spirv_cross::Variant"* [ %23, %20 ], [ %26, %24 ]
  %29 = icmp eq %"class.spirv_cross::Variant"* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZSt9terminatev() #19
  unreachable

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.spirv_cross::SmallVector", %"class.spirv_cross::SmallVector"* %0, i64 0, i32 0, i32 0
  %33 = load %"class.spirv_cross::Variant"*, %"class.spirv_cross::Variant"** %32, align 8
  %34 = icmp eq %"class.spirv_cross::Variant"* %28, %33
  %35 = bitcast %"class.spirv_cross::Variant"* %33 to i8*
  br i1 %34, label %87, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.spirv_cross::SmallVector", %"class.spirv_cross::SmallVector"* %0, i64 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %87, label %40

40:                                               ; preds = %36, %80
  %41 = phi %"class.spirv_cross::Variant"* [ %84, %80 ], [ %33, %36 ]
  %42 = phi i64 [ %81, %80 ], [ 0, %36 ]
  %43 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %28, i64 %42
  %44 = icmp eq %"class.spirv_cross::Variant"* %28, %41
  %45 = bitcast %"class.spirv_cross::Variant"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 21, i1 false) #17
  br i1 %44, label %62, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %41, i64 %42
  %48 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %28, i64 %42, i32 3
  %49 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %28, i64 %42, i32 2
  %50 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %28, i64 %42, i32 1
  %51 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %41, i64 %42, i32 1
  %52 = bitcast %"struct.spirv_cross::IVariant"** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"struct.spirv_cross::IVariant"** %50 to i64*
  store i64 %53, i64* %54, align 8
  %55 = bitcast %"class.spirv_cross::Variant"* %47 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.spirv_cross::Variant"* %43 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %41, i64 %42, i32 2
  %59 = load i32, i32* %58, align 8
  store i32 %59, i32* %49, align 8
  %60 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %41, i64 %42, i32 3
  %61 = load i8, i8* %60, align 4, !range !2
  store i8 %61, i8* %48, align 4
  store %"struct.spirv_cross::IVariant"* null, %"struct.spirv_cross::IVariant"** %51, align 8
  store i32 0, i32* %58, align 8
  br label %62

62:                                               ; preds = %40, %46
  %63 = load %"class.spirv_cross::Variant"*, %"class.spirv_cross::Variant"** %32, align 8
  %64 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %63, i64 %42, i32 1
  %65 = load %"struct.spirv_cross::IVariant"*, %"struct.spirv_cross::IVariant"** %64, align 8
  %66 = icmp eq %"struct.spirv_cross::IVariant"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %62
  %68 = bitcast %"struct.spirv_cross::IVariant"* %65 to i8*
  %69 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %63, i64 %42, i32 0
  %70 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %69, align 8
  %71 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %63, i64 %42, i32 2
  %72 = load i32, i32* %71, align 8
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %70, i64 0, i32 0, i64 %73, i32 0, i32 0, i32 0
  %75 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %74, align 8
  %76 = bitcast %"class.spirv_cross::ObjectPoolBase"* %75 to void (%"class.spirv_cross::ObjectPoolBase"*, i8*)***
  %77 = load void (%"class.spirv_cross::ObjectPoolBase"*, i8*)**, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)** %77, i64 2
  %79 = load void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)** %78, align 8
  tail call void %79(%"class.spirv_cross::ObjectPoolBase"* %75, i8* nonnull %68) #17
  br label %80

80:                                               ; preds = %62, %67
  %81 = add nuw i64 %42, 1
  %82 = load i64, i64* %37, align 8
  %83 = icmp ult i64 %81, %82
  %84 = load %"class.spirv_cross::Variant"*, %"class.spirv_cross::Variant"** %32, align 8
  br i1 %83, label %40, label %85

85:                                               ; preds = %80
  %86 = bitcast %"class.spirv_cross::Variant"* %84 to i8*
  br label %87

87:                                               ; preds = %85, %36, %31
  %88 = phi i8* [ %86, %85 ], [ %35, %36 ], [ %35, %31 ]
  %89 = phi %"class.spirv_cross::Variant"* [ %84, %85 ], [ %33, %36 ], [ %28, %31 ]
  %90 = getelementptr inbounds %"class.spirv_cross::SmallVector", %"class.spirv_cross::SmallVector"* %0, i64 0, i32 2
  %91 = bitcast %"class.spirv_cross::AlignedBuffer"* %90 to %"class.spirv_cross::Variant"*
  %92 = icmp eq %"class.spirv_cross::Variant"* %89, %91
  br i1 %92, label %94, label %93

93:                                               ; preds = %87
  tail call void @free(i8* %88) #17
  br label %94

94:                                               ; preds = %87, %93
  store %"class.spirv_cross::Variant"* %28, %"class.spirv_cross::Variant"** %32, align 8
  store i64 %15, i64* %6, align 8
  br label %95

95:                                               ; preds = %94, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11spirv_cross8ParsedIR13set_id_boundsEj(%"class.spirv_cross::ParsedIR"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 2
  %4 = zext i32 %1 to i64
  tail call void @_ZN11spirv_cross11SmallVectorINS_7VariantELm8EE7reserveEm(%"class.spirv_cross::SmallVector"* %3, i64 %4) #17
  %5 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %4
  br i1 %7, label %8, label %25

8:                                                ; preds = %2
  %9 = bitcast %"class.spirv_cross::ParsedIR"* %0 to i64*
  %10 = getelementptr inbounds %"class.spirv_cross::SmallVector", %"class.spirv_cross::SmallVector"* %3, i64 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %8, %11
  %12 = phi i64 [ %6, %8 ], [ %23, %11 ]
  %13 = load i64, i64* %9, align 8
  %14 = add nuw i64 %12, 1
  tail call void @_ZN11spirv_cross11SmallVectorINS_7VariantELm8EE7reserveEm(%"class.spirv_cross::SmallVector"* %3, i64 %14) #17
  %15 = load %"class.spirv_cross::Variant"*, %"class.spirv_cross::Variant"** %10, align 8
  %16 = load i64, i64* %5, align 8
  %17 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %15, i64 %16
  %18 = bitcast %"class.spirv_cross::Variant"* %17 to i64*
  store i64 %13, i64* %18, align 8
  %19 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %15, i64 %16, i32 1
  store %"struct.spirv_cross::IVariant"* null, %"struct.spirv_cross::IVariant"** %19, align 8
  %20 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %15, i64 %16, i32 2
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %15, i64 %16, i32 3
  store i8 0, i8* %21, align 4
  %22 = load i64, i64* %5, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %5, align 8
  %24 = icmp ult i64 %23, %4
  br i1 %24, label %11, label %25

25:                                               ; preds = %11, %2
  %26 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 9
  %27 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 9, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = icmp ult i64 %28, %4
  br i1 %29, label %30, label %66

30:                                               ; preds = %25
  tail call void @_ZN11spirv_cross11SmallVectorIhLm8EE7reserveEm(%"class.spirv_cross::SmallVector.43"* %26, i64 %4) #17
  %31 = load i64, i64* %27, align 8
  %32 = icmp ult i64 %31, %4
  br i1 %32, label %33, label %66

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.spirv_cross::SmallVector.43", %"class.spirv_cross::SmallVector.43"* %26, i64 0, i32 0, i32 0
  %35 = sub i64 %4, %31
  %36 = xor i64 %31, -1
  %37 = add i64 %36, %4
  %38 = and i64 %35, 3
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %48, label %40

40:                                               ; preds = %33, %40
  %41 = phi i64 [ %45, %40 ], [ %31, %33 ]
  %42 = phi i64 [ %46, %40 ], [ %38, %33 ]
  %43 = load i8*, i8** %34, align 8
  %44 = getelementptr inbounds i8, i8* %43, i64 %41
  store i8 0, i8* %44, align 1
  %45 = add nuw i64 %41, 1
  %46 = add i64 %42, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %40, !llvm.loop !3

48:                                               ; preds = %40, %33
  %49 = phi i64 [ %31, %33 ], [ %45, %40 ]
  %50 = icmp ult i64 %37, 3
  br i1 %50, label %66, label %51

51:                                               ; preds = %48, %51
  %52 = phi i64 [ %64, %51 ], [ %49, %48 ]
  %53 = load i8*, i8** %34, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 %52
  store i8 0, i8* %54, align 1
  %55 = add nuw i64 %52, 1
  %56 = load i8*, i8** %34, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %55
  store i8 0, i8* %57, align 1
  %58 = add nuw i64 %52, 2
  %59 = load i8*, i8** %34, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 %58
  store i8 0, i8* %60, align 1
  %61 = add nuw i64 %52, 3
  %62 = load i8*, i8** %34, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 %61
  store i8 0, i8* %63, align 1
  %64 = add nuw i64 %52, 4
  %65 = icmp eq i64 %64, %4
  br i1 %65, label %66, label %51

66:                                               ; preds = %48, %51, %25, %30
  store i64 %4, i64* %27, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11spirv_cross8ParsedIR31is_globally_reserved_identifierERNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = tail call fastcc zeroext i1 @_ZN11spirv_crossL22is_reserved_identifierERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEbb(%"class.std::__1::basic_string"* dereferenceable(24) %0, i1 zeroext false, i1 zeroext %1)
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN11spirv_crossL22is_reserved_identifierERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEbb(%"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, i1 zeroext) unnamed_addr #0 {
  br i1 %2, label %10, label %4

4:                                                ; preds = %3
  %5 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i64 3) #17
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %82, label %7

7:                                                ; preds = %4
  %8 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i64 3) #17
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %82, label %10

10:                                               ; preds = %7, %3
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  br i1 %1, label %19, label %48

19:                                               ; preds = %10
  %20 = icmp ult i64 %18, 3
  br i1 %20, label %82, label %21

21:                                               ; preds = %19
  %22 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #17
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %82

24:                                               ; preds = %21
  %25 = load i8, i8* %12, align 1
  %26 = icmp slt i8 %25, 0
  %27 = load i64, i64* %15, align 8
  %28 = zext i8 %25 to i64
  %29 = select i1 %26, i64 %27, i64 %28
  %30 = icmp ugt i64 %29, 2
  br i1 %30, label %31, label %45

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %35 = select i1 %26, i8* %33, i8* %34
  br label %36

36:                                               ; preds = %31, %42
  %37 = phi i64 [ 2, %31 ], [ %43, %42 ]
  %38 = getelementptr inbounds i8, i8* %35, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = add i8 %39, -48
  %41 = icmp ult i8 %40, 10
  br i1 %41, label %42, label %45

42:                                               ; preds = %36
  %43 = add nuw i64 %37, 1
  %44 = icmp ult i64 %43, %29
  br i1 %44, label %36, label %45

45:                                               ; preds = %36, %42, %24
  %46 = phi i64 [ 2, %24 ], [ %43, %42 ], [ %37, %36 ]
  %47 = icmp eq i64 %46, %29
  br label %82

48:                                               ; preds = %10
  %49 = icmp ult i64 %18, 2
  br i1 %49, label %82, label %50

50:                                               ; preds = %48
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %54 = select i1 %14, i8* %52, i8* %53
  %55 = load i8, i8* %54, align 1
  %56 = icmp eq i8 %55, 95
  br i1 %56, label %57, label %82

57:                                               ; preds = %50
  %58 = getelementptr inbounds i8, i8* %54, i64 1
  %59 = load i8, i8* %58, align 1
  %60 = add i8 %59, -48
  %61 = icmp ult i8 %60, 10
  br i1 %61, label %62, label %82

62:                                               ; preds = %57
  %63 = icmp ugt i64 %18, 2
  br i1 %63, label %64, label %73

64:                                               ; preds = %62, %70
  %65 = phi i64 [ %71, %70 ], [ 2, %62 ]
  %66 = getelementptr inbounds i8, i8* %54, i64 %65
  %67 = load i8, i8* %66, align 1
  %68 = add i8 %67, -48
  %69 = icmp ult i8 %68, 10
  br i1 %69, label %70, label %73

70:                                               ; preds = %64
  %71 = add nuw i64 %65, 1
  %72 = icmp ult i64 %71, %18
  br i1 %72, label %64, label %73

73:                                               ; preds = %64, %70, %62
  %74 = phi i64 [ 2, %62 ], [ %71, %70 ], [ %65, %64 ]
  %75 = icmp eq i64 %74, %18
  br i1 %75, label %82, label %76

76:                                               ; preds = %73
  %77 = icmp ult i64 %74, %18
  br i1 %77, label %78, label %82

78:                                               ; preds = %76
  %79 = getelementptr inbounds i8, i8* %54, i64 %74
  %80 = load i8, i8* %79, align 1
  %81 = icmp eq i8 %80, 95
  br label %82

82:                                               ; preds = %4, %73, %78, %76, %57, %50, %48, %21, %19, %7, %45
  %83 = phi i1 [ %47, %45 ], [ true, %7 ], [ false, %19 ], [ false, %21 ], [ false, %48 ], [ false, %50 ], [ false, %57 ], [ true, %73 ], [ false, %76 ], [ %81, %78 ], [ true, %4 ]
  ret i1 %83
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK11spirv_cross8ParsedIR17get_spirv_versionEv(%"class.spirv_cross::ParsedIR"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = getelementptr inbounds i32, i32* %3, i64 1
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11spirv_cross8ParsedIR20sanitize_underscoresERNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %9 = select i1 %5, i8* %7, i8* %8
  %10 = ptrtoint i8* %9 to i64
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %4 to i64
  %14 = select i1 %5, i64 %12, i64 %13
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %62, label %16

16:                                               ; preds = %1, %46
  %17 = phi i64 [ %47, %46 ], [ %12, %1 ]
  %18 = phi i8* [ %48, %46 ], [ %7, %1 ]
  %19 = phi i8 [ %49, %46 ], [ %4, %1 ]
  %20 = phi i64 [ %50, %46 ], [ %12, %1 ]
  %21 = phi i8* [ %51, %46 ], [ %7, %1 ]
  %22 = phi i8 [ %52, %46 ], [ %4, %1 ]
  %23 = phi i8 [ %54, %46 ], [ 0, %1 ]
  %24 = phi i64 [ %53, %46 ], [ %10, %1 ]
  %25 = phi i8* [ %55, %46 ], [ %9, %1 ]
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 95
  %28 = zext i1 %27 to i8
  %29 = and i8 %23, 1
  %30 = icmp eq i8 %29, 0
  %31 = xor i1 %27, true
  %32 = or i1 %30, %31
  br i1 %32, label %33, label %46

33:                                               ; preds = %16
  %34 = inttoptr i64 %24 to i8*
  %35 = icmp eq i8* %25, %34
  br i1 %35, label %40, label %36

36:                                               ; preds = %33
  store i8 %26, i8* %34, align 1
  %37 = load i8, i8* %3, align 1
  %38 = load i8*, i8** %6, align 8
  %39 = load i64, i64* %11, align 8
  br label %40

40:                                               ; preds = %33, %36
  %41 = phi i64 [ %17, %33 ], [ %39, %36 ]
  %42 = phi i8* [ %18, %33 ], [ %38, %36 ]
  %43 = phi i8 [ %19, %33 ], [ %37, %36 ]
  %44 = getelementptr inbounds i8, i8* %34, i64 1
  %45 = ptrtoint i8* %44 to i64
  br label %46

46:                                               ; preds = %16, %40
  %47 = phi i64 [ %41, %40 ], [ %17, %16 ]
  %48 = phi i8* [ %42, %40 ], [ %18, %16 ]
  %49 = phi i8 [ %43, %40 ], [ %19, %16 ]
  %50 = phi i64 [ %41, %40 ], [ %20, %16 ]
  %51 = phi i8* [ %42, %40 ], [ %21, %16 ]
  %52 = phi i8 [ %43, %40 ], [ %22, %16 ]
  %53 = phi i64 [ %45, %40 ], [ %24, %16 ]
  %54 = phi i8 [ %28, %40 ], [ %23, %16 ]
  %55 = getelementptr inbounds i8, i8* %25, i64 1
  %56 = icmp slt i8 %52, 0
  %57 = zext i8 %52 to i64
  %58 = select i1 %56, i8* %51, i8* %8
  %59 = select i1 %56, i64 %50, i64 %57
  %60 = getelementptr inbounds i8, i8* %58, i64 %59
  %61 = icmp eq i8* %55, %60
  br i1 %61, label %62, label %16

62:                                               ; preds = %46, %1
  %63 = phi i64 [ 0, %1 ], [ %59, %46 ]
  %64 = phi i64 [ %13, %1 ], [ %57, %46 ]
  %65 = phi i64 [ %12, %1 ], [ %50, %46 ]
  %66 = phi i8* [ %7, %1 ], [ %51, %46 ]
  %67 = phi i64 [ %10, %1 ], [ %53, %46 ]
  %68 = phi i1 [ %5, %1 ], [ %56, %46 ]
  %69 = getelementptr inbounds i8, i8* %66, i64 %65
  %70 = ptrtoint i8* %66 to i64
  %71 = getelementptr inbounds i8, i8* %8, i64 %64
  %72 = ptrtoint %"class.std::__1::basic_string"* %0 to i64
  %73 = select i1 %68, i8* %69, i8* %71
  %74 = select i1 %68, i64 %70, i64 %72
  %75 = ptrtoint i8* %73 to i64
  %76 = sub i64 %67, %74
  %77 = sub i64 %75, %67
  %78 = icmp ult i64 %63, %76
  br i1 %78, label %79, label %81

79:                                               ; preds = %62
  %80 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %80) #19
  unreachable

81:                                               ; preds = %62
  %82 = icmp eq i64 %77, -1
  br i1 %82, label %83, label %89

83:                                               ; preds = %81
  br i1 %68, label %84, label %86

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %66, i64 %76
  store i8 0, i8* %85, align 1
  store i64 %76, i64* %11, align 8
  br label %90

86:                                               ; preds = %83
  %87 = getelementptr inbounds i8, i8* %8, i64 %76
  store i8 0, i8* %87, align 1
  %88 = trunc i64 %76 to i8
  store i8 %88, i8* %3, align 1
  br label %90

89:                                               ; preds = %81
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"* %0, i64 %76, i64 %77) #17
  br label %90

90:                                               ; preds = %84, %86, %89
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK11spirv_cross8ParsedIR8get_nameENS_7TypedIDILNS_5TypesE0EEE(%"class.spirv_cross::ParsedIR"* readonly, i32) local_unnamed_addr #4 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %58, label %7

7:                                                ; preds = %2
  %8 = tail call i64 @llvm.ctpop.i64(i64 %5) #17, !range !5
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = add i64 %5, 4294967295
  %12 = and i64 %11, %3
  br label %17

13:                                               ; preds = %7
  %14 = icmp ugt i64 %5, %3
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = urem i64 %3, %5
  br label %17

17:                                               ; preds = %15, %13, %10
  %18 = phi i64 [ %12, %10 ], [ %16, %15 ], [ %3, %13 ]
  %19 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %20, i64 %18
  %22 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base"* %22, null
  br i1 %23, label %58, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %22, i64 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %58, label %28

28:                                               ; preds = %24
  %29 = add i64 %5, -1
  br label %30

30:                                               ; preds = %51, %28
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %26, %28 ], [ %53, %51 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 1
  %33 = bitcast %"struct.std::__1::__hash_node_base"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, %3
  br i1 %35, label %46, label %36

36:                                               ; preds = %30
  br i1 %9, label %39, label %37

37:                                               ; preds = %36
  %38 = and i64 %34, %29
  br label %43

39:                                               ; preds = %36
  %40 = icmp ult i64 %34, %5
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %34, %5
  br label %43

43:                                               ; preds = %41, %39, %37
  %44 = phi i64 [ %38, %37 ], [ %42, %41 ], [ %34, %39 ]
  %45 = icmp eq i64 %44, %18
  br i1 %45, label %51, label %58

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 2
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %1
  br i1 %50, label %55, label %51

51:                                               ; preds = %46, %43
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base"* %53, null
  br i1 %54, label %58, label %30

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 3
  %57 = bitcast %"struct.std::__1::__hash_node_base"* %56 to %"struct.spirv_cross::Meta"*
  br label %58

58:                                               ; preds = %43, %51, %2, %17, %24, %55
  %59 = phi %"struct.spirv_cross::Meta"* [ %57, %55 ], [ null, %17 ], [ null, %2 ], [ null, %24 ], [ null, %51 ], [ null, %43 ]
  %60 = icmp eq %"struct.spirv_cross::Meta"* %59, null
  %61 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %59, i64 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 18
  %63 = select i1 %60, %"class.std::__1::basic_string"* %62, %"class.std::__1::basic_string"* %61
  ret %"class.std::__1::basic_string"* %63
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"struct.spirv_cross::Meta"* @_ZNK11spirv_cross8ParsedIR9find_metaENS_7TypedIDILNS_5TypesE0EEE(%"class.spirv_cross::ParsedIR"* nocapture readonly, i32) local_unnamed_addr #4 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %58, label %7

7:                                                ; preds = %2
  %8 = tail call i64 @llvm.ctpop.i64(i64 %5) #17, !range !5
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = add i64 %5, 4294967295
  %12 = and i64 %11, %3
  br label %17

13:                                               ; preds = %7
  %14 = icmp ugt i64 %5, %3
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = urem i64 %3, %5
  br label %17

17:                                               ; preds = %15, %13, %10
  %18 = phi i64 [ %12, %10 ], [ %16, %15 ], [ %3, %13 ]
  %19 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %20, i64 %18
  %22 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base"* %22, null
  br i1 %23, label %58, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %22, i64 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %58, label %28

28:                                               ; preds = %24
  %29 = add i64 %5, -1
  br label %30

30:                                               ; preds = %51, %28
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %26, %28 ], [ %53, %51 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 1
  %33 = bitcast %"struct.std::__1::__hash_node_base"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, %3
  br i1 %35, label %46, label %36

36:                                               ; preds = %30
  br i1 %9, label %39, label %37

37:                                               ; preds = %36
  %38 = and i64 %34, %29
  br label %43

39:                                               ; preds = %36
  %40 = icmp ult i64 %34, %5
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %34, %5
  br label %43

43:                                               ; preds = %41, %39, %37
  %44 = phi i64 [ %38, %37 ], [ %42, %41 ], [ %34, %39 ]
  %45 = icmp eq i64 %44, %18
  br i1 %45, label %51, label %58

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 2
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %1
  br i1 %50, label %55, label %51

51:                                               ; preds = %46, %43
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base"* %53, null
  br i1 %54, label %58, label %30

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 3
  %57 = bitcast %"struct.std::__1::__hash_node_base"* %56 to %"struct.spirv_cross::Meta"*
  br label %58

58:                                               ; preds = %51, %43, %24, %2, %17, %55
  %59 = phi %"struct.spirv_cross::Meta"* [ %57, %55 ], [ null, %17 ], [ null, %2 ], [ null, %24 ], [ null, %43 ], [ null, %51 ]
  ret %"struct.spirv_cross::Meta"* %59
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK11spirv_cross8ParsedIR15get_member_nameENS_7TypedIDILNS_5TypesE1EEEj(%"class.spirv_cross::ParsedIR"* readonly, i32, i32) local_unnamed_addr #4 align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %72, label %8

8:                                                ; preds = %3
  %9 = tail call i64 @llvm.ctpop.i64(i64 %6) #17, !range !5
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = add i64 %6, 4294967295
  %13 = and i64 %12, %4
  br label %18

14:                                               ; preds = %8
  %15 = icmp ugt i64 %6, %4
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %4, %6
  br label %18

18:                                               ; preds = %16, %14, %11
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %4, %14 ]
  %20 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base"* %23, null
  br i1 %24, label %72, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %23, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, null
  br i1 %28, label %72, label %29

29:                                               ; preds = %25
  %30 = add i64 %6, -1
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi %"struct.std::__1::__hash_node_base"* [ %27, %29 ], [ %54, %52 ]
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 1
  %34 = bitcast %"struct.std::__1::__hash_node_base"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %4
  br i1 %36, label %47, label %37

37:                                               ; preds = %31
  br i1 %10, label %40, label %38

38:                                               ; preds = %37
  %39 = and i64 %35, %30
  br label %44

40:                                               ; preds = %37
  %41 = icmp ult i64 %35, %6
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %35, %6
  br label %44

44:                                               ; preds = %42, %40, %38
  %45 = phi i64 [ %39, %38 ], [ %43, %42 ], [ %35, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %52, label %72

47:                                               ; preds = %31
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 2
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, %1
  br i1 %51, label %56, label %52

52:                                               ; preds = %47, %44
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base"* %54, null
  br i1 %55, label %72, label %31

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 3
  %58 = icmp eq %"struct.std::__1::__hash_node_base"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %56
  %60 = zext i32 %2 to i64
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 41
  %62 = bitcast %"struct.std::__1::__hash_node_base"* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = icmp ugt i64 %63, %60
  br i1 %64, label %67, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 18
  br label %74

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 40
  %69 = bitcast %"struct.std::__1::__hash_node_base"* %68 to %"struct.spirv_cross::Meta::Decoration"**
  %70 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %69, align 8
  %71 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %70, i64 %60, i32 0
  br label %74

72:                                               ; preds = %52, %44, %25, %3, %18, %56
  %73 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 18
  br label %74

74:                                               ; preds = %72, %67, %65
  %75 = phi %"class.std::__1::basic_string"* [ %66, %65 ], [ %71, %67 ], [ %73, %72 ]
  ret %"class.std::__1::basic_string"* %75
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11spirv_cross8ParsedIR19sanitize_identifierERNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEbb(%"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %213, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %19 = select i1 %9, i8* %17, i8* %18
  %20 = load i8, i8* %19, align 1
  %21 = add i8 %20, -48
  %22 = icmp ult i8 %21, 10
  br i1 %22, label %53, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds i8, i8* %19, i64 %13
  %25 = and i8 %20, -33
  %26 = add i8 %25, -65
  %27 = icmp ult i8 %26, 26
  %28 = icmp eq i8 %20, 95
  %29 = or i1 %28, %27
  br i1 %29, label %30, label %53

30:                                               ; preds = %23, %34
  %31 = phi i8* [ %32, %34 ], [ %19, %23 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 1
  %33 = icmp eq i8* %32, %24
  br i1 %33, label %44, label %34

34:                                               ; preds = %30
  %35 = load i8, i8* %32, align 1
  %36 = and i8 %35, -33
  %37 = add i8 %36, -65
  %38 = icmp ult i8 %37, 26
  %39 = add i8 %35, -48
  %40 = icmp ult i8 %39, 10
  %41 = or i1 %40, %38
  %42 = icmp eq i8 %35, 95
  %43 = or i1 %42, %41
  br i1 %43, label %30, label %53

44:                                               ; preds = %30, %49
  %45 = phi i8* [ %47, %49 ], [ %19, %30 ]
  %46 = phi i1 [ %51, %49 ], [ %28, %30 ]
  %47 = getelementptr inbounds i8, i8* %45, i64 1
  %48 = icmp eq i8* %47, %24
  br i1 %48, label %213, label %49

49:                                               ; preds = %44
  %50 = load i8, i8* %47, align 1
  %51 = icmp eq i8 %50, 95
  %52 = and i1 %51, %46
  br i1 %52, label %53, label %44

53:                                               ; preds = %34, %49, %23, %15
  %54 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #17
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 24, i1 false) #17, !alias.scope !6
  %57 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %0, i8 signext 40, i64 0) #17, !noalias !6
  %58 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::allocator.40"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 0, i64 %57, %"class.std::__1::allocator.40"* dereferenceable(1) %58) #17
  %59 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1, !alias.scope !6
  %62 = icmp slt i8 %61, 0
  %63 = load i64, i64* %56, align 8, !alias.scope !6
  %64 = zext i8 %61 to i64
  %65 = select i1 %62, i64 %63, i64 %64
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %207, label %67

67:                                               ; preds = %53
  %68 = load i8*, i8** %55, align 8, !alias.scope !6
  %69 = select i1 %62, i8* %68, i8* %54
  %70 = load i8, i8* %69, align 1
  %71 = add i8 %70, -48
  %72 = icmp ult i8 %71, 10
  br i1 %72, label %73, label %78

73:                                               ; preds = %67
  store i8 95, i8* %69, align 1
  %74 = load i8, i8* %60, align 1, !alias.scope !6
  %75 = load i8*, i8** %55, align 8, !alias.scope !6
  %76 = load i64, i64* %56, align 8, !alias.scope !6
  %77 = zext i8 %74 to i64
  br label %78

78:                                               ; preds = %73, %67
  %79 = phi i64 [ %77, %73 ], [ %64, %67 ]
  %80 = phi i64 [ %76, %73 ], [ %63, %67 ]
  %81 = phi i8* [ %75, %73 ], [ %68, %67 ]
  %82 = phi i8 [ %74, %73 ], [ %61, %67 ]
  %83 = icmp slt i8 %82, 0
  %84 = select i1 %83, i8* %81, i8* %54
  %85 = select i1 %83, i64 %80, i64 %79
  %86 = getelementptr inbounds i8, i8* %84, i64 %85
  %87 = icmp eq i64 %85, 0
  br i1 %87, label %191, label %88

88:                                               ; preds = %78
  %89 = icmp ult i64 %85, 16
  br i1 %89, label %90, label %92

90:                                               ; preds = %189, %88
  %91 = phi i8* [ %84, %88 ], [ %94, %189 ]
  br label %192

92:                                               ; preds = %88
  %93 = and i64 %85, -16
  %94 = getelementptr i8, i8* %84, i64 %93
  br label %95

95:                                               ; preds = %186, %92
  %96 = phi i64 [ 0, %92 ], [ %187, %186 ]
  %97 = getelementptr i8, i8* %84, i64 %96
  %98 = bitcast i8* %97 to <16 x i8>*
  %99 = load <16 x i8>, <16 x i8>* %98, align 1
  %100 = and <16 x i8> %99, <i8 -33, i8 -33, i8 -33, i8 -33, i8 -33, i8 -33, i8 -33, i8 -33, i8 -33, i8 -33, i8 -33, i8 -33, i8 -33, i8 -33, i8 -33, i8 -33>
  %101 = add <16 x i8> %100, <i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65, i8 -65>
  %102 = icmp ult <16 x i8> %101, <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>
  %103 = add <16 x i8> %99, <i8 -48, i8 -48, i8 -48, i8 -48, i8 -48, i8 -48, i8 -48, i8 -48, i8 -48, i8 -48, i8 -48, i8 -48, i8 -48, i8 -48, i8 -48, i8 -48>
  %104 = icmp ult <16 x i8> %103, <i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10>
  %105 = or <16 x i1> %104, %102
  %106 = icmp eq <16 x i8> %99, <i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95>
  %107 = or <16 x i1> %106, %105
  %108 = xor <16 x i1> %107, <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>
  %109 = extractelement <16 x i1> %108, i32 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %95
  store i8 95, i8* %97, align 1
  br label %111

111:                                              ; preds = %110, %95
  %112 = extractelement <16 x i1> %108, i32 1
  br i1 %112, label %113, label %116

113:                                              ; preds = %111
  %114 = or i64 %96, 1
  %115 = getelementptr i8, i8* %84, i64 %114
  store i8 95, i8* %115, align 1
  br label %116

116:                                              ; preds = %113, %111
  %117 = extractelement <16 x i1> %108, i32 2
  br i1 %117, label %118, label %121

118:                                              ; preds = %116
  %119 = or i64 %96, 2
  %120 = getelementptr i8, i8* %84, i64 %119
  store i8 95, i8* %120, align 1
  br label %121

121:                                              ; preds = %118, %116
  %122 = extractelement <16 x i1> %108, i32 3
  br i1 %122, label %123, label %126

123:                                              ; preds = %121
  %124 = or i64 %96, 3
  %125 = getelementptr i8, i8* %84, i64 %124
  store i8 95, i8* %125, align 1
  br label %126

126:                                              ; preds = %123, %121
  %127 = extractelement <16 x i1> %108, i32 4
  br i1 %127, label %128, label %131

128:                                              ; preds = %126
  %129 = or i64 %96, 4
  %130 = getelementptr i8, i8* %84, i64 %129
  store i8 95, i8* %130, align 1
  br label %131

131:                                              ; preds = %128, %126
  %132 = extractelement <16 x i1> %108, i32 5
  br i1 %132, label %133, label %136

133:                                              ; preds = %131
  %134 = or i64 %96, 5
  %135 = getelementptr i8, i8* %84, i64 %134
  store i8 95, i8* %135, align 1
  br label %136

136:                                              ; preds = %133, %131
  %137 = extractelement <16 x i1> %108, i32 6
  br i1 %137, label %138, label %141

138:                                              ; preds = %136
  %139 = or i64 %96, 6
  %140 = getelementptr i8, i8* %84, i64 %139
  store i8 95, i8* %140, align 1
  br label %141

141:                                              ; preds = %138, %136
  %142 = extractelement <16 x i1> %108, i32 7
  br i1 %142, label %143, label %146

143:                                              ; preds = %141
  %144 = or i64 %96, 7
  %145 = getelementptr i8, i8* %84, i64 %144
  store i8 95, i8* %145, align 1
  br label %146

146:                                              ; preds = %143, %141
  %147 = extractelement <16 x i1> %108, i32 8
  br i1 %147, label %148, label %151

148:                                              ; preds = %146
  %149 = or i64 %96, 8
  %150 = getelementptr i8, i8* %84, i64 %149
  store i8 95, i8* %150, align 1
  br label %151

151:                                              ; preds = %148, %146
  %152 = extractelement <16 x i1> %108, i32 9
  br i1 %152, label %153, label %156

153:                                              ; preds = %151
  %154 = or i64 %96, 9
  %155 = getelementptr i8, i8* %84, i64 %154
  store i8 95, i8* %155, align 1
  br label %156

156:                                              ; preds = %153, %151
  %157 = extractelement <16 x i1> %108, i32 10
  br i1 %157, label %158, label %161

158:                                              ; preds = %156
  %159 = or i64 %96, 10
  %160 = getelementptr i8, i8* %84, i64 %159
  store i8 95, i8* %160, align 1
  br label %161

161:                                              ; preds = %158, %156
  %162 = extractelement <16 x i1> %108, i32 11
  br i1 %162, label %163, label %166

163:                                              ; preds = %161
  %164 = or i64 %96, 11
  %165 = getelementptr i8, i8* %84, i64 %164
  store i8 95, i8* %165, align 1
  br label %166

166:                                              ; preds = %163, %161
  %167 = extractelement <16 x i1> %108, i32 12
  br i1 %167, label %168, label %171

168:                                              ; preds = %166
  %169 = or i64 %96, 12
  %170 = getelementptr i8, i8* %84, i64 %169
  store i8 95, i8* %170, align 1
  br label %171

171:                                              ; preds = %168, %166
  %172 = extractelement <16 x i1> %108, i32 13
  br i1 %172, label %173, label %176

173:                                              ; preds = %171
  %174 = or i64 %96, 13
  %175 = getelementptr i8, i8* %84, i64 %174
  store i8 95, i8* %175, align 1
  br label %176

176:                                              ; preds = %173, %171
  %177 = extractelement <16 x i1> %108, i32 14
  br i1 %177, label %178, label %181

178:                                              ; preds = %176
  %179 = or i64 %96, 14
  %180 = getelementptr i8, i8* %84, i64 %179
  store i8 95, i8* %180, align 1
  br label %181

181:                                              ; preds = %178, %176
  %182 = extractelement <16 x i1> %108, i32 15
  br i1 %182, label %183, label %186

183:                                              ; preds = %181
  %184 = or i64 %96, 15
  %185 = getelementptr i8, i8* %84, i64 %184
  store i8 95, i8* %185, align 1
  br label %186

186:                                              ; preds = %183, %181
  %187 = add i64 %96, 16
  %188 = icmp eq i64 %187, %93
  br i1 %188, label %189, label %95, !llvm.loop !9

189:                                              ; preds = %186
  %190 = icmp eq i64 %85, %93
  br i1 %190, label %191, label %90

191:                                              ; preds = %204, %189, %78
  call void @_ZN11spirv_cross8ParsedIR20sanitize_underscoresERNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #17
  br label %207

192:                                              ; preds = %90, %204
  %193 = phi i8* [ %205, %204 ], [ %91, %90 ]
  %194 = load i8, i8* %193, align 1
  %195 = and i8 %194, -33
  %196 = add i8 %195, -65
  %197 = icmp ult i8 %196, 26
  %198 = add i8 %194, -48
  %199 = icmp ult i8 %198, 10
  %200 = or i1 %199, %197
  %201 = icmp eq i8 %194, 95
  %202 = or i1 %201, %200
  br i1 %202, label %204, label %203

203:                                              ; preds = %192
  store i8 95, i8* %193, align 1
  br label %204

204:                                              ; preds = %203, %192
  %205 = getelementptr inbounds i8, i8* %193, i64 1
  %206 = icmp eq i8* %205, %86
  br i1 %206, label %191, label %192, !llvm.loop !11

207:                                              ; preds = %53, %191
  %208 = load i8, i8* %7, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %210, label %212

210:                                              ; preds = %207
  %211 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %211) #18
  br label %212

212:                                              ; preds = %210, %207
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* nonnull align 8 %54, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #17
  br label %213

213:                                              ; preds = %44, %3, %212
  %214 = call fastcc zeroext i1 @_ZN11spirv_crossL22is_reserved_identifierERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEbb(%"class.std::__1::basic_string"* dereferenceable(24) %0, i1 zeroext %1, i1 zeroext %2)
  br i1 %214, label %215, label %232

215:                                              ; preds = %213
  %216 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %216) #17
  %217 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i64 3) #17, !noalias !13
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %223, label %219

219:                                              ; preds = %215
  %220 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i64 3) #17
  %221 = icmp eq i32 %220, 0
  %222 = select i1 %221, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0)
  br label %223

223:                                              ; preds = %219, %215
  %224 = phi i8* [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0), %215 ], [ %222, %219 ]
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %5, i8* %224, %"class.std::__1::basic_string"* dereferenceable(24) %0) #17
  %225 = load i8, i8* %7, align 1
  %226 = icmp slt i8 %225, 0
  br i1 %226, label %227, label %230

227:                                              ; preds = %223
  %228 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load i8*, i8** %228, align 8
  call void @_ZdlPv(i8* %229) #18
  br label %230

230:                                              ; preds = %227, %223
  %231 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %231, i8* nonnull align 8 %216, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %216) #17
  br label %232

232:                                              ; preds = %230, %213
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11spirv_cross8ParsedIR20fixup_reserved_namesEv(%"class.spirv_cross::ParsedIR"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::tuple", align 8
  %3 = alloca %"class.std::__1::tuple.450", align 1
  %4 = alloca %"class.spirv_cross::TypedID", align 4
  %5 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 20, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = bitcast %"struct.std::__1::__hash_node_base.105"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.spirv_cross::TypedID"* %4 to i8*
  %11 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %4, i64 0, i32 0
  %12 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0
  %13 = bitcast %"class.std::__1::tuple"* %2 to i8*
  %14 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::tuple.450", %"class.std::__1::tuple.450"* %3, i64 0, i32 0
  br label %70

16:                                               ; preds = %87, %1
  %17 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 20, i32 0, i32 2, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %69, label %20

20:                                               ; preds = %16
  %21 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %5, align 8
  %22 = icmp eq %"struct.std::__1::__hash_node_base.105"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %20, %23
  %24 = phi %"struct.std::__1::__hash_node_base.105"* [ %26, %23 ], [ %21, %20 ]
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %24, i64 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %25, align 8
  %27 = bitcast %"struct.std::__1::__hash_node_base.105"* %24 to i8*
  call void @_ZdlPv(i8* %27) #18
  %28 = icmp eq %"struct.std::__1::__hash_node_base.105"* %26, null
  br i1 %28, label %29, label %23

29:                                               ; preds = %23, %20
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %5, align 8
  %30 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %51, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = add i64 %31, -1
  %36 = and i64 %31, 3
  %37 = icmp ult i64 %35, 3
  br i1 %37, label %40, label %38

38:                                               ; preds = %33
  %39 = sub i64 %31, %36
  br label %52

40:                                               ; preds = %52, %33
  %41 = phi i64 [ 0, %33 ], [ %66, %52 ]
  %42 = icmp eq i64 %36, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %40, %43
  %44 = phi i64 [ %48, %43 ], [ %41, %40 ]
  %45 = phi i64 [ %49, %43 ], [ %36, %40 ]
  %46 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %34, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %46, i64 %44
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %47, align 8
  %48 = add nuw i64 %44, 1
  %49 = add i64 %45, -1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %43, !llvm.loop !16

51:                                               ; preds = %40, %43, %29
  store i64 0, i64* %17, align 8
  br label %69

52:                                               ; preds = %52, %38
  %53 = phi i64 [ 0, %38 ], [ %66, %52 ]
  %54 = phi i64 [ %39, %38 ], [ %67, %52 ]
  %55 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %34, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %55, i64 %53
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %56, align 8
  %57 = or i64 %53, 1
  %58 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %34, align 8
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %58, i64 %57
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %59, align 8
  %60 = or i64 %53, 2
  %61 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %34, align 8
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %61, i64 %60
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %62, align 8
  %63 = or i64 %53, 3
  %64 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %34, align 8
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %64, i64 %63
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %65, align 8
  %66 = add nuw i64 %53, 4
  %67 = add i64 %54, -4
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %40, label %52

69:                                               ; preds = %16, %51
  ret void

70:                                               ; preds = %9, %87
  %71 = phi i64 [ %7, %9 ], [ %89, %87 ]
  %72 = inttoptr i64 %71 to %"struct.std::__1::__hash_node"*
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %72, i64 0, i32 2
  %74 = load i32, i32* %73, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #17
  store i32 %74, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #17
  store %"class.spirv_cross::TypedID"* %4, %"class.spirv_cross::TypedID"** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #17
  %75 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %12, %"class.spirv_cross::TypedID"* nonnull dereferenceable(4) %4, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.450"* nonnull dereferenceable(1) %3) #17
  %76 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %75, 0
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %76, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #17
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %77 to %"class.std::__1::basic_string"*
  call void @_ZN11spirv_cross8ParsedIR19sanitize_identifierERNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEbb(%"class.std::__1::basic_string"* dereferenceable(24) %78, i1 zeroext false, i1 zeroext false)
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %76, i64 40
  %80 = bitcast %"struct.std::__1::__hash_node_base"* %79 to %"struct.spirv_cross::Meta::Decoration"**
  %81 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %80, align 8
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %76, i64 41
  %83 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %81, i64 %84
  %86 = icmp eq i64 %84, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %91, %70
  %88 = inttoptr i64 %71 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %16, label %70

91:                                               ; preds = %70, %91
  %92 = phi %"struct.spirv_cross::Meta::Decoration"* [ %94, %91 ], [ %81, %70 ]
  %93 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %92, i64 0, i32 0
  call void @_ZN11spirv_cross8ParsedIR19sanitize_identifierERNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEbb(%"class.std::__1::basic_string"* dereferenceable(24) %93, i1 zeroext true, i1 zeroext false)
  %94 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %92, i64 1
  %95 = icmp eq %"struct.spirv_cross::Meta::Decoration"* %94, %85
  br i1 %95, label %87, label %91
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11spirv_cross8ParsedIR8set_nameENS_7TypedIDILNS_5TypesE0EEERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.spirv_cross::ParsedIR"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple.453", align 8
  %5 = alloca %"class.std::__1::tuple.450", align 1
  %6 = alloca %"class.spirv_cross::TypedID", align 4
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %6, i64 0, i32 0
  store i32 %1, i32* %8, align 4
  %9 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0
  %10 = bitcast %"class.std::__1::tuple.453"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #17
  %11 = getelementptr inbounds %"class.std::__1::tuple.453", %"class.std::__1::tuple.453"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.spirv_cross::TypedID"* %6, %"class.spirv_cross::TypedID"** %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::tuple.450", %"class.std::__1::tuple.450"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #17
  %13 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %9, %"class.spirv_cross::TypedID"* nonnull dereferenceable(4) %6, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.453"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.450"* nonnull dereferenceable(1) %5) #17
  %14 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %13, 0
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %14, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #17
  %16 = bitcast %"struct.std::__1::__hash_node_base"* %15 to %"class.std::__1::basic_string"*
  %17 = icmp eq %"class.std::__1::basic_string"* %16, %2
  br i1 %17, label %18, label %20

18:                                               ; preds = %3
  %19 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %49

20:                                               ; preds = %3
  %21 = bitcast %"struct.std::__1::__hash_node_base"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %24, label %39, label %29

29:                                               ; preds = %20
  br i1 %28, label %33, label %30

30:                                               ; preds = %29
  %31 = bitcast %"struct.std::__1::__hash_node_base"* %15 to i8*
  %32 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 24, i1 false) #17
  br label %49

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %16, i8* %35, i64 %37) #17
  br label %49

39:                                               ; preds = %20
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %45 = zext i8 %27 to i64
  %46 = select i1 %28, i8* %41, i8* %44
  %47 = select i1 %28, i64 %43, i64 %45
  %48 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %16, i8* %46, i64 %47) #17
  br label %49

49:                                               ; preds = %18, %30, %33, %39
  %50 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %19, %18 ], [ %25, %30 ], [ %25, %33 ], [ %25, %39 ]
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = zext i8 %52 to i64
  %57 = select i1 %53, i64 %55, i64 %56
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %97, label %59

59:                                               ; preds = %49
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %63 = select i1 %53, i8* %61, i8* %62
  %64 = load i8, i8* %63, align 1
  %65 = add i8 %64, -48
  %66 = icmp ult i8 %65, 10
  br i1 %66, label %99, label %67

67:                                               ; preds = %59
  %68 = getelementptr inbounds i8, i8* %63, i64 %57
  %69 = and i8 %64, -33
  %70 = add i8 %69, -65
  %71 = icmp ult i8 %70, 26
  %72 = icmp eq i8 %64, 95
  %73 = or i1 %72, %71
  br i1 %73, label %74, label %99

74:                                               ; preds = %67, %78
  %75 = phi i8* [ %76, %78 ], [ %63, %67 ]
  %76 = getelementptr inbounds i8, i8* %75, i64 1
  %77 = icmp eq i8* %76, %68
  br i1 %77, label %88, label %78

78:                                               ; preds = %74
  %79 = load i8, i8* %76, align 1
  %80 = and i8 %79, -33
  %81 = add i8 %80, -65
  %82 = icmp ult i8 %81, 26
  %83 = add i8 %79, -48
  %84 = icmp ult i8 %83, 10
  %85 = or i1 %84, %82
  %86 = icmp eq i8 %79, 95
  %87 = or i1 %86, %85
  br i1 %87, label %74, label %99

88:                                               ; preds = %74, %93
  %89 = phi i8* [ %91, %93 ], [ %63, %74 ]
  %90 = phi i1 [ %95, %93 ], [ %72, %74 ]
  %91 = getelementptr inbounds i8, i8* %89, i64 1
  %92 = icmp eq i8* %91, %68
  br i1 %92, label %97, label %93

93:                                               ; preds = %88
  %94 = load i8, i8* %91, align 1
  %95 = icmp eq i8 %94, 95
  %96 = and i1 %95, %90
  br i1 %96, label %99, label %88

97:                                               ; preds = %88, %49
  %98 = call fastcc zeroext i1 @_ZN11spirv_crossL22is_reserved_identifierERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEbb(%"class.std::__1::basic_string"* dereferenceable(24) %2, i1 zeroext false, i1 zeroext false)
  br i1 %98, label %99, label %104

99:                                               ; preds = %78, %93, %67, %59, %97
  %100 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %100) #17
  %101 = load i32, i32* %8, align 4
  store i32 %101, i32* %7, align 4
  %102 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 20, i32 0
  %103 = call { %"struct.std::__1::__hash_node_base.105"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.101"* %102, i32* nonnull dereferenceable(4) %7, i32* nonnull dereferenceable(4) %7) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %100) #17
  br label %104

104:                                              ; preds = %99, %97
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11spirv_cross8ParsedIR15set_member_nameENS_7TypedIDILNS_5TypesE1EEEjRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.spirv_cross::ParsedIR"*, i32, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple.450", align 1
  %7 = alloca %"class.std::__1::tuple", align 8
  %8 = alloca %"class.std::__1::tuple.450", align 1
  %9 = alloca %"class.spirv_cross::TypedID", align 4
  %10 = alloca %"class.spirv_cross::TypedID", align 4
  %11 = alloca i32, align 4
  %12 = bitcast %"class.spirv_cross::TypedID"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #17
  %13 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %9, i64 0, i32 0
  store i32 %1, i32* %13, align 4
  %14 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0
  %15 = bitcast %"class.std::__1::tuple"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #17
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.spirv_cross::TypedID"* %9, %"class.spirv_cross::TypedID"** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.450", %"class.std::__1::tuple.450"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #17
  %18 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %14, %"class.spirv_cross::TypedID"* nonnull dereferenceable(4) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.450"* nonnull dereferenceable(1) %8) #17
  %19 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %18, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #17
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %19, i64 40
  %21 = bitcast %"struct.std::__1::__hash_node_base"* %20 to %"class.spirv_cross::SmallVector.362"*
  %22 = bitcast %"class.spirv_cross::TypedID"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #17
  %23 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %10, i64 0, i32 0
  store i32 %1, i32* %23, align 4
  %24 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #17
  %25 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.spirv_cross::TypedID"* %10, %"class.spirv_cross::TypedID"** %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::tuple.450", %"class.std::__1::tuple.450"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %26) #17
  %27 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %14, %"class.spirv_cross::TypedID"* nonnull dereferenceable(4) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.450"* nonnull dereferenceable(1) %6) #17
  %28 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %27, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %26) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #17
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %28, i64 41
  %30 = bitcast %"struct.std::__1::__hash_node_base"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = zext i32 %2 to i64
  %33 = add nuw nsw i64 %32, 1
  %34 = icmp ult i64 %31, %33
  %35 = select i1 %34, i64 %33, i64 %31
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %19, i64 41
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp ugt i64 %38, %35
  br i1 %39, label %40, label %49

40:                                               ; preds = %4
  %41 = bitcast %"struct.std::__1::__hash_node_base"* %20 to %"struct.spirv_cross::Meta::Decoration"**
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi i64 [ %35, %40 ], [ %46, %42 ]
  %44 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %41, align 8
  %45 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %44, i64 %43
  call void @_ZN11spirv_cross4Meta10DecorationD2Ev(%"struct.spirv_cross::Meta::Decoration"* %45) #17
  %46 = add nuw i64 %43, 1
  %47 = load i64, i64* %37, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %42, label %76

49:                                               ; preds = %4
  %50 = icmp ult i64 %38, %35
  br i1 %50, label %51, label %76

51:                                               ; preds = %49
  call void @_ZN11spirv_cross11SmallVectorINS_4Meta10DecorationELm0EE7reserveEm(%"class.spirv_cross::SmallVector.362"* %21, i64 %35) #17
  %52 = load i64, i64* %37, align 8
  %53 = icmp ult i64 %52, %35
  br i1 %53, label %54, label %76

54:                                               ; preds = %51
  %55 = bitcast %"struct.std::__1::__hash_node_base"* %20 to %"struct.spirv_cross::Meta::Decoration"**
  br label %56

56:                                               ; preds = %56, %54
  %57 = phi i64 [ %52, %54 ], [ %74, %56 ]
  %58 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %55, align 8
  %59 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %58, i64 %57
  %60 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %58, i64 %57, i32 3, i32 1, i32 0, i32 3
  %61 = bitcast %"class.std::__1::__compressed_pair.120"* %60 to i32*
  %62 = bitcast %"struct.spirv_cross::Meta::Decoration"* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 296, i1 false) #17
  store i32 1065353216, i32* %61, align 4
  %63 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %58, i64 %57, i32 4
  store i32 2147483647, i32* %63, align 8
  %64 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %58, i64 %57, i32 5
  %65 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %58, i64 %57, i32 18
  %66 = bitcast i32* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %66, i8 0, i64 52, i1 false) #17
  store i32 2147483647, i32* %65, align 8
  %67 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %58, i64 %57, i32 19
  store i8 0, i8* %67, align 4
  %68 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %58, i64 %57, i32 20
  %69 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %58, i64 %57, i32 20, i32 0, i32 1, i32 0, i32 3
  %70 = bitcast %"class.std::__1::__compressed_pair.120"* %69 to i32*
  %71 = bitcast %"struct.spirv_cross::Meta::Decoration::Extended"* %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 40, i1 false) #17
  store i32 1065353216, i32* %70, align 4
  %72 = getelementptr %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %58, i64 %57, i32 20, i32 1, i64 0
  %73 = bitcast i32* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %73, i8 0, i64 64, i1 false) #17
  %74 = add nuw i64 %57, 1
  %75 = icmp eq i64 %74, %35
  br i1 %75, label %76, label %56

76:                                               ; preds = %56, %42, %49, %51
  store i64 %35, i64* %37, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #17
  %77 = bitcast %"struct.std::__1::__hash_node_base"* %20 to %"struct.spirv_cross::Meta::Decoration"**
  %78 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %77, align 8
  %79 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %78, i64 %32, i32 0
  %80 = icmp eq %"class.std::__1::basic_string"* %79, %3
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  %82 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %112

83:                                               ; preds = %76
  %84 = bitcast %"class.std::__1::basic_string"* %79 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  %88 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  %90 = load i8, i8* %89, align 1
  %91 = icmp slt i8 %90, 0
  br i1 %87, label %102, label %92

92:                                               ; preds = %83
  br i1 %91, label %96, label %93

93:                                               ; preds = %92
  %94 = bitcast %"class.std::__1::basic_string"* %79 to i8*
  %95 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 24, i1 false) #17
  br label %112

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %79, i8* %98, i64 %100) #17
  br label %112

102:                                              ; preds = %83
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load i8*, i8** %103, align 8
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %108 = zext i8 %90 to i64
  %109 = select i1 %91, i8* %104, i8* %107
  %110 = select i1 %91, i64 %106, i64 %108
  %111 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %79, i8* %109, i64 %110) #17
  br label %112

112:                                              ; preds = %81, %93, %96, %102
  %113 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %82, %81 ], [ %88, %93 ], [ %88, %96 ], [ %88, %102 ]
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  %115 = load i8, i8* %114, align 1
  %116 = icmp slt i8 %115, 0
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = zext i8 %115 to i64
  %120 = select i1 %116, i64 %118, i64 %119
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %160, label %122

122:                                              ; preds = %112
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  %125 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %126 = select i1 %116, i8* %124, i8* %125
  %127 = load i8, i8* %126, align 1
  %128 = add i8 %127, -48
  %129 = icmp ult i8 %128, 10
  br i1 %129, label %162, label %130

130:                                              ; preds = %122
  %131 = getelementptr inbounds i8, i8* %126, i64 %120
  %132 = and i8 %127, -33
  %133 = add i8 %132, -65
  %134 = icmp ult i8 %133, 26
  %135 = icmp eq i8 %127, 95
  %136 = or i1 %135, %134
  br i1 %136, label %137, label %162

137:                                              ; preds = %130, %141
  %138 = phi i8* [ %139, %141 ], [ %126, %130 ]
  %139 = getelementptr inbounds i8, i8* %138, i64 1
  %140 = icmp eq i8* %139, %131
  br i1 %140, label %151, label %141

141:                                              ; preds = %137
  %142 = load i8, i8* %139, align 1
  %143 = and i8 %142, -33
  %144 = add i8 %143, -65
  %145 = icmp ult i8 %144, 26
  %146 = add i8 %142, -48
  %147 = icmp ult i8 %146, 10
  %148 = or i1 %147, %145
  %149 = icmp eq i8 %142, 95
  %150 = or i1 %149, %148
  br i1 %150, label %137, label %162

151:                                              ; preds = %137, %156
  %152 = phi i8* [ %154, %156 ], [ %126, %137 ]
  %153 = phi i1 [ %158, %156 ], [ %135, %137 ]
  %154 = getelementptr inbounds i8, i8* %152, i64 1
  %155 = icmp eq i8* %154, %131
  br i1 %155, label %160, label %156

156:                                              ; preds = %151
  %157 = load i8, i8* %154, align 1
  %158 = icmp eq i8 %157, 95
  %159 = and i1 %158, %153
  br i1 %159, label %162, label %151

160:                                              ; preds = %151, %112
  %161 = call fastcc zeroext i1 @_ZN11spirv_crossL22is_reserved_identifierERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEbb(%"class.std::__1::basic_string"* dereferenceable(24) %3, i1 zeroext true, i1 zeroext false)
  br i1 %161, label %162, label %166

162:                                              ; preds = %141, %156, %130, %122, %160
  %163 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %163) #17
  store i32 %1, i32* %11, align 4
  %164 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 20, i32 0
  %165 = call { %"struct.std::__1::__hash_node_base.105"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.101"* %164, i32* nonnull dereferenceable(4) %11, i32* nonnull dereferenceable(4) %11) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %163) #17
  br label %166

166:                                              ; preds = %162, %160
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11spirv_cross8ParsedIR21set_decoration_stringENS_7TypedIDILNS_5TypesE0EEEN3spv10DecorationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.spirv_cross::ParsedIR"*, i32, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::tuple.453", align 8
  %7 = alloca %"class.std::__1::tuple.450", align 1
  %8 = alloca %"class.spirv_cross::TypedID", align 4
  %9 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %8, i64 0, i32 0
  store i32 %1, i32* %9, align 4
  %10 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0
  %11 = bitcast %"class.std::__1::tuple.453"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #17
  %12 = getelementptr inbounds %"class.std::__1::tuple.453", %"class.std::__1::tuple.453"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.spirv_cross::TypedID"* %8, %"class.spirv_cross::TypedID"** %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::tuple.450", %"class.std::__1::tuple.450"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #17
  %14 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %10, %"class.spirv_cross::TypedID"* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.453"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.450"* nonnull dereferenceable(1) %7) #17
  %15 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %14, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #17
  %16 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16)
  store i32 %2, i32* %5, align 4
  %17 = icmp ult i32 %2, 64
  br i1 %17, label %18, label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %15, i64 12
  %20 = zext i32 %2 to i64
  %21 = shl i64 1, %20
  %22 = bitcast %"struct.std::__1::__hash_node_base"* %19 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = or i64 %23, %21
  store i64 %24, i64* %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16)
  br label %63

25:                                               ; preds = %4
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %15, i64 13
  %27 = bitcast %"struct.std::__1::__hash_node_base"* %26 to %"class.std::__1::__hash_table.101"*
  %28 = call { %"struct.std::__1::__hash_node_base.105"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.101"* %27, i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %5) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16)
  %29 = icmp eq i32 %2, 5635
  br i1 %29, label %30, label %63

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %15, i64 9
  %32 = bitcast %"struct.std::__1::__hash_node_base"* %31 to %"class.std::__1::basic_string"*
  %33 = icmp eq %"class.std::__1::basic_string"* %32, %3
  br i1 %33, label %63, label %34

34:                                               ; preds = %30
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %38, label %53, label %43

43:                                               ; preds = %34
  br i1 %42, label %47, label %44

44:                                               ; preds = %43
  %45 = bitcast %"struct.std::__1::__hash_node_base"* %31 to i8*
  %46 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 24, i1 false) #17
  br label %63

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %32, i8* %49, i64 %51) #17
  br label %63

53:                                               ; preds = %34
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %59 = zext i8 %41 to i64
  %60 = select i1 %42, i8* %55, i8* %58
  %61 = select i1 %42, i64 %57, i64 %59
  %62 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %32, i8* %60, i64 %61) #17
  br label %63

63:                                               ; preds = %53, %47, %44, %30, %18, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11spirv_cross8ParsedIR14set_decorationENS_7TypedIDILNS_5TypesE0EEEN3spv10DecorationEj(%"class.spirv_cross::ParsedIR"*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple.450", align 1
  %7 = alloca %"class.std::__1::tuple.453", align 8
  %8 = alloca %"class.std::__1::tuple.450", align 1
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::__1::tuple.453", align 8
  %11 = alloca %"class.std::__1::tuple.450", align 1
  %12 = alloca %"class.spirv_cross::TypedID", align 4
  %13 = alloca %"class.spirv_cross::TypedID", align 4
  %14 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %12, i64 0, i32 0
  store i32 %1, i32* %14, align 4
  %15 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0
  %16 = bitcast %"class.std::__1::tuple.453"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.std::__1::tuple.453", %"class.std::__1::tuple.453"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.spirv_cross::TypedID"* %12, %"class.spirv_cross::TypedID"** %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::tuple.450", %"class.std::__1::tuple.450"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #17
  %19 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %15, %"class.spirv_cross::TypedID"* nonnull dereferenceable(4) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.453"* nonnull dereferenceable(8) %10, %"class.std::__1::tuple.450"* nonnull dereferenceable(1) %11) #17
  %20 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %19, 0
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 3
  %22 = bitcast %"struct.std::__1::__hash_node_base"* %21 to %"struct.spirv_cross::Meta"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  %23 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23)
  store i32 %2, i32* %9, align 4
  %24 = icmp ult i32 %2, 64
  br i1 %24, label %25, label %32

25:                                               ; preds = %4
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 12
  %27 = zext i32 %2 to i64
  %28 = shl i64 1, %27
  %29 = bitcast %"struct.std::__1::__hash_node_base"* %26 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = or i64 %30, %28
  store i64 %31, i64* %29, align 8
  br label %36

32:                                               ; preds = %4
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 13
  %34 = bitcast %"struct.std::__1::__hash_node_base"* %33 to %"class.std::__1::__hash_table.101"*
  %35 = call { %"struct.std::__1::__hash_node_base.105"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.101"* %34, i32* nonnull dereferenceable(4) %9, i32* nonnull dereferenceable(4) %9) #17
  br label %36

36:                                               ; preds = %25, %32
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23)
  switch i32 %2, label %94 [
    i32 11, label %37
    i32 30, label %41
    i32 31, label %43
    i32 35, label %46
    i32 36, label %48
    i32 37, label %51
    i32 29, label %53
    i32 6, label %56
    i32 7, label %58
    i32 33, label %61
    i32 34, label %64
    i32 43, label %66
    i32 1, label %68
    i32 32, label %71
    i32 5634, label %73
    i32 39, label %91
  ]

37:                                               ; preds = %36
  %38 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %22, i64 0, i32 0, i32 19
  store i8 1, i8* %38, align 4
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 18
  %40 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i32*
  store i32 %3, i32* %40, align 8
  br label %94

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %22, i64 0, i32 0, i32 5
  store i32 %3, i32* %42, align 4
  br label %94

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 19
  %45 = bitcast %"struct.std::__1::__hash_node_base"* %44 to i32*
  store i32 %3, i32* %45, align 8
  br label %94

46:                                               ; preds = %36
  %47 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %22, i64 0, i32 0, i32 9
  store i32 %3, i32* %47, align 4
  br label %94

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 21
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i32*
  store i32 %3, i32* %50, align 8
  br label %94

51:                                               ; preds = %36
  %52 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %22, i64 0, i32 0, i32 11
  store i32 %3, i32* %52, align 4
  br label %94

53:                                               ; preds = %36
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 22
  %55 = bitcast %"struct.std::__1::__hash_node_base"* %54 to i32*
  store i32 %3, i32* %55, align 8
  br label %94

56:                                               ; preds = %36
  %57 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %22, i64 0, i32 0, i32 13
  store i32 %3, i32* %57, align 4
  br label %94

58:                                               ; preds = %36
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 23
  %60 = bitcast %"struct.std::__1::__hash_node_base"* %59 to i32*
  store i32 %3, i32* %60, align 8
  br label %94

61:                                               ; preds = %36
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 20
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %62 to i32*
  store i32 %3, i32* %63, align 8
  br label %94

64:                                               ; preds = %36
  %65 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %22, i64 0, i32 0, i32 7
  store i32 %3, i32* %65, align 4
  br label %94

66:                                               ; preds = %36
  %67 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %22, i64 0, i32 0, i32 15
  store i32 %3, i32* %67, align 4
  br label %94

68:                                               ; preds = %36
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 24
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i32*
  store i32 %3, i32* %70, align 8
  br label %94

71:                                               ; preds = %36
  %72 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %22, i64 0, i32 0, i32 17
  store i32 %3, i32* %72, align 4
  br label %94

73:                                               ; preds = %36
  %74 = bitcast %"class.std::__1::tuple.453"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #17
  %75 = getelementptr inbounds %"class.std::__1::tuple.453", %"class.std::__1::tuple.453"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.spirv_cross::TypedID"* %12, %"class.spirv_cross::TypedID"** %75, align 8
  %76 = getelementptr inbounds %"class.std::__1::tuple.450", %"class.std::__1::tuple.450"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %76) #17
  %77 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %15, %"class.spirv_cross::TypedID"* nonnull dereferenceable(4) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.453"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.450"* nonnull dereferenceable(1) %8) #17
  %78 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %77, 0
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %78, i64 3
  %80 = bitcast %"struct.std::__1::__hash_node_base"* %79 to %"struct.spirv_cross::Meta"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %76) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #17
  %81 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %80, i64 0, i32 4
  store i32 %3, i32* %81, align 4
  %82 = bitcast %"class.spirv_cross::TypedID"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %82) #17
  %83 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %13, i64 0, i32 0
  store i32 %3, i32* %83, align 4
  %84 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #17
  %85 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.spirv_cross::TypedID"* %13, %"class.spirv_cross::TypedID"** %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::tuple.450", %"class.std::__1::tuple.450"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %86) #17
  %87 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %15, %"class.spirv_cross::TypedID"* nonnull dereferenceable(4) %13, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.450"* nonnull dereferenceable(1) %6) #17
  %88 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %87, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #17
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %88, i64 49
  %90 = bitcast %"struct.std::__1::__hash_node_base"* %89 to i8*
  store i8 1, i8* %90, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %82) #17
  br label %94

91:                                               ; preds = %36
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 25
  %93 = bitcast %"struct.std::__1::__hash_node_base"* %92 to i32*
  store i32 %3, i32* %93, align 8
  br label %94

94:                                               ; preds = %36, %91, %73, %71, %68, %66, %64, %61, %58, %56, %53, %51, %48, %46, %43, %41, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11spirv_cross8ParsedIR21set_member_decorationENS_7TypedIDILNS_5TypesE1EEEjN3spv10DecorationEj(%"class.spirv_cross::ParsedIR"*, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::tuple", align 8
  %7 = alloca %"class.std::__1::tuple.450", align 1
  %8 = alloca %"class.std::__1::tuple", align 8
  %9 = alloca %"class.std::__1::tuple.450", align 1
  %10 = alloca %"class.std::__1::tuple", align 8
  %11 = alloca %"class.std::__1::tuple.450", align 1
  %12 = alloca i32, align 4
  %13 = alloca %"class.spirv_cross::TypedID", align 4
  %14 = alloca %"class.spirv_cross::TypedID", align 4
  %15 = alloca %"class.spirv_cross::TypedID", align 4
  %16 = bitcast %"class.spirv_cross::TypedID"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %13, i64 0, i32 0
  store i32 %1, i32* %17, align 4
  %18 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0
  %19 = bitcast %"class.std::__1::tuple"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #17
  %20 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.spirv_cross::TypedID"* %13, %"class.spirv_cross::TypedID"** %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::tuple.450", %"class.std::__1::tuple.450"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %21) #17
  %22 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %18, %"class.spirv_cross::TypedID"* nonnull dereferenceable(4) %13, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %10, %"class.std::__1::tuple.450"* nonnull dereferenceable(1) %11) #17
  %23 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %22, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %21) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #17
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %23, i64 40
  %25 = bitcast %"struct.std::__1::__hash_node_base"* %24 to %"class.spirv_cross::SmallVector.362"*
  %26 = bitcast %"class.spirv_cross::TypedID"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #17
  %27 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %14, i64 0, i32 0
  store i32 %1, i32* %27, align 4
  %28 = bitcast %"class.std::__1::tuple"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  %29 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.spirv_cross::TypedID"* %14, %"class.spirv_cross::TypedID"** %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::tuple.450", %"class.std::__1::tuple.450"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %30) #17
  %31 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %18, %"class.spirv_cross::TypedID"* nonnull dereferenceable(4) %14, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.450"* nonnull dereferenceable(1) %7) #17
  %32 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %31, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %30) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 41
  %34 = bitcast %"struct.std::__1::__hash_node_base"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = zext i32 %2 to i64
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %35, %37
  %39 = select i1 %38, i64 %37, i64 %35
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %23, i64 41
  %41 = bitcast %"struct.std::__1::__hash_node_base"* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = icmp ugt i64 %42, %39
  br i1 %43, label %44, label %53

44:                                               ; preds = %5
  %45 = bitcast %"struct.std::__1::__hash_node_base"* %24 to %"struct.spirv_cross::Meta::Decoration"**
  br label %46

46:                                               ; preds = %46, %44
  %47 = phi i64 [ %39, %44 ], [ %50, %46 ]
  %48 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %45, align 8
  %49 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %48, i64 %47
  call void @_ZN11spirv_cross4Meta10DecorationD2Ev(%"struct.spirv_cross::Meta::Decoration"* %49) #17
  %50 = add nuw i64 %47, 1
  %51 = load i64, i64* %41, align 8
  %52 = icmp ult i64 %50, %51
  br i1 %52, label %46, label %80

53:                                               ; preds = %5
  %54 = icmp ult i64 %42, %39
  br i1 %54, label %55, label %80

55:                                               ; preds = %53
  call void @_ZN11spirv_cross11SmallVectorINS_4Meta10DecorationELm0EE7reserveEm(%"class.spirv_cross::SmallVector.362"* %25, i64 %39) #17
  %56 = load i64, i64* %41, align 8
  %57 = icmp ult i64 %56, %39
  br i1 %57, label %58, label %80

58:                                               ; preds = %55
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %24 to %"struct.spirv_cross::Meta::Decoration"**
  br label %60

60:                                               ; preds = %60, %58
  %61 = phi i64 [ %56, %58 ], [ %78, %60 ]
  %62 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %59, align 8
  %63 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %62, i64 %61
  %64 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %62, i64 %61, i32 3, i32 1, i32 0, i32 3
  %65 = bitcast %"class.std::__1::__compressed_pair.120"* %64 to i32*
  %66 = bitcast %"struct.spirv_cross::Meta::Decoration"* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 296, i1 false) #17
  store i32 1065353216, i32* %65, align 4
  %67 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %62, i64 %61, i32 4
  store i32 2147483647, i32* %67, align 8
  %68 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %62, i64 %61, i32 5
  %69 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %62, i64 %61, i32 18
  %70 = bitcast i32* %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %70, i8 0, i64 52, i1 false) #17
  store i32 2147483647, i32* %69, align 8
  %71 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %62, i64 %61, i32 19
  store i8 0, i8* %71, align 4
  %72 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %62, i64 %61, i32 20
  %73 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %62, i64 %61, i32 20, i32 0, i32 1, i32 0, i32 3
  %74 = bitcast %"class.std::__1::__compressed_pair.120"* %73 to i32*
  %75 = bitcast %"struct.spirv_cross::Meta::Decoration::Extended"* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 40, i1 false) #17
  store i32 1065353216, i32* %74, align 4
  %76 = getelementptr %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %62, i64 %61, i32 20, i32 1, i64 0
  %77 = bitcast i32* %76 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %77, i8 0, i64 64, i1 false) #17
  %78 = add nuw i64 %61, 1
  %79 = icmp eq i64 %78, %39
  br i1 %79, label %80, label %60

80:                                               ; preds = %60, %46, %53, %55
  store i64 %39, i64* %41, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #17
  %81 = bitcast %"class.spirv_cross::TypedID"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %81) #17
  %82 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %15, i64 0, i32 0
  store i32 %1, i32* %82, align 4
  %83 = bitcast %"class.std::__1::tuple"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #17
  %84 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.spirv_cross::TypedID"* %15, %"class.spirv_cross::TypedID"** %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::tuple.450", %"class.std::__1::tuple.450"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %85) #17
  %86 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %18, %"class.spirv_cross::TypedID"* nonnull dereferenceable(4) %15, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.450"* nonnull dereferenceable(1) %9) #17
  %87 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %86, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %85) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #17
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %87, i64 40
  %89 = bitcast %"struct.std::__1::__hash_node_base"* %88 to %"struct.spirv_cross::Meta::Decoration"**
  %90 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %89, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %81) #17
  %91 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91)
  store i32 %3, i32* %12, align 4
  %92 = icmp ult i32 %3, 64
  br i1 %92, label %93, label %99

93:                                               ; preds = %80
  %94 = zext i32 %3 to i64
  %95 = shl i64 1, %94
  %96 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %90, i64 %36, i32 3, i32 0
  %97 = load i64, i64* %96, align 8
  %98 = or i64 %97, %95
  store i64 %98, i64* %96, align 8
  br label %102

99:                                               ; preds = %80
  %100 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %90, i64 %36, i32 3, i32 1, i32 0
  %101 = call { %"struct.std::__1::__hash_node_base.105"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.101"* %100, i32* nonnull dereferenceable(4) %12, i32* nonnull dereferenceable(4) %12) #17
  br label %102

102:                                              ; preds = %93, %99
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91)
  switch i32 %3, label %126 [
    i32 11, label %103
    i32 30, label %106
    i32 31, label %108
    i32 33, label %110
    i32 35, label %112
    i32 36, label %114
    i32 37, label %116
    i32 29, label %118
    i32 1, label %120
    i32 7, label %122
    i32 32, label %124
  ]

103:                                              ; preds = %102
  %104 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %90, i64 %36, i32 19
  store i8 1, i8* %104, align 4
  %105 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %90, i64 %36, i32 4
  store i32 %4, i32* %105, align 8
  br label %126

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %90, i64 %36, i32 5
  store i32 %4, i32* %107, align 4
  br label %126

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %90, i64 %36, i32 6
  store i32 %4, i32* %109, align 8
  br label %126

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %90, i64 %36, i32 8
  store i32 %4, i32* %111, align 8
  br label %126

112:                                              ; preds = %102
  %113 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %90, i64 %36, i32 9
  store i32 %4, i32* %113, align 4
  br label %126

114:                                              ; preds = %102
  %115 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %90, i64 %36, i32 10
  store i32 %4, i32* %115, align 8
  br label %126

116:                                              ; preds = %102
  %117 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %90, i64 %36, i32 11
  store i32 %4, i32* %117, align 4
  br label %126

118:                                              ; preds = %102
  %119 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %90, i64 %36, i32 12
  store i32 %4, i32* %119, align 8
  br label %126

120:                                              ; preds = %102
  %121 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %90, i64 %36, i32 16
  store i32 %4, i32* %121, align 8
  br label %126

122:                                              ; preds = %102
  %123 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %90, i64 %36, i32 14
  store i32 %4, i32* %123, align 8
  br label %126

124:                                              ; preds = %102
  %125 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %90, i64 %36, i32 17
  store i32 %4, i32* %125, align 4
  br label %126

126:                                              ; preds = %102, %124, %122, %120, %118, %116, %114, %112, %110, %108, %106, %103
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11spirv_cross8ParsedIR25mark_used_as_array_lengthENS_7TypedIDILNS_5TypesE0EEE(%"class.spirv_cross::ParsedIR"* readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.spirv_cross::Variant"*, %"class.spirv_cross::Variant"** %6, align 8
  %8 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %7, i64 %5, i32 2
  %9 = load i32, i32* %8, align 8
  switch i32 %9, label %56 [
    i32 3, label %10
    i32 9, label %19
  ]

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %7, i64 %5, i32 1
  %12 = load %"struct.spirv_cross::IVariant"*, %"struct.spirv_cross::IVariant"** %11, align 8
  %13 = icmp eq %"struct.spirv_cross::IVariant"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  %15 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #17
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0)) #17
  call void @_ZN11spirv_cross16report_and_abortERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #19
  unreachable

16:                                               ; preds = %10
  %17 = bitcast %"struct.spirv_cross::IVariant"* %12 to %"struct.spirv_cross::SPIRConstant"*
  %18 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %17, i64 0, i32 4
  store i8 1, i8* %18, align 1
  br label %56

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %7, i64 %5, i32 1
  %21 = load %"struct.spirv_cross::IVariant"*, %"struct.spirv_cross::IVariant"** %20, align 8
  %22 = icmp eq %"struct.spirv_cross::IVariant"* %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #17
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0)) #17
  call void @_ZN11spirv_cross16report_and_abortERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #19
  unreachable

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"struct.spirv_cross::IVariant", %"struct.spirv_cross::IVariant"* %21, i64 0, i32 2
  %27 = bitcast [4 x i8]* %26 to i32*
  %28 = load i32, i32* %27, align 4
  switch i32 %28, label %42 [
    i32 81, label %29
    i32 82, label %34
  ]

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"struct.spirv_cross::IVariant", %"struct.spirv_cross::IVariant"* %21, i64 1
  %31 = bitcast %"struct.spirv_cross::IVariant"* %30 to i32**
  %32 = load i32*, i32** %31, align 8
  %33 = load i32, i32* %32, align 4
  tail call void @_ZN11spirv_cross8ParsedIR25mark_used_as_array_lengthENS_7TypedIDILNS_5TypesE0EEE(%"class.spirv_cross::ParsedIR"* %0, i32 %33)
  br label %56

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"struct.spirv_cross::IVariant", %"struct.spirv_cross::IVariant"* %21, i64 1
  %36 = bitcast %"struct.spirv_cross::IVariant"* %35 to i32**
  %37 = load i32*, i32** %36, align 8
  %38 = load i32, i32* %37, align 4
  tail call void @_ZN11spirv_cross8ParsedIR25mark_used_as_array_lengthENS_7TypedIDILNS_5TypesE0EEE(%"class.spirv_cross::ParsedIR"* %0, i32 %38)
  %39 = load i32*, i32** %36, align 8
  %40 = getelementptr inbounds i32, i32* %39, i64 1
  %41 = load i32, i32* %40, align 4
  tail call void @_ZN11spirv_cross8ParsedIR25mark_used_as_array_lengthENS_7TypedIDILNS_5TypesE0EEE(%"class.spirv_cross::ParsedIR"* %0, i32 %41)
  br label %56

42:                                               ; preds = %25
  %43 = getelementptr inbounds %"struct.spirv_cross::IVariant", %"struct.spirv_cross::IVariant"* %21, i64 1
  %44 = bitcast %"struct.spirv_cross::IVariant"* %43 to i32**
  %45 = load i32*, i32** %44, align 8
  %46 = getelementptr inbounds %"struct.spirv_cross::IVariant", %"struct.spirv_cross::IVariant"* %21, i64 1, i32 1
  %47 = bitcast %"class.spirv_cross::TypedID"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds i32, i32* %45, i64 %48
  %50 = icmp eq i64 %48, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %42, %51
  %52 = phi i32* [ %54, %51 ], [ %45, %42 ]
  %53 = load i32, i32* %52, align 4
  tail call void @_ZN11spirv_cross8ParsedIR25mark_used_as_array_lengthENS_7TypedIDILNS_5TypesE0EEE(%"class.spirv_cross::ParsedIR"* %0, i32 %53)
  %54 = getelementptr inbounds i32, i32* %52, i64 1
  %55 = icmp eq i32* %54, %49
  br i1 %55, label %56, label %51

56:                                               ; preds = %51, %42, %29, %34, %2, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11spirv_cross8ParsedIR27get_buffer_block_type_flagsERKNS_8SPIRTypeE(%"class.spirv_cross::Bitset"* noalias sret, %"class.spirv_cross::ParsedIR"*, %"struct.spirv_cross::SPIRType"* nocapture readonly dereferenceable(320)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.spirv_cross::Bitset", align 16
  %5 = getelementptr inbounds %"struct.spirv_cross::SPIRType", %"struct.spirv_cross::SPIRType"* %2, i64 0, i32 11, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %0, i64 0, i32 1, i32 0, i32 3
  %10 = bitcast %"class.std::__1::__compressed_pair.120"* %9 to i32*
  %11 = bitcast %"class.spirv_cross::Bitset"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 48, i1 false)
  store i32 1065353216, i32* %10, align 8
  br label %246

12:                                               ; preds = %3
  %13 = bitcast %"class.spirv_cross::Bitset"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #17
  %14 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %4, i64 0, i32 0
  %15 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %4, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %18 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %4, i64 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %19 = bitcast %"class.spirv_cross::Bitset"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 -86, i64 40, i1 false)
  store float 0xFFFFFFFFE0000000, float* %18, align 8
  %20 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %4, i64 0, i32 1, i32 0, i32 4, i64 0
  %21 = getelementptr inbounds %"struct.spirv_cross::SPIRType", %"struct.spirv_cross::SPIRType"* %2, i64 0, i32 0, i32 1, i32 0
  %22 = bitcast i8* %20 to i32*
  store i32 -1431655766, i32* %22, align 4
  %23 = load i32, i32* %21, align 4
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %88, label %28

28:                                               ; preds = %12
  %29 = tail call i64 @llvm.ctpop.i64(i64 %26) #17, !range !5
  %30 = icmp ugt i64 %29, 1
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  %32 = add i64 %26, 4294967295
  %33 = and i64 %32, %24
  br label %38

34:                                               ; preds = %28
  %35 = icmp ugt i64 %26, %24
  br i1 %35, label %38, label %36

36:                                               ; preds = %34
  %37 = urem i64 %24, %26
  br label %38

38:                                               ; preds = %36, %34, %31
  %39 = phi i64 [ %33, %31 ], [ %37, %36 ], [ %24, %34 ]
  %40 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %40, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %41, i64 %39
  %43 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base"* %43, null
  br i1 %44, label %88, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %43, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base"* %47, null
  br i1 %48, label %88, label %49

49:                                               ; preds = %45
  %50 = add i64 %26, -1
  br label %51

51:                                               ; preds = %72, %49
  %52 = phi %"struct.std::__1::__hash_node_base"* [ %47, %49 ], [ %74, %72 ]
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %52, i64 1
  %54 = bitcast %"struct.std::__1::__hash_node_base"* %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %55, %24
  br i1 %56, label %67, label %57

57:                                               ; preds = %51
  br i1 %30, label %60, label %58

58:                                               ; preds = %57
  %59 = and i64 %55, %50
  br label %64

60:                                               ; preds = %57
  %61 = icmp ult i64 %55, %26
  br i1 %61, label %64, label %62

62:                                               ; preds = %60
  %63 = urem i64 %55, %26
  br label %64

64:                                               ; preds = %62, %60, %58
  %65 = phi i64 [ %59, %58 ], [ %63, %62 ], [ %55, %60 ]
  %66 = icmp eq i64 %65, %39
  br i1 %66, label %72, label %88

67:                                               ; preds = %51
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %52, i64 2
  %69 = bitcast %"struct.std::__1::__hash_node_base"* %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, %23
  br i1 %71, label %76, label %72

72:                                               ; preds = %67, %64
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %52, i64 0, i32 0
  %74 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node_base"* %74, null
  br i1 %75, label %88, label %51

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %52, i64 41
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 19
  br label %90

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %52, i64 40
  %85 = bitcast %"struct.std::__1::__hash_node_base"* %84 to %"struct.spirv_cross::Meta::Decoration"**
  %86 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %85, align 8
  %87 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %86, i64 0, i32 3
  br label %90

88:                                               ; preds = %72, %64, %45, %38, %12
  %89 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 19
  br label %90

90:                                               ; preds = %81, %83, %88
  %91 = phi %"class.spirv_cross::Bitset"* [ %82, %81 ], [ %87, %83 ], [ %89, %88 ]
  %92 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %91, i64 0, i32 0
  %93 = load i64, i64* %92, align 8
  store i64 %93, i64* %14, align 16
  %94 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %4, i64 0, i32 1
  %95 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %94, i64 0, i32 0
  %96 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %4, i64 0, i32 1, i32 0, i32 3
  %97 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %91, i64 0, i32 1, i32 0, i32 3
  %98 = bitcast %"class.std::__1::__compressed_pair.120"* %97 to i32*
  %99 = bitcast %"class.std::__1::__compressed_pair.120"* %96 to i32*
  %100 = bitcast %"class.std::__1::unordered_set"* %94 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 32, i1 false) #17
  %101 = load i32, i32* %98, align 8
  store i32 %101, i32* %99, align 8
  %102 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %91, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %103 = load i64, i64* %102, align 8
  call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.101"* %95, i64 %103) #17
  %104 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %91, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base.105"* %105, null
  br i1 %106, label %117, label %107

107:                                              ; preds = %90
  %108 = ptrtoint %"struct.std::__1::__hash_node_base.105"* %105 to i64
  br label %109

109:                                              ; preds = %109, %107
  %110 = phi i64 [ %108, %107 ], [ %115, %109 ]
  %111 = inttoptr i64 %110 to %"struct.std::__1::__hash_node"*
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %111, i64 0, i32 2
  %113 = call { %"struct.std::__1::__hash_node_base.105"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.101"* %95, i32* dereferenceable(4) %112, i32* dereferenceable(4) %112) #17
  %114 = inttoptr i64 %110 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %109

117:                                              ; preds = %109, %90
  %118 = load i64, i64* %5, align 8
  %119 = trunc i64 %118 to i32
  %120 = icmp ugt i32 %119, 1
  br i1 %120, label %121, label %124

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 19
  br label %177

124:                                              ; preds = %240, %117
  %125 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = bitcast %"class.spirv_cross::Bitset"* %4 to <2 x i64>*
  %127 = load <2 x i64>, <2 x i64>* %126, align 16
  store %"struct.std::__1::__hash_node_base.105"** null, %"struct.std::__1::__hash_node_base.105"*** %125, align 8
  %128 = bitcast %"class.spirv_cross::Bitset"* %0 to <2 x i64>*
  store <2 x i64> %127, <2 x i64>* %128, align 8
  %129 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %130 = load i64, i64* %16, align 8
  store i64 %130, i64* %129, align 8
  store i64 0, i64* %16, align 8
  %131 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %0, i64 0, i32 1, i32 0, i32 1
  %132 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %4, i64 0, i32 1, i32 0, i32 1
  %133 = bitcast %"class.std::__1::__compressed_pair.112"* %132 to i64*
  %134 = bitcast %"class.std::__1::__compressed_pair.112"* %131 to i64*
  %135 = load i64, i64* %133, align 8
  store i64 %135, i64* %134, align 8
  %136 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %137 = load i64, i64* %17, align 8
  store i64 %137, i64* %136, align 8
  %138 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %0, i64 0, i32 1, i32 0, i32 3
  %139 = bitcast %"class.std::__1::__compressed_pair.120"* %138 to i32*
  %140 = load i32, i32* %99, align 8
  store i32 %140, i32* %139, align 8
  %141 = icmp eq i64 %137, 0
  %142 = extractelement <2 x i64> %127, i32 1
  %143 = inttoptr i64 %142 to %"struct.std::__1::__hash_node_base.105"**
  %144 = inttoptr i64 %135 to %"struct.std::__1::__hash_node_base.105"*
  br i1 %141, label %163, label %145

145:                                              ; preds = %124
  %146 = getelementptr inbounds %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.112"* %131, i64 0, i32 0, i32 0
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %144, i64 1
  %148 = bitcast %"struct.std::__1::__hash_node_base.105"* %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = call i64 @llvm.ctpop.i64(i64 %130) #17, !range !5
  %151 = icmp ugt i64 %150, 1
  br i1 %151, label %155, label %152

152:                                              ; preds = %145
  %153 = add i64 %130, -1
  %154 = and i64 %149, %153
  br label %159

155:                                              ; preds = %145
  %156 = icmp ult i64 %149, %130
  br i1 %156, label %159, label %157

157:                                              ; preds = %155
  %158 = urem i64 %149, %130
  br label %159

159:                                              ; preds = %152, %155, %157
  %160 = phi i64 [ %154, %152 ], [ %158, %157 ], [ %149, %155 ]
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %143, i64 %160
  store %"struct.std::__1::__hash_node_base.105"* %146, %"struct.std::__1::__hash_node_base.105"** %161, align 8
  %162 = bitcast %"class.std::__1::__compressed_pair.112"* %132 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %162, i8 0, i64 16, i1 false) #17
  br label %171

163:                                              ; preds = %124
  %164 = icmp eq i64 %135, 0
  br i1 %164, label %171, label %165

165:                                              ; preds = %163, %165
  %166 = phi %"struct.std::__1::__hash_node_base.105"* [ %168, %165 ], [ %144, %163 ]
  %167 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %166, i64 0, i32 0
  %168 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %167, align 8
  %169 = bitcast %"struct.std::__1::__hash_node_base.105"* %166 to i8*
  call void @_ZdlPv(i8* %169) #18
  %170 = icmp eq %"struct.std::__1::__hash_node_base.105"* %168, null
  br i1 %170, label %171, label %165

171:                                              ; preds = %165, %159, %163
  %172 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %15, align 8
  store %"struct.std::__1::__hash_node_base.105"** null, %"struct.std::__1::__hash_node_base.105"*** %15, align 8
  %173 = icmp eq %"struct.std::__1::__hash_node_base.105"** %172, null
  br i1 %173, label %176, label %174

174:                                              ; preds = %171
  %175 = bitcast %"struct.std::__1::__hash_node_base.105"** %172 to i8*
  call void @_ZdlPv(i8* %175) #18
  br label %176

176:                                              ; preds = %171, %174
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #17
  br label %246

177:                                              ; preds = %121, %240
  %178 = phi i64 [ 1, %121 ], [ %242, %240 ]
  %179 = load i32, i32* %21, align 4
  %180 = zext i32 %179 to i64
  %181 = load i64, i64* %25, align 8
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %240, label %183

183:                                              ; preds = %177
  %184 = call i64 @llvm.ctpop.i64(i64 %181) #17, !range !5
  %185 = icmp ugt i64 %184, 1
  br i1 %185, label %189, label %186

186:                                              ; preds = %183
  %187 = add i64 %181, 4294967295
  %188 = and i64 %187, %180
  br label %193

189:                                              ; preds = %183
  %190 = icmp ugt i64 %181, %180
  br i1 %190, label %193, label %191

191:                                              ; preds = %189
  %192 = urem i64 %180, %181
  br label %193

193:                                              ; preds = %191, %189, %186
  %194 = phi i64 [ %188, %186 ], [ %192, %191 ], [ %180, %189 ]
  %195 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %122, align 8
  %196 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %195, i64 %194
  %197 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %196, align 8
  %198 = icmp eq %"struct.std::__1::__hash_node_base"* %197, null
  br i1 %198, label %240, label %199

199:                                              ; preds = %193
  %200 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %197, i64 0, i32 0
  %201 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %200, align 8
  %202 = icmp eq %"struct.std::__1::__hash_node_base"* %201, null
  br i1 %202, label %240, label %203

203:                                              ; preds = %199
  %204 = add i64 %181, -1
  br label %205

205:                                              ; preds = %226, %203
  %206 = phi %"struct.std::__1::__hash_node_base"* [ %201, %203 ], [ %228, %226 ]
  %207 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %206, i64 1
  %208 = bitcast %"struct.std::__1::__hash_node_base"* %207 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = icmp eq i64 %209, %180
  br i1 %210, label %221, label %211

211:                                              ; preds = %205
  br i1 %185, label %214, label %212

212:                                              ; preds = %211
  %213 = and i64 %209, %204
  br label %218

214:                                              ; preds = %211
  %215 = icmp ult i64 %209, %181
  br i1 %215, label %218, label %216

216:                                              ; preds = %214
  %217 = urem i64 %209, %181
  br label %218

218:                                              ; preds = %216, %214, %212
  %219 = phi i64 [ %213, %212 ], [ %217, %216 ], [ %209, %214 ]
  %220 = icmp eq i64 %219, %194
  br i1 %220, label %226, label %240

221:                                              ; preds = %205
  %222 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %206, i64 2
  %223 = bitcast %"struct.std::__1::__hash_node_base"* %222 to i32*
  %224 = load i32, i32* %223, align 4
  %225 = icmp eq i32 %224, %179
  br i1 %225, label %230, label %226

226:                                              ; preds = %221, %218
  %227 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %206, i64 0, i32 0
  %228 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %227, align 8
  %229 = icmp eq %"struct.std::__1::__hash_node_base"* %228, null
  br i1 %229, label %240, label %205

230:                                              ; preds = %221
  %231 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %206, i64 41
  %232 = bitcast %"struct.std::__1::__hash_node_base"* %231 to i64*
  %233 = load i64, i64* %232, align 8
  %234 = icmp ugt i64 %233, %178
  br i1 %234, label %235, label %240

235:                                              ; preds = %230
  %236 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %206, i64 40
  %237 = bitcast %"struct.std::__1::__hash_node_base"* %236 to %"struct.spirv_cross::Meta::Decoration"**
  %238 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %237, align 8
  %239 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %238, i64 %178, i32 3
  br label %240

240:                                              ; preds = %218, %226, %177, %193, %199, %230, %235
  %241 = phi %"class.spirv_cross::Bitset"* [ %239, %235 ], [ %123, %230 ], [ %123, %199 ], [ %123, %193 ], [ %123, %177 ], [ %123, %226 ], [ %123, %218 ]
  call void @_ZN11spirv_cross6Bitset9merge_andERKS0_(%"class.spirv_cross::Bitset"* nonnull %4, %"class.spirv_cross::Bitset"* dereferenceable(48) %241)
  %242 = add nuw nsw i64 %178, 1
  %243 = load i64, i64* %5, align 8
  %244 = and i64 %243, 4294967295
  %245 = icmp ult i64 %242, %244
  br i1 %245, label %177, label %124

246:                                              ; preds = %176, %8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden dereferenceable(48) %"class.spirv_cross::Bitset"* @_ZNK11spirv_cross8ParsedIR28get_member_decoration_bitsetENS_7TypedIDILNS_5TypesE1EEEj(%"class.spirv_cross::ParsedIR"* readonly, i32, i32) local_unnamed_addr #4 align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %72, label %8

8:                                                ; preds = %3
  %9 = tail call i64 @llvm.ctpop.i64(i64 %6) #17, !range !5
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = add i64 %6, 4294967295
  %13 = and i64 %12, %4
  br label %18

14:                                               ; preds = %8
  %15 = icmp ugt i64 %6, %4
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %4, %6
  br label %18

18:                                               ; preds = %16, %14, %11
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %4, %14 ]
  %20 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base"* %23, null
  br i1 %24, label %72, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %23, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, null
  br i1 %28, label %72, label %29

29:                                               ; preds = %25
  %30 = add i64 %6, -1
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi %"struct.std::__1::__hash_node_base"* [ %27, %29 ], [ %54, %52 ]
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 1
  %34 = bitcast %"struct.std::__1::__hash_node_base"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %4
  br i1 %36, label %47, label %37

37:                                               ; preds = %31
  br i1 %10, label %40, label %38

38:                                               ; preds = %37
  %39 = and i64 %35, %30
  br label %44

40:                                               ; preds = %37
  %41 = icmp ult i64 %35, %6
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %35, %6
  br label %44

44:                                               ; preds = %42, %40, %38
  %45 = phi i64 [ %39, %38 ], [ %43, %42 ], [ %35, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %52, label %72

47:                                               ; preds = %31
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 2
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, %1
  br i1 %51, label %56, label %52

52:                                               ; preds = %47, %44
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base"* %54, null
  br i1 %55, label %72, label %31

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 3
  %58 = icmp eq %"struct.std::__1::__hash_node_base"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %56
  %60 = zext i32 %2 to i64
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 41
  %62 = bitcast %"struct.std::__1::__hash_node_base"* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = icmp ugt i64 %63, %60
  br i1 %64, label %67, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 19
  br label %74

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 40
  %69 = bitcast %"struct.std::__1::__hash_node_base"* %68 to %"struct.spirv_cross::Meta::Decoration"**
  %70 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %69, align 8
  %71 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %70, i64 %60, i32 3
  br label %74

72:                                               ; preds = %52, %44, %25, %3, %18, %56
  %73 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 19
  br label %74

74:                                               ; preds = %72, %67, %65
  %75 = phi %"class.spirv_cross::Bitset"* [ %66, %65 ], [ %71, %67 ], [ %73, %72 ]
  ret %"class.spirv_cross::Bitset"* %75
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross6Bitset9merge_andERKS0_(%"class.spirv_cross::Bitset"*, %"class.spirv_cross::Bitset"* dereferenceable(48)) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::__1::unordered_set", align 8
  %4 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %1, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %0, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, %5
  store i64 %8, i64* %6, align 8
  %9 = bitcast %"class.std::__1::unordered_set"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %3, i64 0, i32 0, i32 4, i64 0
  %13 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %3, i64 0, i32 0, i32 3
  %14 = bitcast %"class.std::__1::__compressed_pair.120"* %13 to i32*
  %15 = bitcast i8* %12 to i32*
  store i32 -1431655766, i32* %15, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 32, i1 false) #17
  store i32 1065353216, i32* %14, align 8
  %16 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = bitcast %"struct.std::__1::__hash_node_base.105"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %3, i64 0, i32 0
  br label %41

24:                                               ; preds = %98, %2
  %25 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %3, i64 0, i32 0
  %26 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %0, i64 0, i32 1, i32 0
  call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE13__move_assignERS7_NS_17integral_constantIbLb1EEE(%"class.std::__1::__hash_table.101"* %26, %"class.std::__1::__hash_table.101"* nonnull dereferenceable(40) %25) #17
  %27 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %11, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.105"* %27, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %24, %29
  %30 = phi %"struct.std::__1::__hash_node_base.105"* [ %32, %29 ], [ %27, %24 ]
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %30, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %31, align 8
  %33 = bitcast %"struct.std::__1::__hash_node_base.105"* %30 to i8*
  call void @_ZdlPv(i8* %33) #18
  %34 = icmp eq %"struct.std::__1::__hash_node_base.105"* %32, null
  br i1 %34, label %35, label %29

35:                                               ; preds = %29, %24
  %36 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %10, align 8
  store %"struct.std::__1::__hash_node_base.105"** null, %"struct.std::__1::__hash_node_base.105"*** %10, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.105"** %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = bitcast %"struct.std::__1::__hash_node_base.105"** %36 to i8*
  call void @_ZdlPv(i8* %39) #18
  br label %40

40:                                               ; preds = %35, %38
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #17
  ret void

41:                                               ; preds = %20, %98
  %42 = phi i64 [ %18, %20 ], [ %100, %98 ]
  %43 = inttoptr i64 %42 to %"struct.std::__1::__hash_node"*
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %43, i64 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = load i64, i64* %21, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %98, label %49

49:                                               ; preds = %41
  %50 = call i64 @llvm.ctpop.i64(i64 %47) #17, !range !5
  %51 = icmp ugt i64 %50, 1
  br i1 %51, label %55, label %52

52:                                               ; preds = %49
  %53 = add i64 %47, 4294967295
  %54 = and i64 %53, %46
  br label %59

55:                                               ; preds = %49
  %56 = icmp ugt i64 %47, %46
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = urem i64 %46, %47
  br label %59

59:                                               ; preds = %57, %55, %52
  %60 = phi i64 [ %54, %52 ], [ %58, %57 ], [ %46, %55 ]
  %61 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %22, align 8
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %61, i64 %60
  %63 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base.105"* %63, null
  br i1 %64, label %98, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %63, i64 0, i32 0
  %67 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %66, align 8
  %68 = icmp eq %"struct.std::__1::__hash_node_base.105"* %67, null
  br i1 %68, label %98, label %69

69:                                               ; preds = %65
  %70 = add i64 %47, -1
  br label %71

71:                                               ; preds = %92, %69
  %72 = phi %"struct.std::__1::__hash_node_base.105"* [ %67, %69 ], [ %94, %92 ]
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %72, i64 1
  %74 = bitcast %"struct.std::__1::__hash_node_base.105"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = icmp eq i64 %75, %46
  br i1 %76, label %87, label %77

77:                                               ; preds = %71
  br i1 %51, label %80, label %78

78:                                               ; preds = %77
  %79 = and i64 %75, %70
  br label %84

80:                                               ; preds = %77
  %81 = icmp ult i64 %75, %47
  br i1 %81, label %84, label %82

82:                                               ; preds = %80
  %83 = urem i64 %75, %47
  br label %84

84:                                               ; preds = %82, %80, %78
  %85 = phi i64 [ %79, %78 ], [ %83, %82 ], [ %75, %80 ]
  %86 = icmp eq i64 %85, %60
  br i1 %86, label %92, label %98

87:                                               ; preds = %71
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %72, i64 2
  %89 = bitcast %"struct.std::__1::__hash_node_base.105"* %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, %45
  br i1 %91, label %96, label %92

92:                                               ; preds = %87, %84
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %72, i64 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %93, align 8
  %95 = icmp eq %"struct.std::__1::__hash_node_base.105"* %94, null
  br i1 %95, label %98, label %71

96:                                               ; preds = %87
  %97 = call { %"struct.std::__1::__hash_node_base.105"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.101"* nonnull %23, i32* dereferenceable(4) %44, i32* dereferenceable(4) %44) #17
  br label %98

98:                                               ; preds = %84, %92, %65, %41, %59, %96
  %99 = inttoptr i64 %42 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %24, label %41
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11spirv_cross8ParsedIR22get_buffer_block_flagsERKNS_12SPIRVariableE(%"class.spirv_cross::Bitset"* noalias sret, %"class.spirv_cross::ParsedIR"*, %"struct.spirv_cross::SPIRVariable"* nocapture readonly dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.spirv_cross::Bitset", align 8
  %7 = getelementptr inbounds %"struct.spirv_cross::SPIRVariable", %"struct.spirv_cross::SPIRVariable"* %2, i64 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.spirv_cross::Variant"*, %"class.spirv_cross::Variant"** %10, align 8
  %12 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %11, i64 %9, i32 1
  %13 = load %"struct.spirv_cross::IVariant"*, %"struct.spirv_cross::IVariant"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::IVariant"* %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %3
  %16 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #17
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0)) #17
  call void @_ZN11spirv_cross16report_and_abortERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #19
  unreachable

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %11, i64 %9, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #17
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0)) #17
  call void @_ZN11spirv_cross16report_and_abortERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #19
  unreachable

23:                                               ; preds = %17
  %24 = bitcast %"struct.spirv_cross::IVariant"* %13 to %"struct.spirv_cross::SPIRType"*
  %25 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %0, i64 0, i32 0
  %26 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %0, i64 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %27 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %0, i64 0, i32 1, i32 0, i32 4, i64 0
  %28 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %0, i64 0, i32 1, i32 0, i32 3
  %29 = bitcast %"class.std::__1::__compressed_pair.120"* %28 to i32*
  %30 = bitcast %"class.spirv_cross::Bitset"* %0 to i8*
  %31 = bitcast i8* %27 to i32*
  store i32 -1431655766, i32* %31, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 40, i1 false) #17
  store i32 1065353216, i32* %29, align 8
  %32 = getelementptr inbounds %"struct.spirv_cross::SPIRVariable", %"struct.spirv_cross::SPIRVariable"* %2, i64 0, i32 0, i32 1, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %104, label %38

38:                                               ; preds = %23
  %39 = tail call i64 @llvm.ctpop.i64(i64 %36) #17, !range !5
  %40 = icmp ugt i64 %39, 1
  br i1 %40, label %44, label %41

41:                                               ; preds = %38
  %42 = add i64 %36, 4294967295
  %43 = and i64 %42, %34
  br label %48

44:                                               ; preds = %38
  %45 = icmp ugt i64 %36, %34
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = urem i64 %34, %36
  br label %48

48:                                               ; preds = %46, %44, %41
  %49 = phi i64 [ %43, %41 ], [ %47, %46 ], [ %34, %44 ]
  %50 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %50, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %51, i64 %49
  %53 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base"* %53, null
  br i1 %54, label %104, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base"* %57, null
  br i1 %58, label %104, label %59

59:                                               ; preds = %55
  %60 = add i64 %36, -1
  br label %61

61:                                               ; preds = %82, %59
  %62 = phi %"struct.std::__1::__hash_node_base"* [ %57, %59 ], [ %84, %82 ]
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %62, i64 1
  %64 = bitcast %"struct.std::__1::__hash_node_base"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %65, %34
  br i1 %66, label %77, label %67

67:                                               ; preds = %61
  br i1 %40, label %70, label %68

68:                                               ; preds = %67
  %69 = and i64 %65, %60
  br label %74

70:                                               ; preds = %67
  %71 = icmp ult i64 %65, %36
  br i1 %71, label %74, label %72

72:                                               ; preds = %70
  %73 = urem i64 %65, %36
  br label %74

74:                                               ; preds = %72, %70, %68
  %75 = phi i64 [ %69, %68 ], [ %73, %72 ], [ %65, %70 ]
  %76 = icmp eq i64 %75, %49
  br i1 %76, label %82, label %104

77:                                               ; preds = %61
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %62, i64 2
  %79 = bitcast %"struct.std::__1::__hash_node_base"* %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, %33
  br i1 %81, label %86, label %82

82:                                               ; preds = %77, %74
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %62, i64 0, i32 0
  %84 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %83, align 8
  %85 = icmp eq %"struct.std::__1::__hash_node_base"* %84, null
  br i1 %85, label %104, label %61

86:                                               ; preds = %77
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %62, i64 3
  %88 = icmp eq %"struct.std::__1::__hash_node_base"* %87, null
  br i1 %88, label %104, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %62, i64 12
  %91 = bitcast %"struct.std::__1::__hash_node_base"* %90 to %"class.spirv_cross::Bitset"*
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %90 to i64*
  %93 = load i64, i64* %92, align 8
  store i64 %93, i64* %25, align 8
  %94 = icmp eq %"class.spirv_cross::Bitset"* %91, %0
  br i1 %94, label %104, label %95

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %0, i64 0, i32 1, i32 0
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %62, i64 17
  %98 = bitcast %"struct.std::__1::__hash_node_base"* %97 to i32*
  %99 = load i32, i32* %98, align 4
  %100 = bitcast float* %26 to i32*
  store i32 %99, i32* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %62, i64 15
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to %"struct.std::__1::__hash_node_base.105"**
  %103 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %102, align 8
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEEEEvT_SF_(%"class.std::__1::__hash_table.101"* %96, %"struct.std::__1::__hash_node_base.105"* %103, %"struct.std::__1::__hash_node_base.105"* null) #17
  br label %104

104:                                              ; preds = %82, %74, %55, %23, %48, %95, %89, %86
  %105 = getelementptr inbounds %"struct.spirv_cross::IVariant", %"struct.spirv_cross::IVariant"* %13, i64 8, i32 1
  %106 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %105, i64 2
  %107 = bitcast %"class.spirv_cross::TypedID"* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %153, label %110

110:                                              ; preds = %104
  %111 = bitcast %"class.spirv_cross::Bitset"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %111) #17
  %112 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %6, i64 0, i32 0
  %113 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %6, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %115 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %6, i64 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %116 = bitcast %"class.spirv_cross::Bitset"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %116, i8 -86, i64 40, i1 false)
  store float 0xFFFFFFFFE0000000, float* %115, align 8
  %117 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %6, i64 0, i32 1, i32 0, i32 4, i64 0
  %118 = bitcast i8* %117 to i32*
  store i32 -1431655766, i32* %118, align 4
  call void @_ZNK11spirv_cross8ParsedIR27get_buffer_block_type_flagsERKNS_8SPIRTypeE(%"class.spirv_cross::Bitset"* nonnull sret %6, %"class.spirv_cross::ParsedIR"* %1, %"struct.spirv_cross::SPIRType"* nonnull dereferenceable(320) %24)
  %119 = load i64, i64* %112, align 8
  %120 = load i64, i64* %25, align 8
  %121 = or i64 %120, %119
  store i64 %121, i64* %25, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.105"** %114 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = icmp eq i64 %123, 0
  %125 = inttoptr i64 %123 to %"struct.std::__1::__hash_node_base.105"*
  br i1 %124, label %138, label %126

126:                                              ; preds = %110
  %127 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %0, i64 0, i32 1, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi i64 [ %123, %126 ], [ %134, %128 ]
  %130 = inttoptr i64 %129 to %"struct.std::__1::__hash_node"*
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %130, i64 0, i32 2
  %132 = call { %"struct.std::__1::__hash_node_base.105"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.101"* %127, i32* dereferenceable(4) %131, i32* dereferenceable(4) %131) #17
  %133 = inttoptr i64 %129 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %128

136:                                              ; preds = %128
  %137 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %114, align 8
  br label %138

138:                                              ; preds = %136, %110
  %139 = phi %"struct.std::__1::__hash_node_base.105"* [ %137, %136 ], [ %125, %110 ]
  %140 = icmp eq %"struct.std::__1::__hash_node_base.105"* %139, null
  br i1 %140, label %147, label %141

141:                                              ; preds = %138, %141
  %142 = phi %"struct.std::__1::__hash_node_base.105"* [ %144, %141 ], [ %139, %138 ]
  %143 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %142, i64 0, i32 0
  %144 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %143, align 8
  %145 = bitcast %"struct.std::__1::__hash_node_base.105"* %142 to i8*
  call void @_ZdlPv(i8* %145) #18
  %146 = icmp eq %"struct.std::__1::__hash_node_base.105"* %144, null
  br i1 %146, label %147, label %141

147:                                              ; preds = %141, %138
  %148 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %113, align 8
  store %"struct.std::__1::__hash_node_base.105"** null, %"struct.std::__1::__hash_node_base.105"*** %113, align 8
  %149 = icmp eq %"struct.std::__1::__hash_node_base.105"** %148, null
  br i1 %149, label %152, label %150

150:                                              ; preds = %147
  %151 = bitcast %"struct.std::__1::__hash_node_base.105"** %148 to i8*
  call void @_ZdlPv(i8* %151) #18
  br label %152

152:                                              ; preds = %147, %150
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %111) #17
  br label %153

153:                                              ; preds = %152, %104
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK11spirv_cross8ParsedIR14has_decorationENS_7TypedIDILNS_5TypesE0EEEN3spv10DecorationE(%"class.spirv_cross::ParsedIR"* nocapture readonly, i32, i32) local_unnamed_addr #4 align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %59, label %8

8:                                                ; preds = %3
  %9 = tail call i64 @llvm.ctpop.i64(i64 %6) #17, !range !5
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = add i64 %6, 4294967295
  %13 = and i64 %12, %4
  br label %18

14:                                               ; preds = %8
  %15 = icmp ugt i64 %6, %4
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %4, %6
  br label %18

18:                                               ; preds = %16, %14, %11
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %4, %14 ]
  %20 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base"* %23, null
  br i1 %24, label %59, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %23, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, null
  br i1 %28, label %59, label %29

29:                                               ; preds = %25
  %30 = add i64 %6, -1
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi %"struct.std::__1::__hash_node_base"* [ %27, %29 ], [ %54, %52 ]
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 1
  %34 = bitcast %"struct.std::__1::__hash_node_base"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %4
  br i1 %36, label %47, label %37

37:                                               ; preds = %31
  br i1 %10, label %40, label %38

38:                                               ; preds = %37
  %39 = and i64 %35, %30
  br label %44

40:                                               ; preds = %37
  %41 = icmp ult i64 %35, %6
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %35, %6
  br label %44

44:                                               ; preds = %42, %40, %38
  %45 = phi i64 [ %39, %38 ], [ %43, %42 ], [ %35, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %52, label %59

47:                                               ; preds = %31
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 2
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, %1
  br i1 %51, label %56, label %52

52:                                               ; preds = %47, %44
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base"* %54, null
  br i1 %55, label %59, label %31

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 3
  %58 = bitcast %"struct.std::__1::__hash_node_base"* %57 to %"struct.spirv_cross::Meta"*
  br label %59

59:                                               ; preds = %44, %52, %3, %18, %25, %56
  %60 = phi %"struct.spirv_cross::Meta"* [ %58, %56 ], [ null, %18 ], [ null, %3 ], [ null, %25 ], [ null, %52 ], [ null, %44 ]
  %61 = icmp eq %"struct.spirv_cross::Meta"* %60, null
  %62 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %60, i64 0, i32 0, i32 3
  %63 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 19
  %64 = select i1 %61, %"class.spirv_cross::Bitset"* %63, %"class.spirv_cross::Bitset"* %62
  %65 = icmp ult i32 %2, 64
  br i1 %65, label %66, label %72

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %64, i64 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = zext i32 %2 to i64
  %70 = shl i64 1, %69
  %71 = and i64 %68, %70
  br label %129

72:                                               ; preds = %59
  %73 = zext i32 %2 to i64
  %74 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %64, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %125, label %77

77:                                               ; preds = %72
  %78 = tail call i64 @llvm.ctpop.i64(i64 %75) #17, !range !5
  %79 = icmp ugt i64 %78, 1
  br i1 %79, label %83, label %80

80:                                               ; preds = %77
  %81 = add i64 %75, 4294967295
  %82 = and i64 %81, %73
  br label %87

83:                                               ; preds = %77
  %84 = icmp ugt i64 %75, %73
  br i1 %84, label %87, label %85

85:                                               ; preds = %83
  %86 = urem i64 %73, %75
  br label %87

87:                                               ; preds = %85, %83, %80
  %88 = phi i64 [ %82, %80 ], [ %86, %85 ], [ %73, %83 ]
  %89 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %64, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %89, align 8
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %90, i64 %88
  %92 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %91, align 8
  %93 = icmp eq %"struct.std::__1::__hash_node_base.105"* %92, null
  br i1 %93, label %125, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %92, i64 0, i32 0
  %96 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %95, align 8
  %97 = icmp eq %"struct.std::__1::__hash_node_base.105"* %96, null
  br i1 %97, label %125, label %98

98:                                               ; preds = %94
  %99 = add i64 %75, -1
  br label %100

100:                                              ; preds = %121, %98
  %101 = phi %"struct.std::__1::__hash_node_base.105"* [ %96, %98 ], [ %123, %121 ]
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %101, i64 1
  %103 = bitcast %"struct.std::__1::__hash_node_base.105"* %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = icmp eq i64 %104, %73
  br i1 %105, label %116, label %106

106:                                              ; preds = %100
  br i1 %79, label %109, label %107

107:                                              ; preds = %106
  %108 = and i64 %104, %99
  br label %113

109:                                              ; preds = %106
  %110 = icmp ult i64 %104, %75
  br i1 %110, label %113, label %111

111:                                              ; preds = %109
  %112 = urem i64 %104, %75
  br label %113

113:                                              ; preds = %111, %109, %107
  %114 = phi i64 [ %108, %107 ], [ %112, %111 ], [ %104, %109 ]
  %115 = icmp eq i64 %114, %88
  br i1 %115, label %121, label %125

116:                                              ; preds = %100
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %101, i64 2
  %118 = bitcast %"struct.std::__1::__hash_node_base.105"* %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, %2
  br i1 %120, label %125, label %121

121:                                              ; preds = %116, %113
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %101, i64 0, i32 0
  %123 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %122, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.105"* %123, null
  br i1 %124, label %125, label %100

125:                                              ; preds = %121, %116, %113, %94, %87, %72
  %126 = phi %"struct.std::__1::__hash_node_base.105"* [ null, %87 ], [ null, %72 ], [ null, %94 ], [ %101, %116 ], [ null, %121 ], [ null, %113 ]
  %127 = icmp ne %"struct.std::__1::__hash_node_base.105"* %126, null
  %128 = zext i1 %127 to i64
  br label %129

129:                                              ; preds = %66, %125
  %130 = phi i64 [ %71, %66 ], [ %128, %125 ]
  %131 = icmp ne i64 %130, 0
  ret i1 %131
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden dereferenceable(48) %"class.spirv_cross::Bitset"* @_ZNK11spirv_cross8ParsedIR21get_decoration_bitsetENS_7TypedIDILNS_5TypesE0EEE(%"class.spirv_cross::ParsedIR"* readonly, i32) local_unnamed_addr #4 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %58, label %7

7:                                                ; preds = %2
  %8 = tail call i64 @llvm.ctpop.i64(i64 %5) #17, !range !5
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = add i64 %5, 4294967295
  %12 = and i64 %11, %3
  br label %17

13:                                               ; preds = %7
  %14 = icmp ugt i64 %5, %3
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = urem i64 %3, %5
  br label %17

17:                                               ; preds = %15, %13, %10
  %18 = phi i64 [ %12, %10 ], [ %16, %15 ], [ %3, %13 ]
  %19 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %20, i64 %18
  %22 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base"* %22, null
  br i1 %23, label %58, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %22, i64 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %58, label %28

28:                                               ; preds = %24
  %29 = add i64 %5, -1
  br label %30

30:                                               ; preds = %51, %28
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %26, %28 ], [ %53, %51 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 1
  %33 = bitcast %"struct.std::__1::__hash_node_base"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, %3
  br i1 %35, label %46, label %36

36:                                               ; preds = %30
  br i1 %9, label %39, label %37

37:                                               ; preds = %36
  %38 = and i64 %34, %29
  br label %43

39:                                               ; preds = %36
  %40 = icmp ult i64 %34, %5
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %34, %5
  br label %43

43:                                               ; preds = %41, %39, %37
  %44 = phi i64 [ %38, %37 ], [ %42, %41 ], [ %34, %39 ]
  %45 = icmp eq i64 %44, %18
  br i1 %45, label %51, label %58

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 2
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %1
  br i1 %50, label %55, label %51

51:                                               ; preds = %46, %43
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base"* %53, null
  br i1 %54, label %58, label %30

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 3
  %57 = bitcast %"struct.std::__1::__hash_node_base"* %56 to %"struct.spirv_cross::Meta"*
  br label %58

58:                                               ; preds = %43, %51, %2, %17, %24, %55
  %59 = phi %"struct.spirv_cross::Meta"* [ %57, %55 ], [ null, %17 ], [ null, %2 ], [ null, %24 ], [ null, %51 ], [ null, %43 ]
  %60 = icmp eq %"struct.spirv_cross::Meta"* %59, null
  %61 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %59, i64 0, i32 0, i32 3
  %62 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 19
  %63 = select i1 %60, %"class.spirv_cross::Bitset"* %62, %"class.spirv_cross::Bitset"* %61
  ret %"class.spirv_cross::Bitset"* %63
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK11spirv_cross8ParsedIR14get_decorationENS_7TypedIDILNS_5TypesE0EEEN3spv10DecorationE(%"class.spirv_cross::ParsedIR"* nocapture readonly, i32, i32) local_unnamed_addr #4 align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %185, label %8

8:                                                ; preds = %3
  %9 = tail call i64 @llvm.ctpop.i64(i64 %6) #17, !range !5
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = add i64 %6, 4294967295
  %13 = and i64 %12, %4
  br label %18

14:                                               ; preds = %8
  %15 = icmp ugt i64 %6, %4
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %4, %6
  br label %18

18:                                               ; preds = %16, %14, %11
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %4, %14 ]
  %20 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base"* %23, null
  br i1 %24, label %185, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %23, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, null
  br i1 %28, label %185, label %29

29:                                               ; preds = %25
  %30 = add i64 %6, -1
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi %"struct.std::__1::__hash_node_base"* [ %27, %29 ], [ %54, %52 ]
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 1
  %34 = bitcast %"struct.std::__1::__hash_node_base"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %4
  br i1 %36, label %47, label %37

37:                                               ; preds = %31
  br i1 %10, label %40, label %38

38:                                               ; preds = %37
  %39 = and i64 %35, %30
  br label %44

40:                                               ; preds = %37
  %41 = icmp ult i64 %35, %6
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %35, %6
  br label %44

44:                                               ; preds = %42, %40, %38
  %45 = phi i64 [ %39, %38 ], [ %43, %42 ], [ %35, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %52, label %185

47:                                               ; preds = %31
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 2
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, %1
  br i1 %51, label %56, label %52

52:                                               ; preds = %47, %44
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base"* %54, null
  br i1 %55, label %185, label %31

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 3
  %58 = bitcast %"struct.std::__1::__hash_node_base"* %57 to %"struct.spirv_cross::Meta"*
  %59 = icmp eq %"struct.std::__1::__hash_node_base"* %57, null
  br i1 %59, label %185, label %60

60:                                               ; preds = %56
  %61 = icmp ult i32 %2, 64
  br i1 %61, label %62, label %69

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 12
  %64 = bitcast %"struct.std::__1::__hash_node_base"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = zext i32 %2 to i64
  %67 = shl i64 1, %66
  %68 = and i64 %65, %67
  br label %128

69:                                               ; preds = %60
  %70 = zext i32 %2 to i64
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 14
  %72 = bitcast %"struct.std::__1::__hash_node_base"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %124, label %75

75:                                               ; preds = %69
  %76 = tail call i64 @llvm.ctpop.i64(i64 %73) #17, !range !5
  %77 = icmp ugt i64 %76, 1
  br i1 %77, label %81, label %78

78:                                               ; preds = %75
  %79 = add i64 %73, 4294967295
  %80 = and i64 %79, %70
  br label %85

81:                                               ; preds = %75
  %82 = icmp ugt i64 %73, %70
  br i1 %82, label %85, label %83

83:                                               ; preds = %81
  %84 = urem i64 %70, %73
  br label %85

85:                                               ; preds = %83, %81, %78
  %86 = phi i64 [ %80, %78 ], [ %84, %83 ], [ %70, %81 ]
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 13
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %87 to %"struct.std::__1::__hash_node_base.105"***
  %89 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %88, align 8
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %89, i64 %86
  %91 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %90, align 8
  %92 = icmp eq %"struct.std::__1::__hash_node_base.105"* %91, null
  br i1 %92, label %124, label %93

93:                                               ; preds = %85
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %91, i64 0, i32 0
  %95 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.105"* %95, null
  br i1 %96, label %124, label %97

97:                                               ; preds = %93
  %98 = add i64 %73, -1
  br label %99

99:                                               ; preds = %120, %97
  %100 = phi %"struct.std::__1::__hash_node_base.105"* [ %95, %97 ], [ %122, %120 ]
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %100, i64 1
  %102 = bitcast %"struct.std::__1::__hash_node_base.105"* %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = icmp eq i64 %103, %70
  br i1 %104, label %115, label %105

105:                                              ; preds = %99
  br i1 %77, label %108, label %106

106:                                              ; preds = %105
  %107 = and i64 %103, %98
  br label %112

108:                                              ; preds = %105
  %109 = icmp ult i64 %103, %73
  br i1 %109, label %112, label %110

110:                                              ; preds = %108
  %111 = urem i64 %103, %73
  br label %112

112:                                              ; preds = %110, %108, %106
  %113 = phi i64 [ %107, %106 ], [ %111, %110 ], [ %103, %108 ]
  %114 = icmp eq i64 %113, %86
  br i1 %114, label %120, label %124

115:                                              ; preds = %99
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %100, i64 2
  %117 = bitcast %"struct.std::__1::__hash_node_base.105"* %116 to i32*
  %118 = load i32, i32* %117, align 4
  %119 = icmp eq i32 %118, %2
  br i1 %119, label %124, label %120

120:                                              ; preds = %115, %112
  %121 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %100, i64 0, i32 0
  %122 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %121, align 8
  %123 = icmp eq %"struct.std::__1::__hash_node_base.105"* %122, null
  br i1 %123, label %124, label %99

124:                                              ; preds = %120, %115, %112, %93, %85, %69
  %125 = phi %"struct.std::__1::__hash_node_base.105"* [ null, %85 ], [ null, %69 ], [ null, %93 ], [ %100, %115 ], [ null, %120 ], [ null, %112 ]
  %126 = icmp ne %"struct.std::__1::__hash_node_base.105"* %125, null
  %127 = zext i1 %126 to i64
  br label %128

128:                                              ; preds = %62, %124
  %129 = phi i64 [ %68, %62 ], [ %127, %124 ]
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %185, label %131

131:                                              ; preds = %128
  switch i32 %2, label %185 [
    i32 11, label %132
    i32 30, label %136
    i32 31, label %139
    i32 35, label %143
    i32 36, label %146
    i32 37, label %150
    i32 29, label %153
    i32 33, label %157
    i32 34, label %161
    i32 43, label %164
    i32 1, label %167
    i32 6, label %171
    i32 7, label %174
    i32 32, label %178
    i32 39, label %181
  ]

132:                                              ; preds = %131
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 18
  %134 = bitcast %"struct.std::__1::__hash_node_base"* %133 to i32*
  %135 = load i32, i32* %134, align 8
  br label %185

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %58, i64 0, i32 0, i32 5
  %138 = load i32, i32* %137, align 4
  br label %185

139:                                              ; preds = %131
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 19
  %141 = bitcast %"struct.std::__1::__hash_node_base"* %140 to i32*
  %142 = load i32, i32* %141, align 8
  br label %185

143:                                              ; preds = %131
  %144 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %58, i64 0, i32 0, i32 9
  %145 = load i32, i32* %144, align 4
  br label %185

146:                                              ; preds = %131
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 21
  %148 = bitcast %"struct.std::__1::__hash_node_base"* %147 to i32*
  %149 = load i32, i32* %148, align 8
  br label %185

150:                                              ; preds = %131
  %151 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %58, i64 0, i32 0, i32 11
  %152 = load i32, i32* %151, align 4
  br label %185

153:                                              ; preds = %131
  %154 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 22
  %155 = bitcast %"struct.std::__1::__hash_node_base"* %154 to i32*
  %156 = load i32, i32* %155, align 8
  br label %185

157:                                              ; preds = %131
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 20
  %159 = bitcast %"struct.std::__1::__hash_node_base"* %158 to i32*
  %160 = load i32, i32* %159, align 8
  br label %185

161:                                              ; preds = %131
  %162 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %58, i64 0, i32 0, i32 7
  %163 = load i32, i32* %162, align 4
  br label %185

164:                                              ; preds = %131
  %165 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %58, i64 0, i32 0, i32 15
  %166 = load i32, i32* %165, align 4
  br label %185

167:                                              ; preds = %131
  %168 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 24
  %169 = bitcast %"struct.std::__1::__hash_node_base"* %168 to i32*
  %170 = load i32, i32* %169, align 8
  br label %185

171:                                              ; preds = %131
  %172 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %58, i64 0, i32 0, i32 13
  %173 = load i32, i32* %172, align 4
  br label %185

174:                                              ; preds = %131
  %175 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 23
  %176 = bitcast %"struct.std::__1::__hash_node_base"* %175 to i32*
  %177 = load i32, i32* %176, align 8
  br label %185

178:                                              ; preds = %131
  %179 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %58, i64 0, i32 0, i32 17
  %180 = load i32, i32* %179, align 4
  br label %185

181:                                              ; preds = %131
  %182 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 25
  %183 = bitcast %"struct.std::__1::__hash_node_base"* %182 to i32*
  %184 = load i32, i32* %183, align 8
  br label %185

185:                                              ; preds = %52, %44, %128, %25, %3, %18, %132, %136, %139, %143, %146, %150, %153, %157, %161, %164, %167, %171, %174, %178, %181, %131, %56
  %186 = phi i32 [ 0, %56 ], [ %184, %181 ], [ %180, %178 ], [ %177, %174 ], [ %173, %171 ], [ %170, %167 ], [ %166, %164 ], [ %163, %161 ], [ %160, %157 ], [ %156, %153 ], [ %152, %150 ], [ %149, %146 ], [ %145, %143 ], [ %142, %139 ], [ %138, %136 ], [ %135, %132 ], [ 0, %128 ], [ 1, %131 ], [ 0, %18 ], [ 0, %3 ], [ 0, %25 ], [ 0, %44 ], [ 0, %52 ]
  ret i32 %186
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK11spirv_cross8ParsedIR21get_decoration_stringENS_7TypedIDILNS_5TypesE0EEEN3spv10DecorationE(%"class.spirv_cross::ParsedIR"* readonly, i32, i32) local_unnamed_addr #4 align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %59, label %8

8:                                                ; preds = %3
  %9 = tail call i64 @llvm.ctpop.i64(i64 %6) #17, !range !5
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = add i64 %6, 4294967295
  %13 = and i64 %12, %4
  br label %18

14:                                               ; preds = %8
  %15 = icmp ugt i64 %6, %4
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %4, %6
  br label %18

18:                                               ; preds = %16, %14, %11
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %4, %14 ]
  %20 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base"* %23, null
  br i1 %24, label %59, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %23, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, null
  br i1 %28, label %59, label %29

29:                                               ; preds = %25
  %30 = add i64 %6, -1
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi %"struct.std::__1::__hash_node_base"* [ %27, %29 ], [ %54, %52 ]
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 1
  %34 = bitcast %"struct.std::__1::__hash_node_base"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %4
  br i1 %36, label %47, label %37

37:                                               ; preds = %31
  br i1 %10, label %40, label %38

38:                                               ; preds = %37
  %39 = and i64 %35, %30
  br label %44

40:                                               ; preds = %37
  %41 = icmp ult i64 %35, %6
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %35, %6
  br label %44

44:                                               ; preds = %42, %40, %38
  %45 = phi i64 [ %39, %38 ], [ %43, %42 ], [ %35, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %52, label %59

47:                                               ; preds = %31
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 2
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, %1
  br i1 %51, label %56, label %52

52:                                               ; preds = %47, %44
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base"* %54, null
  br i1 %55, label %59, label %31

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 3
  %58 = icmp eq %"struct.std::__1::__hash_node_base"* %57, null
  br i1 %58, label %59, label %61

59:                                               ; preds = %52, %44, %25, %3, %18, %56
  %60 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 18
  br label %141

61:                                               ; preds = %56
  %62 = icmp ult i32 %2, 64
  br i1 %62, label %63, label %70

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 12
  %65 = bitcast %"struct.std::__1::__hash_node_base"* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = zext i32 %2 to i64
  %68 = shl i64 1, %67
  %69 = and i64 %66, %68
  br label %129

70:                                               ; preds = %61
  %71 = zext i32 %2 to i64
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 14
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %125, label %76

76:                                               ; preds = %70
  %77 = tail call i64 @llvm.ctpop.i64(i64 %74) #17, !range !5
  %78 = icmp ugt i64 %77, 1
  br i1 %78, label %82, label %79

79:                                               ; preds = %76
  %80 = add i64 %74, 4294967295
  %81 = and i64 %80, %71
  br label %86

82:                                               ; preds = %76
  %83 = icmp ugt i64 %74, %71
  br i1 %83, label %86, label %84

84:                                               ; preds = %82
  %85 = urem i64 %71, %74
  br label %86

86:                                               ; preds = %84, %82, %79
  %87 = phi i64 [ %81, %79 ], [ %85, %84 ], [ %71, %82 ]
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 13
  %89 = bitcast %"struct.std::__1::__hash_node_base"* %88 to %"struct.std::__1::__hash_node_base.105"***
  %90 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %89, align 8
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %90, i64 %87
  %92 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %91, align 8
  %93 = icmp eq %"struct.std::__1::__hash_node_base.105"* %92, null
  br i1 %93, label %125, label %94

94:                                               ; preds = %86
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %92, i64 0, i32 0
  %96 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %95, align 8
  %97 = icmp eq %"struct.std::__1::__hash_node_base.105"* %96, null
  br i1 %97, label %125, label %98

98:                                               ; preds = %94
  %99 = add i64 %74, -1
  br label %100

100:                                              ; preds = %121, %98
  %101 = phi %"struct.std::__1::__hash_node_base.105"* [ %96, %98 ], [ %123, %121 ]
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %101, i64 1
  %103 = bitcast %"struct.std::__1::__hash_node_base.105"* %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = icmp eq i64 %104, %71
  br i1 %105, label %116, label %106

106:                                              ; preds = %100
  br i1 %78, label %109, label %107

107:                                              ; preds = %106
  %108 = and i64 %104, %99
  br label %113

109:                                              ; preds = %106
  %110 = icmp ult i64 %104, %74
  br i1 %110, label %113, label %111

111:                                              ; preds = %109
  %112 = urem i64 %104, %74
  br label %113

113:                                              ; preds = %111, %109, %107
  %114 = phi i64 [ %108, %107 ], [ %112, %111 ], [ %104, %109 ]
  %115 = icmp eq i64 %114, %87
  br i1 %115, label %121, label %125

116:                                              ; preds = %100
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %101, i64 2
  %118 = bitcast %"struct.std::__1::__hash_node_base.105"* %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, %2
  br i1 %120, label %125, label %121

121:                                              ; preds = %116, %113
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %101, i64 0, i32 0
  %123 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %122, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.105"* %123, null
  br i1 %124, label %125, label %100

125:                                              ; preds = %121, %116, %113, %94, %86, %70
  %126 = phi %"struct.std::__1::__hash_node_base.105"* [ null, %86 ], [ null, %70 ], [ null, %94 ], [ %101, %116 ], [ null, %121 ], [ null, %113 ]
  %127 = icmp ne %"struct.std::__1::__hash_node_base.105"* %126, null
  %128 = zext i1 %127 to i64
  br label %129

129:                                              ; preds = %63, %125
  %130 = phi i64 [ %69, %63 ], [ %128, %125 ]
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %134

132:                                              ; preds = %129
  %133 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 18
  br label %141

134:                                              ; preds = %129
  %135 = icmp eq i32 %2, 5635
  br i1 %135, label %136, label %139

136:                                              ; preds = %134
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 9
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %137 to %"class.std::__1::basic_string"*
  br label %141

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 18
  br label %141

141:                                              ; preds = %132, %136, %139, %59
  %142 = phi %"class.std::__1::basic_string"* [ %60, %59 ], [ %138, %136 ], [ %140, %139 ], [ %133, %132 ]
  ret %"class.std::__1::basic_string"* %142
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11spirv_cross8ParsedIR16unset_decorationENS_7TypedIDILNS_5TypesE0EEEN3spv10DecorationE(%"class.spirv_cross::ParsedIR"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple.453", align 8
  %5 = alloca %"class.std::__1::tuple.450", align 1
  %6 = alloca %"class.std::__1::tuple", align 8
  %7 = alloca %"class.std::__1::tuple.450", align 1
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::__1::tuple.453", align 8
  %10 = alloca %"class.std::__1::tuple.450", align 1
  %11 = alloca %"class.spirv_cross::TypedID", align 4
  %12 = alloca %"class.spirv_cross::TypedID", align 4
  %13 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %11, i64 0, i32 0
  store i32 %1, i32* %13, align 4
  %14 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0
  %15 = bitcast %"class.std::__1::tuple.453"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #17
  %16 = getelementptr inbounds %"class.std::__1::tuple.453", %"class.std::__1::tuple.453"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.spirv_cross::TypedID"* %11, %"class.spirv_cross::TypedID"** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.450", %"class.std::__1::tuple.450"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #17
  %18 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %14, %"class.spirv_cross::TypedID"* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.453"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.450"* nonnull dereferenceable(1) %10) #17
  %19 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %18, 0
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %19, i64 3
  %21 = bitcast %"struct.std::__1::__hash_node_base"* %20 to %"struct.spirv_cross::Meta"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #17
  %22 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22)
  store i32 %2, i32* %8, align 4
  %23 = icmp ult i32 %2, 64
  br i1 %23, label %24, label %32

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %19, i64 12
  %26 = zext i32 %2 to i64
  %27 = shl i64 1, %26
  %28 = xor i64 %27, -1
  %29 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = and i64 %30, %28
  store i64 %31, i64* %29, align 8
  br label %36

32:                                               ; preds = %3
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %19, i64 13
  %34 = bitcast %"struct.std::__1::__hash_node_base"* %33 to %"class.std::__1::__hash_table.101"*
  %35 = call i64 @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.101"* %34, i32* nonnull dereferenceable(4) %8) #17
  br label %36

36:                                               ; preds = %24, %32
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22)
  switch i32 %2, label %101 [
    i32 11, label %37
    i32 30, label %39
    i32 31, label %41
    i32 35, label %44
    i32 36, label %46
    i32 37, label %49
    i32 29, label %51
    i32 33, label %54
    i32 34, label %57
    i32 43, label %59
    i32 1, label %61
    i32 5635, label %64
    i32 39, label %77
    i32 5634, label %80
  ]

37:                                               ; preds = %36
  %38 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %21, i64 0, i32 0, i32 19
  store i8 0, i8* %38, align 4
  br label %101

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %21, i64 0, i32 0, i32 5
  store i32 0, i32* %40, align 4
  br label %101

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %19, i64 19
  %43 = bitcast %"struct.std::__1::__hash_node_base"* %42 to i32*
  store i32 0, i32* %43, align 8
  br label %101

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %21, i64 0, i32 0, i32 9
  store i32 0, i32* %45, align 4
  br label %101

46:                                               ; preds = %36
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %19, i64 21
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i32*
  store i32 0, i32* %48, align 8
  br label %101

49:                                               ; preds = %36
  %50 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %21, i64 0, i32 0, i32 11
  store i32 0, i32* %50, align 4
  br label %101

51:                                               ; preds = %36
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %19, i64 22
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i32*
  store i32 0, i32* %53, align 8
  br label %101

54:                                               ; preds = %36
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %19, i64 20
  %56 = bitcast %"struct.std::__1::__hash_node_base"* %55 to i32*
  store i32 0, i32* %56, align 8
  br label %101

57:                                               ; preds = %36
  %58 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %21, i64 0, i32 0, i32 7
  store i32 0, i32* %58, align 4
  br label %101

59:                                               ; preds = %36
  %60 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %21, i64 0, i32 0, i32 15
  store i32 0, i32* %60, align 4
  br label %101

61:                                               ; preds = %36
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %19, i64 24
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %62 to i32*
  store i32 0, i32* %63, align 8
  br label %101

64:                                               ; preds = %36
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %19, i64 9
  %66 = bitcast %"struct.std::__1::__hash_node_base"* %65 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %75

70:                                               ; preds = %64
  %71 = bitcast %"struct.std::__1::__hash_node_base"* %65 to i8**
  %72 = load i8*, i8** %71, align 8
  store i8 0, i8* %72, align 1
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %19, i64 10
  %74 = bitcast %"struct.std::__1::__hash_node_base"* %73 to i64*
  store i64 0, i64* %74, align 8
  br label %101

75:                                               ; preds = %64
  %76 = bitcast %"struct.std::__1::__hash_node_base"* %65 to i8*
  store i8 0, i8* %76, align 1
  store i8 0, i8* %67, align 1
  br label %101

77:                                               ; preds = %36
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %19, i64 25
  %79 = bitcast %"struct.std::__1::__hash_node_base"* %78 to i32*
  store i32 2147483647, i32* %79, align 8
  br label %101

80:                                               ; preds = %36
  %81 = bitcast %"class.std::__1::tuple.453"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #17
  %82 = getelementptr inbounds %"class.std::__1::tuple.453", %"class.std::__1::tuple.453"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.spirv_cross::TypedID"* %11, %"class.spirv_cross::TypedID"** %82, align 8
  %83 = getelementptr inbounds %"class.std::__1::tuple.450", %"class.std::__1::tuple.450"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %83) #17
  %84 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %14, %"class.spirv_cross::TypedID"* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.453"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.450"* nonnull dereferenceable(1) %5) #17
  %85 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %84, 0
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %85, i64 3
  %87 = bitcast %"struct.std::__1::__hash_node_base"* %86 to %"struct.spirv_cross::Meta"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %83) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #17
  %88 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %87, i64 0, i32 4
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %101, label %91

91:                                               ; preds = %80
  %92 = bitcast %"class.spirv_cross::TypedID"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %92) #17
  %93 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %12, i64 0, i32 0
  store i32 %89, i32* %93, align 4
  %94 = bitcast %"class.std::__1::tuple"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #17
  %95 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.spirv_cross::TypedID"* %12, %"class.spirv_cross::TypedID"** %95, align 8
  %96 = getelementptr inbounds %"class.std::__1::tuple.450", %"class.std::__1::tuple.450"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %96) #17
  %97 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %14, %"class.spirv_cross::TypedID"* nonnull dereferenceable(4) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.450"* nonnull dereferenceable(1) %7) #17
  %98 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %97, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %96) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #17
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %98, i64 49
  %100 = bitcast %"struct.std::__1::__hash_node_base"* %99 to i8*
  store i8 0, i8* %100, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %92) #17
  store i32 0, i32* %88, align 4
  br label %101

101:                                              ; preds = %75, %70, %91, %80, %36, %77, %61, %59, %57, %54, %51, %49, %46, %44, %41, %39, %37
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK11spirv_cross8ParsedIR21has_member_decorationENS_7TypedIDILNS_5TypesE1EEEjN3spv10DecorationE(%"class.spirv_cross::ParsedIR"* nocapture readonly, i32, i32, i32) local_unnamed_addr #4 align 2 {
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %70, label %9

9:                                                ; preds = %4
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #17, !range !5
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base"* %24, null
  br i1 %25, label %70, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base"* %28, null
  br i1 %29, label %70, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %70

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %1
  br i1 %52, label %57, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base"* %55, null
  br i1 %56, label %70, label %32

57:                                               ; preds = %48
  %58 = zext i32 %2 to i64
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 41
  %60 = bitcast %"struct.std::__1::__hash_node_base"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = icmp ugt i64 %61, %58
  br i1 %62, label %65, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 19
  br label %72

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 40
  %67 = bitcast %"struct.std::__1::__hash_node_base"* %66 to %"struct.spirv_cross::Meta::Decoration"**
  %68 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %67, align 8
  %69 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %68, i64 %58, i32 3
  br label %72

70:                                               ; preds = %53, %45, %26, %19, %4
  %71 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 19
  br label %72

72:                                               ; preds = %63, %65, %70
  %73 = phi %"class.spirv_cross::Bitset"* [ %64, %63 ], [ %69, %65 ], [ %71, %70 ]
  %74 = icmp ult i32 %3, 64
  br i1 %74, label %75, label %81

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %73, i64 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = zext i32 %3 to i64
  %79 = shl i64 1, %78
  %80 = and i64 %77, %79
  br label %138

81:                                               ; preds = %72
  %82 = zext i32 %3 to i64
  %83 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %73, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %134, label %86

86:                                               ; preds = %81
  %87 = tail call i64 @llvm.ctpop.i64(i64 %84) #17, !range !5
  %88 = icmp ugt i64 %87, 1
  br i1 %88, label %92, label %89

89:                                               ; preds = %86
  %90 = add i64 %84, 4294967295
  %91 = and i64 %90, %82
  br label %96

92:                                               ; preds = %86
  %93 = icmp ugt i64 %84, %82
  br i1 %93, label %96, label %94

94:                                               ; preds = %92
  %95 = urem i64 %82, %84
  br label %96

96:                                               ; preds = %94, %92, %89
  %97 = phi i64 [ %91, %89 ], [ %95, %94 ], [ %82, %92 ]
  %98 = getelementptr inbounds %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset"* %73, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.105"* %101, null
  br i1 %102, label %134, label %103

103:                                              ; preds = %96
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %101, i64 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base.105"* %105, null
  br i1 %106, label %134, label %107

107:                                              ; preds = %103
  %108 = add i64 %84, -1
  br label %109

109:                                              ; preds = %130, %107
  %110 = phi %"struct.std::__1::__hash_node_base.105"* [ %105, %107 ], [ %132, %130 ]
  %111 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %110, i64 1
  %112 = bitcast %"struct.std::__1::__hash_node_base.105"* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = icmp eq i64 %113, %82
  br i1 %114, label %125, label %115

115:                                              ; preds = %109
  br i1 %88, label %118, label %116

116:                                              ; preds = %115
  %117 = and i64 %113, %108
  br label %122

118:                                              ; preds = %115
  %119 = icmp ult i64 %113, %84
  br i1 %119, label %122, label %120

120:                                              ; preds = %118
  %121 = urem i64 %113, %84
  br label %122

122:                                              ; preds = %120, %118, %116
  %123 = phi i64 [ %117, %116 ], [ %121, %120 ], [ %113, %118 ]
  %124 = icmp eq i64 %123, %97
  br i1 %124, label %130, label %134

125:                                              ; preds = %109
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %110, i64 2
  %127 = bitcast %"struct.std::__1::__hash_node_base.105"* %126 to i32*
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, %3
  br i1 %129, label %134, label %130

130:                                              ; preds = %125, %122
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %110, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.105"* %132, null
  br i1 %133, label %134, label %109

134:                                              ; preds = %130, %125, %122, %103, %96, %81
  %135 = phi %"struct.std::__1::__hash_node_base.105"* [ null, %96 ], [ null, %81 ], [ null, %103 ], [ %110, %125 ], [ null, %130 ], [ null, %122 ]
  %136 = icmp ne %"struct.std::__1::__hash_node_base.105"* %135, null
  %137 = zext i1 %136 to i64
  br label %138

138:                                              ; preds = %75, %134
  %139 = phi i64 [ %80, %75 ], [ %137, %134 ]
  %140 = icmp ne i64 %139, 0
  ret i1 %140
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK11spirv_cross8ParsedIR21get_member_decorationENS_7TypedIDILNS_5TypesE1EEEjN3spv10DecorationE(%"class.spirv_cross::ParsedIR"* nocapture readonly, i32, i32, i32) local_unnamed_addr #4 align 2 {
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %168, label %9

9:                                                ; preds = %4
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #17, !range !5
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base"* %24, null
  br i1 %25, label %168, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base"* %28, null
  br i1 %29, label %168, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %168

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %1
  br i1 %52, label %57, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base"* %55, null
  br i1 %56, label %168, label %32

57:                                               ; preds = %48
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 3
  %59 = icmp eq %"struct.std::__1::__hash_node_base"* %58, null
  br i1 %59, label %168, label %60

60:                                               ; preds = %57
  %61 = zext i32 %2 to i64
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 41
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = icmp ugt i64 %64, %61
  br i1 %65, label %66, label %168

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 40
  %68 = bitcast %"struct.std::__1::__hash_node_base"* %67 to %"struct.spirv_cross::Meta::Decoration"**
  %69 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %68, align 8
  %70 = icmp ult i32 %3, 64
  br i1 %70, label %71, label %77

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %69, i64 %61, i32 3, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = zext i32 %3 to i64
  %75 = shl i64 1, %74
  %76 = and i64 %73, %75
  br label %134

77:                                               ; preds = %66
  %78 = zext i32 %3 to i64
  %79 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %69, i64 %61, i32 3, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %130, label %82

82:                                               ; preds = %77
  %83 = tail call i64 @llvm.ctpop.i64(i64 %80) #17, !range !5
  %84 = icmp ugt i64 %83, 1
  br i1 %84, label %88, label %85

85:                                               ; preds = %82
  %86 = add i64 %80, 4294967295
  %87 = and i64 %86, %78
  br label %92

88:                                               ; preds = %82
  %89 = icmp ugt i64 %80, %78
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %78, %80
  br label %92

92:                                               ; preds = %90, %88, %85
  %93 = phi i64 [ %87, %85 ], [ %91, %90 ], [ %78, %88 ]
  %94 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %69, i64 %61, i32 3, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %94, align 8
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %95, i64 %93
  %97 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %96, align 8
  %98 = icmp eq %"struct.std::__1::__hash_node_base.105"* %97, null
  br i1 %98, label %130, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %97, i64 0, i32 0
  %101 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.105"* %101, null
  br i1 %102, label %130, label %103

103:                                              ; preds = %99
  %104 = add i64 %80, -1
  br label %105

105:                                              ; preds = %126, %103
  %106 = phi %"struct.std::__1::__hash_node_base.105"* [ %101, %103 ], [ %128, %126 ]
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %106, i64 1
  %108 = bitcast %"struct.std::__1::__hash_node_base.105"* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = icmp eq i64 %109, %78
  br i1 %110, label %121, label %111

111:                                              ; preds = %105
  br i1 %84, label %114, label %112

112:                                              ; preds = %111
  %113 = and i64 %109, %104
  br label %118

114:                                              ; preds = %111
  %115 = icmp ult i64 %109, %80
  br i1 %115, label %118, label %116

116:                                              ; preds = %114
  %117 = urem i64 %109, %80
  br label %118

118:                                              ; preds = %116, %114, %112
  %119 = phi i64 [ %113, %112 ], [ %117, %116 ], [ %109, %114 ]
  %120 = icmp eq i64 %119, %93
  br i1 %120, label %126, label %130

121:                                              ; preds = %105
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %106, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base.105"* %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, %3
  br i1 %125, label %130, label %126

126:                                              ; preds = %121, %118
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %106, i64 0, i32 0
  %128 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %127, align 8
  %129 = icmp eq %"struct.std::__1::__hash_node_base.105"* %128, null
  br i1 %129, label %130, label %105

130:                                              ; preds = %126, %121, %118, %99, %92, %77
  %131 = phi %"struct.std::__1::__hash_node_base.105"* [ null, %92 ], [ null, %77 ], [ null, %99 ], [ %106, %121 ], [ null, %126 ], [ null, %118 ]
  %132 = icmp ne %"struct.std::__1::__hash_node_base.105"* %131, null
  %133 = zext i1 %132 to i64
  br label %134

134:                                              ; preds = %71, %130
  %135 = phi i64 [ %76, %71 ], [ %133, %130 ]
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %168, label %137

137:                                              ; preds = %134
  switch i32 %3, label %168 [
    i32 11, label %138
    i32 30, label %141
    i32 31, label %144
    i32 33, label %147
    i32 35, label %150
    i32 36, label %153
    i32 37, label %156
    i32 29, label %159
    i32 1, label %162
    i32 32, label %165
  ]

138:                                              ; preds = %137
  %139 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %69, i64 %61, i32 4
  %140 = load i32, i32* %139, align 8
  br label %168

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %69, i64 %61, i32 5
  %143 = load i32, i32* %142, align 4
  br label %168

144:                                              ; preds = %137
  %145 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %69, i64 %61, i32 6
  %146 = load i32, i32* %145, align 8
  br label %168

147:                                              ; preds = %137
  %148 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %69, i64 %61, i32 8
  %149 = load i32, i32* %148, align 8
  br label %168

150:                                              ; preds = %137
  %151 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %69, i64 %61, i32 9
  %152 = load i32, i32* %151, align 4
  br label %168

153:                                              ; preds = %137
  %154 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %69, i64 %61, i32 10
  %155 = load i32, i32* %154, align 8
  br label %168

156:                                              ; preds = %137
  %157 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %69, i64 %61, i32 11
  %158 = load i32, i32* %157, align 4
  br label %168

159:                                              ; preds = %137
  %160 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %69, i64 %61, i32 12
  %161 = load i32, i32* %160, align 8
  br label %168

162:                                              ; preds = %137
  %163 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %69, i64 %61, i32 16
  %164 = load i32, i32* %163, align 8
  br label %168

165:                                              ; preds = %137
  %166 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %69, i64 %61, i32 17
  %167 = load i32, i32* %166, align 4
  br label %168

168:                                              ; preds = %53, %45, %134, %26, %4, %19, %138, %141, %144, %147, %150, %153, %156, %159, %162, %165, %137, %60, %57
  %169 = phi i32 [ 0, %57 ], [ 0, %60 ], [ %167, %165 ], [ %164, %162 ], [ %161, %159 ], [ %158, %156 ], [ %155, %153 ], [ %152, %150 ], [ %149, %147 ], [ %146, %144 ], [ %143, %141 ], [ %140, %138 ], [ 0, %134 ], [ 1, %137 ], [ 0, %19 ], [ 0, %4 ], [ 0, %26 ], [ 0, %45 ], [ 0, %53 ]
  ret i32 %169
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11spirv_cross8ParsedIR28set_member_decoration_stringENS_7TypedIDILNS_5TypesE1EEEjN3spv10DecorationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.spirv_cross::ParsedIR"*, i32, i32, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::tuple", align 8
  %7 = alloca %"class.std::__1::tuple.450", align 1
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::__1::tuple", align 8
  %10 = alloca %"class.std::__1::tuple.450", align 1
  %11 = alloca %"class.std::__1::tuple", align 8
  %12 = alloca %"class.std::__1::tuple.450", align 1
  %13 = alloca %"class.spirv_cross::TypedID", align 4
  %14 = alloca %"class.spirv_cross::TypedID", align 4
  %15 = alloca %"class.spirv_cross::TypedID", align 4
  %16 = bitcast %"class.spirv_cross::TypedID"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %13, i64 0, i32 0
  store i32 %1, i32* %17, align 4
  %18 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0
  %19 = bitcast %"class.std::__1::tuple"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #17
  %20 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.spirv_cross::TypedID"* %13, %"class.spirv_cross::TypedID"** %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::tuple.450", %"class.std::__1::tuple.450"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %21) #17
  %22 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %18, %"class.spirv_cross::TypedID"* nonnull dereferenceable(4) %13, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %11, %"class.std::__1::tuple.450"* nonnull dereferenceable(1) %12) #17
  %23 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %22, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %21) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #17
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %23, i64 40
  %25 = bitcast %"struct.std::__1::__hash_node_base"* %24 to %"class.spirv_cross::SmallVector.362"*
  %26 = bitcast %"class.spirv_cross::TypedID"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #17
  %27 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %14, i64 0, i32 0
  store i32 %1, i32* %27, align 4
  %28 = bitcast %"class.std::__1::tuple"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  %29 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.spirv_cross::TypedID"* %14, %"class.spirv_cross::TypedID"** %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::tuple.450", %"class.std::__1::tuple.450"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %30) #17
  %31 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %18, %"class.spirv_cross::TypedID"* nonnull dereferenceable(4) %14, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.450"* nonnull dereferenceable(1) %10) #17
  %32 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %31, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %30) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 41
  %34 = bitcast %"struct.std::__1::__hash_node_base"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = zext i32 %2 to i64
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %35, %37
  %39 = select i1 %38, i64 %37, i64 %35
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %23, i64 41
  %41 = bitcast %"struct.std::__1::__hash_node_base"* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = icmp ugt i64 %42, %39
  br i1 %43, label %44, label %53

44:                                               ; preds = %5
  %45 = bitcast %"struct.std::__1::__hash_node_base"* %24 to %"struct.spirv_cross::Meta::Decoration"**
  br label %46

46:                                               ; preds = %46, %44
  %47 = phi i64 [ %39, %44 ], [ %50, %46 ]
  %48 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %45, align 8
  %49 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %48, i64 %47
  call void @_ZN11spirv_cross4Meta10DecorationD2Ev(%"struct.spirv_cross::Meta::Decoration"* %49) #17
  %50 = add nuw i64 %47, 1
  %51 = load i64, i64* %41, align 8
  %52 = icmp ult i64 %50, %51
  br i1 %52, label %46, label %80

53:                                               ; preds = %5
  %54 = icmp ult i64 %42, %39
  br i1 %54, label %55, label %80

55:                                               ; preds = %53
  call void @_ZN11spirv_cross11SmallVectorINS_4Meta10DecorationELm0EE7reserveEm(%"class.spirv_cross::SmallVector.362"* %25, i64 %39) #17
  %56 = load i64, i64* %41, align 8
  %57 = icmp ult i64 %56, %39
  br i1 %57, label %58, label %80

58:                                               ; preds = %55
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %24 to %"struct.spirv_cross::Meta::Decoration"**
  br label %60

60:                                               ; preds = %60, %58
  %61 = phi i64 [ %56, %58 ], [ %78, %60 ]
  %62 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %59, align 8
  %63 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %62, i64 %61
  %64 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %62, i64 %61, i32 3, i32 1, i32 0, i32 3
  %65 = bitcast %"class.std::__1::__compressed_pair.120"* %64 to i32*
  %66 = bitcast %"struct.spirv_cross::Meta::Decoration"* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 296, i1 false) #17
  store i32 1065353216, i32* %65, align 4
  %67 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %62, i64 %61, i32 4
  store i32 2147483647, i32* %67, align 8
  %68 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %62, i64 %61, i32 5
  %69 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %62, i64 %61, i32 18
  %70 = bitcast i32* %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %70, i8 0, i64 52, i1 false) #17
  store i32 2147483647, i32* %69, align 8
  %71 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %62, i64 %61, i32 19
  store i8 0, i8* %71, align 4
  %72 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %62, i64 %61, i32 20
  %73 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %62, i64 %61, i32 20, i32 0, i32 1, i32 0, i32 3
  %74 = bitcast %"class.std::__1::__compressed_pair.120"* %73 to i32*
  %75 = bitcast %"struct.spirv_cross::Meta::Decoration::Extended"* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 40, i1 false) #17
  store i32 1065353216, i32* %74, align 4
  %76 = getelementptr %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %62, i64 %61, i32 20, i32 1, i64 0
  %77 = bitcast i32* %76 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %77, i8 0, i64 64, i1 false) #17
  %78 = add nuw i64 %61, 1
  %79 = icmp eq i64 %78, %39
  br i1 %79, label %80, label %60

80:                                               ; preds = %60, %46, %53, %55
  store i64 %39, i64* %41, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #17
  %81 = bitcast %"class.spirv_cross::TypedID"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %81) #17
  %82 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %15, i64 0, i32 0
  store i32 %1, i32* %82, align 4
  %83 = bitcast %"class.std::__1::tuple"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #17
  %84 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.spirv_cross::TypedID"* %15, %"class.spirv_cross::TypedID"** %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::tuple.450", %"class.std::__1::tuple.450"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %85) #17
  %86 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %18, %"class.spirv_cross::TypedID"* nonnull dereferenceable(4) %15, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.450"* nonnull dereferenceable(1) %7) #17
  %87 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %86, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %85) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #17
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %87, i64 40
  %89 = bitcast %"struct.std::__1::__hash_node_base"* %88 to %"struct.spirv_cross::Meta::Decoration"**
  %90 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %89, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %81) #17
  %91 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91)
  store i32 %3, i32* %8, align 4
  %92 = icmp ult i32 %3, 64
  br i1 %92, label %93, label %99

93:                                               ; preds = %80
  %94 = zext i32 %3 to i64
  %95 = shl i64 1, %94
  %96 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %90, i64 %36, i32 3, i32 0
  %97 = load i64, i64* %96, align 8
  %98 = or i64 %97, %95
  store i64 %98, i64* %96, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91)
  br label %135

99:                                               ; preds = %80
  %100 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %90, i64 %36, i32 3, i32 1, i32 0
  %101 = call { %"struct.std::__1::__hash_node_base.105"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.101"* %100, i32* nonnull dereferenceable(4) %8, i32* nonnull dereferenceable(4) %8) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91)
  %102 = icmp eq i32 %3, 5635
  br i1 %102, label %103, label %135

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %90, i64 %36, i32 2
  %105 = icmp eq %"class.std::__1::basic_string"* %104, %4
  br i1 %105, label %135, label %106

106:                                              ; preds = %103
  %107 = bitcast %"class.std::__1::basic_string"* %104 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  %111 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %110, label %125, label %115

115:                                              ; preds = %106
  br i1 %114, label %119, label %116

116:                                              ; preds = %115
  %117 = bitcast %"class.std::__1::basic_string"* %104 to i8*
  %118 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %118, i64 24, i1 false) #17
  br label %135

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %123 = load i64, i64* %122, align 8
  %124 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %104, i8* %121, i64 %123) #17
  br label %135

125:                                              ; preds = %106
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %131 = zext i8 %113 to i64
  %132 = select i1 %114, i8* %127, i8* %130
  %133 = select i1 %114, i64 %129, i64 %131
  %134 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %104, i8* %132, i64 %133) #17
  br label %135

135:                                              ; preds = %125, %119, %116, %103, %93, %99
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK11spirv_cross8ParsedIR28get_member_decoration_stringENS_7TypedIDILNS_5TypesE1EEEjN3spv10DecorationE(%"class.spirv_cross::ParsedIR"* readonly, i32, i32, i32) local_unnamed_addr #4 align 2 {
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %73, label %9

9:                                                ; preds = %4
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #17, !range !5
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base"* %24, null
  br i1 %25, label %73, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base"* %28, null
  br i1 %29, label %73, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %73

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %1
  br i1 %52, label %57, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base"* %55, null
  br i1 %56, label %73, label %32

57:                                               ; preds = %48
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 3
  %59 = icmp eq %"struct.std::__1::__hash_node_base"* %58, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %57
  %61 = tail call zeroext i1 @_ZNK11spirv_cross8ParsedIR21has_member_decorationENS_7TypedIDILNS_5TypesE1EEEjN3spv10DecorationE(%"class.spirv_cross::ParsedIR"* %0, i32 %1, i32 %2, i32 %3)
  br i1 %61, label %64, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 18
  br label %75

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 40
  %66 = zext i32 %2 to i64
  %67 = bitcast %"struct.std::__1::__hash_node_base"* %65 to %"struct.spirv_cross::Meta::Decoration"**
  %68 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %67, align 8
  %69 = icmp eq i32 %3, 5635
  %70 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %68, i64 %66, i32 2
  %71 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 18
  %72 = select i1 %69, %"class.std::__1::basic_string"* %70, %"class.std::__1::basic_string"* %71
  br label %75

73:                                               ; preds = %53, %45, %26, %4, %19, %57
  %74 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 18
  br label %75

75:                                               ; preds = %64, %73, %62
  %76 = phi %"class.std::__1::basic_string"* [ %63, %62 ], [ %74, %73 ], [ %72, %64 ]
  ret %"class.std::__1::basic_string"* %76
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11spirv_cross8ParsedIR23unset_member_decorationENS_7TypedIDILNS_5TypesE1EEEjN3spv10DecorationE(%"class.spirv_cross::ParsedIR"*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple.450", align 1
  %7 = alloca i32, align 4
  %8 = alloca %"class.spirv_cross::TypedID", align 4
  %9 = bitcast %"class.spirv_cross::TypedID"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %8, i64 0, i32 0
  store i32 %1, i32* %10, align 4
  %11 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0
  %12 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #17
  %13 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.spirv_cross::TypedID"* %8, %"class.spirv_cross::TypedID"** %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::tuple.450", %"class.std::__1::tuple.450"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #17
  %15 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %11, %"class.spirv_cross::TypedID"* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.450"* nonnull dereferenceable(1) %6) #17
  %16 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %15, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #17
  %17 = zext i32 %2 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %16, i64 41
  %19 = bitcast %"struct.std::__1::__hash_node_base"* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = icmp ugt i64 %20, %17
  br i1 %21, label %22, label %67

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %16, i64 40
  %24 = bitcast %"struct.std::__1::__hash_node_base"* %23 to %"struct.spirv_cross::Meta::Decoration"**
  %25 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %24, align 8
  %26 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26)
  store i32 %3, i32* %7, align 4
  %27 = icmp ult i32 %3, 64
  br i1 %27, label %28, label %35

28:                                               ; preds = %22
  %29 = zext i32 %3 to i64
  %30 = shl i64 1, %29
  %31 = xor i64 %30, -1
  %32 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %25, i64 %17, i32 3, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = and i64 %33, %31
  store i64 %34, i64* %32, align 8
  br label %38

35:                                               ; preds = %22
  %36 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %25, i64 %17, i32 3, i32 1, i32 0
  %37 = call i64 @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.101"* %36, i32* nonnull dereferenceable(4) %7) #17
  br label %38

38:                                               ; preds = %28, %35
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26)
  switch i32 %3, label %67 [
    i32 11, label %39
    i32 30, label %41
    i32 31, label %43
    i32 35, label %45
    i32 36, label %47
    i32 37, label %49
    i32 29, label %51
    i32 1, label %53
    i32 5635, label %55
  ]

39:                                               ; preds = %38
  %40 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %25, i64 %17, i32 19
  store i8 0, i8* %40, align 4
  br label %67

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %25, i64 %17, i32 5
  store i32 0, i32* %42, align 4
  br label %67

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %25, i64 %17, i32 6
  store i32 0, i32* %44, align 8
  br label %67

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %25, i64 %17, i32 9
  store i32 0, i32* %46, align 4
  br label %67

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %25, i64 %17, i32 10
  store i32 0, i32* %48, align 8
  br label %67

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %25, i64 %17, i32 11
  store i32 0, i32* %50, align 4
  br label %67

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %25, i64 %17, i32 12
  store i32 0, i32* %52, align 8
  br label %67

53:                                               ; preds = %38
  %54 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %25, i64 %17, i32 16
  store i32 0, i32* %54, align 8
  br label %67

55:                                               ; preds = %38
  %56 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %25, i64 %17, i32 2
  %57 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %65

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  store i8 0, i8* %63, align 1
  %64 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %25, i64 %17, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %64, align 8
  br label %67

65:                                               ; preds = %55
  %66 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  store i8 0, i8* %66, align 1
  store i8 0, i8* %58, align 1
  br label %67

67:                                               ; preds = %65, %61, %39, %41, %43, %45, %47, %49, %51, %53, %38, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11spirv_cross8ParsedIR17increase_bound_byEj(%"class.spirv_cross::ParsedIR"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = zext i32 %1 to i64
  %7 = add i64 %5, %6
  tail call void @_ZN11spirv_cross11SmallVectorINS_7VariantELm8EE7reserveEm(%"class.spirv_cross::SmallVector"* %3, i64 %7) #17
  %8 = icmp eq i32 %1, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.spirv_cross::ParsedIR"* %0 to i64*
  %11 = getelementptr inbounds %"class.spirv_cross::SmallVector", %"class.spirv_cross::SmallVector"* %3, i64 0, i32 0, i32 0
  %12 = load i64, i64* %4, align 8
  br label %57

13:                                               ; preds = %57, %2
  %14 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 9
  %15 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 9, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ult i64 %16, %7
  br i1 %17, label %18, label %55

18:                                               ; preds = %13
  tail call void @_ZN11spirv_cross11SmallVectorIhLm8EE7reserveEm(%"class.spirv_cross::SmallVector.43"* %14, i64 %7) #17
  %19 = load i64, i64* %15, align 8
  %20 = icmp ult i64 %19, %7
  br i1 %20, label %21, label %55

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.spirv_cross::SmallVector.43", %"class.spirv_cross::SmallVector.43"* %14, i64 0, i32 0, i32 0
  %23 = add i64 %5, %6
  %24 = sub i64 %23, %19
  %25 = xor i64 %19, -1
  %26 = add i64 %23, %25
  %27 = and i64 %24, 3
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %37, label %29

29:                                               ; preds = %21, %29
  %30 = phi i64 [ %34, %29 ], [ %19, %21 ]
  %31 = phi i64 [ %35, %29 ], [ %27, %21 ]
  %32 = load i8*, i8** %22, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 %30
  store i8 0, i8* %33, align 1
  %34 = add nuw i64 %30, 1
  %35 = add i64 %31, -1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %29, !llvm.loop !17

37:                                               ; preds = %29, %21
  %38 = phi i64 [ %19, %21 ], [ %34, %29 ]
  %39 = icmp ult i64 %26, 3
  br i1 %39, label %55, label %40

40:                                               ; preds = %37, %40
  %41 = phi i64 [ %53, %40 ], [ %38, %37 ]
  %42 = load i8*, i8** %22, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 %41
  store i8 0, i8* %43, align 1
  %44 = add nuw i64 %41, 1
  %45 = load i8*, i8** %22, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  store i8 0, i8* %46, align 1
  %47 = add nuw i64 %41, 2
  %48 = load i8*, i8** %22, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 %47
  store i8 0, i8* %49, align 1
  %50 = add nuw i64 %41, 3
  %51 = load i8*, i8** %22, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %50
  store i8 0, i8* %52, align 1
  %53 = add nuw i64 %41, 4
  %54 = icmp eq i64 %53, %7
  br i1 %54, label %55, label %40

55:                                               ; preds = %37, %40, %13, %18
  store i64 %7, i64* %15, align 8
  %56 = trunc i64 %5 to i32
  ret i32 %56

57:                                               ; preds = %57, %9
  %58 = phi i64 [ %12, %9 ], [ %70, %57 ]
  %59 = phi i32 [ 0, %9 ], [ %71, %57 ]
  %60 = load i64, i64* %10, align 8
  %61 = add i64 %58, 1
  tail call void @_ZN11spirv_cross11SmallVectorINS_7VariantELm8EE7reserveEm(%"class.spirv_cross::SmallVector"* %3, i64 %61) #17
  %62 = load %"class.spirv_cross::Variant"*, %"class.spirv_cross::Variant"** %11, align 8
  %63 = load i64, i64* %4, align 8
  %64 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %62, i64 %63
  %65 = bitcast %"class.spirv_cross::Variant"* %64 to i64*
  store i64 %60, i64* %65, align 8
  %66 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %62, i64 %63, i32 1
  store %"struct.spirv_cross::IVariant"* null, %"struct.spirv_cross::IVariant"** %66, align 8
  %67 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %62, i64 %63, i32 2
  store i32 0, i32* %67, align 8
  %68 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %62, i64 %63, i32 3
  store i8 0, i8* %68, align 4
  %69 = load i64, i64* %4, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %4, align 8
  %71 = add nuw i32 %59, 1
  %72 = icmp eq i32 %71, %1
  br i1 %72, label %13, label %57
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11spirv_cross8ParsedIR15remove_typed_idENS_5TypesENS_7TypedIDILS1_0EEE(%"class.spirv_cross::ParsedIR"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 %4
  %6 = getelementptr inbounds %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.29"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %6, align 8
  %8 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 %4, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %7, i64 %9
  %11 = icmp eq i64 %9, 0
  %12 = ptrtoint %"class.spirv_cross::TypedID"* %7 to i64
  br i1 %11, label %21, label %13

13:                                               ; preds = %3, %18
  %14 = phi %"class.spirv_cross::TypedID"* [ %19, %18 ], [ %7, %3 ]
  %15 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, %2
  br i1 %17, label %21, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %14, i64 1
  %20 = icmp eq %"class.spirv_cross::TypedID"* %19, %10
  br i1 %20, label %76, label %13

21:                                               ; preds = %13, %3
  %22 = phi %"class.spirv_cross::TypedID"* [ %7, %3 ], [ %14, %13 ]
  %23 = ptrtoint %"class.spirv_cross::TypedID"* %22 to i64
  %24 = icmp eq %"class.spirv_cross::TypedID"* %22, %10
  br i1 %24, label %76, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %22, i64 1
  %27 = icmp eq %"class.spirv_cross::TypedID"* %26, %10
  br i1 %27, label %76, label %28

28:                                               ; preds = %25
  %29 = add i64 %9, -2
  %30 = getelementptr %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %7, i64 %29, i32 0
  %31 = ptrtoint i32* %30 to i64
  %32 = sub i64 %31, %23
  %33 = lshr i64 %32, 2
  %34 = add nuw nsw i64 %33, 1
  %35 = and i64 %34, 3
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %52, label %37

37:                                               ; preds = %28, %47
  %38 = phi %"class.spirv_cross::TypedID"* [ %49, %47 ], [ %26, %28 ]
  %39 = phi %"class.spirv_cross::TypedID"* [ %48, %47 ], [ %22, %28 ]
  %40 = phi i64 [ %50, %47 ], [ %35, %28 ]
  %41 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %38, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, %2
  br i1 %43, label %47, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %39, i64 0, i32 0
  store i32 %42, i32* %45, align 4
  %46 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %39, i64 1
  br label %47

47:                                               ; preds = %44, %37
  %48 = phi %"class.spirv_cross::TypedID"* [ %39, %37 ], [ %46, %44 ]
  %49 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %38, i64 1
  %50 = add i64 %40, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %37, !llvm.loop !18

52:                                               ; preds = %47, %28
  %53 = phi %"class.spirv_cross::TypedID"* [ undef, %28 ], [ %48, %47 ]
  %54 = phi %"class.spirv_cross::TypedID"* [ %26, %28 ], [ %49, %47 ]
  %55 = phi %"class.spirv_cross::TypedID"* [ %22, %28 ], [ %48, %47 ]
  %56 = icmp ult i64 %32, 12
  br i1 %56, label %71, label %57

57:                                               ; preds = %52, %139
  %58 = phi %"class.spirv_cross::TypedID"* [ %141, %139 ], [ %54, %52 ]
  %59 = phi %"class.spirv_cross::TypedID"* [ %140, %139 ], [ %55, %52 ]
  %60 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %58, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, %2
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %59, i64 0, i32 0
  store i32 %61, i32* %64, align 4
  %65 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %59, i64 1
  br label %66

66:                                               ; preds = %63, %57
  %67 = phi %"class.spirv_cross::TypedID"* [ %59, %57 ], [ %65, %63 ]
  %68 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %58, i64 1, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, %2
  br i1 %70, label %123, label %120

71:                                               ; preds = %139, %52
  %72 = phi %"class.spirv_cross::TypedID"* [ %53, %52 ], [ %140, %139 ]
  %73 = bitcast %"class.spirv_cross::SmallVector.29"* %5 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = load i64, i64* %8, align 8
  br label %76

76:                                               ; preds = %18, %71, %25, %21
  %77 = phi i64 [ %9, %21 ], [ %9, %25 ], [ %75, %71 ], [ %9, %18 ]
  %78 = phi i64 [ %12, %21 ], [ %12, %25 ], [ %74, %71 ], [ %12, %18 ]
  %79 = phi %"class.spirv_cross::TypedID"* [ %10, %21 ], [ %22, %25 ], [ %72, %71 ], [ %10, %18 ]
  %80 = ptrtoint %"class.spirv_cross::TypedID"* %79 to i64
  %81 = sub i64 %80, %78
  %82 = ashr exact i64 %81, 2
  %83 = icmp ult i64 %77, %82
  br i1 %83, label %84, label %119

84:                                               ; preds = %76
  tail call void @_ZN11spirv_cross11SmallVectorINS_7TypedIDILNS_5TypesE0EEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.29"* %5, i64 %82) #17
  %85 = load i64, i64* %8, align 8
  %86 = icmp ugt i64 %82, %85
  br i1 %86, label %87, label %119

87:                                               ; preds = %84
  %88 = sub i64 %82, %85
  %89 = xor i64 %85, -1
  %90 = add i64 %82, %89
  %91 = and i64 %88, 3
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %101, label %93

93:                                               ; preds = %87, %93
  %94 = phi i64 [ %98, %93 ], [ %85, %87 ]
  %95 = phi i64 [ %99, %93 ], [ %91, %87 ]
  %96 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %6, align 8
  %97 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %96, i64 %94, i32 0
  store i32 0, i32* %97, align 4
  %98 = add nuw i64 %94, 1
  %99 = add i64 %95, -1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %93, !llvm.loop !19

101:                                              ; preds = %93, %87
  %102 = phi i64 [ %85, %87 ], [ %98, %93 ]
  %103 = icmp ult i64 %90, 3
  br i1 %103, label %119, label %104

104:                                              ; preds = %101, %104
  %105 = phi i64 [ %117, %104 ], [ %102, %101 ]
  %106 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %6, align 8
  %107 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %106, i64 %105, i32 0
  store i32 0, i32* %107, align 4
  %108 = add nuw i64 %105, 1
  %109 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %6, align 8
  %110 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %109, i64 %108, i32 0
  store i32 0, i32* %110, align 4
  %111 = add nuw i64 %105, 2
  %112 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %6, align 8
  %113 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %112, i64 %111, i32 0
  store i32 0, i32* %113, align 4
  %114 = add nuw i64 %105, 3
  %115 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %6, align 8
  %116 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %115, i64 %114, i32 0
  store i32 0, i32* %116, align 4
  %117 = add nuw i64 %105, 4
  %118 = icmp eq i64 %117, %82
  br i1 %118, label %119, label %104

119:                                              ; preds = %101, %104, %76, %84
  store i64 %82, i64* %8, align 8
  ret void

120:                                              ; preds = %66
  %121 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %67, i64 0, i32 0
  store i32 %69, i32* %121, align 4
  %122 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %67, i64 1
  br label %123

123:                                              ; preds = %120, %66
  %124 = phi %"class.spirv_cross::TypedID"* [ %67, %66 ], [ %122, %120 ]
  %125 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %58, i64 2, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %126, %2
  br i1 %127, label %131, label %128

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %124, i64 0, i32 0
  store i32 %126, i32* %129, align 4
  %130 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %124, i64 1
  br label %131

131:                                              ; preds = %128, %123
  %132 = phi %"class.spirv_cross::TypedID"* [ %124, %123 ], [ %130, %128 ]
  %133 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %58, i64 3, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, %2
  br i1 %135, label %139, label %136

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %132, i64 0, i32 0
  store i32 %134, i32* %137, align 4
  %138 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %132, i64 1
  br label %139

139:                                              ; preds = %136, %131
  %140 = phi %"class.spirv_cross::TypedID"* [ %132, %131 ], [ %138, %136 ]
  %141 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %58, i64 4
  %142 = icmp eq %"class.spirv_cross::TypedID"* %141, %10
  br i1 %142, label %71, label %57
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11spirv_cross8ParsedIR17reset_all_of_typeENS_5TypesE(%"class.spirv_cross::ParsedIR"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 %3, i32 0, i32 0
  %5 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %4, align 8
  %6 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 %3, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %5, i64 %7
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 2, i32 0, i32 0
  br label %13

12:                                               ; preds = %37, %2
  store i64 0, i64* %6, align 8
  ret void

13:                                               ; preds = %10, %37
  %14 = phi %"class.spirv_cross::TypedID"* [ %5, %10 ], [ %38, %37 ]
  %15 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = load %"class.spirv_cross::Variant"*, %"class.spirv_cross::Variant"** %11, align 8
  %19 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %18, i64 %17, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, %1
  br i1 %21, label %22, label %37

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %18, i64 %17, i32 1
  %24 = load %"struct.spirv_cross::IVariant"*, %"struct.spirv_cross::IVariant"** %23, align 8
  %25 = icmp eq %"struct.spirv_cross::IVariant"* %24, null
  br i1 %25, label %36, label %26

26:                                               ; preds = %22
  %27 = bitcast %"struct.spirv_cross::IVariant"* %24 to i8*
  %28 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %18, i64 %17, i32 0
  %29 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %28, align 8
  %30 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %29, i64 0, i32 0, i64 %3, i32 0, i32 0, i32 0
  %31 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %30, align 8
  %32 = bitcast %"class.spirv_cross::ObjectPoolBase"* %31 to void (%"class.spirv_cross::ObjectPoolBase"*, i8*)***
  %33 = load void (%"class.spirv_cross::ObjectPoolBase"*, i8*)**, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)** %33, i64 2
  %35 = load void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)** %34, align 8
  tail call void %35(%"class.spirv_cross::ObjectPoolBase"* %31, i8* nonnull %27) #17
  br label %36

36:                                               ; preds = %22, %26
  store %"struct.spirv_cross::IVariant"* null, %"struct.spirv_cross::IVariant"** %23, align 8
  store i32 0, i32* %19, align 8
  br label %37

37:                                               ; preds = %36, %13
  %38 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %14, i64 1
  %39 = icmp eq %"class.spirv_cross::TypedID"* %38, %8
  br i1 %39, label %12, label %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11spirv_cross8ParsedIR12add_typed_idENS_5TypesENS_7TypedIDILS1_0EEE(%"class.spirv_cross::ParsedIR"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 16
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #17
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0))
  call void @_ZN11spirv_cross16report_and_abortERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #20
  unreachable

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 17
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = zext i32 %2 to i64
  %16 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.spirv_cross::Variant"*, %"class.spirv_cross::Variant"** %16, align 8
  %18 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %17, i64 %15, i32 1
  %19 = load %"struct.spirv_cross::IVariant"*, %"struct.spirv_cross::IVariant"** %18, align 8
  %20 = icmp eq %"struct.spirv_cross::IVariant"* %19, null
  br i1 %14, label %24, label %21

21:                                               ; preds = %11
  br i1 %20, label %222, label %22

22:                                               ; preds = %21
  %23 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #17
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0))
  call void @_ZN11spirv_cross16report_and_abortERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #20
  unreachable

24:                                               ; preds = %11
  br i1 %20, label %29, label %25

25:                                               ; preds = %24
  %26 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %17, i64 %15, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, %1
  br i1 %28, label %73, label %29

29:                                               ; preds = %25, %24
  switch i32 %1, label %73 [
    i32 3, label %30
    i32 2, label %51
    i32 1, label %62
    i32 9, label %62
  ]

30:                                               ; preds = %29
  %31 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 6
  %32 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 6, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 1
  tail call void @_ZN11spirv_cross11SmallVectorINS_7TypedIDILNS_5TypesE0EEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.29"* %31, i64 %34) #17
  %35 = getelementptr inbounds %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.29"* %31, i64 0, i32 0, i32 0
  %36 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %35, align 8
  %37 = load i64, i64* %32, align 8
  %38 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %36, i64 %37, i32 0
  store i32 %2, i32* %38, align 4
  %39 = load i64, i64* %32, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %32, align 8
  %41 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 5
  %42 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 5, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, 1
  tail call void @_ZN11spirv_cross11SmallVectorINS_7TypedIDILNS_5TypesE0EEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.29"* %41, i64 %44) #17
  %45 = getelementptr inbounds %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.29"* %41, i64 0, i32 0, i32 0
  %46 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %45, align 8
  %47 = load i64, i64* %42, align 8
  %48 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %46, i64 %47, i32 0
  store i32 %2, i32* %48, align 4
  %49 = load i64, i64* %42, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %42, align 8
  br label %73

51:                                               ; preds = %29
  %52 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 6
  %53 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 6, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, 1
  tail call void @_ZN11spirv_cross11SmallVectorINS_7TypedIDILNS_5TypesE0EEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.29"* %52, i64 %55) #17
  %56 = getelementptr inbounds %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.29"* %52, i64 0, i32 0, i32 0
  %57 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %56, align 8
  %58 = load i64, i64* %53, align 8
  %59 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %57, i64 %58, i32 0
  store i32 %2, i32* %59, align 4
  %60 = load i64, i64* %53, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %53, align 8
  br label %73

62:                                               ; preds = %29, %29
  %63 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 5
  %64 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 5, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %65, 1
  tail call void @_ZN11spirv_cross11SmallVectorINS_7TypedIDILNS_5TypesE0EEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.29"* %63, i64 %66) #17
  %67 = getelementptr inbounds %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.29"* %63, i64 0, i32 0, i32 0
  %68 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %67, align 8
  %69 = load i64, i64* %64, align 8
  %70 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %68, i64 %69, i32 0
  store i32 %2, i32* %70, align 4
  %71 = load i64, i64* %64, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %64, align 8
  br label %73

73:                                               ; preds = %25, %30, %51, %62, %29
  %74 = load %"class.spirv_cross::Variant"*, %"class.spirv_cross::Variant"** %16, align 8
  %75 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %74, i64 %15, i32 1
  %76 = load %"struct.spirv_cross::IVariant"*, %"struct.spirv_cross::IVariant"** %75, align 8
  %77 = icmp eq %"struct.spirv_cross::IVariant"* %76, null
  br i1 %77, label %78, label %90

78:                                               ; preds = %73
  %79 = zext i32 %1 to i64
  %80 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 %79
  %81 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 %79, i32 0, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 1
  tail call void @_ZN11spirv_cross11SmallVectorINS_7TypedIDILNS_5TypesE0EEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.29"* %80, i64 %83) #17
  %84 = getelementptr inbounds %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.29"* %80, i64 0, i32 0, i32 0
  %85 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %84, align 8
  %86 = load i64, i64* %81, align 8
  %87 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %85, i64 %86, i32 0
  store i32 %2, i32* %87, align 4
  %88 = load i64, i64* %81, align 8
  %89 = add i64 %88, 1
  store i64 %89, i64* %81, align 8
  br label %222

90:                                               ; preds = %73
  %91 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %74, i64 %15, i32 2
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, %1
  br i1 %93, label %222, label %94

94:                                               ; preds = %90
  %95 = zext i32 %92 to i64
  %96 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 %95
  %97 = getelementptr inbounds %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.29"* %96, i64 0, i32 0, i32 0
  %98 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %97, align 8
  %99 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 %95, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %98, i64 %100
  %102 = icmp eq i64 %100, 0
  %103 = ptrtoint %"class.spirv_cross::TypedID"* %98 to i64
  br i1 %102, label %112, label %104

104:                                              ; preds = %94, %109
  %105 = phi %"class.spirv_cross::TypedID"* [ %110, %109 ], [ %98, %94 ]
  %106 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %105, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, %2
  br i1 %108, label %112, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %105, i64 1
  %111 = icmp eq %"class.spirv_cross::TypedID"* %110, %101
  br i1 %111, label %167, label %104

112:                                              ; preds = %104, %94
  %113 = phi %"class.spirv_cross::TypedID"* [ %98, %94 ], [ %105, %104 ]
  %114 = ptrtoint %"class.spirv_cross::TypedID"* %113 to i64
  %115 = icmp eq %"class.spirv_cross::TypedID"* %113, %101
  br i1 %115, label %167, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %113, i64 1
  %118 = icmp eq %"class.spirv_cross::TypedID"* %117, %101
  br i1 %118, label %167, label %119

119:                                              ; preds = %116
  %120 = add i64 %100, -2
  %121 = getelementptr %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %98, i64 %120, i32 0
  %122 = ptrtoint i32* %121 to i64
  %123 = sub i64 %122, %114
  %124 = lshr i64 %123, 2
  %125 = add nuw nsw i64 %124, 1
  %126 = and i64 %125, 3
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %143, label %128

128:                                              ; preds = %119, %138
  %129 = phi %"class.spirv_cross::TypedID"* [ %140, %138 ], [ %117, %119 ]
  %130 = phi %"class.spirv_cross::TypedID"* [ %139, %138 ], [ %113, %119 ]
  %131 = phi i64 [ %141, %138 ], [ %126, %119 ]
  %132 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %129, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = icmp eq i32 %133, %2
  br i1 %134, label %138, label %135

135:                                              ; preds = %128
  %136 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %130, i64 0, i32 0
  store i32 %133, i32* %136, align 4
  %137 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %130, i64 1
  br label %138

138:                                              ; preds = %135, %128
  %139 = phi %"class.spirv_cross::TypedID"* [ %130, %128 ], [ %137, %135 ]
  %140 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %129, i64 1
  %141 = add i64 %131, -1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %128, !llvm.loop !20

143:                                              ; preds = %138, %119
  %144 = phi %"class.spirv_cross::TypedID"* [ undef, %119 ], [ %139, %138 ]
  %145 = phi %"class.spirv_cross::TypedID"* [ %117, %119 ], [ %140, %138 ]
  %146 = phi %"class.spirv_cross::TypedID"* [ %113, %119 ], [ %139, %138 ]
  %147 = icmp ult i64 %123, 12
  br i1 %147, label %162, label %148

148:                                              ; preds = %143, %242
  %149 = phi %"class.spirv_cross::TypedID"* [ %244, %242 ], [ %145, %143 ]
  %150 = phi %"class.spirv_cross::TypedID"* [ %243, %242 ], [ %146, %143 ]
  %151 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %149, i64 0, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = icmp eq i32 %152, %2
  br i1 %153, label %157, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %150, i64 0, i32 0
  store i32 %152, i32* %155, align 4
  %156 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %150, i64 1
  br label %157

157:                                              ; preds = %154, %148
  %158 = phi %"class.spirv_cross::TypedID"* [ %150, %148 ], [ %156, %154 ]
  %159 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %149, i64 1, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, %2
  br i1 %161, label %226, label %223

162:                                              ; preds = %242, %143
  %163 = phi %"class.spirv_cross::TypedID"* [ %144, %143 ], [ %243, %242 ]
  %164 = bitcast %"class.spirv_cross::SmallVector.29"* %96 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = load i64, i64* %99, align 8
  br label %167

167:                                              ; preds = %109, %162, %116, %112
  %168 = phi i64 [ %100, %112 ], [ %100, %116 ], [ %166, %162 ], [ %100, %109 ]
  %169 = phi i64 [ %103, %112 ], [ %103, %116 ], [ %165, %162 ], [ %103, %109 ]
  %170 = phi %"class.spirv_cross::TypedID"* [ %101, %112 ], [ %113, %116 ], [ %163, %162 ], [ %101, %109 ]
  %171 = ptrtoint %"class.spirv_cross::TypedID"* %170 to i64
  %172 = sub i64 %171, %169
  %173 = ashr exact i64 %172, 2
  %174 = icmp ult i64 %168, %173
  br i1 %174, label %175, label %210

175:                                              ; preds = %167
  tail call void @_ZN11spirv_cross11SmallVectorINS_7TypedIDILNS_5TypesE0EEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.29"* %96, i64 %173) #17
  %176 = load i64, i64* %99, align 8
  %177 = icmp ugt i64 %173, %176
  br i1 %177, label %178, label %210

178:                                              ; preds = %175
  %179 = sub i64 %173, %176
  %180 = xor i64 %176, -1
  %181 = add i64 %173, %180
  %182 = and i64 %179, 3
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %192, label %184

184:                                              ; preds = %178, %184
  %185 = phi i64 [ %189, %184 ], [ %176, %178 ]
  %186 = phi i64 [ %190, %184 ], [ %182, %178 ]
  %187 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %97, align 8
  %188 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %187, i64 %185, i32 0
  store i32 0, i32* %188, align 4
  %189 = add nuw i64 %185, 1
  %190 = add i64 %186, -1
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %184, !llvm.loop !21

192:                                              ; preds = %184, %178
  %193 = phi i64 [ %176, %178 ], [ %189, %184 ]
  %194 = icmp ult i64 %181, 3
  br i1 %194, label %210, label %195

195:                                              ; preds = %192, %195
  %196 = phi i64 [ %208, %195 ], [ %193, %192 ]
  %197 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %97, align 8
  %198 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %197, i64 %196, i32 0
  store i32 0, i32* %198, align 4
  %199 = add nuw i64 %196, 1
  %200 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %97, align 8
  %201 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %200, i64 %199, i32 0
  store i32 0, i32* %201, align 4
  %202 = add nuw i64 %196, 2
  %203 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %97, align 8
  %204 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %203, i64 %202, i32 0
  store i32 0, i32* %204, align 4
  %205 = add nuw i64 %196, 3
  %206 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %97, align 8
  %207 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %206, i64 %205, i32 0
  store i32 0, i32* %207, align 4
  %208 = add nuw i64 %196, 4
  %209 = icmp eq i64 %208, %173
  br i1 %209, label %210, label %195

210:                                              ; preds = %192, %195, %167, %175
  store i64 %173, i64* %99, align 8
  %211 = zext i32 %1 to i64
  %212 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 %211
  %213 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 %211, i32 0, i32 1
  %214 = load i64, i64* %213, align 8
  %215 = add i64 %214, 1
  tail call void @_ZN11spirv_cross11SmallVectorINS_7TypedIDILNS_5TypesE0EEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.29"* %212, i64 %215) #17
  %216 = getelementptr inbounds %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.29"* %212, i64 0, i32 0, i32 0
  %217 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %216, align 8
  %218 = load i64, i64* %213, align 8
  %219 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %217, i64 %218, i32 0
  store i32 %2, i32* %219, align 4
  %220 = load i64, i64* %213, align 8
  %221 = add i64 %220, 1
  store i64 %221, i64* %213, align 8
  br label %222

222:                                              ; preds = %90, %210, %21, %78
  ret void

223:                                              ; preds = %157
  %224 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %158, i64 0, i32 0
  store i32 %160, i32* %224, align 4
  %225 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %158, i64 1
  br label %226

226:                                              ; preds = %223, %157
  %227 = phi %"class.spirv_cross::TypedID"* [ %158, %157 ], [ %225, %223 ]
  %228 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %149, i64 2, i32 0
  %229 = load i32, i32* %228, align 4
  %230 = icmp eq i32 %229, %2
  br i1 %230, label %234, label %231

231:                                              ; preds = %226
  %232 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %227, i64 0, i32 0
  store i32 %229, i32* %232, align 4
  %233 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %227, i64 1
  br label %234

234:                                              ; preds = %231, %226
  %235 = phi %"class.spirv_cross::TypedID"* [ %227, %226 ], [ %233, %231 ]
  %236 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %149, i64 3, i32 0
  %237 = load i32, i32* %236, align 4
  %238 = icmp eq i32 %237, %2
  br i1 %238, label %242, label %239

239:                                              ; preds = %234
  %240 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %235, i64 0, i32 0
  store i32 %237, i32* %240, align 4
  %241 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %235, i64 1
  br label %242

242:                                              ; preds = %239, %234
  %243 = phi %"class.spirv_cross::TypedID"* [ %235, %234 ], [ %241, %239 ]
  %244 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %149, i64 4
  %245 = icmp eq %"class.spirv_cross::TypedID"* %244, %101
  br i1 %245, label %162, label %148
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross16report_and_abortERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #6 comdat {
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %3 = tail call i32 @fflush(%struct._IO_FILE* %2)
  tail call void @abort() #19
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = tail call i64 @strlen(i8* %1) #17
  %4 = icmp ugt i64 %3, -17
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %6) #19
  unreachable

7:                                                ; preds = %2
  %8 = icmp ult i64 %3, 23
  br i1 %8, label %17, label %9

9:                                                ; preds = %7
  %10 = add nuw i64 %3, 16
  %11 = and i64 %10, -16
  %12 = tail call i8* @_Znwm(i64 %11) #18
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %12, i8** %13, align 8
  %14 = or i64 %11, -9223372036854775808
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %3, i64* %16, align 8
  br label %23

17:                                               ; preds = %7
  %18 = trunc i64 %3 to i8
  %19 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  store i8 %18, i8* %20, align 1
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %22 = icmp eq i64 %3, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %17, %9
  %24 = phi i8* [ %12, %9 ], [ %21, %17 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 %1, i64 %3, i1 false) #17
  br label %25

25:                                               ; preds = %17, %23
  %26 = phi i8* [ %21, %17 ], [ %24, %23 ]
  %27 = getelementptr inbounds i8, i8* %26, i64 %3
  store i8 0, i8* %27, align 1
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"struct.spirv_cross::Meta"* @_ZN11spirv_cross8ParsedIR9find_metaENS_7TypedIDILNS_5TypesE0EEE(%"class.spirv_cross::ParsedIR"* nocapture readonly, i32) local_unnamed_addr #4 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %58, label %7

7:                                                ; preds = %2
  %8 = tail call i64 @llvm.ctpop.i64(i64 %5) #17, !range !5
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = add i64 %5, 4294967295
  %12 = and i64 %11, %3
  br label %17

13:                                               ; preds = %7
  %14 = icmp ugt i64 %5, %3
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = urem i64 %3, %5
  br label %17

17:                                               ; preds = %15, %13, %10
  %18 = phi i64 [ %12, %10 ], [ %16, %15 ], [ %3, %13 ]
  %19 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %20, i64 %18
  %22 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base"* %22, null
  br i1 %23, label %58, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %22, i64 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %58, label %28

28:                                               ; preds = %24
  %29 = add i64 %5, -1
  br label %30

30:                                               ; preds = %51, %28
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %26, %28 ], [ %53, %51 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 1
  %33 = bitcast %"struct.std::__1::__hash_node_base"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, %3
  br i1 %35, label %46, label %36

36:                                               ; preds = %30
  br i1 %9, label %39, label %37

37:                                               ; preds = %36
  %38 = and i64 %34, %29
  br label %43

39:                                               ; preds = %36
  %40 = icmp ult i64 %34, %5
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %34, %5
  br label %43

43:                                               ; preds = %41, %39, %37
  %44 = phi i64 [ %38, %37 ], [ %42, %41 ], [ %34, %39 ]
  %45 = icmp eq i64 %44, %18
  br i1 %45, label %51, label %58

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 2
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %1
  br i1 %50, label %55, label %51

51:                                               ; preds = %46, %43
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base"* %53, null
  br i1 %54, label %58, label %30

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 3
  %57 = bitcast %"struct.std::__1::__hash_node_base"* %56 to %"struct.spirv_cross::Meta"*
  br label %58

58:                                               ; preds = %51, %43, %24, %2, %17, %55
  %59 = phi %"struct.spirv_cross::Meta"* [ %57, %55 ], [ null, %17 ], [ null, %2 ], [ null, %24 ], [ null, %43 ], [ null, %51 ]
  ret %"struct.spirv_cross::Meta"* %59
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK11spirv_cross8ParsedIR21create_loop_hard_lockEv(%"class.spirv_cross::ParsedIR::LoopLock"* noalias nocapture sret, %"class.spirv_cross::ParsedIR"*) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 16
  %4 = getelementptr inbounds %"class.spirv_cross::ParsedIR::LoopLock", %"class.spirv_cross::ParsedIR::LoopLock"* %0, i64 0, i32 0
  store i32* %3, i32** %4, align 8
  %5 = icmp eq i32* %3, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = load i32, i32* %3, align 4
  %8 = add i32 %7, 1
  store i32 %8, i32* %3, align 4
  br label %9

9:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK11spirv_cross8ParsedIR21create_loop_soft_lockEv(%"class.spirv_cross::ParsedIR::LoopLock"* noalias nocapture sret, %"class.spirv_cross::ParsedIR"*) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %1, i64 0, i32 17
  %4 = getelementptr inbounds %"class.spirv_cross::ParsedIR::LoopLock", %"class.spirv_cross::ParsedIR::LoopLock"* %0, i64 0, i32 0
  store i32* %3, i32** %4, align 8
  %5 = icmp eq i32* %3, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = load i32, i32* %3, align 4
  %8 = add i32 %7, 1
  store i32 %8, i32* %3, align 4
  br label %9

9:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN11spirv_cross8ParsedIR8LoopLockD2Ev(%"class.spirv_cross::ParsedIR::LoopLock"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ParsedIR::LoopLock", %"class.spirv_cross::ParsedIR::LoopLock"* %0, i64 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = load i32, i32* %3, align 4
  %7 = add i32 %6, -1
  store i32 %7, i32* %3, align 4
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN11spirv_cross8ParsedIR8LoopLockC2EPj(%"class.spirv_cross::ParsedIR::LoopLock"* nocapture, i32*) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.spirv_cross::ParsedIR::LoopLock", %"class.spirv_cross::ParsedIR::LoopLock"* %0, i64 0, i32 0
  store i32* %1, i32** %3, align 8
  %4 = icmp eq i32* %1, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %2
  %6 = load i32, i32* %1, align 4
  %7 = add i32 %6, 1
  store i32 %7, i32* %1, align 4
  br label %8

8:                                                ; preds = %2, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN11spirv_cross8ParsedIR8LoopLockC2EOS1_(%"class.spirv_cross::ParsedIR::LoopLock"* nocapture, %"class.spirv_cross::ParsedIR::LoopLock"* nocapture dereferenceable(8)) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.spirv_cross::ParsedIR::LoopLock", %"class.spirv_cross::ParsedIR::LoopLock"* %0, i64 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = load i32, i32* %4, align 4
  %8 = add i32 %7, -1
  store i32 %8, i32* %4, align 4
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.spirv_cross::ParsedIR::LoopLock", %"class.spirv_cross::ParsedIR::LoopLock"* %1, i64 0, i32 0
  %11 = bitcast %"class.spirv_cross::ParsedIR::LoopLock"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.spirv_cross::ParsedIR::LoopLock"* %0 to i64*
  store i64 %12, i64* %13, align 8
  store i32* null, i32** %10, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(8) %"class.spirv_cross::ParsedIR::LoopLock"* @_ZN11spirv_cross8ParsedIR8LoopLockaSEOS1_(%"class.spirv_cross::ParsedIR::LoopLock"* returned, %"class.spirv_cross::ParsedIR::LoopLock"* nocapture dereferenceable(8)) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.spirv_cross::ParsedIR::LoopLock", %"class.spirv_cross::ParsedIR::LoopLock"* %0, i64 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = load i32, i32* %4, align 4
  %8 = add i32 %7, -1
  store i32 %8, i32* %4, align 4
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.spirv_cross::ParsedIR::LoopLock", %"class.spirv_cross::ParsedIR::LoopLock"* %1, i64 0, i32 0
  %11 = bitcast %"class.spirv_cross::ParsedIR::LoopLock"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.spirv_cross::ParsedIR::LoopLock"* %0 to i64*
  store i64 %12, i64* %13, align 8
  store i32* null, i32** %10, align 8
  ret %"class.spirv_cross::ParsedIR::LoopLock"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11spirv_cross8ParsedIR18make_constant_nullEjjb(%"class.spirv_cross::ParsedIR"*, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca <{ [4 x %"union.spirv_cross::SPIRConstant::Constant"], [4 x %"class.spirv_cross::TypedID"] }>, align 8
  %6 = alloca [36 x i8], align 4
  %7 = alloca [36 x i8], align 4
  %8 = alloca [36 x i8], align 4
  %9 = alloca [20 x i8], align 4
  %10 = alloca <{ [4 x %"union.spirv_cross::SPIRConstant::Constant"], [4 x %"class.spirv_cross::TypedID"] }>, align 8
  %11 = alloca [36 x i8], align 4
  %12 = alloca [36 x i8], align 4
  %13 = alloca [36 x i8], align 4
  %14 = alloca [20 x i8], align 4
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca i32, align 4
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.spirv_cross::SmallVector.127", align 8
  %20 = alloca i32*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i8, align 1
  %23 = alloca %"class.spirv_cross::SmallVector.127", align 8
  %24 = alloca i32*, align 8
  %25 = alloca i32, align 4
  %26 = alloca i8, align 1
  store i32 %2, i32* %17, align 4
  %27 = zext i32 %2 to i64
  %28 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.spirv_cross::Variant"*, %"class.spirv_cross::Variant"** %28, align 8
  %30 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %29, i64 %27, i32 1
  %31 = load %"struct.spirv_cross::IVariant"*, %"struct.spirv_cross::IVariant"** %30, align 8
  %32 = icmp eq %"struct.spirv_cross::IVariant"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %4
  %34 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #17
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0)) #17
  call void @_ZN11spirv_cross16report_and_abortERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %15) #19
  unreachable

35:                                               ; preds = %4
  %36 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %29, i64 %27, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  %40 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #17
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0)) #17
  call void @_ZN11spirv_cross16report_and_abortERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %16) #19
  unreachable

41:                                               ; preds = %35
  %42 = bitcast %"struct.spirv_cross::IVariant"* %31 to %"struct.spirv_cross::SPIRType"*
  %43 = getelementptr inbounds %"struct.spirv_cross::IVariant", %"struct.spirv_cross::IVariant"* %31, i64 7, i32 2, i64 0
  %44 = load i8, i8* %43, align 4, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %94, label %46

46:                                               ; preds = %41
  br i1 %3, label %47, label %49

47:                                               ; preds = %46
  tail call void @_ZN11spirv_cross8ParsedIR12add_typed_idENS_5TypesENS_7TypedIDILS1_0EEE(%"class.spirv_cross::ParsedIR"* %0, i32 3, i32 %1)
  %48 = load %"class.spirv_cross::Variant"*, %"class.spirv_cross::Variant"** %28, align 8
  br label %49

49:                                               ; preds = %47, %46
  %50 = phi %"class.spirv_cross::Variant"* [ %48, %47 ], [ %29, %46 ]
  %51 = zext i32 %1 to i64
  %52 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %50, i64 %51
  %53 = call %"struct.spirv_cross::SPIRConstant"* @_ZN11spirv_cross7Variant16allocate_and_setINS_12SPIRConstantEJRjEEEPT_NS_5TypesEDpOT0_(%"class.spirv_cross::Variant"* %52, i32 3, i32* nonnull dereferenceable(4) %17) #17
  %54 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %53, i64 0, i32 0, i32 1, i32 0
  store i32 %1, i32* %54, align 8
  %55 = bitcast <{ [4 x %"union.spirv_cross::SPIRConstant::Constant"], [4 x %"class.spirv_cross::TypedID"] }>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %55)
  %56 = getelementptr inbounds [36 x i8], [36 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %56)
  %57 = getelementptr inbounds [36 x i8], [36 x i8]* %12, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %57)
  %58 = getelementptr inbounds [36 x i8], [36 x i8]* %13, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %58)
  %59 = getelementptr inbounds [20 x i8], [20 x i8]* %14, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %59)
  %60 = getelementptr inbounds <{ [4 x %"union.spirv_cross::SPIRConstant::Constant"], [4 x %"class.spirv_cross::TypedID"] }>, <{ [4 x %"union.spirv_cross::SPIRConstant::Constant"], [4 x %"class.spirv_cross::TypedID"] }>* %10, i64 0, i32 1
  %61 = bitcast [4 x %"class.spirv_cross::TypedID"]* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false)
  %62 = bitcast [36 x i8]* %11 to i32*
  store i32 0, i32* %62, align 4
  %63 = bitcast [36 x i8]* %12 to i32*
  store i32 0, i32* %63, align 4
  %64 = bitcast [36 x i8]* %13 to i32*
  store i32 0, i32* %64, align 4
  %65 = bitcast [20 x i8]* %14 to i32*
  store i32 0, i32* %65, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 32, i1 false)
  %66 = getelementptr inbounds [36 x i8], [36 x i8]* %11, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %66, i8 0, i64 32, i1 false)
  %67 = getelementptr inbounds [36 x i8], [36 x i8]* %12, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %67, i8 0, i64 32, i1 false)
  %68 = getelementptr inbounds [36 x i8], [36 x i8]* %13, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %68, i8 0, i64 32, i1 false)
  %69 = getelementptr inbounds [20 x i8], [20 x i8]* %14, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %69, i8 0, i64 16, i1 false)
  %70 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %53, i64 0, i32 2
  %71 = bitcast %"struct.spirv_cross::SPIRConstant::ConstantMatrix"* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* nonnull align 8 %55, i64 48, i1 false)
  %72 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %53, i64 0, i32 2, i32 0, i64 0, i32 2
  store i32 1, i32* %72, align 8
  %73 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %53, i64 0, i32 2, i32 0, i64 0, i32 3, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* nonnull align 4 %56, i64 36, i1 false)
  %74 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %53, i64 0, i32 2, i32 0, i64 1, i32 1
  %75 = bitcast [4 x %"class.spirv_cross::TypedID"]* %74 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 16, i1 false)
  %76 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %53, i64 0, i32 2, i32 0, i64 1, i32 2
  store i32 1, i32* %76, align 8
  %77 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %53, i64 0, i32 2, i32 0, i64 1, i32 3, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %77, i8* nonnull align 4 %57, i64 36, i1 false)
  %78 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %53, i64 0, i32 2, i32 0, i64 2, i32 1
  %79 = bitcast [4 x %"class.spirv_cross::TypedID"]* %78 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 16, i1 false)
  %80 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %53, i64 0, i32 2, i32 0, i64 2, i32 2
  store i32 1, i32* %80, align 8
  %81 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %53, i64 0, i32 2, i32 0, i64 2, i32 3, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %81, i8* nonnull align 4 %58, i64 36, i1 false)
  %82 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %53, i64 0, i32 2, i32 0, i64 3, i32 1
  %83 = bitcast [4 x %"class.spirv_cross::TypedID"]* %82 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 16, i1 false)
  %84 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %53, i64 0, i32 2, i32 0, i64 3, i32 2
  store i32 1, i32* %84, align 8
  %85 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %53, i64 0, i32 2, i32 0, i64 3, i32 3, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %85, i8* nonnull align 4 %59, i64 20, i1 false)
  %86 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %53, i64 0, i32 2, i32 2
  store i32 1, i32* %86, align 8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %55)
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %56)
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %57)
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %58)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %59)
  %87 = getelementptr inbounds %"struct.spirv_cross::IVariant", %"struct.spirv_cross::IVariant"* %31, i64 1, i32 1, i32 0
  %88 = load i32, i32* %87, align 8
  store i32 %88, i32* %86, align 8
  %89 = getelementptr inbounds %"struct.spirv_cross::SPIRType", %"struct.spirv_cross::SPIRType"* %42, i64 0, i32 3
  %90 = load i32, i32* %89, align 4
  store i32 %90, i32* %72, align 8
  %91 = load i32, i32* %89, align 4
  store i32 %91, i32* %76, align 8
  %92 = load i32, i32* %89, align 4
  store i32 %92, i32* %80, align 8
  %93 = load i32, i32* %89, align 4
  store i32 %93, i32* %84, align 8
  br label %351

94:                                               ; preds = %41
  %95 = getelementptr inbounds %"struct.spirv_cross::IVariant", %"struct.spirv_cross::IVariant"* %31, i64 2
  %96 = getelementptr inbounds %"struct.spirv_cross::IVariant", %"struct.spirv_cross::IVariant"* %31, i64 2, i32 1
  %97 = bitcast %"class.spirv_cross::TypedID"* %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %209, label %100

100:                                              ; preds = %94
  %101 = tail call i32 @_ZN11spirv_cross8ParsedIR17increase_bound_byEj(%"class.spirv_cross::ParsedIR"* %0, i32 1)
  %102 = getelementptr inbounds %"struct.spirv_cross::SPIRType", %"struct.spirv_cross::SPIRType"* %42, i64 0, i32 15, i32 0
  %103 = load i32, i32* %102, align 4
  tail call void @_ZN11spirv_cross8ParsedIR18make_constant_nullEjjb(%"class.spirv_cross::ParsedIR"* %0, i32 %101, i32 %103, i1 zeroext %3)
  %104 = getelementptr inbounds %"struct.spirv_cross::IVariant", %"struct.spirv_cross::IVariant"* %31, i64 5, i32 1
  %105 = bitcast %"class.spirv_cross::TypedID"* %104 to i8**
  %106 = load i8*, i8** %105, align 8
  %107 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %104, i64 2
  %108 = bitcast %"class.spirv_cross::TypedID"* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = add i64 %109, -1
  %111 = getelementptr inbounds i8, i8* %106, i64 %110
  %112 = load i8, i8* %111, align 1, !range !2
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %114, label %116

114:                                              ; preds = %100
  %115 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #17
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %18, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2, i64 0, i64 0))
  call void @_ZN11spirv_cross16report_and_abortERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %18) #20
  unreachable

116:                                              ; preds = %100
  %117 = bitcast %"class.spirv_cross::SmallVector.127"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %117) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 -86, i64 56, i1 false)
  %118 = bitcast %"struct.spirv_cross::IVariant"* %95 to i32**
  %119 = load i32*, i32** %118, align 8
  %120 = load i64, i64* %97, align 8
  %121 = add i64 %120, -1
  %122 = getelementptr inbounds i32, i32* %119, i64 %121
  %123 = load i32, i32* %122, align 4
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds %"class.spirv_cross::SmallVector.127", %"class.spirv_cross::SmallVector.127"* %19, i64 0, i32 2
  %126 = bitcast %"class.spirv_cross::SmallVector.127"* %19 to %"class.spirv_cross::AlignedBuffer.129"**
  %127 = getelementptr inbounds %"class.spirv_cross::SmallVector.127", %"class.spirv_cross::SmallVector.127"* %19, i64 0, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.129"* %125, %"class.spirv_cross::AlignedBuffer.129"** %126, align 8
  %128 = bitcast i64* %127 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %128, align 8
  %129 = icmp eq i32 %123, 0
  br i1 %129, label %166, label %130

130:                                              ; preds = %116
  call void @_ZN11spirv_cross11SmallVectorIjLm8EE7reserveEm(%"class.spirv_cross::SmallVector.127"* nonnull %19, i64 %124) #17
  %131 = load i64, i64* %127, align 8
  %132 = icmp ult i64 %131, %124
  br i1 %132, label %133, label %166

133:                                              ; preds = %130
  %134 = getelementptr inbounds %"class.spirv_cross::SmallVector.127", %"class.spirv_cross::SmallVector.127"* %19, i64 0, i32 0, i32 0
  %135 = sub i64 %124, %131
  %136 = xor i64 %131, -1
  %137 = add i64 %136, %124
  %138 = and i64 %135, 3
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %148, label %140

140:                                              ; preds = %133, %140
  %141 = phi i64 [ %145, %140 ], [ %131, %133 ]
  %142 = phi i64 [ %146, %140 ], [ %138, %133 ]
  %143 = load i32*, i32** %134, align 8
  %144 = getelementptr inbounds i32, i32* %143, i64 %141
  store i32 0, i32* %144, align 4
  %145 = add nuw i64 %141, 1
  %146 = add i64 %142, -1
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %140, !llvm.loop !22

148:                                              ; preds = %140, %133
  %149 = phi i64 [ %131, %133 ], [ %145, %140 ]
  %150 = icmp ult i64 %137, 3
  br i1 %150, label %166, label %151

151:                                              ; preds = %148, %151
  %152 = phi i64 [ %164, %151 ], [ %149, %148 ]
  %153 = load i32*, i32** %134, align 8
  %154 = getelementptr inbounds i32, i32* %153, i64 %152
  store i32 0, i32* %154, align 4
  %155 = add nuw i64 %152, 1
  %156 = load i32*, i32** %134, align 8
  %157 = getelementptr inbounds i32, i32* %156, i64 %155
  store i32 0, i32* %157, align 4
  %158 = add nuw i64 %152, 2
  %159 = load i32*, i32** %134, align 8
  %160 = getelementptr inbounds i32, i32* %159, i64 %158
  store i32 0, i32* %160, align 4
  %161 = add nuw i64 %152, 3
  %162 = load i32*, i32** %134, align 8
  %163 = getelementptr inbounds i32, i32* %162, i64 %161
  store i32 0, i32* %163, align 4
  %164 = add nuw i64 %152, 4
  %165 = icmp eq i64 %164, %124
  br i1 %165, label %166, label %151

166:                                              ; preds = %148, %151, %116, %130
  store i64 %124, i64* %127, align 8
  %167 = load i32*, i32** %118, align 8
  %168 = load i64, i64* %97, align 8
  %169 = add i64 %168, -1
  %170 = getelementptr inbounds i32, i32* %167, i64 %169
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %175, label %173

173:                                              ; preds = %166
  %174 = getelementptr inbounds %"class.spirv_cross::SmallVector.127", %"class.spirv_cross::SmallVector.127"* %19, i64 0, i32 0, i32 0
  br label %176

175:                                              ; preds = %176, %166
  br i1 %3, label %188, label %189

176:                                              ; preds = %173, %176
  %177 = phi i64 [ 0, %173 ], [ %180, %176 ]
  %178 = load i32*, i32** %174, align 8
  %179 = getelementptr inbounds i32, i32* %178, i64 %177
  store i32 %101, i32* %179, align 4
  %180 = add nuw nsw i64 %177, 1
  %181 = load i32*, i32** %118, align 8
  %182 = load i64, i64* %97, align 8
  %183 = add i64 %182, -1
  %184 = getelementptr inbounds i32, i32* %181, i64 %183
  %185 = load i32, i32* %184, align 4
  %186 = zext i32 %185 to i64
  %187 = icmp ult i64 %180, %186
  br i1 %187, label %176, label %175

188:                                              ; preds = %175
  call void @_ZN11spirv_cross8ParsedIR12add_typed_idENS_5TypesENS_7TypedIDILS1_0EEE(%"class.spirv_cross::ParsedIR"* %0, i32 3, i32 %1)
  br label %189

189:                                              ; preds = %188, %175
  %190 = zext i32 %1 to i64
  %191 = load %"class.spirv_cross::Variant"*, %"class.spirv_cross::Variant"** %28, align 8
  %192 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %191, i64 %190
  %193 = bitcast i32** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #17
  %194 = bitcast %"class.spirv_cross::SmallVector.127"* %19 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = bitcast i32** %20 to i64*
  store i64 %195, i64* %196, align 8
  %197 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %197) #17
  %198 = load i64, i64* %127, align 8
  %199 = trunc i64 %198 to i32
  store i32 %199, i32* %21, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %22) #17
  store i8 0, i8* %22, align 1
  %200 = call %"struct.spirv_cross::SPIRConstant"* @_ZN11spirv_cross7Variant16allocate_and_setINS_12SPIRConstantEJRjPjjbEEEPT_NS_5TypesEDpOT0_(%"class.spirv_cross::Variant"* %192, i32 3, i32* nonnull dereferenceable(4) %17, i32** nonnull dereferenceable(8) %20, i32* nonnull dereferenceable(4) %21, i8* nonnull dereferenceable(1) %22) #17
  %201 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %200, i64 0, i32 0, i32 1, i32 0
  store i32 %1, i32* %201, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %22) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %197) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #17
  store i64 0, i64* %127, align 8
  %202 = getelementptr inbounds %"class.spirv_cross::SmallVector.127", %"class.spirv_cross::SmallVector.127"* %19, i64 0, i32 0, i32 0
  %203 = load i32*, i32** %202, align 8
  %204 = bitcast %"class.spirv_cross::AlignedBuffer.129"* %125 to i32*
  %205 = icmp eq i32* %203, %204
  br i1 %205, label %208, label %206

206:                                              ; preds = %189
  %207 = bitcast i32* %203 to i8*
  call void @free(i8* %207) #17
  br label %208

208:                                              ; preds = %189, %206
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %117) #17
  br label %351

209:                                              ; preds = %94
  %210 = getelementptr inbounds %"struct.spirv_cross::IVariant", %"struct.spirv_cross::IVariant"* %31, i64 8, i32 1
  %211 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %210, i64 2
  %212 = bitcast %"class.spirv_cross::TypedID"* %211 to i64*
  %213 = load i64, i64* %212, align 8
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %303, label %215

215:                                              ; preds = %209
  %216 = trunc i64 %213 to i32
  %217 = tail call i32 @_ZN11spirv_cross8ParsedIR17increase_bound_byEj(%"class.spirv_cross::ParsedIR"* %0, i32 %216)
  %218 = bitcast %"class.spirv_cross::SmallVector.127"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %218) #17
  %219 = getelementptr inbounds %"class.spirv_cross::SmallVector.127", %"class.spirv_cross::SmallVector.127"* %23, i64 0, i32 2, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %219, i8 -86, i64 32, i1 false)
  %220 = load i64, i64* %212, align 8
  %221 = getelementptr inbounds %"class.spirv_cross::SmallVector.127", %"class.spirv_cross::SmallVector.127"* %23, i64 0, i32 2
  %222 = bitcast %"class.spirv_cross::SmallVector.127"* %23 to %"class.spirv_cross::AlignedBuffer.129"**
  %223 = getelementptr inbounds %"class.spirv_cross::SmallVector.127", %"class.spirv_cross::SmallVector.127"* %23, i64 0, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.129"* %221, %"class.spirv_cross::AlignedBuffer.129"** %222, align 8
  %224 = bitcast i64* %223 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %224, align 8
  %225 = icmp eq i64 %220, 0
  br i1 %225, label %262, label %226

226:                                              ; preds = %215
  call void @_ZN11spirv_cross11SmallVectorIjLm8EE7reserveEm(%"class.spirv_cross::SmallVector.127"* nonnull %23, i64 %220) #17
  %227 = load i64, i64* %223, align 8
  %228 = icmp ugt i64 %220, %227
  br i1 %228, label %229, label %262

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"class.spirv_cross::SmallVector.127", %"class.spirv_cross::SmallVector.127"* %23, i64 0, i32 0, i32 0
  %231 = sub i64 %220, %227
  %232 = xor i64 %227, -1
  %233 = add i64 %220, %232
  %234 = and i64 %231, 3
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %244, label %236

236:                                              ; preds = %229, %236
  %237 = phi i64 [ %241, %236 ], [ %227, %229 ]
  %238 = phi i64 [ %242, %236 ], [ %234, %229 ]
  %239 = load i32*, i32** %230, align 8
  %240 = getelementptr inbounds i32, i32* %239, i64 %237
  store i32 0, i32* %240, align 4
  %241 = add nuw i64 %237, 1
  %242 = add i64 %238, -1
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %244, label %236, !llvm.loop !23

244:                                              ; preds = %236, %229
  %245 = phi i64 [ %227, %229 ], [ %241, %236 ]
  %246 = icmp ult i64 %233, 3
  br i1 %246, label %262, label %247

247:                                              ; preds = %244, %247
  %248 = phi i64 [ %260, %247 ], [ %245, %244 ]
  %249 = load i32*, i32** %230, align 8
  %250 = getelementptr inbounds i32, i32* %249, i64 %248
  store i32 0, i32* %250, align 4
  %251 = add nuw i64 %248, 1
  %252 = load i32*, i32** %230, align 8
  %253 = getelementptr inbounds i32, i32* %252, i64 %251
  store i32 0, i32* %253, align 4
  %254 = add nuw i64 %248, 2
  %255 = load i32*, i32** %230, align 8
  %256 = getelementptr inbounds i32, i32* %255, i64 %254
  store i32 0, i32* %256, align 4
  %257 = add nuw i64 %248, 3
  %258 = load i32*, i32** %230, align 8
  %259 = getelementptr inbounds i32, i32* %258, i64 %257
  store i32 0, i32* %259, align 4
  %260 = add nuw i64 %248, 4
  %261 = icmp eq i64 %260, %220
  br i1 %261, label %262, label %247

262:                                              ; preds = %244, %247, %215, %226
  store i64 %220, i64* %223, align 8
  %263 = load i64, i64* %212, align 8
  %264 = icmp eq i64 %263, 0
  br i1 %264, label %268, label %265

265:                                              ; preds = %262
  %266 = bitcast %"class.spirv_cross::TypedID"* %210 to %"class.spirv_cross::TypedID.135"**
  %267 = getelementptr inbounds %"class.spirv_cross::SmallVector.127", %"class.spirv_cross::SmallVector.127"* %23, i64 0, i32 0, i32 0
  br label %269

268:                                              ; preds = %269, %262
  br i1 %3, label %282, label %283

269:                                              ; preds = %265, %269
  %270 = phi i64 [ 0, %265 ], [ %279, %269 ]
  %271 = phi i32 [ 0, %265 ], [ %278, %269 ]
  %272 = add i32 %271, %217
  %273 = load %"class.spirv_cross::TypedID.135"*, %"class.spirv_cross::TypedID.135"** %266, align 8
  %274 = getelementptr inbounds %"class.spirv_cross::TypedID.135", %"class.spirv_cross::TypedID.135"* %273, i64 %270, i32 0
  %275 = load i32, i32* %274, align 4
  call void @_ZN11spirv_cross8ParsedIR18make_constant_nullEjjb(%"class.spirv_cross::ParsedIR"* %0, i32 %272, i32 %275, i1 zeroext %3)
  %276 = load i32*, i32** %267, align 8
  %277 = getelementptr inbounds i32, i32* %276, i64 %270
  store i32 %272, i32* %277, align 4
  %278 = add i32 %271, 1
  %279 = zext i32 %278 to i64
  %280 = load i64, i64* %212, align 8
  %281 = icmp ugt i64 %280, %279
  br i1 %281, label %269, label %268

282:                                              ; preds = %268
  call void @_ZN11spirv_cross8ParsedIR12add_typed_idENS_5TypesENS_7TypedIDILS1_0EEE(%"class.spirv_cross::ParsedIR"* %0, i32 3, i32 %1)
  br label %283

283:                                              ; preds = %282, %268
  %284 = zext i32 %1 to i64
  %285 = load %"class.spirv_cross::Variant"*, %"class.spirv_cross::Variant"** %28, align 8
  %286 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %285, i64 %284
  %287 = bitcast i32** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %287) #17
  %288 = bitcast %"class.spirv_cross::SmallVector.127"* %23 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = bitcast i32** %24 to i64*
  store i64 %289, i64* %290, align 8
  %291 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %291) #17
  %292 = load i64, i64* %223, align 8
  %293 = trunc i64 %292 to i32
  store i32 %293, i32* %25, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %26) #17
  store i8 0, i8* %26, align 1
  %294 = call %"struct.spirv_cross::SPIRConstant"* @_ZN11spirv_cross7Variant16allocate_and_setINS_12SPIRConstantEJRjPjjbEEEPT_NS_5TypesEDpOT0_(%"class.spirv_cross::Variant"* %286, i32 3, i32* nonnull dereferenceable(4) %17, i32** nonnull dereferenceable(8) %24, i32* nonnull dereferenceable(4) %25, i8* nonnull dereferenceable(1) %26) #17
  %295 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %294, i64 0, i32 0, i32 1, i32 0
  store i32 %1, i32* %295, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %26) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %291) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %287) #17
  store i64 0, i64* %223, align 8
  %296 = getelementptr inbounds %"class.spirv_cross::SmallVector.127", %"class.spirv_cross::SmallVector.127"* %23, i64 0, i32 0, i32 0
  %297 = load i32*, i32** %296, align 8
  %298 = bitcast %"class.spirv_cross::AlignedBuffer.129"* %221 to i32*
  %299 = icmp eq i32* %297, %298
  br i1 %299, label %302, label %300

300:                                              ; preds = %283
  %301 = bitcast i32* %297 to i8*
  call void @free(i8* %301) #17
  br label %302

302:                                              ; preds = %283, %300
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %218) #17
  br label %351

303:                                              ; preds = %209
  br i1 %3, label %304, label %306

304:                                              ; preds = %303
  tail call void @_ZN11spirv_cross8ParsedIR12add_typed_idENS_5TypesENS_7TypedIDILS1_0EEE(%"class.spirv_cross::ParsedIR"* %0, i32 3, i32 %1)
  %305 = load %"class.spirv_cross::Variant"*, %"class.spirv_cross::Variant"** %28, align 8
  br label %306

306:                                              ; preds = %304, %303
  %307 = phi %"class.spirv_cross::Variant"* [ %305, %304 ], [ %29, %303 ]
  %308 = zext i32 %1 to i64
  %309 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %307, i64 %308
  %310 = call %"struct.spirv_cross::SPIRConstant"* @_ZN11spirv_cross7Variant16allocate_and_setINS_12SPIRConstantEJRjEEEPT_NS_5TypesEDpOT0_(%"class.spirv_cross::Variant"* %309, i32 3, i32* nonnull dereferenceable(4) %17) #17
  %311 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %310, i64 0, i32 0, i32 1, i32 0
  store i32 %1, i32* %311, align 8
  %312 = bitcast <{ [4 x %"union.spirv_cross::SPIRConstant::Constant"], [4 x %"class.spirv_cross::TypedID"] }>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %312)
  %313 = getelementptr inbounds [36 x i8], [36 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %313)
  %314 = getelementptr inbounds [36 x i8], [36 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %314)
  %315 = getelementptr inbounds [36 x i8], [36 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %315)
  %316 = getelementptr inbounds [20 x i8], [20 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %316)
  %317 = getelementptr inbounds <{ [4 x %"union.spirv_cross::SPIRConstant::Constant"], [4 x %"class.spirv_cross::TypedID"] }>, <{ [4 x %"union.spirv_cross::SPIRConstant::Constant"], [4 x %"class.spirv_cross::TypedID"] }>* %5, i64 0, i32 1
  %318 = bitcast [4 x %"class.spirv_cross::TypedID"]* %317 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %318, i8 0, i64 16, i1 false)
  %319 = bitcast [36 x i8]* %6 to i32*
  store i32 0, i32* %319, align 4
  %320 = bitcast [36 x i8]* %7 to i32*
  store i32 0, i32* %320, align 4
  %321 = bitcast [36 x i8]* %8 to i32*
  store i32 0, i32* %321, align 4
  %322 = bitcast [20 x i8]* %9 to i32*
  store i32 0, i32* %322, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %312, i8 0, i64 32, i1 false)
  %323 = getelementptr inbounds [36 x i8], [36 x i8]* %6, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %323, i8 0, i64 32, i1 false)
  %324 = getelementptr inbounds [36 x i8], [36 x i8]* %7, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %324, i8 0, i64 32, i1 false)
  %325 = getelementptr inbounds [36 x i8], [36 x i8]* %8, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %325, i8 0, i64 32, i1 false)
  %326 = getelementptr inbounds [20 x i8], [20 x i8]* %9, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %326, i8 0, i64 16, i1 false)
  %327 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %310, i64 0, i32 2
  %328 = bitcast %"struct.spirv_cross::SPIRConstant::ConstantMatrix"* %327 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %328, i8* nonnull align 8 %312, i64 48, i1 false)
  %329 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %310, i64 0, i32 2, i32 0, i64 0, i32 2
  store i32 1, i32* %329, align 8
  %330 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %310, i64 0, i32 2, i32 0, i64 0, i32 3, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %330, i8* nonnull align 4 %313, i64 36, i1 false)
  %331 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %310, i64 0, i32 2, i32 0, i64 1, i32 1
  %332 = bitcast [4 x %"class.spirv_cross::TypedID"]* %331 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %332, i8 0, i64 16, i1 false)
  %333 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %310, i64 0, i32 2, i32 0, i64 1, i32 2
  store i32 1, i32* %333, align 8
  %334 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %310, i64 0, i32 2, i32 0, i64 1, i32 3, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %334, i8* nonnull align 4 %314, i64 36, i1 false)
  %335 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %310, i64 0, i32 2, i32 0, i64 2, i32 1
  %336 = bitcast [4 x %"class.spirv_cross::TypedID"]* %335 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %336, i8 0, i64 16, i1 false)
  %337 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %310, i64 0, i32 2, i32 0, i64 2, i32 2
  store i32 1, i32* %337, align 8
  %338 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %310, i64 0, i32 2, i32 0, i64 2, i32 3, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %338, i8* nonnull align 4 %315, i64 36, i1 false)
  %339 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %310, i64 0, i32 2, i32 0, i64 3, i32 1
  %340 = bitcast [4 x %"class.spirv_cross::TypedID"]* %339 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %340, i8 0, i64 16, i1 false)
  %341 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %310, i64 0, i32 2, i32 0, i64 3, i32 2
  store i32 1, i32* %341, align 8
  %342 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %310, i64 0, i32 2, i32 0, i64 3, i32 3, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %342, i8* nonnull align 4 %316, i64 20, i1 false)
  %343 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %310, i64 0, i32 2, i32 2
  store i32 1, i32* %343, align 8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %312)
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %313)
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %314)
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %315)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %316)
  %344 = getelementptr inbounds %"struct.spirv_cross::IVariant", %"struct.spirv_cross::IVariant"* %31, i64 1, i32 1, i32 0
  %345 = load i32, i32* %344, align 8
  store i32 %345, i32* %343, align 8
  %346 = getelementptr inbounds %"struct.spirv_cross::SPIRType", %"struct.spirv_cross::SPIRType"* %42, i64 0, i32 3
  %347 = load i32, i32* %346, align 4
  store i32 %347, i32* %329, align 8
  %348 = load i32, i32* %346, align 4
  store i32 %348, i32* %333, align 8
  %349 = load i32, i32* %346, align 4
  store i32 %349, i32* %337, align 8
  %350 = load i32, i32* %346, align 4
  store i32 %350, i32* %341, align 8
  br label %351

351:                                              ; preds = %208, %306, %302, %49
  ret void
}

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #8

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #9

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.40"* dereferenceable(1)) unnamed_addr #8

declare void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* sret, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.105"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.101"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #17, !range !5
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.105"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.105"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.105"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.105"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.105"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #18, !noalias !24
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !24
  store i32 %58, i32* %57, align 4, !noalias !24
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !24
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.105"**
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %61, align 8, !noalias !24
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #17, !range !5
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #17
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.101"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #17, !range !5
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.105"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.105"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.105"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.105"* %104, %"struct.std::__1::__hash_node_base.105"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.105"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.105"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #17, !range !5
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.105"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.105"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.105"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.105"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.105"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.105"*, i8 } undef, %"struct.std::__1::__hash_node_base.105"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.105"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.105"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.101"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !5
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #17
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.101"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #17, !range !5
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #17
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #17, !range !5
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #17
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.101"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.101"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #19
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #18
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.101"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.105"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.105"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #18
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.107", %"class.std::__1::__bucket_list_deallocator.107"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !27

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.105"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.105"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #17, !range !5
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.105"* %36, %"struct.std::__1::__hash_node_base.105"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.105"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.105"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.105"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.105"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.105"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.105"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.105"* %82, %"struct.std::__1::__hash_node_base.105"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.105"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.105"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.105"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.105"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.105"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.105"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.105"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.105"* %80, %"struct.std::__1::__hash_node_base.105"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.105"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.105"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.105"** null, %"struct.std::__1::__hash_node_base.105"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.105"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.105"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #18
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.107", %"class.std::__1::__bucket_list_deallocator.107"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #12

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.101"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.396", align 8
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %65, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #17, !range !5
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.105"* %24, null
  br i1 %25, label %65, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.105"* %28, null
  br i1 %29, label %65, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base.105"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.105"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %65

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.105"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %57, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.105"* %55, null
  br i1 %56, label %65, label %32

57:                                               ; preds = %48
  %58 = bitcast %"class.std::__1::unique_ptr.396"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58)
  call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEE(%"class.std::__1::unique_ptr.396"* nonnull sret %3, %"class.std::__1::__hash_table.101"* %0, %"struct.std::__1::__hash_node_base.105"* nonnull %33) #17
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.396", %"class.std::__1::unique_ptr.396"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %59, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  %63 = bitcast %"struct.std::__1::__hash_node"* %60 to i8*
  call void @_ZdlPv(i8* %63) #18
  br label %64

64:                                               ; preds = %57, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58)
  br label %65

65:                                               ; preds = %45, %53, %26, %2, %19, %64
  %66 = phi i64 [ 1, %64 ], [ 0, %19 ], [ 0, %2 ], [ 0, %26 ], [ 0, %53 ], [ 0, %45 ]
  ret i64 %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEE(%"class.std::__1::unique_ptr.396"* noalias sret, %"class.std::__1::__hash_table.101"*, %"struct.std::__1::__hash_node_base.105"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.105"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #17, !range !5
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.105"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.105"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.112"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.105"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.105"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.105"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.105"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.105"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.105"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.105"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.105"* %25, %"struct.std::__1::__hash_node_base.105"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.105"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.105"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.105"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.396"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.396", %"class.std::__1::unique_ptr.396"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.115"** %98 to %"class.std::__1::__compressed_pair.112"**
  store %"class.std::__1::__compressed_pair.112"* %30, %"class.std::__1::__compressed_pair.112"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.396", %"class.std::__1::unique_ptr.396"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @fflush(%struct._IO_FILE* nocapture) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE13__move_assignERS7_NS_17integral_constantIbLb1EEE(%"class.std::__1::__hash_table.101"*, %"class.std::__1::__hash_table.101"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %56, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %7, align 8
  %9 = icmp eq %"struct.std::__1::__hash_node_base.105"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"struct.std::__1::__hash_node_base.105"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %11, i64 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %12, align 8
  %14 = bitcast %"struct.std::__1::__hash_node_base.105"* %11 to i8*
  tail call void @_ZdlPv(i8* %14) #18
  %15 = icmp eq %"struct.std::__1::__hash_node_base.105"* %13, null
  br i1 %15, label %16, label %10

16:                                               ; preds = %10, %6
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %7, align 8
  %17 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %38, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = add i64 %18, -1
  %23 = and i64 %18, 3
  %24 = icmp ult i64 %22, 3
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = sub i64 %18, %23
  br label %39

27:                                               ; preds = %39, %20
  %28 = phi i64 [ 0, %20 ], [ %53, %39 ]
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %38, label %30

30:                                               ; preds = %27, %30
  %31 = phi i64 [ %35, %30 ], [ %28, %27 ]
  %32 = phi i64 [ %36, %30 ], [ %23, %27 ]
  %33 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %21, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %33, i64 %31
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %34, align 8
  %35 = add nuw i64 %31, 1
  %36 = add i64 %32, -1
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %30, !llvm.loop !28

38:                                               ; preds = %27, %30, %16
  store i64 0, i64* %3, align 8
  br label %56

39:                                               ; preds = %39, %25
  %40 = phi i64 [ 0, %25 ], [ %53, %39 ]
  %41 = phi i64 [ %26, %25 ], [ %54, %39 ]
  %42 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %21, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %42, i64 %40
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %43, align 8
  %44 = or i64 %40, 1
  %45 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %21, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %45, i64 %44
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %46, align 8
  %47 = or i64 %40, 2
  %48 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %21, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %48, i64 %47
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %49, align 8
  %50 = or i64 %40, 3
  %51 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %21, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %51, i64 %50
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %52, align 8
  %53 = add nuw i64 %40, 4
  %54 = add i64 %41, -4
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %27, label %39

56:                                               ; preds = %2, %38
  %57 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = bitcast %"class.std::__1::__hash_table.101"* %1 to i64*
  %59 = load i64, i64* %58, align 8
  store %"struct.std::__1::__hash_node_base.105"** null, %"struct.std::__1::__hash_node_base.105"*** %57, align 8
  %60 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %60, align 8
  %62 = bitcast %"class.std::__1::__hash_table.101"* %0 to i64*
  store i64 %59, i64* %62, align 8
  %63 = icmp eq %"struct.std::__1::__hash_node_base.105"** %61, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %56
  %65 = bitcast %"struct.std::__1::__hash_node_base.105"** %61 to i8*
  tail call void @_ZdlPv(i8* %65) #18
  br label %66

66:                                               ; preds = %56, %64
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %68, i64* %69, align 8
  store i64 0, i64* %67, align 8
  %70 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %1, i64 0, i32 2, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  store i64 %71, i64* %3, align 8
  %72 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %1, i64 0, i32 3, i32 0, i32 0
  %73 = bitcast float* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 3, i32 0, i32 0
  %76 = bitcast float* %75 to i32*
  store i32 %74, i32* %76, align 4
  %77 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %1, i64 0, i32 1, i32 0, i32 0
  %78 = bitcast %"struct.std::__1::__hash_node_base.105"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 1, i32 0, i32 0
  %81 = bitcast %"struct.std::__1::__hash_node_base.105"* %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = icmp eq i64 %71, 0
  br i1 %82, label %103, label %83

83:                                               ; preds = %66
  %84 = inttoptr i64 %79 to %"struct.std::__1::__hash_node_base.105"*
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %84, i64 1
  %86 = bitcast %"struct.std::__1::__hash_node_base.105"* %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = load i64, i64* %69, align 8
  %89 = tail call i64 @llvm.ctpop.i64(i64 %88) #17, !range !5
  %90 = icmp ugt i64 %89, 1
  br i1 %90, label %94, label %91

91:                                               ; preds = %83
  %92 = add i64 %88, -1
  %93 = and i64 %92, %87
  br label %98

94:                                               ; preds = %83
  %95 = icmp ult i64 %87, %88
  br i1 %95, label %98, label %96

96:                                               ; preds = %94
  %97 = urem i64 %87, %88
  br label %98

98:                                               ; preds = %91, %94, %96
  %99 = phi i64 [ %93, %91 ], [ %97, %96 ], [ %87, %94 ]
  %100 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %60, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %100, i64 %99
  store %"struct.std::__1::__hash_node_base.105"* %80, %"struct.std::__1::__hash_node_base.105"** %101, align 8
  %102 = bitcast %"struct.std::__1::__hash_node_base.105"* %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false)
  br label %103

103:                                              ; preds = %66, %98
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #14

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross15ObjectPoolGroupD2Ev(%"struct.spirv_cross::ObjectPoolGroup"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 13, i32 0, i32 0, i32 0
  %3 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %2, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %2, align 8
  %4 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.spirv_cross::ObjectPoolBase"* %3 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %7 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %7, i64 1
  %9 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %8, align 8
  tail call void %9(%"class.spirv_cross::ObjectPoolBase"* nonnull %3) #17
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 12, i32 0, i32 0, i32 0
  %12 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %11, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %11, align 8
  %13 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.spirv_cross::ObjectPoolBase"* %12 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %16 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %16, i64 1
  %18 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %17, align 8
  tail call void %18(%"class.spirv_cross::ObjectPoolBase"* nonnull %12) #17
  br label %19

19:                                               ; preds = %14, %10
  %20 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 11, i32 0, i32 0, i32 0
  %21 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %20, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %20, align 8
  %22 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.spirv_cross::ObjectPoolBase"* %21 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %25 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %25, i64 1
  %27 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %26, align 8
  tail call void %27(%"class.spirv_cross::ObjectPoolBase"* nonnull %21) #17
  br label %28

28:                                               ; preds = %23, %19
  %29 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 10, i32 0, i32 0, i32 0
  %30 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %29, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %29, align 8
  %31 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.spirv_cross::ObjectPoolBase"* %30 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %34 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %34, i64 1
  %36 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %35, align 8
  tail call void %36(%"class.spirv_cross::ObjectPoolBase"* nonnull %30) #17
  br label %37

37:                                               ; preds = %32, %28
  %38 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 9, i32 0, i32 0, i32 0
  %39 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %38, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %38, align 8
  %40 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = bitcast %"class.spirv_cross::ObjectPoolBase"* %39 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %43 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %43, i64 1
  %45 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %44, align 8
  tail call void %45(%"class.spirv_cross::ObjectPoolBase"* nonnull %39) #17
  br label %46

46:                                               ; preds = %41, %37
  %47 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 8, i32 0, i32 0, i32 0
  %48 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %47, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %47, align 8
  %49 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.spirv_cross::ObjectPoolBase"* %48 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %52 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %52, i64 1
  %54 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %53, align 8
  tail call void %54(%"class.spirv_cross::ObjectPoolBase"* nonnull %48) #17
  br label %55

55:                                               ; preds = %50, %46
  %56 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 7, i32 0, i32 0, i32 0
  %57 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %56, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %56, align 8
  %58 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.spirv_cross::ObjectPoolBase"* %57 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %61 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %61, i64 1
  %63 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %62, align 8
  tail call void %63(%"class.spirv_cross::ObjectPoolBase"* nonnull %57) #17
  br label %64

64:                                               ; preds = %59, %55
  %65 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 6, i32 0, i32 0, i32 0
  %66 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %65, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %65, align 8
  %67 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %64
  %69 = bitcast %"class.spirv_cross::ObjectPoolBase"* %66 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %70 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %70, i64 1
  %72 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %71, align 8
  tail call void %72(%"class.spirv_cross::ObjectPoolBase"* nonnull %66) #17
  br label %73

73:                                               ; preds = %68, %64
  %74 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 5, i32 0, i32 0, i32 0
  %75 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %74, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %74, align 8
  %76 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %75, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %73
  %78 = bitcast %"class.spirv_cross::ObjectPoolBase"* %75 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %79 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %79, i64 1
  %81 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %80, align 8
  tail call void %81(%"class.spirv_cross::ObjectPoolBase"* nonnull %75) #17
  br label %82

82:                                               ; preds = %77, %73
  %83 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 4, i32 0, i32 0, i32 0
  %84 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %83, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %83, align 8
  %85 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %82
  %87 = bitcast %"class.spirv_cross::ObjectPoolBase"* %84 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %88 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %88, i64 1
  %90 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %89, align 8
  tail call void %90(%"class.spirv_cross::ObjectPoolBase"* nonnull %84) #17
  br label %91

91:                                               ; preds = %86, %82
  %92 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 3, i32 0, i32 0, i32 0
  %93 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %92, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %92, align 8
  %94 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %93, null
  br i1 %94, label %100, label %95

95:                                               ; preds = %91
  %96 = bitcast %"class.spirv_cross::ObjectPoolBase"* %93 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %97 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %97, i64 1
  %99 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %98, align 8
  tail call void %99(%"class.spirv_cross::ObjectPoolBase"* nonnull %93) #17
  br label %100

100:                                              ; preds = %95, %91
  %101 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 2, i32 0, i32 0, i32 0
  %102 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %101, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %101, align 8
  %103 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %102, null
  br i1 %103, label %109, label %104

104:                                              ; preds = %100
  %105 = bitcast %"class.spirv_cross::ObjectPoolBase"* %102 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %106 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %106, i64 1
  %108 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %107, align 8
  tail call void %108(%"class.spirv_cross::ObjectPoolBase"* nonnull %102) #17
  br label %109

109:                                              ; preds = %104, %100
  %110 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i32 0
  %111 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %110, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %110, align 8
  %112 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %111, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %109
  %114 = bitcast %"class.spirv_cross::ObjectPoolBase"* %111 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %115 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %115, i64 1
  %117 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %116, align 8
  tail call void %117(%"class.spirv_cross::ObjectPoolBase"* nonnull %111) #17
  br label %118

118:                                              ; preds = %113, %109
  %119 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %119, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %119, align 8
  %121 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %120, null
  br i1 %121, label %127, label %122

122:                                              ; preds = %118
  %123 = bitcast %"class.spirv_cross::ObjectPoolBase"* %120 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %124 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %123, align 8
  %125 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %124, i64 1
  %126 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %125, align 8
  tail call void %126(%"class.spirv_cross::ObjectPoolBase"* nonnull %120) #17
  br label %127

127:                                              ; preds = %122, %118
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_8SPIRTypeEED2Ev(%"class.spirv_cross::ObjectPool"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ObjectPool", %"class.spirv_cross::ObjectPool"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_8SPIRTypeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool", %"class.spirv_cross::ObjectPool"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool", %"class.spirv_cross::ObjectPool"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.164", %"class.spirv_cross::SmallVector.164"* %3, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ 0, %7 ], [ %18, %17 ]
  %11 = load %"class.std::__1::unique_ptr.166"*, %"class.std::__1::unique_ptr.166"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %11, i64 %10, i32 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRType"*, %"struct.spirv_cross::SPIRType"** %12, align 8
  store %"struct.spirv_cross::SPIRType"* null, %"struct.spirv_cross::SPIRType"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::SPIRType"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = bitcast %"struct.spirv_cross::SPIRType"* %13 to i8*
  tail call void @free(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %9
  %18 = add nuw i64 %10, 1
  %19 = load i64, i64* %4, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %9, label %21

21:                                               ; preds = %17, %1
  store i64 0, i64* %4, align 8
  %22 = getelementptr inbounds %"class.spirv_cross::SmallVector.164", %"class.spirv_cross::SmallVector.164"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.166"*, %"class.std::__1::unique_ptr.166"** %22, align 8
  %24 = getelementptr inbounds %"class.spirv_cross::ObjectPool", %"class.spirv_cross::ObjectPool"* %0, i64 0, i32 2, i32 2
  %25 = bitcast %"class.spirv_cross::AlignedBuffer.170"* %24 to %"class.std::__1::unique_ptr.166"*
  %26 = icmp eq %"class.std::__1::unique_ptr.166"* %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::unique_ptr.166"* %23 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %21, %27
  %30 = getelementptr inbounds %"class.spirv_cross::ObjectPool", %"class.spirv_cross::ObjectPool"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spirv_cross::ObjectPool", %"class.spirv_cross::ObjectPool"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.spirv_cross::SPIRType"**, %"struct.spirv_cross::SPIRType"*** %31, align 8
  %33 = icmp eq %"struct.spirv_cross::SPIRType"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.spirv_cross::SPIRType"** %32 to i8*
  tail call void @free(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %34
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_8SPIRTypeEED0Ev(%"class.spirv_cross::ObjectPool"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ObjectPool", %"class.spirv_cross::ObjectPool"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_8SPIRTypeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool", %"class.spirv_cross::ObjectPool"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool", %"class.spirv_cross::ObjectPool"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.164", %"class.spirv_cross::SmallVector.164"* %3, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ 0, %7 ], [ %18, %17 ]
  %11 = load %"class.std::__1::unique_ptr.166"*, %"class.std::__1::unique_ptr.166"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %11, i64 %10, i32 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRType"*, %"struct.spirv_cross::SPIRType"** %12, align 8
  store %"struct.spirv_cross::SPIRType"* null, %"struct.spirv_cross::SPIRType"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::SPIRType"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = bitcast %"struct.spirv_cross::SPIRType"* %13 to i8*
  tail call void @free(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %9
  %18 = add nuw i64 %10, 1
  %19 = load i64, i64* %4, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %9, label %21

21:                                               ; preds = %17, %1
  store i64 0, i64* %4, align 8
  %22 = getelementptr inbounds %"class.spirv_cross::SmallVector.164", %"class.spirv_cross::SmallVector.164"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.166"*, %"class.std::__1::unique_ptr.166"** %22, align 8
  %24 = getelementptr inbounds %"class.spirv_cross::ObjectPool", %"class.spirv_cross::ObjectPool"* %0, i64 0, i32 2, i32 2
  %25 = bitcast %"class.spirv_cross::AlignedBuffer.170"* %24 to %"class.std::__1::unique_ptr.166"*
  %26 = icmp eq %"class.std::__1::unique_ptr.166"* %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::unique_ptr.166"* %23 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %27, %21
  %30 = getelementptr inbounds %"class.spirv_cross::ObjectPool", %"class.spirv_cross::ObjectPool"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spirv_cross::ObjectPool", %"class.spirv_cross::ObjectPool"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.spirv_cross::SPIRType"**, %"struct.spirv_cross::SPIRType"*** %31, align 8
  %33 = icmp eq %"struct.spirv_cross::SPIRType"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.spirv_cross::SPIRType"** %32 to i8*
  tail call void @free(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %34
  %37 = bitcast %"class.spirv_cross::ObjectPool"* %0 to i8*
  tail call void @_ZdlPv(i8* %37) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_8SPIRTypeEE11free_opaqueEPv(%"class.spirv_cross::ObjectPool"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.spirv_cross::SPIRType"*
  %4 = ptrtoint i8* %1 to i64
  %5 = bitcast i8* %1 to void (%"struct.spirv_cross::SPIRType"*)***
  %6 = load void (%"struct.spirv_cross::SPIRType"*)**, void (%"struct.spirv_cross::SPIRType"*)*** %5, align 8
  %7 = load void (%"struct.spirv_cross::SPIRType"*)*, void (%"struct.spirv_cross::SPIRType"*)** %6, align 8
  tail call void %7(%"struct.spirv_cross::SPIRType"* %3) #17
  %8 = getelementptr inbounds %"class.spirv_cross::ObjectPool", %"class.spirv_cross::ObjectPool"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.spirv_cross::ObjectPool", %"class.spirv_cross::ObjectPool"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 1
  tail call void @_ZN11spirv_cross11SmallVectorIPNS_8SPIRTypeELm0EE7reserveEm(%"class.spirv_cross::SmallVector.125"* %8, i64 %11) #17
  %12 = getelementptr inbounds %"class.spirv_cross::SmallVector.125", %"class.spirv_cross::SmallVector.125"* %8, i64 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRType"**, %"struct.spirv_cross::SPIRType"*** %12, align 8
  %14 = load i64, i64* %9, align 8
  %15 = getelementptr inbounds %"struct.spirv_cross::SPIRType"*, %"struct.spirv_cross::SPIRType"** %13, i64 %14
  %16 = bitcast %"struct.spirv_cross::SPIRType"** %15 to i64*
  store i64 %4, i64* %16, align 8
  %17 = load i64, i64* %9, align 8
  %18 = add i64 %17, 1
  store i64 %18, i64* %9, align 8
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #16

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross11SmallVectorIPNS_8SPIRTypeELm0EE7reserveEm(%"class.spirv_cross::SmallVector.125"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 2305843009213693951
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @_ZSt9terminatev() #19
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.spirv_cross::SmallVector.125", %"class.spirv_cross::SmallVector.125"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %139

9:                                                ; preds = %5
  %10 = icmp eq i64 %7, 0
  %11 = select i1 %10, i64 1, i64 %7
  br label %12

12:                                               ; preds = %12, %9
  %13 = phi i64 [ %11, %9 ], [ %15, %12 ]
  %14 = icmp ult i64 %13, %1
  %15 = shl i64 %13, 1
  br i1 %14, label %12, label %16

16:                                               ; preds = %12
  %17 = icmp eq i64 %13, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = shl i64 %13, 3
  %20 = tail call noalias i8* @malloc(i64 %19) #17
  %21 = bitcast i8* %20 to %"struct.spirv_cross::SPIRType"**
  %22 = icmp eq i8* %20, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %16, %18
  tail call void @_ZSt9terminatev() #19
  unreachable

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.spirv_cross::SmallVector.125", %"class.spirv_cross::SmallVector.125"* %0, i64 0, i32 0, i32 0
  %26 = load %"struct.spirv_cross::SPIRType"**, %"struct.spirv_cross::SPIRType"*** %25, align 8
  %27 = bitcast %"struct.spirv_cross::SPIRType"** %26 to i8*
  %28 = icmp eq %"struct.spirv_cross::SPIRType"** %26, %21
  br i1 %28, label %133, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.spirv_cross::SmallVector.125", %"class.spirv_cross::SmallVector.125"* %0, i64 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %133, label %33

33:                                               ; preds = %29
  %34 = icmp ult i64 %31, 4
  br i1 %34, label %122, label %35

35:                                               ; preds = %33
  %36 = shl i64 %31, 3
  %37 = getelementptr i8, i8* %20, i64 %36
  %38 = getelementptr %"struct.spirv_cross::SPIRType"*, %"struct.spirv_cross::SPIRType"** %26, i64 %31
  %39 = bitcast %"struct.spirv_cross::SPIRType"** %38 to i8*
  %40 = icmp ult i8* %20, %39
  %41 = icmp ugt i8* %37, %27
  %42 = and i1 %40, %41
  br i1 %42, label %122, label %43

43:                                               ; preds = %35
  %44 = and i64 %31, -4
  %45 = add i64 %44, -4
  %46 = lshr exact i64 %45, 2
  %47 = add nuw nsw i64 %46, 1
  %48 = and i64 %47, 3
  %49 = icmp ult i64 %45, 12
  br i1 %49, label %101, label %50

50:                                               ; preds = %43
  %51 = sub nsw i64 %47, %48
  br label %52

52:                                               ; preds = %52, %50
  %53 = phi i64 [ 0, %50 ], [ %98, %52 ]
  %54 = phi i64 [ %51, %50 ], [ %99, %52 ]
  %55 = getelementptr inbounds %"struct.spirv_cross::SPIRType"*, %"struct.spirv_cross::SPIRType"** %21, i64 %53
  %56 = getelementptr inbounds %"struct.spirv_cross::SPIRType"*, %"struct.spirv_cross::SPIRType"** %26, i64 %53
  %57 = bitcast %"struct.spirv_cross::SPIRType"** %56 to <2 x i64>*
  %58 = load <2 x i64>, <2 x i64>* %57, align 8, !alias.scope !29
  %59 = getelementptr inbounds %"struct.spirv_cross::SPIRType"*, %"struct.spirv_cross::SPIRType"** %56, i64 2
  %60 = bitcast %"struct.spirv_cross::SPIRType"** %59 to <2 x i64>*
  %61 = load <2 x i64>, <2 x i64>* %60, align 8, !alias.scope !29
  %62 = bitcast %"struct.spirv_cross::SPIRType"** %55 to <2 x i64>*
  store <2 x i64> %58, <2 x i64>* %62, align 8, !alias.scope !32, !noalias !29
  %63 = getelementptr inbounds %"struct.spirv_cross::SPIRType"*, %"struct.spirv_cross::SPIRType"** %55, i64 2
  %64 = bitcast %"struct.spirv_cross::SPIRType"** %63 to <2 x i64>*
  store <2 x i64> %61, <2 x i64>* %64, align 8, !alias.scope !32, !noalias !29
  %65 = or i64 %53, 4
  %66 = getelementptr inbounds %"struct.spirv_cross::SPIRType"*, %"struct.spirv_cross::SPIRType"** %21, i64 %65
  %67 = getelementptr inbounds %"struct.spirv_cross::SPIRType"*, %"struct.spirv_cross::SPIRType"** %26, i64 %65
  %68 = bitcast %"struct.spirv_cross::SPIRType"** %67 to <2 x i64>*
  %69 = load <2 x i64>, <2 x i64>* %68, align 8, !alias.scope !29
  %70 = getelementptr inbounds %"struct.spirv_cross::SPIRType"*, %"struct.spirv_cross::SPIRType"** %67, i64 2
  %71 = bitcast %"struct.spirv_cross::SPIRType"** %70 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 8, !alias.scope !29
  %73 = bitcast %"struct.spirv_cross::SPIRType"** %66 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %73, align 8, !alias.scope !32, !noalias !29
  %74 = getelementptr inbounds %"struct.spirv_cross::SPIRType"*, %"struct.spirv_cross::SPIRType"** %66, i64 2
  %75 = bitcast %"struct.spirv_cross::SPIRType"** %74 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %75, align 8, !alias.scope !32, !noalias !29
  %76 = or i64 %53, 8
  %77 = getelementptr inbounds %"struct.spirv_cross::SPIRType"*, %"struct.spirv_cross::SPIRType"** %21, i64 %76
  %78 = getelementptr inbounds %"struct.spirv_cross::SPIRType"*, %"struct.spirv_cross::SPIRType"** %26, i64 %76
  %79 = bitcast %"struct.spirv_cross::SPIRType"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !29
  %81 = getelementptr inbounds %"struct.spirv_cross::SPIRType"*, %"struct.spirv_cross::SPIRType"** %78, i64 2
  %82 = bitcast %"struct.spirv_cross::SPIRType"** %81 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 8, !alias.scope !29
  %84 = bitcast %"struct.spirv_cross::SPIRType"** %77 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %84, align 8, !alias.scope !32, !noalias !29
  %85 = getelementptr inbounds %"struct.spirv_cross::SPIRType"*, %"struct.spirv_cross::SPIRType"** %77, i64 2
  %86 = bitcast %"struct.spirv_cross::SPIRType"** %85 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %86, align 8, !alias.scope !32, !noalias !29
  %87 = or i64 %53, 12
  %88 = getelementptr inbounds %"struct.spirv_cross::SPIRType"*, %"struct.spirv_cross::SPIRType"** %21, i64 %87
  %89 = getelementptr inbounds %"struct.spirv_cross::SPIRType"*, %"struct.spirv_cross::SPIRType"** %26, i64 %87
  %90 = bitcast %"struct.spirv_cross::SPIRType"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !29
  %92 = getelementptr inbounds %"struct.spirv_cross::SPIRType"*, %"struct.spirv_cross::SPIRType"** %89, i64 2
  %93 = bitcast %"struct.spirv_cross::SPIRType"** %92 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 8, !alias.scope !29
  %95 = bitcast %"struct.spirv_cross::SPIRType"** %88 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %95, align 8, !alias.scope !32, !noalias !29
  %96 = getelementptr inbounds %"struct.spirv_cross::SPIRType"*, %"struct.spirv_cross::SPIRType"** %88, i64 2
  %97 = bitcast %"struct.spirv_cross::SPIRType"** %96 to <2 x i64>*
  store <2 x i64> %94, <2 x i64>* %97, align 8, !alias.scope !32, !noalias !29
  %98 = add i64 %53, 16
  %99 = add i64 %54, -4
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %52, !llvm.loop !34

101:                                              ; preds = %52, %43
  %102 = phi i64 [ 0, %43 ], [ %98, %52 ]
  %103 = icmp eq i64 %48, 0
  br i1 %103, label %120, label %104

104:                                              ; preds = %101, %104
  %105 = phi i64 [ %117, %104 ], [ %102, %101 ]
  %106 = phi i64 [ %118, %104 ], [ %48, %101 ]
  %107 = getelementptr inbounds %"struct.spirv_cross::SPIRType"*, %"struct.spirv_cross::SPIRType"** %21, i64 %105
  %108 = getelementptr inbounds %"struct.spirv_cross::SPIRType"*, %"struct.spirv_cross::SPIRType"** %26, i64 %105
  %109 = bitcast %"struct.spirv_cross::SPIRType"** %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !29
  %111 = getelementptr inbounds %"struct.spirv_cross::SPIRType"*, %"struct.spirv_cross::SPIRType"** %108, i64 2
  %112 = bitcast %"struct.spirv_cross::SPIRType"** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !29
  %114 = bitcast %"struct.spirv_cross::SPIRType"** %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !32, !noalias !29
  %115 = getelementptr inbounds %"struct.spirv_cross::SPIRType"*, %"struct.spirv_cross::SPIRType"** %107, i64 2
  %116 = bitcast %"struct.spirv_cross::SPIRType"** %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !32, !noalias !29
  %117 = add i64 %105, 4
  %118 = add i64 %106, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %104, !llvm.loop !35

120:                                              ; preds = %104, %101
  %121 = icmp eq i64 %31, %44
  br i1 %121, label %133, label %122

122:                                              ; preds = %120, %35, %33
  %123 = phi i64 [ 0, %35 ], [ 0, %33 ], [ %44, %120 ]
  br label %124

124:                                              ; preds = %122, %124
  %125 = phi i64 [ %131, %124 ], [ %123, %122 ]
  %126 = getelementptr inbounds %"struct.spirv_cross::SPIRType"*, %"struct.spirv_cross::SPIRType"** %21, i64 %125
  %127 = getelementptr inbounds %"struct.spirv_cross::SPIRType"*, %"struct.spirv_cross::SPIRType"** %26, i64 %125
  %128 = bitcast %"struct.spirv_cross::SPIRType"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.spirv_cross::SPIRType"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = add nuw i64 %125, 1
  %132 = icmp ult i64 %131, %31
  br i1 %132, label %124, label %133, !llvm.loop !36

133:                                              ; preds = %124, %120, %29, %24
  %134 = phi %"struct.spirv_cross::SPIRType"** [ %21, %24 ], [ %26, %29 ], [ %26, %120 ], [ %26, %124 ]
  %135 = icmp eq %"struct.spirv_cross::SPIRType"** %134, null
  br i1 %135, label %137, label %136

136:                                              ; preds = %133
  tail call void @free(i8* %27) #17
  br label %137

137:                                              ; preds = %133, %136
  %138 = bitcast %"class.spirv_cross::SmallVector.125"* %0 to i8**
  store i8* %20, i8** %138, align 8
  store i64 %13, i64* %6, align 8
  br label %139

139:                                              ; preds = %137, %5
  ret void
}

; Function Attrs: noreturn nounwind
declare void @_ZSt9terminatev() local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #13

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_12SPIRVariableEED2Ev(%"class.spirv_cross::ObjectPool.171"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ObjectPool.171", %"class.spirv_cross::ObjectPool.171"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_12SPIRVariableEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool.171", %"class.spirv_cross::ObjectPool.171"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool.171", %"class.spirv_cross::ObjectPool.171"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.178", %"class.spirv_cross::SmallVector.178"* %3, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ 0, %7 ], [ %18, %17 ]
  %11 = load %"class.std::__1::unique_ptr.180"*, %"class.std::__1::unique_ptr.180"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %11, i64 %10, i32 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRVariable"*, %"struct.spirv_cross::SPIRVariable"** %12, align 8
  store %"struct.spirv_cross::SPIRVariable"* null, %"struct.spirv_cross::SPIRVariable"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::SPIRVariable"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = bitcast %"struct.spirv_cross::SPIRVariable"* %13 to i8*
  tail call void @free(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %9
  %18 = add nuw i64 %10, 1
  %19 = load i64, i64* %4, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %9, label %21

21:                                               ; preds = %17, %1
  store i64 0, i64* %4, align 8
  %22 = getelementptr inbounds %"class.spirv_cross::SmallVector.178", %"class.spirv_cross::SmallVector.178"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.180"*, %"class.std::__1::unique_ptr.180"** %22, align 8
  %24 = getelementptr inbounds %"class.spirv_cross::ObjectPool.171", %"class.spirv_cross::ObjectPool.171"* %0, i64 0, i32 2, i32 2
  %25 = bitcast %"class.spirv_cross::AlignedBuffer.184"* %24 to %"class.std::__1::unique_ptr.180"*
  %26 = icmp eq %"class.std::__1::unique_ptr.180"* %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::unique_ptr.180"* %23 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %21, %27
  %30 = getelementptr inbounds %"class.spirv_cross::ObjectPool.171", %"class.spirv_cross::ObjectPool.171"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spirv_cross::ObjectPool.171", %"class.spirv_cross::ObjectPool.171"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.spirv_cross::SPIRVariable"**, %"struct.spirv_cross::SPIRVariable"*** %31, align 8
  %33 = icmp eq %"struct.spirv_cross::SPIRVariable"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.spirv_cross::SPIRVariable"** %32 to i8*
  tail call void @free(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %34
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_12SPIRVariableEED0Ev(%"class.spirv_cross::ObjectPool.171"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ObjectPool.171", %"class.spirv_cross::ObjectPool.171"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_12SPIRVariableEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool.171", %"class.spirv_cross::ObjectPool.171"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool.171", %"class.spirv_cross::ObjectPool.171"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.178", %"class.spirv_cross::SmallVector.178"* %3, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ 0, %7 ], [ %18, %17 ]
  %11 = load %"class.std::__1::unique_ptr.180"*, %"class.std::__1::unique_ptr.180"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %11, i64 %10, i32 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRVariable"*, %"struct.spirv_cross::SPIRVariable"** %12, align 8
  store %"struct.spirv_cross::SPIRVariable"* null, %"struct.spirv_cross::SPIRVariable"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::SPIRVariable"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = bitcast %"struct.spirv_cross::SPIRVariable"* %13 to i8*
  tail call void @free(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %9
  %18 = add nuw i64 %10, 1
  %19 = load i64, i64* %4, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %9, label %21

21:                                               ; preds = %17, %1
  store i64 0, i64* %4, align 8
  %22 = getelementptr inbounds %"class.spirv_cross::SmallVector.178", %"class.spirv_cross::SmallVector.178"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.180"*, %"class.std::__1::unique_ptr.180"** %22, align 8
  %24 = getelementptr inbounds %"class.spirv_cross::ObjectPool.171", %"class.spirv_cross::ObjectPool.171"* %0, i64 0, i32 2, i32 2
  %25 = bitcast %"class.spirv_cross::AlignedBuffer.184"* %24 to %"class.std::__1::unique_ptr.180"*
  %26 = icmp eq %"class.std::__1::unique_ptr.180"* %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::unique_ptr.180"* %23 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %27, %21
  %30 = getelementptr inbounds %"class.spirv_cross::ObjectPool.171", %"class.spirv_cross::ObjectPool.171"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spirv_cross::ObjectPool.171", %"class.spirv_cross::ObjectPool.171"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.spirv_cross::SPIRVariable"**, %"struct.spirv_cross::SPIRVariable"*** %31, align 8
  %33 = icmp eq %"struct.spirv_cross::SPIRVariable"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.spirv_cross::SPIRVariable"** %32 to i8*
  tail call void @free(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %34
  %37 = bitcast %"class.spirv_cross::ObjectPool.171"* %0 to i8*
  tail call void @_ZdlPv(i8* %37) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_12SPIRVariableEE11free_opaqueEPv(%"class.spirv_cross::ObjectPool.171"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.spirv_cross::SPIRVariable"*
  %4 = ptrtoint i8* %1 to i64
  %5 = bitcast i8* %1 to void (%"struct.spirv_cross::SPIRVariable"*)***
  %6 = load void (%"struct.spirv_cross::SPIRVariable"*)**, void (%"struct.spirv_cross::SPIRVariable"*)*** %5, align 8
  %7 = load void (%"struct.spirv_cross::SPIRVariable"*)*, void (%"struct.spirv_cross::SPIRVariable"*)** %6, align 8
  tail call void %7(%"struct.spirv_cross::SPIRVariable"* %3) #17
  %8 = getelementptr inbounds %"class.spirv_cross::ObjectPool.171", %"class.spirv_cross::ObjectPool.171"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.spirv_cross::ObjectPool.171", %"class.spirv_cross::ObjectPool.171"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 1
  tail call void @_ZN11spirv_cross11SmallVectorIPNS_12SPIRVariableELm0EE7reserveEm(%"class.spirv_cross::SmallVector.172"* %8, i64 %11) #17
  %12 = getelementptr inbounds %"class.spirv_cross::SmallVector.172", %"class.spirv_cross::SmallVector.172"* %8, i64 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRVariable"**, %"struct.spirv_cross::SPIRVariable"*** %12, align 8
  %14 = load i64, i64* %9, align 8
  %15 = getelementptr inbounds %"struct.spirv_cross::SPIRVariable"*, %"struct.spirv_cross::SPIRVariable"** %13, i64 %14
  %16 = bitcast %"struct.spirv_cross::SPIRVariable"** %15 to i64*
  store i64 %4, i64* %16, align 8
  %17 = load i64, i64* %9, align 8
  %18 = add i64 %17, 1
  store i64 %18, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross11SmallVectorIPNS_12SPIRVariableELm0EE7reserveEm(%"class.spirv_cross::SmallVector.172"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 2305843009213693951
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @_ZSt9terminatev() #19
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.spirv_cross::SmallVector.172", %"class.spirv_cross::SmallVector.172"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %139

9:                                                ; preds = %5
  %10 = icmp eq i64 %7, 0
  %11 = select i1 %10, i64 1, i64 %7
  br label %12

12:                                               ; preds = %12, %9
  %13 = phi i64 [ %11, %9 ], [ %15, %12 ]
  %14 = icmp ult i64 %13, %1
  %15 = shl i64 %13, 1
  br i1 %14, label %12, label %16

16:                                               ; preds = %12
  %17 = icmp eq i64 %13, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = shl i64 %13, 3
  %20 = tail call noalias i8* @malloc(i64 %19) #17
  %21 = bitcast i8* %20 to %"struct.spirv_cross::SPIRVariable"**
  %22 = icmp eq i8* %20, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %16, %18
  tail call void @_ZSt9terminatev() #19
  unreachable

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.spirv_cross::SmallVector.172", %"class.spirv_cross::SmallVector.172"* %0, i64 0, i32 0, i32 0
  %26 = load %"struct.spirv_cross::SPIRVariable"**, %"struct.spirv_cross::SPIRVariable"*** %25, align 8
  %27 = bitcast %"struct.spirv_cross::SPIRVariable"** %26 to i8*
  %28 = icmp eq %"struct.spirv_cross::SPIRVariable"** %26, %21
  br i1 %28, label %133, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.spirv_cross::SmallVector.172", %"class.spirv_cross::SmallVector.172"* %0, i64 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %133, label %33

33:                                               ; preds = %29
  %34 = icmp ult i64 %31, 4
  br i1 %34, label %122, label %35

35:                                               ; preds = %33
  %36 = shl i64 %31, 3
  %37 = getelementptr i8, i8* %20, i64 %36
  %38 = getelementptr %"struct.spirv_cross::SPIRVariable"*, %"struct.spirv_cross::SPIRVariable"** %26, i64 %31
  %39 = bitcast %"struct.spirv_cross::SPIRVariable"** %38 to i8*
  %40 = icmp ult i8* %20, %39
  %41 = icmp ugt i8* %37, %27
  %42 = and i1 %40, %41
  br i1 %42, label %122, label %43

43:                                               ; preds = %35
  %44 = and i64 %31, -4
  %45 = add i64 %44, -4
  %46 = lshr exact i64 %45, 2
  %47 = add nuw nsw i64 %46, 1
  %48 = and i64 %47, 3
  %49 = icmp ult i64 %45, 12
  br i1 %49, label %101, label %50

50:                                               ; preds = %43
  %51 = sub nsw i64 %47, %48
  br label %52

52:                                               ; preds = %52, %50
  %53 = phi i64 [ 0, %50 ], [ %98, %52 ]
  %54 = phi i64 [ %51, %50 ], [ %99, %52 ]
  %55 = getelementptr inbounds %"struct.spirv_cross::SPIRVariable"*, %"struct.spirv_cross::SPIRVariable"** %21, i64 %53
  %56 = getelementptr inbounds %"struct.spirv_cross::SPIRVariable"*, %"struct.spirv_cross::SPIRVariable"** %26, i64 %53
  %57 = bitcast %"struct.spirv_cross::SPIRVariable"** %56 to <2 x i64>*
  %58 = load <2 x i64>, <2 x i64>* %57, align 8, !alias.scope !37
  %59 = getelementptr inbounds %"struct.spirv_cross::SPIRVariable"*, %"struct.spirv_cross::SPIRVariable"** %56, i64 2
  %60 = bitcast %"struct.spirv_cross::SPIRVariable"** %59 to <2 x i64>*
  %61 = load <2 x i64>, <2 x i64>* %60, align 8, !alias.scope !37
  %62 = bitcast %"struct.spirv_cross::SPIRVariable"** %55 to <2 x i64>*
  store <2 x i64> %58, <2 x i64>* %62, align 8, !alias.scope !40, !noalias !37
  %63 = getelementptr inbounds %"struct.spirv_cross::SPIRVariable"*, %"struct.spirv_cross::SPIRVariable"** %55, i64 2
  %64 = bitcast %"struct.spirv_cross::SPIRVariable"** %63 to <2 x i64>*
  store <2 x i64> %61, <2 x i64>* %64, align 8, !alias.scope !40, !noalias !37
  %65 = or i64 %53, 4
  %66 = getelementptr inbounds %"struct.spirv_cross::SPIRVariable"*, %"struct.spirv_cross::SPIRVariable"** %21, i64 %65
  %67 = getelementptr inbounds %"struct.spirv_cross::SPIRVariable"*, %"struct.spirv_cross::SPIRVariable"** %26, i64 %65
  %68 = bitcast %"struct.spirv_cross::SPIRVariable"** %67 to <2 x i64>*
  %69 = load <2 x i64>, <2 x i64>* %68, align 8, !alias.scope !37
  %70 = getelementptr inbounds %"struct.spirv_cross::SPIRVariable"*, %"struct.spirv_cross::SPIRVariable"** %67, i64 2
  %71 = bitcast %"struct.spirv_cross::SPIRVariable"** %70 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 8, !alias.scope !37
  %73 = bitcast %"struct.spirv_cross::SPIRVariable"** %66 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %73, align 8, !alias.scope !40, !noalias !37
  %74 = getelementptr inbounds %"struct.spirv_cross::SPIRVariable"*, %"struct.spirv_cross::SPIRVariable"** %66, i64 2
  %75 = bitcast %"struct.spirv_cross::SPIRVariable"** %74 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %75, align 8, !alias.scope !40, !noalias !37
  %76 = or i64 %53, 8
  %77 = getelementptr inbounds %"struct.spirv_cross::SPIRVariable"*, %"struct.spirv_cross::SPIRVariable"** %21, i64 %76
  %78 = getelementptr inbounds %"struct.spirv_cross::SPIRVariable"*, %"struct.spirv_cross::SPIRVariable"** %26, i64 %76
  %79 = bitcast %"struct.spirv_cross::SPIRVariable"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !37
  %81 = getelementptr inbounds %"struct.spirv_cross::SPIRVariable"*, %"struct.spirv_cross::SPIRVariable"** %78, i64 2
  %82 = bitcast %"struct.spirv_cross::SPIRVariable"** %81 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 8, !alias.scope !37
  %84 = bitcast %"struct.spirv_cross::SPIRVariable"** %77 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %84, align 8, !alias.scope !40, !noalias !37
  %85 = getelementptr inbounds %"struct.spirv_cross::SPIRVariable"*, %"struct.spirv_cross::SPIRVariable"** %77, i64 2
  %86 = bitcast %"struct.spirv_cross::SPIRVariable"** %85 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %86, align 8, !alias.scope !40, !noalias !37
  %87 = or i64 %53, 12
  %88 = getelementptr inbounds %"struct.spirv_cross::SPIRVariable"*, %"struct.spirv_cross::SPIRVariable"** %21, i64 %87
  %89 = getelementptr inbounds %"struct.spirv_cross::SPIRVariable"*, %"struct.spirv_cross::SPIRVariable"** %26, i64 %87
  %90 = bitcast %"struct.spirv_cross::SPIRVariable"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !37
  %92 = getelementptr inbounds %"struct.spirv_cross::SPIRVariable"*, %"struct.spirv_cross::SPIRVariable"** %89, i64 2
  %93 = bitcast %"struct.spirv_cross::SPIRVariable"** %92 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 8, !alias.scope !37
  %95 = bitcast %"struct.spirv_cross::SPIRVariable"** %88 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %95, align 8, !alias.scope !40, !noalias !37
  %96 = getelementptr inbounds %"struct.spirv_cross::SPIRVariable"*, %"struct.spirv_cross::SPIRVariable"** %88, i64 2
  %97 = bitcast %"struct.spirv_cross::SPIRVariable"** %96 to <2 x i64>*
  store <2 x i64> %94, <2 x i64>* %97, align 8, !alias.scope !40, !noalias !37
  %98 = add i64 %53, 16
  %99 = add i64 %54, -4
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %52, !llvm.loop !42

101:                                              ; preds = %52, %43
  %102 = phi i64 [ 0, %43 ], [ %98, %52 ]
  %103 = icmp eq i64 %48, 0
  br i1 %103, label %120, label %104

104:                                              ; preds = %101, %104
  %105 = phi i64 [ %117, %104 ], [ %102, %101 ]
  %106 = phi i64 [ %118, %104 ], [ %48, %101 ]
  %107 = getelementptr inbounds %"struct.spirv_cross::SPIRVariable"*, %"struct.spirv_cross::SPIRVariable"** %21, i64 %105
  %108 = getelementptr inbounds %"struct.spirv_cross::SPIRVariable"*, %"struct.spirv_cross::SPIRVariable"** %26, i64 %105
  %109 = bitcast %"struct.spirv_cross::SPIRVariable"** %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !37
  %111 = getelementptr inbounds %"struct.spirv_cross::SPIRVariable"*, %"struct.spirv_cross::SPIRVariable"** %108, i64 2
  %112 = bitcast %"struct.spirv_cross::SPIRVariable"** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !37
  %114 = bitcast %"struct.spirv_cross::SPIRVariable"** %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !40, !noalias !37
  %115 = getelementptr inbounds %"struct.spirv_cross::SPIRVariable"*, %"struct.spirv_cross::SPIRVariable"** %107, i64 2
  %116 = bitcast %"struct.spirv_cross::SPIRVariable"** %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !40, !noalias !37
  %117 = add i64 %105, 4
  %118 = add i64 %106, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %104, !llvm.loop !43

120:                                              ; preds = %104, %101
  %121 = icmp eq i64 %31, %44
  br i1 %121, label %133, label %122

122:                                              ; preds = %120, %35, %33
  %123 = phi i64 [ 0, %35 ], [ 0, %33 ], [ %44, %120 ]
  br label %124

124:                                              ; preds = %122, %124
  %125 = phi i64 [ %131, %124 ], [ %123, %122 ]
  %126 = getelementptr inbounds %"struct.spirv_cross::SPIRVariable"*, %"struct.spirv_cross::SPIRVariable"** %21, i64 %125
  %127 = getelementptr inbounds %"struct.spirv_cross::SPIRVariable"*, %"struct.spirv_cross::SPIRVariable"** %26, i64 %125
  %128 = bitcast %"struct.spirv_cross::SPIRVariable"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.spirv_cross::SPIRVariable"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = add nuw i64 %125, 1
  %132 = icmp ult i64 %131, %31
  br i1 %132, label %124, label %133, !llvm.loop !44

133:                                              ; preds = %124, %120, %29, %24
  %134 = phi %"struct.spirv_cross::SPIRVariable"** [ %21, %24 ], [ %26, %29 ], [ %26, %120 ], [ %26, %124 ]
  %135 = icmp eq %"struct.spirv_cross::SPIRVariable"** %134, null
  br i1 %135, label %137, label %136

136:                                              ; preds = %133
  tail call void @free(i8* %27) #17
  br label %137

137:                                              ; preds = %133, %136
  %138 = bitcast %"class.spirv_cross::SmallVector.172"* %0 to i8**
  store i8* %20, i8** %138, align 8
  store i64 %13, i64* %6, align 8
  br label %139

139:                                              ; preds = %137, %5
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_12SPIRConstantEED2Ev(%"class.spirv_cross::ObjectPool.186"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_12SPIRConstantEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.195", %"class.spirv_cross::SmallVector.195"* %3, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ 0, %7 ], [ %18, %17 ]
  %11 = load %"class.std::__1::unique_ptr.197"*, %"class.std::__1::unique_ptr.197"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197"* %11, i64 %10, i32 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %12, align 8
  store %"struct.spirv_cross::SPIRConstant"* null, %"struct.spirv_cross::SPIRConstant"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::SPIRConstant"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = bitcast %"struct.spirv_cross::SPIRConstant"* %13 to i8*
  tail call void @free(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %9
  %18 = add nuw i64 %10, 1
  %19 = load i64, i64* %4, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %9, label %21

21:                                               ; preds = %17, %1
  store i64 0, i64* %4, align 8
  %22 = getelementptr inbounds %"class.spirv_cross::SmallVector.195", %"class.spirv_cross::SmallVector.195"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.197"*, %"class.std::__1::unique_ptr.197"** %22, align 8
  %24 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 2, i32 2
  %25 = bitcast %"class.spirv_cross::AlignedBuffer.201"* %24 to %"class.std::__1::unique_ptr.197"*
  %26 = icmp eq %"class.std::__1::unique_ptr.197"* %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::unique_ptr.197"* %23 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %21, %27
  %30 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.spirv_cross::SPIRConstant"**, %"struct.spirv_cross::SPIRConstant"*** %31, align 8
  %33 = icmp eq %"struct.spirv_cross::SPIRConstant"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.spirv_cross::SPIRConstant"** %32 to i8*
  tail call void @free(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %34
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_12SPIRConstantEED0Ev(%"class.spirv_cross::ObjectPool.186"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_12SPIRConstantEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.195", %"class.spirv_cross::SmallVector.195"* %3, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ 0, %7 ], [ %18, %17 ]
  %11 = load %"class.std::__1::unique_ptr.197"*, %"class.std::__1::unique_ptr.197"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197"* %11, i64 %10, i32 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %12, align 8
  store %"struct.spirv_cross::SPIRConstant"* null, %"struct.spirv_cross::SPIRConstant"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::SPIRConstant"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = bitcast %"struct.spirv_cross::SPIRConstant"* %13 to i8*
  tail call void @free(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %9
  %18 = add nuw i64 %10, 1
  %19 = load i64, i64* %4, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %9, label %21

21:                                               ; preds = %17, %1
  store i64 0, i64* %4, align 8
  %22 = getelementptr inbounds %"class.spirv_cross::SmallVector.195", %"class.spirv_cross::SmallVector.195"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.197"*, %"class.std::__1::unique_ptr.197"** %22, align 8
  %24 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 2, i32 2
  %25 = bitcast %"class.spirv_cross::AlignedBuffer.201"* %24 to %"class.std::__1::unique_ptr.197"*
  %26 = icmp eq %"class.std::__1::unique_ptr.197"* %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::unique_ptr.197"* %23 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %27, %21
  %30 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.spirv_cross::SPIRConstant"**, %"struct.spirv_cross::SPIRConstant"*** %31, align 8
  %33 = icmp eq %"struct.spirv_cross::SPIRConstant"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.spirv_cross::SPIRConstant"** %32 to i8*
  tail call void @free(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %34
  %37 = bitcast %"class.spirv_cross::ObjectPool.186"* %0 to i8*
  tail call void @_ZdlPv(i8* %37) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_12SPIRConstantEE11free_opaqueEPv(%"class.spirv_cross::ObjectPool.186"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.spirv_cross::SPIRConstant"*
  %4 = ptrtoint i8* %1 to i64
  %5 = bitcast i8* %1 to void (%"struct.spirv_cross::SPIRConstant"*)***
  %6 = load void (%"struct.spirv_cross::SPIRConstant"*)**, void (%"struct.spirv_cross::SPIRConstant"*)*** %5, align 8
  %7 = load void (%"struct.spirv_cross::SPIRConstant"*)*, void (%"struct.spirv_cross::SPIRConstant"*)** %6, align 8
  tail call void %7(%"struct.spirv_cross::SPIRConstant"* %3) #17
  %8 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 1
  tail call void @_ZN11spirv_cross11SmallVectorIPNS_12SPIRConstantELm0EE7reserveEm(%"class.spirv_cross::SmallVector.187"* %8, i64 %11) #17
  %12 = getelementptr inbounds %"class.spirv_cross::SmallVector.187", %"class.spirv_cross::SmallVector.187"* %8, i64 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRConstant"**, %"struct.spirv_cross::SPIRConstant"*** %12, align 8
  %14 = load i64, i64* %9, align 8
  %15 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %13, i64 %14
  %16 = bitcast %"struct.spirv_cross::SPIRConstant"** %15 to i64*
  store i64 %4, i64* %16, align 8
  %17 = load i64, i64* %9, align 8
  %18 = add i64 %17, 1
  store i64 %18, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross11SmallVectorIPNS_12SPIRConstantELm0EE7reserveEm(%"class.spirv_cross::SmallVector.187"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 2305843009213693951
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @_ZSt9terminatev() #19
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.spirv_cross::SmallVector.187", %"class.spirv_cross::SmallVector.187"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %139

9:                                                ; preds = %5
  %10 = icmp eq i64 %7, 0
  %11 = select i1 %10, i64 1, i64 %7
  br label %12

12:                                               ; preds = %12, %9
  %13 = phi i64 [ %11, %9 ], [ %15, %12 ]
  %14 = icmp ult i64 %13, %1
  %15 = shl i64 %13, 1
  br i1 %14, label %12, label %16

16:                                               ; preds = %12
  %17 = icmp eq i64 %13, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = shl i64 %13, 3
  %20 = tail call noalias i8* @malloc(i64 %19) #17
  %21 = bitcast i8* %20 to %"struct.spirv_cross::SPIRConstant"**
  %22 = icmp eq i8* %20, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %16, %18
  tail call void @_ZSt9terminatev() #19
  unreachable

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.spirv_cross::SmallVector.187", %"class.spirv_cross::SmallVector.187"* %0, i64 0, i32 0, i32 0
  %26 = load %"struct.spirv_cross::SPIRConstant"**, %"struct.spirv_cross::SPIRConstant"*** %25, align 8
  %27 = bitcast %"struct.spirv_cross::SPIRConstant"** %26 to i8*
  %28 = icmp eq %"struct.spirv_cross::SPIRConstant"** %26, %21
  br i1 %28, label %133, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.spirv_cross::SmallVector.187", %"class.spirv_cross::SmallVector.187"* %0, i64 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %133, label %33

33:                                               ; preds = %29
  %34 = icmp ult i64 %31, 4
  br i1 %34, label %122, label %35

35:                                               ; preds = %33
  %36 = shl i64 %31, 3
  %37 = getelementptr i8, i8* %20, i64 %36
  %38 = getelementptr %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %26, i64 %31
  %39 = bitcast %"struct.spirv_cross::SPIRConstant"** %38 to i8*
  %40 = icmp ult i8* %20, %39
  %41 = icmp ugt i8* %37, %27
  %42 = and i1 %40, %41
  br i1 %42, label %122, label %43

43:                                               ; preds = %35
  %44 = and i64 %31, -4
  %45 = add i64 %44, -4
  %46 = lshr exact i64 %45, 2
  %47 = add nuw nsw i64 %46, 1
  %48 = and i64 %47, 3
  %49 = icmp ult i64 %45, 12
  br i1 %49, label %101, label %50

50:                                               ; preds = %43
  %51 = sub nsw i64 %47, %48
  br label %52

52:                                               ; preds = %52, %50
  %53 = phi i64 [ 0, %50 ], [ %98, %52 ]
  %54 = phi i64 [ %51, %50 ], [ %99, %52 ]
  %55 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %21, i64 %53
  %56 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %26, i64 %53
  %57 = bitcast %"struct.spirv_cross::SPIRConstant"** %56 to <2 x i64>*
  %58 = load <2 x i64>, <2 x i64>* %57, align 8, !alias.scope !45
  %59 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %56, i64 2
  %60 = bitcast %"struct.spirv_cross::SPIRConstant"** %59 to <2 x i64>*
  %61 = load <2 x i64>, <2 x i64>* %60, align 8, !alias.scope !45
  %62 = bitcast %"struct.spirv_cross::SPIRConstant"** %55 to <2 x i64>*
  store <2 x i64> %58, <2 x i64>* %62, align 8, !alias.scope !48, !noalias !45
  %63 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %55, i64 2
  %64 = bitcast %"struct.spirv_cross::SPIRConstant"** %63 to <2 x i64>*
  store <2 x i64> %61, <2 x i64>* %64, align 8, !alias.scope !48, !noalias !45
  %65 = or i64 %53, 4
  %66 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %21, i64 %65
  %67 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %26, i64 %65
  %68 = bitcast %"struct.spirv_cross::SPIRConstant"** %67 to <2 x i64>*
  %69 = load <2 x i64>, <2 x i64>* %68, align 8, !alias.scope !45
  %70 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %67, i64 2
  %71 = bitcast %"struct.spirv_cross::SPIRConstant"** %70 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 8, !alias.scope !45
  %73 = bitcast %"struct.spirv_cross::SPIRConstant"** %66 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %73, align 8, !alias.scope !48, !noalias !45
  %74 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %66, i64 2
  %75 = bitcast %"struct.spirv_cross::SPIRConstant"** %74 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %75, align 8, !alias.scope !48, !noalias !45
  %76 = or i64 %53, 8
  %77 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %21, i64 %76
  %78 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %26, i64 %76
  %79 = bitcast %"struct.spirv_cross::SPIRConstant"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !45
  %81 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %78, i64 2
  %82 = bitcast %"struct.spirv_cross::SPIRConstant"** %81 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 8, !alias.scope !45
  %84 = bitcast %"struct.spirv_cross::SPIRConstant"** %77 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %84, align 8, !alias.scope !48, !noalias !45
  %85 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %77, i64 2
  %86 = bitcast %"struct.spirv_cross::SPIRConstant"** %85 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %86, align 8, !alias.scope !48, !noalias !45
  %87 = or i64 %53, 12
  %88 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %21, i64 %87
  %89 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %26, i64 %87
  %90 = bitcast %"struct.spirv_cross::SPIRConstant"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !45
  %92 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %89, i64 2
  %93 = bitcast %"struct.spirv_cross::SPIRConstant"** %92 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 8, !alias.scope !45
  %95 = bitcast %"struct.spirv_cross::SPIRConstant"** %88 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %95, align 8, !alias.scope !48, !noalias !45
  %96 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %88, i64 2
  %97 = bitcast %"struct.spirv_cross::SPIRConstant"** %96 to <2 x i64>*
  store <2 x i64> %94, <2 x i64>* %97, align 8, !alias.scope !48, !noalias !45
  %98 = add i64 %53, 16
  %99 = add i64 %54, -4
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %52, !llvm.loop !50

101:                                              ; preds = %52, %43
  %102 = phi i64 [ 0, %43 ], [ %98, %52 ]
  %103 = icmp eq i64 %48, 0
  br i1 %103, label %120, label %104

104:                                              ; preds = %101, %104
  %105 = phi i64 [ %117, %104 ], [ %102, %101 ]
  %106 = phi i64 [ %118, %104 ], [ %48, %101 ]
  %107 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %21, i64 %105
  %108 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %26, i64 %105
  %109 = bitcast %"struct.spirv_cross::SPIRConstant"** %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !45
  %111 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %108, i64 2
  %112 = bitcast %"struct.spirv_cross::SPIRConstant"** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !45
  %114 = bitcast %"struct.spirv_cross::SPIRConstant"** %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !48, !noalias !45
  %115 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %107, i64 2
  %116 = bitcast %"struct.spirv_cross::SPIRConstant"** %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !48, !noalias !45
  %117 = add i64 %105, 4
  %118 = add i64 %106, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %104, !llvm.loop !51

120:                                              ; preds = %104, %101
  %121 = icmp eq i64 %31, %44
  br i1 %121, label %133, label %122

122:                                              ; preds = %120, %35, %33
  %123 = phi i64 [ 0, %35 ], [ 0, %33 ], [ %44, %120 ]
  br label %124

124:                                              ; preds = %122, %124
  %125 = phi i64 [ %131, %124 ], [ %123, %122 ]
  %126 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %21, i64 %125
  %127 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %26, i64 %125
  %128 = bitcast %"struct.spirv_cross::SPIRConstant"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.spirv_cross::SPIRConstant"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = add nuw i64 %125, 1
  %132 = icmp ult i64 %131, %31
  br i1 %132, label %124, label %133, !llvm.loop !52

133:                                              ; preds = %124, %120, %29, %24
  %134 = phi %"struct.spirv_cross::SPIRConstant"** [ %21, %24 ], [ %26, %29 ], [ %26, %120 ], [ %26, %124 ]
  %135 = icmp eq %"struct.spirv_cross::SPIRConstant"** %134, null
  br i1 %135, label %137, label %136

136:                                              ; preds = %133
  tail call void @free(i8* %27) #17
  br label %137

137:                                              ; preds = %133, %136
  %138 = bitcast %"class.spirv_cross::SmallVector.187"* %0 to i8**
  store i8* %20, i8** %138, align 8
  store i64 %13, i64* %6, align 8
  br label %139

139:                                              ; preds = %137, %5
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_12SPIRFunctionEED2Ev(%"class.spirv_cross::ObjectPool.203"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ObjectPool.203", %"class.spirv_cross::ObjectPool.203"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_12SPIRFunctionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool.203", %"class.spirv_cross::ObjectPool.203"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool.203", %"class.spirv_cross::ObjectPool.203"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.224", %"class.spirv_cross::SmallVector.224"* %3, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ 0, %7 ], [ %18, %17 ]
  %11 = load %"class.std::__1::unique_ptr.226"*, %"class.std::__1::unique_ptr.226"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.226"* %11, i64 %10, i32 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRFunction"** %12, align 8
  store %"struct.spirv_cross::SPIRFunction"* null, %"struct.spirv_cross::SPIRFunction"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::SPIRFunction"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = bitcast %"struct.spirv_cross::SPIRFunction"* %13 to i8*
  tail call void @free(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %9
  %18 = add nuw i64 %10, 1
  %19 = load i64, i64* %4, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %9, label %21

21:                                               ; preds = %17, %1
  store i64 0, i64* %4, align 8
  %22 = getelementptr inbounds %"class.spirv_cross::SmallVector.224", %"class.spirv_cross::SmallVector.224"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.226"*, %"class.std::__1::unique_ptr.226"** %22, align 8
  %24 = getelementptr inbounds %"class.spirv_cross::ObjectPool.203", %"class.spirv_cross::ObjectPool.203"* %0, i64 0, i32 2, i32 2
  %25 = bitcast %"class.spirv_cross::AlignedBuffer.230"* %24 to %"class.std::__1::unique_ptr.226"*
  %26 = icmp eq %"class.std::__1::unique_ptr.226"* %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::unique_ptr.226"* %23 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %21, %27
  %30 = getelementptr inbounds %"class.spirv_cross::ObjectPool.203", %"class.spirv_cross::ObjectPool.203"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spirv_cross::ObjectPool.203", %"class.spirv_cross::ObjectPool.203"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.spirv_cross::SPIRFunction"**, %"struct.spirv_cross::SPIRFunction"*** %31, align 8
  %33 = icmp eq %"struct.spirv_cross::SPIRFunction"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.spirv_cross::SPIRFunction"** %32 to i8*
  tail call void @free(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %34
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_12SPIRFunctionEED0Ev(%"class.spirv_cross::ObjectPool.203"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ObjectPool.203", %"class.spirv_cross::ObjectPool.203"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_12SPIRFunctionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool.203", %"class.spirv_cross::ObjectPool.203"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool.203", %"class.spirv_cross::ObjectPool.203"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.224", %"class.spirv_cross::SmallVector.224"* %3, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ 0, %7 ], [ %18, %17 ]
  %11 = load %"class.std::__1::unique_ptr.226"*, %"class.std::__1::unique_ptr.226"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.226"* %11, i64 %10, i32 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRFunction"** %12, align 8
  store %"struct.spirv_cross::SPIRFunction"* null, %"struct.spirv_cross::SPIRFunction"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::SPIRFunction"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = bitcast %"struct.spirv_cross::SPIRFunction"* %13 to i8*
  tail call void @free(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %9
  %18 = add nuw i64 %10, 1
  %19 = load i64, i64* %4, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %9, label %21

21:                                               ; preds = %17, %1
  store i64 0, i64* %4, align 8
  %22 = getelementptr inbounds %"class.spirv_cross::SmallVector.224", %"class.spirv_cross::SmallVector.224"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.226"*, %"class.std::__1::unique_ptr.226"** %22, align 8
  %24 = getelementptr inbounds %"class.spirv_cross::ObjectPool.203", %"class.spirv_cross::ObjectPool.203"* %0, i64 0, i32 2, i32 2
  %25 = bitcast %"class.spirv_cross::AlignedBuffer.230"* %24 to %"class.std::__1::unique_ptr.226"*
  %26 = icmp eq %"class.std::__1::unique_ptr.226"* %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::unique_ptr.226"* %23 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %27, %21
  %30 = getelementptr inbounds %"class.spirv_cross::ObjectPool.203", %"class.spirv_cross::ObjectPool.203"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spirv_cross::ObjectPool.203", %"class.spirv_cross::ObjectPool.203"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.spirv_cross::SPIRFunction"**, %"struct.spirv_cross::SPIRFunction"*** %31, align 8
  %33 = icmp eq %"struct.spirv_cross::SPIRFunction"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.spirv_cross::SPIRFunction"** %32 to i8*
  tail call void @free(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %34
  %37 = bitcast %"class.spirv_cross::ObjectPool.203"* %0 to i8*
  tail call void @_ZdlPv(i8* %37) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_12SPIRFunctionEE11free_opaqueEPv(%"class.spirv_cross::ObjectPool.203"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.spirv_cross::SPIRFunction"*
  %4 = ptrtoint i8* %1 to i64
  %5 = bitcast i8* %1 to void (%"struct.spirv_cross::SPIRFunction"*)***
  %6 = load void (%"struct.spirv_cross::SPIRFunction"*)**, void (%"struct.spirv_cross::SPIRFunction"*)*** %5, align 8
  %7 = load void (%"struct.spirv_cross::SPIRFunction"*)*, void (%"struct.spirv_cross::SPIRFunction"*)** %6, align 8
  tail call void %7(%"struct.spirv_cross::SPIRFunction"* %3) #17
  %8 = getelementptr inbounds %"class.spirv_cross::ObjectPool.203", %"class.spirv_cross::ObjectPool.203"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.spirv_cross::ObjectPool.203", %"class.spirv_cross::ObjectPool.203"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 1
  tail call void @_ZN11spirv_cross11SmallVectorIPNS_12SPIRFunctionELm0EE7reserveEm(%"class.spirv_cross::SmallVector.204"* %8, i64 %11) #17
  %12 = getelementptr inbounds %"class.spirv_cross::SmallVector.204", %"class.spirv_cross::SmallVector.204"* %8, i64 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRFunction"**, %"struct.spirv_cross::SPIRFunction"*** %12, align 8
  %14 = load i64, i64* %9, align 8
  %15 = getelementptr inbounds %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRFunction"** %13, i64 %14
  %16 = bitcast %"struct.spirv_cross::SPIRFunction"** %15 to i64*
  store i64 %4, i64* %16, align 8
  %17 = load i64, i64* %9, align 8
  %18 = add i64 %17, 1
  store i64 %18, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross11SmallVectorIPNS_12SPIRFunctionELm0EE7reserveEm(%"class.spirv_cross::SmallVector.204"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 2305843009213693951
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @_ZSt9terminatev() #19
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.spirv_cross::SmallVector.204", %"class.spirv_cross::SmallVector.204"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %139

9:                                                ; preds = %5
  %10 = icmp eq i64 %7, 0
  %11 = select i1 %10, i64 1, i64 %7
  br label %12

12:                                               ; preds = %12, %9
  %13 = phi i64 [ %11, %9 ], [ %15, %12 ]
  %14 = icmp ult i64 %13, %1
  %15 = shl i64 %13, 1
  br i1 %14, label %12, label %16

16:                                               ; preds = %12
  %17 = icmp eq i64 %13, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = shl i64 %13, 3
  %20 = tail call noalias i8* @malloc(i64 %19) #17
  %21 = bitcast i8* %20 to %"struct.spirv_cross::SPIRFunction"**
  %22 = icmp eq i8* %20, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %16, %18
  tail call void @_ZSt9terminatev() #19
  unreachable

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.spirv_cross::SmallVector.204", %"class.spirv_cross::SmallVector.204"* %0, i64 0, i32 0, i32 0
  %26 = load %"struct.spirv_cross::SPIRFunction"**, %"struct.spirv_cross::SPIRFunction"*** %25, align 8
  %27 = bitcast %"struct.spirv_cross::SPIRFunction"** %26 to i8*
  %28 = icmp eq %"struct.spirv_cross::SPIRFunction"** %26, %21
  br i1 %28, label %133, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.spirv_cross::SmallVector.204", %"class.spirv_cross::SmallVector.204"* %0, i64 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %133, label %33

33:                                               ; preds = %29
  %34 = icmp ult i64 %31, 4
  br i1 %34, label %122, label %35

35:                                               ; preds = %33
  %36 = shl i64 %31, 3
  %37 = getelementptr i8, i8* %20, i64 %36
  %38 = getelementptr %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRFunction"** %26, i64 %31
  %39 = bitcast %"struct.spirv_cross::SPIRFunction"** %38 to i8*
  %40 = icmp ult i8* %20, %39
  %41 = icmp ugt i8* %37, %27
  %42 = and i1 %40, %41
  br i1 %42, label %122, label %43

43:                                               ; preds = %35
  %44 = and i64 %31, -4
  %45 = add i64 %44, -4
  %46 = lshr exact i64 %45, 2
  %47 = add nuw nsw i64 %46, 1
  %48 = and i64 %47, 3
  %49 = icmp ult i64 %45, 12
  br i1 %49, label %101, label %50

50:                                               ; preds = %43
  %51 = sub nsw i64 %47, %48
  br label %52

52:                                               ; preds = %52, %50
  %53 = phi i64 [ 0, %50 ], [ %98, %52 ]
  %54 = phi i64 [ %51, %50 ], [ %99, %52 ]
  %55 = getelementptr inbounds %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRFunction"** %21, i64 %53
  %56 = getelementptr inbounds %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRFunction"** %26, i64 %53
  %57 = bitcast %"struct.spirv_cross::SPIRFunction"** %56 to <2 x i64>*
  %58 = load <2 x i64>, <2 x i64>* %57, align 8, !alias.scope !53
  %59 = getelementptr inbounds %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRFunction"** %56, i64 2
  %60 = bitcast %"struct.spirv_cross::SPIRFunction"** %59 to <2 x i64>*
  %61 = load <2 x i64>, <2 x i64>* %60, align 8, !alias.scope !53
  %62 = bitcast %"struct.spirv_cross::SPIRFunction"** %55 to <2 x i64>*
  store <2 x i64> %58, <2 x i64>* %62, align 8, !alias.scope !56, !noalias !53
  %63 = getelementptr inbounds %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRFunction"** %55, i64 2
  %64 = bitcast %"struct.spirv_cross::SPIRFunction"** %63 to <2 x i64>*
  store <2 x i64> %61, <2 x i64>* %64, align 8, !alias.scope !56, !noalias !53
  %65 = or i64 %53, 4
  %66 = getelementptr inbounds %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRFunction"** %21, i64 %65
  %67 = getelementptr inbounds %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRFunction"** %26, i64 %65
  %68 = bitcast %"struct.spirv_cross::SPIRFunction"** %67 to <2 x i64>*
  %69 = load <2 x i64>, <2 x i64>* %68, align 8, !alias.scope !53
  %70 = getelementptr inbounds %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRFunction"** %67, i64 2
  %71 = bitcast %"struct.spirv_cross::SPIRFunction"** %70 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 8, !alias.scope !53
  %73 = bitcast %"struct.spirv_cross::SPIRFunction"** %66 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %73, align 8, !alias.scope !56, !noalias !53
  %74 = getelementptr inbounds %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRFunction"** %66, i64 2
  %75 = bitcast %"struct.spirv_cross::SPIRFunction"** %74 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %75, align 8, !alias.scope !56, !noalias !53
  %76 = or i64 %53, 8
  %77 = getelementptr inbounds %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRFunction"** %21, i64 %76
  %78 = getelementptr inbounds %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRFunction"** %26, i64 %76
  %79 = bitcast %"struct.spirv_cross::SPIRFunction"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !53
  %81 = getelementptr inbounds %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRFunction"** %78, i64 2
  %82 = bitcast %"struct.spirv_cross::SPIRFunction"** %81 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 8, !alias.scope !53
  %84 = bitcast %"struct.spirv_cross::SPIRFunction"** %77 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %84, align 8, !alias.scope !56, !noalias !53
  %85 = getelementptr inbounds %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRFunction"** %77, i64 2
  %86 = bitcast %"struct.spirv_cross::SPIRFunction"** %85 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %86, align 8, !alias.scope !56, !noalias !53
  %87 = or i64 %53, 12
  %88 = getelementptr inbounds %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRFunction"** %21, i64 %87
  %89 = getelementptr inbounds %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRFunction"** %26, i64 %87
  %90 = bitcast %"struct.spirv_cross::SPIRFunction"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !53
  %92 = getelementptr inbounds %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRFunction"** %89, i64 2
  %93 = bitcast %"struct.spirv_cross::SPIRFunction"** %92 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 8, !alias.scope !53
  %95 = bitcast %"struct.spirv_cross::SPIRFunction"** %88 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %95, align 8, !alias.scope !56, !noalias !53
  %96 = getelementptr inbounds %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRFunction"** %88, i64 2
  %97 = bitcast %"struct.spirv_cross::SPIRFunction"** %96 to <2 x i64>*
  store <2 x i64> %94, <2 x i64>* %97, align 8, !alias.scope !56, !noalias !53
  %98 = add i64 %53, 16
  %99 = add i64 %54, -4
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %52, !llvm.loop !58

101:                                              ; preds = %52, %43
  %102 = phi i64 [ 0, %43 ], [ %98, %52 ]
  %103 = icmp eq i64 %48, 0
  br i1 %103, label %120, label %104

104:                                              ; preds = %101, %104
  %105 = phi i64 [ %117, %104 ], [ %102, %101 ]
  %106 = phi i64 [ %118, %104 ], [ %48, %101 ]
  %107 = getelementptr inbounds %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRFunction"** %21, i64 %105
  %108 = getelementptr inbounds %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRFunction"** %26, i64 %105
  %109 = bitcast %"struct.spirv_cross::SPIRFunction"** %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !53
  %111 = getelementptr inbounds %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRFunction"** %108, i64 2
  %112 = bitcast %"struct.spirv_cross::SPIRFunction"** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !53
  %114 = bitcast %"struct.spirv_cross::SPIRFunction"** %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !56, !noalias !53
  %115 = getelementptr inbounds %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRFunction"** %107, i64 2
  %116 = bitcast %"struct.spirv_cross::SPIRFunction"** %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !56, !noalias !53
  %117 = add i64 %105, 4
  %118 = add i64 %106, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %104, !llvm.loop !59

120:                                              ; preds = %104, %101
  %121 = icmp eq i64 %31, %44
  br i1 %121, label %133, label %122

122:                                              ; preds = %120, %35, %33
  %123 = phi i64 [ 0, %35 ], [ 0, %33 ], [ %44, %120 ]
  br label %124

124:                                              ; preds = %122, %124
  %125 = phi i64 [ %131, %124 ], [ %123, %122 ]
  %126 = getelementptr inbounds %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRFunction"** %21, i64 %125
  %127 = getelementptr inbounds %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRFunction"** %26, i64 %125
  %128 = bitcast %"struct.spirv_cross::SPIRFunction"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.spirv_cross::SPIRFunction"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = add nuw i64 %125, 1
  %132 = icmp ult i64 %131, %31
  br i1 %132, label %124, label %133, !llvm.loop !60

133:                                              ; preds = %124, %120, %29, %24
  %134 = phi %"struct.spirv_cross::SPIRFunction"** [ %21, %24 ], [ %26, %29 ], [ %26, %120 ], [ %26, %124 ]
  %135 = icmp eq %"struct.spirv_cross::SPIRFunction"** %134, null
  br i1 %135, label %137, label %136

136:                                              ; preds = %133
  tail call void @free(i8* %27) #17
  br label %137

137:                                              ; preds = %133, %136
  %138 = bitcast %"class.spirv_cross::SmallVector.204"* %0 to i8**
  store i8* %20, i8** %138, align 8
  store i64 %13, i64* %6, align 8
  br label %139

139:                                              ; preds = %137, %5
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_21SPIRFunctionPrototypeEED2Ev(%"class.spirv_cross::ObjectPool.232"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ObjectPool.232", %"class.spirv_cross::ObjectPool.232"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_21SPIRFunctionPrototypeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool.232", %"class.spirv_cross::ObjectPool.232"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool.232", %"class.spirv_cross::ObjectPool.232"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.237", %"class.spirv_cross::SmallVector.237"* %3, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ 0, %7 ], [ %18, %17 ]
  %11 = load %"class.std::__1::unique_ptr.239"*, %"class.std::__1::unique_ptr.239"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.239"* %11, i64 %10, i32 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRFunctionPrototype"*, %"struct.spirv_cross::SPIRFunctionPrototype"** %12, align 8
  store %"struct.spirv_cross::SPIRFunctionPrototype"* null, %"struct.spirv_cross::SPIRFunctionPrototype"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::SPIRFunctionPrototype"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"* %13 to i8*
  tail call void @free(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %9
  %18 = add nuw i64 %10, 1
  %19 = load i64, i64* %4, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %9, label %21

21:                                               ; preds = %17, %1
  store i64 0, i64* %4, align 8
  %22 = getelementptr inbounds %"class.spirv_cross::SmallVector.237", %"class.spirv_cross::SmallVector.237"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.239"*, %"class.std::__1::unique_ptr.239"** %22, align 8
  %24 = getelementptr inbounds %"class.spirv_cross::ObjectPool.232", %"class.spirv_cross::ObjectPool.232"* %0, i64 0, i32 2, i32 2
  %25 = bitcast %"class.spirv_cross::AlignedBuffer.243"* %24 to %"class.std::__1::unique_ptr.239"*
  %26 = icmp eq %"class.std::__1::unique_ptr.239"* %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::unique_ptr.239"* %23 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %21, %27
  %30 = getelementptr inbounds %"class.spirv_cross::ObjectPool.232", %"class.spirv_cross::ObjectPool.232"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spirv_cross::ObjectPool.232", %"class.spirv_cross::ObjectPool.232"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.spirv_cross::SPIRFunctionPrototype"**, %"struct.spirv_cross::SPIRFunctionPrototype"*** %31, align 8
  %33 = icmp eq %"struct.spirv_cross::SPIRFunctionPrototype"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"** %32 to i8*
  tail call void @free(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %34
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_21SPIRFunctionPrototypeEED0Ev(%"class.spirv_cross::ObjectPool.232"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ObjectPool.232", %"class.spirv_cross::ObjectPool.232"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_21SPIRFunctionPrototypeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool.232", %"class.spirv_cross::ObjectPool.232"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool.232", %"class.spirv_cross::ObjectPool.232"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.237", %"class.spirv_cross::SmallVector.237"* %3, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ 0, %7 ], [ %18, %17 ]
  %11 = load %"class.std::__1::unique_ptr.239"*, %"class.std::__1::unique_ptr.239"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.239"* %11, i64 %10, i32 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRFunctionPrototype"*, %"struct.spirv_cross::SPIRFunctionPrototype"** %12, align 8
  store %"struct.spirv_cross::SPIRFunctionPrototype"* null, %"struct.spirv_cross::SPIRFunctionPrototype"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::SPIRFunctionPrototype"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"* %13 to i8*
  tail call void @free(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %9
  %18 = add nuw i64 %10, 1
  %19 = load i64, i64* %4, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %9, label %21

21:                                               ; preds = %17, %1
  store i64 0, i64* %4, align 8
  %22 = getelementptr inbounds %"class.spirv_cross::SmallVector.237", %"class.spirv_cross::SmallVector.237"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.239"*, %"class.std::__1::unique_ptr.239"** %22, align 8
  %24 = getelementptr inbounds %"class.spirv_cross::ObjectPool.232", %"class.spirv_cross::ObjectPool.232"* %0, i64 0, i32 2, i32 2
  %25 = bitcast %"class.spirv_cross::AlignedBuffer.243"* %24 to %"class.std::__1::unique_ptr.239"*
  %26 = icmp eq %"class.std::__1::unique_ptr.239"* %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::unique_ptr.239"* %23 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %27, %21
  %30 = getelementptr inbounds %"class.spirv_cross::ObjectPool.232", %"class.spirv_cross::ObjectPool.232"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spirv_cross::ObjectPool.232", %"class.spirv_cross::ObjectPool.232"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.spirv_cross::SPIRFunctionPrototype"**, %"struct.spirv_cross::SPIRFunctionPrototype"*** %31, align 8
  %33 = icmp eq %"struct.spirv_cross::SPIRFunctionPrototype"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"** %32 to i8*
  tail call void @free(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %34
  %37 = bitcast %"class.spirv_cross::ObjectPool.232"* %0 to i8*
  tail call void @_ZdlPv(i8* %37) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_21SPIRFunctionPrototypeEE11free_opaqueEPv(%"class.spirv_cross::ObjectPool.232"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.spirv_cross::SPIRFunctionPrototype"*
  %4 = ptrtoint i8* %1 to i64
  %5 = bitcast i8* %1 to void (%"struct.spirv_cross::SPIRFunctionPrototype"*)***
  %6 = load void (%"struct.spirv_cross::SPIRFunctionPrototype"*)**, void (%"struct.spirv_cross::SPIRFunctionPrototype"*)*** %5, align 8
  %7 = load void (%"struct.spirv_cross::SPIRFunctionPrototype"*)*, void (%"struct.spirv_cross::SPIRFunctionPrototype"*)** %6, align 8
  tail call void %7(%"struct.spirv_cross::SPIRFunctionPrototype"* %3) #17
  %8 = getelementptr inbounds %"class.spirv_cross::ObjectPool.232", %"class.spirv_cross::ObjectPool.232"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.spirv_cross::ObjectPool.232", %"class.spirv_cross::ObjectPool.232"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 1
  tail call void @_ZN11spirv_cross11SmallVectorIPNS_21SPIRFunctionPrototypeELm0EE7reserveEm(%"class.spirv_cross::SmallVector.233"* %8, i64 %11) #17
  %12 = getelementptr inbounds %"class.spirv_cross::SmallVector.233", %"class.spirv_cross::SmallVector.233"* %8, i64 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRFunctionPrototype"**, %"struct.spirv_cross::SPIRFunctionPrototype"*** %12, align 8
  %14 = load i64, i64* %9, align 8
  %15 = getelementptr inbounds %"struct.spirv_cross::SPIRFunctionPrototype"*, %"struct.spirv_cross::SPIRFunctionPrototype"** %13, i64 %14
  %16 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"** %15 to i64*
  store i64 %4, i64* %16, align 8
  %17 = load i64, i64* %9, align 8
  %18 = add i64 %17, 1
  store i64 %18, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross11SmallVectorIPNS_21SPIRFunctionPrototypeELm0EE7reserveEm(%"class.spirv_cross::SmallVector.233"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 2305843009213693951
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @_ZSt9terminatev() #19
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.spirv_cross::SmallVector.233", %"class.spirv_cross::SmallVector.233"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %139

9:                                                ; preds = %5
  %10 = icmp eq i64 %7, 0
  %11 = select i1 %10, i64 1, i64 %7
  br label %12

12:                                               ; preds = %12, %9
  %13 = phi i64 [ %11, %9 ], [ %15, %12 ]
  %14 = icmp ult i64 %13, %1
  %15 = shl i64 %13, 1
  br i1 %14, label %12, label %16

16:                                               ; preds = %12
  %17 = icmp eq i64 %13, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = shl i64 %13, 3
  %20 = tail call noalias i8* @malloc(i64 %19) #17
  %21 = bitcast i8* %20 to %"struct.spirv_cross::SPIRFunctionPrototype"**
  %22 = icmp eq i8* %20, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %16, %18
  tail call void @_ZSt9terminatev() #19
  unreachable

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.spirv_cross::SmallVector.233", %"class.spirv_cross::SmallVector.233"* %0, i64 0, i32 0, i32 0
  %26 = load %"struct.spirv_cross::SPIRFunctionPrototype"**, %"struct.spirv_cross::SPIRFunctionPrototype"*** %25, align 8
  %27 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"** %26 to i8*
  %28 = icmp eq %"struct.spirv_cross::SPIRFunctionPrototype"** %26, %21
  br i1 %28, label %133, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.spirv_cross::SmallVector.233", %"class.spirv_cross::SmallVector.233"* %0, i64 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %133, label %33

33:                                               ; preds = %29
  %34 = icmp ult i64 %31, 4
  br i1 %34, label %122, label %35

35:                                               ; preds = %33
  %36 = shl i64 %31, 3
  %37 = getelementptr i8, i8* %20, i64 %36
  %38 = getelementptr %"struct.spirv_cross::SPIRFunctionPrototype"*, %"struct.spirv_cross::SPIRFunctionPrototype"** %26, i64 %31
  %39 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"** %38 to i8*
  %40 = icmp ult i8* %20, %39
  %41 = icmp ugt i8* %37, %27
  %42 = and i1 %40, %41
  br i1 %42, label %122, label %43

43:                                               ; preds = %35
  %44 = and i64 %31, -4
  %45 = add i64 %44, -4
  %46 = lshr exact i64 %45, 2
  %47 = add nuw nsw i64 %46, 1
  %48 = and i64 %47, 3
  %49 = icmp ult i64 %45, 12
  br i1 %49, label %101, label %50

50:                                               ; preds = %43
  %51 = sub nsw i64 %47, %48
  br label %52

52:                                               ; preds = %52, %50
  %53 = phi i64 [ 0, %50 ], [ %98, %52 ]
  %54 = phi i64 [ %51, %50 ], [ %99, %52 ]
  %55 = getelementptr inbounds %"struct.spirv_cross::SPIRFunctionPrototype"*, %"struct.spirv_cross::SPIRFunctionPrototype"** %21, i64 %53
  %56 = getelementptr inbounds %"struct.spirv_cross::SPIRFunctionPrototype"*, %"struct.spirv_cross::SPIRFunctionPrototype"** %26, i64 %53
  %57 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"** %56 to <2 x i64>*
  %58 = load <2 x i64>, <2 x i64>* %57, align 8, !alias.scope !61
  %59 = getelementptr inbounds %"struct.spirv_cross::SPIRFunctionPrototype"*, %"struct.spirv_cross::SPIRFunctionPrototype"** %56, i64 2
  %60 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"** %59 to <2 x i64>*
  %61 = load <2 x i64>, <2 x i64>* %60, align 8, !alias.scope !61
  %62 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"** %55 to <2 x i64>*
  store <2 x i64> %58, <2 x i64>* %62, align 8, !alias.scope !64, !noalias !61
  %63 = getelementptr inbounds %"struct.spirv_cross::SPIRFunctionPrototype"*, %"struct.spirv_cross::SPIRFunctionPrototype"** %55, i64 2
  %64 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"** %63 to <2 x i64>*
  store <2 x i64> %61, <2 x i64>* %64, align 8, !alias.scope !64, !noalias !61
  %65 = or i64 %53, 4
  %66 = getelementptr inbounds %"struct.spirv_cross::SPIRFunctionPrototype"*, %"struct.spirv_cross::SPIRFunctionPrototype"** %21, i64 %65
  %67 = getelementptr inbounds %"struct.spirv_cross::SPIRFunctionPrototype"*, %"struct.spirv_cross::SPIRFunctionPrototype"** %26, i64 %65
  %68 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"** %67 to <2 x i64>*
  %69 = load <2 x i64>, <2 x i64>* %68, align 8, !alias.scope !61
  %70 = getelementptr inbounds %"struct.spirv_cross::SPIRFunctionPrototype"*, %"struct.spirv_cross::SPIRFunctionPrototype"** %67, i64 2
  %71 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"** %70 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 8, !alias.scope !61
  %73 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"** %66 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %73, align 8, !alias.scope !64, !noalias !61
  %74 = getelementptr inbounds %"struct.spirv_cross::SPIRFunctionPrototype"*, %"struct.spirv_cross::SPIRFunctionPrototype"** %66, i64 2
  %75 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"** %74 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %75, align 8, !alias.scope !64, !noalias !61
  %76 = or i64 %53, 8
  %77 = getelementptr inbounds %"struct.spirv_cross::SPIRFunctionPrototype"*, %"struct.spirv_cross::SPIRFunctionPrototype"** %21, i64 %76
  %78 = getelementptr inbounds %"struct.spirv_cross::SPIRFunctionPrototype"*, %"struct.spirv_cross::SPIRFunctionPrototype"** %26, i64 %76
  %79 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !61
  %81 = getelementptr inbounds %"struct.spirv_cross::SPIRFunctionPrototype"*, %"struct.spirv_cross::SPIRFunctionPrototype"** %78, i64 2
  %82 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"** %81 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 8, !alias.scope !61
  %84 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"** %77 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %84, align 8, !alias.scope !64, !noalias !61
  %85 = getelementptr inbounds %"struct.spirv_cross::SPIRFunctionPrototype"*, %"struct.spirv_cross::SPIRFunctionPrototype"** %77, i64 2
  %86 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"** %85 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %86, align 8, !alias.scope !64, !noalias !61
  %87 = or i64 %53, 12
  %88 = getelementptr inbounds %"struct.spirv_cross::SPIRFunctionPrototype"*, %"struct.spirv_cross::SPIRFunctionPrototype"** %21, i64 %87
  %89 = getelementptr inbounds %"struct.spirv_cross::SPIRFunctionPrototype"*, %"struct.spirv_cross::SPIRFunctionPrototype"** %26, i64 %87
  %90 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !61
  %92 = getelementptr inbounds %"struct.spirv_cross::SPIRFunctionPrototype"*, %"struct.spirv_cross::SPIRFunctionPrototype"** %89, i64 2
  %93 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"** %92 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 8, !alias.scope !61
  %95 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"** %88 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %95, align 8, !alias.scope !64, !noalias !61
  %96 = getelementptr inbounds %"struct.spirv_cross::SPIRFunctionPrototype"*, %"struct.spirv_cross::SPIRFunctionPrototype"** %88, i64 2
  %97 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"** %96 to <2 x i64>*
  store <2 x i64> %94, <2 x i64>* %97, align 8, !alias.scope !64, !noalias !61
  %98 = add i64 %53, 16
  %99 = add i64 %54, -4
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %52, !llvm.loop !66

101:                                              ; preds = %52, %43
  %102 = phi i64 [ 0, %43 ], [ %98, %52 ]
  %103 = icmp eq i64 %48, 0
  br i1 %103, label %120, label %104

104:                                              ; preds = %101, %104
  %105 = phi i64 [ %117, %104 ], [ %102, %101 ]
  %106 = phi i64 [ %118, %104 ], [ %48, %101 ]
  %107 = getelementptr inbounds %"struct.spirv_cross::SPIRFunctionPrototype"*, %"struct.spirv_cross::SPIRFunctionPrototype"** %21, i64 %105
  %108 = getelementptr inbounds %"struct.spirv_cross::SPIRFunctionPrototype"*, %"struct.spirv_cross::SPIRFunctionPrototype"** %26, i64 %105
  %109 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"** %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !61
  %111 = getelementptr inbounds %"struct.spirv_cross::SPIRFunctionPrototype"*, %"struct.spirv_cross::SPIRFunctionPrototype"** %108, i64 2
  %112 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !61
  %114 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"** %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !64, !noalias !61
  %115 = getelementptr inbounds %"struct.spirv_cross::SPIRFunctionPrototype"*, %"struct.spirv_cross::SPIRFunctionPrototype"** %107, i64 2
  %116 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"** %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !64, !noalias !61
  %117 = add i64 %105, 4
  %118 = add i64 %106, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %104, !llvm.loop !67

120:                                              ; preds = %104, %101
  %121 = icmp eq i64 %31, %44
  br i1 %121, label %133, label %122

122:                                              ; preds = %120, %35, %33
  %123 = phi i64 [ 0, %35 ], [ 0, %33 ], [ %44, %120 ]
  br label %124

124:                                              ; preds = %122, %124
  %125 = phi i64 [ %131, %124 ], [ %123, %122 ]
  %126 = getelementptr inbounds %"struct.spirv_cross::SPIRFunctionPrototype"*, %"struct.spirv_cross::SPIRFunctionPrototype"** %21, i64 %125
  %127 = getelementptr inbounds %"struct.spirv_cross::SPIRFunctionPrototype"*, %"struct.spirv_cross::SPIRFunctionPrototype"** %26, i64 %125
  %128 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.spirv_cross::SPIRFunctionPrototype"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = add nuw i64 %125, 1
  %132 = icmp ult i64 %131, %31
  br i1 %132, label %124, label %133, !llvm.loop !68

133:                                              ; preds = %124, %120, %29, %24
  %134 = phi %"struct.spirv_cross::SPIRFunctionPrototype"** [ %21, %24 ], [ %26, %29 ], [ %26, %120 ], [ %26, %124 ]
  %135 = icmp eq %"struct.spirv_cross::SPIRFunctionPrototype"** %134, null
  br i1 %135, label %137, label %136

136:                                              ; preds = %133
  tail call void @free(i8* %27) #17
  br label %137

137:                                              ; preds = %133, %136
  %138 = bitcast %"class.spirv_cross::SmallVector.233"* %0 to i8**
  store i8* %20, i8** %138, align 8
  store i64 %13, i64* %6, align 8
  br label %139

139:                                              ; preds = %137, %5
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_9SPIRBlockEED2Ev(%"class.spirv_cross::ObjectPool.245"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ObjectPool.245", %"class.spirv_cross::ObjectPool.245"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_9SPIRBlockEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool.245", %"class.spirv_cross::ObjectPool.245"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool.245", %"class.spirv_cross::ObjectPool.245"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.262", %"class.spirv_cross::SmallVector.262"* %3, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ 0, %7 ], [ %18, %17 ]
  %11 = load %"class.std::__1::unique_ptr.264"*, %"class.std::__1::unique_ptr.264"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.264"* %11, i64 %10, i32 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"** %12, align 8
  store %"struct.spirv_cross::SPIRBlock"* null, %"struct.spirv_cross::SPIRBlock"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::SPIRBlock"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = bitcast %"struct.spirv_cross::SPIRBlock"* %13 to i8*
  tail call void @free(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %9
  %18 = add nuw i64 %10, 1
  %19 = load i64, i64* %4, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %9, label %21

21:                                               ; preds = %17, %1
  store i64 0, i64* %4, align 8
  %22 = getelementptr inbounds %"class.spirv_cross::SmallVector.262", %"class.spirv_cross::SmallVector.262"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.264"*, %"class.std::__1::unique_ptr.264"** %22, align 8
  %24 = getelementptr inbounds %"class.spirv_cross::ObjectPool.245", %"class.spirv_cross::ObjectPool.245"* %0, i64 0, i32 2, i32 2
  %25 = bitcast %"class.spirv_cross::AlignedBuffer.268"* %24 to %"class.std::__1::unique_ptr.264"*
  %26 = icmp eq %"class.std::__1::unique_ptr.264"* %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::unique_ptr.264"* %23 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %21, %27
  %30 = getelementptr inbounds %"class.spirv_cross::ObjectPool.245", %"class.spirv_cross::ObjectPool.245"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spirv_cross::ObjectPool.245", %"class.spirv_cross::ObjectPool.245"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.spirv_cross::SPIRBlock"**, %"struct.spirv_cross::SPIRBlock"*** %31, align 8
  %33 = icmp eq %"struct.spirv_cross::SPIRBlock"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.spirv_cross::SPIRBlock"** %32 to i8*
  tail call void @free(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %34
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_9SPIRBlockEED0Ev(%"class.spirv_cross::ObjectPool.245"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ObjectPool.245", %"class.spirv_cross::ObjectPool.245"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_9SPIRBlockEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool.245", %"class.spirv_cross::ObjectPool.245"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool.245", %"class.spirv_cross::ObjectPool.245"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.262", %"class.spirv_cross::SmallVector.262"* %3, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ 0, %7 ], [ %18, %17 ]
  %11 = load %"class.std::__1::unique_ptr.264"*, %"class.std::__1::unique_ptr.264"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.264"* %11, i64 %10, i32 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"** %12, align 8
  store %"struct.spirv_cross::SPIRBlock"* null, %"struct.spirv_cross::SPIRBlock"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::SPIRBlock"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = bitcast %"struct.spirv_cross::SPIRBlock"* %13 to i8*
  tail call void @free(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %9
  %18 = add nuw i64 %10, 1
  %19 = load i64, i64* %4, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %9, label %21

21:                                               ; preds = %17, %1
  store i64 0, i64* %4, align 8
  %22 = getelementptr inbounds %"class.spirv_cross::SmallVector.262", %"class.spirv_cross::SmallVector.262"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.264"*, %"class.std::__1::unique_ptr.264"** %22, align 8
  %24 = getelementptr inbounds %"class.spirv_cross::ObjectPool.245", %"class.spirv_cross::ObjectPool.245"* %0, i64 0, i32 2, i32 2
  %25 = bitcast %"class.spirv_cross::AlignedBuffer.268"* %24 to %"class.std::__1::unique_ptr.264"*
  %26 = icmp eq %"class.std::__1::unique_ptr.264"* %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::unique_ptr.264"* %23 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %27, %21
  %30 = getelementptr inbounds %"class.spirv_cross::ObjectPool.245", %"class.spirv_cross::ObjectPool.245"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spirv_cross::ObjectPool.245", %"class.spirv_cross::ObjectPool.245"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.spirv_cross::SPIRBlock"**, %"struct.spirv_cross::SPIRBlock"*** %31, align 8
  %33 = icmp eq %"struct.spirv_cross::SPIRBlock"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.spirv_cross::SPIRBlock"** %32 to i8*
  tail call void @free(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %34
  %37 = bitcast %"class.spirv_cross::ObjectPool.245"* %0 to i8*
  tail call void @_ZdlPv(i8* %37) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_9SPIRBlockEE11free_opaqueEPv(%"class.spirv_cross::ObjectPool.245"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.spirv_cross::SPIRBlock"*
  %4 = ptrtoint i8* %1 to i64
  %5 = bitcast i8* %1 to void (%"struct.spirv_cross::SPIRBlock"*)***
  %6 = load void (%"struct.spirv_cross::SPIRBlock"*)**, void (%"struct.spirv_cross::SPIRBlock"*)*** %5, align 8
  %7 = load void (%"struct.spirv_cross::SPIRBlock"*)*, void (%"struct.spirv_cross::SPIRBlock"*)** %6, align 8
  tail call void %7(%"struct.spirv_cross::SPIRBlock"* %3) #17
  %8 = getelementptr inbounds %"class.spirv_cross::ObjectPool.245", %"class.spirv_cross::ObjectPool.245"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.spirv_cross::ObjectPool.245", %"class.spirv_cross::ObjectPool.245"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 1
  tail call void @_ZN11spirv_cross11SmallVectorIPNS_9SPIRBlockELm0EE7reserveEm(%"class.spirv_cross::SmallVector.246"* %8, i64 %11) #17
  %12 = getelementptr inbounds %"class.spirv_cross::SmallVector.246", %"class.spirv_cross::SmallVector.246"* %8, i64 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRBlock"**, %"struct.spirv_cross::SPIRBlock"*** %12, align 8
  %14 = load i64, i64* %9, align 8
  %15 = getelementptr inbounds %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"** %13, i64 %14
  %16 = bitcast %"struct.spirv_cross::SPIRBlock"** %15 to i64*
  store i64 %4, i64* %16, align 8
  %17 = load i64, i64* %9, align 8
  %18 = add i64 %17, 1
  store i64 %18, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross11SmallVectorIPNS_9SPIRBlockELm0EE7reserveEm(%"class.spirv_cross::SmallVector.246"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 2305843009213693951
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @_ZSt9terminatev() #19
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.spirv_cross::SmallVector.246", %"class.spirv_cross::SmallVector.246"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %139

9:                                                ; preds = %5
  %10 = icmp eq i64 %7, 0
  %11 = select i1 %10, i64 1, i64 %7
  br label %12

12:                                               ; preds = %12, %9
  %13 = phi i64 [ %11, %9 ], [ %15, %12 ]
  %14 = icmp ult i64 %13, %1
  %15 = shl i64 %13, 1
  br i1 %14, label %12, label %16

16:                                               ; preds = %12
  %17 = icmp eq i64 %13, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = shl i64 %13, 3
  %20 = tail call noalias i8* @malloc(i64 %19) #17
  %21 = bitcast i8* %20 to %"struct.spirv_cross::SPIRBlock"**
  %22 = icmp eq i8* %20, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %16, %18
  tail call void @_ZSt9terminatev() #19
  unreachable

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.spirv_cross::SmallVector.246", %"class.spirv_cross::SmallVector.246"* %0, i64 0, i32 0, i32 0
  %26 = load %"struct.spirv_cross::SPIRBlock"**, %"struct.spirv_cross::SPIRBlock"*** %25, align 8
  %27 = bitcast %"struct.spirv_cross::SPIRBlock"** %26 to i8*
  %28 = icmp eq %"struct.spirv_cross::SPIRBlock"** %26, %21
  br i1 %28, label %133, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.spirv_cross::SmallVector.246", %"class.spirv_cross::SmallVector.246"* %0, i64 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %133, label %33

33:                                               ; preds = %29
  %34 = icmp ult i64 %31, 4
  br i1 %34, label %122, label %35

35:                                               ; preds = %33
  %36 = shl i64 %31, 3
  %37 = getelementptr i8, i8* %20, i64 %36
  %38 = getelementptr %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"** %26, i64 %31
  %39 = bitcast %"struct.spirv_cross::SPIRBlock"** %38 to i8*
  %40 = icmp ult i8* %20, %39
  %41 = icmp ugt i8* %37, %27
  %42 = and i1 %40, %41
  br i1 %42, label %122, label %43

43:                                               ; preds = %35
  %44 = and i64 %31, -4
  %45 = add i64 %44, -4
  %46 = lshr exact i64 %45, 2
  %47 = add nuw nsw i64 %46, 1
  %48 = and i64 %47, 3
  %49 = icmp ult i64 %45, 12
  br i1 %49, label %101, label %50

50:                                               ; preds = %43
  %51 = sub nsw i64 %47, %48
  br label %52

52:                                               ; preds = %52, %50
  %53 = phi i64 [ 0, %50 ], [ %98, %52 ]
  %54 = phi i64 [ %51, %50 ], [ %99, %52 ]
  %55 = getelementptr inbounds %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"** %21, i64 %53
  %56 = getelementptr inbounds %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"** %26, i64 %53
  %57 = bitcast %"struct.spirv_cross::SPIRBlock"** %56 to <2 x i64>*
  %58 = load <2 x i64>, <2 x i64>* %57, align 8, !alias.scope !69
  %59 = getelementptr inbounds %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"** %56, i64 2
  %60 = bitcast %"struct.spirv_cross::SPIRBlock"** %59 to <2 x i64>*
  %61 = load <2 x i64>, <2 x i64>* %60, align 8, !alias.scope !69
  %62 = bitcast %"struct.spirv_cross::SPIRBlock"** %55 to <2 x i64>*
  store <2 x i64> %58, <2 x i64>* %62, align 8, !alias.scope !72, !noalias !69
  %63 = getelementptr inbounds %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"** %55, i64 2
  %64 = bitcast %"struct.spirv_cross::SPIRBlock"** %63 to <2 x i64>*
  store <2 x i64> %61, <2 x i64>* %64, align 8, !alias.scope !72, !noalias !69
  %65 = or i64 %53, 4
  %66 = getelementptr inbounds %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"** %21, i64 %65
  %67 = getelementptr inbounds %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"** %26, i64 %65
  %68 = bitcast %"struct.spirv_cross::SPIRBlock"** %67 to <2 x i64>*
  %69 = load <2 x i64>, <2 x i64>* %68, align 8, !alias.scope !69
  %70 = getelementptr inbounds %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"** %67, i64 2
  %71 = bitcast %"struct.spirv_cross::SPIRBlock"** %70 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 8, !alias.scope !69
  %73 = bitcast %"struct.spirv_cross::SPIRBlock"** %66 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %73, align 8, !alias.scope !72, !noalias !69
  %74 = getelementptr inbounds %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"** %66, i64 2
  %75 = bitcast %"struct.spirv_cross::SPIRBlock"** %74 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %75, align 8, !alias.scope !72, !noalias !69
  %76 = or i64 %53, 8
  %77 = getelementptr inbounds %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"** %21, i64 %76
  %78 = getelementptr inbounds %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"** %26, i64 %76
  %79 = bitcast %"struct.spirv_cross::SPIRBlock"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !69
  %81 = getelementptr inbounds %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"** %78, i64 2
  %82 = bitcast %"struct.spirv_cross::SPIRBlock"** %81 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 8, !alias.scope !69
  %84 = bitcast %"struct.spirv_cross::SPIRBlock"** %77 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %84, align 8, !alias.scope !72, !noalias !69
  %85 = getelementptr inbounds %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"** %77, i64 2
  %86 = bitcast %"struct.spirv_cross::SPIRBlock"** %85 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %86, align 8, !alias.scope !72, !noalias !69
  %87 = or i64 %53, 12
  %88 = getelementptr inbounds %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"** %21, i64 %87
  %89 = getelementptr inbounds %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"** %26, i64 %87
  %90 = bitcast %"struct.spirv_cross::SPIRBlock"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !69
  %92 = getelementptr inbounds %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"** %89, i64 2
  %93 = bitcast %"struct.spirv_cross::SPIRBlock"** %92 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 8, !alias.scope !69
  %95 = bitcast %"struct.spirv_cross::SPIRBlock"** %88 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %95, align 8, !alias.scope !72, !noalias !69
  %96 = getelementptr inbounds %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"** %88, i64 2
  %97 = bitcast %"struct.spirv_cross::SPIRBlock"** %96 to <2 x i64>*
  store <2 x i64> %94, <2 x i64>* %97, align 8, !alias.scope !72, !noalias !69
  %98 = add i64 %53, 16
  %99 = add i64 %54, -4
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %52, !llvm.loop !74

101:                                              ; preds = %52, %43
  %102 = phi i64 [ 0, %43 ], [ %98, %52 ]
  %103 = icmp eq i64 %48, 0
  br i1 %103, label %120, label %104

104:                                              ; preds = %101, %104
  %105 = phi i64 [ %117, %104 ], [ %102, %101 ]
  %106 = phi i64 [ %118, %104 ], [ %48, %101 ]
  %107 = getelementptr inbounds %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"** %21, i64 %105
  %108 = getelementptr inbounds %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"** %26, i64 %105
  %109 = bitcast %"struct.spirv_cross::SPIRBlock"** %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !69
  %111 = getelementptr inbounds %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"** %108, i64 2
  %112 = bitcast %"struct.spirv_cross::SPIRBlock"** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !69
  %114 = bitcast %"struct.spirv_cross::SPIRBlock"** %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !72, !noalias !69
  %115 = getelementptr inbounds %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"** %107, i64 2
  %116 = bitcast %"struct.spirv_cross::SPIRBlock"** %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !72, !noalias !69
  %117 = add i64 %105, 4
  %118 = add i64 %106, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %104, !llvm.loop !75

120:                                              ; preds = %104, %101
  %121 = icmp eq i64 %31, %44
  br i1 %121, label %133, label %122

122:                                              ; preds = %120, %35, %33
  %123 = phi i64 [ 0, %35 ], [ 0, %33 ], [ %44, %120 ]
  br label %124

124:                                              ; preds = %122, %124
  %125 = phi i64 [ %131, %124 ], [ %123, %122 ]
  %126 = getelementptr inbounds %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"** %21, i64 %125
  %127 = getelementptr inbounds %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"** %26, i64 %125
  %128 = bitcast %"struct.spirv_cross::SPIRBlock"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.spirv_cross::SPIRBlock"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = add nuw i64 %125, 1
  %132 = icmp ult i64 %131, %31
  br i1 %132, label %124, label %133, !llvm.loop !76

133:                                              ; preds = %124, %120, %29, %24
  %134 = phi %"struct.spirv_cross::SPIRBlock"** [ %21, %24 ], [ %26, %29 ], [ %26, %120 ], [ %26, %124 ]
  %135 = icmp eq %"struct.spirv_cross::SPIRBlock"** %134, null
  br i1 %135, label %137, label %136

136:                                              ; preds = %133
  tail call void @free(i8* %27) #17
  br label %137

137:                                              ; preds = %133, %136
  %138 = bitcast %"class.spirv_cross::SmallVector.246"* %0 to i8**
  store i8* %20, i8** %138, align 8
  store i64 %13, i64* %6, align 8
  br label %139

139:                                              ; preds = %137, %5
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_13SPIRExtensionEED2Ev(%"class.spirv_cross::ObjectPool.270"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ObjectPool.270", %"class.spirv_cross::ObjectPool.270"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_13SPIRExtensionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool.270", %"class.spirv_cross::ObjectPool.270"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool.270", %"class.spirv_cross::ObjectPool.270"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.275", %"class.spirv_cross::SmallVector.275"* %3, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ 0, %7 ], [ %18, %17 ]
  %11 = load %"class.std::__1::unique_ptr.277"*, %"class.std::__1::unique_ptr.277"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.277", %"class.std::__1::unique_ptr.277"* %11, i64 %10, i32 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRExtension"*, %"struct.spirv_cross::SPIRExtension"** %12, align 8
  store %"struct.spirv_cross::SPIRExtension"* null, %"struct.spirv_cross::SPIRExtension"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::SPIRExtension"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = bitcast %"struct.spirv_cross::SPIRExtension"* %13 to i8*
  tail call void @free(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %9
  %18 = add nuw i64 %10, 1
  %19 = load i64, i64* %4, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %9, label %21

21:                                               ; preds = %17, %1
  store i64 0, i64* %4, align 8
  %22 = getelementptr inbounds %"class.spirv_cross::SmallVector.275", %"class.spirv_cross::SmallVector.275"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.277"*, %"class.std::__1::unique_ptr.277"** %22, align 8
  %24 = getelementptr inbounds %"class.spirv_cross::ObjectPool.270", %"class.spirv_cross::ObjectPool.270"* %0, i64 0, i32 2, i32 2
  %25 = bitcast %"class.spirv_cross::AlignedBuffer.281"* %24 to %"class.std::__1::unique_ptr.277"*
  %26 = icmp eq %"class.std::__1::unique_ptr.277"* %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::unique_ptr.277"* %23 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %21, %27
  %30 = getelementptr inbounds %"class.spirv_cross::ObjectPool.270", %"class.spirv_cross::ObjectPool.270"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spirv_cross::ObjectPool.270", %"class.spirv_cross::ObjectPool.270"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.spirv_cross::SPIRExtension"**, %"struct.spirv_cross::SPIRExtension"*** %31, align 8
  %33 = icmp eq %"struct.spirv_cross::SPIRExtension"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.spirv_cross::SPIRExtension"** %32 to i8*
  tail call void @free(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %34
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_13SPIRExtensionEED0Ev(%"class.spirv_cross::ObjectPool.270"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ObjectPool.270", %"class.spirv_cross::ObjectPool.270"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_13SPIRExtensionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool.270", %"class.spirv_cross::ObjectPool.270"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool.270", %"class.spirv_cross::ObjectPool.270"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.275", %"class.spirv_cross::SmallVector.275"* %3, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ 0, %7 ], [ %18, %17 ]
  %11 = load %"class.std::__1::unique_ptr.277"*, %"class.std::__1::unique_ptr.277"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.277", %"class.std::__1::unique_ptr.277"* %11, i64 %10, i32 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRExtension"*, %"struct.spirv_cross::SPIRExtension"** %12, align 8
  store %"struct.spirv_cross::SPIRExtension"* null, %"struct.spirv_cross::SPIRExtension"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::SPIRExtension"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = bitcast %"struct.spirv_cross::SPIRExtension"* %13 to i8*
  tail call void @free(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %9
  %18 = add nuw i64 %10, 1
  %19 = load i64, i64* %4, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %9, label %21

21:                                               ; preds = %17, %1
  store i64 0, i64* %4, align 8
  %22 = getelementptr inbounds %"class.spirv_cross::SmallVector.275", %"class.spirv_cross::SmallVector.275"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.277"*, %"class.std::__1::unique_ptr.277"** %22, align 8
  %24 = getelementptr inbounds %"class.spirv_cross::ObjectPool.270", %"class.spirv_cross::ObjectPool.270"* %0, i64 0, i32 2, i32 2
  %25 = bitcast %"class.spirv_cross::AlignedBuffer.281"* %24 to %"class.std::__1::unique_ptr.277"*
  %26 = icmp eq %"class.std::__1::unique_ptr.277"* %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::unique_ptr.277"* %23 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %27, %21
  %30 = getelementptr inbounds %"class.spirv_cross::ObjectPool.270", %"class.spirv_cross::ObjectPool.270"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spirv_cross::ObjectPool.270", %"class.spirv_cross::ObjectPool.270"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.spirv_cross::SPIRExtension"**, %"struct.spirv_cross::SPIRExtension"*** %31, align 8
  %33 = icmp eq %"struct.spirv_cross::SPIRExtension"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.spirv_cross::SPIRExtension"** %32 to i8*
  tail call void @free(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %34
  %37 = bitcast %"class.spirv_cross::ObjectPool.270"* %0 to i8*
  tail call void @_ZdlPv(i8* %37) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_13SPIRExtensionEE11free_opaqueEPv(%"class.spirv_cross::ObjectPool.270"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.spirv_cross::SPIRExtension"*
  %4 = ptrtoint i8* %1 to i64
  %5 = bitcast i8* %1 to void (%"struct.spirv_cross::SPIRExtension"*)***
  %6 = load void (%"struct.spirv_cross::SPIRExtension"*)**, void (%"struct.spirv_cross::SPIRExtension"*)*** %5, align 8
  %7 = load void (%"struct.spirv_cross::SPIRExtension"*)*, void (%"struct.spirv_cross::SPIRExtension"*)** %6, align 8
  tail call void %7(%"struct.spirv_cross::SPIRExtension"* %3) #17
  %8 = getelementptr inbounds %"class.spirv_cross::ObjectPool.270", %"class.spirv_cross::ObjectPool.270"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.spirv_cross::ObjectPool.270", %"class.spirv_cross::ObjectPool.270"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 1
  tail call void @_ZN11spirv_cross11SmallVectorIPNS_13SPIRExtensionELm0EE7reserveEm(%"class.spirv_cross::SmallVector.271"* %8, i64 %11) #17
  %12 = getelementptr inbounds %"class.spirv_cross::SmallVector.271", %"class.spirv_cross::SmallVector.271"* %8, i64 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRExtension"**, %"struct.spirv_cross::SPIRExtension"*** %12, align 8
  %14 = load i64, i64* %9, align 8
  %15 = getelementptr inbounds %"struct.spirv_cross::SPIRExtension"*, %"struct.spirv_cross::SPIRExtension"** %13, i64 %14
  %16 = bitcast %"struct.spirv_cross::SPIRExtension"** %15 to i64*
  store i64 %4, i64* %16, align 8
  %17 = load i64, i64* %9, align 8
  %18 = add i64 %17, 1
  store i64 %18, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross11SmallVectorIPNS_13SPIRExtensionELm0EE7reserveEm(%"class.spirv_cross::SmallVector.271"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 2305843009213693951
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @_ZSt9terminatev() #19
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.spirv_cross::SmallVector.271", %"class.spirv_cross::SmallVector.271"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %139

9:                                                ; preds = %5
  %10 = icmp eq i64 %7, 0
  %11 = select i1 %10, i64 1, i64 %7
  br label %12

12:                                               ; preds = %12, %9
  %13 = phi i64 [ %11, %9 ], [ %15, %12 ]
  %14 = icmp ult i64 %13, %1
  %15 = shl i64 %13, 1
  br i1 %14, label %12, label %16

16:                                               ; preds = %12
  %17 = icmp eq i64 %13, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = shl i64 %13, 3
  %20 = tail call noalias i8* @malloc(i64 %19) #17
  %21 = bitcast i8* %20 to %"struct.spirv_cross::SPIRExtension"**
  %22 = icmp eq i8* %20, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %16, %18
  tail call void @_ZSt9terminatev() #19
  unreachable

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.spirv_cross::SmallVector.271", %"class.spirv_cross::SmallVector.271"* %0, i64 0, i32 0, i32 0
  %26 = load %"struct.spirv_cross::SPIRExtension"**, %"struct.spirv_cross::SPIRExtension"*** %25, align 8
  %27 = bitcast %"struct.spirv_cross::SPIRExtension"** %26 to i8*
  %28 = icmp eq %"struct.spirv_cross::SPIRExtension"** %26, %21
  br i1 %28, label %133, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.spirv_cross::SmallVector.271", %"class.spirv_cross::SmallVector.271"* %0, i64 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %133, label %33

33:                                               ; preds = %29
  %34 = icmp ult i64 %31, 4
  br i1 %34, label %122, label %35

35:                                               ; preds = %33
  %36 = shl i64 %31, 3
  %37 = getelementptr i8, i8* %20, i64 %36
  %38 = getelementptr %"struct.spirv_cross::SPIRExtension"*, %"struct.spirv_cross::SPIRExtension"** %26, i64 %31
  %39 = bitcast %"struct.spirv_cross::SPIRExtension"** %38 to i8*
  %40 = icmp ult i8* %20, %39
  %41 = icmp ugt i8* %37, %27
  %42 = and i1 %40, %41
  br i1 %42, label %122, label %43

43:                                               ; preds = %35
  %44 = and i64 %31, -4
  %45 = add i64 %44, -4
  %46 = lshr exact i64 %45, 2
  %47 = add nuw nsw i64 %46, 1
  %48 = and i64 %47, 3
  %49 = icmp ult i64 %45, 12
  br i1 %49, label %101, label %50

50:                                               ; preds = %43
  %51 = sub nsw i64 %47, %48
  br label %52

52:                                               ; preds = %52, %50
  %53 = phi i64 [ 0, %50 ], [ %98, %52 ]
  %54 = phi i64 [ %51, %50 ], [ %99, %52 ]
  %55 = getelementptr inbounds %"struct.spirv_cross::SPIRExtension"*, %"struct.spirv_cross::SPIRExtension"** %21, i64 %53
  %56 = getelementptr inbounds %"struct.spirv_cross::SPIRExtension"*, %"struct.spirv_cross::SPIRExtension"** %26, i64 %53
  %57 = bitcast %"struct.spirv_cross::SPIRExtension"** %56 to <2 x i64>*
  %58 = load <2 x i64>, <2 x i64>* %57, align 8, !alias.scope !77
  %59 = getelementptr inbounds %"struct.spirv_cross::SPIRExtension"*, %"struct.spirv_cross::SPIRExtension"** %56, i64 2
  %60 = bitcast %"struct.spirv_cross::SPIRExtension"** %59 to <2 x i64>*
  %61 = load <2 x i64>, <2 x i64>* %60, align 8, !alias.scope !77
  %62 = bitcast %"struct.spirv_cross::SPIRExtension"** %55 to <2 x i64>*
  store <2 x i64> %58, <2 x i64>* %62, align 8, !alias.scope !80, !noalias !77
  %63 = getelementptr inbounds %"struct.spirv_cross::SPIRExtension"*, %"struct.spirv_cross::SPIRExtension"** %55, i64 2
  %64 = bitcast %"struct.spirv_cross::SPIRExtension"** %63 to <2 x i64>*
  store <2 x i64> %61, <2 x i64>* %64, align 8, !alias.scope !80, !noalias !77
  %65 = or i64 %53, 4
  %66 = getelementptr inbounds %"struct.spirv_cross::SPIRExtension"*, %"struct.spirv_cross::SPIRExtension"** %21, i64 %65
  %67 = getelementptr inbounds %"struct.spirv_cross::SPIRExtension"*, %"struct.spirv_cross::SPIRExtension"** %26, i64 %65
  %68 = bitcast %"struct.spirv_cross::SPIRExtension"** %67 to <2 x i64>*
  %69 = load <2 x i64>, <2 x i64>* %68, align 8, !alias.scope !77
  %70 = getelementptr inbounds %"struct.spirv_cross::SPIRExtension"*, %"struct.spirv_cross::SPIRExtension"** %67, i64 2
  %71 = bitcast %"struct.spirv_cross::SPIRExtension"** %70 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 8, !alias.scope !77
  %73 = bitcast %"struct.spirv_cross::SPIRExtension"** %66 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %73, align 8, !alias.scope !80, !noalias !77
  %74 = getelementptr inbounds %"struct.spirv_cross::SPIRExtension"*, %"struct.spirv_cross::SPIRExtension"** %66, i64 2
  %75 = bitcast %"struct.spirv_cross::SPIRExtension"** %74 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %75, align 8, !alias.scope !80, !noalias !77
  %76 = or i64 %53, 8
  %77 = getelementptr inbounds %"struct.spirv_cross::SPIRExtension"*, %"struct.spirv_cross::SPIRExtension"** %21, i64 %76
  %78 = getelementptr inbounds %"struct.spirv_cross::SPIRExtension"*, %"struct.spirv_cross::SPIRExtension"** %26, i64 %76
  %79 = bitcast %"struct.spirv_cross::SPIRExtension"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !77
  %81 = getelementptr inbounds %"struct.spirv_cross::SPIRExtension"*, %"struct.spirv_cross::SPIRExtension"** %78, i64 2
  %82 = bitcast %"struct.spirv_cross::SPIRExtension"** %81 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 8, !alias.scope !77
  %84 = bitcast %"struct.spirv_cross::SPIRExtension"** %77 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %84, align 8, !alias.scope !80, !noalias !77
  %85 = getelementptr inbounds %"struct.spirv_cross::SPIRExtension"*, %"struct.spirv_cross::SPIRExtension"** %77, i64 2
  %86 = bitcast %"struct.spirv_cross::SPIRExtension"** %85 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %86, align 8, !alias.scope !80, !noalias !77
  %87 = or i64 %53, 12
  %88 = getelementptr inbounds %"struct.spirv_cross::SPIRExtension"*, %"struct.spirv_cross::SPIRExtension"** %21, i64 %87
  %89 = getelementptr inbounds %"struct.spirv_cross::SPIRExtension"*, %"struct.spirv_cross::SPIRExtension"** %26, i64 %87
  %90 = bitcast %"struct.spirv_cross::SPIRExtension"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !77
  %92 = getelementptr inbounds %"struct.spirv_cross::SPIRExtension"*, %"struct.spirv_cross::SPIRExtension"** %89, i64 2
  %93 = bitcast %"struct.spirv_cross::SPIRExtension"** %92 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 8, !alias.scope !77
  %95 = bitcast %"struct.spirv_cross::SPIRExtension"** %88 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %95, align 8, !alias.scope !80, !noalias !77
  %96 = getelementptr inbounds %"struct.spirv_cross::SPIRExtension"*, %"struct.spirv_cross::SPIRExtension"** %88, i64 2
  %97 = bitcast %"struct.spirv_cross::SPIRExtension"** %96 to <2 x i64>*
  store <2 x i64> %94, <2 x i64>* %97, align 8, !alias.scope !80, !noalias !77
  %98 = add i64 %53, 16
  %99 = add i64 %54, -4
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %52, !llvm.loop !82

101:                                              ; preds = %52, %43
  %102 = phi i64 [ 0, %43 ], [ %98, %52 ]
  %103 = icmp eq i64 %48, 0
  br i1 %103, label %120, label %104

104:                                              ; preds = %101, %104
  %105 = phi i64 [ %117, %104 ], [ %102, %101 ]
  %106 = phi i64 [ %118, %104 ], [ %48, %101 ]
  %107 = getelementptr inbounds %"struct.spirv_cross::SPIRExtension"*, %"struct.spirv_cross::SPIRExtension"** %21, i64 %105
  %108 = getelementptr inbounds %"struct.spirv_cross::SPIRExtension"*, %"struct.spirv_cross::SPIRExtension"** %26, i64 %105
  %109 = bitcast %"struct.spirv_cross::SPIRExtension"** %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !77
  %111 = getelementptr inbounds %"struct.spirv_cross::SPIRExtension"*, %"struct.spirv_cross::SPIRExtension"** %108, i64 2
  %112 = bitcast %"struct.spirv_cross::SPIRExtension"** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !77
  %114 = bitcast %"struct.spirv_cross::SPIRExtension"** %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !80, !noalias !77
  %115 = getelementptr inbounds %"struct.spirv_cross::SPIRExtension"*, %"struct.spirv_cross::SPIRExtension"** %107, i64 2
  %116 = bitcast %"struct.spirv_cross::SPIRExtension"** %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !80, !noalias !77
  %117 = add i64 %105, 4
  %118 = add i64 %106, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %104, !llvm.loop !83

120:                                              ; preds = %104, %101
  %121 = icmp eq i64 %31, %44
  br i1 %121, label %133, label %122

122:                                              ; preds = %120, %35, %33
  %123 = phi i64 [ 0, %35 ], [ 0, %33 ], [ %44, %120 ]
  br label %124

124:                                              ; preds = %122, %124
  %125 = phi i64 [ %131, %124 ], [ %123, %122 ]
  %126 = getelementptr inbounds %"struct.spirv_cross::SPIRExtension"*, %"struct.spirv_cross::SPIRExtension"** %21, i64 %125
  %127 = getelementptr inbounds %"struct.spirv_cross::SPIRExtension"*, %"struct.spirv_cross::SPIRExtension"** %26, i64 %125
  %128 = bitcast %"struct.spirv_cross::SPIRExtension"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.spirv_cross::SPIRExtension"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = add nuw i64 %125, 1
  %132 = icmp ult i64 %131, %31
  br i1 %132, label %124, label %133, !llvm.loop !84

133:                                              ; preds = %124, %120, %29, %24
  %134 = phi %"struct.spirv_cross::SPIRExtension"** [ %21, %24 ], [ %26, %29 ], [ %26, %120 ], [ %26, %124 ]
  %135 = icmp eq %"struct.spirv_cross::SPIRExtension"** %134, null
  br i1 %135, label %137, label %136

136:                                              ; preds = %133
  tail call void @free(i8* %27) #17
  br label %137

137:                                              ; preds = %133, %136
  %138 = bitcast %"class.spirv_cross::SmallVector.271"* %0 to i8**
  store i8* %20, i8** %138, align 8
  store i64 %13, i64* %6, align 8
  br label %139

139:                                              ; preds = %137, %5
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_14SPIRExpressionEED2Ev(%"class.spirv_cross::ObjectPool.283"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ObjectPool.283", %"class.spirv_cross::ObjectPool.283"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_14SPIRExpressionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool.283", %"class.spirv_cross::ObjectPool.283"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool.283", %"class.spirv_cross::ObjectPool.283"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.288", %"class.spirv_cross::SmallVector.288"* %3, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ 0, %7 ], [ %18, %17 ]
  %11 = load %"class.std::__1::unique_ptr.290"*, %"class.std::__1::unique_ptr.290"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.290", %"class.std::__1::unique_ptr.290"* %11, i64 %10, i32 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRExpression"*, %"struct.spirv_cross::SPIRExpression"** %12, align 8
  store %"struct.spirv_cross::SPIRExpression"* null, %"struct.spirv_cross::SPIRExpression"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::SPIRExpression"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = bitcast %"struct.spirv_cross::SPIRExpression"* %13 to i8*
  tail call void @free(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %9
  %18 = add nuw i64 %10, 1
  %19 = load i64, i64* %4, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %9, label %21

21:                                               ; preds = %17, %1
  store i64 0, i64* %4, align 8
  %22 = getelementptr inbounds %"class.spirv_cross::SmallVector.288", %"class.spirv_cross::SmallVector.288"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.290"*, %"class.std::__1::unique_ptr.290"** %22, align 8
  %24 = getelementptr inbounds %"class.spirv_cross::ObjectPool.283", %"class.spirv_cross::ObjectPool.283"* %0, i64 0, i32 2, i32 2
  %25 = bitcast %"class.spirv_cross::AlignedBuffer.294"* %24 to %"class.std::__1::unique_ptr.290"*
  %26 = icmp eq %"class.std::__1::unique_ptr.290"* %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::unique_ptr.290"* %23 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %21, %27
  %30 = getelementptr inbounds %"class.spirv_cross::ObjectPool.283", %"class.spirv_cross::ObjectPool.283"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spirv_cross::ObjectPool.283", %"class.spirv_cross::ObjectPool.283"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.spirv_cross::SPIRExpression"**, %"struct.spirv_cross::SPIRExpression"*** %31, align 8
  %33 = icmp eq %"struct.spirv_cross::SPIRExpression"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.spirv_cross::SPIRExpression"** %32 to i8*
  tail call void @free(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %34
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_14SPIRExpressionEED0Ev(%"class.spirv_cross::ObjectPool.283"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ObjectPool.283", %"class.spirv_cross::ObjectPool.283"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_14SPIRExpressionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool.283", %"class.spirv_cross::ObjectPool.283"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool.283", %"class.spirv_cross::ObjectPool.283"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.288", %"class.spirv_cross::SmallVector.288"* %3, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ 0, %7 ], [ %18, %17 ]
  %11 = load %"class.std::__1::unique_ptr.290"*, %"class.std::__1::unique_ptr.290"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.290", %"class.std::__1::unique_ptr.290"* %11, i64 %10, i32 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRExpression"*, %"struct.spirv_cross::SPIRExpression"** %12, align 8
  store %"struct.spirv_cross::SPIRExpression"* null, %"struct.spirv_cross::SPIRExpression"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::SPIRExpression"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = bitcast %"struct.spirv_cross::SPIRExpression"* %13 to i8*
  tail call void @free(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %9
  %18 = add nuw i64 %10, 1
  %19 = load i64, i64* %4, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %9, label %21

21:                                               ; preds = %17, %1
  store i64 0, i64* %4, align 8
  %22 = getelementptr inbounds %"class.spirv_cross::SmallVector.288", %"class.spirv_cross::SmallVector.288"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.290"*, %"class.std::__1::unique_ptr.290"** %22, align 8
  %24 = getelementptr inbounds %"class.spirv_cross::ObjectPool.283", %"class.spirv_cross::ObjectPool.283"* %0, i64 0, i32 2, i32 2
  %25 = bitcast %"class.spirv_cross::AlignedBuffer.294"* %24 to %"class.std::__1::unique_ptr.290"*
  %26 = icmp eq %"class.std::__1::unique_ptr.290"* %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::unique_ptr.290"* %23 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %27, %21
  %30 = getelementptr inbounds %"class.spirv_cross::ObjectPool.283", %"class.spirv_cross::ObjectPool.283"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spirv_cross::ObjectPool.283", %"class.spirv_cross::ObjectPool.283"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.spirv_cross::SPIRExpression"**, %"struct.spirv_cross::SPIRExpression"*** %31, align 8
  %33 = icmp eq %"struct.spirv_cross::SPIRExpression"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.spirv_cross::SPIRExpression"** %32 to i8*
  tail call void @free(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %34
  %37 = bitcast %"class.spirv_cross::ObjectPool.283"* %0 to i8*
  tail call void @_ZdlPv(i8* %37) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_14SPIRExpressionEE11free_opaqueEPv(%"class.spirv_cross::ObjectPool.283"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.spirv_cross::SPIRExpression"*
  %4 = ptrtoint i8* %1 to i64
  %5 = bitcast i8* %1 to void (%"struct.spirv_cross::SPIRExpression"*)***
  %6 = load void (%"struct.spirv_cross::SPIRExpression"*)**, void (%"struct.spirv_cross::SPIRExpression"*)*** %5, align 8
  %7 = load void (%"struct.spirv_cross::SPIRExpression"*)*, void (%"struct.spirv_cross::SPIRExpression"*)** %6, align 8
  tail call void %7(%"struct.spirv_cross::SPIRExpression"* %3) #17
  %8 = getelementptr inbounds %"class.spirv_cross::ObjectPool.283", %"class.spirv_cross::ObjectPool.283"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.spirv_cross::ObjectPool.283", %"class.spirv_cross::ObjectPool.283"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 1
  tail call void @_ZN11spirv_cross11SmallVectorIPNS_14SPIRExpressionELm0EE7reserveEm(%"class.spirv_cross::SmallVector.284"* %8, i64 %11) #17
  %12 = getelementptr inbounds %"class.spirv_cross::SmallVector.284", %"class.spirv_cross::SmallVector.284"* %8, i64 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRExpression"**, %"struct.spirv_cross::SPIRExpression"*** %12, align 8
  %14 = load i64, i64* %9, align 8
  %15 = getelementptr inbounds %"struct.spirv_cross::SPIRExpression"*, %"struct.spirv_cross::SPIRExpression"** %13, i64 %14
  %16 = bitcast %"struct.spirv_cross::SPIRExpression"** %15 to i64*
  store i64 %4, i64* %16, align 8
  %17 = load i64, i64* %9, align 8
  %18 = add i64 %17, 1
  store i64 %18, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross11SmallVectorIPNS_14SPIRExpressionELm0EE7reserveEm(%"class.spirv_cross::SmallVector.284"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 2305843009213693951
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @_ZSt9terminatev() #19
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.spirv_cross::SmallVector.284", %"class.spirv_cross::SmallVector.284"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %139

9:                                                ; preds = %5
  %10 = icmp eq i64 %7, 0
  %11 = select i1 %10, i64 1, i64 %7
  br label %12

12:                                               ; preds = %12, %9
  %13 = phi i64 [ %11, %9 ], [ %15, %12 ]
  %14 = icmp ult i64 %13, %1
  %15 = shl i64 %13, 1
  br i1 %14, label %12, label %16

16:                                               ; preds = %12
  %17 = icmp eq i64 %13, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = shl i64 %13, 3
  %20 = tail call noalias i8* @malloc(i64 %19) #17
  %21 = bitcast i8* %20 to %"struct.spirv_cross::SPIRExpression"**
  %22 = icmp eq i8* %20, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %16, %18
  tail call void @_ZSt9terminatev() #19
  unreachable

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.spirv_cross::SmallVector.284", %"class.spirv_cross::SmallVector.284"* %0, i64 0, i32 0, i32 0
  %26 = load %"struct.spirv_cross::SPIRExpression"**, %"struct.spirv_cross::SPIRExpression"*** %25, align 8
  %27 = bitcast %"struct.spirv_cross::SPIRExpression"** %26 to i8*
  %28 = icmp eq %"struct.spirv_cross::SPIRExpression"** %26, %21
  br i1 %28, label %133, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.spirv_cross::SmallVector.284", %"class.spirv_cross::SmallVector.284"* %0, i64 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %133, label %33

33:                                               ; preds = %29
  %34 = icmp ult i64 %31, 4
  br i1 %34, label %122, label %35

35:                                               ; preds = %33
  %36 = shl i64 %31, 3
  %37 = getelementptr i8, i8* %20, i64 %36
  %38 = getelementptr %"struct.spirv_cross::SPIRExpression"*, %"struct.spirv_cross::SPIRExpression"** %26, i64 %31
  %39 = bitcast %"struct.spirv_cross::SPIRExpression"** %38 to i8*
  %40 = icmp ult i8* %20, %39
  %41 = icmp ugt i8* %37, %27
  %42 = and i1 %40, %41
  br i1 %42, label %122, label %43

43:                                               ; preds = %35
  %44 = and i64 %31, -4
  %45 = add i64 %44, -4
  %46 = lshr exact i64 %45, 2
  %47 = add nuw nsw i64 %46, 1
  %48 = and i64 %47, 3
  %49 = icmp ult i64 %45, 12
  br i1 %49, label %101, label %50

50:                                               ; preds = %43
  %51 = sub nsw i64 %47, %48
  br label %52

52:                                               ; preds = %52, %50
  %53 = phi i64 [ 0, %50 ], [ %98, %52 ]
  %54 = phi i64 [ %51, %50 ], [ %99, %52 ]
  %55 = getelementptr inbounds %"struct.spirv_cross::SPIRExpression"*, %"struct.spirv_cross::SPIRExpression"** %21, i64 %53
  %56 = getelementptr inbounds %"struct.spirv_cross::SPIRExpression"*, %"struct.spirv_cross::SPIRExpression"** %26, i64 %53
  %57 = bitcast %"struct.spirv_cross::SPIRExpression"** %56 to <2 x i64>*
  %58 = load <2 x i64>, <2 x i64>* %57, align 8, !alias.scope !85
  %59 = getelementptr inbounds %"struct.spirv_cross::SPIRExpression"*, %"struct.spirv_cross::SPIRExpression"** %56, i64 2
  %60 = bitcast %"struct.spirv_cross::SPIRExpression"** %59 to <2 x i64>*
  %61 = load <2 x i64>, <2 x i64>* %60, align 8, !alias.scope !85
  %62 = bitcast %"struct.spirv_cross::SPIRExpression"** %55 to <2 x i64>*
  store <2 x i64> %58, <2 x i64>* %62, align 8, !alias.scope !88, !noalias !85
  %63 = getelementptr inbounds %"struct.spirv_cross::SPIRExpression"*, %"struct.spirv_cross::SPIRExpression"** %55, i64 2
  %64 = bitcast %"struct.spirv_cross::SPIRExpression"** %63 to <2 x i64>*
  store <2 x i64> %61, <2 x i64>* %64, align 8, !alias.scope !88, !noalias !85
  %65 = or i64 %53, 4
  %66 = getelementptr inbounds %"struct.spirv_cross::SPIRExpression"*, %"struct.spirv_cross::SPIRExpression"** %21, i64 %65
  %67 = getelementptr inbounds %"struct.spirv_cross::SPIRExpression"*, %"struct.spirv_cross::SPIRExpression"** %26, i64 %65
  %68 = bitcast %"struct.spirv_cross::SPIRExpression"** %67 to <2 x i64>*
  %69 = load <2 x i64>, <2 x i64>* %68, align 8, !alias.scope !85
  %70 = getelementptr inbounds %"struct.spirv_cross::SPIRExpression"*, %"struct.spirv_cross::SPIRExpression"** %67, i64 2
  %71 = bitcast %"struct.spirv_cross::SPIRExpression"** %70 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 8, !alias.scope !85
  %73 = bitcast %"struct.spirv_cross::SPIRExpression"** %66 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %73, align 8, !alias.scope !88, !noalias !85
  %74 = getelementptr inbounds %"struct.spirv_cross::SPIRExpression"*, %"struct.spirv_cross::SPIRExpression"** %66, i64 2
  %75 = bitcast %"struct.spirv_cross::SPIRExpression"** %74 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %75, align 8, !alias.scope !88, !noalias !85
  %76 = or i64 %53, 8
  %77 = getelementptr inbounds %"struct.spirv_cross::SPIRExpression"*, %"struct.spirv_cross::SPIRExpression"** %21, i64 %76
  %78 = getelementptr inbounds %"struct.spirv_cross::SPIRExpression"*, %"struct.spirv_cross::SPIRExpression"** %26, i64 %76
  %79 = bitcast %"struct.spirv_cross::SPIRExpression"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !85
  %81 = getelementptr inbounds %"struct.spirv_cross::SPIRExpression"*, %"struct.spirv_cross::SPIRExpression"** %78, i64 2
  %82 = bitcast %"struct.spirv_cross::SPIRExpression"** %81 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 8, !alias.scope !85
  %84 = bitcast %"struct.spirv_cross::SPIRExpression"** %77 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %84, align 8, !alias.scope !88, !noalias !85
  %85 = getelementptr inbounds %"struct.spirv_cross::SPIRExpression"*, %"struct.spirv_cross::SPIRExpression"** %77, i64 2
  %86 = bitcast %"struct.spirv_cross::SPIRExpression"** %85 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %86, align 8, !alias.scope !88, !noalias !85
  %87 = or i64 %53, 12
  %88 = getelementptr inbounds %"struct.spirv_cross::SPIRExpression"*, %"struct.spirv_cross::SPIRExpression"** %21, i64 %87
  %89 = getelementptr inbounds %"struct.spirv_cross::SPIRExpression"*, %"struct.spirv_cross::SPIRExpression"** %26, i64 %87
  %90 = bitcast %"struct.spirv_cross::SPIRExpression"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !85
  %92 = getelementptr inbounds %"struct.spirv_cross::SPIRExpression"*, %"struct.spirv_cross::SPIRExpression"** %89, i64 2
  %93 = bitcast %"struct.spirv_cross::SPIRExpression"** %92 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 8, !alias.scope !85
  %95 = bitcast %"struct.spirv_cross::SPIRExpression"** %88 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %95, align 8, !alias.scope !88, !noalias !85
  %96 = getelementptr inbounds %"struct.spirv_cross::SPIRExpression"*, %"struct.spirv_cross::SPIRExpression"** %88, i64 2
  %97 = bitcast %"struct.spirv_cross::SPIRExpression"** %96 to <2 x i64>*
  store <2 x i64> %94, <2 x i64>* %97, align 8, !alias.scope !88, !noalias !85
  %98 = add i64 %53, 16
  %99 = add i64 %54, -4
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %52, !llvm.loop !90

101:                                              ; preds = %52, %43
  %102 = phi i64 [ 0, %43 ], [ %98, %52 ]
  %103 = icmp eq i64 %48, 0
  br i1 %103, label %120, label %104

104:                                              ; preds = %101, %104
  %105 = phi i64 [ %117, %104 ], [ %102, %101 ]
  %106 = phi i64 [ %118, %104 ], [ %48, %101 ]
  %107 = getelementptr inbounds %"struct.spirv_cross::SPIRExpression"*, %"struct.spirv_cross::SPIRExpression"** %21, i64 %105
  %108 = getelementptr inbounds %"struct.spirv_cross::SPIRExpression"*, %"struct.spirv_cross::SPIRExpression"** %26, i64 %105
  %109 = bitcast %"struct.spirv_cross::SPIRExpression"** %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !85
  %111 = getelementptr inbounds %"struct.spirv_cross::SPIRExpression"*, %"struct.spirv_cross::SPIRExpression"** %108, i64 2
  %112 = bitcast %"struct.spirv_cross::SPIRExpression"** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !85
  %114 = bitcast %"struct.spirv_cross::SPIRExpression"** %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !88, !noalias !85
  %115 = getelementptr inbounds %"struct.spirv_cross::SPIRExpression"*, %"struct.spirv_cross::SPIRExpression"** %107, i64 2
  %116 = bitcast %"struct.spirv_cross::SPIRExpression"** %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !88, !noalias !85
  %117 = add i64 %105, 4
  %118 = add i64 %106, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %104, !llvm.loop !91

120:                                              ; preds = %104, %101
  %121 = icmp eq i64 %31, %44
  br i1 %121, label %133, label %122

122:                                              ; preds = %120, %35, %33
  %123 = phi i64 [ 0, %35 ], [ 0, %33 ], [ %44, %120 ]
  br label %124

124:                                              ; preds = %122, %124
  %125 = phi i64 [ %131, %124 ], [ %123, %122 ]
  %126 = getelementptr inbounds %"struct.spirv_cross::SPIRExpression"*, %"struct.spirv_cross::SPIRExpression"** %21, i64 %125
  %127 = getelementptr inbounds %"struct.spirv_cross::SPIRExpression"*, %"struct.spirv_cross::SPIRExpression"** %26, i64 %125
  %128 = bitcast %"struct.spirv_cross::SPIRExpression"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.spirv_cross::SPIRExpression"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = add nuw i64 %125, 1
  %132 = icmp ult i64 %131, %31
  br i1 %132, label %124, label %133, !llvm.loop !92

133:                                              ; preds = %124, %120, %29, %24
  %134 = phi %"struct.spirv_cross::SPIRExpression"** [ %21, %24 ], [ %26, %29 ], [ %26, %120 ], [ %26, %124 ]
  %135 = icmp eq %"struct.spirv_cross::SPIRExpression"** %134, null
  br i1 %135, label %137, label %136

136:                                              ; preds = %133
  tail call void @free(i8* %27) #17
  br label %137

137:                                              ; preds = %133, %136
  %138 = bitcast %"class.spirv_cross::SmallVector.284"* %0 to i8**
  store i8* %20, i8** %138, align 8
  store i64 %13, i64* %6, align 8
  br label %139

139:                                              ; preds = %137, %5
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_14SPIRConstantOpEED2Ev(%"class.spirv_cross::ObjectPool.296"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ObjectPool.296", %"class.spirv_cross::ObjectPool.296"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_14SPIRConstantOpEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool.296", %"class.spirv_cross::ObjectPool.296"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool.296", %"class.spirv_cross::ObjectPool.296"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.301", %"class.spirv_cross::SmallVector.301"* %3, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ 0, %7 ], [ %18, %17 ]
  %11 = load %"class.std::__1::unique_ptr.303"*, %"class.std::__1::unique_ptr.303"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.303", %"class.std::__1::unique_ptr.303"* %11, i64 %10, i32 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRConstantOp"*, %"struct.spirv_cross::SPIRConstantOp"** %12, align 8
  store %"struct.spirv_cross::SPIRConstantOp"* null, %"struct.spirv_cross::SPIRConstantOp"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::SPIRConstantOp"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = bitcast %"struct.spirv_cross::SPIRConstantOp"* %13 to i8*
  tail call void @free(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %9
  %18 = add nuw i64 %10, 1
  %19 = load i64, i64* %4, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %9, label %21

21:                                               ; preds = %17, %1
  store i64 0, i64* %4, align 8
  %22 = getelementptr inbounds %"class.spirv_cross::SmallVector.301", %"class.spirv_cross::SmallVector.301"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.303"*, %"class.std::__1::unique_ptr.303"** %22, align 8
  %24 = getelementptr inbounds %"class.spirv_cross::ObjectPool.296", %"class.spirv_cross::ObjectPool.296"* %0, i64 0, i32 2, i32 2
  %25 = bitcast %"class.spirv_cross::AlignedBuffer.307"* %24 to %"class.std::__1::unique_ptr.303"*
  %26 = icmp eq %"class.std::__1::unique_ptr.303"* %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::unique_ptr.303"* %23 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %21, %27
  %30 = getelementptr inbounds %"class.spirv_cross::ObjectPool.296", %"class.spirv_cross::ObjectPool.296"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spirv_cross::ObjectPool.296", %"class.spirv_cross::ObjectPool.296"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.spirv_cross::SPIRConstantOp"**, %"struct.spirv_cross::SPIRConstantOp"*** %31, align 8
  %33 = icmp eq %"struct.spirv_cross::SPIRConstantOp"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.spirv_cross::SPIRConstantOp"** %32 to i8*
  tail call void @free(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %34
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_14SPIRConstantOpEED0Ev(%"class.spirv_cross::ObjectPool.296"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ObjectPool.296", %"class.spirv_cross::ObjectPool.296"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_14SPIRConstantOpEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool.296", %"class.spirv_cross::ObjectPool.296"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool.296", %"class.spirv_cross::ObjectPool.296"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.301", %"class.spirv_cross::SmallVector.301"* %3, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ 0, %7 ], [ %18, %17 ]
  %11 = load %"class.std::__1::unique_ptr.303"*, %"class.std::__1::unique_ptr.303"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.303", %"class.std::__1::unique_ptr.303"* %11, i64 %10, i32 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRConstantOp"*, %"struct.spirv_cross::SPIRConstantOp"** %12, align 8
  store %"struct.spirv_cross::SPIRConstantOp"* null, %"struct.spirv_cross::SPIRConstantOp"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::SPIRConstantOp"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = bitcast %"struct.spirv_cross::SPIRConstantOp"* %13 to i8*
  tail call void @free(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %9
  %18 = add nuw i64 %10, 1
  %19 = load i64, i64* %4, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %9, label %21

21:                                               ; preds = %17, %1
  store i64 0, i64* %4, align 8
  %22 = getelementptr inbounds %"class.spirv_cross::SmallVector.301", %"class.spirv_cross::SmallVector.301"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.303"*, %"class.std::__1::unique_ptr.303"** %22, align 8
  %24 = getelementptr inbounds %"class.spirv_cross::ObjectPool.296", %"class.spirv_cross::ObjectPool.296"* %0, i64 0, i32 2, i32 2
  %25 = bitcast %"class.spirv_cross::AlignedBuffer.307"* %24 to %"class.std::__1::unique_ptr.303"*
  %26 = icmp eq %"class.std::__1::unique_ptr.303"* %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::unique_ptr.303"* %23 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %27, %21
  %30 = getelementptr inbounds %"class.spirv_cross::ObjectPool.296", %"class.spirv_cross::ObjectPool.296"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spirv_cross::ObjectPool.296", %"class.spirv_cross::ObjectPool.296"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.spirv_cross::SPIRConstantOp"**, %"struct.spirv_cross::SPIRConstantOp"*** %31, align 8
  %33 = icmp eq %"struct.spirv_cross::SPIRConstantOp"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.spirv_cross::SPIRConstantOp"** %32 to i8*
  tail call void @free(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %34
  %37 = bitcast %"class.spirv_cross::ObjectPool.296"* %0 to i8*
  tail call void @_ZdlPv(i8* %37) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_14SPIRConstantOpEE11free_opaqueEPv(%"class.spirv_cross::ObjectPool.296"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.spirv_cross::SPIRConstantOp"*
  %4 = ptrtoint i8* %1 to i64
  %5 = bitcast i8* %1 to void (%"struct.spirv_cross::SPIRConstantOp"*)***
  %6 = load void (%"struct.spirv_cross::SPIRConstantOp"*)**, void (%"struct.spirv_cross::SPIRConstantOp"*)*** %5, align 8
  %7 = load void (%"struct.spirv_cross::SPIRConstantOp"*)*, void (%"struct.spirv_cross::SPIRConstantOp"*)** %6, align 8
  tail call void %7(%"struct.spirv_cross::SPIRConstantOp"* %3) #17
  %8 = getelementptr inbounds %"class.spirv_cross::ObjectPool.296", %"class.spirv_cross::ObjectPool.296"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.spirv_cross::ObjectPool.296", %"class.spirv_cross::ObjectPool.296"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 1
  tail call void @_ZN11spirv_cross11SmallVectorIPNS_14SPIRConstantOpELm0EE7reserveEm(%"class.spirv_cross::SmallVector.297"* %8, i64 %11) #17
  %12 = getelementptr inbounds %"class.spirv_cross::SmallVector.297", %"class.spirv_cross::SmallVector.297"* %8, i64 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRConstantOp"**, %"struct.spirv_cross::SPIRConstantOp"*** %12, align 8
  %14 = load i64, i64* %9, align 8
  %15 = getelementptr inbounds %"struct.spirv_cross::SPIRConstantOp"*, %"struct.spirv_cross::SPIRConstantOp"** %13, i64 %14
  %16 = bitcast %"struct.spirv_cross::SPIRConstantOp"** %15 to i64*
  store i64 %4, i64* %16, align 8
  %17 = load i64, i64* %9, align 8
  %18 = add i64 %17, 1
  store i64 %18, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross11SmallVectorIPNS_14SPIRConstantOpELm0EE7reserveEm(%"class.spirv_cross::SmallVector.297"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 2305843009213693951
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @_ZSt9terminatev() #19
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.spirv_cross::SmallVector.297", %"class.spirv_cross::SmallVector.297"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %139

9:                                                ; preds = %5
  %10 = icmp eq i64 %7, 0
  %11 = select i1 %10, i64 1, i64 %7
  br label %12

12:                                               ; preds = %12, %9
  %13 = phi i64 [ %11, %9 ], [ %15, %12 ]
  %14 = icmp ult i64 %13, %1
  %15 = shl i64 %13, 1
  br i1 %14, label %12, label %16

16:                                               ; preds = %12
  %17 = icmp eq i64 %13, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = shl i64 %13, 3
  %20 = tail call noalias i8* @malloc(i64 %19) #17
  %21 = bitcast i8* %20 to %"struct.spirv_cross::SPIRConstantOp"**
  %22 = icmp eq i8* %20, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %16, %18
  tail call void @_ZSt9terminatev() #19
  unreachable

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.spirv_cross::SmallVector.297", %"class.spirv_cross::SmallVector.297"* %0, i64 0, i32 0, i32 0
  %26 = load %"struct.spirv_cross::SPIRConstantOp"**, %"struct.spirv_cross::SPIRConstantOp"*** %25, align 8
  %27 = bitcast %"struct.spirv_cross::SPIRConstantOp"** %26 to i8*
  %28 = icmp eq %"struct.spirv_cross::SPIRConstantOp"** %26, %21
  br i1 %28, label %133, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.spirv_cross::SmallVector.297", %"class.spirv_cross::SmallVector.297"* %0, i64 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %133, label %33

33:                                               ; preds = %29
  %34 = icmp ult i64 %31, 4
  br i1 %34, label %122, label %35

35:                                               ; preds = %33
  %36 = shl i64 %31, 3
  %37 = getelementptr i8, i8* %20, i64 %36
  %38 = getelementptr %"struct.spirv_cross::SPIRConstantOp"*, %"struct.spirv_cross::SPIRConstantOp"** %26, i64 %31
  %39 = bitcast %"struct.spirv_cross::SPIRConstantOp"** %38 to i8*
  %40 = icmp ult i8* %20, %39
  %41 = icmp ugt i8* %37, %27
  %42 = and i1 %40, %41
  br i1 %42, label %122, label %43

43:                                               ; preds = %35
  %44 = and i64 %31, -4
  %45 = add i64 %44, -4
  %46 = lshr exact i64 %45, 2
  %47 = add nuw nsw i64 %46, 1
  %48 = and i64 %47, 3
  %49 = icmp ult i64 %45, 12
  br i1 %49, label %101, label %50

50:                                               ; preds = %43
  %51 = sub nsw i64 %47, %48
  br label %52

52:                                               ; preds = %52, %50
  %53 = phi i64 [ 0, %50 ], [ %98, %52 ]
  %54 = phi i64 [ %51, %50 ], [ %99, %52 ]
  %55 = getelementptr inbounds %"struct.spirv_cross::SPIRConstantOp"*, %"struct.spirv_cross::SPIRConstantOp"** %21, i64 %53
  %56 = getelementptr inbounds %"struct.spirv_cross::SPIRConstantOp"*, %"struct.spirv_cross::SPIRConstantOp"** %26, i64 %53
  %57 = bitcast %"struct.spirv_cross::SPIRConstantOp"** %56 to <2 x i64>*
  %58 = load <2 x i64>, <2 x i64>* %57, align 8, !alias.scope !93
  %59 = getelementptr inbounds %"struct.spirv_cross::SPIRConstantOp"*, %"struct.spirv_cross::SPIRConstantOp"** %56, i64 2
  %60 = bitcast %"struct.spirv_cross::SPIRConstantOp"** %59 to <2 x i64>*
  %61 = load <2 x i64>, <2 x i64>* %60, align 8, !alias.scope !93
  %62 = bitcast %"struct.spirv_cross::SPIRConstantOp"** %55 to <2 x i64>*
  store <2 x i64> %58, <2 x i64>* %62, align 8, !alias.scope !96, !noalias !93
  %63 = getelementptr inbounds %"struct.spirv_cross::SPIRConstantOp"*, %"struct.spirv_cross::SPIRConstantOp"** %55, i64 2
  %64 = bitcast %"struct.spirv_cross::SPIRConstantOp"** %63 to <2 x i64>*
  store <2 x i64> %61, <2 x i64>* %64, align 8, !alias.scope !96, !noalias !93
  %65 = or i64 %53, 4
  %66 = getelementptr inbounds %"struct.spirv_cross::SPIRConstantOp"*, %"struct.spirv_cross::SPIRConstantOp"** %21, i64 %65
  %67 = getelementptr inbounds %"struct.spirv_cross::SPIRConstantOp"*, %"struct.spirv_cross::SPIRConstantOp"** %26, i64 %65
  %68 = bitcast %"struct.spirv_cross::SPIRConstantOp"** %67 to <2 x i64>*
  %69 = load <2 x i64>, <2 x i64>* %68, align 8, !alias.scope !93
  %70 = getelementptr inbounds %"struct.spirv_cross::SPIRConstantOp"*, %"struct.spirv_cross::SPIRConstantOp"** %67, i64 2
  %71 = bitcast %"struct.spirv_cross::SPIRConstantOp"** %70 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 8, !alias.scope !93
  %73 = bitcast %"struct.spirv_cross::SPIRConstantOp"** %66 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %73, align 8, !alias.scope !96, !noalias !93
  %74 = getelementptr inbounds %"struct.spirv_cross::SPIRConstantOp"*, %"struct.spirv_cross::SPIRConstantOp"** %66, i64 2
  %75 = bitcast %"struct.spirv_cross::SPIRConstantOp"** %74 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %75, align 8, !alias.scope !96, !noalias !93
  %76 = or i64 %53, 8
  %77 = getelementptr inbounds %"struct.spirv_cross::SPIRConstantOp"*, %"struct.spirv_cross::SPIRConstantOp"** %21, i64 %76
  %78 = getelementptr inbounds %"struct.spirv_cross::SPIRConstantOp"*, %"struct.spirv_cross::SPIRConstantOp"** %26, i64 %76
  %79 = bitcast %"struct.spirv_cross::SPIRConstantOp"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !93
  %81 = getelementptr inbounds %"struct.spirv_cross::SPIRConstantOp"*, %"struct.spirv_cross::SPIRConstantOp"** %78, i64 2
  %82 = bitcast %"struct.spirv_cross::SPIRConstantOp"** %81 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 8, !alias.scope !93
  %84 = bitcast %"struct.spirv_cross::SPIRConstantOp"** %77 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %84, align 8, !alias.scope !96, !noalias !93
  %85 = getelementptr inbounds %"struct.spirv_cross::SPIRConstantOp"*, %"struct.spirv_cross::SPIRConstantOp"** %77, i64 2
  %86 = bitcast %"struct.spirv_cross::SPIRConstantOp"** %85 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %86, align 8, !alias.scope !96, !noalias !93
  %87 = or i64 %53, 12
  %88 = getelementptr inbounds %"struct.spirv_cross::SPIRConstantOp"*, %"struct.spirv_cross::SPIRConstantOp"** %21, i64 %87
  %89 = getelementptr inbounds %"struct.spirv_cross::SPIRConstantOp"*, %"struct.spirv_cross::SPIRConstantOp"** %26, i64 %87
  %90 = bitcast %"struct.spirv_cross::SPIRConstantOp"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !93
  %92 = getelementptr inbounds %"struct.spirv_cross::SPIRConstantOp"*, %"struct.spirv_cross::SPIRConstantOp"** %89, i64 2
  %93 = bitcast %"struct.spirv_cross::SPIRConstantOp"** %92 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 8, !alias.scope !93
  %95 = bitcast %"struct.spirv_cross::SPIRConstantOp"** %88 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %95, align 8, !alias.scope !96, !noalias !93
  %96 = getelementptr inbounds %"struct.spirv_cross::SPIRConstantOp"*, %"struct.spirv_cross::SPIRConstantOp"** %88, i64 2
  %97 = bitcast %"struct.spirv_cross::SPIRConstantOp"** %96 to <2 x i64>*
  store <2 x i64> %94, <2 x i64>* %97, align 8, !alias.scope !96, !noalias !93
  %98 = add i64 %53, 16
  %99 = add i64 %54, -4
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %52, !llvm.loop !98

101:                                              ; preds = %52, %43
  %102 = phi i64 [ 0, %43 ], [ %98, %52 ]
  %103 = icmp eq i64 %48, 0
  br i1 %103, label %120, label %104

104:                                              ; preds = %101, %104
  %105 = phi i64 [ %117, %104 ], [ %102, %101 ]
  %106 = phi i64 [ %118, %104 ], [ %48, %101 ]
  %107 = getelementptr inbounds %"struct.spirv_cross::SPIRConstantOp"*, %"struct.spirv_cross::SPIRConstantOp"** %21, i64 %105
  %108 = getelementptr inbounds %"struct.spirv_cross::SPIRConstantOp"*, %"struct.spirv_cross::SPIRConstantOp"** %26, i64 %105
  %109 = bitcast %"struct.spirv_cross::SPIRConstantOp"** %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !93
  %111 = getelementptr inbounds %"struct.spirv_cross::SPIRConstantOp"*, %"struct.spirv_cross::SPIRConstantOp"** %108, i64 2
  %112 = bitcast %"struct.spirv_cross::SPIRConstantOp"** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !93
  %114 = bitcast %"struct.spirv_cross::SPIRConstantOp"** %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !96, !noalias !93
  %115 = getelementptr inbounds %"struct.spirv_cross::SPIRConstantOp"*, %"struct.spirv_cross::SPIRConstantOp"** %107, i64 2
  %116 = bitcast %"struct.spirv_cross::SPIRConstantOp"** %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !96, !noalias !93
  %117 = add i64 %105, 4
  %118 = add i64 %106, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %104, !llvm.loop !99

120:                                              ; preds = %104, %101
  %121 = icmp eq i64 %31, %44
  br i1 %121, label %133, label %122

122:                                              ; preds = %120, %35, %33
  %123 = phi i64 [ 0, %35 ], [ 0, %33 ], [ %44, %120 ]
  br label %124

124:                                              ; preds = %122, %124
  %125 = phi i64 [ %131, %124 ], [ %123, %122 ]
  %126 = getelementptr inbounds %"struct.spirv_cross::SPIRConstantOp"*, %"struct.spirv_cross::SPIRConstantOp"** %21, i64 %125
  %127 = getelementptr inbounds %"struct.spirv_cross::SPIRConstantOp"*, %"struct.spirv_cross::SPIRConstantOp"** %26, i64 %125
  %128 = bitcast %"struct.spirv_cross::SPIRConstantOp"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.spirv_cross::SPIRConstantOp"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = add nuw i64 %125, 1
  %132 = icmp ult i64 %131, %31
  br i1 %132, label %124, label %133, !llvm.loop !100

133:                                              ; preds = %124, %120, %29, %24
  %134 = phi %"struct.spirv_cross::SPIRConstantOp"** [ %21, %24 ], [ %26, %29 ], [ %26, %120 ], [ %26, %124 ]
  %135 = icmp eq %"struct.spirv_cross::SPIRConstantOp"** %134, null
  br i1 %135, label %137, label %136

136:                                              ; preds = %133
  tail call void @free(i8* %27) #17
  br label %137

137:                                              ; preds = %133, %136
  %138 = bitcast %"class.spirv_cross::SmallVector.297"* %0 to i8**
  store i8* %20, i8** %138, align 8
  store i64 %13, i64* %6, align 8
  br label %139

139:                                              ; preds = %137, %5
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_24SPIRCombinedImageSamplerEED2Ev(%"class.spirv_cross::ObjectPool.309"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ObjectPool.309", %"class.spirv_cross::ObjectPool.309"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_24SPIRCombinedImageSamplerEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool.309", %"class.spirv_cross::ObjectPool.309"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool.309", %"class.spirv_cross::ObjectPool.309"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.314", %"class.spirv_cross::SmallVector.314"* %3, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ 0, %7 ], [ %18, %17 ]
  %11 = load %"class.std::__1::unique_ptr.316"*, %"class.std::__1::unique_ptr.316"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.316"* %11, i64 %10, i32 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRCombinedImageSampler"*, %"struct.spirv_cross::SPIRCombinedImageSampler"** %12, align 8
  store %"struct.spirv_cross::SPIRCombinedImageSampler"* null, %"struct.spirv_cross::SPIRCombinedImageSampler"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::SPIRCombinedImageSampler"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"* %13 to i8*
  tail call void @free(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %9
  %18 = add nuw i64 %10, 1
  %19 = load i64, i64* %4, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %9, label %21

21:                                               ; preds = %17, %1
  store i64 0, i64* %4, align 8
  %22 = getelementptr inbounds %"class.spirv_cross::SmallVector.314", %"class.spirv_cross::SmallVector.314"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.316"*, %"class.std::__1::unique_ptr.316"** %22, align 8
  %24 = getelementptr inbounds %"class.spirv_cross::ObjectPool.309", %"class.spirv_cross::ObjectPool.309"* %0, i64 0, i32 2, i32 2
  %25 = bitcast %"class.spirv_cross::AlignedBuffer.320"* %24 to %"class.std::__1::unique_ptr.316"*
  %26 = icmp eq %"class.std::__1::unique_ptr.316"* %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::unique_ptr.316"* %23 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %21, %27
  %30 = getelementptr inbounds %"class.spirv_cross::ObjectPool.309", %"class.spirv_cross::ObjectPool.309"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spirv_cross::ObjectPool.309", %"class.spirv_cross::ObjectPool.309"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.spirv_cross::SPIRCombinedImageSampler"**, %"struct.spirv_cross::SPIRCombinedImageSampler"*** %31, align 8
  %33 = icmp eq %"struct.spirv_cross::SPIRCombinedImageSampler"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"** %32 to i8*
  tail call void @free(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %34
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_24SPIRCombinedImageSamplerEED0Ev(%"class.spirv_cross::ObjectPool.309"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ObjectPool.309", %"class.spirv_cross::ObjectPool.309"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_24SPIRCombinedImageSamplerEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool.309", %"class.spirv_cross::ObjectPool.309"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool.309", %"class.spirv_cross::ObjectPool.309"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.314", %"class.spirv_cross::SmallVector.314"* %3, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ 0, %7 ], [ %18, %17 ]
  %11 = load %"class.std::__1::unique_ptr.316"*, %"class.std::__1::unique_ptr.316"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.316"* %11, i64 %10, i32 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRCombinedImageSampler"*, %"struct.spirv_cross::SPIRCombinedImageSampler"** %12, align 8
  store %"struct.spirv_cross::SPIRCombinedImageSampler"* null, %"struct.spirv_cross::SPIRCombinedImageSampler"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::SPIRCombinedImageSampler"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"* %13 to i8*
  tail call void @free(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %9
  %18 = add nuw i64 %10, 1
  %19 = load i64, i64* %4, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %9, label %21

21:                                               ; preds = %17, %1
  store i64 0, i64* %4, align 8
  %22 = getelementptr inbounds %"class.spirv_cross::SmallVector.314", %"class.spirv_cross::SmallVector.314"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.316"*, %"class.std::__1::unique_ptr.316"** %22, align 8
  %24 = getelementptr inbounds %"class.spirv_cross::ObjectPool.309", %"class.spirv_cross::ObjectPool.309"* %0, i64 0, i32 2, i32 2
  %25 = bitcast %"class.spirv_cross::AlignedBuffer.320"* %24 to %"class.std::__1::unique_ptr.316"*
  %26 = icmp eq %"class.std::__1::unique_ptr.316"* %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::unique_ptr.316"* %23 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %27, %21
  %30 = getelementptr inbounds %"class.spirv_cross::ObjectPool.309", %"class.spirv_cross::ObjectPool.309"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spirv_cross::ObjectPool.309", %"class.spirv_cross::ObjectPool.309"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.spirv_cross::SPIRCombinedImageSampler"**, %"struct.spirv_cross::SPIRCombinedImageSampler"*** %31, align 8
  %33 = icmp eq %"struct.spirv_cross::SPIRCombinedImageSampler"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"** %32 to i8*
  tail call void @free(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %34
  %37 = bitcast %"class.spirv_cross::ObjectPool.309"* %0 to i8*
  tail call void @_ZdlPv(i8* %37) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_24SPIRCombinedImageSamplerEE11free_opaqueEPv(%"class.spirv_cross::ObjectPool.309"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.spirv_cross::SPIRCombinedImageSampler"*
  %4 = ptrtoint i8* %1 to i64
  %5 = bitcast i8* %1 to void (%"struct.spirv_cross::SPIRCombinedImageSampler"*)***
  %6 = load void (%"struct.spirv_cross::SPIRCombinedImageSampler"*)**, void (%"struct.spirv_cross::SPIRCombinedImageSampler"*)*** %5, align 8
  %7 = load void (%"struct.spirv_cross::SPIRCombinedImageSampler"*)*, void (%"struct.spirv_cross::SPIRCombinedImageSampler"*)** %6, align 8
  tail call void %7(%"struct.spirv_cross::SPIRCombinedImageSampler"* %3) #17
  %8 = getelementptr inbounds %"class.spirv_cross::ObjectPool.309", %"class.spirv_cross::ObjectPool.309"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.spirv_cross::ObjectPool.309", %"class.spirv_cross::ObjectPool.309"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 1
  tail call void @_ZN11spirv_cross11SmallVectorIPNS_24SPIRCombinedImageSamplerELm0EE7reserveEm(%"class.spirv_cross::SmallVector.310"* %8, i64 %11) #17
  %12 = getelementptr inbounds %"class.spirv_cross::SmallVector.310", %"class.spirv_cross::SmallVector.310"* %8, i64 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRCombinedImageSampler"**, %"struct.spirv_cross::SPIRCombinedImageSampler"*** %12, align 8
  %14 = load i64, i64* %9, align 8
  %15 = getelementptr inbounds %"struct.spirv_cross::SPIRCombinedImageSampler"*, %"struct.spirv_cross::SPIRCombinedImageSampler"** %13, i64 %14
  %16 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"** %15 to i64*
  store i64 %4, i64* %16, align 8
  %17 = load i64, i64* %9, align 8
  %18 = add i64 %17, 1
  store i64 %18, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross11SmallVectorIPNS_24SPIRCombinedImageSamplerELm0EE7reserveEm(%"class.spirv_cross::SmallVector.310"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 2305843009213693951
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @_ZSt9terminatev() #19
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.spirv_cross::SmallVector.310", %"class.spirv_cross::SmallVector.310"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %139

9:                                                ; preds = %5
  %10 = icmp eq i64 %7, 0
  %11 = select i1 %10, i64 1, i64 %7
  br label %12

12:                                               ; preds = %12, %9
  %13 = phi i64 [ %11, %9 ], [ %15, %12 ]
  %14 = icmp ult i64 %13, %1
  %15 = shl i64 %13, 1
  br i1 %14, label %12, label %16

16:                                               ; preds = %12
  %17 = icmp eq i64 %13, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = shl i64 %13, 3
  %20 = tail call noalias i8* @malloc(i64 %19) #17
  %21 = bitcast i8* %20 to %"struct.spirv_cross::SPIRCombinedImageSampler"**
  %22 = icmp eq i8* %20, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %16, %18
  tail call void @_ZSt9terminatev() #19
  unreachable

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.spirv_cross::SmallVector.310", %"class.spirv_cross::SmallVector.310"* %0, i64 0, i32 0, i32 0
  %26 = load %"struct.spirv_cross::SPIRCombinedImageSampler"**, %"struct.spirv_cross::SPIRCombinedImageSampler"*** %25, align 8
  %27 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"** %26 to i8*
  %28 = icmp eq %"struct.spirv_cross::SPIRCombinedImageSampler"** %26, %21
  br i1 %28, label %133, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.spirv_cross::SmallVector.310", %"class.spirv_cross::SmallVector.310"* %0, i64 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %133, label %33

33:                                               ; preds = %29
  %34 = icmp ult i64 %31, 4
  br i1 %34, label %122, label %35

35:                                               ; preds = %33
  %36 = shl i64 %31, 3
  %37 = getelementptr i8, i8* %20, i64 %36
  %38 = getelementptr %"struct.spirv_cross::SPIRCombinedImageSampler"*, %"struct.spirv_cross::SPIRCombinedImageSampler"** %26, i64 %31
  %39 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"** %38 to i8*
  %40 = icmp ult i8* %20, %39
  %41 = icmp ugt i8* %37, %27
  %42 = and i1 %40, %41
  br i1 %42, label %122, label %43

43:                                               ; preds = %35
  %44 = and i64 %31, -4
  %45 = add i64 %44, -4
  %46 = lshr exact i64 %45, 2
  %47 = add nuw nsw i64 %46, 1
  %48 = and i64 %47, 3
  %49 = icmp ult i64 %45, 12
  br i1 %49, label %101, label %50

50:                                               ; preds = %43
  %51 = sub nsw i64 %47, %48
  br label %52

52:                                               ; preds = %52, %50
  %53 = phi i64 [ 0, %50 ], [ %98, %52 ]
  %54 = phi i64 [ %51, %50 ], [ %99, %52 ]
  %55 = getelementptr inbounds %"struct.spirv_cross::SPIRCombinedImageSampler"*, %"struct.spirv_cross::SPIRCombinedImageSampler"** %21, i64 %53
  %56 = getelementptr inbounds %"struct.spirv_cross::SPIRCombinedImageSampler"*, %"struct.spirv_cross::SPIRCombinedImageSampler"** %26, i64 %53
  %57 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"** %56 to <2 x i64>*
  %58 = load <2 x i64>, <2 x i64>* %57, align 8, !alias.scope !101
  %59 = getelementptr inbounds %"struct.spirv_cross::SPIRCombinedImageSampler"*, %"struct.spirv_cross::SPIRCombinedImageSampler"** %56, i64 2
  %60 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"** %59 to <2 x i64>*
  %61 = load <2 x i64>, <2 x i64>* %60, align 8, !alias.scope !101
  %62 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"** %55 to <2 x i64>*
  store <2 x i64> %58, <2 x i64>* %62, align 8, !alias.scope !104, !noalias !101
  %63 = getelementptr inbounds %"struct.spirv_cross::SPIRCombinedImageSampler"*, %"struct.spirv_cross::SPIRCombinedImageSampler"** %55, i64 2
  %64 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"** %63 to <2 x i64>*
  store <2 x i64> %61, <2 x i64>* %64, align 8, !alias.scope !104, !noalias !101
  %65 = or i64 %53, 4
  %66 = getelementptr inbounds %"struct.spirv_cross::SPIRCombinedImageSampler"*, %"struct.spirv_cross::SPIRCombinedImageSampler"** %21, i64 %65
  %67 = getelementptr inbounds %"struct.spirv_cross::SPIRCombinedImageSampler"*, %"struct.spirv_cross::SPIRCombinedImageSampler"** %26, i64 %65
  %68 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"** %67 to <2 x i64>*
  %69 = load <2 x i64>, <2 x i64>* %68, align 8, !alias.scope !101
  %70 = getelementptr inbounds %"struct.spirv_cross::SPIRCombinedImageSampler"*, %"struct.spirv_cross::SPIRCombinedImageSampler"** %67, i64 2
  %71 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"** %70 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 8, !alias.scope !101
  %73 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"** %66 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %73, align 8, !alias.scope !104, !noalias !101
  %74 = getelementptr inbounds %"struct.spirv_cross::SPIRCombinedImageSampler"*, %"struct.spirv_cross::SPIRCombinedImageSampler"** %66, i64 2
  %75 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"** %74 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %75, align 8, !alias.scope !104, !noalias !101
  %76 = or i64 %53, 8
  %77 = getelementptr inbounds %"struct.spirv_cross::SPIRCombinedImageSampler"*, %"struct.spirv_cross::SPIRCombinedImageSampler"** %21, i64 %76
  %78 = getelementptr inbounds %"struct.spirv_cross::SPIRCombinedImageSampler"*, %"struct.spirv_cross::SPIRCombinedImageSampler"** %26, i64 %76
  %79 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !101
  %81 = getelementptr inbounds %"struct.spirv_cross::SPIRCombinedImageSampler"*, %"struct.spirv_cross::SPIRCombinedImageSampler"** %78, i64 2
  %82 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"** %81 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 8, !alias.scope !101
  %84 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"** %77 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %84, align 8, !alias.scope !104, !noalias !101
  %85 = getelementptr inbounds %"struct.spirv_cross::SPIRCombinedImageSampler"*, %"struct.spirv_cross::SPIRCombinedImageSampler"** %77, i64 2
  %86 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"** %85 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %86, align 8, !alias.scope !104, !noalias !101
  %87 = or i64 %53, 12
  %88 = getelementptr inbounds %"struct.spirv_cross::SPIRCombinedImageSampler"*, %"struct.spirv_cross::SPIRCombinedImageSampler"** %21, i64 %87
  %89 = getelementptr inbounds %"struct.spirv_cross::SPIRCombinedImageSampler"*, %"struct.spirv_cross::SPIRCombinedImageSampler"** %26, i64 %87
  %90 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !101
  %92 = getelementptr inbounds %"struct.spirv_cross::SPIRCombinedImageSampler"*, %"struct.spirv_cross::SPIRCombinedImageSampler"** %89, i64 2
  %93 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"** %92 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 8, !alias.scope !101
  %95 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"** %88 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %95, align 8, !alias.scope !104, !noalias !101
  %96 = getelementptr inbounds %"struct.spirv_cross::SPIRCombinedImageSampler"*, %"struct.spirv_cross::SPIRCombinedImageSampler"** %88, i64 2
  %97 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"** %96 to <2 x i64>*
  store <2 x i64> %94, <2 x i64>* %97, align 8, !alias.scope !104, !noalias !101
  %98 = add i64 %53, 16
  %99 = add i64 %54, -4
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %52, !llvm.loop !106

101:                                              ; preds = %52, %43
  %102 = phi i64 [ 0, %43 ], [ %98, %52 ]
  %103 = icmp eq i64 %48, 0
  br i1 %103, label %120, label %104

104:                                              ; preds = %101, %104
  %105 = phi i64 [ %117, %104 ], [ %102, %101 ]
  %106 = phi i64 [ %118, %104 ], [ %48, %101 ]
  %107 = getelementptr inbounds %"struct.spirv_cross::SPIRCombinedImageSampler"*, %"struct.spirv_cross::SPIRCombinedImageSampler"** %21, i64 %105
  %108 = getelementptr inbounds %"struct.spirv_cross::SPIRCombinedImageSampler"*, %"struct.spirv_cross::SPIRCombinedImageSampler"** %26, i64 %105
  %109 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"** %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !101
  %111 = getelementptr inbounds %"struct.spirv_cross::SPIRCombinedImageSampler"*, %"struct.spirv_cross::SPIRCombinedImageSampler"** %108, i64 2
  %112 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !101
  %114 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"** %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !104, !noalias !101
  %115 = getelementptr inbounds %"struct.spirv_cross::SPIRCombinedImageSampler"*, %"struct.spirv_cross::SPIRCombinedImageSampler"** %107, i64 2
  %116 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"** %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !104, !noalias !101
  %117 = add i64 %105, 4
  %118 = add i64 %106, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %104, !llvm.loop !107

120:                                              ; preds = %104, %101
  %121 = icmp eq i64 %31, %44
  br i1 %121, label %133, label %122

122:                                              ; preds = %120, %35, %33
  %123 = phi i64 [ 0, %35 ], [ 0, %33 ], [ %44, %120 ]
  br label %124

124:                                              ; preds = %122, %124
  %125 = phi i64 [ %131, %124 ], [ %123, %122 ]
  %126 = getelementptr inbounds %"struct.spirv_cross::SPIRCombinedImageSampler"*, %"struct.spirv_cross::SPIRCombinedImageSampler"** %21, i64 %125
  %127 = getelementptr inbounds %"struct.spirv_cross::SPIRCombinedImageSampler"*, %"struct.spirv_cross::SPIRCombinedImageSampler"** %26, i64 %125
  %128 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.spirv_cross::SPIRCombinedImageSampler"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = add nuw i64 %125, 1
  %132 = icmp ult i64 %131, %31
  br i1 %132, label %124, label %133, !llvm.loop !108

133:                                              ; preds = %124, %120, %29, %24
  %134 = phi %"struct.spirv_cross::SPIRCombinedImageSampler"** [ %21, %24 ], [ %26, %29 ], [ %26, %120 ], [ %26, %124 ]
  %135 = icmp eq %"struct.spirv_cross::SPIRCombinedImageSampler"** %134, null
  br i1 %135, label %137, label %136

136:                                              ; preds = %133
  tail call void @free(i8* %27) #17
  br label %137

137:                                              ; preds = %133, %136
  %138 = bitcast %"class.spirv_cross::SmallVector.310"* %0 to i8**
  store i8* %20, i8** %138, align 8
  store i64 %13, i64* %6, align 8
  br label %139

139:                                              ; preds = %137, %5
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_15SPIRAccessChainEED2Ev(%"class.spirv_cross::ObjectPool.322"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ObjectPool.322", %"class.spirv_cross::ObjectPool.322"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_15SPIRAccessChainEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool.322", %"class.spirv_cross::ObjectPool.322"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool.322", %"class.spirv_cross::ObjectPool.322"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.327", %"class.spirv_cross::SmallVector.327"* %3, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ 0, %7 ], [ %18, %17 ]
  %11 = load %"class.std::__1::unique_ptr.329"*, %"class.std::__1::unique_ptr.329"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.329", %"class.std::__1::unique_ptr.329"* %11, i64 %10, i32 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRAccessChain"*, %"struct.spirv_cross::SPIRAccessChain"** %12, align 8
  store %"struct.spirv_cross::SPIRAccessChain"* null, %"struct.spirv_cross::SPIRAccessChain"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::SPIRAccessChain"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = bitcast %"struct.spirv_cross::SPIRAccessChain"* %13 to i8*
  tail call void @free(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %9
  %18 = add nuw i64 %10, 1
  %19 = load i64, i64* %4, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %9, label %21

21:                                               ; preds = %17, %1
  store i64 0, i64* %4, align 8
  %22 = getelementptr inbounds %"class.spirv_cross::SmallVector.327", %"class.spirv_cross::SmallVector.327"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.329"*, %"class.std::__1::unique_ptr.329"** %22, align 8
  %24 = getelementptr inbounds %"class.spirv_cross::ObjectPool.322", %"class.spirv_cross::ObjectPool.322"* %0, i64 0, i32 2, i32 2
  %25 = bitcast %"class.spirv_cross::AlignedBuffer.333"* %24 to %"class.std::__1::unique_ptr.329"*
  %26 = icmp eq %"class.std::__1::unique_ptr.329"* %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::unique_ptr.329"* %23 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %21, %27
  %30 = getelementptr inbounds %"class.spirv_cross::ObjectPool.322", %"class.spirv_cross::ObjectPool.322"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spirv_cross::ObjectPool.322", %"class.spirv_cross::ObjectPool.322"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.spirv_cross::SPIRAccessChain"**, %"struct.spirv_cross::SPIRAccessChain"*** %31, align 8
  %33 = icmp eq %"struct.spirv_cross::SPIRAccessChain"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.spirv_cross::SPIRAccessChain"** %32 to i8*
  tail call void @free(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %34
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_15SPIRAccessChainEED0Ev(%"class.spirv_cross::ObjectPool.322"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ObjectPool.322", %"class.spirv_cross::ObjectPool.322"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_15SPIRAccessChainEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool.322", %"class.spirv_cross::ObjectPool.322"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool.322", %"class.spirv_cross::ObjectPool.322"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.327", %"class.spirv_cross::SmallVector.327"* %3, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ 0, %7 ], [ %18, %17 ]
  %11 = load %"class.std::__1::unique_ptr.329"*, %"class.std::__1::unique_ptr.329"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.329", %"class.std::__1::unique_ptr.329"* %11, i64 %10, i32 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRAccessChain"*, %"struct.spirv_cross::SPIRAccessChain"** %12, align 8
  store %"struct.spirv_cross::SPIRAccessChain"* null, %"struct.spirv_cross::SPIRAccessChain"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::SPIRAccessChain"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = bitcast %"struct.spirv_cross::SPIRAccessChain"* %13 to i8*
  tail call void @free(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %9
  %18 = add nuw i64 %10, 1
  %19 = load i64, i64* %4, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %9, label %21

21:                                               ; preds = %17, %1
  store i64 0, i64* %4, align 8
  %22 = getelementptr inbounds %"class.spirv_cross::SmallVector.327", %"class.spirv_cross::SmallVector.327"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.329"*, %"class.std::__1::unique_ptr.329"** %22, align 8
  %24 = getelementptr inbounds %"class.spirv_cross::ObjectPool.322", %"class.spirv_cross::ObjectPool.322"* %0, i64 0, i32 2, i32 2
  %25 = bitcast %"class.spirv_cross::AlignedBuffer.333"* %24 to %"class.std::__1::unique_ptr.329"*
  %26 = icmp eq %"class.std::__1::unique_ptr.329"* %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::unique_ptr.329"* %23 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %27, %21
  %30 = getelementptr inbounds %"class.spirv_cross::ObjectPool.322", %"class.spirv_cross::ObjectPool.322"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spirv_cross::ObjectPool.322", %"class.spirv_cross::ObjectPool.322"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.spirv_cross::SPIRAccessChain"**, %"struct.spirv_cross::SPIRAccessChain"*** %31, align 8
  %33 = icmp eq %"struct.spirv_cross::SPIRAccessChain"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.spirv_cross::SPIRAccessChain"** %32 to i8*
  tail call void @free(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %34
  %37 = bitcast %"class.spirv_cross::ObjectPool.322"* %0 to i8*
  tail call void @_ZdlPv(i8* %37) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_15SPIRAccessChainEE11free_opaqueEPv(%"class.spirv_cross::ObjectPool.322"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.spirv_cross::SPIRAccessChain"*
  %4 = ptrtoint i8* %1 to i64
  %5 = bitcast i8* %1 to void (%"struct.spirv_cross::SPIRAccessChain"*)***
  %6 = load void (%"struct.spirv_cross::SPIRAccessChain"*)**, void (%"struct.spirv_cross::SPIRAccessChain"*)*** %5, align 8
  %7 = load void (%"struct.spirv_cross::SPIRAccessChain"*)*, void (%"struct.spirv_cross::SPIRAccessChain"*)** %6, align 8
  tail call void %7(%"struct.spirv_cross::SPIRAccessChain"* %3) #17
  %8 = getelementptr inbounds %"class.spirv_cross::ObjectPool.322", %"class.spirv_cross::ObjectPool.322"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.spirv_cross::ObjectPool.322", %"class.spirv_cross::ObjectPool.322"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 1
  tail call void @_ZN11spirv_cross11SmallVectorIPNS_15SPIRAccessChainELm0EE7reserveEm(%"class.spirv_cross::SmallVector.323"* %8, i64 %11) #17
  %12 = getelementptr inbounds %"class.spirv_cross::SmallVector.323", %"class.spirv_cross::SmallVector.323"* %8, i64 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRAccessChain"**, %"struct.spirv_cross::SPIRAccessChain"*** %12, align 8
  %14 = load i64, i64* %9, align 8
  %15 = getelementptr inbounds %"struct.spirv_cross::SPIRAccessChain"*, %"struct.spirv_cross::SPIRAccessChain"** %13, i64 %14
  %16 = bitcast %"struct.spirv_cross::SPIRAccessChain"** %15 to i64*
  store i64 %4, i64* %16, align 8
  %17 = load i64, i64* %9, align 8
  %18 = add i64 %17, 1
  store i64 %18, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross11SmallVectorIPNS_15SPIRAccessChainELm0EE7reserveEm(%"class.spirv_cross::SmallVector.323"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 2305843009213693951
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @_ZSt9terminatev() #19
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.spirv_cross::SmallVector.323", %"class.spirv_cross::SmallVector.323"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %139

9:                                                ; preds = %5
  %10 = icmp eq i64 %7, 0
  %11 = select i1 %10, i64 1, i64 %7
  br label %12

12:                                               ; preds = %12, %9
  %13 = phi i64 [ %11, %9 ], [ %15, %12 ]
  %14 = icmp ult i64 %13, %1
  %15 = shl i64 %13, 1
  br i1 %14, label %12, label %16

16:                                               ; preds = %12
  %17 = icmp eq i64 %13, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = shl i64 %13, 3
  %20 = tail call noalias i8* @malloc(i64 %19) #17
  %21 = bitcast i8* %20 to %"struct.spirv_cross::SPIRAccessChain"**
  %22 = icmp eq i8* %20, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %16, %18
  tail call void @_ZSt9terminatev() #19
  unreachable

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.spirv_cross::SmallVector.323", %"class.spirv_cross::SmallVector.323"* %0, i64 0, i32 0, i32 0
  %26 = load %"struct.spirv_cross::SPIRAccessChain"**, %"struct.spirv_cross::SPIRAccessChain"*** %25, align 8
  %27 = bitcast %"struct.spirv_cross::SPIRAccessChain"** %26 to i8*
  %28 = icmp eq %"struct.spirv_cross::SPIRAccessChain"** %26, %21
  br i1 %28, label %133, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.spirv_cross::SmallVector.323", %"class.spirv_cross::SmallVector.323"* %0, i64 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %133, label %33

33:                                               ; preds = %29
  %34 = icmp ult i64 %31, 4
  br i1 %34, label %122, label %35

35:                                               ; preds = %33
  %36 = shl i64 %31, 3
  %37 = getelementptr i8, i8* %20, i64 %36
  %38 = getelementptr %"struct.spirv_cross::SPIRAccessChain"*, %"struct.spirv_cross::SPIRAccessChain"** %26, i64 %31
  %39 = bitcast %"struct.spirv_cross::SPIRAccessChain"** %38 to i8*
  %40 = icmp ult i8* %20, %39
  %41 = icmp ugt i8* %37, %27
  %42 = and i1 %40, %41
  br i1 %42, label %122, label %43

43:                                               ; preds = %35
  %44 = and i64 %31, -4
  %45 = add i64 %44, -4
  %46 = lshr exact i64 %45, 2
  %47 = add nuw nsw i64 %46, 1
  %48 = and i64 %47, 3
  %49 = icmp ult i64 %45, 12
  br i1 %49, label %101, label %50

50:                                               ; preds = %43
  %51 = sub nsw i64 %47, %48
  br label %52

52:                                               ; preds = %52, %50
  %53 = phi i64 [ 0, %50 ], [ %98, %52 ]
  %54 = phi i64 [ %51, %50 ], [ %99, %52 ]
  %55 = getelementptr inbounds %"struct.spirv_cross::SPIRAccessChain"*, %"struct.spirv_cross::SPIRAccessChain"** %21, i64 %53
  %56 = getelementptr inbounds %"struct.spirv_cross::SPIRAccessChain"*, %"struct.spirv_cross::SPIRAccessChain"** %26, i64 %53
  %57 = bitcast %"struct.spirv_cross::SPIRAccessChain"** %56 to <2 x i64>*
  %58 = load <2 x i64>, <2 x i64>* %57, align 8, !alias.scope !109
  %59 = getelementptr inbounds %"struct.spirv_cross::SPIRAccessChain"*, %"struct.spirv_cross::SPIRAccessChain"** %56, i64 2
  %60 = bitcast %"struct.spirv_cross::SPIRAccessChain"** %59 to <2 x i64>*
  %61 = load <2 x i64>, <2 x i64>* %60, align 8, !alias.scope !109
  %62 = bitcast %"struct.spirv_cross::SPIRAccessChain"** %55 to <2 x i64>*
  store <2 x i64> %58, <2 x i64>* %62, align 8, !alias.scope !112, !noalias !109
  %63 = getelementptr inbounds %"struct.spirv_cross::SPIRAccessChain"*, %"struct.spirv_cross::SPIRAccessChain"** %55, i64 2
  %64 = bitcast %"struct.spirv_cross::SPIRAccessChain"** %63 to <2 x i64>*
  store <2 x i64> %61, <2 x i64>* %64, align 8, !alias.scope !112, !noalias !109
  %65 = or i64 %53, 4
  %66 = getelementptr inbounds %"struct.spirv_cross::SPIRAccessChain"*, %"struct.spirv_cross::SPIRAccessChain"** %21, i64 %65
  %67 = getelementptr inbounds %"struct.spirv_cross::SPIRAccessChain"*, %"struct.spirv_cross::SPIRAccessChain"** %26, i64 %65
  %68 = bitcast %"struct.spirv_cross::SPIRAccessChain"** %67 to <2 x i64>*
  %69 = load <2 x i64>, <2 x i64>* %68, align 8, !alias.scope !109
  %70 = getelementptr inbounds %"struct.spirv_cross::SPIRAccessChain"*, %"struct.spirv_cross::SPIRAccessChain"** %67, i64 2
  %71 = bitcast %"struct.spirv_cross::SPIRAccessChain"** %70 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 8, !alias.scope !109
  %73 = bitcast %"struct.spirv_cross::SPIRAccessChain"** %66 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %73, align 8, !alias.scope !112, !noalias !109
  %74 = getelementptr inbounds %"struct.spirv_cross::SPIRAccessChain"*, %"struct.spirv_cross::SPIRAccessChain"** %66, i64 2
  %75 = bitcast %"struct.spirv_cross::SPIRAccessChain"** %74 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %75, align 8, !alias.scope !112, !noalias !109
  %76 = or i64 %53, 8
  %77 = getelementptr inbounds %"struct.spirv_cross::SPIRAccessChain"*, %"struct.spirv_cross::SPIRAccessChain"** %21, i64 %76
  %78 = getelementptr inbounds %"struct.spirv_cross::SPIRAccessChain"*, %"struct.spirv_cross::SPIRAccessChain"** %26, i64 %76
  %79 = bitcast %"struct.spirv_cross::SPIRAccessChain"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !109
  %81 = getelementptr inbounds %"struct.spirv_cross::SPIRAccessChain"*, %"struct.spirv_cross::SPIRAccessChain"** %78, i64 2
  %82 = bitcast %"struct.spirv_cross::SPIRAccessChain"** %81 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 8, !alias.scope !109
  %84 = bitcast %"struct.spirv_cross::SPIRAccessChain"** %77 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %84, align 8, !alias.scope !112, !noalias !109
  %85 = getelementptr inbounds %"struct.spirv_cross::SPIRAccessChain"*, %"struct.spirv_cross::SPIRAccessChain"** %77, i64 2
  %86 = bitcast %"struct.spirv_cross::SPIRAccessChain"** %85 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %86, align 8, !alias.scope !112, !noalias !109
  %87 = or i64 %53, 12
  %88 = getelementptr inbounds %"struct.spirv_cross::SPIRAccessChain"*, %"struct.spirv_cross::SPIRAccessChain"** %21, i64 %87
  %89 = getelementptr inbounds %"struct.spirv_cross::SPIRAccessChain"*, %"struct.spirv_cross::SPIRAccessChain"** %26, i64 %87
  %90 = bitcast %"struct.spirv_cross::SPIRAccessChain"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !109
  %92 = getelementptr inbounds %"struct.spirv_cross::SPIRAccessChain"*, %"struct.spirv_cross::SPIRAccessChain"** %89, i64 2
  %93 = bitcast %"struct.spirv_cross::SPIRAccessChain"** %92 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 8, !alias.scope !109
  %95 = bitcast %"struct.spirv_cross::SPIRAccessChain"** %88 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %95, align 8, !alias.scope !112, !noalias !109
  %96 = getelementptr inbounds %"struct.spirv_cross::SPIRAccessChain"*, %"struct.spirv_cross::SPIRAccessChain"** %88, i64 2
  %97 = bitcast %"struct.spirv_cross::SPIRAccessChain"** %96 to <2 x i64>*
  store <2 x i64> %94, <2 x i64>* %97, align 8, !alias.scope !112, !noalias !109
  %98 = add i64 %53, 16
  %99 = add i64 %54, -4
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %52, !llvm.loop !114

101:                                              ; preds = %52, %43
  %102 = phi i64 [ 0, %43 ], [ %98, %52 ]
  %103 = icmp eq i64 %48, 0
  br i1 %103, label %120, label %104

104:                                              ; preds = %101, %104
  %105 = phi i64 [ %117, %104 ], [ %102, %101 ]
  %106 = phi i64 [ %118, %104 ], [ %48, %101 ]
  %107 = getelementptr inbounds %"struct.spirv_cross::SPIRAccessChain"*, %"struct.spirv_cross::SPIRAccessChain"** %21, i64 %105
  %108 = getelementptr inbounds %"struct.spirv_cross::SPIRAccessChain"*, %"struct.spirv_cross::SPIRAccessChain"** %26, i64 %105
  %109 = bitcast %"struct.spirv_cross::SPIRAccessChain"** %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !109
  %111 = getelementptr inbounds %"struct.spirv_cross::SPIRAccessChain"*, %"struct.spirv_cross::SPIRAccessChain"** %108, i64 2
  %112 = bitcast %"struct.spirv_cross::SPIRAccessChain"** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !109
  %114 = bitcast %"struct.spirv_cross::SPIRAccessChain"** %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !112, !noalias !109
  %115 = getelementptr inbounds %"struct.spirv_cross::SPIRAccessChain"*, %"struct.spirv_cross::SPIRAccessChain"** %107, i64 2
  %116 = bitcast %"struct.spirv_cross::SPIRAccessChain"** %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !112, !noalias !109
  %117 = add i64 %105, 4
  %118 = add i64 %106, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %104, !llvm.loop !115

120:                                              ; preds = %104, %101
  %121 = icmp eq i64 %31, %44
  br i1 %121, label %133, label %122

122:                                              ; preds = %120, %35, %33
  %123 = phi i64 [ 0, %35 ], [ 0, %33 ], [ %44, %120 ]
  br label %124

124:                                              ; preds = %122, %124
  %125 = phi i64 [ %131, %124 ], [ %123, %122 ]
  %126 = getelementptr inbounds %"struct.spirv_cross::SPIRAccessChain"*, %"struct.spirv_cross::SPIRAccessChain"** %21, i64 %125
  %127 = getelementptr inbounds %"struct.spirv_cross::SPIRAccessChain"*, %"struct.spirv_cross::SPIRAccessChain"** %26, i64 %125
  %128 = bitcast %"struct.spirv_cross::SPIRAccessChain"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.spirv_cross::SPIRAccessChain"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = add nuw i64 %125, 1
  %132 = icmp ult i64 %131, %31
  br i1 %132, label %124, label %133, !llvm.loop !116

133:                                              ; preds = %124, %120, %29, %24
  %134 = phi %"struct.spirv_cross::SPIRAccessChain"** [ %21, %24 ], [ %26, %29 ], [ %26, %120 ], [ %26, %124 ]
  %135 = icmp eq %"struct.spirv_cross::SPIRAccessChain"** %134, null
  br i1 %135, label %137, label %136

136:                                              ; preds = %133
  tail call void @free(i8* %27) #17
  br label %137

137:                                              ; preds = %133, %136
  %138 = bitcast %"class.spirv_cross::SmallVector.323"* %0 to i8**
  store i8* %20, i8** %138, align 8
  store i64 %13, i64* %6, align 8
  br label %139

139:                                              ; preds = %137, %5
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_9SPIRUndefEED2Ev(%"class.spirv_cross::ObjectPool.335"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ObjectPool.335", %"class.spirv_cross::ObjectPool.335"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_9SPIRUndefEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool.335", %"class.spirv_cross::ObjectPool.335"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool.335", %"class.spirv_cross::ObjectPool.335"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.340", %"class.spirv_cross::SmallVector.340"* %3, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ 0, %7 ], [ %18, %17 ]
  %11 = load %"class.std::__1::unique_ptr.342"*, %"class.std::__1::unique_ptr.342"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.342", %"class.std::__1::unique_ptr.342"* %11, i64 %10, i32 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRUndef"*, %"struct.spirv_cross::SPIRUndef"** %12, align 8
  store %"struct.spirv_cross::SPIRUndef"* null, %"struct.spirv_cross::SPIRUndef"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::SPIRUndef"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = bitcast %"struct.spirv_cross::SPIRUndef"* %13 to i8*
  tail call void @free(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %9
  %18 = add nuw i64 %10, 1
  %19 = load i64, i64* %4, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %9, label %21

21:                                               ; preds = %17, %1
  store i64 0, i64* %4, align 8
  %22 = getelementptr inbounds %"class.spirv_cross::SmallVector.340", %"class.spirv_cross::SmallVector.340"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.342"*, %"class.std::__1::unique_ptr.342"** %22, align 8
  %24 = getelementptr inbounds %"class.spirv_cross::ObjectPool.335", %"class.spirv_cross::ObjectPool.335"* %0, i64 0, i32 2, i32 2
  %25 = bitcast %"class.spirv_cross::AlignedBuffer.346"* %24 to %"class.std::__1::unique_ptr.342"*
  %26 = icmp eq %"class.std::__1::unique_ptr.342"* %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::unique_ptr.342"* %23 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %21, %27
  %30 = getelementptr inbounds %"class.spirv_cross::ObjectPool.335", %"class.spirv_cross::ObjectPool.335"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spirv_cross::ObjectPool.335", %"class.spirv_cross::ObjectPool.335"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.spirv_cross::SPIRUndef"**, %"struct.spirv_cross::SPIRUndef"*** %31, align 8
  %33 = icmp eq %"struct.spirv_cross::SPIRUndef"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.spirv_cross::SPIRUndef"** %32 to i8*
  tail call void @free(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %34
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_9SPIRUndefEED0Ev(%"class.spirv_cross::ObjectPool.335"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ObjectPool.335", %"class.spirv_cross::ObjectPool.335"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_9SPIRUndefEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool.335", %"class.spirv_cross::ObjectPool.335"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool.335", %"class.spirv_cross::ObjectPool.335"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.340", %"class.spirv_cross::SmallVector.340"* %3, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ 0, %7 ], [ %18, %17 ]
  %11 = load %"class.std::__1::unique_ptr.342"*, %"class.std::__1::unique_ptr.342"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.342", %"class.std::__1::unique_ptr.342"* %11, i64 %10, i32 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRUndef"*, %"struct.spirv_cross::SPIRUndef"** %12, align 8
  store %"struct.spirv_cross::SPIRUndef"* null, %"struct.spirv_cross::SPIRUndef"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::SPIRUndef"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = bitcast %"struct.spirv_cross::SPIRUndef"* %13 to i8*
  tail call void @free(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %9
  %18 = add nuw i64 %10, 1
  %19 = load i64, i64* %4, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %9, label %21

21:                                               ; preds = %17, %1
  store i64 0, i64* %4, align 8
  %22 = getelementptr inbounds %"class.spirv_cross::SmallVector.340", %"class.spirv_cross::SmallVector.340"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.342"*, %"class.std::__1::unique_ptr.342"** %22, align 8
  %24 = getelementptr inbounds %"class.spirv_cross::ObjectPool.335", %"class.spirv_cross::ObjectPool.335"* %0, i64 0, i32 2, i32 2
  %25 = bitcast %"class.spirv_cross::AlignedBuffer.346"* %24 to %"class.std::__1::unique_ptr.342"*
  %26 = icmp eq %"class.std::__1::unique_ptr.342"* %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::unique_ptr.342"* %23 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %27, %21
  %30 = getelementptr inbounds %"class.spirv_cross::ObjectPool.335", %"class.spirv_cross::ObjectPool.335"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spirv_cross::ObjectPool.335", %"class.spirv_cross::ObjectPool.335"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.spirv_cross::SPIRUndef"**, %"struct.spirv_cross::SPIRUndef"*** %31, align 8
  %33 = icmp eq %"struct.spirv_cross::SPIRUndef"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.spirv_cross::SPIRUndef"** %32 to i8*
  tail call void @free(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %34
  %37 = bitcast %"class.spirv_cross::ObjectPool.335"* %0 to i8*
  tail call void @_ZdlPv(i8* %37) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_9SPIRUndefEE11free_opaqueEPv(%"class.spirv_cross::ObjectPool.335"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.spirv_cross::SPIRUndef"*
  %4 = ptrtoint i8* %1 to i64
  %5 = bitcast i8* %1 to void (%"struct.spirv_cross::SPIRUndef"*)***
  %6 = load void (%"struct.spirv_cross::SPIRUndef"*)**, void (%"struct.spirv_cross::SPIRUndef"*)*** %5, align 8
  %7 = load void (%"struct.spirv_cross::SPIRUndef"*)*, void (%"struct.spirv_cross::SPIRUndef"*)** %6, align 8
  tail call void %7(%"struct.spirv_cross::SPIRUndef"* %3) #17
  %8 = getelementptr inbounds %"class.spirv_cross::ObjectPool.335", %"class.spirv_cross::ObjectPool.335"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.spirv_cross::ObjectPool.335", %"class.spirv_cross::ObjectPool.335"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 1
  tail call void @_ZN11spirv_cross11SmallVectorIPNS_9SPIRUndefELm0EE7reserveEm(%"class.spirv_cross::SmallVector.336"* %8, i64 %11) #17
  %12 = getelementptr inbounds %"class.spirv_cross::SmallVector.336", %"class.spirv_cross::SmallVector.336"* %8, i64 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRUndef"**, %"struct.spirv_cross::SPIRUndef"*** %12, align 8
  %14 = load i64, i64* %9, align 8
  %15 = getelementptr inbounds %"struct.spirv_cross::SPIRUndef"*, %"struct.spirv_cross::SPIRUndef"** %13, i64 %14
  %16 = bitcast %"struct.spirv_cross::SPIRUndef"** %15 to i64*
  store i64 %4, i64* %16, align 8
  %17 = load i64, i64* %9, align 8
  %18 = add i64 %17, 1
  store i64 %18, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross11SmallVectorIPNS_9SPIRUndefELm0EE7reserveEm(%"class.spirv_cross::SmallVector.336"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 2305843009213693951
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @_ZSt9terminatev() #19
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.spirv_cross::SmallVector.336", %"class.spirv_cross::SmallVector.336"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %139

9:                                                ; preds = %5
  %10 = icmp eq i64 %7, 0
  %11 = select i1 %10, i64 1, i64 %7
  br label %12

12:                                               ; preds = %12, %9
  %13 = phi i64 [ %11, %9 ], [ %15, %12 ]
  %14 = icmp ult i64 %13, %1
  %15 = shl i64 %13, 1
  br i1 %14, label %12, label %16

16:                                               ; preds = %12
  %17 = icmp eq i64 %13, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = shl i64 %13, 3
  %20 = tail call noalias i8* @malloc(i64 %19) #17
  %21 = bitcast i8* %20 to %"struct.spirv_cross::SPIRUndef"**
  %22 = icmp eq i8* %20, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %16, %18
  tail call void @_ZSt9terminatev() #19
  unreachable

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.spirv_cross::SmallVector.336", %"class.spirv_cross::SmallVector.336"* %0, i64 0, i32 0, i32 0
  %26 = load %"struct.spirv_cross::SPIRUndef"**, %"struct.spirv_cross::SPIRUndef"*** %25, align 8
  %27 = bitcast %"struct.spirv_cross::SPIRUndef"** %26 to i8*
  %28 = icmp eq %"struct.spirv_cross::SPIRUndef"** %26, %21
  br i1 %28, label %133, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.spirv_cross::SmallVector.336", %"class.spirv_cross::SmallVector.336"* %0, i64 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %133, label %33

33:                                               ; preds = %29
  %34 = icmp ult i64 %31, 4
  br i1 %34, label %122, label %35

35:                                               ; preds = %33
  %36 = shl i64 %31, 3
  %37 = getelementptr i8, i8* %20, i64 %36
  %38 = getelementptr %"struct.spirv_cross::SPIRUndef"*, %"struct.spirv_cross::SPIRUndef"** %26, i64 %31
  %39 = bitcast %"struct.spirv_cross::SPIRUndef"** %38 to i8*
  %40 = icmp ult i8* %20, %39
  %41 = icmp ugt i8* %37, %27
  %42 = and i1 %40, %41
  br i1 %42, label %122, label %43

43:                                               ; preds = %35
  %44 = and i64 %31, -4
  %45 = add i64 %44, -4
  %46 = lshr exact i64 %45, 2
  %47 = add nuw nsw i64 %46, 1
  %48 = and i64 %47, 3
  %49 = icmp ult i64 %45, 12
  br i1 %49, label %101, label %50

50:                                               ; preds = %43
  %51 = sub nsw i64 %47, %48
  br label %52

52:                                               ; preds = %52, %50
  %53 = phi i64 [ 0, %50 ], [ %98, %52 ]
  %54 = phi i64 [ %51, %50 ], [ %99, %52 ]
  %55 = getelementptr inbounds %"struct.spirv_cross::SPIRUndef"*, %"struct.spirv_cross::SPIRUndef"** %21, i64 %53
  %56 = getelementptr inbounds %"struct.spirv_cross::SPIRUndef"*, %"struct.spirv_cross::SPIRUndef"** %26, i64 %53
  %57 = bitcast %"struct.spirv_cross::SPIRUndef"** %56 to <2 x i64>*
  %58 = load <2 x i64>, <2 x i64>* %57, align 8, !alias.scope !117
  %59 = getelementptr inbounds %"struct.spirv_cross::SPIRUndef"*, %"struct.spirv_cross::SPIRUndef"** %56, i64 2
  %60 = bitcast %"struct.spirv_cross::SPIRUndef"** %59 to <2 x i64>*
  %61 = load <2 x i64>, <2 x i64>* %60, align 8, !alias.scope !117
  %62 = bitcast %"struct.spirv_cross::SPIRUndef"** %55 to <2 x i64>*
  store <2 x i64> %58, <2 x i64>* %62, align 8, !alias.scope !120, !noalias !117
  %63 = getelementptr inbounds %"struct.spirv_cross::SPIRUndef"*, %"struct.spirv_cross::SPIRUndef"** %55, i64 2
  %64 = bitcast %"struct.spirv_cross::SPIRUndef"** %63 to <2 x i64>*
  store <2 x i64> %61, <2 x i64>* %64, align 8, !alias.scope !120, !noalias !117
  %65 = or i64 %53, 4
  %66 = getelementptr inbounds %"struct.spirv_cross::SPIRUndef"*, %"struct.spirv_cross::SPIRUndef"** %21, i64 %65
  %67 = getelementptr inbounds %"struct.spirv_cross::SPIRUndef"*, %"struct.spirv_cross::SPIRUndef"** %26, i64 %65
  %68 = bitcast %"struct.spirv_cross::SPIRUndef"** %67 to <2 x i64>*
  %69 = load <2 x i64>, <2 x i64>* %68, align 8, !alias.scope !117
  %70 = getelementptr inbounds %"struct.spirv_cross::SPIRUndef"*, %"struct.spirv_cross::SPIRUndef"** %67, i64 2
  %71 = bitcast %"struct.spirv_cross::SPIRUndef"** %70 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 8, !alias.scope !117
  %73 = bitcast %"struct.spirv_cross::SPIRUndef"** %66 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %73, align 8, !alias.scope !120, !noalias !117
  %74 = getelementptr inbounds %"struct.spirv_cross::SPIRUndef"*, %"struct.spirv_cross::SPIRUndef"** %66, i64 2
  %75 = bitcast %"struct.spirv_cross::SPIRUndef"** %74 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %75, align 8, !alias.scope !120, !noalias !117
  %76 = or i64 %53, 8
  %77 = getelementptr inbounds %"struct.spirv_cross::SPIRUndef"*, %"struct.spirv_cross::SPIRUndef"** %21, i64 %76
  %78 = getelementptr inbounds %"struct.spirv_cross::SPIRUndef"*, %"struct.spirv_cross::SPIRUndef"** %26, i64 %76
  %79 = bitcast %"struct.spirv_cross::SPIRUndef"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !117
  %81 = getelementptr inbounds %"struct.spirv_cross::SPIRUndef"*, %"struct.spirv_cross::SPIRUndef"** %78, i64 2
  %82 = bitcast %"struct.spirv_cross::SPIRUndef"** %81 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 8, !alias.scope !117
  %84 = bitcast %"struct.spirv_cross::SPIRUndef"** %77 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %84, align 8, !alias.scope !120, !noalias !117
  %85 = getelementptr inbounds %"struct.spirv_cross::SPIRUndef"*, %"struct.spirv_cross::SPIRUndef"** %77, i64 2
  %86 = bitcast %"struct.spirv_cross::SPIRUndef"** %85 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %86, align 8, !alias.scope !120, !noalias !117
  %87 = or i64 %53, 12
  %88 = getelementptr inbounds %"struct.spirv_cross::SPIRUndef"*, %"struct.spirv_cross::SPIRUndef"** %21, i64 %87
  %89 = getelementptr inbounds %"struct.spirv_cross::SPIRUndef"*, %"struct.spirv_cross::SPIRUndef"** %26, i64 %87
  %90 = bitcast %"struct.spirv_cross::SPIRUndef"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !117
  %92 = getelementptr inbounds %"struct.spirv_cross::SPIRUndef"*, %"struct.spirv_cross::SPIRUndef"** %89, i64 2
  %93 = bitcast %"struct.spirv_cross::SPIRUndef"** %92 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 8, !alias.scope !117
  %95 = bitcast %"struct.spirv_cross::SPIRUndef"** %88 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %95, align 8, !alias.scope !120, !noalias !117
  %96 = getelementptr inbounds %"struct.spirv_cross::SPIRUndef"*, %"struct.spirv_cross::SPIRUndef"** %88, i64 2
  %97 = bitcast %"struct.spirv_cross::SPIRUndef"** %96 to <2 x i64>*
  store <2 x i64> %94, <2 x i64>* %97, align 8, !alias.scope !120, !noalias !117
  %98 = add i64 %53, 16
  %99 = add i64 %54, -4
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %52, !llvm.loop !122

101:                                              ; preds = %52, %43
  %102 = phi i64 [ 0, %43 ], [ %98, %52 ]
  %103 = icmp eq i64 %48, 0
  br i1 %103, label %120, label %104

104:                                              ; preds = %101, %104
  %105 = phi i64 [ %117, %104 ], [ %102, %101 ]
  %106 = phi i64 [ %118, %104 ], [ %48, %101 ]
  %107 = getelementptr inbounds %"struct.spirv_cross::SPIRUndef"*, %"struct.spirv_cross::SPIRUndef"** %21, i64 %105
  %108 = getelementptr inbounds %"struct.spirv_cross::SPIRUndef"*, %"struct.spirv_cross::SPIRUndef"** %26, i64 %105
  %109 = bitcast %"struct.spirv_cross::SPIRUndef"** %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !117
  %111 = getelementptr inbounds %"struct.spirv_cross::SPIRUndef"*, %"struct.spirv_cross::SPIRUndef"** %108, i64 2
  %112 = bitcast %"struct.spirv_cross::SPIRUndef"** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !117
  %114 = bitcast %"struct.spirv_cross::SPIRUndef"** %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !120, !noalias !117
  %115 = getelementptr inbounds %"struct.spirv_cross::SPIRUndef"*, %"struct.spirv_cross::SPIRUndef"** %107, i64 2
  %116 = bitcast %"struct.spirv_cross::SPIRUndef"** %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !120, !noalias !117
  %117 = add i64 %105, 4
  %118 = add i64 %106, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %104, !llvm.loop !123

120:                                              ; preds = %104, %101
  %121 = icmp eq i64 %31, %44
  br i1 %121, label %133, label %122

122:                                              ; preds = %120, %35, %33
  %123 = phi i64 [ 0, %35 ], [ 0, %33 ], [ %44, %120 ]
  br label %124

124:                                              ; preds = %122, %124
  %125 = phi i64 [ %131, %124 ], [ %123, %122 ]
  %126 = getelementptr inbounds %"struct.spirv_cross::SPIRUndef"*, %"struct.spirv_cross::SPIRUndef"** %21, i64 %125
  %127 = getelementptr inbounds %"struct.spirv_cross::SPIRUndef"*, %"struct.spirv_cross::SPIRUndef"** %26, i64 %125
  %128 = bitcast %"struct.spirv_cross::SPIRUndef"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.spirv_cross::SPIRUndef"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = add nuw i64 %125, 1
  %132 = icmp ult i64 %131, %31
  br i1 %132, label %124, label %133, !llvm.loop !124

133:                                              ; preds = %124, %120, %29, %24
  %134 = phi %"struct.spirv_cross::SPIRUndef"** [ %21, %24 ], [ %26, %29 ], [ %26, %120 ], [ %26, %124 ]
  %135 = icmp eq %"struct.spirv_cross::SPIRUndef"** %134, null
  br i1 %135, label %137, label %136

136:                                              ; preds = %133
  tail call void @free(i8* %27) #17
  br label %137

137:                                              ; preds = %133, %136
  %138 = bitcast %"class.spirv_cross::SmallVector.336"* %0 to i8**
  store i8* %20, i8** %138, align 8
  store i64 %13, i64* %6, align 8
  br label %139

139:                                              ; preds = %137, %5
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_10SPIRStringEED2Ev(%"class.spirv_cross::ObjectPool.348"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ObjectPool.348", %"class.spirv_cross::ObjectPool.348"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_10SPIRStringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool.348", %"class.spirv_cross::ObjectPool.348"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool.348", %"class.spirv_cross::ObjectPool.348"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.353", %"class.spirv_cross::SmallVector.353"* %3, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ 0, %7 ], [ %18, %17 ]
  %11 = load %"class.std::__1::unique_ptr.355"*, %"class.std::__1::unique_ptr.355"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.355", %"class.std::__1::unique_ptr.355"* %11, i64 %10, i32 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRString"*, %"struct.spirv_cross::SPIRString"** %12, align 8
  store %"struct.spirv_cross::SPIRString"* null, %"struct.spirv_cross::SPIRString"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::SPIRString"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = bitcast %"struct.spirv_cross::SPIRString"* %13 to i8*
  tail call void @free(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %9
  %18 = add nuw i64 %10, 1
  %19 = load i64, i64* %4, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %9, label %21

21:                                               ; preds = %17, %1
  store i64 0, i64* %4, align 8
  %22 = getelementptr inbounds %"class.spirv_cross::SmallVector.353", %"class.spirv_cross::SmallVector.353"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.355"*, %"class.std::__1::unique_ptr.355"** %22, align 8
  %24 = getelementptr inbounds %"class.spirv_cross::ObjectPool.348", %"class.spirv_cross::ObjectPool.348"* %0, i64 0, i32 2, i32 2
  %25 = bitcast %"class.spirv_cross::AlignedBuffer.359"* %24 to %"class.std::__1::unique_ptr.355"*
  %26 = icmp eq %"class.std::__1::unique_ptr.355"* %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::unique_ptr.355"* %23 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %21, %27
  %30 = getelementptr inbounds %"class.spirv_cross::ObjectPool.348", %"class.spirv_cross::ObjectPool.348"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spirv_cross::ObjectPool.348", %"class.spirv_cross::ObjectPool.348"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.spirv_cross::SPIRString"**, %"struct.spirv_cross::SPIRString"*** %31, align 8
  %33 = icmp eq %"struct.spirv_cross::SPIRString"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.spirv_cross::SPIRString"** %32 to i8*
  tail call void @free(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %34
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_10SPIRStringEED0Ev(%"class.spirv_cross::ObjectPool.348"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ObjectPool.348", %"class.spirv_cross::ObjectPool.348"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross10ObjectPoolINS_10SPIRStringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool.348", %"class.spirv_cross::ObjectPool.348"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool.348", %"class.spirv_cross::ObjectPool.348"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.353", %"class.spirv_cross::SmallVector.353"* %3, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ 0, %7 ], [ %18, %17 ]
  %11 = load %"class.std::__1::unique_ptr.355"*, %"class.std::__1::unique_ptr.355"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.355", %"class.std::__1::unique_ptr.355"* %11, i64 %10, i32 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRString"*, %"struct.spirv_cross::SPIRString"** %12, align 8
  store %"struct.spirv_cross::SPIRString"* null, %"struct.spirv_cross::SPIRString"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::SPIRString"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = bitcast %"struct.spirv_cross::SPIRString"* %13 to i8*
  tail call void @free(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %9
  %18 = add nuw i64 %10, 1
  %19 = load i64, i64* %4, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %9, label %21

21:                                               ; preds = %17, %1
  store i64 0, i64* %4, align 8
  %22 = getelementptr inbounds %"class.spirv_cross::SmallVector.353", %"class.spirv_cross::SmallVector.353"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.355"*, %"class.std::__1::unique_ptr.355"** %22, align 8
  %24 = getelementptr inbounds %"class.spirv_cross::ObjectPool.348", %"class.spirv_cross::ObjectPool.348"* %0, i64 0, i32 2, i32 2
  %25 = bitcast %"class.spirv_cross::AlignedBuffer.359"* %24 to %"class.std::__1::unique_ptr.355"*
  %26 = icmp eq %"class.std::__1::unique_ptr.355"* %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::unique_ptr.355"* %23 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %27, %21
  %30 = getelementptr inbounds %"class.spirv_cross::ObjectPool.348", %"class.spirv_cross::ObjectPool.348"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spirv_cross::ObjectPool.348", %"class.spirv_cross::ObjectPool.348"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.spirv_cross::SPIRString"**, %"struct.spirv_cross::SPIRString"*** %31, align 8
  %33 = icmp eq %"struct.spirv_cross::SPIRString"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.spirv_cross::SPIRString"** %32 to i8*
  tail call void @free(i8* %35) #17
  br label %36

36:                                               ; preds = %29, %34
  %37 = bitcast %"class.spirv_cross::ObjectPool.348"* %0 to i8*
  tail call void @_ZdlPv(i8* %37) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross10ObjectPoolINS_10SPIRStringEE11free_opaqueEPv(%"class.spirv_cross::ObjectPool.348"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.spirv_cross::SPIRString"*
  %4 = ptrtoint i8* %1 to i64
  %5 = bitcast i8* %1 to void (%"struct.spirv_cross::SPIRString"*)***
  %6 = load void (%"struct.spirv_cross::SPIRString"*)**, void (%"struct.spirv_cross::SPIRString"*)*** %5, align 8
  %7 = load void (%"struct.spirv_cross::SPIRString"*)*, void (%"struct.spirv_cross::SPIRString"*)** %6, align 8
  tail call void %7(%"struct.spirv_cross::SPIRString"* %3) #17
  %8 = getelementptr inbounds %"class.spirv_cross::ObjectPool.348", %"class.spirv_cross::ObjectPool.348"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.spirv_cross::ObjectPool.348", %"class.spirv_cross::ObjectPool.348"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 1
  tail call void @_ZN11spirv_cross11SmallVectorIPNS_10SPIRStringELm0EE7reserveEm(%"class.spirv_cross::SmallVector.349"* %8, i64 %11) #17
  %12 = getelementptr inbounds %"class.spirv_cross::SmallVector.349", %"class.spirv_cross::SmallVector.349"* %8, i64 0, i32 0, i32 0
  %13 = load %"struct.spirv_cross::SPIRString"**, %"struct.spirv_cross::SPIRString"*** %12, align 8
  %14 = load i64, i64* %9, align 8
  %15 = getelementptr inbounds %"struct.spirv_cross::SPIRString"*, %"struct.spirv_cross::SPIRString"** %13, i64 %14
  %16 = bitcast %"struct.spirv_cross::SPIRString"** %15 to i64*
  store i64 %4, i64* %16, align 8
  %17 = load i64, i64* %9, align 8
  %18 = add i64 %17, 1
  store i64 %18, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross11SmallVectorIPNS_10SPIRStringELm0EE7reserveEm(%"class.spirv_cross::SmallVector.349"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 2305843009213693951
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @_ZSt9terminatev() #19
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.spirv_cross::SmallVector.349", %"class.spirv_cross::SmallVector.349"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %139

9:                                                ; preds = %5
  %10 = icmp eq i64 %7, 0
  %11 = select i1 %10, i64 1, i64 %7
  br label %12

12:                                               ; preds = %12, %9
  %13 = phi i64 [ %11, %9 ], [ %15, %12 ]
  %14 = icmp ult i64 %13, %1
  %15 = shl i64 %13, 1
  br i1 %14, label %12, label %16

16:                                               ; preds = %12
  %17 = icmp eq i64 %13, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = shl i64 %13, 3
  %20 = tail call noalias i8* @malloc(i64 %19) #17
  %21 = bitcast i8* %20 to %"struct.spirv_cross::SPIRString"**
  %22 = icmp eq i8* %20, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %16, %18
  tail call void @_ZSt9terminatev() #19
  unreachable

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.spirv_cross::SmallVector.349", %"class.spirv_cross::SmallVector.349"* %0, i64 0, i32 0, i32 0
  %26 = load %"struct.spirv_cross::SPIRString"**, %"struct.spirv_cross::SPIRString"*** %25, align 8
  %27 = bitcast %"struct.spirv_cross::SPIRString"** %26 to i8*
  %28 = icmp eq %"struct.spirv_cross::SPIRString"** %26, %21
  br i1 %28, label %133, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.spirv_cross::SmallVector.349", %"class.spirv_cross::SmallVector.349"* %0, i64 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %133, label %33

33:                                               ; preds = %29
  %34 = icmp ult i64 %31, 4
  br i1 %34, label %122, label %35

35:                                               ; preds = %33
  %36 = shl i64 %31, 3
  %37 = getelementptr i8, i8* %20, i64 %36
  %38 = getelementptr %"struct.spirv_cross::SPIRString"*, %"struct.spirv_cross::SPIRString"** %26, i64 %31
  %39 = bitcast %"struct.spirv_cross::SPIRString"** %38 to i8*
  %40 = icmp ult i8* %20, %39
  %41 = icmp ugt i8* %37, %27
  %42 = and i1 %40, %41
  br i1 %42, label %122, label %43

43:                                               ; preds = %35
  %44 = and i64 %31, -4
  %45 = add i64 %44, -4
  %46 = lshr exact i64 %45, 2
  %47 = add nuw nsw i64 %46, 1
  %48 = and i64 %47, 3
  %49 = icmp ult i64 %45, 12
  br i1 %49, label %101, label %50

50:                                               ; preds = %43
  %51 = sub nsw i64 %47, %48
  br label %52

52:                                               ; preds = %52, %50
  %53 = phi i64 [ 0, %50 ], [ %98, %52 ]
  %54 = phi i64 [ %51, %50 ], [ %99, %52 ]
  %55 = getelementptr inbounds %"struct.spirv_cross::SPIRString"*, %"struct.spirv_cross::SPIRString"** %21, i64 %53
  %56 = getelementptr inbounds %"struct.spirv_cross::SPIRString"*, %"struct.spirv_cross::SPIRString"** %26, i64 %53
  %57 = bitcast %"struct.spirv_cross::SPIRString"** %56 to <2 x i64>*
  %58 = load <2 x i64>, <2 x i64>* %57, align 8, !alias.scope !125
  %59 = getelementptr inbounds %"struct.spirv_cross::SPIRString"*, %"struct.spirv_cross::SPIRString"** %56, i64 2
  %60 = bitcast %"struct.spirv_cross::SPIRString"** %59 to <2 x i64>*
  %61 = load <2 x i64>, <2 x i64>* %60, align 8, !alias.scope !125
  %62 = bitcast %"struct.spirv_cross::SPIRString"** %55 to <2 x i64>*
  store <2 x i64> %58, <2 x i64>* %62, align 8, !alias.scope !128, !noalias !125
  %63 = getelementptr inbounds %"struct.spirv_cross::SPIRString"*, %"struct.spirv_cross::SPIRString"** %55, i64 2
  %64 = bitcast %"struct.spirv_cross::SPIRString"** %63 to <2 x i64>*
  store <2 x i64> %61, <2 x i64>* %64, align 8, !alias.scope !128, !noalias !125
  %65 = or i64 %53, 4
  %66 = getelementptr inbounds %"struct.spirv_cross::SPIRString"*, %"struct.spirv_cross::SPIRString"** %21, i64 %65
  %67 = getelementptr inbounds %"struct.spirv_cross::SPIRString"*, %"struct.spirv_cross::SPIRString"** %26, i64 %65
  %68 = bitcast %"struct.spirv_cross::SPIRString"** %67 to <2 x i64>*
  %69 = load <2 x i64>, <2 x i64>* %68, align 8, !alias.scope !125
  %70 = getelementptr inbounds %"struct.spirv_cross::SPIRString"*, %"struct.spirv_cross::SPIRString"** %67, i64 2
  %71 = bitcast %"struct.spirv_cross::SPIRString"** %70 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 8, !alias.scope !125
  %73 = bitcast %"struct.spirv_cross::SPIRString"** %66 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %73, align 8, !alias.scope !128, !noalias !125
  %74 = getelementptr inbounds %"struct.spirv_cross::SPIRString"*, %"struct.spirv_cross::SPIRString"** %66, i64 2
  %75 = bitcast %"struct.spirv_cross::SPIRString"** %74 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %75, align 8, !alias.scope !128, !noalias !125
  %76 = or i64 %53, 8
  %77 = getelementptr inbounds %"struct.spirv_cross::SPIRString"*, %"struct.spirv_cross::SPIRString"** %21, i64 %76
  %78 = getelementptr inbounds %"struct.spirv_cross::SPIRString"*, %"struct.spirv_cross::SPIRString"** %26, i64 %76
  %79 = bitcast %"struct.spirv_cross::SPIRString"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !125
  %81 = getelementptr inbounds %"struct.spirv_cross::SPIRString"*, %"struct.spirv_cross::SPIRString"** %78, i64 2
  %82 = bitcast %"struct.spirv_cross::SPIRString"** %81 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 8, !alias.scope !125
  %84 = bitcast %"struct.spirv_cross::SPIRString"** %77 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %84, align 8, !alias.scope !128, !noalias !125
  %85 = getelementptr inbounds %"struct.spirv_cross::SPIRString"*, %"struct.spirv_cross::SPIRString"** %77, i64 2
  %86 = bitcast %"struct.spirv_cross::SPIRString"** %85 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %86, align 8, !alias.scope !128, !noalias !125
  %87 = or i64 %53, 12
  %88 = getelementptr inbounds %"struct.spirv_cross::SPIRString"*, %"struct.spirv_cross::SPIRString"** %21, i64 %87
  %89 = getelementptr inbounds %"struct.spirv_cross::SPIRString"*, %"struct.spirv_cross::SPIRString"** %26, i64 %87
  %90 = bitcast %"struct.spirv_cross::SPIRString"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !125
  %92 = getelementptr inbounds %"struct.spirv_cross::SPIRString"*, %"struct.spirv_cross::SPIRString"** %89, i64 2
  %93 = bitcast %"struct.spirv_cross::SPIRString"** %92 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 8, !alias.scope !125
  %95 = bitcast %"struct.spirv_cross::SPIRString"** %88 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %95, align 8, !alias.scope !128, !noalias !125
  %96 = getelementptr inbounds %"struct.spirv_cross::SPIRString"*, %"struct.spirv_cross::SPIRString"** %88, i64 2
  %97 = bitcast %"struct.spirv_cross::SPIRString"** %96 to <2 x i64>*
  store <2 x i64> %94, <2 x i64>* %97, align 8, !alias.scope !128, !noalias !125
  %98 = add i64 %53, 16
  %99 = add i64 %54, -4
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %52, !llvm.loop !130

101:                                              ; preds = %52, %43
  %102 = phi i64 [ 0, %43 ], [ %98, %52 ]
  %103 = icmp eq i64 %48, 0
  br i1 %103, label %120, label %104

104:                                              ; preds = %101, %104
  %105 = phi i64 [ %117, %104 ], [ %102, %101 ]
  %106 = phi i64 [ %118, %104 ], [ %48, %101 ]
  %107 = getelementptr inbounds %"struct.spirv_cross::SPIRString"*, %"struct.spirv_cross::SPIRString"** %21, i64 %105
  %108 = getelementptr inbounds %"struct.spirv_cross::SPIRString"*, %"struct.spirv_cross::SPIRString"** %26, i64 %105
  %109 = bitcast %"struct.spirv_cross::SPIRString"** %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !125
  %111 = getelementptr inbounds %"struct.spirv_cross::SPIRString"*, %"struct.spirv_cross::SPIRString"** %108, i64 2
  %112 = bitcast %"struct.spirv_cross::SPIRString"** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !125
  %114 = bitcast %"struct.spirv_cross::SPIRString"** %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !128, !noalias !125
  %115 = getelementptr inbounds %"struct.spirv_cross::SPIRString"*, %"struct.spirv_cross::SPIRString"** %107, i64 2
  %116 = bitcast %"struct.spirv_cross::SPIRString"** %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !128, !noalias !125
  %117 = add i64 %105, 4
  %118 = add i64 %106, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %104, !llvm.loop !131

120:                                              ; preds = %104, %101
  %121 = icmp eq i64 %31, %44
  br i1 %121, label %133, label %122

122:                                              ; preds = %120, %35, %33
  %123 = phi i64 [ 0, %35 ], [ 0, %33 ], [ %44, %120 ]
  br label %124

124:                                              ; preds = %122, %124
  %125 = phi i64 [ %131, %124 ], [ %123, %122 ]
  %126 = getelementptr inbounds %"struct.spirv_cross::SPIRString"*, %"struct.spirv_cross::SPIRString"** %21, i64 %125
  %127 = getelementptr inbounds %"struct.spirv_cross::SPIRString"*, %"struct.spirv_cross::SPIRString"** %26, i64 %125
  %128 = bitcast %"struct.spirv_cross::SPIRString"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.spirv_cross::SPIRString"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = add nuw i64 %125, 1
  %132 = icmp ult i64 %131, %31
  br i1 %132, label %124, label %133, !llvm.loop !132

133:                                              ; preds = %124, %120, %29, %24
  %134 = phi %"struct.spirv_cross::SPIRString"** [ %21, %24 ], [ %26, %29 ], [ %26, %120 ], [ %26, %124 ]
  %135 = icmp eq %"struct.spirv_cross::SPIRString"** %134, null
  br i1 %135, label %137, label %136

136:                                              ; preds = %133
  tail call void @free(i8* %27) #17
  br label %137

137:                                              ; preds = %133, %136
  %138 = bitcast %"class.spirv_cross::SmallVector.349"* %0 to i8**
  store i8* %20, i8** %138, align 8
  store i64 %13, i64* %6, align 8
  br label %139

139:                                              ; preds = %137, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE13__move_assignERSI_NS_17integral_constantIbLb1EEE(%"class.std::__1::__hash_table"*, %"class.std::__1::__hash_table"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %60, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.19"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %8, align 8
  %10 = bitcast %"class.std::__1::__compressed_pair.19"* %7 to %"class.std::__1::allocator.22"*
  %11 = icmp eq %"struct.std::__1::__hash_node_base"* %9, null
  br i1 %11, label %20, label %12

12:                                               ; preds = %6, %12
  %13 = phi %"struct.std::__1::__hash_node_base"* [ %15, %12 ], [ %9, %6 ]
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %13, i64 0, i32 0
  %15 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %13, i64 2
  %17 = bitcast %"struct.std::__1::__hash_node_base"* %16 to %"struct.std::__1::pair.392"*
  tail call void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS4_5TypesE0EEENS4_4MetaEEEPvEEEEE7destroyINS_4pairIKS7_S8_EEvvEEvRSC_PT_(%"class.std::__1::allocator.22"* dereferenceable(1) %10, %"struct.std::__1::pair.392"* %17) #17
  %18 = bitcast %"struct.std::__1::__hash_node_base"* %13 to i8*
  tail call void @_ZdlPv(i8* %18) #18
  %19 = icmp eq %"struct.std::__1::__hash_node_base"* %15, null
  br i1 %19, label %20, label %12

20:                                               ; preds = %12, %6
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %8, align 8
  %21 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = add i64 %22, -1
  %27 = and i64 %22, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %22, %27
  br label %43

31:                                               ; preds = %43, %24
  %32 = phi i64 [ 0, %24 ], [ %57, %43 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %25, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !133

42:                                               ; preds = %31, %34, %20
  store i64 0, i64* %3, align 8
  br label %60

43:                                               ; preds = %43, %29
  %44 = phi i64 [ 0, %29 ], [ %57, %43 ]
  %45 = phi i64 [ %30, %29 ], [ %58, %43 ]
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %25, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %44
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %44, 1
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %25, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %44, 2
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %25, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = or i64 %44, 3
  %55 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %25, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %55, i64 %54
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %56, align 8
  %57 = add nuw i64 %44, 4
  %58 = add i64 %45, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %31, label %43

60:                                               ; preds = %2, %42
  %61 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.std::__1::__hash_table"* %1 to i64*
  %63 = load i64, i64* %62, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %61, align 8
  %64 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %64, align 8
  %66 = bitcast %"class.std::__1::__hash_table"* %0 to i64*
  store i64 %63, i64* %66, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base"** %65, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %60
  %69 = bitcast %"struct.std::__1::__hash_node_base"** %65 to i8*
  tail call void @_ZdlPv(i8* %69) #18
  br label %70

70:                                               ; preds = %60, %68
  %71 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %72, i64* %73, align 8
  store i64 0, i64* %71, align 8
  %74 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %3, align 8
  %76 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 3, i32 0, i32 0
  %77 = bitcast float* %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %80 = bitcast float* %79 to i32*
  store i32 %78, i32* %80, align 4
  %81 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1, i32 0, i32 0
  %82 = bitcast %"struct.std::__1::__hash_node_base"* %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %85 = bitcast %"struct.std::__1::__hash_node_base"* %84 to i64*
  store i64 %83, i64* %85, align 8
  %86 = icmp eq i64 %75, 0
  br i1 %86, label %107, label %87

87:                                               ; preds = %70
  %88 = inttoptr i64 %83 to %"struct.std::__1::__hash_node_base"*
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %88, i64 1
  %90 = bitcast %"struct.std::__1::__hash_node_base"* %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = load i64, i64* %73, align 8
  %93 = tail call i64 @llvm.ctpop.i64(i64 %92) #17, !range !5
  %94 = icmp ugt i64 %93, 1
  br i1 %94, label %98, label %95

95:                                               ; preds = %87
  %96 = add i64 %92, -1
  %97 = and i64 %96, %91
  br label %102

98:                                               ; preds = %87
  %99 = icmp ult i64 %91, %92
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = urem i64 %91, %92
  br label %102

102:                                              ; preds = %95, %98, %100
  %103 = phi i64 [ %97, %95 ], [ %101, %100 ], [ %91, %98 ]
  %104 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %64, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %104, i64 %103
  store %"struct.std::__1::__hash_node_base"* %84, %"struct.std::__1::__hash_node_base"** %105, align 8
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %81 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 16, i1 false)
  br label %107

107:                                              ; preds = %70, %102
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS4_5TypesE0EEENS4_4MetaEEEPvEEEEE7destroyINS_4pairIKS7_S8_EEvvEEvRSC_PT_(%"class.std::__1::allocator.22"* dereferenceable(1), %"struct.std::__1::pair.392"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::pair.392", %"struct.std::__1::pair.392"* %1, i64 0, i32 1, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.371"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2, %6
  %7 = phi %"struct.std::__1::__hash_node_base.371"* [ %9, %6 ], [ %4, %2 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371", %"struct.std::__1::__hash_node_base.371"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.371"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #18
  %11 = icmp eq %"struct.std::__1::__hash_node_base.371"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %2
  %13 = getelementptr inbounds %"struct.std::__1::pair.392", %"struct.std::__1::pair.392"* %1, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.371"**, %"struct.std::__1::__hash_node_base.371"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.371"** null, %"struct.std::__1::__hash_node_base.371"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.371"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.371"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #18
  br label %18

18:                                               ; preds = %16, %12
  %19 = getelementptr inbounds %"struct.std::__1::pair.392", %"struct.std::__1::pair.392"* %1, i64 0, i32 1, i32 1
  %20 = getelementptr inbounds %"struct.std::__1::pair.392", %"struct.std::__1::pair.392"* %1, i64 0, i32 1, i32 1, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %32, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.spirv_cross::SmallVector.362", %"class.spirv_cross::SmallVector.362"* %19, i64 0, i32 0, i32 0
  br label %25

25:                                               ; preds = %25, %23
  %26 = phi i64 [ 0, %23 ], [ %29, %25 ]
  %27 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %24, align 8
  %28 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %27, i64 %26
  tail call void @_ZN11spirv_cross4Meta10DecorationD2Ev(%"struct.spirv_cross::Meta::Decoration"* %28) #17
  %29 = add nuw i64 %26, 1
  %30 = load i64, i64* %20, align 8
  %31 = icmp ult i64 %29, %30
  br i1 %31, label %25, label %32

32:                                               ; preds = %25, %18
  store i64 0, i64* %20, align 8
  %33 = getelementptr inbounds %"class.spirv_cross::SmallVector.362", %"class.spirv_cross::SmallVector.362"* %19, i64 0, i32 0, i32 0
  %34 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %33, align 8
  %35 = icmp eq %"struct.spirv_cross::Meta::Decoration"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  %37 = bitcast %"struct.spirv_cross::Meta::Decoration"* %34 to i8*
  tail call void @free(i8* %37) #17
  br label %38

38:                                               ; preds = %32, %36
  %39 = getelementptr inbounds %"struct.std::__1::pair.392", %"struct.std::__1::pair.392"* %1, i64 0, i32 1, i32 0
  tail call void @_ZN11spirv_cross4Meta10DecorationD2Ev(%"struct.spirv_cross::Meta::Decoration"* %39) #17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross4Meta10DecorationD2Ev(%"struct.spirv_cross::Meta::Decoration"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 20, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.105"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.105"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.105"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #18
  %10 = icmp eq %"struct.std::__1::__hash_node_base.105"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 20, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.105"** null, %"struct.std::__1::__hash_node_base.105"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.105"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.105"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #18
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 3, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.105"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17, %21
  %22 = phi %"struct.std::__1::__hash_node_base.105"* [ %24, %21 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %23, align 8
  %25 = bitcast %"struct.std::__1::__hash_node_base.105"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #18
  %26 = icmp eq %"struct.std::__1::__hash_node_base.105"* %24, null
  br i1 %26, label %27, label %21

27:                                               ; preds = %21, %17
  %28 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %28, align 8
  store %"struct.std::__1::__hash_node_base.105"** null, %"struct.std::__1::__hash_node_base.105"*** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.105"** %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"struct.std::__1::__hash_node_base.105"** %29 to i8*
  tail call void @_ZdlPv(i8* %32) #18
  br label %33

33:                                               ; preds = %27, %31
  %34 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 2
  %35 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  tail call void @_ZdlPv(i8* %41) #18
  br label %42

42:                                               ; preds = %33, %39
  %43 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 1
  %44 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  tail call void @_ZdlPv(i8* %50) #18
  br label %51

51:                                               ; preds = %42, %48
  %52 = bitcast %"struct.spirv_cross::Meta::Decoration"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  tail call void @_ZdlPv(i8* %58) #18
  br label %59

59:                                               ; preds = %51, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross11SmallVectorINS_7TypedIDILNS_5TypesE0EEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.29"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 4611686018427387903
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @_ZSt9terminatev() #19
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.29"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %60

9:                                                ; preds = %5
  %10 = icmp eq i64 %7, 0
  %11 = select i1 %10, i64 1, i64 %7
  %12 = icmp ugt i64 %11, 8
  %13 = select i1 %12, i64 %11, i64 8
  br label %14

14:                                               ; preds = %14, %9
  %15 = phi i64 [ %13, %9 ], [ %17, %14 ]
  %16 = icmp ult i64 %15, %1
  %17 = shl i64 %15, 1
  br i1 %16, label %14, label %18

18:                                               ; preds = %14
  %19 = icmp ugt i64 %15, 8
  br i1 %19, label %20, label %24

20:                                               ; preds = %18
  %21 = shl i64 %15, 2
  %22 = tail call noalias i8* @malloc(i64 %21) #17
  %23 = bitcast i8* %22 to %"class.spirv_cross::TypedID"*
  br label %27

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.29"* %0, i64 0, i32 2
  %26 = bitcast %"class.spirv_cross::AlignedBuffer.31"* %25 to %"class.spirv_cross::TypedID"*
  br label %27

27:                                               ; preds = %24, %20
  %28 = phi %"class.spirv_cross::TypedID"* [ %23, %20 ], [ %26, %24 ]
  %29 = icmp eq %"class.spirv_cross::TypedID"* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZSt9terminatev() #19
  unreachable

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.29"* %0, i64 0, i32 0, i32 0
  %33 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %32, align 8
  %34 = icmp eq %"class.spirv_cross::TypedID"* %28, %33
  %35 = bitcast %"class.spirv_cross::TypedID"* %33 to i8*
  br i1 %34, label %52, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.29"* %0, i64 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %36, %40
  %41 = phi %"class.spirv_cross::TypedID"* [ %49, %40 ], [ %33, %36 ]
  %42 = phi i64 [ %46, %40 ], [ 0, %36 ]
  %43 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %41, i64 %42, i32 0
  %44 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %28, i64 %42, i32 0
  %45 = load i32, i32* %43, align 4
  store i32 %45, i32* %44, align 4
  %46 = add nuw i64 %42, 1
  %47 = load i64, i64* %37, align 8
  %48 = icmp ult i64 %46, %47
  %49 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %32, align 8
  br i1 %48, label %40, label %50

50:                                               ; preds = %40
  %51 = bitcast %"class.spirv_cross::TypedID"* %49 to i8*
  br label %52

52:                                               ; preds = %50, %36, %31
  %53 = phi i8* [ %51, %50 ], [ %35, %36 ], [ %35, %31 ]
  %54 = phi %"class.spirv_cross::TypedID"* [ %49, %50 ], [ %33, %36 ], [ %28, %31 ]
  %55 = getelementptr inbounds %"class.spirv_cross::SmallVector.29", %"class.spirv_cross::SmallVector.29"* %0, i64 0, i32 2
  %56 = bitcast %"class.spirv_cross::AlignedBuffer.31"* %55 to %"class.spirv_cross::TypedID"*
  %57 = icmp eq %"class.spirv_cross::TypedID"* %54, %56
  br i1 %57, label %59, label %58

58:                                               ; preds = %52
  tail call void @free(i8* %53) #17
  br label %59

59:                                               ; preds = %52, %58
  store %"class.spirv_cross::TypedID"* %28, %"class.spirv_cross::TypedID"** %32, align 8
  store i64 %15, i64* %6, align 8
  br label %60

60:                                               ; preds = %59, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross11SmallVectorIN3spv10CapabilityELm8EE7reserveEm(%"class.spirv_cross::SmallVector.32"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 4611686018427387903
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @_ZSt9terminatev() #19
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.spirv_cross::SmallVector.32", %"class.spirv_cross::SmallVector.32"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %60

9:                                                ; preds = %5
  %10 = icmp eq i64 %7, 0
  %11 = select i1 %10, i64 1, i64 %7
  %12 = icmp ugt i64 %11, 8
  %13 = select i1 %12, i64 %11, i64 8
  br label %14

14:                                               ; preds = %14, %9
  %15 = phi i64 [ %13, %9 ], [ %17, %14 ]
  %16 = icmp ult i64 %15, %1
  %17 = shl i64 %15, 1
  br i1 %16, label %14, label %18

18:                                               ; preds = %14
  %19 = icmp ugt i64 %15, 8
  br i1 %19, label %20, label %24

20:                                               ; preds = %18
  %21 = shl i64 %15, 2
  %22 = tail call noalias i8* @malloc(i64 %21) #17
  %23 = bitcast i8* %22 to i32*
  br label %27

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.spirv_cross::SmallVector.32", %"class.spirv_cross::SmallVector.32"* %0, i64 0, i32 2
  %26 = bitcast %"class.spirv_cross::AlignedBuffer.34"* %25 to i32*
  br label %27

27:                                               ; preds = %24, %20
  %28 = phi i32* [ %23, %20 ], [ %26, %24 ]
  %29 = icmp eq i32* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZSt9terminatev() #19
  unreachable

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.spirv_cross::SmallVector.32", %"class.spirv_cross::SmallVector.32"* %0, i64 0, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = icmp eq i32* %28, %33
  %35 = bitcast i32* %33 to i8*
  br i1 %34, label %52, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.spirv_cross::SmallVector.32", %"class.spirv_cross::SmallVector.32"* %0, i64 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %36, %40
  %41 = phi i32* [ %49, %40 ], [ %33, %36 ]
  %42 = phi i64 [ %46, %40 ], [ 0, %36 ]
  %43 = getelementptr inbounds i32, i32* %28, i64 %42
  %44 = getelementptr inbounds i32, i32* %41, i64 %42
  %45 = load i32, i32* %44, align 4
  store i32 %45, i32* %43, align 4
  %46 = add nuw i64 %42, 1
  %47 = load i64, i64* %37, align 8
  %48 = icmp ult i64 %46, %47
  %49 = load i32*, i32** %32, align 8
  br i1 %48, label %40, label %50

50:                                               ; preds = %40
  %51 = bitcast i32* %49 to i8*
  br label %52

52:                                               ; preds = %50, %36, %31
  %53 = phi i8* [ %51, %50 ], [ %35, %36 ], [ %35, %31 ]
  %54 = phi i32* [ %49, %50 ], [ %33, %36 ], [ %28, %31 ]
  %55 = getelementptr inbounds %"class.spirv_cross::SmallVector.32", %"class.spirv_cross::SmallVector.32"* %0, i64 0, i32 2
  %56 = bitcast %"class.spirv_cross::AlignedBuffer.34"* %55 to i32*
  %57 = icmp eq i32* %54, %56
  br i1 %57, label %59, label %58

58:                                               ; preds = %52
  tail call void @free(i8* %53) #17
  br label %59

59:                                               ; preds = %52, %58
  store i32* %28, i32** %32, align 8
  store i64 %15, i64* %6, align 8
  br label %60

60:                                               ; preds = %59, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross11SmallVectorINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.35"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 768614336404564650
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @_ZSt9terminatev() #19
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.spirv_cross::SmallVector.35", %"class.spirv_cross::SmallVector.35"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %71

9:                                                ; preds = %5
  %10 = icmp eq i64 %7, 0
  %11 = select i1 %10, i64 1, i64 %7
  %12 = icmp ugt i64 %11, 8
  %13 = select i1 %12, i64 %11, i64 8
  br label %14

14:                                               ; preds = %14, %9
  %15 = phi i64 [ %13, %9 ], [ %17, %14 ]
  %16 = icmp ult i64 %15, %1
  %17 = shl i64 %15, 1
  br i1 %16, label %14, label %18

18:                                               ; preds = %14
  %19 = icmp ugt i64 %15, 8
  br i1 %19, label %20, label %24

20:                                               ; preds = %18
  %21 = mul i64 %15, 24
  %22 = tail call noalias i8* @malloc(i64 %21) #17
  %23 = bitcast i8* %22 to %"class.std::__1::basic_string"*
  br label %27

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.spirv_cross::SmallVector.35", %"class.spirv_cross::SmallVector.35"* %0, i64 0, i32 2
  %26 = bitcast %"class.spirv_cross::AlignedBuffer.42"* %25 to %"class.std::__1::basic_string"*
  br label %27

27:                                               ; preds = %24, %20
  %28 = phi %"class.std::__1::basic_string"* [ %23, %20 ], [ %26, %24 ]
  %29 = icmp eq %"class.std::__1::basic_string"* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZSt9terminatev() #19
  unreachable

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.spirv_cross::SmallVector.35", %"class.spirv_cross::SmallVector.35"* %0, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %32, align 8
  %34 = icmp eq %"class.std::__1::basic_string"* %28, %33
  %35 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  br i1 %34, label %63, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.spirv_cross::SmallVector.35", %"class.spirv_cross::SmallVector.35"* %0, i64 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %63, label %40

40:                                               ; preds = %36, %56
  %41 = phi %"class.std::__1::basic_string"* [ %60, %56 ], [ %33, %36 ]
  %42 = phi i64 [ %57, %56 ], [ 0, %36 ]
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 %42
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 %42
  %45 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  %46 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 24, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #17
  %47 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %32, align 8
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 %42
  %49 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %40
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #18
  br label %56

56:                                               ; preds = %40, %53
  %57 = add nuw i64 %42, 1
  %58 = load i64, i64* %37, align 8
  %59 = icmp ult i64 %57, %58
  %60 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %32, align 8
  br i1 %59, label %40, label %61

61:                                               ; preds = %56
  %62 = bitcast %"class.std::__1::basic_string"* %60 to i8*
  br label %63

63:                                               ; preds = %61, %36, %31
  %64 = phi i8* [ %62, %61 ], [ %35, %36 ], [ %35, %31 ]
  %65 = phi %"class.std::__1::basic_string"* [ %60, %61 ], [ %33, %36 ], [ %28, %31 ]
  %66 = getelementptr inbounds %"class.spirv_cross::SmallVector.35", %"class.spirv_cross::SmallVector.35"* %0, i64 0, i32 2
  %67 = bitcast %"class.spirv_cross::AlignedBuffer.42"* %66 to %"class.std::__1::basic_string"*
  %68 = icmp eq %"class.std::__1::basic_string"* %65, %67
  br i1 %68, label %70, label %69

69:                                               ; preds = %63
  tail call void @free(i8* %64) #17
  br label %70

70:                                               ; preds = %63, %69
  store %"class.std::__1::basic_string"* %28, %"class.std::__1::basic_string"** %32, align 8
  store i64 %15, i64* %6, align 8
  br label %71

71:                                               ; preds = %70, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross11SmallVectorIhLm8EE7reserveEm(%"class.spirv_cross::SmallVector.43"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp slt i64 %1, 0
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @_ZSt9terminatev() #19
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.spirv_cross::SmallVector.43", %"class.spirv_cross::SmallVector.43"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %52

9:                                                ; preds = %5
  %10 = icmp eq i64 %7, 0
  %11 = select i1 %10, i64 1, i64 %7
  %12 = icmp ugt i64 %11, 8
  %13 = select i1 %12, i64 %11, i64 8
  br label %14

14:                                               ; preds = %14, %9
  %15 = phi i64 [ %13, %9 ], [ %17, %14 ]
  %16 = icmp ult i64 %15, %1
  %17 = shl i64 %15, 1
  br i1 %16, label %14, label %18

18:                                               ; preds = %14
  %19 = icmp ugt i64 %15, 8
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = tail call noalias i8* @malloc(i64 %15) #17
  br label %24

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.spirv_cross::SmallVector.43", %"class.spirv_cross::SmallVector.43"* %0, i64 0, i32 2, i32 0, i64 0
  br label %24

24:                                               ; preds = %22, %20
  %25 = phi i8* [ %21, %20 ], [ %23, %22 ]
  %26 = icmp eq i8* %25, null
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  tail call void @_ZSt9terminatev() #19
  unreachable

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.spirv_cross::SmallVector.43", %"class.spirv_cross::SmallVector.43"* %0, i64 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %25, %30
  br i1 %31, label %46, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.spirv_cross::SmallVector.43", %"class.spirv_cross::SmallVector.43"* %0, i64 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %46, label %36

36:                                               ; preds = %32, %36
  %37 = phi i8* [ %45, %36 ], [ %30, %32 ]
  %38 = phi i64 [ %42, %36 ], [ 0, %32 ]
  %39 = getelementptr inbounds i8, i8* %25, i64 %38
  %40 = getelementptr inbounds i8, i8* %37, i64 %38
  %41 = load i8, i8* %40, align 1
  store i8 %41, i8* %39, align 1
  %42 = add nuw i64 %38, 1
  %43 = load i64, i64* %33, align 8
  %44 = icmp ult i64 %42, %43
  %45 = load i8*, i8** %29, align 8
  br i1 %44, label %36, label %46

46:                                               ; preds = %36, %32, %28
  %47 = phi i8* [ %30, %32 ], [ %25, %28 ], [ %45, %36 ]
  %48 = getelementptr inbounds %"class.spirv_cross::SmallVector.43", %"class.spirv_cross::SmallVector.43"* %0, i64 0, i32 2, i32 0, i64 0
  %49 = icmp eq i8* %47, %48
  br i1 %49, label %51, label %50

50:                                               ; preds = %46
  tail call void @free(i8* %47) #17
  br label %51

51:                                               ; preds = %46, %50
  store i8* %25, i8** %29, align 8
  store i64 %15, i64* %6, align 8
  br label %52

52:                                               ; preds = %51, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE6EEES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE13__move_assignERSH_NS_17integral_constantIbLb1EEE(%"class.std::__1::__hash_table.47"*, %"class.std::__1::__hash_table.47"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %56, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %7, align 8
  %9 = icmp eq %"struct.std::__1::__hash_node_base.51"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"struct.std::__1::__hash_node_base.51"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51", %"struct.std::__1::__hash_node_base.51"* %11, i64 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %12, align 8
  %14 = bitcast %"struct.std::__1::__hash_node_base.51"* %11 to i8*
  tail call void @_ZdlPv(i8* %14) #18
  %15 = icmp eq %"struct.std::__1::__hash_node_base.51"* %13, null
  br i1 %15, label %16, label %10

16:                                               ; preds = %10, %6
  store %"struct.std::__1::__hash_node_base.51"* null, %"struct.std::__1::__hash_node_base.51"** %7, align 8
  %17 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %38, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = add i64 %18, -1
  %23 = and i64 %18, 3
  %24 = icmp ult i64 %22, 3
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = sub i64 %18, %23
  br label %39

27:                                               ; preds = %39, %20
  %28 = phi i64 [ 0, %20 ], [ %53, %39 ]
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %38, label %30

30:                                               ; preds = %27, %30
  %31 = phi i64 [ %35, %30 ], [ %28, %27 ]
  %32 = phi i64 [ %36, %30 ], [ %23, %27 ]
  %33 = load %"struct.std::__1::__hash_node_base.51"**, %"struct.std::__1::__hash_node_base.51"*** %21, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %33, i64 %31
  store %"struct.std::__1::__hash_node_base.51"* null, %"struct.std::__1::__hash_node_base.51"** %34, align 8
  %35 = add nuw i64 %31, 1
  %36 = add i64 %32, -1
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %30, !llvm.loop !134

38:                                               ; preds = %27, %30, %16
  store i64 0, i64* %3, align 8
  br label %56

39:                                               ; preds = %39, %25
  %40 = phi i64 [ 0, %25 ], [ %53, %39 ]
  %41 = phi i64 [ %26, %25 ], [ %54, %39 ]
  %42 = load %"struct.std::__1::__hash_node_base.51"**, %"struct.std::__1::__hash_node_base.51"*** %21, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %42, i64 %40
  store %"struct.std::__1::__hash_node_base.51"* null, %"struct.std::__1::__hash_node_base.51"** %43, align 8
  %44 = or i64 %40, 1
  %45 = load %"struct.std::__1::__hash_node_base.51"**, %"struct.std::__1::__hash_node_base.51"*** %21, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %45, i64 %44
  store %"struct.std::__1::__hash_node_base.51"* null, %"struct.std::__1::__hash_node_base.51"** %46, align 8
  %47 = or i64 %40, 2
  %48 = load %"struct.std::__1::__hash_node_base.51"**, %"struct.std::__1::__hash_node_base.51"*** %21, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %48, i64 %47
  store %"struct.std::__1::__hash_node_base.51"* null, %"struct.std::__1::__hash_node_base.51"** %49, align 8
  %50 = or i64 %40, 3
  %51 = load %"struct.std::__1::__hash_node_base.51"**, %"struct.std::__1::__hash_node_base.51"*** %21, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %51, i64 %50
  store %"struct.std::__1::__hash_node_base.51"* null, %"struct.std::__1::__hash_node_base.51"** %52, align 8
  %53 = add nuw i64 %40, 4
  %54 = add i64 %41, -4
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %27, label %39

56:                                               ; preds = %2, %38
  %57 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = bitcast %"class.std::__1::__hash_table.47"* %1 to i64*
  %59 = load i64, i64* %58, align 8
  store %"struct.std::__1::__hash_node_base.51"** null, %"struct.std::__1::__hash_node_base.51"*** %57, align 8
  %60 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.51"**, %"struct.std::__1::__hash_node_base.51"*** %60, align 8
  %62 = bitcast %"class.std::__1::__hash_table.47"* %0 to i64*
  store i64 %59, i64* %62, align 8
  %63 = icmp eq %"struct.std::__1::__hash_node_base.51"** %61, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %56
  %65 = bitcast %"struct.std::__1::__hash_node_base.51"** %61 to i8*
  tail call void @_ZdlPv(i8* %65) #18
  br label %66

66:                                               ; preds = %56, %64
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %68, i64* %69, align 8
  store i64 0, i64* %67, align 8
  %70 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %1, i64 0, i32 2, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  store i64 %71, i64* %3, align 8
  %72 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %1, i64 0, i32 3, i32 0, i32 0
  %73 = bitcast float* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 3, i32 0, i32 0
  %76 = bitcast float* %75 to i32*
  store i32 %74, i32* %76, align 4
  %77 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %1, i64 0, i32 1, i32 0, i32 0
  %78 = bitcast %"struct.std::__1::__hash_node_base.51"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 1, i32 0, i32 0
  %81 = bitcast %"struct.std::__1::__hash_node_base.51"* %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = icmp eq i64 %71, 0
  br i1 %82, label %103, label %83

83:                                               ; preds = %66
  %84 = inttoptr i64 %79 to %"struct.std::__1::__hash_node_base.51"*
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51", %"struct.std::__1::__hash_node_base.51"* %84, i64 1
  %86 = bitcast %"struct.std::__1::__hash_node_base.51"* %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = load i64, i64* %69, align 8
  %89 = tail call i64 @llvm.ctpop.i64(i64 %88) #17, !range !5
  %90 = icmp ugt i64 %89, 1
  br i1 %90, label %94, label %91

91:                                               ; preds = %83
  %92 = add i64 %88, -1
  %93 = and i64 %92, %87
  br label %98

94:                                               ; preds = %83
  %95 = icmp ult i64 %87, %88
  br i1 %95, label %98, label %96

96:                                               ; preds = %94
  %97 = urem i64 %87, %88
  br label %98

98:                                               ; preds = %91, %94, %96
  %99 = phi i64 [ %93, %91 ], [ %97, %96 ], [ %87, %94 ]
  %100 = load %"struct.std::__1::__hash_node_base.51"**, %"struct.std::__1::__hash_node_base.51"*** %60, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %100, i64 %99
  store %"struct.std::__1::__hash_node_base.51"* %80, %"struct.std::__1::__hash_node_base.51"** %101, align 8
  %102 = bitcast %"struct.std::__1::__hash_node_base.51"* %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false)
  br label %103

103:                                              ; preds = %66, %98
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE4EEENS2_14SPIREntryPointEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE13__move_assignERSI_NS_17integral_constantIbLb1EEE(%"class.std::__1::__hash_table.74"*, %"class.std::__1::__hash_table.74"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %60, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::__compressed_pair.85", %"class.std::__1::__compressed_pair.85"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %8, align 8
  %10 = bitcast %"class.std::__1::__compressed_pair.85"* %7 to %"class.std::__1::allocator.88"*
  %11 = icmp eq %"struct.std::__1::__hash_node_base.78"* %9, null
  br i1 %11, label %20, label %12

12:                                               ; preds = %6, %12
  %13 = phi %"struct.std::__1::__hash_node_base.78"* [ %15, %12 ], [ %9, %6 ]
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78", %"struct.std::__1::__hash_node_base.78"* %13, i64 0, i32 0
  %15 = load %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78", %"struct.std::__1::__hash_node_base.78"* %13, i64 2
  %17 = bitcast %"struct.std::__1::__hash_node_base.78"* %16 to %"struct.std::__1::pair.409"*
  tail call void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS4_5TypesE4EEENS4_14SPIREntryPointEEEPvEEEEE7destroyINS_4pairIKS7_S8_EEvvEEvRSC_PT_(%"class.std::__1::allocator.88"* dereferenceable(1) %10, %"struct.std::__1::pair.409"* %17) #17
  %18 = bitcast %"struct.std::__1::__hash_node_base.78"* %13 to i8*
  tail call void @_ZdlPv(i8* %18) #18
  %19 = icmp eq %"struct.std::__1::__hash_node_base.78"* %15, null
  br i1 %19, label %20, label %12

20:                                               ; preds = %12, %6
  store %"struct.std::__1::__hash_node_base.78"* null, %"struct.std::__1::__hash_node_base.78"** %8, align 8
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = add i64 %22, -1
  %27 = and i64 %22, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %22, %27
  br label %43

31:                                               ; preds = %43, %24
  %32 = phi i64 [ 0, %24 ], [ %57, %43 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.78"**, %"struct.std::__1::__hash_node_base.78"*** %25, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.78"* null, %"struct.std::__1::__hash_node_base.78"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !135

42:                                               ; preds = %31, %34, %20
  store i64 0, i64* %3, align 8
  br label %60

43:                                               ; preds = %43, %29
  %44 = phi i64 [ 0, %29 ], [ %57, %43 ]
  %45 = phi i64 [ %30, %29 ], [ %58, %43 ]
  %46 = load %"struct.std::__1::__hash_node_base.78"**, %"struct.std::__1::__hash_node_base.78"*** %25, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %46, i64 %44
  store %"struct.std::__1::__hash_node_base.78"* null, %"struct.std::__1::__hash_node_base.78"** %47, align 8
  %48 = or i64 %44, 1
  %49 = load %"struct.std::__1::__hash_node_base.78"**, %"struct.std::__1::__hash_node_base.78"*** %25, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.78"* null, %"struct.std::__1::__hash_node_base.78"** %50, align 8
  %51 = or i64 %44, 2
  %52 = load %"struct.std::__1::__hash_node_base.78"**, %"struct.std::__1::__hash_node_base.78"*** %25, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.78"* null, %"struct.std::__1::__hash_node_base.78"** %53, align 8
  %54 = or i64 %44, 3
  %55 = load %"struct.std::__1::__hash_node_base.78"**, %"struct.std::__1::__hash_node_base.78"*** %25, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %55, i64 %54
  store %"struct.std::__1::__hash_node_base.78"* null, %"struct.std::__1::__hash_node_base.78"** %56, align 8
  %57 = add nuw i64 %44, 4
  %58 = add i64 %45, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %31, label %43

60:                                               ; preds = %2, %42
  %61 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.std::__1::__hash_table.74"* %1 to i64*
  %63 = load i64, i64* %62, align 8
  store %"struct.std::__1::__hash_node_base.78"** null, %"struct.std::__1::__hash_node_base.78"*** %61, align 8
  %64 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.78"**, %"struct.std::__1::__hash_node_base.78"*** %64, align 8
  %66 = bitcast %"class.std::__1::__hash_table.74"* %0 to i64*
  store i64 %63, i64* %66, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base.78"** %65, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %60
  %69 = bitcast %"struct.std::__1::__hash_node_base.78"** %65 to i8*
  tail call void @_ZdlPv(i8* %69) #18
  br label %70

70:                                               ; preds = %60, %68
  %71 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %72, i64* %73, align 8
  store i64 0, i64* %71, align 8
  %74 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %1, i64 0, i32 2, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %3, align 8
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %1, i64 0, i32 3, i32 0, i32 0
  %77 = bitcast float* %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 3, i32 0, i32 0
  %80 = bitcast float* %79 to i32*
  store i32 %78, i32* %80, align 4
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %1, i64 0, i32 1, i32 0, i32 0
  %82 = bitcast %"struct.std::__1::__hash_node_base.78"* %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 1, i32 0, i32 0
  %85 = bitcast %"struct.std::__1::__hash_node_base.78"* %84 to i64*
  store i64 %83, i64* %85, align 8
  %86 = icmp eq i64 %75, 0
  br i1 %86, label %107, label %87

87:                                               ; preds = %70
  %88 = inttoptr i64 %83 to %"struct.std::__1::__hash_node_base.78"*
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78", %"struct.std::__1::__hash_node_base.78"* %88, i64 1
  %90 = bitcast %"struct.std::__1::__hash_node_base.78"* %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = load i64, i64* %73, align 8
  %93 = tail call i64 @llvm.ctpop.i64(i64 %92) #17, !range !5
  %94 = icmp ugt i64 %93, 1
  br i1 %94, label %98, label %95

95:                                               ; preds = %87
  %96 = add i64 %92, -1
  %97 = and i64 %96, %91
  br label %102

98:                                               ; preds = %87
  %99 = icmp ult i64 %91, %92
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = urem i64 %91, %92
  br label %102

102:                                              ; preds = %95, %98, %100
  %103 = phi i64 [ %97, %95 ], [ %101, %100 ], [ %91, %98 ]
  %104 = load %"struct.std::__1::__hash_node_base.78"**, %"struct.std::__1::__hash_node_base.78"*** %64, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %104, i64 %103
  store %"struct.std::__1::__hash_node_base.78"* %84, %"struct.std::__1::__hash_node_base.78"** %105, align 8
  %106 = bitcast %"struct.std::__1::__hash_node_base.78"* %81 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 16, i1 false)
  br label %107

107:                                              ; preds = %70, %102
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS4_5TypesE4EEENS4_14SPIREntryPointEEEPvEEEEE7destroyINS_4pairIKS7_S8_EEvvEEvRSC_PT_(%"class.std::__1::allocator.88"* dereferenceable(1), %"struct.std::__1::pair.409"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::pair.409", %"struct.std::__1::pair.409"* %1, i64 0, i32 2, i32 5, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.105"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2, %6
  %7 = phi %"struct.std::__1::__hash_node_base.105"* [ %9, %6 ], [ %4, %2 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.105"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #18
  %11 = icmp eq %"struct.std::__1::__hash_node_base.105"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %2
  %13 = getelementptr inbounds %"struct.std::__1::pair.409", %"struct.std::__1::pair.409"* %1, i64 0, i32 2, i32 5, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.105"** null, %"struct.std::__1::__hash_node_base.105"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.105"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.105"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #18
  br label %18

18:                                               ; preds = %16, %12
  %19 = getelementptr inbounds %"struct.std::__1::pair.409", %"struct.std::__1::pair.409"* %1, i64 0, i32 2, i32 4, i32 0, i32 1
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.std::__1::pair.409", %"struct.std::__1::pair.409"* %1, i64 0, i32 2, i32 4, i32 0, i32 0
  %21 = load %"class.spirv_cross::TypedID.174"*, %"class.spirv_cross::TypedID.174"** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::pair.409", %"struct.std::__1::pair.409"* %1, i64 0, i32 2, i32 4, i32 2
  %23 = bitcast %"class.spirv_cross::AlignedBuffer.211"* %22 to %"class.spirv_cross::TypedID.174"*
  %24 = icmp eq %"class.spirv_cross::TypedID.174"* %21, %23
  br i1 %24, label %27, label %25

25:                                               ; preds = %18
  %26 = bitcast %"class.spirv_cross::TypedID.174"* %21 to i8*
  tail call void @free(i8* %26) #17
  br label %27

27:                                               ; preds = %25, %18
  %28 = getelementptr inbounds %"struct.std::__1::pair.409", %"struct.std::__1::pair.409"* %1, i64 0, i32 2, i32 3
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #18
  br label %36

36:                                               ; preds = %33, %27
  %37 = getelementptr inbounds %"struct.std::__1::pair.409", %"struct.std::__1::pair.409"* %1, i64 0, i32 2, i32 2
  %38 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  tail call void @_ZdlPv(i8* %44) #18
  br label %45

45:                                               ; preds = %36, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #17
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #17
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #18
  %55 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #17
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #19
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #19
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #18
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #17
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEEEEvT_SQ_(%"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca <2 x %"struct.std::__1::__hash_node_base"*>, align 16
  %5 = bitcast <2 x %"struct.std::__1::__hash_node_base"*>* %4 to %"struct.std::__1::pair.411"*
  %6 = ptrtoint %"struct.std::__1::__hash_node_base"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %82, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = add i64 %8, -1
  %13 = and i64 %8, 3
  %14 = icmp ult i64 %12, 3
  br i1 %14, label %34, label %15

15:                                               ; preds = %10
  %16 = sub i64 %8, %13
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi i64 [ 0, %15 ], [ %31, %17 ]
  %19 = phi i64 [ %16, %15 ], [ %32, %17 ]
  %20 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %20, i64 %18
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %21, align 8
  %22 = or i64 %18, 1
  %23 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, i64 %22
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %24, align 8
  %25 = or i64 %18, 2
  %26 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, i64 %25
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %27, align 8
  %28 = or i64 %18, 3
  %29 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %29, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %30, align 8
  %31 = add nuw i64 %18, 4
  %32 = add i64 %19, -4
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %17

34:                                               ; preds = %17, %10
  %35 = phi i64 [ 0, %10 ], [ %31, %17 ]
  %36 = icmp eq i64 %13, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %34, %37
  %38 = phi i64 [ %42, %37 ], [ %35, %34 ]
  %39 = phi i64 [ %43, %37 ], [ %13, %34 ]
  %40 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, i64 %38
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %41, align 8
  %42 = add nuw i64 %38, 1
  %43 = add i64 %39, -1
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %37, !llvm.loop !136

45:                                               ; preds = %37, %34
  %46 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 0, i64* %46, align 8
  %47 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %48 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %47, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base"* %48, null
  br i1 %49, label %82, label %50

50:                                               ; preds = %45
  %51 = bitcast <2 x %"struct.std::__1::__hash_node_base"*>* %4 to i8*
  br label %52

52:                                               ; preds = %50, %57
  %53 = phi %"struct.std::__1::__hash_node_base"* [ %48, %50 ], [ %66, %57 ]
  %54 = phi i64 [ %6, %50 ], [ %69, %57 ]
  %55 = inttoptr i64 %54 to %"struct.std::__1::__hash_node_base"*
  %56 = icmp eq %"struct.std::__1::__hash_node_base"* %55, %2
  br i1 %56, label %71, label %57

57:                                               ; preds = %52
  %58 = bitcast %"struct.std::__1::__hash_node_base"* %53 to %"struct.std::__1::__hash_node.400"*
  %59 = inttoptr i64 %54 to %"struct.std::__1::__hash_node.400"*
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node.400", %"struct.std::__1::__hash_node.400"* %59, i64 0, i32 2, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #17
  %61 = insertelement <2 x %"struct.std::__1::__hash_node_base"*> undef, %"struct.std::__1::__hash_node_base"* %53, i32 0
  %62 = shufflevector <2 x %"struct.std::__1::__hash_node_base"*> %61, <2 x %"struct.std::__1::__hash_node_base"*> undef, <2 x i32> zeroinitializer
  %63 = getelementptr %"struct.std::__1::__hash_node_base", <2 x %"struct.std::__1::__hash_node_base"*> %62, <2 x i64> <i64 2, i64 3>
  store <2 x %"struct.std::__1::__hash_node_base"*> %63, <2 x %"struct.std::__1::__hash_node_base"*>* %4, align 16
  %64 = call dereferenceable(16) %"struct.std::__1::pair.411"* @_ZNSt3__14pairIRN11spirv_cross7TypedIDILNS1_5TypesE0EEERNS1_4MetaEEaSIRKNS0_IKS4_S6_EELb0EEERS8_OT_(%"struct.std::__1::pair.411"* nonnull %5, %"struct.std::__1::pair.392"* dereferenceable(384) %60) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #17
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %65, align 8
  %67 = call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE19__node_insert_multiEPNS_11__hash_nodeIS7_PvEE(%"class.std::__1::__hash_table"* %0, %"struct.std::__1::__hash_node.400"* %58)
  %68 = inttoptr i64 %54 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq %"struct.std::__1::__hash_node_base"* %66, null
  br i1 %70, label %82, label %52

71:                                               ; preds = %52
  %72 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1
  %73 = bitcast %"class.std::__1::__compressed_pair.19"* %72 to %"class.std::__1::allocator.22"*
  br label %74

74:                                               ; preds = %71, %74
  %75 = phi %"struct.std::__1::__hash_node_base"* [ %77, %74 ], [ %53, %71 ]
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %75, i64 0, i32 0
  %77 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %76, align 8
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %75, i64 2
  %79 = bitcast %"struct.std::__1::__hash_node_base"* %78 to %"struct.std::__1::pair.392"*
  call void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS4_5TypesE0EEENS4_4MetaEEEPvEEEEE7destroyINS_4pairIKS7_S8_EEvvEEvRSC_PT_(%"class.std::__1::allocator.22"* dereferenceable(1) %73, %"struct.std::__1::pair.392"* %79) #17
  %80 = bitcast %"struct.std::__1::__hash_node_base"* %75 to i8*
  call void @_ZdlPv(i8* %80) #18
  %81 = icmp eq %"struct.std::__1::__hash_node_base"* %77, null
  br i1 %81, label %82, label %74

82:                                               ; preds = %57, %74, %45, %3
  %83 = phi i64 [ %6, %3 ], [ %6, %45 ], [ %54, %74 ], [ %69, %57 ]
  %84 = inttoptr i64 %83 to %"struct.std::__1::__hash_node_base"*
  %85 = icmp eq %"struct.std::__1::__hash_node_base"* %84, %2
  br i1 %85, label %105, label %86

86:                                               ; preds = %82, %86
  %87 = phi i64 [ %102, %86 ], [ %83, %82 ]
  %88 = inttoptr i64 %87 to %"struct.std::__1::__hash_node.400"*
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node.400", %"struct.std::__1::__hash_node.400"* %88, i64 0, i32 2, i32 0
  %90 = call i8* @_Znwm(i64 400) #18, !noalias !137
  %91 = getelementptr inbounds i8, i8* %90, i64 16
  %92 = bitcast i8* %91 to %"struct.std::__1::pair.392"*
  call void @_ZNSt3__14pairIKN11spirv_cross7TypedIDILNS1_5TypesE0EEENS1_4MetaEEC2ERKS7_(%"struct.std::__1::pair.392"* %92, %"struct.std::__1::pair.392"* dereferenceable(384) %89) #17, !noalias !137
  %93 = bitcast i8* %91 to i32*
  %94 = load i32, i32* %93, align 4, !noalias !137
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds i8, i8* %90, i64 8
  %97 = bitcast i8* %96 to i64*
  store i64 %95, i64* %97, align 8, !noalias !137
  %98 = bitcast i8* %90 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %98, align 8, !noalias !137
  %99 = bitcast i8* %90 to %"struct.std::__1::__hash_node.400"*
  %100 = call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE19__node_insert_multiEPNS_11__hash_nodeIS7_PvEE(%"class.std::__1::__hash_table"* %0, %"struct.std::__1::__hash_node.400"* nonnull %99) #17
  %101 = inttoptr i64 %87 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = inttoptr i64 %102 to %"struct.std::__1::__hash_node_base"*
  %104 = icmp eq %"struct.std::__1::__hash_node_base"* %103, %2
  br i1 %104, label %105, label %86

105:                                              ; preds = %86, %82
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE19__node_insert_multiEPNS_11__hash_nodeIS7_PvEE(%"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node.400"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__hash_node.400", %"struct.std::__1::__hash_node.400"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node.400", %"struct.std::__1::__hash_node.400"* %1, i64 0, i32 1
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node.400", %"struct.std::__1::__hash_node.400"* %1, i64 0, i32 0
  %9 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE27__node_insert_multi_prepareEmRS7_(%"class.std::__1::__hash_table"* %0, i64 %6, %"struct.std::__1::__hash_value_type"* dereferenceable(384) %3)
  %10 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = load i64, i64* %7, align 8
  %13 = tail call i64 @llvm.ctpop.i64(i64 %11) #17, !range !5
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = add i64 %11, -1
  %17 = and i64 %16, %12
  br label %22

18:                                               ; preds = %2
  %19 = icmp ult i64 %12, %11
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = urem i64 %12, %11
  br label %22

22:                                               ; preds = %20, %18, %15
  %23 = phi i64 [ %17, %15 ], [ %21, %20 ], [ %12, %18 ]
  %24 = icmp eq %"struct.std::__1::__hash_node_base"* %9, null
  br i1 %24, label %25, label %52

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %26, i64 0, i32 0
  %28 = bitcast %"struct.std::__1::__hash_node_base"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node.400", %"struct.std::__1::__hash_node.400"* %1, i64 0, i32 0, i32 0
  %31 = bitcast %"struct.std::__1::__hash_node.400"* %1 to i64*
  store i64 %29, i64* %31, align 8
  store %"struct.std::__1::__hash_node_base"* %8, %"struct.std::__1::__hash_node_base"** %27, align 8
  %32 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %33, i64 %23
  store %"struct.std::__1::__hash_node_base"* %26, %"struct.std::__1::__hash_node_base"** %34, align 8
  %35 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base"* %35, null
  br i1 %36, label %78, label %37

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 1
  %39 = bitcast %"struct.std::__1::__hash_node_base"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  br i1 %14, label %44, label %41

41:                                               ; preds = %37
  %42 = add i64 %11, -1
  %43 = and i64 %40, %42
  br label %48

44:                                               ; preds = %37
  %45 = icmp ult i64 %40, %11
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = urem i64 %40, %11
  br label %48

48:                                               ; preds = %46, %44, %41
  %49 = phi i64 [ %43, %41 ], [ %47, %46 ], [ %40, %44 ]
  %50 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %32, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %50, i64 %49
  store %"struct.std::__1::__hash_node_base"* %8, %"struct.std::__1::__hash_node_base"** %51, align 8
  br label %78

52:                                               ; preds = %22
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %9, i64 0, i32 0
  %54 = bitcast %"struct.std::__1::__hash_node_base"* %9 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node.400", %"struct.std::__1::__hash_node.400"* %1, i64 0, i32 0, i32 0
  %57 = bitcast %"struct.std::__1::__hash_node.400"* %1 to i64*
  store i64 %55, i64* %57, align 8
  store %"struct.std::__1::__hash_node_base"* %8, %"struct.std::__1::__hash_node_base"** %53, align 8
  %58 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %56, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base"* %58, null
  br i1 %59, label %78, label %60

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %58, i64 1
  %62 = bitcast %"struct.std::__1::__hash_node_base"* %61 to i64*
  %63 = load i64, i64* %62, align 8
  br i1 %14, label %67, label %64

64:                                               ; preds = %60
  %65 = add i64 %11, -1
  %66 = and i64 %63, %65
  br label %71

67:                                               ; preds = %60
  %68 = icmp ult i64 %63, %11
  br i1 %68, label %71, label %69

69:                                               ; preds = %67
  %70 = urem i64 %63, %11
  br label %71

71:                                               ; preds = %69, %67, %64
  %72 = phi i64 [ %66, %64 ], [ %70, %69 ], [ %63, %67 ]
  %73 = icmp eq i64 %72, %23
  br i1 %73, label %78, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %76, i64 %72
  store %"struct.std::__1::__hash_node_base"* %8, %"struct.std::__1::__hash_node_base"** %77, align 8
  br label %78

78:                                               ; preds = %25, %48, %52, %71, %74
  %79 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, 1
  store i64 %81, i64* %79, align 8
  ret %"struct.std::__1::__hash_node_base"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.std::__1::pair.411"* @_ZNSt3__14pairIRN11spirv_cross7TypedIDILNS1_5TypesE0EEERNS1_4MetaEEaSIRKNS0_IKS4_S6_EELb0EEERS8_OT_(%"struct.std::__1::pair.411"*, %"struct.std::__1::pair.392"* dereferenceable(384)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.std::__1::pair.411"* %0 to i32**
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::pair.392", %"struct.std::__1::pair.392"* %1, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  store i32 %6, i32* %4, align 4
  %7 = getelementptr inbounds %"struct.std::__1::pair.392", %"struct.std::__1::pair.392"* %1, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.std::__1::pair.411", %"struct.std::__1::pair.411"* %0, i64 0, i32 1
  %9 = load %"struct.spirv_cross::Meta"*, %"struct.spirv_cross::Meta"** %8, align 8
  %10 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %9, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %7, i64 0, i32 0
  %12 = tail call dereferenceable(296) %"struct.spirv_cross::Meta::Decoration"* @_ZN11spirv_cross4Meta10DecorationaSERKS1_(%"struct.spirv_cross::Meta::Decoration"* %10, %"struct.spirv_cross::Meta::Decoration"* dereferenceable(296) %11) #17
  %13 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %9, i64 0, i32 1
  %14 = icmp eq %"struct.spirv_cross::Meta"* %9, %7
  br i1 %14, label %55, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %9, i64 0, i32 1, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %28, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.spirv_cross::SmallVector.362", %"class.spirv_cross::SmallVector.362"* %13, i64 0, i32 0, i32 0
  br label %21

21:                                               ; preds = %21, %19
  %22 = phi i64 [ 0, %19 ], [ %25, %21 ]
  %23 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %20, align 8
  %24 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %23, i64 %22
  tail call void @_ZN11spirv_cross4Meta10DecorationD2Ev(%"struct.spirv_cross::Meta::Decoration"* %24) #17
  %25 = add nuw i64 %22, 1
  %26 = load i64, i64* %16, align 8
  %27 = icmp ult i64 %25, %26
  br i1 %27, label %21, label %28

28:                                               ; preds = %21, %15
  store i64 0, i64* %16, align 8
  %29 = getelementptr inbounds %"struct.std::__1::pair.392", %"struct.std::__1::pair.392"* %1, i64 0, i32 1, i32 1, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  tail call void @_ZN11spirv_cross11SmallVectorINS_4Meta10DecorationELm0EE7reserveEm(%"class.spirv_cross::SmallVector.362"* %13, i64 %30) #17
  %31 = load i64, i64* %29, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %45, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.spirv_cross::SmallVector.362", %"class.spirv_cross::SmallVector.362"* %13, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::__1::pair.392", %"struct.std::__1::pair.392"* %1, i64 0, i32 1, i32 1, i32 0, i32 0
  br label %36

36:                                               ; preds = %36, %33
  %37 = phi i64 [ 0, %33 ], [ %42, %36 ]
  %38 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %34, align 8
  %39 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %38, i64 %37
  %40 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %35, align 8
  %41 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %40, i64 %37
  tail call void @_ZN11spirv_cross4Meta10DecorationC2ERKS1_(%"struct.spirv_cross::Meta::Decoration"* %39, %"struct.spirv_cross::Meta::Decoration"* dereferenceable(296) %41) #17
  %42 = add nuw i64 %37, 1
  %43 = load i64, i64* %29, align 8
  %44 = icmp ult i64 %42, %43
  br i1 %44, label %36, label %45

45:                                               ; preds = %36, %28
  %46 = phi i64 [ 0, %28 ], [ %43, %36 ]
  store i64 %46, i64* %16, align 8
  %47 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %9, i64 0, i32 2, i32 0
  %48 = getelementptr inbounds %"struct.std::__1::pair.392", %"struct.std::__1::pair.392"* %1, i64 0, i32 1, i32 2, i32 0, i32 3, i32 0, i32 0
  %49 = bitcast float* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %9, i64 0, i32 2, i32 0, i32 3, i32 0, i32 0
  %52 = bitcast float* %51 to i32*
  store i32 %50, i32* %52, align 4
  %53 = getelementptr inbounds %"struct.std::__1::pair.392", %"struct.std::__1::pair.392"* %1, i64 0, i32 1, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %53, align 8
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeIS2_PvEEEEEEvT_SL_(%"class.std::__1::__hash_table.367"* %47, %"struct.std::__1::__hash_node_base.371"* %54, %"struct.std::__1::__hash_node_base.371"* null) #17
  br label %55

55:                                               ; preds = %2, %45
  %56 = getelementptr inbounds %"struct.spirv_cross::Meta", %"struct.spirv_cross::Meta"* %9, i64 0, i32 3
  %57 = getelementptr inbounds %"struct.std::__1::pair.392", %"struct.std::__1::pair.392"* %1, i64 0, i32 1, i32 3
  %58 = bitcast i8* %57 to i64*
  %59 = bitcast i8* %56 to i64*
  %60 = load i64, i64* %58, align 8
  store i64 %60, i64* %59, align 8
  ret %"struct.std::__1::pair.411"* %0
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(296) %"struct.spirv_cross::Meta::Decoration"* @_ZN11spirv_cross4Meta10DecorationaSERKS1_(%"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"* dereferenceable(296)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 0
  %4 = icmp eq %"struct.spirv_cross::Meta::Decoration"* %0, %1
  br i1 %4, label %96, label %5

5:                                                ; preds = %2
  %6 = bitcast %"struct.spirv_cross::Meta::Decoration"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"struct.spirv_cross::Meta::Decoration"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %24, label %14

14:                                               ; preds = %5
  br i1 %13, label %18, label %15

15:                                               ; preds = %14
  %16 = bitcast %"struct.spirv_cross::Meta::Decoration"* %0 to i8*
  %17 = bitcast %"struct.spirv_cross::Meta::Decoration"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #17
  br label %34

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %20, i64 %22) #17
  br label %34

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"struct.spirv_cross::Meta::Decoration"* %1 to i8*
  %30 = zext i8 %12 to i64
  %31 = select i1 %13, i8* %26, i8* %29
  %32 = select i1 %13, i64 %28, i64 %30
  %33 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %31, i64 %32) #17
  br label %34

34:                                               ; preds = %15, %18, %24
  %35 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 1
  %37 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %40, label %55, label %45

45:                                               ; preds = %34
  br i1 %44, label %49, label %46

46:                                               ; preds = %45
  %47 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %48 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false) #17
  br label %65

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %35, i8* %51, i64 %53) #17
  br label %65

55:                                               ; preds = %34
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  %61 = zext i8 %43 to i64
  %62 = select i1 %44, i8* %57, i8* %60
  %63 = select i1 %44, i64 %59, i64 %61
  %64 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %35, i8* %62, i64 %63) #17
  br label %65

65:                                               ; preds = %46, %49, %55
  %66 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 2
  %67 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 2
  %68 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  %72 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %71, label %86, label %76

76:                                               ; preds = %65
  br i1 %75, label %80, label %77

77:                                               ; preds = %76
  %78 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  %79 = bitcast %"class.std::__1::basic_string"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 24, i1 false) #17
  br label %100

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %66, i8* %82, i64 %84) #17
  br label %100

86:                                               ; preds = %65
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %"class.std::__1::basic_string"* %67 to i8*
  %92 = zext i8 %74 to i64
  %93 = select i1 %75, i8* %88, i8* %91
  %94 = select i1 %75, i64 %90, i64 %92
  %95 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %66, i8* %93, i64 %94) #17
  br label %100

96:                                               ; preds = %2
  %97 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 3, i32 0
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 3, i32 0
  store i64 %98, i64* %99, align 8
  br label %112

100:                                              ; preds = %77, %80, %86
  %101 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 3, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 3, i32 0
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 3, i32 1, i32 0
  %105 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 3, i32 1, i32 0, i32 3, i32 0, i32 0
  %106 = bitcast float* %105 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 3, i32 1, i32 0, i32 3, i32 0, i32 0
  %109 = bitcast float* %108 to i32*
  store i32 %107, i32* %109, align 4
  %110 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 3, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %111 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %110, align 8
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEEEEvT_SF_(%"class.std::__1::__hash_table.101"* %104, %"struct.std::__1::__hash_node_base.105"* %111, %"struct.std::__1::__hash_node_base.105"* null) #17
  br label %112

112:                                              ; preds = %96, %100
  %113 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 4
  %114 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 4
  %115 = bitcast i32* %113 to i8*
  %116 = bitcast i32* %114 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %116, i64 61, i1 false)
  %117 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 20, i32 0, i32 0
  %118 = load i64, i64* %117, align 8
  %119 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 20, i32 0, i32 0
  store i64 %118, i64* %119, align 8
  br i1 %4, label %129, label %120

120:                                              ; preds = %112
  %121 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 20, i32 0, i32 1, i32 0
  %122 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 20, i32 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %123 = bitcast float* %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 20, i32 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %126 = bitcast float* %125 to i32*
  store i32 %124, i32* %126, align 4
  %127 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 20, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %128 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %127, align 8
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEEEEvT_SF_(%"class.std::__1::__hash_table.101"* %121, %"struct.std::__1::__hash_node_base.105"* %128, %"struct.std::__1::__hash_node_base.105"* null) #17
  br label %129

129:                                              ; preds = %112, %120
  %130 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 20, i32 1
  %131 = bitcast [16 x i32]* %130 to i8*
  %132 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 20, i32 1
  %133 = bitcast [16 x i32]* %132 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %133, i64 64, i1 false) #17
  ret %"struct.spirv_cross::Meta::Decoration"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross11SmallVectorINS_4Meta10DecorationELm0EE7reserveEm(%"class.spirv_cross::SmallVector.362"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 62320081330099836
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @_ZSt9terminatev() #19
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.spirv_cross::SmallVector.362", %"class.spirv_cross::SmallVector.362"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %169

9:                                                ; preds = %5
  %10 = icmp eq i64 %7, 0
  %11 = select i1 %10, i64 1, i64 %7
  br label %12

12:                                               ; preds = %12, %9
  %13 = phi i64 [ %11, %9 ], [ %15, %12 ]
  %14 = icmp ult i64 %13, %1
  %15 = shl i64 %13, 1
  br i1 %14, label %12, label %16

16:                                               ; preds = %12
  %17 = icmp eq i64 %13, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = mul i64 %13, 296
  %20 = tail call noalias i8* @malloc(i64 %19) #17
  %21 = bitcast i8* %20 to %"struct.spirv_cross::Meta::Decoration"*
  %22 = icmp eq i8* %20, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %16, %18
  tail call void @_ZSt9terminatev() #19
  unreachable

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.spirv_cross::SmallVector.362", %"class.spirv_cross::SmallVector.362"* %0, i64 0, i32 0, i32 0
  %26 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %25, align 8
  %27 = icmp eq %"struct.spirv_cross::Meta::Decoration"* %26, %21
  %28 = bitcast %"struct.spirv_cross::Meta::Decoration"* %26 to i8*
  br i1 %27, label %162, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.spirv_cross::SmallVector.362", %"class.spirv_cross::SmallVector.362"* %0, i64 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %162, label %33

33:                                               ; preds = %29, %149
  %34 = phi %"struct.spirv_cross::Meta::Decoration"* [ %159, %149 ], [ %26, %29 ]
  %35 = phi i64 [ %156, %149 ], [ 0, %29 ]
  %36 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %21, i64 %35
  %37 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %34, i64 %35
  %38 = bitcast %"struct.spirv_cross::Meta::Decoration"* %36 to i8*
  %39 = bitcast %"struct.spirv_cross::Meta::Decoration"* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #17
  %40 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %21, i64 %35, i32 1
  %41 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %34, i64 %35, i32 1
  %42 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #17
  %44 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %21, i64 %35, i32 2
  %45 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %34, i64 %35, i32 2
  %46 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  %47 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #17
  %48 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %21, i64 %35, i32 3, i32 0
  %49 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %34, i64 %35, i32 3, i32 0
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %48, align 8
  %51 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %21, i64 %35, i32 3, i32 1
  %52 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %34, i64 %35, i32 3, i32 1
  %53 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = bitcast %"class.std::__1::unordered_set"* %52 to i64*
  %55 = load i64, i64* %54, align 8
  store %"struct.std::__1::__hash_node_base.105"** null, %"struct.std::__1::__hash_node_base.105"*** %53, align 8
  %56 = bitcast %"class.std::__1::unordered_set"* %51 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %34, i64 %35, i32 3, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %21, i64 %35, i32 3, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %59 = load i64, i64* %57, align 8
  store i64 %59, i64* %58, align 8
  store i64 0, i64* %57, align 8
  %60 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %21, i64 %35, i32 3, i32 1, i32 0, i32 1
  %61 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %34, i64 %35, i32 3, i32 1, i32 0, i32 1
  %62 = bitcast %"class.std::__1::__compressed_pair.112"* %61 to i64*
  %63 = bitcast %"class.std::__1::__compressed_pair.112"* %60 to i64*
  %64 = load i64, i64* %62, align 8
  store i64 %64, i64* %63, align 8
  %65 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %34, i64 %35, i32 3, i32 1, i32 0, i32 2, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %21, i64 %35, i32 3, i32 1, i32 0, i32 2, i32 0, i32 0
  %67 = load i64, i64* %65, align 8
  store i64 %67, i64* %66, align 8
  %68 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %21, i64 %35, i32 3, i32 1, i32 0, i32 3
  %69 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %34, i64 %35, i32 3, i32 1, i32 0, i32 3
  %70 = bitcast %"class.std::__1::__compressed_pair.120"* %69 to i32*
  %71 = bitcast %"class.std::__1::__compressed_pair.120"* %68 to i32*
  %72 = load i32, i32* %70, align 4
  store i32 %72, i32* %71, align 8
  %73 = icmp eq i64 %67, 0
  br i1 %73, label %96, label %74

74:                                               ; preds = %33
  %75 = inttoptr i64 %64 to %"struct.std::__1::__hash_node_base.105"*
  %76 = getelementptr inbounds %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.112"* %60, i64 0, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %75, i64 1
  %78 = bitcast %"struct.std::__1::__hash_node_base.105"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = load i64, i64* %58, align 8
  %81 = tail call i64 @llvm.ctpop.i64(i64 %80) #17, !range !5
  %82 = icmp ugt i64 %81, 1
  br i1 %82, label %86, label %83

83:                                               ; preds = %74
  %84 = add i64 %80, -1
  %85 = and i64 %84, %79
  br label %90

86:                                               ; preds = %74
  %87 = icmp ult i64 %79, %80
  br i1 %87, label %90, label %88

88:                                               ; preds = %86
  %89 = urem i64 %79, %80
  br label %90

90:                                               ; preds = %88, %86, %83
  %91 = phi i64 [ %85, %83 ], [ %89, %88 ], [ %79, %86 ]
  %92 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %92, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %93, i64 %91
  store %"struct.std::__1::__hash_node_base.105"* %76, %"struct.std::__1::__hash_node_base.105"** %94, align 8
  %95 = bitcast %"class.std::__1::__compressed_pair.112"* %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 16, i1 false) #17
  br label %96

96:                                               ; preds = %90, %33
  %97 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %21, i64 %35, i32 4
  %98 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %34, i64 %35, i32 4
  %99 = bitcast i32* %97 to i8*
  %100 = bitcast i32* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 61, i1 false) #17
  %101 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %21, i64 %35, i32 20, i32 0, i32 0
  %102 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %34, i64 %35, i32 20, i32 0, i32 0
  %103 = load i64, i64* %102, align 8
  store i64 %103, i64* %101, align 8
  %104 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %21, i64 %35, i32 20, i32 0, i32 1
  %105 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %34, i64 %35, i32 20, i32 0, i32 1
  %106 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = bitcast %"class.std::__1::unordered_set"* %105 to i64*
  %108 = load i64, i64* %107, align 8
  store %"struct.std::__1::__hash_node_base.105"** null, %"struct.std::__1::__hash_node_base.105"*** %106, align 8
  %109 = bitcast %"class.std::__1::unordered_set"* %104 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %34, i64 %35, i32 20, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %21, i64 %35, i32 20, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %112 = load i64, i64* %110, align 8
  store i64 %112, i64* %111, align 8
  store i64 0, i64* %110, align 8
  %113 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %21, i64 %35, i32 20, i32 0, i32 1, i32 0, i32 1
  %114 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %34, i64 %35, i32 20, i32 0, i32 1, i32 0, i32 1
  %115 = bitcast %"class.std::__1::__compressed_pair.112"* %114 to i64*
  %116 = bitcast %"class.std::__1::__compressed_pair.112"* %113 to i64*
  %117 = load i64, i64* %115, align 8
  store i64 %117, i64* %116, align 8
  %118 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %34, i64 %35, i32 20, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %119 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %21, i64 %35, i32 20, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %120 = load i64, i64* %118, align 8
  store i64 %120, i64* %119, align 8
  %121 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %21, i64 %35, i32 20, i32 0, i32 1, i32 0, i32 3
  %122 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %34, i64 %35, i32 20, i32 0, i32 1, i32 0, i32 3
  %123 = bitcast %"class.std::__1::__compressed_pair.120"* %122 to i32*
  %124 = bitcast %"class.std::__1::__compressed_pair.120"* %121 to i32*
  %125 = load i32, i32* %123, align 4
  store i32 %125, i32* %124, align 8
  %126 = icmp eq i64 %120, 0
  br i1 %126, label %149, label %127

127:                                              ; preds = %96
  %128 = inttoptr i64 %117 to %"struct.std::__1::__hash_node_base.105"*
  %129 = getelementptr inbounds %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.112"* %113, i64 0, i32 0, i32 0
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %128, i64 1
  %131 = bitcast %"struct.std::__1::__hash_node_base.105"* %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = load i64, i64* %111, align 8
  %134 = tail call i64 @llvm.ctpop.i64(i64 %133) #17, !range !5
  %135 = icmp ugt i64 %134, 1
  br i1 %135, label %139, label %136

136:                                              ; preds = %127
  %137 = add i64 %133, -1
  %138 = and i64 %137, %132
  br label %143

139:                                              ; preds = %127
  %140 = icmp ult i64 %132, %133
  br i1 %140, label %143, label %141

141:                                              ; preds = %139
  %142 = urem i64 %132, %133
  br label %143

143:                                              ; preds = %141, %139, %136
  %144 = phi i64 [ %138, %136 ], [ %142, %141 ], [ %132, %139 ]
  %145 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %145, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %146, i64 %144
  store %"struct.std::__1::__hash_node_base.105"* %129, %"struct.std::__1::__hash_node_base.105"** %147, align 8
  %148 = bitcast %"class.std::__1::__compressed_pair.112"* %114 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %148, i8 0, i64 16, i1 false) #17
  br label %149

149:                                              ; preds = %96, %143
  %150 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %21, i64 %35, i32 20, i32 1
  %151 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %34, i64 %35, i32 20, i32 1
  %152 = bitcast [16 x i32]* %150 to i8*
  %153 = bitcast [16 x i32]* %151 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 64, i1 false) #17
  %154 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %25, align 8
  %155 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %154, i64 %35
  tail call void @_ZN11spirv_cross4Meta10DecorationD2Ev(%"struct.spirv_cross::Meta::Decoration"* %155) #17
  %156 = add nuw i64 %35, 1
  %157 = load i64, i64* %30, align 8
  %158 = icmp ult i64 %156, %157
  %159 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %25, align 8
  br i1 %158, label %33, label %160

160:                                              ; preds = %149
  %161 = bitcast %"struct.spirv_cross::Meta::Decoration"* %159 to i8*
  br label %162

162:                                              ; preds = %29, %160, %24
  %163 = phi i8* [ %28, %24 ], [ %161, %160 ], [ %28, %29 ]
  %164 = phi %"struct.spirv_cross::Meta::Decoration"* [ %21, %24 ], [ %159, %160 ], [ %26, %29 ]
  %165 = icmp eq %"struct.spirv_cross::Meta::Decoration"* %164, null
  br i1 %165, label %167, label %166

166:                                              ; preds = %162
  tail call void @free(i8* %163) #17
  br label %167

167:                                              ; preds = %162, %166
  %168 = bitcast %"class.spirv_cross::SmallVector.362"* %0 to i8**
  store i8* %20, i8** %168, align 8
  store i64 %13, i64* %6, align 8
  br label %169

169:                                              ; preds = %167, %5
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross4Meta10DecorationC2ERKS1_(%"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"* dereferenceable(296)) unnamed_addr #5 comdat align 2 {
  %3 = bitcast %"struct.spirv_cross::Meta::Decoration"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.spirv_cross::Meta::Decoration"* %0 to i8*
  %9 = bitcast %"struct.spirv_cross::Meta::Decoration"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #17
  br label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %13, i64 %15) #17
  br label %16

16:                                               ; preds = %7, %10
  %17 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %25 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false) #17
  br label %31

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %17, i8* %28, i64 %30) #17
  br label %31

31:                                               ; preds = %23, %26
  %32 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 2
  %34 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %31
  %39 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %40 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 24, i1 false) #17
  br label %46

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %32, i8* %43, i64 %45) #17
  br label %46

46:                                               ; preds = %38, %41
  %47 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 3, i32 0
  %48 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 3, i32 0
  %49 = load i64, i64* %48, align 8
  store i64 %49, i64* %47, align 8
  %50 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 3, i32 1
  %51 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %50, i64 0, i32 0
  %52 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 3, i32 1, i32 0, i32 3
  %53 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 3, i32 1, i32 0, i32 3
  %54 = bitcast %"class.std::__1::__compressed_pair.120"* %53 to i32*
  %55 = bitcast %"class.std::__1::__compressed_pair.120"* %52 to i32*
  %56 = bitcast %"class.std::__1::unordered_set"* %50 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 32, i1 false) #17
  %57 = load i32, i32* %54, align 8
  store i32 %57, i32* %55, align 8
  %58 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %59 = load i64, i64* %58, align 8
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.101"* %51, i64 %59) #17
  %60 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 3, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %60, align 8
  %62 = icmp eq %"struct.std::__1::__hash_node_base.105"* %61, null
  br i1 %62, label %73, label %63

63:                                               ; preds = %46
  %64 = ptrtoint %"struct.std::__1::__hash_node_base.105"* %61 to i64
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ %64, %63 ], [ %71, %65 ]
  %67 = inttoptr i64 %66 to %"struct.std::__1::__hash_node"*
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %67, i64 0, i32 2
  %69 = tail call { %"struct.std::__1::__hash_node_base.105"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.101"* %51, i32* dereferenceable(4) %68, i32* dereferenceable(4) %68) #17
  %70 = inttoptr i64 %66 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %65

73:                                               ; preds = %65, %46
  %74 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 4
  %75 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 4
  %76 = bitcast i32* %74 to i8*
  %77 = bitcast i32* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 61, i1 false)
  %78 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 20, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 20, i32 0, i32 0
  %80 = load i64, i64* %79, align 8
  store i64 %80, i64* %78, align 8
  %81 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 20, i32 0, i32 1
  %82 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %81, i64 0, i32 0
  %83 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 20, i32 0, i32 1, i32 0, i32 3
  %84 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 20, i32 0, i32 1, i32 0, i32 3
  %85 = bitcast %"class.std::__1::__compressed_pair.120"* %84 to i32*
  %86 = bitcast %"class.std::__1::__compressed_pair.120"* %83 to i32*
  %87 = bitcast %"class.std::__1::unordered_set"* %81 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 32, i1 false) #17
  %88 = load i32, i32* %85, align 8
  store i32 %88, i32* %86, align 8
  %89 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 20, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %90 = load i64, i64* %89, align 8
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.101"* %82, i64 %90) #17
  %91 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 20, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %92 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %91, align 8
  %93 = icmp eq %"struct.std::__1::__hash_node_base.105"* %92, null
  br i1 %93, label %104, label %94

94:                                               ; preds = %73
  %95 = ptrtoint %"struct.std::__1::__hash_node_base.105"* %92 to i64
  br label %96

96:                                               ; preds = %96, %94
  %97 = phi i64 [ %95, %94 ], [ %102, %96 ]
  %98 = inttoptr i64 %97 to %"struct.std::__1::__hash_node"*
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %98, i64 0, i32 2
  %100 = tail call { %"struct.std::__1::__hash_node_base.105"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.101"* %82, i32* dereferenceable(4) %99, i32* dereferenceable(4) %99) #17
  %101 = inttoptr i64 %97 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %104, label %96

104:                                              ; preds = %96, %73
  %105 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 20, i32 1
  %106 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %1, i64 0, i32 20, i32 1
  %107 = bitcast [16 x i32]* %105 to i8*
  %108 = bitcast [16 x i32]* %106 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %108, i64 64, i1 false) #17
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeIS2_PvEEEEEEvT_SL_(%"class.std::__1::__hash_table.367"*, %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::__hash_node_base.371"* %1 to i64
  %5 = getelementptr inbounds %"class.std::__1::__hash_table.367", %"class.std::__1::__hash_table.367"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %76, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__hash_table.367", %"class.std::__1::__hash_table.367"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = add i64 %6, -1
  %11 = and i64 %6, 3
  %12 = icmp ult i64 %10, 3
  br i1 %12, label %32, label %13

13:                                               ; preds = %8
  %14 = sub i64 %6, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i64 [ 0, %13 ], [ %29, %15 ]
  %17 = phi i64 [ %14, %13 ], [ %30, %15 ]
  %18 = load %"struct.std::__1::__hash_node_base.371"**, %"struct.std::__1::__hash_node_base.371"*** %9, align 8
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %18, i64 %16
  store %"struct.std::__1::__hash_node_base.371"* null, %"struct.std::__1::__hash_node_base.371"** %19, align 8
  %20 = or i64 %16, 1
  %21 = load %"struct.std::__1::__hash_node_base.371"**, %"struct.std::__1::__hash_node_base.371"*** %9, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %21, i64 %20
  store %"struct.std::__1::__hash_node_base.371"* null, %"struct.std::__1::__hash_node_base.371"** %22, align 8
  %23 = or i64 %16, 2
  %24 = load %"struct.std::__1::__hash_node_base.371"**, %"struct.std::__1::__hash_node_base.371"*** %9, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %24, i64 %23
  store %"struct.std::__1::__hash_node_base.371"* null, %"struct.std::__1::__hash_node_base.371"** %25, align 8
  %26 = or i64 %16, 3
  %27 = load %"struct.std::__1::__hash_node_base.371"**, %"struct.std::__1::__hash_node_base.371"*** %9, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %27, i64 %26
  store %"struct.std::__1::__hash_node_base.371"* null, %"struct.std::__1::__hash_node_base.371"** %28, align 8
  %29 = add nuw i64 %16, 4
  %30 = add i64 %17, -4
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %15

32:                                               ; preds = %15, %8
  %33 = phi i64 [ 0, %8 ], [ %29, %15 ]
  %34 = icmp eq i64 %11, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %32, %35
  %36 = phi i64 [ %40, %35 ], [ %33, %32 ]
  %37 = phi i64 [ %41, %35 ], [ %11, %32 ]
  %38 = load %"struct.std::__1::__hash_node_base.371"**, %"struct.std::__1::__hash_node_base.371"*** %9, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %38, i64 %36
  store %"struct.std::__1::__hash_node_base.371"* null, %"struct.std::__1::__hash_node_base.371"** %39, align 8
  %40 = add nuw i64 %36, 1
  %41 = add i64 %37, -1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %35, !llvm.loop !140

43:                                               ; preds = %35, %32
  %44 = getelementptr inbounds %"class.std::__1::__hash_table.367", %"class.std::__1::__hash_table.367"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds %"class.std::__1::__hash_table.367", %"class.std::__1::__hash_table.367"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %45, align 8
  store %"struct.std::__1::__hash_node_base.371"* null, %"struct.std::__1::__hash_node_base.371"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.371"* %46, null
  br i1 %47, label %76, label %48

48:                                               ; preds = %43, %53
  %49 = phi %"struct.std::__1::__hash_node_base.371"* [ %65, %53 ], [ %46, %43 ]
  %50 = phi i64 [ %68, %53 ], [ %4, %43 ]
  %51 = inttoptr i64 %50 to %"struct.std::__1::__hash_node_base.371"*
  %52 = icmp eq %"struct.std::__1::__hash_node_base.371"* %51, %2
  br i1 %52, label %70, label %53

53:                                               ; preds = %48
  %54 = bitcast %"struct.std::__1::__hash_node_base.371"* %49 to %"struct.std::__1::__hash_node.401"*
  %55 = inttoptr i64 %50 to %"struct.std::__1::__hash_node.401"*
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371", %"struct.std::__1::__hash_node_base.371"* %49, i64 2
  %57 = bitcast %"struct.std::__1::__hash_node_base.371"* %56 to %"struct.std::__1::__hash_value_type.402"*
  %58 = bitcast %"struct.std::__1::__hash_node_base.371"* %56 to i32*
  %59 = getelementptr inbounds %"struct.std::__1::__hash_value_type.402", %"struct.std::__1::__hash_value_type.402"* %57, i64 0, i32 0, i32 1
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node.401", %"struct.std::__1::__hash_node.401"* %55, i64 0, i32 2, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  store i32 %61, i32* %58, align 4
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node.401", %"struct.std::__1::__hash_node.401"* %55, i64 0, i32 2, i32 0, i32 1
  %63 = load i32, i32* %62, align 4
  store i32 %63, i32* %59, align 4
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371", %"struct.std::__1::__hash_node_base.371"* %49, i64 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %64, align 8
  %66 = tail call %"struct.std::__1::__hash_node_base.371"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE19__node_insert_multiEPNS_11__hash_nodeIS2_PvEE(%"class.std::__1::__hash_table.367"* %0, %"struct.std::__1::__hash_node.401"* %54)
  %67 = inttoptr i64 %50 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.371"* %65, null
  br i1 %69, label %76, label %48

70:                                               ; preds = %48, %70
  %71 = phi %"struct.std::__1::__hash_node_base.371"* [ %73, %70 ], [ %49, %48 ]
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371", %"struct.std::__1::__hash_node_base.371"* %71, i64 0, i32 0
  %73 = load %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %72, align 8
  %74 = bitcast %"struct.std::__1::__hash_node_base.371"* %71 to i8*
  tail call void @_ZdlPv(i8* %74) #18
  %75 = icmp eq %"struct.std::__1::__hash_node_base.371"* %73, null
  br i1 %75, label %76, label %70

76:                                               ; preds = %53, %70, %43, %3
  %77 = phi i64 [ %4, %3 ], [ %4, %43 ], [ %50, %70 ], [ %68, %53 ]
  %78 = inttoptr i64 %77 to %"struct.std::__1::__hash_node_base.371"*
  %79 = icmp eq %"struct.std::__1::__hash_node_base.371"* %78, %2
  br i1 %79, label %99, label %80

80:                                               ; preds = %76, %80
  %81 = phi i64 [ %96, %80 ], [ %77, %76 ]
  %82 = inttoptr i64 %81 to %"struct.std::__1::__hash_node.401"*
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node.401", %"struct.std::__1::__hash_node.401"* %82, i64 0, i32 2, i32 0
  %84 = tail call i8* @_Znwm(i64 24) #18, !noalias !141
  %85 = getelementptr inbounds i8, i8* %84, i64 16
  %86 = bitcast %"struct.std::__1::pair.403"* %83 to i64*
  %87 = bitcast i8* %85 to i64*
  %88 = load i64, i64* %86, align 4, !noalias !141
  store i64 %88, i64* %87, align 4, !noalias !141
  %89 = and i64 %88, 4294967295
  %90 = getelementptr inbounds i8, i8* %84, i64 8
  %91 = bitcast i8* %90 to i64*
  store i64 %89, i64* %91, align 8, !noalias !141
  %92 = bitcast i8* %84 to %"struct.std::__1::__hash_node_base.371"**
  store %"struct.std::__1::__hash_node_base.371"* null, %"struct.std::__1::__hash_node_base.371"** %92, align 8, !noalias !141
  %93 = bitcast i8* %84 to %"struct.std::__1::__hash_node.401"*
  %94 = tail call %"struct.std::__1::__hash_node_base.371"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE19__node_insert_multiEPNS_11__hash_nodeIS2_PvEE(%"class.std::__1::__hash_table.367"* %0, %"struct.std::__1::__hash_node.401"* nonnull %93) #17
  %95 = inttoptr i64 %81 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = inttoptr i64 %96 to %"struct.std::__1::__hash_node_base.371"*
  %98 = icmp eq %"struct.std::__1::__hash_node_base.371"* %97, %2
  br i1 %98, label %99, label %80

99:                                               ; preds = %80, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.371"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE19__node_insert_multiEPNS_11__hash_nodeIS2_PvEE(%"class.std::__1::__hash_table.367"*, %"struct.std::__1::__hash_node.401"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__hash_node.401", %"struct.std::__1::__hash_node.401"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"struct.std::__1::__hash_value_type.402", %"struct.std::__1::__hash_value_type.402"* %3, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node.401", %"struct.std::__1::__hash_node.401"* %1, i64 0, i32 1
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node.401", %"struct.std::__1::__hash_node.401"* %1, i64 0, i32 0
  %9 = tail call %"struct.std::__1::__hash_node_base.371"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE27__node_insert_multi_prepareEmRS2_(%"class.std::__1::__hash_table.367"* %0, i64 %6, %"struct.std::__1::__hash_value_type.402"* dereferenceable(8) %3)
  %10 = getelementptr inbounds %"class.std::__1::__hash_table.367", %"class.std::__1::__hash_table.367"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = load i64, i64* %7, align 8
  %13 = tail call i64 @llvm.ctpop.i64(i64 %11) #17, !range !5
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = add i64 %11, -1
  %17 = and i64 %16, %12
  br label %22

18:                                               ; preds = %2
  %19 = icmp ult i64 %12, %11
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = urem i64 %12, %11
  br label %22

22:                                               ; preds = %20, %18, %15
  %23 = phi i64 [ %17, %15 ], [ %21, %20 ], [ %12, %18 ]
  %24 = icmp eq %"struct.std::__1::__hash_node_base.371"* %9, null
  br i1 %24, label %25, label %52

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.std::__1::__hash_table.367", %"class.std::__1::__hash_table.367"* %0, i64 0, i32 1, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371", %"struct.std::__1::__hash_node_base.371"* %26, i64 0, i32 0
  %28 = bitcast %"struct.std::__1::__hash_node_base.371"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node.401", %"struct.std::__1::__hash_node.401"* %1, i64 0, i32 0, i32 0
  %31 = bitcast %"struct.std::__1::__hash_node.401"* %1 to i64*
  store i64 %29, i64* %31, align 8
  store %"struct.std::__1::__hash_node_base.371"* %8, %"struct.std::__1::__hash_node_base.371"** %27, align 8
  %32 = getelementptr inbounds %"class.std::__1::__hash_table.367", %"class.std::__1::__hash_table.367"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.371"**, %"struct.std::__1::__hash_node_base.371"*** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %33, i64 %23
  store %"struct.std::__1::__hash_node_base.371"* %26, %"struct.std::__1::__hash_node_base.371"** %34, align 8
  %35 = load %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %30, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base.371"* %35, null
  br i1 %36, label %78, label %37

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371", %"struct.std::__1::__hash_node_base.371"* %35, i64 1
  %39 = bitcast %"struct.std::__1::__hash_node_base.371"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  br i1 %14, label %44, label %41

41:                                               ; preds = %37
  %42 = add i64 %11, -1
  %43 = and i64 %40, %42
  br label %48

44:                                               ; preds = %37
  %45 = icmp ult i64 %40, %11
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = urem i64 %40, %11
  br label %48

48:                                               ; preds = %46, %44, %41
  %49 = phi i64 [ %43, %41 ], [ %47, %46 ], [ %40, %44 ]
  %50 = load %"struct.std::__1::__hash_node_base.371"**, %"struct.std::__1::__hash_node_base.371"*** %32, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %50, i64 %49
  store %"struct.std::__1::__hash_node_base.371"* %8, %"struct.std::__1::__hash_node_base.371"** %51, align 8
  br label %78

52:                                               ; preds = %22
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371", %"struct.std::__1::__hash_node_base.371"* %9, i64 0, i32 0
  %54 = bitcast %"struct.std::__1::__hash_node_base.371"* %9 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node.401", %"struct.std::__1::__hash_node.401"* %1, i64 0, i32 0, i32 0
  %57 = bitcast %"struct.std::__1::__hash_node.401"* %1 to i64*
  store i64 %55, i64* %57, align 8
  store %"struct.std::__1::__hash_node_base.371"* %8, %"struct.std::__1::__hash_node_base.371"** %53, align 8
  %58 = load %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %56, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base.371"* %58, null
  br i1 %59, label %78, label %60

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371", %"struct.std::__1::__hash_node_base.371"* %58, i64 1
  %62 = bitcast %"struct.std::__1::__hash_node_base.371"* %61 to i64*
  %63 = load i64, i64* %62, align 8
  br i1 %14, label %67, label %64

64:                                               ; preds = %60
  %65 = add i64 %11, -1
  %66 = and i64 %63, %65
  br label %71

67:                                               ; preds = %60
  %68 = icmp ult i64 %63, %11
  br i1 %68, label %71, label %69

69:                                               ; preds = %67
  %70 = urem i64 %63, %11
  br label %71

71:                                               ; preds = %69, %67, %64
  %72 = phi i64 [ %66, %64 ], [ %70, %69 ], [ %63, %67 ]
  %73 = icmp eq i64 %72, %23
  br i1 %73, label %78, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.std::__1::__hash_table.367", %"class.std::__1::__hash_table.367"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = load %"struct.std::__1::__hash_node_base.371"**, %"struct.std::__1::__hash_node_base.371"*** %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %76, i64 %72
  store %"struct.std::__1::__hash_node_base.371"* %8, %"struct.std::__1::__hash_node_base.371"** %77, align 8
  br label %78

78:                                               ; preds = %25, %48, %52, %71, %74
  %79 = getelementptr inbounds %"class.std::__1::__hash_table.367", %"class.std::__1::__hash_table.367"* %0, i64 0, i32 2, i32 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, 1
  store i64 %81, i64* %79, align 8
  ret %"struct.std::__1::__hash_node_base.371"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.371"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE27__node_insert_multi_prepareEmRS2_(%"class.std::__1::__hash_table.367"*, i64, %"struct.std::__1::__hash_value_type.402"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.367", %"class.std::__1::__hash_table.367"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.367", %"class.std::__1::__hash_table.367"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 1
  %9 = uitofp i64 %8 to float
  %10 = uitofp i64 %5 to float
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.367", %"class.std::__1::__hash_table.367"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load float, float* %11, align 4
  %13 = fmul float %12, %10
  %14 = fcmp olt float %13, %9
  %15 = icmp eq i64 %5, 0
  %16 = or i1 %15, %14
  br i1 %16, label %17, label %31

17:                                               ; preds = %3
  %18 = shl i64 %5, 1
  %19 = icmp ult i64 %5, 3
  %20 = tail call i64 @llvm.ctpop.i64(i64 %5) #17, !range !5
  %21 = icmp ugt i64 %20, 1
  %22 = or i1 %19, %21
  %23 = zext i1 %22 to i64
  %24 = or i64 %18, %23
  %25 = fdiv float %9, %12
  %26 = tail call float @llvm.ceil.f32(float %25) #17
  %27 = fptoui float %26 to i64
  %28 = icmp ult i64 %24, %27
  %29 = select i1 %28, i64 %27, i64 %24
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.367"* %0, i64 %29)
  %30 = load i64, i64* %4, align 8
  br label %31

31:                                               ; preds = %3, %17
  %32 = phi i64 [ %30, %17 ], [ %5, %3 ]
  %33 = tail call i64 @llvm.ctpop.i64(i64 %32) #17, !range !5
  %34 = icmp ugt i64 %33, 1
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = add i64 %32, -1
  %37 = and i64 %36, %1
  br label %42

38:                                               ; preds = %31
  %39 = icmp ugt i64 %32, %1
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = urem i64 %1, %32
  br label %42

42:                                               ; preds = %35, %38, %40
  %43 = phi i64 [ %37, %35 ], [ %41, %40 ], [ %1, %38 ]
  %44 = getelementptr inbounds %"class.std::__1::__hash_table.367", %"class.std::__1::__hash_table.367"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.371"**, %"struct.std::__1::__hash_node_base.371"*** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %45, i64 %43
  %47 = load %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.371"* %47, null
  br i1 %48, label %88, label %49

49:                                               ; preds = %42
  %50 = add i64 %32, -1
  %51 = getelementptr inbounds %"struct.std::__1::__hash_value_type.402", %"struct.std::__1::__hash_value_type.402"* %2, i64 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  br label %53

53:                                               ; preds = %49, %82
  %54 = phi %"struct.std::__1::__hash_node_base.371"* [ %57, %82 ], [ %47, %49 ]
  %55 = phi i8 [ %87, %82 ], [ 0, %49 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371", %"struct.std::__1::__hash_node_base.371"* %54, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base.371"* %57, null
  br i1 %58, label %88, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371", %"struct.std::__1::__hash_node_base.371"* %57, i64 1
  %61 = bitcast %"struct.std::__1::__hash_node_base.371"* %60 to i64*
  %62 = load i64, i64* %61, align 8
  br i1 %34, label %65, label %63

63:                                               ; preds = %59
  %64 = and i64 %62, %50
  br label %69

65:                                               ; preds = %59
  %66 = icmp ult i64 %62, %32
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %62, %32
  br label %69

69:                                               ; preds = %63, %65, %67
  %70 = phi i64 [ %64, %63 ], [ %68, %67 ], [ %62, %65 ]
  %71 = icmp eq i64 %70, %43
  br i1 %71, label %72, label %88

72:                                               ; preds = %69
  %73 = and i8 %55, 1
  %74 = icmp eq i8 %73, 0
  %75 = zext i8 %73 to i32
  %76 = icmp eq i64 %62, %1
  br i1 %76, label %77, label %82

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371", %"struct.std::__1::__hash_node_base.371"* %57, i64 2
  %79 = bitcast %"struct.std::__1::__hash_node_base.371"* %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, %52
  br label %82

82:                                               ; preds = %77, %72
  %83 = phi i1 [ false, %72 ], [ %81, %77 ]
  %84 = zext i1 %83 to i32
  %85 = icmp eq i32 %75, %84
  %86 = or i1 %74, %85
  %87 = select i1 %85, i8 %55, i8 1
  br i1 %86, label %53, label %88

88:                                               ; preds = %82, %53, %69, %42
  %89 = phi %"struct.std::__1::__hash_node_base.371"* [ null, %42 ], [ %54, %69 ], [ %54, %53 ], [ %54, %82 ]
  ret %"struct.std::__1::__hash_node_base.371"* %89
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.367"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !5
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #17
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.367", %"class.std::__1::__hash_table.367"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.367"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #17, !range !5
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.367", %"class.std::__1::__hash_table.367"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.367", %"class.std::__1::__hash_table.367"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #17
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #17, !range !5
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #17
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.367"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.367"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.367", %"class.std::__1::__hash_table.367"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #19
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #18
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.367", %"class.std::__1::__hash_table.367"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.371"**, %"struct.std::__1::__hash_node_base.371"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.367"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.371"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.371"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #18
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.373", %"class.std::__1::__bucket_list_deallocator.373"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.371"**, %"struct.std::__1::__hash_node_base.371"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.371"* null, %"struct.std::__1::__hash_node_base.371"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !144

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.367", %"class.std::__1::__hash_table.367"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371", %"struct.std::__1::__hash_node_base.371"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.371"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.371"**, %"struct.std::__1::__hash_node_base.371"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.371"* null, %"struct.std::__1::__hash_node_base.371"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.371"**, %"struct.std::__1::__hash_node_base.371"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.371"* null, %"struct.std::__1::__hash_node_base.371"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.371"**, %"struct.std::__1::__hash_node_base.371"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.371"* null, %"struct.std::__1::__hash_node_base.371"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.371"**, %"struct.std::__1::__hash_node_base.371"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.371"* null, %"struct.std::__1::__hash_node_base.371"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371", %"struct.std::__1::__hash_node_base.371"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.371"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #17, !range !5
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.371"**, %"struct.std::__1::__hash_node_base.371"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.371"* %36, %"struct.std::__1::__hash_node_base.371"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371", %"struct.std::__1::__hash_node_base.371"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.371"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.371"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.371"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371", %"struct.std::__1::__hash_node_base.371"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.371"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.371"**, %"struct.std::__1::__hash_node_base.371"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.371"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371", %"struct.std::__1::__hash_node_base.371"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.371"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.371"* %82, %"struct.std::__1::__hash_node_base.371"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.371"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371", %"struct.std::__1::__hash_node_base.371"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.371"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371", %"struct.std::__1::__hash_node_base.371"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.371"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.371"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.371"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.371"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.371"**, %"struct.std::__1::__hash_node_base.371"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.371"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.371"**, %"struct.std::__1::__hash_node_base.371"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371", %"struct.std::__1::__hash_node_base.371"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.371"* %80, %"struct.std::__1::__hash_node_base.371"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.371"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371", %"struct.std::__1::__hash_node_base.371"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.371"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.367", %"class.std::__1::__hash_table.367"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.371"**, %"struct.std::__1::__hash_node_base.371"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.371"** null, %"struct.std::__1::__hash_node_base.371"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.371"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.371"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #18
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.373", %"class.std::__1::__bucket_list_deallocator.373"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE27__node_insert_multi_prepareEmRS7_(%"class.std::__1::__hash_table"*, i64, %"struct.std::__1::__hash_value_type"* dereferenceable(384)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 1
  %9 = uitofp i64 %8 to float
  %10 = uitofp i64 %5 to float
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load float, float* %11, align 4
  %13 = fmul float %12, %10
  %14 = fcmp olt float %13, %9
  %15 = icmp eq i64 %5, 0
  %16 = or i1 %15, %14
  br i1 %16, label %17, label %31

17:                                               ; preds = %3
  %18 = shl i64 %5, 1
  %19 = icmp ult i64 %5, 3
  %20 = tail call i64 @llvm.ctpop.i64(i64 %5) #17, !range !5
  %21 = icmp ugt i64 %20, 1
  %22 = or i1 %19, %21
  %23 = zext i1 %22 to i64
  %24 = or i64 %18, %23
  %25 = fdiv float %9, %12
  %26 = tail call float @llvm.ceil.f32(float %25) #17
  %27 = fptoui float %26 to i64
  %28 = icmp ult i64 %24, %27
  %29 = select i1 %28, i64 %27, i64 %24
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %29)
  %30 = load i64, i64* %4, align 8
  br label %31

31:                                               ; preds = %3, %17
  %32 = phi i64 [ %30, %17 ], [ %5, %3 ]
  %33 = tail call i64 @llvm.ctpop.i64(i64 %32) #17, !range !5
  %34 = icmp ugt i64 %33, 1
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = add i64 %32, -1
  %37 = and i64 %36, %1
  br label %42

38:                                               ; preds = %31
  %39 = icmp ugt i64 %32, %1
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = urem i64 %1, %32
  br label %42

42:                                               ; preds = %35, %38, %40
  %43 = phi i64 [ %37, %35 ], [ %41, %40 ], [ %1, %38 ]
  %44 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %45, i64 %43
  %47 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base"* %47, null
  br i1 %48, label %88, label %49

49:                                               ; preds = %42
  %50 = add i64 %32, -1
  %51 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %2, i64 0, i32 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  br label %53

53:                                               ; preds = %49, %82
  %54 = phi %"struct.std::__1::__hash_node_base"* [ %57, %82 ], [ %47, %49 ]
  %55 = phi i8 [ %87, %82 ], [ 0, %49 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base"* %57, null
  br i1 %58, label %88, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 1
  %61 = bitcast %"struct.std::__1::__hash_node_base"* %60 to i64*
  %62 = load i64, i64* %61, align 8
  br i1 %34, label %65, label %63

63:                                               ; preds = %59
  %64 = and i64 %62, %50
  br label %69

65:                                               ; preds = %59
  %66 = icmp ult i64 %62, %32
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %62, %32
  br label %69

69:                                               ; preds = %63, %65, %67
  %70 = phi i64 [ %64, %63 ], [ %68, %67 ], [ %62, %65 ]
  %71 = icmp eq i64 %70, %43
  br i1 %71, label %72, label %88

72:                                               ; preds = %69
  %73 = and i8 %55, 1
  %74 = icmp eq i8 %73, 0
  %75 = zext i8 %73 to i32
  %76 = icmp eq i64 %62, %1
  br i1 %76, label %77, label %82

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 2
  %79 = bitcast %"struct.std::__1::__hash_node_base"* %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, %52
  br label %82

82:                                               ; preds = %77, %72
  %83 = phi i1 [ false, %72 ], [ %81, %77 ]
  %84 = zext i1 %83 to i32
  %85 = icmp eq i32 %75, %84
  %86 = or i1 %74, %85
  %87 = select i1 %85, i8 %55, i8 1
  br i1 %86, label %53, label %88

88:                                               ; preds = %82, %53, %69, %42
  %89 = phi %"struct.std::__1::__hash_node_base"* [ null, %42 ], [ %54, %69 ], [ %54, %53 ], [ %54, %82 ]
  ret %"struct.std::__1::__hash_node_base"* %89
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !5
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #17
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #17, !range !5
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #17
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #17, !range !5
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #17
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #19
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #18
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #18
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !145

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #17, !range !5
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = load i32, i32* %102, align 4
  %112 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %111, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #18
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14pairIKN11spirv_cross7TypedIDILNS1_5TypesE0EEENS1_4MetaEEC2ERKS7_(%"struct.std::__1::pair.392"*, %"struct.std::__1::pair.392"* dereferenceable(384)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::pair.392", %"struct.std::__1::pair.392"* %1, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.std::__1::pair.392", %"struct.std::__1::pair.392"* %0, i64 0, i32 0, i32 0
  %5 = load i32, i32* %3, align 8
  store i32 %5, i32* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::pair.392", %"struct.std::__1::pair.392"* %0, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"struct.std::__1::pair.392", %"struct.std::__1::pair.392"* %1, i64 0, i32 1, i32 0
  tail call void @_ZN11spirv_cross4Meta10DecorationC2ERKS1_(%"struct.spirv_cross::Meta::Decoration"* %6, %"struct.spirv_cross::Meta::Decoration"* dereferenceable(296) %7) #17
  %8 = getelementptr inbounds %"struct.std::__1::pair.392", %"struct.std::__1::pair.392"* %0, i64 0, i32 1, i32 1
  %9 = bitcast %"class.spirv_cross::SmallVector.362"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #17
  %10 = icmp eq %"struct.std::__1::pair.392"* %0, %1
  br i1 %10, label %31, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::pair.392", %"struct.std::__1::pair.392"* %0, i64 0, i32 1, i32 1, i32 0, i32 1
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"struct.std::__1::pair.392", %"struct.std::__1::pair.392"* %1, i64 0, i32 1, i32 1, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  tail call void @_ZN11spirv_cross11SmallVectorINS_4Meta10DecorationELm0EE7reserveEm(%"class.spirv_cross::SmallVector.362"* %8, i64 %14) #17
  %15 = load i64, i64* %13, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.spirv_cross::SmallVector.362", %"class.spirv_cross::SmallVector.362"* %8, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::__1::pair.392", %"struct.std::__1::pair.392"* %1, i64 0, i32 1, i32 1, i32 0, i32 0
  br label %22

20:                                               ; preds = %22, %11
  %21 = phi i64 [ 0, %11 ], [ %29, %22 ]
  store i64 %21, i64* %12, align 8
  br label %31

22:                                               ; preds = %22, %17
  %23 = phi i64 [ 0, %17 ], [ %28, %22 ]
  %24 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %18, align 8
  %25 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %24, i64 %23
  %26 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %19, align 8
  %27 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %26, i64 %23
  tail call void @_ZN11spirv_cross4Meta10DecorationC2ERKS1_(%"struct.spirv_cross::Meta::Decoration"* %25, %"struct.spirv_cross::Meta::Decoration"* dereferenceable(296) %27) #17
  %28 = add nuw i64 %23, 1
  %29 = load i64, i64* %13, align 8
  %30 = icmp ult i64 %28, %29
  br i1 %30, label %22, label %20

31:                                               ; preds = %20, %2
  %32 = getelementptr inbounds %"struct.std::__1::pair.392", %"struct.std::__1::pair.392"* %0, i64 0, i32 1, i32 2
  %33 = getelementptr inbounds %"class.std::__1::unordered_map.366", %"class.std::__1::unordered_map.366"* %32, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.std::__1::pair.392", %"struct.std::__1::pair.392"* %0, i64 0, i32 1, i32 2, i32 0, i32 3
  %35 = getelementptr inbounds %"struct.std::__1::pair.392", %"struct.std::__1::pair.392"* %1, i64 0, i32 1, i32 2, i32 0, i32 3
  %36 = bitcast %"class.std::__1::__compressed_pair.386"* %35 to i32*
  %37 = bitcast %"class.std::__1::__compressed_pair.386"* %34 to i32*
  %38 = bitcast %"class.std::__1::unordered_map.366"* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 32, i1 false) #17
  %39 = load i32, i32* %36, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.std::__1::pair.392", %"struct.std::__1::pair.392"* %1, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.367"* %33, i64 %41) #17
  %42 = getelementptr inbounds %"struct.std::__1::pair.392", %"struct.std::__1::pair.392"* %1, i64 0, i32 1, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base.371"* %43, null
  br i1 %44, label %56, label %45

45:                                               ; preds = %31
  %46 = ptrtoint %"struct.std::__1::__hash_node_base.371"* %43 to i64
  br label %47

47:                                               ; preds = %47, %45
  %48 = phi i64 [ %46, %45 ], [ %54, %47 ]
  %49 = inttoptr i64 %48 to %"struct.std::__1::__hash_node.401"*
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node.401", %"struct.std::__1::__hash_node.401"* %49, i64 0, i32 2, i32 0
  %51 = getelementptr inbounds %"struct.std::__1::pair.403", %"struct.std::__1::pair.403"* %50, i64 0, i32 0
  %52 = tail call { %"struct.std::__1::__hash_node_base.371"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_4pairIKjjEEEEENSF_INS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.367"* %33, i32* dereferenceable(4) %51, %"struct.std::__1::pair.403"* dereferenceable(8) %50) #17
  %53 = inttoptr i64 %48 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %47

56:                                               ; preds = %47, %31
  %57 = getelementptr inbounds %"struct.std::__1::pair.392", %"struct.std::__1::pair.392"* %0, i64 0, i32 1, i32 3
  %58 = getelementptr inbounds %"struct.std::__1::pair.392", %"struct.std::__1::pair.392"* %1, i64 0, i32 1, i32 3
  %59 = bitcast i8* %58 to i64*
  %60 = bitcast i8* %57 to i64*
  %61 = load i64, i64* %59, align 8
  store i64 %61, i64* %60, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.371"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_4pairIKjjEEEEENSF_INS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.367"*, i32* dereferenceable(4), %"struct.std::__1::pair.403"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.367", %"class.std::__1::__hash_table.367"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #17, !range !5
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.367", %"class.std::__1::__hash_table.367"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.371"**, %"struct.std::__1::__hash_node_base.371"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.371"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.371"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371", %"struct.std::__1::__hash_node_base.371"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.371"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371", %"struct.std::__1::__hash_node_base.371"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.371"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371", %"struct.std::__1::__hash_node_base.371"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.371"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %141, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #18, !noalias !146
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast %"struct.std::__1::pair.403"* %2 to i64*
  %58 = bitcast i8* %56 to i64*
  %59 = load i64, i64* %57, align 4, !noalias !146
  store i64 %59, i64* %58, align 4, !noalias !146
  %60 = getelementptr inbounds i8, i8* %55, i64 8
  %61 = bitcast i8* %60 to i64*
  store i64 %5, i64* %61, align 8, !noalias !146
  %62 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.371"**
  store %"struct.std::__1::__hash_node_base.371"* null, %"struct.std::__1::__hash_node_base.371"** %62, align 8, !noalias !146
  %63 = getelementptr inbounds %"class.std::__1::__hash_table.367", %"class.std::__1::__hash_table.367"* %0, i64 0, i32 2, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 1
  %66 = uitofp i64 %65 to float
  %67 = uitofp i64 %7 to float
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.367", %"class.std::__1::__hash_table.367"* %0, i64 0, i32 3, i32 0, i32 0
  %69 = load float, float* %68, align 4
  %70 = fmul float %69, %67
  %71 = fcmp olt float %70, %66
  %72 = or i1 %8, %71
  br i1 %72, label %73, label %96

73:                                               ; preds = %53
  %74 = shl i64 %7, 1
  %75 = icmp ult i64 %7, 3
  %76 = tail call i64 @llvm.ctpop.i64(i64 %7) #17, !range !5
  %77 = icmp ugt i64 %76, 1
  %78 = or i1 %75, %77
  %79 = zext i1 %78 to i64
  %80 = or i64 %74, %79
  %81 = fdiv float %66, %69
  %82 = tail call float @llvm.ceil.f32(float %81) #17
  %83 = fptoui float %82 to i64
  %84 = icmp ult i64 %80, %83
  %85 = select i1 %84, i64 %83, i64 %80
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.367"* %0, i64 %85)
  %86 = load i64, i64* %6, align 8
  %87 = tail call i64 @llvm.ctpop.i64(i64 %86) #17, !range !5
  %88 = icmp ugt i64 %87, 1
  br i1 %88, label %92, label %89

89:                                               ; preds = %73
  %90 = add i64 %86, 4294967295
  %91 = and i64 %90, %5
  br label %96

92:                                               ; preds = %73
  %93 = icmp ugt i64 %86, %5
  br i1 %93, label %96, label %94

94:                                               ; preds = %92
  %95 = urem i64 %5, %86
  br label %96

96:                                               ; preds = %94, %92, %89, %53
  %97 = phi i64 [ %7, %53 ], [ %86, %89 ], [ %86, %92 ], [ %86, %94 ]
  %98 = phi i64 [ %54, %53 ], [ %91, %89 ], [ %5, %92 ], [ %95, %94 ]
  %99 = getelementptr inbounds %"class.std::__1::__hash_table.367", %"class.std::__1::__hash_table.367"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.371"**, %"struct.std::__1::__hash_node_base.371"*** %99, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %100, i64 %98
  %102 = load %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.371"* %102, null
  br i1 %103, label %104, label %130

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.std::__1::__hash_table.367", %"class.std::__1::__hash_table.367"* %0, i64 0, i32 1, i32 0, i32 0
  %106 = bitcast %"struct.std::__1::__hash_node_base.371"* %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast i8* %55 to i64*
  store i64 %107, i64* %108, align 8
  %109 = bitcast %"struct.std::__1::__hash_node_base.371"* %105 to i8**
  store i8* %55, i8** %109, align 8
  store %"struct.std::__1::__hash_node_base.371"* %105, %"struct.std::__1::__hash_node_base.371"** %101, align 8
  %110 = load %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %62, align 8
  %111 = icmp eq %"struct.std::__1::__hash_node_base.371"* %110, null
  br i1 %111, label %137, label %112

112:                                              ; preds = %104
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371", %"struct.std::__1::__hash_node_base.371"* %110, i64 1
  %114 = bitcast %"struct.std::__1::__hash_node_base.371"* %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = tail call i64 @llvm.ctpop.i64(i64 %97) #17, !range !5
  %117 = icmp ugt i64 %116, 1
  br i1 %117, label %121, label %118

118:                                              ; preds = %112
  %119 = add i64 %97, -1
  %120 = and i64 %115, %119
  br label %125

121:                                              ; preds = %112
  %122 = icmp ult i64 %115, %97
  br i1 %122, label %125, label %123

123:                                              ; preds = %121
  %124 = urem i64 %115, %97
  br label %125

125:                                              ; preds = %118, %121, %123
  %126 = phi i64 [ %120, %118 ], [ %124, %123 ], [ %115, %121 ]
  %127 = load %"struct.std::__1::__hash_node_base.371"**, %"struct.std::__1::__hash_node_base.371"*** %99, align 8
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base.371"*, %"struct.std::__1::__hash_node_base.371"** %127, i64 %126
  %129 = bitcast %"struct.std::__1::__hash_node_base.371"** %128 to i8**
  br label %135

130:                                              ; preds = %96
  %131 = bitcast %"struct.std::__1::__hash_node_base.371"* %102 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast i8* %55 to i64*
  store i64 %132, i64* %133, align 8
  %134 = bitcast %"struct.std::__1::__hash_node_base.371"* %102 to i8**
  br label %135

135:                                              ; preds = %125, %130
  %136 = phi i8** [ %134, %130 ], [ %129, %125 ]
  store i8* %55, i8** %136, align 8
  br label %137

137:                                              ; preds = %135, %104
  %138 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.371"*
  %139 = load i64, i64* %63, align 8
  %140 = add i64 %139, 1
  store i64 %140, i64* %63, align 8
  br label %141

141:                                              ; preds = %48, %137
  %142 = phi i8 [ 1, %137 ], [ 0, %48 ]
  %143 = phi %"struct.std::__1::__hash_node_base.371"* [ %138, %137 ], [ %31, %48 ]
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.371"*, i8 } undef, %"struct.std::__1::__hash_node_base.371"* %143, 0
  %145 = insertvalue { %"struct.std::__1::__hash_node_base.371"*, i8 } %144, i8 %142, 1
  ret { %"struct.std::__1::__hash_node_base.371"*, i8 } %145
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE6EEES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEEEEvT_SP_(%"class.std::__1::__hash_table.47"*, %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::__hash_node_base.51"* %1 to i64
  %5 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %76, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = add i64 %6, -1
  %11 = and i64 %6, 3
  %12 = icmp ult i64 %10, 3
  br i1 %12, label %32, label %13

13:                                               ; preds = %8
  %14 = sub i64 %6, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i64 [ 0, %13 ], [ %29, %15 ]
  %17 = phi i64 [ %14, %13 ], [ %30, %15 ]
  %18 = load %"struct.std::__1::__hash_node_base.51"**, %"struct.std::__1::__hash_node_base.51"*** %9, align 8
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %18, i64 %16
  store %"struct.std::__1::__hash_node_base.51"* null, %"struct.std::__1::__hash_node_base.51"** %19, align 8
  %20 = or i64 %16, 1
  %21 = load %"struct.std::__1::__hash_node_base.51"**, %"struct.std::__1::__hash_node_base.51"*** %9, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %21, i64 %20
  store %"struct.std::__1::__hash_node_base.51"* null, %"struct.std::__1::__hash_node_base.51"** %22, align 8
  %23 = or i64 %16, 2
  %24 = load %"struct.std::__1::__hash_node_base.51"**, %"struct.std::__1::__hash_node_base.51"*** %9, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %24, i64 %23
  store %"struct.std::__1::__hash_node_base.51"* null, %"struct.std::__1::__hash_node_base.51"** %25, align 8
  %26 = or i64 %16, 3
  %27 = load %"struct.std::__1::__hash_node_base.51"**, %"struct.std::__1::__hash_node_base.51"*** %9, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %27, i64 %26
  store %"struct.std::__1::__hash_node_base.51"* null, %"struct.std::__1::__hash_node_base.51"** %28, align 8
  %29 = add nuw i64 %16, 4
  %30 = add i64 %17, -4
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %15

32:                                               ; preds = %15, %8
  %33 = phi i64 [ 0, %8 ], [ %29, %15 ]
  %34 = icmp eq i64 %11, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %32, %35
  %36 = phi i64 [ %40, %35 ], [ %33, %32 ]
  %37 = phi i64 [ %41, %35 ], [ %11, %32 ]
  %38 = load %"struct.std::__1::__hash_node_base.51"**, %"struct.std::__1::__hash_node_base.51"*** %9, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %38, i64 %36
  store %"struct.std::__1::__hash_node_base.51"* null, %"struct.std::__1::__hash_node_base.51"** %39, align 8
  %40 = add nuw i64 %36, 1
  %41 = add i64 %37, -1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %35, !llvm.loop !149

43:                                               ; preds = %35, %32
  %44 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %45, align 8
  store %"struct.std::__1::__hash_node_base.51"* null, %"struct.std::__1::__hash_node_base.51"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.51"* %46, null
  br i1 %47, label %76, label %48

48:                                               ; preds = %43, %53
  %49 = phi %"struct.std::__1::__hash_node_base.51"* [ %65, %53 ], [ %46, %43 ]
  %50 = phi i64 [ %68, %53 ], [ %4, %43 ]
  %51 = inttoptr i64 %50 to %"struct.std::__1::__hash_node_base.51"*
  %52 = icmp eq %"struct.std::__1::__hash_node_base.51"* %51, %2
  br i1 %52, label %70, label %53

53:                                               ; preds = %48
  %54 = bitcast %"struct.std::__1::__hash_node_base.51"* %49 to %"struct.std::__1::__hash_node.404"*
  %55 = inttoptr i64 %50 to %"struct.std::__1::__hash_node.404"*
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51", %"struct.std::__1::__hash_node_base.51"* %49, i64 2
  %57 = bitcast %"struct.std::__1::__hash_node_base.51"* %56 to %"struct.std::__1::__hash_value_type.405"*
  %58 = bitcast %"struct.std::__1::__hash_node_base.51"* %56 to i32*
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node.404", %"struct.std::__1::__hash_node.404"* %55, i64 0, i32 2, i32 0, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  store i32 %60, i32* %58, align 4
  %61 = getelementptr inbounds %"struct.std::__1::__hash_value_type.405", %"struct.std::__1::__hash_value_type.405"* %57, i64 0, i32 0, i32 1, i32 0
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node.404", %"struct.std::__1::__hash_node.404"* %55, i64 0, i32 2, i32 0, i32 1, i32 0
  %63 = load i32, i32* %62, align 4
  store i32 %63, i32* %61, align 4
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51", %"struct.std::__1::__hash_node_base.51"* %49, i64 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %64, align 8
  %66 = tail call %"struct.std::__1::__hash_node_base.51"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE6EEES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE19__node_insert_multiEPNS_11__hash_nodeIS6_PvEE(%"class.std::__1::__hash_table.47"* %0, %"struct.std::__1::__hash_node.404"* %54)
  %67 = inttoptr i64 %50 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.51"* %65, null
  br i1 %69, label %76, label %48

70:                                               ; preds = %48, %70
  %71 = phi %"struct.std::__1::__hash_node_base.51"* [ %73, %70 ], [ %49, %48 ]
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51", %"struct.std::__1::__hash_node_base.51"* %71, i64 0, i32 0
  %73 = load %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %72, align 8
  %74 = bitcast %"struct.std::__1::__hash_node_base.51"* %71 to i8*
  tail call void @_ZdlPv(i8* %74) #18
  %75 = icmp eq %"struct.std::__1::__hash_node_base.51"* %73, null
  br i1 %75, label %76, label %70

76:                                               ; preds = %53, %70, %43, %3
  %77 = phi i64 [ %4, %3 ], [ %4, %43 ], [ %50, %70 ], [ %68, %53 ]
  %78 = inttoptr i64 %77 to %"struct.std::__1::__hash_node_base.51"*
  %79 = icmp eq %"struct.std::__1::__hash_node_base.51"* %78, %2
  br i1 %79, label %99, label %80

80:                                               ; preds = %76, %80
  %81 = phi i64 [ %96, %80 ], [ %77, %76 ]
  %82 = inttoptr i64 %81 to %"struct.std::__1::__hash_node.404"*
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node.404", %"struct.std::__1::__hash_node.404"* %82, i64 0, i32 2, i32 0
  %84 = tail call i8* @_Znwm(i64 24) #18, !noalias !150
  %85 = getelementptr inbounds i8, i8* %84, i64 16
  %86 = bitcast %"struct.std::__1::pair.406"* %83 to i64*
  %87 = bitcast i8* %85 to i64*
  %88 = load i64, i64* %86, align 4, !noalias !150
  store i64 %88, i64* %87, align 4, !noalias !150
  %89 = and i64 %88, 4294967295
  %90 = getelementptr inbounds i8, i8* %84, i64 8
  %91 = bitcast i8* %90 to i64*
  store i64 %89, i64* %91, align 8, !noalias !150
  %92 = bitcast i8* %84 to %"struct.std::__1::__hash_node_base.51"**
  store %"struct.std::__1::__hash_node_base.51"* null, %"struct.std::__1::__hash_node_base.51"** %92, align 8, !noalias !150
  %93 = bitcast i8* %84 to %"struct.std::__1::__hash_node.404"*
  %94 = tail call %"struct.std::__1::__hash_node_base.51"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE6EEES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE19__node_insert_multiEPNS_11__hash_nodeIS6_PvEE(%"class.std::__1::__hash_table.47"* %0, %"struct.std::__1::__hash_node.404"* nonnull %93) #17
  %95 = inttoptr i64 %81 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = inttoptr i64 %96 to %"struct.std::__1::__hash_node_base.51"*
  %98 = icmp eq %"struct.std::__1::__hash_node_base.51"* %97, %2
  br i1 %98, label %99, label %80

99:                                               ; preds = %80, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.51"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE6EEES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE19__node_insert_multiEPNS_11__hash_nodeIS6_PvEE(%"class.std::__1::__hash_table.47"*, %"struct.std::__1::__hash_node.404"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__hash_node.404", %"struct.std::__1::__hash_node.404"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"struct.std::__1::__hash_value_type.405", %"struct.std::__1::__hash_value_type.405"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node.404", %"struct.std::__1::__hash_node.404"* %1, i64 0, i32 1
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node.404", %"struct.std::__1::__hash_node.404"* %1, i64 0, i32 0
  %9 = tail call %"struct.std::__1::__hash_node_base.51"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE6EEES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE27__node_insert_multi_prepareEmRS6_(%"class.std::__1::__hash_table.47"* %0, i64 %6, %"struct.std::__1::__hash_value_type.405"* dereferenceable(8) %3)
  %10 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = load i64, i64* %7, align 8
  %13 = tail call i64 @llvm.ctpop.i64(i64 %11) #17, !range !5
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = add i64 %11, -1
  %17 = and i64 %16, %12
  br label %22

18:                                               ; preds = %2
  %19 = icmp ult i64 %12, %11
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = urem i64 %12, %11
  br label %22

22:                                               ; preds = %20, %18, %15
  %23 = phi i64 [ %17, %15 ], [ %21, %20 ], [ %12, %18 ]
  %24 = icmp eq %"struct.std::__1::__hash_node_base.51"* %9, null
  br i1 %24, label %25, label %52

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 1, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51", %"struct.std::__1::__hash_node_base.51"* %26, i64 0, i32 0
  %28 = bitcast %"struct.std::__1::__hash_node_base.51"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node.404", %"struct.std::__1::__hash_node.404"* %1, i64 0, i32 0, i32 0
  %31 = bitcast %"struct.std::__1::__hash_node.404"* %1 to i64*
  store i64 %29, i64* %31, align 8
  store %"struct.std::__1::__hash_node_base.51"* %8, %"struct.std::__1::__hash_node_base.51"** %27, align 8
  %32 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.51"**, %"struct.std::__1::__hash_node_base.51"*** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %33, i64 %23
  store %"struct.std::__1::__hash_node_base.51"* %26, %"struct.std::__1::__hash_node_base.51"** %34, align 8
  %35 = load %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %30, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base.51"* %35, null
  br i1 %36, label %78, label %37

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51", %"struct.std::__1::__hash_node_base.51"* %35, i64 1
  %39 = bitcast %"struct.std::__1::__hash_node_base.51"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  br i1 %14, label %44, label %41

41:                                               ; preds = %37
  %42 = add i64 %11, -1
  %43 = and i64 %40, %42
  br label %48

44:                                               ; preds = %37
  %45 = icmp ult i64 %40, %11
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = urem i64 %40, %11
  br label %48

48:                                               ; preds = %46, %44, %41
  %49 = phi i64 [ %43, %41 ], [ %47, %46 ], [ %40, %44 ]
  %50 = load %"struct.std::__1::__hash_node_base.51"**, %"struct.std::__1::__hash_node_base.51"*** %32, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %50, i64 %49
  store %"struct.std::__1::__hash_node_base.51"* %8, %"struct.std::__1::__hash_node_base.51"** %51, align 8
  br label %78

52:                                               ; preds = %22
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51", %"struct.std::__1::__hash_node_base.51"* %9, i64 0, i32 0
  %54 = bitcast %"struct.std::__1::__hash_node_base.51"* %9 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node.404", %"struct.std::__1::__hash_node.404"* %1, i64 0, i32 0, i32 0
  %57 = bitcast %"struct.std::__1::__hash_node.404"* %1 to i64*
  store i64 %55, i64* %57, align 8
  store %"struct.std::__1::__hash_node_base.51"* %8, %"struct.std::__1::__hash_node_base.51"** %53, align 8
  %58 = load %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %56, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base.51"* %58, null
  br i1 %59, label %78, label %60

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51", %"struct.std::__1::__hash_node_base.51"* %58, i64 1
  %62 = bitcast %"struct.std::__1::__hash_node_base.51"* %61 to i64*
  %63 = load i64, i64* %62, align 8
  br i1 %14, label %67, label %64

64:                                               ; preds = %60
  %65 = add i64 %11, -1
  %66 = and i64 %63, %65
  br label %71

67:                                               ; preds = %60
  %68 = icmp ult i64 %63, %11
  br i1 %68, label %71, label %69

69:                                               ; preds = %67
  %70 = urem i64 %63, %11
  br label %71

71:                                               ; preds = %69, %67, %64
  %72 = phi i64 [ %66, %64 ], [ %70, %69 ], [ %63, %67 ]
  %73 = icmp eq i64 %72, %23
  br i1 %73, label %78, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = load %"struct.std::__1::__hash_node_base.51"**, %"struct.std::__1::__hash_node_base.51"*** %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %76, i64 %72
  store %"struct.std::__1::__hash_node_base.51"* %8, %"struct.std::__1::__hash_node_base.51"** %77, align 8
  br label %78

78:                                               ; preds = %25, %48, %52, %71, %74
  %79 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 2, i32 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, 1
  store i64 %81, i64* %79, align 8
  ret %"struct.std::__1::__hash_node_base.51"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.51"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE6EEES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE27__node_insert_multi_prepareEmRS6_(%"class.std::__1::__hash_table.47"*, i64, %"struct.std::__1::__hash_value_type.405"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 1
  %9 = uitofp i64 %8 to float
  %10 = uitofp i64 %5 to float
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load float, float* %11, align 4
  %13 = fmul float %12, %10
  %14 = fcmp olt float %13, %9
  %15 = icmp eq i64 %5, 0
  %16 = or i1 %15, %14
  br i1 %16, label %17, label %31

17:                                               ; preds = %3
  %18 = shl i64 %5, 1
  %19 = icmp ult i64 %5, 3
  %20 = tail call i64 @llvm.ctpop.i64(i64 %5) #17, !range !5
  %21 = icmp ugt i64 %20, 1
  %22 = or i1 %19, %21
  %23 = zext i1 %22 to i64
  %24 = or i64 %18, %23
  %25 = fdiv float %9, %12
  %26 = tail call float @llvm.ceil.f32(float %25) #17
  %27 = fptoui float %26 to i64
  %28 = icmp ult i64 %24, %27
  %29 = select i1 %28, i64 %27, i64 %24
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE6EEES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.47"* %0, i64 %29)
  %30 = load i64, i64* %4, align 8
  br label %31

31:                                               ; preds = %3, %17
  %32 = phi i64 [ %30, %17 ], [ %5, %3 ]
  %33 = tail call i64 @llvm.ctpop.i64(i64 %32) #17, !range !5
  %34 = icmp ugt i64 %33, 1
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = add i64 %32, -1
  %37 = and i64 %36, %1
  br label %42

38:                                               ; preds = %31
  %39 = icmp ugt i64 %32, %1
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = urem i64 %1, %32
  br label %42

42:                                               ; preds = %35, %38, %40
  %43 = phi i64 [ %37, %35 ], [ %41, %40 ], [ %1, %38 ]
  %44 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.51"**, %"struct.std::__1::__hash_node_base.51"*** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %45, i64 %43
  %47 = load %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.51"* %47, null
  br i1 %48, label %88, label %49

49:                                               ; preds = %42
  %50 = add i64 %32, -1
  %51 = getelementptr inbounds %"struct.std::__1::__hash_value_type.405", %"struct.std::__1::__hash_value_type.405"* %2, i64 0, i32 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  br label %53

53:                                               ; preds = %49, %82
  %54 = phi %"struct.std::__1::__hash_node_base.51"* [ %57, %82 ], [ %47, %49 ]
  %55 = phi i8 [ %87, %82 ], [ 0, %49 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51", %"struct.std::__1::__hash_node_base.51"* %54, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base.51"* %57, null
  br i1 %58, label %88, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51", %"struct.std::__1::__hash_node_base.51"* %57, i64 1
  %61 = bitcast %"struct.std::__1::__hash_node_base.51"* %60 to i64*
  %62 = load i64, i64* %61, align 8
  br i1 %34, label %65, label %63

63:                                               ; preds = %59
  %64 = and i64 %62, %50
  br label %69

65:                                               ; preds = %59
  %66 = icmp ult i64 %62, %32
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %62, %32
  br label %69

69:                                               ; preds = %63, %65, %67
  %70 = phi i64 [ %64, %63 ], [ %68, %67 ], [ %62, %65 ]
  %71 = icmp eq i64 %70, %43
  br i1 %71, label %72, label %88

72:                                               ; preds = %69
  %73 = and i8 %55, 1
  %74 = icmp eq i8 %73, 0
  %75 = zext i8 %73 to i32
  %76 = icmp eq i64 %62, %1
  br i1 %76, label %77, label %82

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51", %"struct.std::__1::__hash_node_base.51"* %57, i64 2
  %79 = bitcast %"struct.std::__1::__hash_node_base.51"* %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, %52
  br label %82

82:                                               ; preds = %77, %72
  %83 = phi i1 [ false, %72 ], [ %81, %77 ]
  %84 = zext i1 %83 to i32
  %85 = icmp eq i32 %75, %84
  %86 = or i1 %74, %85
  %87 = select i1 %85, i8 %55, i8 1
  br i1 %86, label %53, label %88

88:                                               ; preds = %82, %53, %69, %42
  %89 = phi %"struct.std::__1::__hash_node_base.51"* [ null, %42 ], [ %54, %69 ], [ %54, %53 ], [ %54, %82 ]
  ret %"struct.std::__1::__hash_node_base.51"* %89
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE6EEES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.47"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !5
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #17
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE6EEES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.47"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #17, !range !5
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #17
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #17, !range !5
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #17
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE6EEES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.47"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE6EEES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.47"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #19
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #18
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.51"**, %"struct.std::__1::__hash_node_base.51"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.47"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.51"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.51"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #18
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.53", %"class.std::__1::__bucket_list_deallocator.53"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.51"**, %"struct.std::__1::__hash_node_base.51"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.51"* null, %"struct.std::__1::__hash_node_base.51"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !153

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51", %"struct.std::__1::__hash_node_base.51"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.51"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.51"**, %"struct.std::__1::__hash_node_base.51"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.51"* null, %"struct.std::__1::__hash_node_base.51"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.51"**, %"struct.std::__1::__hash_node_base.51"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.51"* null, %"struct.std::__1::__hash_node_base.51"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.51"**, %"struct.std::__1::__hash_node_base.51"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.51"* null, %"struct.std::__1::__hash_node_base.51"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.51"**, %"struct.std::__1::__hash_node_base.51"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.51"* null, %"struct.std::__1::__hash_node_base.51"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51", %"struct.std::__1::__hash_node_base.51"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.51"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #17, !range !5
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.51"**, %"struct.std::__1::__hash_node_base.51"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.51"* %36, %"struct.std::__1::__hash_node_base.51"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51", %"struct.std::__1::__hash_node_base.51"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.51"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.51"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.51"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51", %"struct.std::__1::__hash_node_base.51"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.51"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.51"**, %"struct.std::__1::__hash_node_base.51"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.51"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51", %"struct.std::__1::__hash_node_base.51"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.51"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.51"* %82, %"struct.std::__1::__hash_node_base.51"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.51"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51", %"struct.std::__1::__hash_node_base.51"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.51"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51", %"struct.std::__1::__hash_node_base.51"* %107, i64 2
  %111 = load i32, i32* %102, align 4
  %112 = bitcast %"struct.std::__1::__hash_node_base.51"* %110 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %111, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.51"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.51"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.51"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.51"**, %"struct.std::__1::__hash_node_base.51"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.51"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.51"**, %"struct.std::__1::__hash_node_base.51"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51", %"struct.std::__1::__hash_node_base.51"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.51"* %80, %"struct.std::__1::__hash_node_base.51"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.51"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.51", %"struct.std::__1::__hash_node_base.51"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.51"*, %"struct.std::__1::__hash_node_base.51"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.51"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.47", %"class.std::__1::__hash_table.47"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.51"**, %"struct.std::__1::__hash_node_base.51"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.51"** null, %"struct.std::__1::__hash_node_base.51"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.51"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.51"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #18
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.53", %"class.std::__1::__bucket_list_deallocator.53"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE4EEENS2_14SPIREntryPointEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEEEEvT_SQ_(%"class.std::__1::__hash_table.74"*, %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::__hash_node_base.78"* %1 to i64
  %5 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %81, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = add i64 %6, -1
  %11 = and i64 %6, 3
  %12 = icmp ult i64 %10, 3
  br i1 %12, label %32, label %13

13:                                               ; preds = %8
  %14 = sub i64 %6, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i64 [ 0, %13 ], [ %29, %15 ]
  %17 = phi i64 [ %14, %13 ], [ %30, %15 ]
  %18 = load %"struct.std::__1::__hash_node_base.78"**, %"struct.std::__1::__hash_node_base.78"*** %9, align 8
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %18, i64 %16
  store %"struct.std::__1::__hash_node_base.78"* null, %"struct.std::__1::__hash_node_base.78"** %19, align 8
  %20 = or i64 %16, 1
  %21 = load %"struct.std::__1::__hash_node_base.78"**, %"struct.std::__1::__hash_node_base.78"*** %9, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %21, i64 %20
  store %"struct.std::__1::__hash_node_base.78"* null, %"struct.std::__1::__hash_node_base.78"** %22, align 8
  %23 = or i64 %16, 2
  %24 = load %"struct.std::__1::__hash_node_base.78"**, %"struct.std::__1::__hash_node_base.78"*** %9, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %24, i64 %23
  store %"struct.std::__1::__hash_node_base.78"* null, %"struct.std::__1::__hash_node_base.78"** %25, align 8
  %26 = or i64 %16, 3
  %27 = load %"struct.std::__1::__hash_node_base.78"**, %"struct.std::__1::__hash_node_base.78"*** %9, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %27, i64 %26
  store %"struct.std::__1::__hash_node_base.78"* null, %"struct.std::__1::__hash_node_base.78"** %28, align 8
  %29 = add nuw i64 %16, 4
  %30 = add i64 %17, -4
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %15

32:                                               ; preds = %15, %8
  %33 = phi i64 [ 0, %8 ], [ %29, %15 ]
  %34 = icmp eq i64 %11, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %32, %35
  %36 = phi i64 [ %40, %35 ], [ %33, %32 ]
  %37 = phi i64 [ %41, %35 ], [ %11, %32 ]
  %38 = load %"struct.std::__1::__hash_node_base.78"**, %"struct.std::__1::__hash_node_base.78"*** %9, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %38, i64 %36
  store %"struct.std::__1::__hash_node_base.78"* null, %"struct.std::__1::__hash_node_base.78"** %39, align 8
  %40 = add nuw i64 %36, 1
  %41 = add i64 %37, -1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %35, !llvm.loop !154

43:                                               ; preds = %35, %32
  %44 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %45, align 8
  store %"struct.std::__1::__hash_node_base.78"* null, %"struct.std::__1::__hash_node_base.78"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.78"* %46, null
  br i1 %47, label %81, label %48

48:                                               ; preds = %43, %53
  %49 = phi %"struct.std::__1::__hash_node_base.78"* [ %65, %53 ], [ %46, %43 ]
  %50 = phi i64 [ %68, %53 ], [ %4, %43 ]
  %51 = inttoptr i64 %50 to %"struct.std::__1::__hash_node_base.78"*
  %52 = icmp eq %"struct.std::__1::__hash_node_base.78"* %51, %2
  br i1 %52, label %70, label %53

53:                                               ; preds = %48
  %54 = bitcast %"struct.std::__1::__hash_node_base.78"* %49 to %"struct.std::__1::__hash_node.407"*
  %55 = inttoptr i64 %50 to %"struct.std::__1::__hash_node.407"*
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78", %"struct.std::__1::__hash_node_base.78"* %49, i64 2
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78", %"struct.std::__1::__hash_node_base.78"* %49, i64 3
  %58 = bitcast %"struct.std::__1::__hash_node_base.78"* %57 to %"struct.spirv_cross::SPIREntryPoint"*
  %59 = bitcast %"struct.std::__1::__hash_node_base.78"* %56 to i32*
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node.407", %"struct.std::__1::__hash_node.407"* %55, i64 0, i32 2, i32 0, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  store i32 %61, i32* %59, align 4
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node.407", %"struct.std::__1::__hash_node.407"* %55, i64 0, i32 2, i32 0, i32 2
  %63 = tail call dereferenceable(192) %"struct.spirv_cross::SPIREntryPoint"* @_ZN11spirv_cross14SPIREntryPointaSERKS0_(%"struct.spirv_cross::SPIREntryPoint"* %58, %"struct.spirv_cross::SPIREntryPoint"* dereferenceable(192) %62) #17
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78", %"struct.std::__1::__hash_node_base.78"* %49, i64 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %64, align 8
  %66 = tail call %"struct.std::__1::__hash_node_base.78"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE4EEENS2_14SPIREntryPointEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE19__node_insert_multiEPNS_11__hash_nodeIS7_PvEE(%"class.std::__1::__hash_table.74"* %0, %"struct.std::__1::__hash_node.407"* %54)
  %67 = inttoptr i64 %50 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.78"* %65, null
  br i1 %69, label %81, label %48

70:                                               ; preds = %48
  %71 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 1
  %72 = bitcast %"class.std::__1::__compressed_pair.85"* %71 to %"class.std::__1::allocator.88"*
  br label %73

73:                                               ; preds = %70, %73
  %74 = phi %"struct.std::__1::__hash_node_base.78"* [ %76, %73 ], [ %49, %70 ]
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78", %"struct.std::__1::__hash_node_base.78"* %74, i64 0, i32 0
  %76 = load %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78", %"struct.std::__1::__hash_node_base.78"* %74, i64 2
  %78 = bitcast %"struct.std::__1::__hash_node_base.78"* %77 to %"struct.std::__1::pair.409"*
  tail call void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS4_5TypesE4EEENS4_14SPIREntryPointEEEPvEEEEE7destroyINS_4pairIKS7_S8_EEvvEEvRSC_PT_(%"class.std::__1::allocator.88"* dereferenceable(1) %72, %"struct.std::__1::pair.409"* %78) #17
  %79 = bitcast %"struct.std::__1::__hash_node_base.78"* %74 to i8*
  tail call void @_ZdlPv(i8* %79) #18
  %80 = icmp eq %"struct.std::__1::__hash_node_base.78"* %76, null
  br i1 %80, label %81, label %73

81:                                               ; preds = %53, %73, %43, %3
  %82 = phi i64 [ %4, %3 ], [ %4, %43 ], [ %50, %73 ], [ %68, %53 ]
  %83 = inttoptr i64 %82 to %"struct.std::__1::__hash_node_base.78"*
  %84 = icmp eq %"struct.std::__1::__hash_node_base.78"* %83, %2
  br i1 %84, label %107, label %85

85:                                               ; preds = %81, %85
  %86 = phi i64 [ %104, %85 ], [ %82, %81 ]
  %87 = inttoptr i64 %86 to %"struct.std::__1::__hash_node.407"*
  %88 = tail call i8* @_Znwm(i64 216) #18, !noalias !155
  %89 = getelementptr inbounds i8, i8* %88, i64 16
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node.407", %"struct.std::__1::__hash_node.407"* %87, i64 0, i32 2, i32 0, i32 0, i32 0
  %91 = bitcast i8* %89 to i32*
  %92 = load i32, i32* %90, align 8, !noalias !155
  store i32 %92, i32* %91, align 8, !noalias !155
  %93 = getelementptr inbounds i8, i8* %88, i64 24
  %94 = bitcast i8* %93 to %"struct.spirv_cross::SPIREntryPoint"*
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node.407", %"struct.std::__1::__hash_node.407"* %87, i64 0, i32 2, i32 0, i32 2
  tail call void @_ZN11spirv_cross14SPIREntryPointC2ERKS0_(%"struct.spirv_cross::SPIREntryPoint"* %94, %"struct.spirv_cross::SPIREntryPoint"* dereferenceable(192) %95) #17, !noalias !155
  %96 = load i32, i32* %91, align 4, !noalias !155
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds i8, i8* %88, i64 8
  %99 = bitcast i8* %98 to i64*
  store i64 %97, i64* %99, align 8, !noalias !155
  %100 = bitcast i8* %88 to %"struct.std::__1::__hash_node_base.78"**
  store %"struct.std::__1::__hash_node_base.78"* null, %"struct.std::__1::__hash_node_base.78"** %100, align 8, !noalias !155
  %101 = bitcast i8* %88 to %"struct.std::__1::__hash_node.407"*
  %102 = tail call %"struct.std::__1::__hash_node_base.78"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE4EEENS2_14SPIREntryPointEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE19__node_insert_multiEPNS_11__hash_nodeIS7_PvEE(%"class.std::__1::__hash_table.74"* %0, %"struct.std::__1::__hash_node.407"* nonnull %101) #17
  %103 = inttoptr i64 %86 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = inttoptr i64 %104 to %"struct.std::__1::__hash_node_base.78"*
  %106 = icmp eq %"struct.std::__1::__hash_node_base.78"* %105, %2
  br i1 %106, label %107, label %85

107:                                              ; preds = %85, %81
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.78"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE4EEENS2_14SPIREntryPointEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE19__node_insert_multiEPNS_11__hash_nodeIS7_PvEE(%"class.std::__1::__hash_table.74"*, %"struct.std::__1::__hash_node.407"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__hash_node.407", %"struct.std::__1::__hash_node.407"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"struct.std::__1::__hash_value_type.408", %"struct.std::__1::__hash_value_type.408"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node.407", %"struct.std::__1::__hash_node.407"* %1, i64 0, i32 1
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node.407", %"struct.std::__1::__hash_node.407"* %1, i64 0, i32 0
  %9 = tail call %"struct.std::__1::__hash_node_base.78"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE4EEENS2_14SPIREntryPointEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE27__node_insert_multi_prepareEmRS7_(%"class.std::__1::__hash_table.74"* %0, i64 %6, %"struct.std::__1::__hash_value_type.408"* dereferenceable(200) %3)
  %10 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = load i64, i64* %7, align 8
  %13 = tail call i64 @llvm.ctpop.i64(i64 %11) #17, !range !5
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = add i64 %11, -1
  %17 = and i64 %16, %12
  br label %22

18:                                               ; preds = %2
  %19 = icmp ult i64 %12, %11
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = urem i64 %12, %11
  br label %22

22:                                               ; preds = %20, %18, %15
  %23 = phi i64 [ %17, %15 ], [ %21, %20 ], [ %12, %18 ]
  %24 = icmp eq %"struct.std::__1::__hash_node_base.78"* %9, null
  br i1 %24, label %25, label %52

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 1, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78", %"struct.std::__1::__hash_node_base.78"* %26, i64 0, i32 0
  %28 = bitcast %"struct.std::__1::__hash_node_base.78"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node.407", %"struct.std::__1::__hash_node.407"* %1, i64 0, i32 0, i32 0
  %31 = bitcast %"struct.std::__1::__hash_node.407"* %1 to i64*
  store i64 %29, i64* %31, align 8
  store %"struct.std::__1::__hash_node_base.78"* %8, %"struct.std::__1::__hash_node_base.78"** %27, align 8
  %32 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.78"**, %"struct.std::__1::__hash_node_base.78"*** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %33, i64 %23
  store %"struct.std::__1::__hash_node_base.78"* %26, %"struct.std::__1::__hash_node_base.78"** %34, align 8
  %35 = load %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %30, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base.78"* %35, null
  br i1 %36, label %78, label %37

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78", %"struct.std::__1::__hash_node_base.78"* %35, i64 1
  %39 = bitcast %"struct.std::__1::__hash_node_base.78"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  br i1 %14, label %44, label %41

41:                                               ; preds = %37
  %42 = add i64 %11, -1
  %43 = and i64 %40, %42
  br label %48

44:                                               ; preds = %37
  %45 = icmp ult i64 %40, %11
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = urem i64 %40, %11
  br label %48

48:                                               ; preds = %46, %44, %41
  %49 = phi i64 [ %43, %41 ], [ %47, %46 ], [ %40, %44 ]
  %50 = load %"struct.std::__1::__hash_node_base.78"**, %"struct.std::__1::__hash_node_base.78"*** %32, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %50, i64 %49
  store %"struct.std::__1::__hash_node_base.78"* %8, %"struct.std::__1::__hash_node_base.78"** %51, align 8
  br label %78

52:                                               ; preds = %22
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78", %"struct.std::__1::__hash_node_base.78"* %9, i64 0, i32 0
  %54 = bitcast %"struct.std::__1::__hash_node_base.78"* %9 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node.407", %"struct.std::__1::__hash_node.407"* %1, i64 0, i32 0, i32 0
  %57 = bitcast %"struct.std::__1::__hash_node.407"* %1 to i64*
  store i64 %55, i64* %57, align 8
  store %"struct.std::__1::__hash_node_base.78"* %8, %"struct.std::__1::__hash_node_base.78"** %53, align 8
  %58 = load %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %56, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base.78"* %58, null
  br i1 %59, label %78, label %60

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78", %"struct.std::__1::__hash_node_base.78"* %58, i64 1
  %62 = bitcast %"struct.std::__1::__hash_node_base.78"* %61 to i64*
  %63 = load i64, i64* %62, align 8
  br i1 %14, label %67, label %64

64:                                               ; preds = %60
  %65 = add i64 %11, -1
  %66 = and i64 %63, %65
  br label %71

67:                                               ; preds = %60
  %68 = icmp ult i64 %63, %11
  br i1 %68, label %71, label %69

69:                                               ; preds = %67
  %70 = urem i64 %63, %11
  br label %71

71:                                               ; preds = %69, %67, %64
  %72 = phi i64 [ %66, %64 ], [ %70, %69 ], [ %63, %67 ]
  %73 = icmp eq i64 %72, %23
  br i1 %73, label %78, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = load %"struct.std::__1::__hash_node_base.78"**, %"struct.std::__1::__hash_node_base.78"*** %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %76, i64 %72
  store %"struct.std::__1::__hash_node_base.78"* %8, %"struct.std::__1::__hash_node_base.78"** %77, align 8
  br label %78

78:                                               ; preds = %25, %48, %52, %71, %74
  %79 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 2, i32 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, 1
  store i64 %81, i64* %79, align 8
  ret %"struct.std::__1::__hash_node_base.78"* %8
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(192) %"struct.spirv_cross::SPIREntryPoint"* @_ZN11spirv_cross14SPIREntryPointaSERKS0_(%"struct.spirv_cross::SPIREntryPoint"*, %"struct.spirv_cross::SPIREntryPoint"* dereferenceable(192)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %1, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %0, i64 0, i32 0, i32 0
  %5 = load i32, i32* %3, align 8
  store i32 %5, i32* %4, align 8
  %6 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %1, i64 0, i32 2
  %8 = icmp eq %"struct.spirv_cross::SPIREntryPoint"* %0, %1
  br i1 %8, label %69, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %13, label %28, label %18

18:                                               ; preds = %9
  br i1 %17, label %22, label %19

19:                                               ; preds = %18
  %20 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %21 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false) #17
  br label %38

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %6, i8* %24, i64 %26) #17
  br label %38

28:                                               ; preds = %9
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %34 = zext i8 %16 to i64
  %35 = select i1 %17, i8* %30, i8* %33
  %36 = select i1 %17, i64 %32, i64 %34
  %37 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %6, i8* %35, i64 %36) #17
  br label %38

38:                                               ; preds = %19, %22, %28
  %39 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %0, i64 0, i32 3
  %40 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %1, i64 0, i32 3
  %41 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  %45 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %44, label %59, label %49

49:                                               ; preds = %38
  br i1 %48, label %53, label %50

50:                                               ; preds = %49
  %51 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  %52 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 24, i1 false) #17
  br label %73

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %39, i8* %55, i64 %57) #17
  br label %73

59:                                               ; preds = %38
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %65 = zext i8 %47 to i64
  %66 = select i1 %48, i8* %61, i8* %64
  %67 = select i1 %48, i64 %63, i64 %65
  %68 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %39, i8* %66, i64 %67) #17
  br label %73

69:                                               ; preds = %2
  %70 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %1, i64 0, i32 5, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %0, i64 0, i32 5, i32 0
  store i64 %71, i64* %72, align 8
  br label %110

73:                                               ; preds = %50, %53, %59
  %74 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %0, i64 0, i32 4
  %75 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %0, i64 0, i32 4, i32 0, i32 1
  store i64 0, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %1, i64 0, i32 4, i32 0, i32 1
  %77 = load i64, i64* %76, align 8
  tail call void @_ZN11spirv_cross11SmallVectorINS_7TypedIDILNS_5TypesE2EEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.209"* %74, i64 %77) #17
  %78 = load i64, i64* %76, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %84

80:                                               ; preds = %73
  store i64 0, i64* %75, align 8
  %81 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %1, i64 0, i32 5, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %0, i64 0, i32 5, i32 0
  store i64 %82, i64* %83, align 8
  br label %101

84:                                               ; preds = %73
  %85 = getelementptr inbounds %"class.spirv_cross::SmallVector.209", %"class.spirv_cross::SmallVector.209"* %74, i64 0, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %1, i64 0, i32 4, i32 0, i32 0
  br label %87

87:                                               ; preds = %87, %84
  %88 = phi i64 [ 0, %84 ], [ %94, %87 ]
  %89 = load %"class.spirv_cross::TypedID.174"*, %"class.spirv_cross::TypedID.174"** %85, align 8
  %90 = load %"class.spirv_cross::TypedID.174"*, %"class.spirv_cross::TypedID.174"** %86, align 8
  %91 = getelementptr inbounds %"class.spirv_cross::TypedID.174", %"class.spirv_cross::TypedID.174"* %90, i64 %88, i32 0
  %92 = getelementptr inbounds %"class.spirv_cross::TypedID.174", %"class.spirv_cross::TypedID.174"* %89, i64 %88, i32 0
  %93 = load i32, i32* %91, align 4
  store i32 %93, i32* %92, align 4
  %94 = add nuw i64 %88, 1
  %95 = load i64, i64* %76, align 8
  %96 = icmp ult i64 %94, %95
  br i1 %96, label %87, label %97

97:                                               ; preds = %87
  store i64 %95, i64* %75, align 8
  %98 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %1, i64 0, i32 5, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %0, i64 0, i32 5, i32 0
  store i64 %99, i64* %100, align 8
  br i1 %8, label %110, label %101

101:                                              ; preds = %80, %97
  %102 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %0, i64 0, i32 5, i32 1, i32 0
  %103 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %1, i64 0, i32 5, i32 1, i32 0, i32 3, i32 0, i32 0
  %104 = bitcast float* %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %0, i64 0, i32 5, i32 1, i32 0, i32 3, i32 0, i32 0
  %107 = bitcast float* %106 to i32*
  store i32 %105, i32* %107, align 4
  %108 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %1, i64 0, i32 5, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %108, align 8
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEEEEvT_SF_(%"class.std::__1::__hash_table.101"* %102, %"struct.std::__1::__hash_node_base.105"* %109, %"struct.std::__1::__hash_node_base.105"* null) #17
  br label %110

110:                                              ; preds = %69, %97, %101
  %111 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %0, i64 0, i32 6
  %112 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %1, i64 0, i32 6
  %113 = bitcast %"struct.spirv_cross::SPIREntryPoint::WorkgroupSize"* %111 to i8*
  %114 = bitcast %"struct.spirv_cross::SPIREntryPoint::WorkgroupSize"* %112 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 29, i1 false)
  ret %"struct.spirv_cross::SPIREntryPoint"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross11SmallVectorINS_7TypedIDILNS_5TypesE2EEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.209"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 4611686018427387903
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @_ZSt9terminatev() #19
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.spirv_cross::SmallVector.209", %"class.spirv_cross::SmallVector.209"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %60

9:                                                ; preds = %5
  %10 = icmp eq i64 %7, 0
  %11 = select i1 %10, i64 1, i64 %7
  %12 = icmp ugt i64 %11, 8
  %13 = select i1 %12, i64 %11, i64 8
  br label %14

14:                                               ; preds = %14, %9
  %15 = phi i64 [ %13, %9 ], [ %17, %14 ]
  %16 = icmp ult i64 %15, %1
  %17 = shl i64 %15, 1
  br i1 %16, label %14, label %18

18:                                               ; preds = %14
  %19 = icmp ugt i64 %15, 8
  br i1 %19, label %20, label %24

20:                                               ; preds = %18
  %21 = shl i64 %15, 2
  %22 = tail call noalias i8* @malloc(i64 %21) #17
  %23 = bitcast i8* %22 to %"class.spirv_cross::TypedID.174"*
  br label %27

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.spirv_cross::SmallVector.209", %"class.spirv_cross::SmallVector.209"* %0, i64 0, i32 2
  %26 = bitcast %"class.spirv_cross::AlignedBuffer.211"* %25 to %"class.spirv_cross::TypedID.174"*
  br label %27

27:                                               ; preds = %24, %20
  %28 = phi %"class.spirv_cross::TypedID.174"* [ %23, %20 ], [ %26, %24 ]
  %29 = icmp eq %"class.spirv_cross::TypedID.174"* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZSt9terminatev() #19
  unreachable

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.spirv_cross::SmallVector.209", %"class.spirv_cross::SmallVector.209"* %0, i64 0, i32 0, i32 0
  %33 = load %"class.spirv_cross::TypedID.174"*, %"class.spirv_cross::TypedID.174"** %32, align 8
  %34 = icmp eq %"class.spirv_cross::TypedID.174"* %28, %33
  %35 = bitcast %"class.spirv_cross::TypedID.174"* %33 to i8*
  br i1 %34, label %52, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.spirv_cross::SmallVector.209", %"class.spirv_cross::SmallVector.209"* %0, i64 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %36, %40
  %41 = phi %"class.spirv_cross::TypedID.174"* [ %49, %40 ], [ %33, %36 ]
  %42 = phi i64 [ %46, %40 ], [ 0, %36 ]
  %43 = getelementptr inbounds %"class.spirv_cross::TypedID.174", %"class.spirv_cross::TypedID.174"* %41, i64 %42, i32 0
  %44 = getelementptr inbounds %"class.spirv_cross::TypedID.174", %"class.spirv_cross::TypedID.174"* %28, i64 %42, i32 0
  %45 = load i32, i32* %43, align 4
  store i32 %45, i32* %44, align 4
  %46 = add nuw i64 %42, 1
  %47 = load i64, i64* %37, align 8
  %48 = icmp ult i64 %46, %47
  %49 = load %"class.spirv_cross::TypedID.174"*, %"class.spirv_cross::TypedID.174"** %32, align 8
  br i1 %48, label %40, label %50

50:                                               ; preds = %40
  %51 = bitcast %"class.spirv_cross::TypedID.174"* %49 to i8*
  br label %52

52:                                               ; preds = %50, %36, %31
  %53 = phi i8* [ %51, %50 ], [ %35, %36 ], [ %35, %31 ]
  %54 = phi %"class.spirv_cross::TypedID.174"* [ %49, %50 ], [ %33, %36 ], [ %28, %31 ]
  %55 = getelementptr inbounds %"class.spirv_cross::SmallVector.209", %"class.spirv_cross::SmallVector.209"* %0, i64 0, i32 2
  %56 = bitcast %"class.spirv_cross::AlignedBuffer.211"* %55 to %"class.spirv_cross::TypedID.174"*
  %57 = icmp eq %"class.spirv_cross::TypedID.174"* %54, %56
  br i1 %57, label %59, label %58

58:                                               ; preds = %52
  tail call void @free(i8* %53) #17
  br label %59

59:                                               ; preds = %52, %58
  store %"class.spirv_cross::TypedID.174"* %28, %"class.spirv_cross::TypedID.174"** %32, align 8
  store i64 %15, i64* %6, align 8
  br label %60

60:                                               ; preds = %59, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.78"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE4EEENS2_14SPIREntryPointEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE27__node_insert_multi_prepareEmRS7_(%"class.std::__1::__hash_table.74"*, i64, %"struct.std::__1::__hash_value_type.408"* dereferenceable(200)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 1
  %9 = uitofp i64 %8 to float
  %10 = uitofp i64 %5 to float
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load float, float* %11, align 4
  %13 = fmul float %12, %10
  %14 = fcmp olt float %13, %9
  %15 = icmp eq i64 %5, 0
  %16 = or i1 %15, %14
  br i1 %16, label %17, label %31

17:                                               ; preds = %3
  %18 = shl i64 %5, 1
  %19 = icmp ult i64 %5, 3
  %20 = tail call i64 @llvm.ctpop.i64(i64 %5) #17, !range !5
  %21 = icmp ugt i64 %20, 1
  %22 = or i1 %19, %21
  %23 = zext i1 %22 to i64
  %24 = or i64 %18, %23
  %25 = fdiv float %9, %12
  %26 = tail call float @llvm.ceil.f32(float %25) #17
  %27 = fptoui float %26 to i64
  %28 = icmp ult i64 %24, %27
  %29 = select i1 %28, i64 %27, i64 %24
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE4EEENS2_14SPIREntryPointEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.74"* %0, i64 %29)
  %30 = load i64, i64* %4, align 8
  br label %31

31:                                               ; preds = %3, %17
  %32 = phi i64 [ %30, %17 ], [ %5, %3 ]
  %33 = tail call i64 @llvm.ctpop.i64(i64 %32) #17, !range !5
  %34 = icmp ugt i64 %33, 1
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = add i64 %32, -1
  %37 = and i64 %36, %1
  br label %42

38:                                               ; preds = %31
  %39 = icmp ugt i64 %32, %1
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = urem i64 %1, %32
  br label %42

42:                                               ; preds = %35, %38, %40
  %43 = phi i64 [ %37, %35 ], [ %41, %40 ], [ %1, %38 ]
  %44 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.78"**, %"struct.std::__1::__hash_node_base.78"*** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %45, i64 %43
  %47 = load %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.78"* %47, null
  br i1 %48, label %88, label %49

49:                                               ; preds = %42
  %50 = add i64 %32, -1
  %51 = getelementptr inbounds %"struct.std::__1::__hash_value_type.408", %"struct.std::__1::__hash_value_type.408"* %2, i64 0, i32 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  br label %53

53:                                               ; preds = %49, %82
  %54 = phi %"struct.std::__1::__hash_node_base.78"* [ %57, %82 ], [ %47, %49 ]
  %55 = phi i8 [ %87, %82 ], [ 0, %49 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78", %"struct.std::__1::__hash_node_base.78"* %54, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base.78"* %57, null
  br i1 %58, label %88, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78", %"struct.std::__1::__hash_node_base.78"* %57, i64 1
  %61 = bitcast %"struct.std::__1::__hash_node_base.78"* %60 to i64*
  %62 = load i64, i64* %61, align 8
  br i1 %34, label %65, label %63

63:                                               ; preds = %59
  %64 = and i64 %62, %50
  br label %69

65:                                               ; preds = %59
  %66 = icmp ult i64 %62, %32
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %62, %32
  br label %69

69:                                               ; preds = %63, %65, %67
  %70 = phi i64 [ %64, %63 ], [ %68, %67 ], [ %62, %65 ]
  %71 = icmp eq i64 %70, %43
  br i1 %71, label %72, label %88

72:                                               ; preds = %69
  %73 = and i8 %55, 1
  %74 = icmp eq i8 %73, 0
  %75 = zext i8 %73 to i32
  %76 = icmp eq i64 %62, %1
  br i1 %76, label %77, label %82

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78", %"struct.std::__1::__hash_node_base.78"* %57, i64 2
  %79 = bitcast %"struct.std::__1::__hash_node_base.78"* %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, %52
  br label %82

82:                                               ; preds = %77, %72
  %83 = phi i1 [ false, %72 ], [ %81, %77 ]
  %84 = zext i1 %83 to i32
  %85 = icmp eq i32 %75, %84
  %86 = or i1 %74, %85
  %87 = select i1 %85, i8 %55, i8 1
  br i1 %86, label %53, label %88

88:                                               ; preds = %82, %53, %69, %42
  %89 = phi %"struct.std::__1::__hash_node_base.78"* [ null, %42 ], [ %54, %69 ], [ %54, %53 ], [ %54, %82 ]
  ret %"struct.std::__1::__hash_node_base.78"* %89
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE4EEENS2_14SPIREntryPointEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.74"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !5
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #17
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE4EEENS2_14SPIREntryPointEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.74"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #17, !range !5
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #17
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #17, !range !5
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #17
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE4EEENS2_14SPIREntryPointEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.74"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE4EEENS2_14SPIREntryPointEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.74"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #19
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #18
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.78"**, %"struct.std::__1::__hash_node_base.78"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.74"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.78"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.78"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #18
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.80", %"class.std::__1::__bucket_list_deallocator.80"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.78"**, %"struct.std::__1::__hash_node_base.78"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.78"* null, %"struct.std::__1::__hash_node_base.78"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !158

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78", %"struct.std::__1::__hash_node_base.78"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.78"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.78"**, %"struct.std::__1::__hash_node_base.78"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.78"* null, %"struct.std::__1::__hash_node_base.78"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.78"**, %"struct.std::__1::__hash_node_base.78"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.78"* null, %"struct.std::__1::__hash_node_base.78"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.78"**, %"struct.std::__1::__hash_node_base.78"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.78"* null, %"struct.std::__1::__hash_node_base.78"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.78"**, %"struct.std::__1::__hash_node_base.78"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.78"* null, %"struct.std::__1::__hash_node_base.78"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78", %"struct.std::__1::__hash_node_base.78"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.78"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #17, !range !5
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.78"**, %"struct.std::__1::__hash_node_base.78"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.78"* %36, %"struct.std::__1::__hash_node_base.78"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78", %"struct.std::__1::__hash_node_base.78"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.78"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.78"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.78"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78", %"struct.std::__1::__hash_node_base.78"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.78"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.78"**, %"struct.std::__1::__hash_node_base.78"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.78"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78", %"struct.std::__1::__hash_node_base.78"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.78"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.78"* %82, %"struct.std::__1::__hash_node_base.78"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.78"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78", %"struct.std::__1::__hash_node_base.78"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.78"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78", %"struct.std::__1::__hash_node_base.78"* %107, i64 2
  %111 = load i32, i32* %102, align 4
  %112 = bitcast %"struct.std::__1::__hash_node_base.78"* %110 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %111, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.78"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.78"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.78"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.78"**, %"struct.std::__1::__hash_node_base.78"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.78"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.78"**, %"struct.std::__1::__hash_node_base.78"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78", %"struct.std::__1::__hash_node_base.78"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.78"* %80, %"struct.std::__1::__hash_node_base.78"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.78"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.78", %"struct.std::__1::__hash_node_base.78"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.78"*, %"struct.std::__1::__hash_node_base.78"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.78"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.74", %"class.std::__1::__hash_table.74"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.78"**, %"struct.std::__1::__hash_node_base.78"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.78"** null, %"struct.std::__1::__hash_node_base.78"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.78"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.78"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #18
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.80", %"class.std::__1::__bucket_list_deallocator.80"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross14SPIREntryPointC2ERKS0_(%"struct.spirv_cross::SPIREntryPoint"*, %"struct.spirv_cross::SPIREntryPoint"* dereferenceable(192)) unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %1, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %0, i64 0, i32 0, i32 0
  %5 = load i32, i32* %3, align 8
  store i32 %5, i32* %4, align 8
  %6 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %1, i64 0, i32 2
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #17
  br label %20

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %6, i8* %17, i64 %19) #17
  br label %20

20:                                               ; preds = %12, %15
  %21 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %0, i64 0, i32 3
  %22 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %1, i64 0, i32 3
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %20
  %28 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %29 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false) #17
  br label %35

30:                                               ; preds = %20
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %21, i8* %32, i64 %34) #17
  br label %35

35:                                               ; preds = %27, %30
  %36 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %0, i64 0, i32 4
  %37 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %0, i64 0, i32 4, i32 2
  %38 = bitcast %"class.spirv_cross::SmallVector.209"* %36 to %"class.spirv_cross::AlignedBuffer.211"**
  %39 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %0, i64 0, i32 4, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.211"* %37, %"class.spirv_cross::AlignedBuffer.211"** %38, align 8
  %40 = bitcast i64* %39 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %40, align 8
  %41 = icmp eq %"struct.spirv_cross::SPIREntryPoint"* %0, %1
  br i1 %41, label %62, label %42

42:                                               ; preds = %35
  store i64 0, i64* %39, align 8
  %43 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %1, i64 0, i32 4, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  tail call void @_ZN11spirv_cross11SmallVectorINS_7TypedIDILNS_5TypesE2EEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.209"* %36, i64 %44) #17
  %45 = load i64, i64* %43, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.spirv_cross::SmallVector.209", %"class.spirv_cross::SmallVector.209"* %36, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %1, i64 0, i32 4, i32 0, i32 0
  br label %52

50:                                               ; preds = %52, %42
  %51 = phi i64 [ 0, %42 ], [ %60, %52 ]
  store i64 %51, i64* %39, align 8
  br label %62

52:                                               ; preds = %52, %47
  %53 = phi i64 [ 0, %47 ], [ %59, %52 ]
  %54 = load %"class.spirv_cross::TypedID.174"*, %"class.spirv_cross::TypedID.174"** %48, align 8
  %55 = load %"class.spirv_cross::TypedID.174"*, %"class.spirv_cross::TypedID.174"** %49, align 8
  %56 = getelementptr inbounds %"class.spirv_cross::TypedID.174", %"class.spirv_cross::TypedID.174"* %55, i64 %53, i32 0
  %57 = getelementptr inbounds %"class.spirv_cross::TypedID.174", %"class.spirv_cross::TypedID.174"* %54, i64 %53, i32 0
  %58 = load i32, i32* %56, align 4
  store i32 %58, i32* %57, align 4
  %59 = add nuw i64 %53, 1
  %60 = load i64, i64* %43, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %52, label %50

62:                                               ; preds = %35, %50
  %63 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %0, i64 0, i32 5, i32 0
  %64 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %1, i64 0, i32 5, i32 0
  %65 = load i64, i64* %64, align 8
  store i64 %65, i64* %63, align 8
  %66 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %0, i64 0, i32 5, i32 1
  %67 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %66, i64 0, i32 0
  %68 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %0, i64 0, i32 5, i32 1, i32 0, i32 3
  %69 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %1, i64 0, i32 5, i32 1, i32 0, i32 3
  %70 = bitcast %"class.std::__1::__compressed_pair.120"* %69 to i32*
  %71 = bitcast %"class.std::__1::__compressed_pair.120"* %68 to i32*
  %72 = bitcast %"class.std::__1::unordered_set"* %66 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 32, i1 false) #17
  %73 = load i32, i32* %70, align 8
  store i32 %73, i32* %71, align 8
  %74 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %1, i64 0, i32 5, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.101"* %67, i64 %75) #17
  %76 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %1, i64 0, i32 5, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %77 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %76, align 8
  %78 = icmp eq %"struct.std::__1::__hash_node_base.105"* %77, null
  br i1 %78, label %89, label %79

79:                                               ; preds = %62
  %80 = ptrtoint %"struct.std::__1::__hash_node_base.105"* %77 to i64
  br label %81

81:                                               ; preds = %81, %79
  %82 = phi i64 [ %80, %79 ], [ %87, %81 ]
  %83 = inttoptr i64 %82 to %"struct.std::__1::__hash_node"*
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %83, i64 0, i32 2
  %85 = tail call { %"struct.std::__1::__hash_node_base.105"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.101"* %67, i32* dereferenceable(4) %84, i32* dereferenceable(4) %84) #17
  %86 = inttoptr i64 %82 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %81

89:                                               ; preds = %81, %62
  %90 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %0, i64 0, i32 6
  %91 = getelementptr inbounds %"struct.spirv_cross::SPIREntryPoint", %"struct.spirv_cross::SPIREntryPoint"* %1, i64 0, i32 6
  %92 = bitcast %"struct.spirv_cross::SPIREntryPoint::WorkgroupSize"* %90 to i8*
  %93 = bitcast %"struct.spirv_cross::SPIREntryPoint::WorkgroupSize"* %91 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 29, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEEEEvT_SF_(%"class.std::__1::__hash_table.101"*, %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::__hash_node_base.105"* %1 to i64
  %5 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %72, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = add i64 %6, -1
  %11 = and i64 %6, 3
  %12 = icmp ult i64 %10, 3
  br i1 %12, label %32, label %13

13:                                               ; preds = %8
  %14 = sub i64 %6, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i64 [ 0, %13 ], [ %29, %15 ]
  %17 = phi i64 [ %14, %13 ], [ %30, %15 ]
  %18 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %9, align 8
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %18, i64 %16
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %19, align 8
  %20 = or i64 %16, 1
  %21 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %9, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %21, i64 %20
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %22, align 8
  %23 = or i64 %16, 2
  %24 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %9, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %24, i64 %23
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %25, align 8
  %26 = or i64 %16, 3
  %27 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %9, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %27, i64 %26
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %28, align 8
  %29 = add nuw i64 %16, 4
  %30 = add i64 %17, -4
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %15

32:                                               ; preds = %15, %8
  %33 = phi i64 [ 0, %8 ], [ %29, %15 ]
  %34 = icmp eq i64 %11, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %32, %35
  %36 = phi i64 [ %40, %35 ], [ %33, %32 ]
  %37 = phi i64 [ %41, %35 ], [ %11, %32 ]
  %38 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %9, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %38, i64 %36
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %39, align 8
  %40 = add nuw i64 %36, 1
  %41 = add i64 %37, -1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %35, !llvm.loop !159

43:                                               ; preds = %35, %32
  %44 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %45, align 8
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.105"* %46, null
  br i1 %47, label %72, label %48

48:                                               ; preds = %43, %53
  %49 = phi %"struct.std::__1::__hash_node_base.105"* [ %61, %53 ], [ %46, %43 ]
  %50 = phi i64 [ %64, %53 ], [ %4, %43 ]
  %51 = inttoptr i64 %50 to %"struct.std::__1::__hash_node_base.105"*
  %52 = icmp eq %"struct.std::__1::__hash_node_base.105"* %51, %2
  br i1 %52, label %66, label %53

53:                                               ; preds = %48
  %54 = bitcast %"struct.std::__1::__hash_node_base.105"* %49 to %"struct.std::__1::__hash_node"*
  %55 = inttoptr i64 %50 to %"struct.std::__1::__hash_node"*
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %55, i64 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %49, i64 2
  %59 = bitcast %"struct.std::__1::__hash_node_base.105"* %58 to i32*
  store i32 %57, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %49, i64 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %60, align 8
  %62 = tail call %"struct.std::__1::__hash_node_base.105"* @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE19__node_insert_multiEPNS_11__hash_nodeIjPvEE(%"class.std::__1::__hash_table.101"* %0, %"struct.std::__1::__hash_node"* %54)
  %63 = inttoptr i64 %50 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq %"struct.std::__1::__hash_node_base.105"* %61, null
  br i1 %65, label %72, label %48

66:                                               ; preds = %48, %66
  %67 = phi %"struct.std::__1::__hash_node_base.105"* [ %69, %66 ], [ %49, %48 ]
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %67, i64 0, i32 0
  %69 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %68, align 8
  %70 = bitcast %"struct.std::__1::__hash_node_base.105"* %67 to i8*
  tail call void @_ZdlPv(i8* %70) #18
  %71 = icmp eq %"struct.std::__1::__hash_node_base.105"* %69, null
  br i1 %71, label %72, label %66

72:                                               ; preds = %53, %66, %43, %3
  %73 = phi i64 [ %4, %3 ], [ %4, %43 ], [ %50, %66 ], [ %64, %53 ]
  %74 = inttoptr i64 %73 to %"struct.std::__1::__hash_node_base.105"*
  %75 = icmp eq %"struct.std::__1::__hash_node_base.105"* %74, %2
  br i1 %75, label %94, label %76

76:                                               ; preds = %72, %76
  %77 = phi i64 [ %91, %76 ], [ %73, %72 ]
  %78 = inttoptr i64 %77 to %"struct.std::__1::__hash_node"*
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %78, i64 0, i32 2
  %80 = tail call i8* @_Znwm(i64 24) #18, !noalias !160
  %81 = getelementptr inbounds i8, i8* %80, i64 16
  %82 = bitcast i8* %81 to i32*
  %83 = load i32, i32* %79, align 4, !noalias !160
  store i32 %83, i32* %82, align 4, !noalias !160
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds i8, i8* %80, i64 8
  %86 = bitcast i8* %85 to i64*
  store i64 %84, i64* %86, align 8, !noalias !160
  %87 = bitcast i8* %80 to %"struct.std::__1::__hash_node_base.105"**
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %87, align 8, !noalias !160
  %88 = bitcast i8* %80 to %"struct.std::__1::__hash_node"*
  %89 = tail call %"struct.std::__1::__hash_node_base.105"* @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE19__node_insert_multiEPNS_11__hash_nodeIjPvEE(%"class.std::__1::__hash_table.101"* %0, %"struct.std::__1::__hash_node"* nonnull %88) #17
  %90 = inttoptr i64 %77 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = inttoptr i64 %91 to %"struct.std::__1::__hash_node_base.105"*
  %93 = icmp eq %"struct.std::__1::__hash_node_base.105"* %92, %2
  br i1 %93, label %94, label %76

94:                                               ; preds = %76, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.105"* @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE19__node_insert_multiEPNS_11__hash_nodeIjPvEE(%"class.std::__1::__hash_table.101"*, %"struct.std::__1::__hash_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 1
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 0
  %8 = tail call %"struct.std::__1::__hash_node_base.105"* @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE27__node_insert_multi_prepareEmRj(%"class.std::__1::__hash_table.101"* %0, i64 %5, i32* dereferenceable(4) %3)
  %9 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = load i64, i64* %6, align 8
  %12 = tail call i64 @llvm.ctpop.i64(i64 %10) #17, !range !5
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %2
  %15 = add i64 %10, -1
  %16 = and i64 %15, %11
  br label %21

17:                                               ; preds = %2
  %18 = icmp ult i64 %11, %10
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %11, %10
  br label %21

21:                                               ; preds = %19, %17, %14
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %11, %17 ]
  %23 = icmp eq %"struct.std::__1::__hash_node_base.105"* %8, null
  br i1 %23, label %24, label %51

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 1, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %25, i64 0, i32 0
  %27 = bitcast %"struct.std::__1::__hash_node_base.105"* %25 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 0, i32 0
  %30 = bitcast %"struct.std::__1::__hash_node"* %1 to i64*
  store i64 %28, i64* %30, align 8
  store %"struct.std::__1::__hash_node_base.105"* %7, %"struct.std::__1::__hash_node_base.105"** %26, align 8
  %31 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %31, align 8
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %32, i64 %22
  store %"struct.std::__1::__hash_node_base.105"* %25, %"struct.std::__1::__hash_node_base.105"** %33, align 8
  %34 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %29, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base.105"* %34, null
  br i1 %35, label %77, label %36

36:                                               ; preds = %24
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %34, i64 1
  %38 = bitcast %"struct.std::__1::__hash_node_base.105"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  br i1 %13, label %43, label %40

40:                                               ; preds = %36
  %41 = add i64 %10, -1
  %42 = and i64 %39, %41
  br label %47

43:                                               ; preds = %36
  %44 = icmp ult i64 %39, %10
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %39, %10
  br label %47

47:                                               ; preds = %45, %43, %40
  %48 = phi i64 [ %42, %40 ], [ %46, %45 ], [ %39, %43 ]
  %49 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %31, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.105"* %7, %"struct.std::__1::__hash_node_base.105"** %50, align 8
  br label %77

51:                                               ; preds = %21
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %8, i64 0, i32 0
  %53 = bitcast %"struct.std::__1::__hash_node_base.105"* %8 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 0, i32 0
  %56 = bitcast %"struct.std::__1::__hash_node"* %1 to i64*
  store i64 %54, i64* %56, align 8
  store %"struct.std::__1::__hash_node_base.105"* %7, %"struct.std::__1::__hash_node_base.105"** %52, align 8
  %57 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %55, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base.105"* %57, null
  br i1 %58, label %77, label %59

59:                                               ; preds = %51
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %57, i64 1
  %61 = bitcast %"struct.std::__1::__hash_node_base.105"* %60 to i64*
  %62 = load i64, i64* %61, align 8
  br i1 %13, label %66, label %63

63:                                               ; preds = %59
  %64 = add i64 %10, -1
  %65 = and i64 %62, %64
  br label %70

66:                                               ; preds = %59
  %67 = icmp ult i64 %62, %10
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %62, %10
  br label %70

70:                                               ; preds = %68, %66, %63
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %62, %66 ]
  %72 = icmp eq i64 %71, %22
  br i1 %72, label %77, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %75, i64 %71
  store %"struct.std::__1::__hash_node_base.105"* %7, %"struct.std::__1::__hash_node_base.105"** %76, align 8
  br label %77

77:                                               ; preds = %24, %47, %51, %70, %73
  %78 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 2, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %78, align 8
  ret %"struct.std::__1::__hash_node_base.105"* %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.105"* @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE27__node_insert_multi_prepareEmRj(%"class.std::__1::__hash_table.101"*, i64, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 1
  %9 = uitofp i64 %8 to float
  %10 = uitofp i64 %5 to float
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load float, float* %11, align 4
  %13 = fmul float %12, %10
  %14 = fcmp olt float %13, %9
  %15 = icmp eq i64 %5, 0
  %16 = or i1 %15, %14
  br i1 %16, label %17, label %31

17:                                               ; preds = %3
  %18 = shl i64 %5, 1
  %19 = icmp ult i64 %5, 3
  %20 = tail call i64 @llvm.ctpop.i64(i64 %5) #17, !range !5
  %21 = icmp ugt i64 %20, 1
  %22 = or i1 %19, %21
  %23 = zext i1 %22 to i64
  %24 = or i64 %18, %23
  %25 = fdiv float %9, %12
  %26 = tail call float @llvm.ceil.f32(float %25) #17
  %27 = fptoui float %26 to i64
  %28 = icmp ult i64 %24, %27
  %29 = select i1 %28, i64 %27, i64 %24
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.101"* %0, i64 %29)
  %30 = load i64, i64* %4, align 8
  br label %31

31:                                               ; preds = %3, %17
  %32 = phi i64 [ %30, %17 ], [ %5, %3 ]
  %33 = tail call i64 @llvm.ctpop.i64(i64 %32) #17, !range !5
  %34 = icmp ugt i64 %33, 1
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = add i64 %32, -1
  %37 = and i64 %36, %1
  br label %42

38:                                               ; preds = %31
  %39 = icmp ugt i64 %32, %1
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = urem i64 %1, %32
  br label %42

42:                                               ; preds = %35, %38, %40
  %43 = phi i64 [ %37, %35 ], [ %41, %40 ], [ %1, %38 ]
  %44 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %45, i64 %43
  %47 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.105"* %47, null
  br i1 %48, label %87, label %49

49:                                               ; preds = %42
  %50 = add i64 %32, -1
  %51 = load i32, i32* %2, align 4
  br label %52

52:                                               ; preds = %49, %81
  %53 = phi %"struct.std::__1::__hash_node_base.105"* [ %56, %81 ], [ %47, %49 ]
  %54 = phi i8 [ %86, %81 ], [ 0, %49 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %53, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.105"* %56, null
  br i1 %57, label %87, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %56, i64 1
  %60 = bitcast %"struct.std::__1::__hash_node_base.105"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  br i1 %34, label %64, label %62

62:                                               ; preds = %58
  %63 = and i64 %61, %50
  br label %68

64:                                               ; preds = %58
  %65 = icmp ult i64 %61, %32
  br i1 %65, label %68, label %66

66:                                               ; preds = %64
  %67 = urem i64 %61, %32
  br label %68

68:                                               ; preds = %62, %64, %66
  %69 = phi i64 [ %63, %62 ], [ %67, %66 ], [ %61, %64 ]
  %70 = icmp eq i64 %69, %43
  br i1 %70, label %71, label %87

71:                                               ; preds = %68
  %72 = and i8 %54, 1
  %73 = icmp eq i8 %72, 0
  %74 = zext i8 %72 to i32
  %75 = icmp eq i64 %61, %1
  br i1 %75, label %76, label %81

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %56, i64 2
  %78 = bitcast %"struct.std::__1::__hash_node_base.105"* %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, %51
  br label %81

81:                                               ; preds = %76, %71
  %82 = phi i1 [ false, %71 ], [ %80, %76 ]
  %83 = zext i1 %82 to i32
  %84 = icmp eq i32 %74, %83
  %85 = or i1 %73, %84
  %86 = select i1 %84, i8 %54, i8 1
  br i1 %85, label %52, label %87

87:                                               ; preds = %81, %52, %68, %42
  %88 = phi %"struct.std::__1::__hash_node_base.105"* [ null, %42 ], [ %53, %68 ], [ %53, %52 ], [ %53, %81 ]
  ret %"struct.std::__1::__hash_node_base.105"* %88
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #14

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"*, i64, i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.spirv_cross::TypedID"* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.450"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %56, label %12

12:                                               ; preds = %5
  %13 = tail call i64 @llvm.ctpop.i64(i64 %10) #17, !range !5
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = add i64 %10, 4294967295
  %17 = and i64 %16, %8
  br label %22

18:                                               ; preds = %12
  %19 = icmp ugt i64 %10, %8
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = urem i64 %8, %10
  br label %22

22:                                               ; preds = %15, %18, %20
  %23 = phi i64 [ %17, %15 ], [ %21, %20 ], [ %8, %18 ]
  %24 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, i64 %23
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, null
  br i1 %28, label %56, label %29

29:                                               ; preds = %22
  %30 = add i64 %10, -1
  br label %31

31:                                               ; preds = %29, %51
  %32 = phi %"struct.std::__1::__hash_node_base"* [ %34, %51 ], [ %27, %29 ]
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %33, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base"* %34, null
  br i1 %35, label %56, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 1
  %38 = bitcast %"struct.std::__1::__hash_node_base"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, %8
  br i1 %40, label %51, label %41

41:                                               ; preds = %36
  br i1 %14, label %44, label %42

42:                                               ; preds = %41
  %43 = and i64 %39, %30
  br label %48

44:                                               ; preds = %41
  %45 = icmp ult i64 %39, %10
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = urem i64 %39, %10
  br label %48

48:                                               ; preds = %42, %44, %46
  %49 = phi i64 [ %43, %42 ], [ %47, %46 ], [ %39, %44 ]
  %50 = icmp eq i64 %49, %23
  br i1 %50, label %51, label %56

51:                                               ; preds = %36, %48
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 2
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %7
  br i1 %55, label %165, label %31

56:                                               ; preds = %31, %48, %22, %5
  %57 = phi i64 [ %23, %22 ], [ -6148914691236517206, %5 ], [ %23, %48 ], [ %23, %31 ]
  %58 = tail call i8* @_Znwm(i64 400) #18, !noalias !163
  %59 = getelementptr inbounds i8, i8* %58, i64 16
  %60 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %60, align 8, !noalias !163
  %62 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %61, i64 0, i32 0
  %63 = bitcast i8* %59 to i32*
  %64 = load i32, i32* %62, align 4, !noalias !163
  store i32 %64, i32* %63, align 8, !noalias !163
  %65 = getelementptr inbounds i8, i8* %58, i64 24
  %66 = getelementptr inbounds i8, i8* %58, i64 136
  %67 = bitcast i8* %66 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 376, i1 false) #17, !noalias !163
  store i32 1065353216, i32* %67, align 4, !noalias !163
  %68 = getelementptr inbounds i8, i8* %58, i64 144
  %69 = bitcast i8* %68 to i32*
  store i32 2147483647, i32* %69, align 8, !noalias !163
  %70 = getelementptr inbounds i8, i8* %58, i64 148
  %71 = getelementptr inbounds i8, i8* %58, i64 200
  %72 = bitcast i8* %71 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %70, i8 0, i64 52, i1 false) #17, !noalias !163
  store i32 2147483647, i32* %72, align 8, !noalias !163
  %73 = getelementptr inbounds i8, i8* %58, i64 204
  store i8 0, i8* %73, align 4, !noalias !163
  %74 = getelementptr inbounds i8, i8* %58, i64 208
  %75 = getelementptr inbounds i8, i8* %58, i64 248
  %76 = bitcast i8* %75 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 40, i1 false) #17, !noalias !163
  store i32 1065353216, i32* %76, align 4, !noalias !163
  %77 = getelementptr i8, i8* %58, i64 256
  %78 = getelementptr inbounds i8, i8* %58, i64 352
  %79 = getelementptr inbounds i8, i8* %58, i64 384
  %80 = bitcast i8* %79 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 32, i1 false) #17, !noalias !163
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %77, i8 0, i64 88, i1 false) #17, !noalias !163
  store i32 1065353216, i32* %80, align 4, !noalias !163
  %81 = getelementptr inbounds i8, i8* %58, i64 392
  store i8 0, i8* %81, align 8, !noalias !163
  %82 = getelementptr inbounds i8, i8* %58, i64 396
  %83 = bitcast i8* %82 to i32*
  store i32 0, i32* %83, align 4, !noalias !163
  %84 = getelementptr inbounds i8, i8* %58, i64 8
  %85 = bitcast i8* %84 to i64*
  store i64 %8, i64* %85, align 8, !noalias !163
  %86 = bitcast i8* %58 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %86, align 8, !noalias !163
  %87 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, 1
  %90 = uitofp i64 %89 to float
  %91 = uitofp i64 %10 to float
  %92 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %93 = load float, float* %92, align 4
  %94 = fmul float %93, %91
  %95 = fcmp olt float %94, %90
  %96 = or i1 %11, %95
  br i1 %96, label %97, label %120

97:                                               ; preds = %56
  %98 = shl i64 %10, 1
  %99 = icmp ult i64 %10, 3
  %100 = tail call i64 @llvm.ctpop.i64(i64 %10) #17, !range !5
  %101 = icmp ugt i64 %100, 1
  %102 = or i1 %99, %101
  %103 = zext i1 %102 to i64
  %104 = or i64 %98, %103
  %105 = fdiv float %90, %93
  %106 = tail call float @llvm.ceil.f32(float %105) #17
  %107 = fptoui float %106 to i64
  %108 = icmp ult i64 %104, %107
  %109 = select i1 %108, i64 %107, i64 %104
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %109)
  %110 = load i64, i64* %9, align 8
  %111 = tail call i64 @llvm.ctpop.i64(i64 %110) #17, !range !5
  %112 = icmp ugt i64 %111, 1
  br i1 %112, label %116, label %113

113:                                              ; preds = %97
  %114 = add i64 %110, 4294967295
  %115 = and i64 %114, %8
  br label %120

116:                                              ; preds = %97
  %117 = icmp ugt i64 %110, %8
  br i1 %117, label %120, label %118

118:                                              ; preds = %116
  %119 = urem i64 %8, %110
  br label %120

120:                                              ; preds = %118, %116, %113, %56
  %121 = phi i64 [ %10, %56 ], [ %110, %113 ], [ %110, %116 ], [ %110, %118 ]
  %122 = phi i64 [ %57, %56 ], [ %115, %113 ], [ %8, %116 ], [ %119, %118 ]
  %123 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %123, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %122
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base"* %126, null
  br i1 %127, label %128, label %154

128:                                              ; preds = %120
  %129 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %130 = bitcast %"struct.std::__1::__hash_node_base"* %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %58 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base"* %129 to i8**
  store i8* %58, i8** %133, align 8
  store %"struct.std::__1::__hash_node_base"* %129, %"struct.std::__1::__hash_node_base"** %125, align 8
  %134 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, align 8
  %135 = icmp eq %"struct.std::__1::__hash_node_base"* %134, null
  br i1 %135, label %161, label %136

136:                                              ; preds = %128
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %134, i64 1
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = tail call i64 @llvm.ctpop.i64(i64 %121) #17, !range !5
  %141 = icmp ugt i64 %140, 1
  br i1 %141, label %145, label %142

142:                                              ; preds = %136
  %143 = add i64 %121, -1
  %144 = and i64 %139, %143
  br label %149

145:                                              ; preds = %136
  %146 = icmp ult i64 %139, %121
  br i1 %146, label %149, label %147

147:                                              ; preds = %145
  %148 = urem i64 %139, %121
  br label %149

149:                                              ; preds = %142, %145, %147
  %150 = phi i64 [ %144, %142 ], [ %148, %147 ], [ %139, %145 ]
  %151 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %123, align 8
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %151, i64 %150
  %153 = bitcast %"struct.std::__1::__hash_node_base"** %152 to i8**
  br label %159

154:                                              ; preds = %120
  %155 = bitcast %"struct.std::__1::__hash_node_base"* %126 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast i8* %58 to i64*
  store i64 %156, i64* %157, align 8
  %158 = bitcast %"struct.std::__1::__hash_node_base"* %126 to i8**
  br label %159

159:                                              ; preds = %149, %154
  %160 = phi i8** [ %158, %154 ], [ %153, %149 ]
  store i8* %58, i8** %160, align 8
  br label %161

161:                                              ; preds = %159, %128
  %162 = bitcast i8* %58 to %"struct.std::__1::__hash_node_base"*
  %163 = load i64, i64* %87, align 8
  %164 = add i64 %163, 1
  store i64 %164, i64* %87, align 8
  br label %165

165:                                              ; preds = %51, %161
  %166 = phi i8 [ 1, %161 ], [ 0, %51 ]
  %167 = phi %"struct.std::__1::__hash_node_base"* [ %162, %161 ], [ %34, %51 ]
  %168 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %167, 0
  %169 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %168, i8 %166, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %169
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.spirv_cross::TypedID"* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.453"* dereferenceable(8), %"class.std::__1::tuple.450"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %56, label %12

12:                                               ; preds = %5
  %13 = tail call i64 @llvm.ctpop.i64(i64 %10) #17, !range !5
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = add i64 %10, 4294967295
  %17 = and i64 %16, %8
  br label %22

18:                                               ; preds = %12
  %19 = icmp ugt i64 %10, %8
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = urem i64 %8, %10
  br label %22

22:                                               ; preds = %15, %18, %20
  %23 = phi i64 [ %17, %15 ], [ %21, %20 ], [ %8, %18 ]
  %24 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, i64 %23
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, null
  br i1 %28, label %56, label %29

29:                                               ; preds = %22
  %30 = add i64 %10, -1
  br label %31

31:                                               ; preds = %29, %51
  %32 = phi %"struct.std::__1::__hash_node_base"* [ %34, %51 ], [ %27, %29 ]
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %33, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base"* %34, null
  br i1 %35, label %56, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 1
  %38 = bitcast %"struct.std::__1::__hash_node_base"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, %8
  br i1 %40, label %51, label %41

41:                                               ; preds = %36
  br i1 %14, label %44, label %42

42:                                               ; preds = %41
  %43 = and i64 %39, %30
  br label %48

44:                                               ; preds = %41
  %45 = icmp ult i64 %39, %10
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = urem i64 %39, %10
  br label %48

48:                                               ; preds = %42, %44, %46
  %49 = phi i64 [ %43, %42 ], [ %47, %46 ], [ %39, %44 ]
  %50 = icmp eq i64 %49, %23
  br i1 %50, label %51, label %56

51:                                               ; preds = %36, %48
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 2
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %7
  br i1 %55, label %165, label %31

56:                                               ; preds = %31, %48, %22, %5
  %57 = phi i64 [ %23, %22 ], [ -6148914691236517206, %5 ], [ %23, %48 ], [ %23, %31 ]
  %58 = tail call i8* @_Znwm(i64 400) #18, !noalias !166
  %59 = getelementptr inbounds i8, i8* %58, i64 16
  %60 = getelementptr inbounds %"class.std::__1::tuple.453", %"class.std::__1::tuple.453"* %3, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %60, align 8, !noalias !166
  %62 = getelementptr inbounds %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID"* %61, i64 0, i32 0
  %63 = bitcast i8* %59 to i32*
  %64 = load i32, i32* %62, align 4, !noalias !166
  store i32 %64, i32* %63, align 8, !noalias !166
  %65 = getelementptr inbounds i8, i8* %58, i64 24
  %66 = getelementptr inbounds i8, i8* %58, i64 136
  %67 = bitcast i8* %66 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 376, i1 false) #17, !noalias !166
  store i32 1065353216, i32* %67, align 4, !noalias !166
  %68 = getelementptr inbounds i8, i8* %58, i64 144
  %69 = bitcast i8* %68 to i32*
  store i32 2147483647, i32* %69, align 8, !noalias !166
  %70 = getelementptr inbounds i8, i8* %58, i64 148
  %71 = getelementptr inbounds i8, i8* %58, i64 200
  %72 = bitcast i8* %71 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %70, i8 0, i64 52, i1 false) #17, !noalias !166
  store i32 2147483647, i32* %72, align 8, !noalias !166
  %73 = getelementptr inbounds i8, i8* %58, i64 204
  store i8 0, i8* %73, align 4, !noalias !166
  %74 = getelementptr inbounds i8, i8* %58, i64 208
  %75 = getelementptr inbounds i8, i8* %58, i64 248
  %76 = bitcast i8* %75 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 40, i1 false) #17, !noalias !166
  store i32 1065353216, i32* %76, align 4, !noalias !166
  %77 = getelementptr i8, i8* %58, i64 256
  %78 = getelementptr inbounds i8, i8* %58, i64 352
  %79 = getelementptr inbounds i8, i8* %58, i64 384
  %80 = bitcast i8* %79 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 32, i1 false) #17, !noalias !166
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %77, i8 0, i64 88, i1 false) #17, !noalias !166
  store i32 1065353216, i32* %80, align 4, !noalias !166
  %81 = getelementptr inbounds i8, i8* %58, i64 392
  store i8 0, i8* %81, align 8, !noalias !166
  %82 = getelementptr inbounds i8, i8* %58, i64 396
  %83 = bitcast i8* %82 to i32*
  store i32 0, i32* %83, align 4, !noalias !166
  %84 = getelementptr inbounds i8, i8* %58, i64 8
  %85 = bitcast i8* %84 to i64*
  store i64 %8, i64* %85, align 8, !noalias !166
  %86 = bitcast i8* %58 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %86, align 8, !noalias !166
  %87 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, 1
  %90 = uitofp i64 %89 to float
  %91 = uitofp i64 %10 to float
  %92 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %93 = load float, float* %92, align 4
  %94 = fmul float %93, %91
  %95 = fcmp olt float %94, %90
  %96 = or i1 %11, %95
  br i1 %96, label %97, label %120

97:                                               ; preds = %56
  %98 = shl i64 %10, 1
  %99 = icmp ult i64 %10, 3
  %100 = tail call i64 @llvm.ctpop.i64(i64 %10) #17, !range !5
  %101 = icmp ugt i64 %100, 1
  %102 = or i1 %99, %101
  %103 = zext i1 %102 to i64
  %104 = or i64 %98, %103
  %105 = fdiv float %90, %93
  %106 = tail call float @llvm.ceil.f32(float %105) #17
  %107 = fptoui float %106 to i64
  %108 = icmp ult i64 %104, %107
  %109 = select i1 %108, i64 %107, i64 %104
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %109)
  %110 = load i64, i64* %9, align 8
  %111 = tail call i64 @llvm.ctpop.i64(i64 %110) #17, !range !5
  %112 = icmp ugt i64 %111, 1
  br i1 %112, label %116, label %113

113:                                              ; preds = %97
  %114 = add i64 %110, 4294967295
  %115 = and i64 %114, %8
  br label %120

116:                                              ; preds = %97
  %117 = icmp ugt i64 %110, %8
  br i1 %117, label %120, label %118

118:                                              ; preds = %116
  %119 = urem i64 %8, %110
  br label %120

120:                                              ; preds = %118, %116, %113, %56
  %121 = phi i64 [ %10, %56 ], [ %110, %113 ], [ %110, %116 ], [ %110, %118 ]
  %122 = phi i64 [ %57, %56 ], [ %115, %113 ], [ %8, %116 ], [ %119, %118 ]
  %123 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %123, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %122
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base"* %126, null
  br i1 %127, label %128, label %154

128:                                              ; preds = %120
  %129 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %130 = bitcast %"struct.std::__1::__hash_node_base"* %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %58 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base"* %129 to i8**
  store i8* %58, i8** %133, align 8
  store %"struct.std::__1::__hash_node_base"* %129, %"struct.std::__1::__hash_node_base"** %125, align 8
  %134 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, align 8
  %135 = icmp eq %"struct.std::__1::__hash_node_base"* %134, null
  br i1 %135, label %161, label %136

136:                                              ; preds = %128
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %134, i64 1
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = tail call i64 @llvm.ctpop.i64(i64 %121) #17, !range !5
  %141 = icmp ugt i64 %140, 1
  br i1 %141, label %145, label %142

142:                                              ; preds = %136
  %143 = add i64 %121, -1
  %144 = and i64 %139, %143
  br label %149

145:                                              ; preds = %136
  %146 = icmp ult i64 %139, %121
  br i1 %146, label %149, label %147

147:                                              ; preds = %145
  %148 = urem i64 %139, %121
  br label %149

149:                                              ; preds = %142, %145, %147
  %150 = phi i64 [ %144, %142 ], [ %148, %147 ], [ %139, %145 ]
  %151 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %123, align 8
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %151, i64 %150
  %153 = bitcast %"struct.std::__1::__hash_node_base"** %152 to i8**
  br label %159

154:                                              ; preds = %120
  %155 = bitcast %"struct.std::__1::__hash_node_base"* %126 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast i8* %58 to i64*
  store i64 %156, i64* %157, align 8
  %158 = bitcast %"struct.std::__1::__hash_node_base"* %126 to i8**
  br label %159

159:                                              ; preds = %149, %154
  %160 = phi i8** [ %158, %154 ], [ %153, %149 ]
  store i8* %58, i8** %160, align 8
  br label %161

161:                                              ; preds = %159, %128
  %162 = bitcast i8* %58 to %"struct.std::__1::__hash_node_base"*
  %163 = load i64, i64* %87, align 8
  %164 = add i64 %163, 1
  store i64 %164, i64* %87, align 8
  br label %165

165:                                              ; preds = %51, %161
  %166 = phi i8 [ 1, %161 ], [ 0, %51 ]
  %167 = phi %"struct.std::__1::__hash_node_base"* [ %162, %161 ], [ %34, %51 ]
  %168 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %167, 0
  %169 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %168, i8 %166, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %169
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #8

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.105"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.101"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #17, !range !5
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.105"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.105"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.105"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.105"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.105"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #18, !noalias !169
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !169
  store i32 %58, i32* %57, align 4, !noalias !169
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !169
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.105"**
  store %"struct.std::__1::__hash_node_base.105"* null, %"struct.std::__1::__hash_node_base.105"** %61, align 8, !noalias !169
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #17, !range !5
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #17
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.101"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #17, !range !5
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.105"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.101", %"class.std::__1::__hash_table.101"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.105"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.105"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.105"* %104, %"struct.std::__1::__hash_node_base.105"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.105"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105", %"struct.std::__1::__hash_node_base.105"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.105"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #17, !range !5
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.105"**, %"struct.std::__1::__hash_node_base.105"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.105"*, %"struct.std::__1::__hash_node_base.105"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.105"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.105"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.105"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.105"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.105"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.105"*, i8 } undef, %"struct.std::__1::__hash_node_base.105"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.105"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.105"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.spirv_cross::SPIRConstant"* @_ZN11spirv_cross7Variant16allocate_and_setINS_12SPIRConstantEJRjEEEPT_NS_5TypesEDpOT0_(%"class.spirv_cross::Variant"*, i32, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %0, i64 0, i32 0
  %6 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %6, i64 0, i32 0, i64 %7, i32 0, i32 0, i32 0
  %9 = bitcast %"class.spirv_cross::ObjectPoolBase"** %8 to %"class.spirv_cross::ObjectPool.186"**
  %10 = load %"class.spirv_cross::ObjectPool.186"*, %"class.spirv_cross::ObjectPool.186"** %9, align 8
  %11 = tail call %"struct.spirv_cross::SPIRConstant"* @_ZN11spirv_cross10ObjectPoolINS_12SPIRConstantEE8allocateIJRjEEEPS1_DpOT_(%"class.spirv_cross::ObjectPool.186"* %10, i32* dereferenceable(4) %2)
  %12 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %0, i64 0, i32 1
  %13 = load %"struct.spirv_cross::IVariant"*, %"struct.spirv_cross::IVariant"** %12, align 8
  %14 = icmp eq %"struct.spirv_cross::IVariant"* %13, null
  br i1 %14, label %27, label %15

15:                                               ; preds = %3
  %16 = bitcast %"struct.spirv_cross::IVariant"* %13 to i8*
  %17 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %5, align 8
  %18 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %0, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %17, i64 0, i32 0, i64 %20, i32 0, i32 0, i32 0
  %22 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %21, align 8
  %23 = bitcast %"class.spirv_cross::ObjectPoolBase"* %22 to void (%"class.spirv_cross::ObjectPoolBase"*, i8*)***
  %24 = load void (%"class.spirv_cross::ObjectPoolBase"*, i8*)**, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)** %24, i64 2
  %26 = load void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)** %25, align 8
  tail call void %26(%"class.spirv_cross::ObjectPoolBase"* %22, i8* nonnull %16) #17
  br label %27

27:                                               ; preds = %15, %3
  store %"struct.spirv_cross::IVariant"* null, %"struct.spirv_cross::IVariant"** %12, align 8
  %28 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %0, i64 0, i32 3
  %29 = load i8, i8* %28, align 4, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %50

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 0
  %35 = icmp eq i32 %33, %1
  %36 = or i1 %34, %35
  br i1 %36, label %50, label %37

37:                                               ; preds = %31
  %38 = icmp eq %"struct.spirv_cross::SPIRConstant"* %11, null
  br i1 %38, label %48, label %39

39:                                               ; preds = %37
  %40 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %5, align 8
  %41 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %40, i64 0, i32 0, i64 %7, i32 0, i32 0, i32 0
  %42 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %41, align 8
  %43 = bitcast %"struct.spirv_cross::SPIRConstant"* %11 to i8*
  %44 = bitcast %"class.spirv_cross::ObjectPoolBase"* %42 to void (%"class.spirv_cross::ObjectPoolBase"*, i8*)***
  %45 = load void (%"class.spirv_cross::ObjectPoolBase"*, i8*)**, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)** %45, i64 2
  %47 = load void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)** %46, align 8
  tail call void %47(%"class.spirv_cross::ObjectPoolBase"* %42, i8* nonnull %43) #17
  br label %48

48:                                               ; preds = %39, %37
  %49 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #17
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.11, i64 0, i64 0)) #17
  call void @_ZN11spirv_cross16report_and_abortERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #19
  unreachable

50:                                               ; preds = %27, %31
  %51 = bitcast %"struct.spirv_cross::IVariant"** %12 to %"struct.spirv_cross::SPIRConstant"**
  store %"struct.spirv_cross::SPIRConstant"* %11, %"struct.spirv_cross::SPIRConstant"** %51, align 8
  %52 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %0, i64 0, i32 2
  store i32 %1, i32* %52, align 8
  store i8 0, i8* %28, align 4
  ret %"struct.spirv_cross::SPIRConstant"* %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.spirv_cross::SPIRConstant"* @_ZN11spirv_cross10ObjectPoolINS_12SPIRConstantEE8allocateIJRjEEEPS1_DpOT_(%"class.spirv_cross::ObjectPool.186"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.187", %"class.spirv_cross::SmallVector.187"* %3, i64 0, i32 0, i32 0
  %9 = load %"struct.spirv_cross::SPIRConstant"**, %"struct.spirv_cross::SPIRConstant"*** %8, align 8
  %10 = add i64 %5, -1
  %11 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %9, i64 %10
  %12 = load %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %11, align 8
  br label %64

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 2
  %17 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 2, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = trunc i64 %18 to i32
  %20 = shl i32 %15, %19
  %21 = zext i32 %20 to i64
  %22 = mul nuw nsw i64 %21, 352
  %23 = tail call noalias i8* @malloc(i64 %22) #17
  %24 = ptrtoint i8* %23 to i64
  %25 = icmp eq i8* %23, null
  br i1 %25, label %106, label %26

26:                                               ; preds = %13
  %27 = icmp eq i32 %20, 0
  br i1 %27, label %47, label %28

28:                                               ; preds = %26
  %29 = bitcast i8* %23 to %"struct.spirv_cross::SPIRConstant"*
  %30 = getelementptr inbounds %"class.spirv_cross::SmallVector.187", %"class.spirv_cross::SmallVector.187"* %3, i64 0, i32 0, i32 0
  br label %33

31:                                               ; preds = %33
  %32 = load i64, i64* %17, align 8
  br label %47

33:                                               ; preds = %33, %28
  %34 = phi i64 [ 0, %28 ], [ %44, %33 ]
  %35 = phi i64 [ 0, %28 ], [ %45, %33 ]
  %36 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %29, i64 %35
  %37 = ptrtoint %"struct.spirv_cross::SPIRConstant"* %36 to i64
  %38 = add i64 %34, 1
  tail call void @_ZN11spirv_cross11SmallVectorIPNS_12SPIRConstantELm0EE7reserveEm(%"class.spirv_cross::SmallVector.187"* %3, i64 %38) #17
  %39 = load %"struct.spirv_cross::SPIRConstant"**, %"struct.spirv_cross::SPIRConstant"*** %30, align 8
  %40 = load i64, i64* %4, align 8
  %41 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %39, i64 %40
  %42 = bitcast %"struct.spirv_cross::SPIRConstant"** %41 to i64*
  store i64 %37, i64* %42, align 8
  %43 = load i64, i64* %4, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %4, align 8
  %45 = add nuw nsw i64 %35, 1
  %46 = icmp eq i64 %45, %21
  br i1 %46, label %31, label %33

47:                                               ; preds = %26, %31
  %48 = phi i64 [ %32, %31 ], [ %18, %26 ]
  %49 = add i64 %48, 1
  tail call void @_ZN11spirv_cross11SmallVectorINSt3__110unique_ptrINS_12SPIRConstantENS_10ObjectPoolIS3_E13MallocDeleterEEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.195"* %16, i64 %49) #17
  %50 = getelementptr inbounds %"class.spirv_cross::SmallVector.195", %"class.spirv_cross::SmallVector.195"* %16, i64 0, i32 0, i32 0
  %51 = load %"class.std::__1::unique_ptr.197"*, %"class.std::__1::unique_ptr.197"** %50, align 8
  %52 = load i64, i64* %17, align 8
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197"* %51, i64 %52
  %54 = bitcast %"class.std::__1::unique_ptr.197"* %53 to i64*
  store i64 %24, i64* %54, align 8
  %55 = load i64, i64* %17, align 8
  %56 = add i64 %55, 1
  store i64 %56, i64* %17, align 8
  %57 = load i64, i64* %4, align 8
  %58 = getelementptr inbounds %"class.spirv_cross::SmallVector.187", %"class.spirv_cross::SmallVector.187"* %3, i64 0, i32 0, i32 0
  %59 = load %"struct.spirv_cross::SPIRConstant"**, %"struct.spirv_cross::SPIRConstant"*** %58, align 8
  %60 = add i64 %57, -1
  %61 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %59, i64 %60
  %62 = load %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %61, align 8
  %63 = icmp eq i64 %57, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %7, %47
  %65 = phi %"struct.spirv_cross::SPIRConstant"* [ %12, %7 ], [ %62, %47 ]
  %66 = phi i64 [ %10, %7 ], [ %60, %47 ]
  store i64 %66, i64* %4, align 8
  br label %67

67:                                               ; preds = %47, %64
  %68 = phi %"struct.spirv_cross::SPIRConstant"* [ %62, %47 ], [ %65, %64 ]
  %69 = load i32, i32* %1, align 4
  %70 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 0, i32 1, i32 0
  store i32 0, i32* %71, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross12SPIRConstantE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %72 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 1, i32 0
  store i32 %69, i32* %72, align 4
  %73 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 2
  %74 = getelementptr %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 2, i32 0, i64 0, i32 1, i64 0
  %75 = bitcast %"class.spirv_cross::TypedID"* %74 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %75, i8 0, i64 16, i1 false) #17
  %76 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 2, i32 0, i64 0, i32 2
  store i32 1, i32* %76, align 8
  %77 = bitcast %"struct.spirv_cross::SPIRConstant::ConstantMatrix"* %73 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 32, i1 false) #17
  %78 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 2, i32 0, i64 1
  %79 = getelementptr %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 2, i32 0, i64 1, i32 1, i64 0
  %80 = bitcast %"class.spirv_cross::TypedID"* %79 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %80, i8 0, i64 16, i1 false) #17
  %81 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 2, i32 0, i64 1, i32 2
  store i32 1, i32* %81, align 8
  %82 = bitcast %"struct.spirv_cross::SPIRConstant::ConstantVector"* %78 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 32, i1 false) #17
  %83 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 2, i32 0, i64 2
  %84 = getelementptr %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 2, i32 0, i64 2, i32 1, i64 0
  %85 = bitcast %"class.spirv_cross::TypedID"* %84 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %85, i8 0, i64 16, i1 false) #17
  %86 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 2, i32 0, i64 2, i32 2
  store i32 1, i32* %86, align 8
  %87 = bitcast %"struct.spirv_cross::SPIRConstant::ConstantVector"* %83 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 32, i1 false) #17
  %88 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 2, i32 0, i64 3
  %89 = getelementptr %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 2, i32 0, i64 3, i32 1, i64 0
  %90 = bitcast %"class.spirv_cross::TypedID"* %89 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %90, i8 0, i64 16, i1 false) #17
  %91 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 2, i32 0, i64 3, i32 2
  store i32 1, i32* %91, align 8
  %92 = bitcast %"struct.spirv_cross::SPIRConstant::ConstantVector"* %88 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 32, i1 false) #17
  %93 = getelementptr %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 2, i32 1, i64 0
  %94 = bitcast %"class.spirv_cross::TypedID"* %93 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %94, i8 0, i64 16, i1 false) #17
  %95 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 2, i32 2
  store i32 1, i32* %95, align 8
  %96 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 3
  store i8 0, i8* %96, align 8
  %97 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 4
  store i8 0, i8* %97, align 1
  %98 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 5
  store i8 0, i8* %98, align 2
  %99 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 6
  %100 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 6, i32 2
  %101 = bitcast %"class.spirv_cross::SmallVector.189"* %99 to %"class.spirv_cross::AlignedBuffer.192"**
  %102 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 6, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.192"* %100, %"class.spirv_cross::AlignedBuffer.192"** %101, align 8
  %103 = bitcast i64* %102 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %103, align 8
  %104 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 7
  %105 = bitcast %"class.std::__1::basic_string"* %104 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 24, i1 false) #17
  br label %106

106:                                              ; preds = %13, %67
  %107 = phi %"struct.spirv_cross::SPIRConstant"* [ %68, %67 ], [ null, %13 ]
  ret %"struct.spirv_cross::SPIRConstant"* %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross11SmallVectorINSt3__110unique_ptrINS_12SPIRConstantENS_10ObjectPoolIS3_E13MallocDeleterEEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.195"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 2305843009213693951
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @_ZSt9terminatev() #19
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.spirv_cross::SmallVector.195", %"class.spirv_cross::SmallVector.195"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %70

9:                                                ; preds = %5
  %10 = icmp eq i64 %7, 0
  %11 = select i1 %10, i64 1, i64 %7
  %12 = icmp ugt i64 %11, 8
  %13 = select i1 %12, i64 %11, i64 8
  br label %14

14:                                               ; preds = %14, %9
  %15 = phi i64 [ %13, %9 ], [ %17, %14 ]
  %16 = icmp ult i64 %15, %1
  %17 = shl i64 %15, 1
  br i1 %16, label %14, label %18

18:                                               ; preds = %14
  %19 = icmp ugt i64 %15, 8
  br i1 %19, label %20, label %24

20:                                               ; preds = %18
  %21 = shl i64 %15, 3
  %22 = tail call noalias i8* @malloc(i64 %21) #17
  %23 = bitcast i8* %22 to %"class.std::__1::unique_ptr.197"*
  br label %27

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.spirv_cross::SmallVector.195", %"class.spirv_cross::SmallVector.195"* %0, i64 0, i32 2
  %26 = bitcast %"class.spirv_cross::AlignedBuffer.201"* %25 to %"class.std::__1::unique_ptr.197"*
  br label %27

27:                                               ; preds = %24, %20
  %28 = phi %"class.std::__1::unique_ptr.197"* [ %23, %20 ], [ %26, %24 ]
  %29 = icmp eq %"class.std::__1::unique_ptr.197"* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZSt9terminatev() #19
  unreachable

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.spirv_cross::SmallVector.195", %"class.spirv_cross::SmallVector.195"* %0, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::unique_ptr.197"*, %"class.std::__1::unique_ptr.197"** %32, align 8
  %34 = icmp eq %"class.std::__1::unique_ptr.197"* %28, %33
  %35 = bitcast %"class.std::__1::unique_ptr.197"* %33 to i8*
  br i1 %34, label %62, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.spirv_cross::SmallVector.195", %"class.spirv_cross::SmallVector.195"* %0, i64 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %62, label %40

40:                                               ; preds = %36, %55
  %41 = phi %"class.std::__1::unique_ptr.197"* [ %59, %55 ], [ %33, %36 ]
  %42 = phi i64 [ %56, %55 ], [ 0, %36 ]
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197"* %28, i64 %42
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197"* %41, i64 %42
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = bitcast %"class.std::__1::unique_ptr.197"* %44 to i64*
  %47 = load i64, i64* %46, align 8
  store %"struct.spirv_cross::SPIRConstant"* null, %"struct.spirv_cross::SPIRConstant"** %45, align 8
  %48 = bitcast %"class.std::__1::unique_ptr.197"* %43 to i64*
  store i64 %47, i64* %48, align 8
  %49 = load %"class.std::__1::unique_ptr.197"*, %"class.std::__1::unique_ptr.197"** %32, align 8
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197"* %49, i64 %42, i32 0, i32 0, i32 0
  %51 = load %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %50, align 8
  store %"struct.spirv_cross::SPIRConstant"* null, %"struct.spirv_cross::SPIRConstant"** %50, align 8
  %52 = icmp eq %"struct.spirv_cross::SPIRConstant"* %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %40
  %54 = bitcast %"struct.spirv_cross::SPIRConstant"* %51 to i8*
  tail call void @free(i8* %54) #17
  br label %55

55:                                               ; preds = %40, %53
  %56 = add nuw i64 %42, 1
  %57 = load i64, i64* %37, align 8
  %58 = icmp ult i64 %56, %57
  %59 = load %"class.std::__1::unique_ptr.197"*, %"class.std::__1::unique_ptr.197"** %32, align 8
  br i1 %58, label %40, label %60

60:                                               ; preds = %55
  %61 = bitcast %"class.std::__1::unique_ptr.197"* %59 to i8*
  br label %62

62:                                               ; preds = %60, %36, %31
  %63 = phi i8* [ %61, %60 ], [ %35, %36 ], [ %35, %31 ]
  %64 = phi %"class.std::__1::unique_ptr.197"* [ %59, %60 ], [ %33, %36 ], [ %28, %31 ]
  %65 = getelementptr inbounds %"class.spirv_cross::SmallVector.195", %"class.spirv_cross::SmallVector.195"* %0, i64 0, i32 2
  %66 = bitcast %"class.spirv_cross::AlignedBuffer.201"* %65 to %"class.std::__1::unique_ptr.197"*
  %67 = icmp eq %"class.std::__1::unique_ptr.197"* %64, %66
  br i1 %67, label %69, label %68

68:                                               ; preds = %62
  tail call void @free(i8* %63) #17
  br label %69

69:                                               ; preds = %62, %68
  store %"class.std::__1::unique_ptr.197"* %28, %"class.std::__1::unique_ptr.197"** %32, align 8
  store i64 %15, i64* %6, align 8
  br label %70

70:                                               ; preds = %69, %5
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross12SPIRConstantD2Ev(%"struct.spirv_cross::SPIRConstant"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross12SPIRConstantE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 7
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #18
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 6, i32 0, i32 1
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 6, i32 0, i32 0
  %14 = load %"class.spirv_cross::TypedID.191"*, %"class.spirv_cross::TypedID.191"** %13, align 8
  %15 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 6, i32 2
  %16 = bitcast %"class.spirv_cross::AlignedBuffer.192"* %15 to %"class.spirv_cross::TypedID.191"*
  %17 = icmp eq %"class.spirv_cross::TypedID.191"* %14, %16
  br i1 %17, label %20, label %18

18:                                               ; preds = %11
  %19 = bitcast %"class.spirv_cross::TypedID.191"* %14 to i8*
  tail call void @free(i8* %19) #17
  br label %20

20:                                               ; preds = %11, %18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross12SPIRConstantD0Ev(%"struct.spirv_cross::SPIRConstant"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross12SPIRConstantE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 7
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #18
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 6, i32 0, i32 1
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 6, i32 0, i32 0
  %14 = load %"class.spirv_cross::TypedID.191"*, %"class.spirv_cross::TypedID.191"** %13, align 8
  %15 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 6, i32 2
  %16 = bitcast %"class.spirv_cross::AlignedBuffer.192"* %15 to %"class.spirv_cross::TypedID.191"*
  %17 = icmp eq %"class.spirv_cross::TypedID.191"* %14, %16
  br i1 %17, label %20, label %18

18:                                               ; preds = %11
  %19 = bitcast %"class.spirv_cross::TypedID.191"* %14 to i8*
  tail call void @free(i8* %19) #17
  br label %20

20:                                               ; preds = %11, %18
  %21 = bitcast %"struct.spirv_cross::SPIRConstant"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.spirv_cross::IVariant"* @_ZN11spirv_cross12SPIRConstant5cloneEPNS_14ObjectPoolBaseE(%"struct.spirv_cross::SPIRConstant"*, %"class.spirv_cross::ObjectPoolBase"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.spirv_cross::ObjectPoolBase"* %1 to %"class.spirv_cross::ObjectPool.186"*
  %4 = tail call %"struct.spirv_cross::SPIRConstant"* @_ZN11spirv_cross10ObjectPoolINS_12SPIRConstantEE8allocateIJRS1_EEEPS1_DpOT_(%"class.spirv_cross::ObjectPool.186"* %3, %"struct.spirv_cross::SPIRConstant"* dereferenceable(352) %0)
  %5 = bitcast %"struct.spirv_cross::SPIRConstant"* %4 to %"struct.spirv_cross::IVariant"*
  ret %"struct.spirv_cross::IVariant"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross8IVariantD2Ev(%"struct.spirv_cross::IVariant"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross8IVariantD0Ev(%"struct.spirv_cross::IVariant"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.spirv_cross::SPIRConstant"* @_ZN11spirv_cross10ObjectPoolINS_12SPIRConstantEE8allocateIJRS1_EEEPS1_DpOT_(%"class.spirv_cross::ObjectPool.186"*, %"struct.spirv_cross::SPIRConstant"* dereferenceable(352)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.spirv_cross::SmallVector.187", %"class.spirv_cross::SmallVector.187"* %3, i64 0, i32 0, i32 0
  %9 = load %"struct.spirv_cross::SPIRConstant"**, %"struct.spirv_cross::SPIRConstant"*** %8, align 8
  %10 = add i64 %5, -1
  %11 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %9, i64 %10
  %12 = load %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %11, align 8
  br label %64

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 2
  %17 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 2, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = trunc i64 %18 to i32
  %20 = shl i32 %15, %19
  %21 = zext i32 %20 to i64
  %22 = mul nuw nsw i64 %21, 352
  %23 = tail call noalias i8* @malloc(i64 %22) #17
  %24 = ptrtoint i8* %23 to i64
  %25 = icmp eq i8* %23, null
  br i1 %25, label %118, label %26

26:                                               ; preds = %13
  %27 = icmp eq i32 %20, 0
  br i1 %27, label %47, label %28

28:                                               ; preds = %26
  %29 = bitcast i8* %23 to %"struct.spirv_cross::SPIRConstant"*
  %30 = getelementptr inbounds %"class.spirv_cross::SmallVector.187", %"class.spirv_cross::SmallVector.187"* %3, i64 0, i32 0, i32 0
  br label %33

31:                                               ; preds = %33
  %32 = load i64, i64* %17, align 8
  br label %47

33:                                               ; preds = %33, %28
  %34 = phi i64 [ 0, %28 ], [ %44, %33 ]
  %35 = phi i64 [ 0, %28 ], [ %45, %33 ]
  %36 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %29, i64 %35
  %37 = ptrtoint %"struct.spirv_cross::SPIRConstant"* %36 to i64
  %38 = add i64 %34, 1
  tail call void @_ZN11spirv_cross11SmallVectorIPNS_12SPIRConstantELm0EE7reserveEm(%"class.spirv_cross::SmallVector.187"* %3, i64 %38) #17
  %39 = load %"struct.spirv_cross::SPIRConstant"**, %"struct.spirv_cross::SPIRConstant"*** %30, align 8
  %40 = load i64, i64* %4, align 8
  %41 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %39, i64 %40
  %42 = bitcast %"struct.spirv_cross::SPIRConstant"** %41 to i64*
  store i64 %37, i64* %42, align 8
  %43 = load i64, i64* %4, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %4, align 8
  %45 = add nuw nsw i64 %35, 1
  %46 = icmp eq i64 %45, %21
  br i1 %46, label %31, label %33

47:                                               ; preds = %26, %31
  %48 = phi i64 [ %32, %31 ], [ %18, %26 ]
  %49 = add i64 %48, 1
  tail call void @_ZN11spirv_cross11SmallVectorINSt3__110unique_ptrINS_12SPIRConstantENS_10ObjectPoolIS3_E13MallocDeleterEEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.195"* %16, i64 %49) #17
  %50 = getelementptr inbounds %"class.spirv_cross::SmallVector.195", %"class.spirv_cross::SmallVector.195"* %16, i64 0, i32 0, i32 0
  %51 = load %"class.std::__1::unique_ptr.197"*, %"class.std::__1::unique_ptr.197"** %50, align 8
  %52 = load i64, i64* %17, align 8
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197"* %51, i64 %52
  %54 = bitcast %"class.std::__1::unique_ptr.197"* %53 to i64*
  store i64 %24, i64* %54, align 8
  %55 = load i64, i64* %17, align 8
  %56 = add i64 %55, 1
  store i64 %56, i64* %17, align 8
  %57 = load i64, i64* %4, align 8
  %58 = getelementptr inbounds %"class.spirv_cross::SmallVector.187", %"class.spirv_cross::SmallVector.187"* %3, i64 0, i32 0, i32 0
  %59 = load %"struct.spirv_cross::SPIRConstant"**, %"struct.spirv_cross::SPIRConstant"*** %58, align 8
  %60 = add i64 %57, -1
  %61 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %59, i64 %60
  %62 = load %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %61, align 8
  %63 = icmp eq i64 %57, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %7, %47
  %65 = phi %"struct.spirv_cross::SPIRConstant"* [ %12, %7 ], [ %62, %47 ]
  %66 = phi i64 [ %10, %7 ], [ %60, %47 ]
  store i64 %66, i64* %4, align 8
  br label %67

67:                                               ; preds = %47, %64
  %68 = phi %"struct.spirv_cross::SPIRConstant"* [ %62, %47 ], [ %65, %64 ]
  %69 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross8IVariantE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %70 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %1, i64 0, i32 0, i32 1, i32 0
  %71 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 0, i32 1, i32 0
  %72 = load i32, i32* %70, align 8
  store i32 %72, i32* %71, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross12SPIRConstantE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %73 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 1
  %74 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %1, i64 0, i32 1
  %75 = bitcast %"class.spirv_cross::TypedID.135"* %73 to i8*
  %76 = bitcast %"class.spirv_cross::TypedID.135"* %74 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %75, i8* align 4 %76, i64 255, i1 false) #17
  %77 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 6
  %78 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 6, i32 2
  %79 = bitcast %"class.spirv_cross::SmallVector.189"* %77 to %"class.spirv_cross::AlignedBuffer.192"**
  %80 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 6, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.192"* %78, %"class.spirv_cross::AlignedBuffer.192"** %79, align 8
  %81 = bitcast i64* %80 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %81, align 8
  %82 = icmp eq %"struct.spirv_cross::SPIRConstant"* %68, %1
  br i1 %82, label %103, label %83

83:                                               ; preds = %67
  store i64 0, i64* %80, align 8
  %84 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %1, i64 0, i32 6, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  tail call void @_ZN11spirv_cross11SmallVectorINS_7TypedIDILNS_5TypesE3EEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.189"* %77, i64 %85) #17
  %86 = load i64, i64* %84, align 8
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.spirv_cross::SmallVector.189", %"class.spirv_cross::SmallVector.189"* %77, i64 0, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %1, i64 0, i32 6, i32 0, i32 0
  br label %93

91:                                               ; preds = %93, %83
  %92 = phi i64 [ 0, %83 ], [ %101, %93 ]
  store i64 %92, i64* %80, align 8
  br label %103

93:                                               ; preds = %93, %88
  %94 = phi i64 [ 0, %88 ], [ %100, %93 ]
  %95 = load %"class.spirv_cross::TypedID.191"*, %"class.spirv_cross::TypedID.191"** %89, align 8
  %96 = load %"class.spirv_cross::TypedID.191"*, %"class.spirv_cross::TypedID.191"** %90, align 8
  %97 = getelementptr inbounds %"class.spirv_cross::TypedID.191", %"class.spirv_cross::TypedID.191"* %96, i64 %94, i32 0
  %98 = getelementptr inbounds %"class.spirv_cross::TypedID.191", %"class.spirv_cross::TypedID.191"* %95, i64 %94, i32 0
  %99 = load i32, i32* %97, align 4
  store i32 %99, i32* %98, align 4
  %100 = add nuw i64 %94, 1
  %101 = load i64, i64* %84, align 8
  %102 = icmp ult i64 %100, %101
  br i1 %102, label %93, label %91

103:                                              ; preds = %91, %67
  %104 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %68, i64 0, i32 7
  %105 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %1, i64 0, i32 7
  %106 = bitcast %"class.std::__1::basic_string"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %113, label %110

110:                                              ; preds = %103
  %111 = bitcast %"class.std::__1::basic_string"* %104 to i8*
  %112 = bitcast %"class.std::__1::basic_string"* %105 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 24, i1 false) #17
  br label %118

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  %116 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %117 = load i64, i64* %116, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %104, i8* %115, i64 %117) #17
  br label %118

118:                                              ; preds = %113, %110, %13
  %119 = phi %"struct.spirv_cross::SPIRConstant"* [ null, %13 ], [ %68, %110 ], [ %68, %113 ]
  ret %"struct.spirv_cross::SPIRConstant"* %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross11SmallVectorINS_7TypedIDILNS_5TypesE3EEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.189"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 4611686018427387903
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @_ZSt9terminatev() #19
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.spirv_cross::SmallVector.189", %"class.spirv_cross::SmallVector.189"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %60

9:                                                ; preds = %5
  %10 = icmp eq i64 %7, 0
  %11 = select i1 %10, i64 1, i64 %7
  %12 = icmp ugt i64 %11, 8
  %13 = select i1 %12, i64 %11, i64 8
  br label %14

14:                                               ; preds = %14, %9
  %15 = phi i64 [ %13, %9 ], [ %17, %14 ]
  %16 = icmp ult i64 %15, %1
  %17 = shl i64 %15, 1
  br i1 %16, label %14, label %18

18:                                               ; preds = %14
  %19 = icmp ugt i64 %15, 8
  br i1 %19, label %20, label %24

20:                                               ; preds = %18
  %21 = shl i64 %15, 2
  %22 = tail call noalias i8* @malloc(i64 %21) #17
  %23 = bitcast i8* %22 to %"class.spirv_cross::TypedID.191"*
  br label %27

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.spirv_cross::SmallVector.189", %"class.spirv_cross::SmallVector.189"* %0, i64 0, i32 2
  %26 = bitcast %"class.spirv_cross::AlignedBuffer.192"* %25 to %"class.spirv_cross::TypedID.191"*
  br label %27

27:                                               ; preds = %24, %20
  %28 = phi %"class.spirv_cross::TypedID.191"* [ %23, %20 ], [ %26, %24 ]
  %29 = icmp eq %"class.spirv_cross::TypedID.191"* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZSt9terminatev() #19
  unreachable

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.spirv_cross::SmallVector.189", %"class.spirv_cross::SmallVector.189"* %0, i64 0, i32 0, i32 0
  %33 = load %"class.spirv_cross::TypedID.191"*, %"class.spirv_cross::TypedID.191"** %32, align 8
  %34 = icmp eq %"class.spirv_cross::TypedID.191"* %28, %33
  %35 = bitcast %"class.spirv_cross::TypedID.191"* %33 to i8*
  br i1 %34, label %52, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.spirv_cross::SmallVector.189", %"class.spirv_cross::SmallVector.189"* %0, i64 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %36, %40
  %41 = phi %"class.spirv_cross::TypedID.191"* [ %49, %40 ], [ %33, %36 ]
  %42 = phi i64 [ %46, %40 ], [ 0, %36 ]
  %43 = getelementptr inbounds %"class.spirv_cross::TypedID.191", %"class.spirv_cross::TypedID.191"* %41, i64 %42, i32 0
  %44 = getelementptr inbounds %"class.spirv_cross::TypedID.191", %"class.spirv_cross::TypedID.191"* %28, i64 %42, i32 0
  %45 = load i32, i32* %43, align 4
  store i32 %45, i32* %44, align 4
  %46 = add nuw i64 %42, 1
  %47 = load i64, i64* %37, align 8
  %48 = icmp ult i64 %46, %47
  %49 = load %"class.spirv_cross::TypedID.191"*, %"class.spirv_cross::TypedID.191"** %32, align 8
  br i1 %48, label %40, label %50

50:                                               ; preds = %40
  %51 = bitcast %"class.spirv_cross::TypedID.191"* %49 to i8*
  br label %52

52:                                               ; preds = %50, %36, %31
  %53 = phi i8* [ %51, %50 ], [ %35, %36 ], [ %35, %31 ]
  %54 = phi %"class.spirv_cross::TypedID.191"* [ %49, %50 ], [ %33, %36 ], [ %28, %31 ]
  %55 = getelementptr inbounds %"class.spirv_cross::SmallVector.189", %"class.spirv_cross::SmallVector.189"* %0, i64 0, i32 2
  %56 = bitcast %"class.spirv_cross::AlignedBuffer.192"* %55 to %"class.spirv_cross::TypedID.191"*
  %57 = icmp eq %"class.spirv_cross::TypedID.191"* %54, %56
  br i1 %57, label %59, label %58

58:                                               ; preds = %52
  tail call void @free(i8* %53) #17
  br label %59

59:                                               ; preds = %52, %58
  store %"class.spirv_cross::TypedID.191"* %28, %"class.spirv_cross::TypedID.191"** %32, align 8
  store i64 %15, i64* %6, align 8
  br label %60

60:                                               ; preds = %59, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross11SmallVectorIjLm8EE7reserveEm(%"class.spirv_cross::SmallVector.127"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 4611686018427387903
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @_ZSt9terminatev() #19
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.spirv_cross::SmallVector.127", %"class.spirv_cross::SmallVector.127"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %60

9:                                                ; preds = %5
  %10 = icmp eq i64 %7, 0
  %11 = select i1 %10, i64 1, i64 %7
  %12 = icmp ugt i64 %11, 8
  %13 = select i1 %12, i64 %11, i64 8
  br label %14

14:                                               ; preds = %14, %9
  %15 = phi i64 [ %13, %9 ], [ %17, %14 ]
  %16 = icmp ult i64 %15, %1
  %17 = shl i64 %15, 1
  br i1 %16, label %14, label %18

18:                                               ; preds = %14
  %19 = icmp ugt i64 %15, 8
  br i1 %19, label %20, label %24

20:                                               ; preds = %18
  %21 = shl i64 %15, 2
  %22 = tail call noalias i8* @malloc(i64 %21) #17
  %23 = bitcast i8* %22 to i32*
  br label %27

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.spirv_cross::SmallVector.127", %"class.spirv_cross::SmallVector.127"* %0, i64 0, i32 2
  %26 = bitcast %"class.spirv_cross::AlignedBuffer.129"* %25 to i32*
  br label %27

27:                                               ; preds = %24, %20
  %28 = phi i32* [ %23, %20 ], [ %26, %24 ]
  %29 = icmp eq i32* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZSt9terminatev() #19
  unreachable

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.spirv_cross::SmallVector.127", %"class.spirv_cross::SmallVector.127"* %0, i64 0, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = icmp eq i32* %28, %33
  %35 = bitcast i32* %33 to i8*
  br i1 %34, label %52, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.spirv_cross::SmallVector.127", %"class.spirv_cross::SmallVector.127"* %0, i64 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %36, %40
  %41 = phi i32* [ %49, %40 ], [ %33, %36 ]
  %42 = phi i64 [ %46, %40 ], [ 0, %36 ]
  %43 = getelementptr inbounds i32, i32* %28, i64 %42
  %44 = getelementptr inbounds i32, i32* %41, i64 %42
  %45 = load i32, i32* %44, align 4
  store i32 %45, i32* %43, align 4
  %46 = add nuw i64 %42, 1
  %47 = load i64, i64* %37, align 8
  %48 = icmp ult i64 %46, %47
  %49 = load i32*, i32** %32, align 8
  br i1 %48, label %40, label %50

50:                                               ; preds = %40
  %51 = bitcast i32* %49 to i8*
  br label %52

52:                                               ; preds = %50, %36, %31
  %53 = phi i8* [ %51, %50 ], [ %35, %36 ], [ %35, %31 ]
  %54 = phi i32* [ %49, %50 ], [ %33, %36 ], [ %28, %31 ]
  %55 = getelementptr inbounds %"class.spirv_cross::SmallVector.127", %"class.spirv_cross::SmallVector.127"* %0, i64 0, i32 2
  %56 = bitcast %"class.spirv_cross::AlignedBuffer.129"* %55 to i32*
  %57 = icmp eq i32* %54, %56
  br i1 %57, label %59, label %58

58:                                               ; preds = %52
  tail call void @free(i8* %53) #17
  br label %59

59:                                               ; preds = %52, %58
  store i32* %28, i32** %32, align 8
  store i64 %15, i64* %6, align 8
  br label %60

60:                                               ; preds = %59, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.spirv_cross::SPIRConstant"* @_ZN11spirv_cross7Variant16allocate_and_setINS_12SPIRConstantEJRjPjjbEEEPT_NS_5TypesEDpOT0_(%"class.spirv_cross::Variant"*, i32, i32* dereferenceable(4), i32** dereferenceable(8), i32* dereferenceable(4), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %0, i64 0, i32 0
  %9 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %8, align 8
  %10 = zext i32 %1 to i64
  %11 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %9, i64 0, i32 0, i64 %10, i32 0, i32 0, i32 0
  %12 = bitcast %"class.spirv_cross::ObjectPoolBase"** %11 to %"class.spirv_cross::ObjectPool.186"**
  %13 = load %"class.spirv_cross::ObjectPool.186"*, %"class.spirv_cross::ObjectPool.186"** %12, align 8
  %14 = tail call %"struct.spirv_cross::SPIRConstant"* @_ZN11spirv_cross10ObjectPoolINS_12SPIRConstantEE8allocateIJRjPjjbEEEPS1_DpOT_(%"class.spirv_cross::ObjectPool.186"* %13, i32* dereferenceable(4) %2, i32** dereferenceable(8) %3, i32* dereferenceable(4) %4, i8* dereferenceable(1) %5)
  %15 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %0, i64 0, i32 1
  %16 = load %"struct.spirv_cross::IVariant"*, %"struct.spirv_cross::IVariant"** %15, align 8
  %17 = icmp eq %"struct.spirv_cross::IVariant"* %16, null
  br i1 %17, label %30, label %18

18:                                               ; preds = %6
  %19 = bitcast %"struct.spirv_cross::IVariant"* %16 to i8*
  %20 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %8, align 8
  %21 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %20, i64 0, i32 0, i64 %23, i32 0, i32 0, i32 0
  %25 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %24, align 8
  %26 = bitcast %"class.spirv_cross::ObjectPoolBase"* %25 to void (%"class.spirv_cross::ObjectPoolBase"*, i8*)***
  %27 = load void (%"class.spirv_cross::ObjectPoolBase"*, i8*)**, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)** %27, i64 2
  %29 = load void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)** %28, align 8
  tail call void %29(%"class.spirv_cross::ObjectPoolBase"* %25, i8* nonnull %19) #17
  br label %30

30:                                               ; preds = %18, %6
  store %"struct.spirv_cross::IVariant"* null, %"struct.spirv_cross::IVariant"** %15, align 8
  %31 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %0, i64 0, i32 3
  %32 = load i8, i8* %31, align 4, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %53

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %0, i64 0, i32 2
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  %38 = icmp eq i32 %36, %1
  %39 = or i1 %37, %38
  br i1 %39, label %53, label %40

40:                                               ; preds = %34
  %41 = icmp eq %"struct.spirv_cross::SPIRConstant"* %14, null
  br i1 %41, label %51, label %42

42:                                               ; preds = %40
  %43 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %8, align 8
  %44 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %43, i64 0, i32 0, i64 %10, i32 0, i32 0, i32 0
  %45 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %44, align 8
  %46 = bitcast %"struct.spirv_cross::SPIRConstant"* %14 to i8*
  %47 = bitcast %"class.spirv_cross::ObjectPoolBase"* %45 to void (%"class.spirv_cross::ObjectPoolBase"*, i8*)***
  %48 = load void (%"class.spirv_cross::ObjectPoolBase"*, i8*)**, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)** %48, i64 2
  %50 = load void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)** %49, align 8
  tail call void %50(%"class.spirv_cross::ObjectPoolBase"* %45, i8* nonnull %46) #17
  br label %51

51:                                               ; preds = %42, %40
  %52 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #17
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %7, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.11, i64 0, i64 0)) #17
  call void @_ZN11spirv_cross16report_and_abortERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #19
  unreachable

53:                                               ; preds = %30, %34
  %54 = bitcast %"struct.spirv_cross::IVariant"** %15 to %"struct.spirv_cross::SPIRConstant"**
  store %"struct.spirv_cross::SPIRConstant"* %14, %"struct.spirv_cross::SPIRConstant"** %54, align 8
  %55 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %0, i64 0, i32 2
  store i32 %1, i32* %55, align 8
  store i8 0, i8* %31, align 4
  ret %"struct.spirv_cross::SPIRConstant"* %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.spirv_cross::SPIRConstant"* @_ZN11spirv_cross10ObjectPoolINS_12SPIRConstantEE8allocateIJRjPjjbEEEPS1_DpOT_(%"class.spirv_cross::ObjectPool.186"*, i32* dereferenceable(4), i32** dereferenceable(8), i32* dereferenceable(4), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.spirv_cross::SmallVector.187", %"class.spirv_cross::SmallVector.187"* %6, i64 0, i32 0, i32 0
  %12 = load %"struct.spirv_cross::SPIRConstant"**, %"struct.spirv_cross::SPIRConstant"*** %11, align 8
  %13 = add i64 %8, -1
  %14 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %12, i64 %13
  %15 = load %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %14, align 8
  br label %67

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 2
  %20 = getelementptr inbounds %"class.spirv_cross::ObjectPool.186", %"class.spirv_cross::ObjectPool.186"* %0, i64 0, i32 2, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = trunc i64 %21 to i32
  %23 = shl i32 %18, %22
  %24 = zext i32 %23 to i64
  %25 = mul nuw nsw i64 %24, 352
  %26 = tail call noalias i8* @malloc(i64 %25) #17
  %27 = ptrtoint i8* %26 to i64
  %28 = icmp eq i8* %26, null
  br i1 %28, label %77, label %29

29:                                               ; preds = %16
  %30 = icmp eq i32 %23, 0
  br i1 %30, label %50, label %31

31:                                               ; preds = %29
  %32 = bitcast i8* %26 to %"struct.spirv_cross::SPIRConstant"*
  %33 = getelementptr inbounds %"class.spirv_cross::SmallVector.187", %"class.spirv_cross::SmallVector.187"* %6, i64 0, i32 0, i32 0
  br label %36

34:                                               ; preds = %36
  %35 = load i64, i64* %20, align 8
  br label %50

36:                                               ; preds = %36, %31
  %37 = phi i64 [ 0, %31 ], [ %47, %36 ]
  %38 = phi i64 [ 0, %31 ], [ %48, %36 ]
  %39 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %32, i64 %38
  %40 = ptrtoint %"struct.spirv_cross::SPIRConstant"* %39 to i64
  %41 = add i64 %37, 1
  tail call void @_ZN11spirv_cross11SmallVectorIPNS_12SPIRConstantELm0EE7reserveEm(%"class.spirv_cross::SmallVector.187"* %6, i64 %41) #17
  %42 = load %"struct.spirv_cross::SPIRConstant"**, %"struct.spirv_cross::SPIRConstant"*** %33, align 8
  %43 = load i64, i64* %7, align 8
  %44 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %42, i64 %43
  %45 = bitcast %"struct.spirv_cross::SPIRConstant"** %44 to i64*
  store i64 %40, i64* %45, align 8
  %46 = load i64, i64* %7, align 8
  %47 = add i64 %46, 1
  store i64 %47, i64* %7, align 8
  %48 = add nuw nsw i64 %38, 1
  %49 = icmp eq i64 %48, %24
  br i1 %49, label %34, label %36

50:                                               ; preds = %29, %34
  %51 = phi i64 [ %35, %34 ], [ %21, %29 ]
  %52 = add i64 %51, 1
  tail call void @_ZN11spirv_cross11SmallVectorINSt3__110unique_ptrINS_12SPIRConstantENS_10ObjectPoolIS3_E13MallocDeleterEEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.195"* %19, i64 %52) #17
  %53 = getelementptr inbounds %"class.spirv_cross::SmallVector.195", %"class.spirv_cross::SmallVector.195"* %19, i64 0, i32 0, i32 0
  %54 = load %"class.std::__1::unique_ptr.197"*, %"class.std::__1::unique_ptr.197"** %53, align 8
  %55 = load i64, i64* %20, align 8
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197"* %54, i64 %55
  %57 = bitcast %"class.std::__1::unique_ptr.197"* %56 to i64*
  store i64 %27, i64* %57, align 8
  %58 = load i64, i64* %20, align 8
  %59 = add i64 %58, 1
  store i64 %59, i64* %20, align 8
  %60 = load i64, i64* %7, align 8
  %61 = getelementptr inbounds %"class.spirv_cross::SmallVector.187", %"class.spirv_cross::SmallVector.187"* %6, i64 0, i32 0, i32 0
  %62 = load %"struct.spirv_cross::SPIRConstant"**, %"struct.spirv_cross::SPIRConstant"*** %61, align 8
  %63 = add i64 %60, -1
  %64 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %62, i64 %63
  %65 = load %"struct.spirv_cross::SPIRConstant"*, %"struct.spirv_cross::SPIRConstant"** %64, align 8
  %66 = icmp eq i64 %60, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %10, %50
  %68 = phi %"struct.spirv_cross::SPIRConstant"* [ %15, %10 ], [ %65, %50 ]
  %69 = phi i64 [ %13, %10 ], [ %63, %50 ]
  store i64 %69, i64* %7, align 8
  br label %70

70:                                               ; preds = %50, %67
  %71 = phi %"struct.spirv_cross::SPIRConstant"* [ %65, %50 ], [ %68, %67 ]
  %72 = load i32, i32* %1, align 4
  %73 = load i32*, i32** %2, align 8
  %74 = load i32, i32* %3, align 4
  %75 = load i8, i8* %4, align 1, !range !2
  %76 = icmp ne i8 %75, 0
  tail call void @_ZN11spirv_cross12SPIRConstantC2ENS_7TypedIDILNS_5TypesE1EEEPKjjb(%"struct.spirv_cross::SPIRConstant"* %71, i32 %72, i32* %73, i32 %74, i1 zeroext %76)
  br label %77

77:                                               ; preds = %16, %70
  %78 = phi %"struct.spirv_cross::SPIRConstant"* [ %71, %70 ], [ null, %16 ]
  ret %"struct.spirv_cross::SPIRConstant"* %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross12SPIRConstantC2ENS_7TypedIDILNS_5TypesE1EEEPKjjb(%"struct.spirv_cross::SPIRConstant"*, i32, i32*, i32, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %6 = zext i1 %4 to i8
  %7 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 0, i32* %8, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11spirv_cross12SPIRConstantE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 1, i32 0
  store i32 %1, i32* %9, align 4
  %10 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 2
  %11 = getelementptr %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 2, i32 0, i64 0, i32 1, i64 0
  %12 = bitcast %"class.spirv_cross::TypedID"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 16, i1 false) #17
  %13 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 2, i32 0, i64 0, i32 2
  store i32 1, i32* %13, align 8
  %14 = bitcast %"struct.spirv_cross::SPIRConstant::ConstantMatrix"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 32, i1 false) #17
  %15 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 2, i32 0, i64 1
  %16 = getelementptr %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 2, i32 0, i64 1, i32 1, i64 0
  %17 = bitcast %"class.spirv_cross::TypedID"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 16, i1 false) #17
  %18 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 2, i32 0, i64 1, i32 2
  store i32 1, i32* %18, align 8
  %19 = bitcast %"struct.spirv_cross::SPIRConstant::ConstantVector"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 32, i1 false) #17
  %20 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 2, i32 0, i64 2
  %21 = getelementptr %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 2, i32 0, i64 2, i32 1, i64 0
  %22 = bitcast %"class.spirv_cross::TypedID"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 16, i1 false) #17
  %23 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 2, i32 0, i64 2, i32 2
  store i32 1, i32* %23, align 8
  %24 = bitcast %"struct.spirv_cross::SPIRConstant::ConstantVector"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 32, i1 false) #17
  %25 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 2, i32 0, i64 3
  %26 = getelementptr %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 2, i32 0, i64 3, i32 1, i64 0
  %27 = bitcast %"class.spirv_cross::TypedID"* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %27, i8 0, i64 16, i1 false) #17
  %28 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 2, i32 0, i64 3, i32 2
  store i32 1, i32* %28, align 8
  %29 = bitcast %"struct.spirv_cross::SPIRConstant::ConstantVector"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 32, i1 false) #17
  %30 = getelementptr %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 2, i32 1, i64 0
  %31 = bitcast %"class.spirv_cross::TypedID"* %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %31, i8 0, i64 16, i1 false) #17
  %32 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 2, i32 2
  store i32 1, i32* %32, align 8
  %33 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 3
  store i8 %6, i8* %33, align 8
  %34 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 4
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 5
  store i8 0, i8* %35, align 2
  %36 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 6
  %37 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 6, i32 2
  %38 = bitcast %"class.spirv_cross::SmallVector.189"* %36 to %"class.spirv_cross::AlignedBuffer.192"**
  %39 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 6, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.192"* %37, %"class.spirv_cross::AlignedBuffer.192"** %38, align 8
  %40 = bitcast i64* %39 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %40, align 8
  %41 = getelementptr inbounds %"struct.spirv_cross::SPIRConstant", %"struct.spirv_cross::SPIRConstant"* %0, i64 0, i32 7
  %42 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #17
  %43 = zext i32 %3 to i64
  tail call void @_ZN11spirv_cross11SmallVectorINS_7TypedIDILNS_5TypesE3EEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.189"* %36, i64 %43) #17
  %44 = icmp eq i32 %3, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %5
  %46 = getelementptr inbounds %"class.spirv_cross::SmallVector.189", %"class.spirv_cross::SmallVector.189"* %36, i64 0, i32 0, i32 0
  %47 = load i64, i64* %39, align 8
  br label %49

48:                                               ; preds = %49, %5
  store i8 %6, i8* %33, align 8
  ret void

49:                                               ; preds = %49, %45
  %50 = phi i64 [ %47, %45 ], [ %59, %49 ]
  %51 = phi i64 [ 0, %45 ], [ %60, %49 ]
  %52 = getelementptr inbounds i32, i32* %2, i64 %51
  %53 = load i32, i32* %52, align 4
  %54 = add i64 %50, 1
  tail call void @_ZN11spirv_cross11SmallVectorINS_7TypedIDILNS_5TypesE3EEELm8EE7reserveEm(%"class.spirv_cross::SmallVector.189"* %36, i64 %54) #17
  %55 = load %"class.spirv_cross::TypedID.191"*, %"class.spirv_cross::TypedID.191"** %46, align 8
  %56 = load i64, i64* %39, align 8
  %57 = getelementptr inbounds %"class.spirv_cross::TypedID.191", %"class.spirv_cross::TypedID.191"* %55, i64 %56, i32 0
  store i32 %53, i32* %57, align 4
  %58 = load i64, i64* %39, align 8
  %59 = add i64 %58, 1
  store i64 %59, i64* %39, align 8
  %60 = add nuw nsw i64 %51, 1
  %61 = icmp eq i64 %60, %43
  br i1 %61, label %48, label %49
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { cold noreturn nounwind }
attributes #17 = { nounwind }
attributes #18 = { builtin nounwind }
attributes #19 = { noreturn nounwind }
attributes #20 = { noreturn }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = !{i64 0, i64 65}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN11spirv_crossL23ensure_valid_identifierERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE: argument 0"}
!8 = distinct !{!8, !"_ZN11spirv_crossL23ensure_valid_identifierERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !12, !10}
!12 = !{!"llvm.loop.unroll.runtime.disable"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN11spirv_crossL26make_unreserved_identifierERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE: argument 0"}
!15 = distinct !{!15, !"_ZN11spirv_crossL26make_unreserved_identifierERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE"}
!16 = distinct !{!16, !4}
!17 = distinct !{!17, !4}
!18 = distinct !{!18, !4}
!19 = distinct !{!19, !4}
!20 = distinct !{!20, !4}
!21 = distinct !{!21, !4}
!22 = distinct !{!22, !4}
!23 = distinct !{!23, !4}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_: argument 0"}
!26 = distinct !{!26, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_"}
!27 = distinct !{!27, !4}
!28 = distinct !{!28, !4}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !10}
!35 = distinct !{!35, !4}
!36 = distinct !{!36, !10}
!37 = !{!38}
!38 = distinct !{!38, !39}
!39 = distinct !{!39, !"LVerDomain"}
!40 = !{!41}
!41 = distinct !{!41, !39}
!42 = distinct !{!42, !10}
!43 = distinct !{!43, !4}
!44 = distinct !{!44, !10}
!45 = !{!46}
!46 = distinct !{!46, !47}
!47 = distinct !{!47, !"LVerDomain"}
!48 = !{!49}
!49 = distinct !{!49, !47}
!50 = distinct !{!50, !10}
!51 = distinct !{!51, !4}
!52 = distinct !{!52, !10}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = distinct !{!58, !10}
!59 = distinct !{!59, !4}
!60 = distinct !{!60, !10}
!61 = !{!62}
!62 = distinct !{!62, !63}
!63 = distinct !{!63, !"LVerDomain"}
!64 = !{!65}
!65 = distinct !{!65, !63}
!66 = distinct !{!66, !10}
!67 = distinct !{!67, !4}
!68 = distinct !{!68, !10}
!69 = !{!70}
!70 = distinct !{!70, !71}
!71 = distinct !{!71, !"LVerDomain"}
!72 = !{!73}
!73 = distinct !{!73, !71}
!74 = distinct !{!74, !10}
!75 = distinct !{!75, !4}
!76 = distinct !{!76, !10}
!77 = !{!78}
!78 = distinct !{!78, !79}
!79 = distinct !{!79, !"LVerDomain"}
!80 = !{!81}
!81 = distinct !{!81, !79}
!82 = distinct !{!82, !10}
!83 = distinct !{!83, !4}
!84 = distinct !{!84, !10}
!85 = !{!86}
!86 = distinct !{!86, !87}
!87 = distinct !{!87, !"LVerDomain"}
!88 = !{!89}
!89 = distinct !{!89, !87}
!90 = distinct !{!90, !10}
!91 = distinct !{!91, !4}
!92 = distinct !{!92, !10}
!93 = !{!94}
!94 = distinct !{!94, !95}
!95 = distinct !{!95, !"LVerDomain"}
!96 = !{!97}
!97 = distinct !{!97, !95}
!98 = distinct !{!98, !10}
!99 = distinct !{!99, !4}
!100 = distinct !{!100, !10}
!101 = !{!102}
!102 = distinct !{!102, !103}
!103 = distinct !{!103, !"LVerDomain"}
!104 = !{!105}
!105 = distinct !{!105, !103}
!106 = distinct !{!106, !10}
!107 = distinct !{!107, !4}
!108 = distinct !{!108, !10}
!109 = !{!110}
!110 = distinct !{!110, !111}
!111 = distinct !{!111, !"LVerDomain"}
!112 = !{!113}
!113 = distinct !{!113, !111}
!114 = distinct !{!114, !10}
!115 = distinct !{!115, !4}
!116 = distinct !{!116, !10}
!117 = !{!118}
!118 = distinct !{!118, !119}
!119 = distinct !{!119, !"LVerDomain"}
!120 = !{!121}
!121 = distinct !{!121, !119}
!122 = distinct !{!122, !10}
!123 = distinct !{!123, !4}
!124 = distinct !{!124, !10}
!125 = !{!126}
!126 = distinct !{!126, !127}
!127 = distinct !{!127, !"LVerDomain"}
!128 = !{!129}
!129 = distinct !{!129, !127}
!130 = distinct !{!130, !10}
!131 = distinct !{!131, !4}
!132 = distinct !{!132, !10}
!133 = distinct !{!133, !4}
!134 = distinct !{!134, !4}
!135 = distinct !{!135, !4}
!136 = distinct !{!136, !4}
!137 = !{!138}
!138 = distinct !{!138, !139, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_4pairIKS5_S6_EEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISS_EEEEEEDpOT_: argument 0"}
!139 = distinct !{!139, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_4pairIKS5_S6_EEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISS_EEEEEEDpOT_"}
!140 = distinct !{!140, !4}
!141 = !{!142}
!142 = distinct !{!142, !143, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_4pairIKjjEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISN_EEEEEEDpOT_: argument 0"}
!143 = distinct !{!143, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_4pairIKjjEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISN_EEEEEEDpOT_"}
!144 = distinct !{!144, !4}
!145 = distinct !{!145, !4}
!146 = !{!147}
!147 = distinct !{!147, !148, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_4pairIKjjEEJEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISN_EEEEEEmOT_DpOT0_: argument 0"}
!148 = distinct !{!148, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_4pairIKjjEEJEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISN_EEEEEEmOT_DpOT0_"}
!149 = distinct !{!149, !4}
!150 = !{!151}
!151 = distinct !{!151, !152, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE6EEES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_4pairIKS5_S5_EEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISR_EEEEEEDpOT_: argument 0"}
!152 = distinct !{!152, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE6EEES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_4pairIKS5_S5_EEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISR_EEEEEEDpOT_"}
!153 = distinct !{!153, !4}
!154 = distinct !{!154, !4}
!155 = !{!156}
!156 = distinct !{!156, !157, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE4EEENS2_14SPIREntryPointEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_4pairIKS5_S6_EEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISS_EEEEEEDpOT_: argument 0"}
!157 = distinct !{!157, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE4EEENS2_14SPIREntryPointEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_4pairIKS5_S6_EEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISS_EEEEEEDpOT_"}
!158 = distinct !{!158, !4}
!159 = distinct !{!159, !4}
!160 = !{!161}
!161 = distinct !{!161, !162, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE16__construct_nodeIJRKjEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!162 = distinct !{!162, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE16__construct_nodeIJRKjEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEDpOT_"}
!163 = !{!164}
!164 = distinct !{!164, !165, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!165 = distinct !{!165, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISU_EEEEEEmOT_DpOT0_"}
!166 = !{!167}
!167 = distinct !{!167, !168, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISV_EEEEEEmOT_DpOT0_: argument 0"}
!168 = distinct !{!168, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS2_5TypesE0EEENS2_4MetaEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISV_EEEEEEmOT_DpOT0_"}
!169 = !{!170}
!170 = distinct !{!170, !171, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISC_EEEEEEmOT_DpOT0_: argument 0"}
!171 = distinct !{!171, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISC_EEEEEEmOT_DpOT0_"}
