; ModuleID = '../../third_party/skia/src/codec/SkCodec.cpp'
source_filename = "../../third_party/skia/src/codec/SkCodec.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.DecoderProc*, %struct.DecoderProc*, %"class.std::__1::__compressed_pair.22" }
%struct.DecoderProc = type { i1 (i8*, i64)*, %class.SkCodec* (%class.SkStream*, i32*)* }
%class.SkCodec = type <{ i32 (...)**, %struct.SkEncodedInfo, i32, [4 x i8], %"class.std::__1::unique_ptr.6", i8, [3 x i8], i32, %struct.SkImageInfo, %"struct.SkCodec::Options", i32, i32, %struct.skcms_ICCProfile, i32, i32, i8, i8, [6 x i8] }>
%struct.SkEncodedInfo = type { i32, i32, i32, i32, i8, %"class.std::__1::unique_ptr.0" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.SkEncodedInfo::ICCProfile"* }
%"class.SkEncodedInfo::ICCProfile" = type { %struct.skcms_ICCProfile, %class.sk_sp }
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.SkStream* }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.12, i32, i32 }
%class.sk_sp.12 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.13, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.13 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"struct.SkCodec::Options" = type { i32, %struct.SkIRect*, i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.3, [8 x i8] }
%struct.anon.3 = type { i32, i8*, i8* }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%class.SkStream = type { i32 (...)** }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %struct.DecoderProc* }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.SkPngChunkReader = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkMemoryStream = type { %class.SkStreamMemory, %class.sk_sp, i64 }
%class.SkStreamMemory = type { %class.SkStreamAsset }
%class.SkStreamAsset = type { %class.SkStreamSeekable }
%class.SkStreamSeekable = type { %class.SkStreamRewindable }
%class.SkStreamRewindable = type { %class.SkStream }
%"class.SkYUVAPixmapInfo::SupportedDataTypes" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%class.SkYUVAPixmapInfo = type <{ %class.SkYUVAInfo, %"struct.std::__1::array", %"struct.std::__1::array.31", i32, [4 x i8] }>
%class.SkYUVAInfo = type { %struct.SkISize, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [4 x %struct.SkImageInfo] }
%"struct.std::__1::array.31" = type { [4 x i64] }
%class.SkYUVAPixmaps = type <{ %"struct.std::__1::array.32", %class.sk_sp, %class.SkYUVAInfo, i32, [4 x i8] }>
%"struct.std::__1::array.32" = type { [4 x %class.SkPixmap] }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkAndroidCodec = type { i32 (...)**, %struct.SkImageInfo, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkCodec* }
%class.SkFrameHolder = type { i32 (...)**, i32, i32 }
%class.SkFrame = type { i32 (...)**, i32, i8, i32, %struct.SkIRect, i32, i32, i32 }
%class.SkSampler = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type <{ %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.34", [4 x i8] }>
%"class.std::__1::__tuple_leaf" = type { %class.sk_sp.33 }
%class.sk_sp.33 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%"class.std::__1::__tuple_leaf.34" = type { i32 }
%class.SkBitmap = type { %class.sk_sp.35, %class.SkPixmap, %class.sk_sp.36 }
%class.sk_sp.35 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.sk_sp.36 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"struct.SkCodec::FrameInfo"*, %"struct.SkCodec::FrameInfo"*, %"class.std::__1::__compressed_pair.39" }
%"struct.SkCodec::FrameInfo" = type { i32, i32, i8, i32, i8, i32, i32, %struct.SkIRect }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.SkCodec::FrameInfo"* }

$_ZNK7SkCodec21onGetScaledDimensionsEf = comdat any

$_ZN7SkCodec21onDimensionsSupportedERK7SkISize = comdat any

$_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ = comdat any

$_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps = comdat any

$_ZNK7SkCodec16onGetValidSubsetEP7SkIRect = comdat any

$_ZN7SkCodec8onRewindEv = comdat any

$_ZNK7SkCodec18onGetScanlineOrderEv = comdat any

$_ZNK7SkCodec14usesColorXformEv = comdat any

$_ZN7SkCodec15onGetFrameCountEv = comdat any

$_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE = comdat any

$_ZN7SkCodec20onGetRepetitionCountEv = comdat any

$_ZNK7SkCodec14getFrameHolderEv = comdat any

$_ZN7SkCodec21onStartScanlineDecodeERK11SkImageInfoRKNS_7OptionsE = comdat any

$_ZN7SkCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKNS_7OptionsE = comdat any

$_ZN7SkCodec19onIncrementalDecodeEPi = comdat any

$_ZN7SkCodec15onSkipScanlinesEi = comdat any

$_ZN7SkCodec14onGetScanlinesEPvim = comdat any

$_ZN7SkCodec10getSamplerEb = comdat any

$_ZNK13SkEncodedInfo13makeImageInfoEv = comdat any

@_ZTV7SkCodec = hidden unnamed_addr constant { [26 x i8*] } { [26 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkCodec*)* @_ZN7SkCodecD2Ev to i8*), i8* bitcast (void (%class.SkCodec*)* @_ZN7SkCodecD0Ev to i8*), i8* bitcast (i64 (%class.SkCodec*, float)* @_ZNK7SkCodec21onGetScaledDimensionsEf to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkISize*)* @_ZN7SkCodec21onDimensionsSupportedERK7SkISize to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)* @_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ to i8*), i8* bitcast (i32 (%class.SkCodec*, %class.SkYUVAPixmaps*)* @_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkIRect*)* @_ZNK7SkCodec16onGetValidSubsetEP7SkIRect to i8*), i8* bitcast (i1 (%class.SkCodec*)* @_ZN7SkCodec8onRewindEv to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZNK7SkCodec18onGetScanlineOrderEv to i8*), i8* bitcast (i32 (%class.SkCodec*, i32)* @_ZNK7SkCodec16onOutputScanlineEi to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkImageInfo*, i1, i1)* @_ZN7SkCodec19conversionSupportedERK11SkImageInfobb to i8*), i8* bitcast (i1 (%class.SkCodec*)* @_ZNK7SkCodec14usesColorXformEv to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZN7SkCodec15onGetFrameCountEv to i8*), i8* bitcast (i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)* @_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZN7SkCodec20onGetRepetitionCountEv to i8*), i8* bitcast (%class.SkFrameHolder* (%class.SkCodec*)* @_ZNK7SkCodec14getFrameHolderEv to i8*), i8* bitcast (i32 (%class.SkCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)* @_ZN7SkCodec21onStartScanlineDecodeERK11SkImageInfoRKNS_7OptionsE to i8*), i8* bitcast (i32 (%class.SkCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)* @_ZN7SkCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKNS_7OptionsE to i8*), i8* bitcast (i32 (%class.SkCodec*, i32*)* @_ZN7SkCodec19onIncrementalDecodeEPi to i8*), i8* bitcast (i1 (%class.SkCodec*, i32)* @_ZN7SkCodec15onSkipScanlinesEi to i8*), i8* bitcast (i32 (%class.SkCodec*, i8*, i32, i64)* @_ZN7SkCodec14onGetScanlinesEPvim to i8*), i8* bitcast (%class.SkSampler* (%class.SkCodec*, i1)* @_ZN7SkCodec10getSamplerEb to i8*)] }, align 8
@.str = private unnamed_addr constant [8 x i8] c"success\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"incomplete input\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"error in input\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"invalid conversion\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"invalid scale\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"invalid parameters\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"invalid input\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"could not rewind\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"internal error\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"unimplemented\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"bogus result value\00", align 1
@_ZZL8decodersvE8decoders = internal unnamed_addr global %"class.std::__1::vector"* null, align 8
@_ZGVZL8decodersvE8decoders = internal global i64 0, align 8
@.ref.tmp = private unnamed_addr constant [6 x %struct.DecoderProc] [%struct.DecoderProc { i1 (i8*, i64)* @_ZN11SkJpegCodec6IsJpegEPKvm, %class.SkCodec* (%class.SkStream*, i32*)* @_ZN11SkJpegCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPN7SkCodec6ResultE }, %struct.DecoderProc { i1 (i8*, i64)* @_ZN11SkWebpCodec6IsWebpEPKvm, %class.SkCodec* (%class.SkStream*, i32*)* @_ZN11SkWebpCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPN7SkCodec6ResultE }, %struct.DecoderProc { i1 (i8*, i64)* @_ZN10SkGifCodec5IsGifEPKvm, %class.SkCodec* (%class.SkStream*, i32*)* @_ZN10SkGifCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPN7SkCodec6ResultE }, %struct.DecoderProc { i1 (i8*, i64)* @_ZN10SkIcoCodec5IsIcoEPKvm, %class.SkCodec* (%class.SkStream*, i32*)* @_ZN10SkIcoCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPN7SkCodec6ResultE }, %struct.DecoderProc { i1 (i8*, i64)* @_ZN10SkBmpCodec5IsBmpEPKvm, %class.SkCodec* (%class.SkStream*, i32*)* @_ZN10SkBmpCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPN7SkCodec6ResultE }, %struct.DecoderProc { i1 (i8*, i64)* @_ZN11SkWbmpCodec6IsWbmpEPKvm, %class.SkCodec* (%class.SkStream*, i32*)* @_ZN11SkWbmpCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPN7SkCodec6ResultE }], align 8
@switch.table._ZN7SkCodec14ResultToStringENS_6ResultE = private unnamed_addr constant [10 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0)], align 8

@_ZN7SkCodecD1Ev = hidden unnamed_addr alias void (%class.SkCodec*), void (%class.SkCodec*)* @_ZN7SkCodecD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkCodec8RegisterEPFbPKvmEPFNSt3__110unique_ptrIS_NS4_14default_deleteIS_EEEENS5_I8SkStreamNS6_IS9_EEEEPNS_6ResultEE(i1 (i8*, i64)*, %class.SkCodec* (%class.SkStream*, i32*)*) local_unnamed_addr #0 align 2 {
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZL8decodersvE8decoders to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %18, !prof !2

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL8decodersvE8decoders) #16
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %18, label %8

8:                                                ; preds = %5
  %9 = tail call i8* @_Znwm(i64 24) #17
  %10 = tail call i8* @_Znwm(i64 96) #17
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = bitcast i8* %9 to i8**
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds i8, i8* %10, i64 96
  %14 = getelementptr inbounds i8, i8* %9, i64 16
  %15 = bitcast i8* %14 to i8**
  store i8* %13, i8** %15, align 8
  %16 = bitcast i8* %11 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 bitcast ([6 x %struct.DecoderProc]* @.ref.tmp to i8*), i64 96, i1 false) #16
  %17 = ptrtoint i8* %13 to i64
  store i64 %17, i64* %16, align 8
  store i8* %9, i8** bitcast (%"class.std::__1::vector"** @_ZZL8decodersvE8decoders to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL8decodersvE8decoders) #16
  br label %18

18:                                               ; preds = %2, %5, %8
  %19 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** @_ZZL8decodersvE8decoders, align 8
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %19, i64 0, i32 0, i32 1
  %21 = load %struct.DecoderProc*, %struct.DecoderProc** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %19, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = load %struct.DecoderProc*, %struct.DecoderProc** %22, align 8
  %24 = icmp ult %struct.DecoderProc* %21, %23
  %25 = ptrtoint %struct.DecoderProc* %23 to i64
  br i1 %24, label %26, label %32

26:                                               ; preds = %18
  %27 = getelementptr inbounds %struct.DecoderProc, %struct.DecoderProc* %21, i64 0, i32 0
  store i1 (i8*, i64)* %0, i1 (i8*, i64)** %27, align 8
  %28 = getelementptr inbounds %struct.DecoderProc, %struct.DecoderProc* %21, i64 0, i32 1
  store %class.SkCodec* (%class.SkStream*, i32*)* %1, %class.SkCodec* (%class.SkStream*, i32*)** %28, align 8
  %29 = getelementptr inbounds %struct.DecoderProc, %struct.DecoderProc* %21, i64 1
  %30 = ptrtoint %struct.DecoderProc* %29 to i64
  %31 = bitcast %struct.DecoderProc** %20 to i64*
  store i64 %30, i64* %31, align 8
  br label %90

32:                                               ; preds = %18
  %33 = ptrtoint %struct.DecoderProc* %21 to i64
  %34 = bitcast %struct.DecoderProc** %20 to i64*
  %35 = bitcast %"class.std::__1::vector"* %19 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %33, %36
  %38 = ashr exact i64 %37, 4
  %39 = add nsw i64 %38, 1
  %40 = icmp ugt i64 %39, 1152921504606846975
  br i1 %40, label %41, label %43

41:                                               ; preds = %32
  %42 = bitcast %"class.std::__1::vector"* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %42) #18
  unreachable

43:                                               ; preds = %32
  %44 = bitcast %struct.DecoderProc** %22 to i64*
  %45 = sub i64 %25, %36
  %46 = ashr exact i64 %45, 4
  %47 = icmp ult i64 %46, 576460752303423487
  br i1 %47, label %48, label %56

48:                                               ; preds = %43
  %49 = ashr exact i64 %45, 3
  %50 = icmp ult i64 %49, %39
  %51 = select i1 %50, i64 %39, i64 %49
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %61, label %53

53:                                               ; preds = %48
  %54 = icmp ugt i64 %51, 1152921504606846975
  br i1 %54, label %55, label %56

55:                                               ; preds = %53
  tail call void @abort() #18
  unreachable

56:                                               ; preds = %53, %43
  %57 = phi i64 [ %51, %53 ], [ 1152921504606846975, %43 ]
  %58 = shl i64 %57, 4
  %59 = tail call i8* @_Znwm(i64 %58) #17
  %60 = bitcast i8* %59 to %struct.DecoderProc*
  br label %61

61:                                               ; preds = %56, %48
  %62 = phi i64 [ %57, %56 ], [ 0, %48 ]
  %63 = phi %struct.DecoderProc* [ %60, %56 ], [ null, %48 ]
  %64 = getelementptr inbounds %struct.DecoderProc, %struct.DecoderProc* %63, i64 %38
  %65 = getelementptr inbounds %struct.DecoderProc, %struct.DecoderProc* %63, i64 %62
  %66 = ptrtoint %struct.DecoderProc* %65 to i64
  %67 = getelementptr inbounds %struct.DecoderProc, %struct.DecoderProc* %64, i64 0, i32 0
  store i1 (i8*, i64)* %0, i1 (i8*, i64)** %67, align 8
  %68 = getelementptr inbounds %struct.DecoderProc, %struct.DecoderProc* %63, i64 %38, i32 1
  store %class.SkCodec* (%class.SkStream*, i32*)* %1, %class.SkCodec* (%class.SkStream*, i32*)** %68, align 8
  %69 = getelementptr inbounds %struct.DecoderProc, %struct.DecoderProc* %64, i64 1
  %70 = ptrtoint %struct.DecoderProc* %69 to i64
  %71 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %19, i64 0, i32 0, i32 0
  %72 = load %struct.DecoderProc*, %struct.DecoderProc** %71, align 8
  %73 = load i64, i64* %34, align 8
  %74 = ptrtoint %struct.DecoderProc* %72 to i64
  %75 = sub i64 %73, %74
  %76 = ashr exact i64 %75, 4
  %77 = sub nsw i64 0, %76
  %78 = getelementptr inbounds %struct.DecoderProc, %struct.DecoderProc* %64, i64 %77
  %79 = ptrtoint %struct.DecoderProc* %78 to i64
  %80 = icmp sgt i64 %75, 0
  br i1 %80, label %81, label %85

81:                                               ; preds = %61
  %82 = bitcast %struct.DecoderProc* %78 to i8*
  %83 = bitcast %struct.DecoderProc* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 %75, i1 false) #16
  %84 = load %struct.DecoderProc*, %struct.DecoderProc** %71, align 8
  br label %85

85:                                               ; preds = %81, %61
  %86 = phi %struct.DecoderProc* [ %72, %61 ], [ %84, %81 ]
  store i64 %79, i64* %35, align 8
  store i64 %70, i64* %34, align 8
  store i64 %66, i64* %44, align 8
  %87 = icmp eq %struct.DecoderProc* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %85
  %89 = bitcast %struct.DecoderProc* %86 to i8*
  tail call void @_ZdlPv(i8* %89) #17
  br label %90

90:                                               ; preds = %26, %85, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkCodec* @_ZN7SkCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPNS_6ResultEP16SkPngChunkReaderNS_15SelectionPolicyE(%class.SkStream*, i32*, %class.SkPngChunkReader*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca [32 x i8], align 16
  %7 = ptrtoint %class.SkStream* %0 to i64
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #16
  store i32 -1431655766, i32* %5, align 4
  %9 = icmp eq i32* %1, null
  %10 = select i1 %9, i32* %5, i32* %1
  %11 = icmp eq %class.SkStream* %0, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %4
  store i32 6, i32* %10, align 4
  br label %83

13:                                               ; preds = %4
  %14 = icmp ugt i32 %3, 1
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  store i32 5, i32* %10, align 4
  br label %83

16:                                               ; preds = %13
  %17 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #16
  %18 = bitcast %class.SkStream* %0 to i64 (%class.SkStream*, i8*, i64)***
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 -86, i64 32, i1 false)
  %19 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %18, align 8
  %20 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %19, i64 3
  %21 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %20, align 8
  %22 = call i64 %21(%class.SkStream* nonnull %0, i8* nonnull %17, i64 32) #16
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %35

24:                                               ; preds = %16
  %25 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %18, align 8
  %26 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %25, i64 2
  %27 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %26, align 8
  %28 = call i64 %27(%class.SkStream* nonnull %0, i8* nonnull %17, i64 32) #16
  %29 = bitcast %class.SkStream* %0 to i1 (%class.SkStream*)***
  %30 = load i1 (%class.SkStream*)**, i1 (%class.SkStream*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%class.SkStream*)*, i1 (%class.SkStream*)** %30, i64 5
  %32 = load i1 (%class.SkStream*)*, i1 (%class.SkStream*)** %31, align 8
  %33 = call zeroext i1 %32(%class.SkStream* nonnull %0) #16
  br i1 %33, label %35, label %34

34:                                               ; preds = %24
  store i32 7, i32* %10, align 4
  br label %80

35:                                               ; preds = %24, %16
  %36 = phi i64 [ %28, %24 ], [ %22, %16 ]
  %37 = call zeroext i1 @_ZN10SkPngCodec5IsPngEPKvm(i8* nonnull %17, i64 %36) #16
  br i1 %37, label %38, label %41

38:                                               ; preds = %35
  %39 = call %class.SkCodec* @_ZN10SkPngCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPN7SkCodec6ResultEP16SkPngChunkReader(%class.SkStream* nonnull %0, i32* %10, %class.SkPngChunkReader* %2) #16
  %40 = ptrtoint %class.SkCodec* %39 to i64
  br label %80

41:                                               ; preds = %35
  %42 = load atomic i8, i8* bitcast (i64* @_ZGVZL8decodersvE8decoders to i8*) acquire, align 8
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %57, !prof !2

44:                                               ; preds = %41
  %45 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL8decodersvE8decoders) #16
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %57, label %47

47:                                               ; preds = %44
  %48 = call i8* @_Znwm(i64 24) #17
  %49 = call i8* @_Znwm(i64 96) #17
  %50 = getelementptr inbounds i8, i8* %48, i64 8
  %51 = bitcast i8* %48 to i8**
  store i8* %49, i8** %51, align 8
  %52 = getelementptr inbounds i8, i8* %49, i64 96
  %53 = getelementptr inbounds i8, i8* %48, i64 16
  %54 = bitcast i8* %53 to i8**
  store i8* %52, i8** %54, align 8
  %55 = bitcast i8* %50 to i64*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %49, i8* align 8 bitcast ([6 x %struct.DecoderProc]* @.ref.tmp to i8*), i64 96, i1 false) #16
  %56 = ptrtoint i8* %52 to i64
  store i64 %56, i64* %55, align 8
  store i8* %48, i8** bitcast (%"class.std::__1::vector"** @_ZZL8decodersvE8decoders to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZL8decodersvE8decoders) #16
  br label %57

57:                                               ; preds = %41, %44, %47
  %58 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** @_ZZL8decodersvE8decoders, align 8
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %58, i64 0, i32 0, i32 0
  %60 = load %struct.DecoderProc*, %struct.DecoderProc** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %58, i64 0, i32 0, i32 1
  %62 = load %struct.DecoderProc*, %struct.DecoderProc** %61, align 8
  %63 = icmp eq %struct.DecoderProc* %60, %62
  br i1 %63, label %77, label %66

64:                                               ; preds = %66
  %65 = icmp eq %struct.DecoderProc* %73, %62
  br i1 %65, label %77, label %66

66:                                               ; preds = %57, %64
  %67 = phi %struct.DecoderProc* [ %73, %64 ], [ %60, %57 ]
  %68 = getelementptr inbounds %struct.DecoderProc, %struct.DecoderProc* %67, i64 0, i32 0
  %69 = load i1 (i8*, i64)*, i1 (i8*, i64)** %68, align 8
  %70 = getelementptr inbounds %struct.DecoderProc, %struct.DecoderProc* %67, i64 0, i32 1
  %71 = load %class.SkCodec* (%class.SkStream*, i32*)*, %class.SkCodec* (%class.SkStream*, i32*)** %70, align 8
  %72 = call zeroext i1 %69(i8* nonnull %17, i64 %36) #16
  %73 = getelementptr inbounds %struct.DecoderProc, %struct.DecoderProc* %67, i64 1
  br i1 %72, label %74, label %64

74:                                               ; preds = %66
  %75 = call %class.SkCodec* %71(%class.SkStream* nonnull %0, i32* %10) #16
  %76 = ptrtoint %class.SkCodec* %75 to i64
  br label %80

77:                                               ; preds = %64, %57
  %78 = icmp ult i64 %36, 32
  %79 = select i1 %78, i32 1, i32 9
  store i32 %79, i32* %10, align 4
  br label %80

80:                                               ; preds = %74, %77, %38, %34
  %81 = phi i64 [ 0, %38 ], [ %7, %77 ], [ 0, %74 ], [ %7, %34 ]
  %82 = phi i64 [ %40, %38 ], [ 0, %77 ], [ %76, %74 ], [ 0, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #16
  br label %83

83:                                               ; preds = %80, %15, %12
  %84 = phi i64 [ %7, %15 ], [ %81, %80 ], [ %7, %12 ]
  %85 = phi i64 [ 0, %15 ], [ %82, %80 ], [ 0, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #16
  %86 = icmp eq i64 %84, 0
  br i1 %86, label %93, label %87

87:                                               ; preds = %83
  %88 = inttoptr i64 %84 to %class.SkStream*
  %89 = inttoptr i64 %84 to void (%class.SkStream*)***
  %90 = load void (%class.SkStream*)**, void (%class.SkStream*)*** %89, align 8
  %91 = getelementptr inbounds void (%class.SkStream*)*, void (%class.SkStream*)** %90, i64 1
  %92 = load void (%class.SkStream*)*, void (%class.SkStream*)** %91, align 8
  call void %92(%class.SkStream* nonnull %88) #16
  br label %93

93:                                               ; preds = %83, %87
  %94 = inttoptr i64 %85 to %class.SkCodec*
  ret %class.SkCodec* %94
}

declare zeroext i1 @_ZN10SkPngCodec5IsPngEPKvm(i8*, i64) local_unnamed_addr #2

declare %class.SkCodec* @_ZN10SkPngCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPN7SkCodec6ResultEP16SkPngChunkReader(%class.SkStream*, i32*, %class.SkPngChunkReader*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkCodec* @_ZN7SkCodec12MakeFromDataE5sk_spI6SkDataEP16SkPngChunkReader(%class.sk_sp* nocapture, %class.SkPngChunkReader*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %5 = load %class.SkData*, %class.SkData** %4, align 8
  %6 = icmp eq %class.SkData* %5, null
  br i1 %6, label %23, label %7

7:                                                ; preds = %2
  %8 = ptrtoint %class.SkData* %5 to i64
  store %class.SkData* null, %class.SkData** %4, align 8
  %9 = bitcast %class.sk_sp* %3 to i64*
  store i64 %8, i64* %9, align 8
  %10 = call %class.SkMemoryStream* @_ZN14SkMemoryStream4MakeE5sk_spI6SkDataE(%class.sk_sp* nonnull %3) #16
  %11 = getelementptr inbounds %class.SkMemoryStream, %class.SkMemoryStream* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = call %class.SkCodec* @_ZN7SkCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPNS_6ResultEP16SkPngChunkReaderNS_15SelectionPolicyE(%class.SkStream* %11, i32* null, %class.SkPngChunkReader* %1, i32 0)
  %13 = ptrtoint %class.SkCodec* %12 to i64
  %14 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %15 = load %class.SkData*, %class.SkData** %14, align 8
  %16 = icmp eq %class.SkData* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %7
  %18 = getelementptr inbounds %class.SkData, %class.SkData* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %15) #16
  %22 = bitcast %class.SkData* %15 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %22) #16
  br label %23

23:                                               ; preds = %2, %21, %17, %7
  %24 = phi i64 [ 0, %2 ], [ %13, %7 ], [ %13, %17 ], [ %13, %21 ]
  %25 = inttoptr i64 %24 to %class.SkCodec*
  ret %class.SkCodec* %25
}

declare %class.SkMemoryStream* @_ZN14SkMemoryStream4MakeE5sk_spI6SkDataE(%class.sk_sp*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkCodecC2EO13SkEncodedInfo17skcms_PixelFormatNSt3__110unique_ptrI8SkStreamNS3_14default_deleteIS5_EEEE15SkEncodedOrigin(%class.SkCodec* nocapture, %struct.SkEncodedInfo* nocapture dereferenceable(32), i32, %class.SkStream*, i32) unnamed_addr #0 align 2 {
  %6 = ptrtoint %class.SkStream* %3 to i64
  %7 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV7SkCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1
  %9 = bitcast %struct.SkEncodedInfo* %8 to i8*
  %10 = bitcast %struct.SkEncodedInfo* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 17, i1 false) #16
  %11 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 5
  %12 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 5
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::unique_ptr.0"* %12 to i64*
  %15 = load i64, i64* %14, align 8
  store %"class.SkEncodedInfo::ICCProfile"* null, %"class.SkEncodedInfo::ICCProfile"** %13, align 8
  %16 = bitcast %"class.std::__1::unique_ptr.0"* %11 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 2
  store i32 %2, i32* %17, align 8
  %18 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 4
  %19 = bitcast %"class.std::__1::unique_ptr.6"* %18 to i64*
  store i64 %6, i64* %19, align 8
  %20 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 5
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 7
  store i32 %4, i32* %21, align 4
  %22 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 8
  %23 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 9, i32 0
  %24 = bitcast %struct.SkImageInfo* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false)
  store i32 1, i32* %23, align 8
  %25 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 9, i32 1
  store %struct.SkIRect* null, %struct.SkIRect** %25, align 8
  %26 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 9, i32 2
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 9, i32 3
  store i32 -1, i32* %27, align 4
  %28 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 14
  store i32 -1, i32* %28, align 4
  %29 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 15
  store i8 0, i8* %29, align 8
  %30 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 16
  store i8 0, i8* %30, align 1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkCodecD2Ev(%class.SkCodec* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV7SkCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %4 = load %class.SkColorSpace*, %class.SkColorSpace** %3, align 8
  %5 = icmp eq %class.SkColorSpace* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorSpace* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #17
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %class.SkStream*, %class.SkStream** %13, align 8
  store %class.SkStream* null, %class.SkStream** %13, align 8
  %15 = icmp eq %class.SkStream* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = bitcast %class.SkStream* %14 to void (%class.SkStream*)***
  %18 = load void (%class.SkStream*)**, void (%class.SkStream*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkStream*)*, void (%class.SkStream*)** %18, i64 1
  %20 = load void (%class.SkStream*)*, void (%class.SkStream*)** %19, align 8
  tail call void %20(%class.SkStream* nonnull %14) #16
  br label %21

21:                                               ; preds = %12, %16
  %22 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 5, i32 0, i32 0, i32 0
  %23 = load %"class.SkEncodedInfo::ICCProfile"*, %"class.SkEncodedInfo::ICCProfile"** %22, align 8
  store %"class.SkEncodedInfo::ICCProfile"* null, %"class.SkEncodedInfo::ICCProfile"** %22, align 8
  %24 = icmp eq %"class.SkEncodedInfo::ICCProfile"* %23, null
  br i1 %24, label %37, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %23, i64 0, i32 1, i32 0
  %27 = load %class.SkData*, %class.SkData** %26, align 8
  %28 = icmp eq %class.SkData* %27, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %class.SkData, %class.SkData* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 -1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %35

33:                                               ; preds = %29
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %27) #16
  %34 = bitcast %class.SkData* %27 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %34) #16
  br label %35

35:                                               ; preds = %33, %29, %25
  %36 = bitcast %"class.SkEncodedInfo::ICCProfile"* %23 to i8*
  tail call void @_ZdlPv(i8* %36) #17
  br label %37

37:                                               ; preds = %21, %35
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN7SkCodecD0Ev(%class.SkCodec* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #18
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7SkCodec13queryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_(%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8), %class.SkYUVAPixmapInfo*) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %class.SkYUVAPixmapInfo* %2, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %3
  %6 = bitcast %class.SkCodec* %0 to i1 (%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)***
  %7 = load i1 (%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)**, i1 (%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)*, i1 (%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)** %7, i64 6
  %9 = load i1 (%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)*, i1 (%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)** %8, align 8
  %10 = tail call zeroext i1 %9(%class.SkCodec* %0, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8) %1, %class.SkYUVAPixmapInfo* nonnull %2) #16
  br i1 %10, label %11, label %13

11:                                               ; preds = %5
  %12 = tail call zeroext i1 @_ZNK16SkYUVAPixmapInfo11isSupportedERKNS_18SupportedDataTypesE(%class.SkYUVAPixmapInfo* nonnull %2, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8) %1) #16
  br label %13

13:                                               ; preds = %5, %11, %3
  %14 = phi i1 [ false, %3 ], [ false, %5 ], [ %12, %11 ]
  ret i1 %14
}

declare zeroext i1 @_ZNK16SkYUVAPixmapInfo11isSupportedERKNS_18SupportedDataTypesE(%class.SkYUVAPixmapInfo*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7SkCodec13getYUVAPlanesERK13SkYUVAPixmaps(%class.SkCodec*, %class.SkYUVAPixmaps* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkYUVAPixmaps, %class.SkYUVAPixmaps* %1, i64 0, i32 2
  %4 = bitcast %class.SkYUVAInfo* %3 to i64*
  %5 = load i64, i64* %4, align 4
  %6 = trunc i64 %5 to i32
  %7 = lshr i64 %5, 32
  %8 = trunc i64 %7 to i32
  %9 = icmp sgt i32 %6, 0
  %10 = icmp sgt i32 %8, 0
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %40

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 5
  %14 = load i8, i8* %13, align 8, !range !3
  %15 = icmp eq i8 %14, 0
  store i8 1, i8* %13, align 8
  br i1 %15, label %34, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 14
  store i32 -1, i32* %17, align 4
  %18 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 15
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %class.SkStream*, %class.SkStream** %19, align 8
  %21 = icmp eq %class.SkStream* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %16
  %23 = bitcast %class.SkStream* %20 to i1 (%class.SkStream*)***
  %24 = load i1 (%class.SkStream*)**, i1 (%class.SkStream*)*** %23, align 8
  %25 = getelementptr inbounds i1 (%class.SkStream*)*, i1 (%class.SkStream*)** %24, i64 5
  %26 = load i1 (%class.SkStream*)*, i1 (%class.SkStream*)** %25, align 8
  %27 = tail call zeroext i1 %26(%class.SkStream* nonnull %20) #16
  br i1 %27, label %28, label %40

28:                                               ; preds = %16, %22
  %29 = bitcast %class.SkCodec* %0 to i1 (%class.SkCodec*)***
  %30 = load i1 (%class.SkCodec*)**, i1 (%class.SkCodec*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%class.SkCodec*)*, i1 (%class.SkCodec*)** %30, i64 9
  %32 = load i1 (%class.SkCodec*)*, i1 (%class.SkCodec*)** %31, align 8
  %33 = tail call zeroext i1 %32(%class.SkCodec* %0) #16
  br i1 %33, label %34, label %40

34:                                               ; preds = %12, %28
  %35 = bitcast %class.SkCodec* %0 to i32 (%class.SkCodec*, %class.SkYUVAPixmaps*)***
  %36 = load i32 (%class.SkCodec*, %class.SkYUVAPixmaps*)**, i32 (%class.SkCodec*, %class.SkYUVAPixmaps*)*** %35, align 8
  %37 = getelementptr inbounds i32 (%class.SkCodec*, %class.SkYUVAPixmaps*)*, i32 (%class.SkCodec*, %class.SkYUVAPixmaps*)** %36, i64 7
  %38 = load i32 (%class.SkCodec*, %class.SkYUVAPixmaps*)*, i32 (%class.SkCodec*, %class.SkYUVAPixmaps*)** %37, align 8
  %39 = tail call i32 %38(%class.SkCodec* %0, %class.SkYUVAPixmaps* dereferenceable(208) %1) #16
  br label %40

40:                                               ; preds = %22, %28, %2, %34
  %41 = phi i32 [ %39, %34 ], [ 6, %2 ], [ 7, %28 ], [ 7, %22 ]
  ret i32 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7SkCodec14rewindIfNeededEv(%class.SkCodec*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp eq i8 %3, 0
  store i8 1, i8* %2, align 8
  br i1 %4, label %23, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 14
  store i32 -1, i32* %6, align 4
  %7 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 15
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %9 = load %class.SkStream*, %class.SkStream** %8, align 8
  %10 = icmp eq %class.SkStream* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %5
  %12 = bitcast %class.SkStream* %9 to i1 (%class.SkStream*)***
  %13 = load i1 (%class.SkStream*)**, i1 (%class.SkStream*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%class.SkStream*)*, i1 (%class.SkStream*)** %13, i64 5
  %15 = load i1 (%class.SkStream*)*, i1 (%class.SkStream*)** %14, align 8
  %16 = tail call zeroext i1 %15(%class.SkStream* nonnull %9) #16
  br i1 %16, label %17, label %23

17:                                               ; preds = %5, %11
  %18 = bitcast %class.SkCodec* %0 to i1 (%class.SkCodec*)***
  %19 = load i1 (%class.SkCodec*)**, i1 (%class.SkCodec*)*** %18, align 8
  %20 = getelementptr inbounds i1 (%class.SkCodec*)*, i1 (%class.SkCodec*)** %19, i64 9
  %21 = load i1 (%class.SkCodec*)*, i1 (%class.SkCodec*)** %20, align 8
  %22 = tail call zeroext i1 %21(%class.SkCodec* %0) #16
  br label %23

23:                                               ; preds = %11, %1, %17
  %24 = phi i1 [ %22, %17 ], [ true, %1 ], [ false, %11 ]
  ret i1 %24
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN7SkCodec19conversionSupportedERK11SkImageInfobb(%class.SkCodec* nocapture readonly, %struct.SkImageInfo* nocapture readonly dereferenceable(24), i1 zeroext, i1 zeroext) unnamed_addr #5 align 2 {
  %5 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp ne i32 %6, 0
  %8 = icmp ne i32 %6, 1
  %9 = or i1 %8, %2
  %10 = and i1 %7, %9
  br i1 %10, label %11, label %25

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  switch i32 %13, label %24 [
    i32 4, label %25
    i32 6, label %25
    i32 13, label %25
    i32 2, label %14
    i32 11, label %15
    i32 1, label %20
  ]

14:                                               ; preds = %11
  br label %25

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  %19 = and i1 %18, %2
  br label %25

20:                                               ; preds = %11
  %21 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 2
  br label %25

24:                                               ; preds = %11
  br label %25

25:                                               ; preds = %4, %11, %11, %11, %24, %20, %15, %14
  %26 = phi i1 [ false, %24 ], [ %23, %20 ], [ %19, %15 ], [ %2, %14 ], [ true, %11 ], [ true, %11 ], [ true, %11 ], [ false, %4 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z9zero_rectRK11SkImageInfoPvm7SkISize7SkIRect(%struct.SkImageInfo* dereferenceable(24), i8*, i64, i64, i64, i64) local_unnamed_addr #0 {
  %7 = alloca <4 x i32>, align 16
  %8 = bitcast <4 x i32>* %7 to { i64, i64 }*
  %9 = bitcast <4 x i32>* %7 to %struct.SkIRect*
  %10 = alloca { <2 x float>, <2 x float> }, align 8
  %11 = alloca { <2 x float>, <2 x float> }, align 8
  %12 = alloca %class.SkMatrix, align 16
  %13 = alloca { <2 x float>, <2 x float> }, align 8
  %14 = bitcast { <2 x float>, <2 x float> }* %13 to %struct.SkRect*
  %15 = alloca { i64, i64 }, align 8
  %16 = bitcast { i64, i64 }* %15 to %struct.SkIRect*
  %17 = alloca %struct.SkImageInfo, align 8
  %18 = trunc i64 %3 to i32
  %19 = lshr i64 %3, 32
  %20 = trunc i64 %19 to i32
  %21 = bitcast <4 x i32>* %7 to i64*
  store i64 %4, i64* %21, align 16
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  store i64 %5, i64* %22, align 8
  %23 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 1
  %24 = bitcast %struct.SkISize* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = trunc i64 %25 to i32
  %27 = lshr i64 %25, 32
  %28 = trunc i64 %27 to i32
  %29 = icmp ne i32 %26, %18
  %30 = icmp ne i32 %28, %20
  %31 = or i1 %29, %30
  br i1 %31, label %32, label %99

32:                                               ; preds = %6
  %33 = bitcast { <2 x float>, <2 x float> }* %11 to %struct.SkRect*
  %34 = bitcast { <2 x float>, <2 x float> }* %10 to %struct.SkRect*
  %35 = bitcast { <2 x float>, <2 x float> }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #16
  %36 = sitofp i32 %18 to float
  %37 = insertelement <2 x float> undef, float %36, i32 0
  %38 = sitofp i32 %20 to float
  %39 = insertelement <2 x float> %37, float %38, i32 1
  %40 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %40, align 8
  %41 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 1
  store <2 x float> %39, <2 x float>* %41, align 8
  %42 = bitcast { <2 x float>, <2 x float> }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #16
  %43 = sitofp i32 %26 to float
  %44 = insertelement <2 x float> undef, float %43, i32 0
  %45 = sitofp i32 %28 to float
  %46 = insertelement <2 x float> %44, float %45, i32 1
  %47 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %47, align 8
  %48 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 1
  store <2 x float> %46, <2 x float>* %48, align 8
  %49 = bitcast %class.SkMatrix* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %49) #16
  %50 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 1
  %51 = bitcast %class.SkMatrix* %12 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %51, align 16, !alias.scope !4
  %52 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 0, i64 4
  %53 = bitcast float* %52 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %53, align 16, !alias.scope !4
  %54 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %54, align 16, !alias.scope !4
  store i32 16, i32* %50, align 4, !alias.scope !4
  %55 = call zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix* nonnull %12, %struct.SkRect* nonnull dereferenceable(16) %34, %struct.SkRect* nonnull dereferenceable(16) %33, i32 0) #16
  %56 = bitcast { <2 x float>, <2 x float> }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #16
  %57 = getelementptr inbounds <4 x i32>, <4 x i32>* %7, i64 0, i64 0
  %58 = load i32, i32* %57, align 16
  %59 = sitofp i32 %58 to float
  %60 = insertelement <2 x float> undef, float %59, i32 0
  %61 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %9, i64 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = sitofp i32 %62 to float
  %64 = insertelement <2 x float> %60, float %63, i32 1
  %65 = bitcast i64* %22 to i32*
  %66 = load i32, i32* %65, align 8
  %67 = sitofp i32 %66 to float
  %68 = insertelement <2 x float> undef, float %67, i32 0
  %69 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %9, i64 0, i32 3
  %70 = load i32, i32* %69, align 4
  %71 = sitofp i32 %70 to float
  %72 = insertelement <2 x float> %68, float %71, i32 1
  %73 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 0
  store <2 x float> %64, <2 x float>* %73, align 8
  %74 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 1
  store <2 x float> %72, <2 x float>* %74, align 8
  %75 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %12, %struct.SkRect* nonnull %14, %struct.SkRect* nonnull dereferenceable(16) %14, i32 1) #16
  br i1 %75, label %76, label %98

76:                                               ; preds = %32
  %77 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 0, i64 0
  %78 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %14, i64 0, i32 3
  %79 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 1, i64 0
  %80 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %14, i64 0, i32 1
  %81 = load float, float* %77, align 8
  %82 = call float @llvm.floor.f32(float %81) #16
  %83 = load float, float* %80, align 4
  %84 = call float @llvm.floor.f32(float %83) #16
  %85 = load float, float* %79, align 8
  %86 = call float @llvm.ceil.f32(float %85) #16
  %87 = load float, float* %78, align 4
  %88 = call float @llvm.ceil.f32(float %87) #16
  %89 = insertelement <4 x float> undef, float %82, i32 0
  %90 = insertelement <4 x float> %89, float %84, i32 1
  %91 = insertelement <4 x float> %90, float %86, i32 2
  %92 = insertelement <4 x float> %91, float %88, i32 3
  %93 = fcmp olt <4 x float> %92, <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %94 = select <4 x i1> %93, <4 x float> %92, <4 x float> <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %95 = fcmp ogt <4 x float> %94, <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %96 = select <4 x i1> %95, <4 x float> %94, <4 x float> <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %97 = fptosi <4 x float> %96 to <4 x i32>
  store <4 x i32> %97, <4 x i32>* %7, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #16
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %49) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #16
  br label %99

98:                                               ; preds = %32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #16
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %49) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #16
  br label %156

99:                                               ; preds = %6, %76
  %100 = bitcast { i64, i64 }* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %100) #16
  %101 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 0
  store i64 0, i64* %101, align 8
  %102 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 1
  store i64 %25, i64* %102, align 8
  %103 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %9, %struct.SkIRect* nonnull dereferenceable(16) %9, %struct.SkIRect* nonnull dereferenceable(16) %16) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %100) #16
  br i1 %103, label %104, label %156

104:                                              ; preds = %99
  %105 = bitcast %struct.SkImageInfo* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #16
  %106 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %17, i64 0, i32 0, i32 0, i32 0
  %107 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %17, i64 0, i32 0, i32 1
  %108 = bitcast i64* %22 to i32*
  %109 = bitcast %struct.SkImageInfo* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 -86, i64 24, i1 false)
  %110 = load i32, i32* %108, align 8
  %111 = getelementptr inbounds <4 x i32>, <4 x i32>* %7, i64 0, i64 0
  %112 = load i32, i32* %111, align 16
  %113 = sub i32 %110, %112
  %114 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %9, i64 0, i32 3
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %9, i64 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = sub i32 %115, %117
  %119 = zext i32 %118 to i64
  %120 = shl nuw i64 %119, 32
  %121 = zext i32 %113 to i64
  %122 = or i64 %120, %121
  %123 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 0, i32 0
  %124 = load %class.SkColorSpace*, %class.SkColorSpace** %123, align 8, !noalias !9
  %125 = icmp eq %class.SkColorSpace* %124, null
  br i1 %125, label %129, label %126

126:                                              ; preds = %104
  %127 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = atomicrmw add i32* %127, i32 1 monotonic, !noalias !9
  br label %129

129:                                              ; preds = %104, %126
  store %class.SkColorSpace* %124, %class.SkColorSpace** %106, align 8, !alias.scope !9
  %130 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 1
  %131 = bitcast i32* %130 to i64*
  %132 = bitcast i32* %107 to i64*
  %133 = load i64, i64* %131, align 8, !noalias !9
  store i64 %133, i64* %132, align 8, !alias.scope !9
  %134 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %17, i64 0, i32 1
  %135 = bitcast %struct.SkISize* %134 to i64*
  store i64 %122, i64* %135, align 8, !alias.scope !9
  %136 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0
  %137 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %136) #16
  %138 = sext i32 %137 to i64
  %139 = load i32, i32* %111, align 16
  %140 = sext i32 %139 to i64
  %141 = mul nsw i64 %140, %138
  %142 = load i32, i32* %116, align 4
  %143 = sext i32 %142 to i64
  %144 = mul i64 %143, %2
  %145 = add i64 %144, %141
  %146 = getelementptr inbounds i8, i8* %1, i64 %145
  call void @_ZN9SkSampler4FillERK11SkImageInfoPvmN7SkCodec15ZeroInitializedE(%struct.SkImageInfo* nonnull dereferenceable(24) %17, i8* %146, i64 %2, i32 1) #16
  %147 = load %class.SkColorSpace*, %class.SkColorSpace** %106, align 8
  %148 = icmp eq %class.SkColorSpace* %147, null
  br i1 %148, label %155, label %149

149:                                              ; preds = %129
  %150 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %147, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = atomicrmw add i32* %150, i32 -1 acq_rel
  %152 = icmp eq i32 %151, 1
  br i1 %152, label %153, label %155

153:                                              ; preds = %149
  %154 = bitcast %class.SkColorSpace* %147 to i8*
  call void @_ZdlPv(i8* %154) #17
  br label %155

155:                                              ; preds = %129, %149, %153
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #16
  br label %156

156:                                              ; preds = %99, %98, %155
  %157 = phi i1 [ true, %155 ], [ false, %98 ], [ true, %99 ]
  ret i1 %157
}

declare void @_ZN9SkSampler4FillERK11SkImageInfoPvmN7SkCodec15ZeroInitializedE(%struct.SkImageInfo* dereferenceable(24), i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7SkCodec16handleFrameIndexERK11SkImageInfoPvmRKNS_7OptionsEP14SkAndroidCodec(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"* nocapture readonly dereferenceable(24), %class.SkAndroidCodec* readnone) local_unnamed_addr #0 align 2 {
  %7 = alloca %"struct.SkCodec::Options", align 8
  %8 = icmp ne %class.SkAndroidCodec* %5, null
  %9 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 16
  br i1 %8, label %10, label %11

10:                                               ; preds = %6
  store i8 1, i8* %9, align 1
  br label %14

11:                                               ; preds = %6
  %12 = load i8, i8* %9, align 1, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %133

14:                                               ; preds = %11, %10
  %15 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 5
  %16 = load i8, i8* %15, align 8, !range !3
  %17 = icmp eq i8 %16, 0
  store i8 1, i8* %15, align 8
  br i1 %17, label %36, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 14
  store i32 -1, i32* %19, align 4
  %20 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 15
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %22 = load %class.SkStream*, %class.SkStream** %21, align 8
  %23 = icmp eq %class.SkStream* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %18
  %25 = bitcast %class.SkStream* %22 to i1 (%class.SkStream*)***
  %26 = load i1 (%class.SkStream*)**, i1 (%class.SkStream*)*** %25, align 8
  %27 = getelementptr inbounds i1 (%class.SkStream*)*, i1 (%class.SkStream*)** %26, i64 5
  %28 = load i1 (%class.SkStream*)*, i1 (%class.SkStream*)** %27, align 8
  %29 = tail call zeroext i1 %28(%class.SkStream* nonnull %22) #16
  br i1 %29, label %30, label %133

30:                                               ; preds = %18, %24
  %31 = bitcast %class.SkCodec* %0 to i1 (%class.SkCodec*)***
  %32 = load i1 (%class.SkCodec*)**, i1 (%class.SkCodec*)*** %31, align 8
  %33 = getelementptr inbounds i1 (%class.SkCodec*)*, i1 (%class.SkCodec*)** %32, i64 9
  %34 = load i1 (%class.SkCodec*)*, i1 (%class.SkCodec*)** %33, align 8
  %35 = tail call zeroext i1 %34(%class.SkCodec* %0) #16
  br i1 %35, label %36, label %133

36:                                               ; preds = %14, %30
  %37 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %4, i64 0, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %46

40:                                               ; preds = %36
  %41 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  %44 = tail call zeroext i1 @_ZN7SkCodec20initializeColorXformERK11SkImageInfoN13SkEncodedInfo5AlphaEb(%class.SkCodec* %0, %struct.SkImageInfo* dereferenceable(24) %1, i32 %42, i1 zeroext %43)
  %45 = select i1 %44, i32 0, i32 3
  br label %133

46:                                               ; preds = %36
  %47 = icmp slt i32 %38, 0
  br i1 %47, label %133, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %4, i64 0, i32 1
  %50 = load %struct.SkIRect*, %struct.SkIRect** %49, align 8
  %51 = icmp eq %struct.SkIRect* %50, null
  br i1 %51, label %52, label %133

52:                                               ; preds = %48
  %53 = bitcast %class.SkCodec* %0 to i32 (%class.SkCodec*)***
  %54 = load i32 (%class.SkCodec*)**, i32 (%class.SkCodec*)*** %53, align 8
  %55 = getelementptr inbounds i32 (%class.SkCodec*)*, i32 (%class.SkCodec*)** %54, i64 14
  %56 = load i32 (%class.SkCodec*)*, i32 (%class.SkCodec*)** %55, align 8
  %57 = tail call i32 %56(%class.SkCodec* %0) #16
  %58 = icmp slt i32 %38, %57
  br i1 %58, label %59, label %133

59:                                               ; preds = %52
  %60 = bitcast %class.SkCodec* %0 to %class.SkFrameHolder* (%class.SkCodec*)***
  %61 = load %class.SkFrameHolder* (%class.SkCodec*)**, %class.SkFrameHolder* (%class.SkCodec*)*** %60, align 8
  %62 = getelementptr inbounds %class.SkFrameHolder* (%class.SkCodec*)*, %class.SkFrameHolder* (%class.SkCodec*)** %61, i64 17
  %63 = load %class.SkFrameHolder* (%class.SkCodec*)*, %class.SkFrameHolder* (%class.SkCodec*)** %62, align 8
  %64 = tail call %class.SkFrameHolder* %63(%class.SkCodec* %0) #16
  %65 = bitcast %class.SkFrameHolder* %64 to %class.SkFrame* (%class.SkFrameHolder*, i32)***
  %66 = load %class.SkFrame* (%class.SkFrameHolder*, i32)**, %class.SkFrame* (%class.SkFrameHolder*, i32)*** %65, align 8
  %67 = getelementptr inbounds %class.SkFrame* (%class.SkFrameHolder*, i32)*, %class.SkFrame* (%class.SkFrameHolder*, i32)** %66, i64 2
  %68 = load %class.SkFrame* (%class.SkFrameHolder*, i32)*, %class.SkFrame* (%class.SkFrameHolder*, i32)** %67, align 8
  %69 = tail call %class.SkFrame* %68(%class.SkFrameHolder* %64, i32 %38) #16
  %70 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %69, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, -1
  br i1 %72, label %122, label %73

73:                                               ; preds = %59
  %74 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %4, i64 0, i32 3
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, -1
  br i1 %76, label %77, label %89

77:                                               ; preds = %73
  br i1 %8, label %133, label %78

78:                                               ; preds = %77
  %79 = bitcast %"struct.SkCodec::Options"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #16
  %80 = bitcast %"struct.SkCodec::Options"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %79, i8* align 8 %80, i64 24, i1 false)
  %81 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %7, i64 0, i32 2
  store i32 %71, i32* %81, align 8
  %82 = call i32 @_ZN7SkCodec9getPixelsERK11SkImageInfoPvmPKNS_7OptionsE(%class.SkCodec* %0, %struct.SkImageInfo* dereferenceable(24) %1, i8* %2, i64 %3, %"struct.SkCodec::Options"* nonnull %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #16
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %133

84:                                               ; preds = %78
  %85 = load %class.SkFrame* (%class.SkFrameHolder*, i32)**, %class.SkFrame* (%class.SkFrameHolder*, i32)*** %65, align 8
  %86 = getelementptr inbounds %class.SkFrame* (%class.SkFrameHolder*, i32)*, %class.SkFrame* (%class.SkFrameHolder*, i32)** %85, i64 2
  %87 = load %class.SkFrame* (%class.SkFrameHolder*, i32)*, %class.SkFrame* (%class.SkFrameHolder*, i32)** %86, align 8
  %88 = call %class.SkFrame* %87(%class.SkFrameHolder* %64, i32 %71) #16
  br label %98

89:                                               ; preds = %73
  %90 = icmp sge i32 %75, %71
  %91 = icmp slt i32 %75, %38
  %92 = and i1 %90, %91
  br i1 %92, label %93, label %133

93:                                               ; preds = %89
  %94 = load %class.SkFrame* (%class.SkFrameHolder*, i32)**, %class.SkFrame* (%class.SkFrameHolder*, i32)*** %65, align 8
  %95 = getelementptr inbounds %class.SkFrame* (%class.SkFrameHolder*, i32)*, %class.SkFrame* (%class.SkFrameHolder*, i32)** %94, i64 2
  %96 = load %class.SkFrame* (%class.SkFrameHolder*, i32)*, %class.SkFrame* (%class.SkFrameHolder*, i32)** %95, align 8
  %97 = tail call %class.SkFrame* %96(%class.SkFrameHolder* %64, i32 %75) #16
  br label %98

98:                                               ; preds = %84, %93
  %99 = phi %class.SkFrame* [ %88, %84 ], [ %97, %93 ]
  %100 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %99, i64 0, i32 5
  %101 = load i32, i32* %100, align 4
  switch i32 %101, label %122 [
    i32 3, label %133
    i32 2, label %102
  ]

102:                                              ; preds = %98
  %103 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %99, i64 0, i32 1
  %104 = load i32, i32* %103, align 8
  %105 = icmp eq i32 %104, %71
  br i1 %105, label %106, label %122

106:                                              ; preds = %102
  %107 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %99, i64 0, i32 4
  %108 = bitcast %struct.SkIRect* %107 to i64*
  %109 = load i64, i64* %108, align 4
  %110 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %99, i64 0, i32 4, i32 2
  %111 = bitcast i32* %110 to i64*
  %112 = load i64, i64* %111, align 4
  %113 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 0
  %114 = load i32, i32* %113, align 8
  %115 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = zext i32 %116 to i64
  %118 = shl nuw i64 %117, 32
  %119 = zext i32 %114 to i64
  %120 = or i64 %118, %119
  %121 = call zeroext i1 @_Z9zero_rectRK11SkImageInfoPvm7SkISize7SkIRect(%struct.SkImageInfo* dereferenceable(24) %1, i8* %2, i64 %3, i64 %120, i64 %109, i64 %112)
  br i1 %121, label %122, label %133

122:                                              ; preds = %98, %102, %106, %59
  %123 = bitcast %class.SkFrame* %69 to i32 (%class.SkFrame*)***
  %124 = load i32 (%class.SkFrame*)**, i32 (%class.SkFrame*)*** %123, align 8
  %125 = getelementptr inbounds i32 (%class.SkFrame*)*, i32 (%class.SkFrame*)** %124, i64 2
  %126 = load i32 (%class.SkFrame*)*, i32 (%class.SkFrame*)** %125, align 8
  %127 = call i32 %126(%class.SkFrame* %69) #16
  %128 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %69, i64 0, i32 2
  %129 = load i8, i8* %128, align 4, !range !3
  %130 = icmp eq i8 %129, 0
  %131 = call zeroext i1 @_ZN7SkCodec20initializeColorXformERK11SkImageInfoN13SkEncodedInfo5AlphaEb(%class.SkCodec* %0, %struct.SkImageInfo* dereferenceable(24) %1, i32 %127, i1 zeroext %130)
  %132 = select i1 %131, i32 0, i32 3
  br label %133

133:                                              ; preds = %106, %77, %78, %98, %89, %24, %40, %46, %48, %52, %122, %30, %11
  %134 = phi i32 [ 0, %11 ], [ 7, %30 ], [ %45, %40 ], [ 5, %46 ], [ 5, %48 ], [ 1, %52 ], [ %132, %122 ], [ 7, %24 ], [ 5, %98 ], [ 5, %89 ], [ %82, %78 ], [ 8, %77 ], [ 8, %106 ]
  ret i32 %134
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7SkCodec20initializeColorXformERK11SkImageInfoN13SkEncodedInfo5AlphaEb(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 10
  store i32 0, i32* %5, align 8
  %6 = bitcast %class.SkCodec* %0 to i1 (%class.SkCodec*)***
  %7 = load i1 (%class.SkCodec*)**, i1 (%class.SkCodec*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%class.SkCodec*)*, i1 (%class.SkCodec*)** %7, i64 13
  %9 = load i1 (%class.SkCodec*)*, i1 (%class.SkCodec*)** %8, align 8
  %10 = tail call zeroext i1 %9(%class.SkCodec* %0) #16
  br i1 %10, label %11, label %46

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 13
  %15 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.SkColorSpace*, %class.SkColorSpace** %15, align 8
  %17 = icmp eq %class.SkColorSpace* %16, null
  br i1 %14, label %18, label %33

18:                                               ; preds = %11
  br i1 %17, label %21, label %19

19:                                               ; preds = %18
  %20 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 12
  tail call void @_ZNK12SkColorSpace9toProfileEP16skcms_ICCProfile(%class.SkColorSpace* nonnull %16, %struct.skcms_ICCProfile* %20) #16
  br label %46

21:                                               ; preds = %18
  %22 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 5, i32 0, i32 0, i32 0
  %23 = load %"class.SkEncodedInfo::ICCProfile"*, %"class.SkEncodedInfo::ICCProfile"** %22, align 8
  %24 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %23, i64 0, i32 0
  %25 = icmp eq %"class.SkEncodedInfo::ICCProfile"* %23, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  %27 = tail call %struct.skcms_ICCProfile* @skcms_sRGB_profile() #16
  br label %28

28:                                               ; preds = %21, %26
  %29 = phi %struct.skcms_ICCProfile* [ %27, %26 ], [ %24, %21 ]
  %30 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 12
  %31 = bitcast %struct.skcms_ICCProfile* %30 to i8*
  %32 = bitcast %struct.skcms_ICCProfile* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 1008, i1 false)
  br label %46

33:                                               ; preds = %11
  br i1 %17, label %46, label %34

34:                                               ; preds = %33
  %35 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 12
  tail call void @_ZNK12SkColorSpace9toProfileEP16skcms_ICCProfile(%class.SkColorSpace* nonnull %16, %struct.skcms_ICCProfile* %35) #16
  %36 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 5, i32 0, i32 0, i32 0
  %37 = load %"class.SkEncodedInfo::ICCProfile"*, %"class.SkEncodedInfo::ICCProfile"** %36, align 8
  %38 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %37, i64 0, i32 0
  %39 = icmp eq %"class.SkEncodedInfo::ICCProfile"* %37, null
  br i1 %39, label %40, label %42

40:                                               ; preds = %34
  %41 = tail call %struct.skcms_ICCProfile* @skcms_sRGB_profile() #16
  br label %42

42:                                               ; preds = %34, %40
  %43 = phi %struct.skcms_ICCProfile* [ %38, %34 ], [ %41, %40 ]
  %44 = tail call zeroext i1 @skcms_ApproximatelyEqualProfiles(%struct.skcms_ICCProfile* %43, %struct.skcms_ICCProfile* %35) #16
  %45 = xor i1 %44, true
  br label %46

46:                                               ; preds = %33, %28, %19, %42, %4
  %47 = phi i1 [ true, %19 ], [ true, %28 ], [ %45, %42 ], [ false, %33 ], [ false, %4 ]
  %48 = bitcast %class.SkCodec* %0 to i1 (%class.SkCodec*, %struct.SkImageInfo*, i1, i1)***
  %49 = load i1 (%class.SkCodec*, %struct.SkImageInfo*, i1, i1)**, i1 (%class.SkCodec*, %struct.SkImageInfo*, i1, i1)*** %48, align 8
  %50 = getelementptr inbounds i1 (%class.SkCodec*, %struct.SkImageInfo*, i1, i1)*, i1 (%class.SkCodec*, %struct.SkImageInfo*, i1, i1)** %49, i64 12
  %51 = load i1 (%class.SkCodec*, %struct.SkImageInfo*, i1, i1)*, i1 (%class.SkCodec*, %struct.SkImageInfo*, i1, i1)** %50, align 8
  %52 = tail call zeroext i1 %51(%class.SkCodec* %0, %struct.SkImageInfo* dereferenceable(24) %1, i1 zeroext %3, i1 zeroext %47) #16
  %53 = and i1 %47, %52
  br i1 %53, label %54, label %85

54:                                               ; preds = %46
  %55 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 2
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %56, 4
  br i1 %57, label %58, label %63

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 13
  %62 = select i1 %61, i32 2, i32 1
  br label %63

63:                                               ; preds = %54, %58
  %64 = phi i32 [ 2, %54 ], [ %62, %58 ]
  store i32 %64, i32* %5, align 8
  %65 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 11
  switch i32 %66, label %85 [
    i32 4, label %74
    i32 6, label %68
    i32 2, label %69
    i32 13, label %72
    i32 11, label %73
  ]

68:                                               ; preds = %63
  br label %74

69:                                               ; preds = %63
  %70 = icmp eq i32 %64, 1
  %71 = select i1 %70, i32 13, i32 7
  br label %74

72:                                               ; preds = %63
  br label %74

73:                                               ; preds = %63
  br label %74

74:                                               ; preds = %69, %63, %73, %72, %68
  %75 = phi i32 [ 2, %73 ], [ 32, %72 ], [ 13, %68 ], [ 12, %63 ], [ %71, %69 ]
  store i32 %75, i32* %67, align 4
  %76 = icmp eq i32 %2, 1
  br i1 %76, label %77, label %83

77:                                               ; preds = %74
  %78 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 2
  br i1 %80, label %81, label %83

81:                                               ; preds = %77
  %82 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 13
  store i32 2, i32* %82, align 8
  br label %85

83:                                               ; preds = %77, %74
  %84 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 13
  store i32 1, i32* %84, align 8
  br label %85

85:                                               ; preds = %46, %63, %83, %81
  %86 = phi i1 [ %52, %46 ], [ true, %81 ], [ true, %83 ], [ false, %63 ]
  ret i1 %86
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7SkCodec9getPixelsERK11SkImageInfoPvmPKNS_7OptionsE(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.SkCodec::Options", align 8
  %7 = alloca %struct.SkIRect, align 4
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %struct.SkISize*
  %10 = alloca i32, align 4
  %11 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %132, label %14

14:                                               ; preds = %5
  %15 = icmp eq i8* %2, null
  br i1 %15, label %132, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0
  %21 = tail call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %20) #16
  %22 = sext i32 %21 to i64
  %23 = mul nsw i64 %22, %19
  %24 = icmp ult i64 %23, 2147483648
  %25 = select i1 %24, i64 %23, i64 0
  %26 = icmp ugt i64 %25, %3
  br i1 %26, label %132, label %27

27:                                               ; preds = %16
  %28 = bitcast %"struct.SkCodec::Options"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #16
  %29 = bitcast %"struct.SkCodec::Options"* %6 to i64*
  store i64 -6148914691236517206, i64* %29, align 8
  %30 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %6, i64 0, i32 0
  store i32 1, i32* %30, align 8
  %31 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %6, i64 0, i32 1
  store %struct.SkIRect* null, %struct.SkIRect** %31, align 8
  %32 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %6, i64 0, i32 2
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %6, i64 0, i32 3
  store i32 -1, i32* %33, align 4
  %34 = icmp eq %"struct.SkCodec::Options"* %4, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %4, i64 0, i32 1
  %37 = load %struct.SkIRect*, %struct.SkIRect** %36, align 8
  %38 = icmp eq %struct.SkIRect* %37, null
  br i1 %38, label %54, label %39

39:                                               ; preds = %35
  %40 = bitcast %struct.SkIRect* %37 to i8*
  %41 = bitcast %struct.SkIRect* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %41, i8* nonnull align 4 %40, i64 16, i1 false)
  %42 = bitcast %class.SkCodec* %0 to i1 (%class.SkCodec*, %struct.SkIRect*)***
  %43 = load i1 (%class.SkCodec*, %struct.SkIRect*)**, i1 (%class.SkCodec*, %struct.SkIRect*)*** %42, align 8
  %44 = getelementptr inbounds i1 (%class.SkCodec*, %struct.SkIRect*)*, i1 (%class.SkCodec*, %struct.SkIRect*)** %43, i64 8
  %45 = load i1 (%class.SkCodec*, %struct.SkIRect*)*, i1 (%class.SkCodec*, %struct.SkIRect*)** %44, align 8
  %46 = call zeroext i1 %45(%class.SkCodec* %0, %struct.SkIRect* nonnull %7) #16
  br i1 %46, label %47, label %52

47:                                               ; preds = %39
  %48 = bitcast %struct.SkIRect** %36 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = call i32 @bcmp(i8* nonnull %41, i8* %49, i64 16) #16
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %47, %39
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #16
  br label %130

53:                                               ; preds = %47
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #16
  br label %54

54:                                               ; preds = %53, %27, %35
  %55 = phi %"struct.SkCodec::Options"* [ %4, %35 ], [ %6, %27 ], [ %4, %53 ]
  %56 = call i32 @_ZN7SkCodec16handleFrameIndexERK11SkImageInfoPvmRKNS_7OptionsEP14SkAndroidCodec(%class.SkCodec* %0, %struct.SkImageInfo* dereferenceable(24) %1, i8* nonnull %2, i64 %3, %"struct.SkCodec::Options"* nonnull dereferenceable(24) %55, %class.SkAndroidCodec* null)
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %130

58:                                               ; preds = %54
  %59 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #16
  %60 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1
  %61 = bitcast %struct.SkISize* %60 to i64*
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %8, align 8
  %63 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = trunc i64 %62 to i32
  %66 = icmp eq i32 %64, %65
  br i1 %66, label %67, label %74

67:                                               ; preds = %58
  %68 = lshr i64 %62, 32
  %69 = trunc i64 %68 to i32
  %70 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, %69
  br i1 %72, label %73, label %74

73:                                               ; preds = %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #16
  br label %80

74:                                               ; preds = %58, %67
  %75 = bitcast %class.SkCodec* %0 to i1 (%class.SkCodec*, %struct.SkISize*)***
  %76 = load i1 (%class.SkCodec*, %struct.SkISize*)**, i1 (%class.SkCodec*, %struct.SkISize*)*** %75, align 8
  %77 = getelementptr inbounds i1 (%class.SkCodec*, %struct.SkISize*)*, i1 (%class.SkCodec*, %struct.SkISize*)** %76, i64 3
  %78 = load i1 (%class.SkCodec*, %struct.SkISize*)*, i1 (%class.SkCodec*, %struct.SkISize*)** %77, align 8
  %79 = call zeroext i1 %78(%class.SkCodec* %0, %struct.SkISize* nonnull dereferenceable(8) %9) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #16
  br i1 %79, label %80, label %130

80:                                               ; preds = %73, %74
  %81 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 8
  %82 = icmp eq %struct.SkImageInfo* %81, %1
  br i1 %82, label %100, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 0, i32 0
  %85 = load %class.SkColorSpace*, %class.SkColorSpace** %84, align 8
  %86 = icmp eq %class.SkColorSpace* %85, null
  br i1 %86, label %90, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i32* %88, i32 1 monotonic
  br label %90

90:                                               ; preds = %87, %83
  %91 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %81, i64 0, i32 0, i32 0, i32 0
  %92 = load %class.SkColorSpace*, %class.SkColorSpace** %91, align 8
  store %class.SkColorSpace* %85, %class.SkColorSpace** %91, align 8
  %93 = icmp eq %class.SkColorSpace* %92, null
  br i1 %93, label %100, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = atomicrmw add i32* %95, i32 -1 acq_rel
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %98, label %100

98:                                               ; preds = %94
  %99 = bitcast %class.SkColorSpace* %92 to i8*
  call void @_ZdlPv(i8* %99) #17
  br label %100

100:                                              ; preds = %80, %90, %94, %98
  %101 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 8, i32 0, i32 1
  %102 = bitcast i32* %11 to i64*
  %103 = bitcast i32* %101 to i64*
  %104 = load i64, i64* %102, align 8
  store i64 %104, i64* %103, align 8
  %105 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 8, i32 1
  %106 = bitcast %struct.SkISize* %105 to i64*
  %107 = load i64, i64* %61, align 8
  store i64 %107, i64* %106, align 8
  %108 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 9
  %109 = bitcast %"struct.SkCodec::Options"* %108 to i8*
  %110 = bitcast %"struct.SkCodec::Options"* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 24, i1 false)
  %111 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %111) #16
  store i32 0, i32* %10, align 4
  %112 = bitcast %class.SkCodec* %0 to i32 (%class.SkCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*, i32*)***
  %113 = load i32 (%class.SkCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*, i32*)**, i32 (%class.SkCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*, i32*)*** %112, align 8
  %114 = getelementptr inbounds i32 (%class.SkCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*, i32*)*, i32 (%class.SkCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*, i32*)** %113, i64 5
  %115 = load i32 (%class.SkCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*, i32*)*, i32 (%class.SkCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*, i32*)** %114, align 8
  %116 = call i32 %115(%class.SkCodec* %0, %struct.SkImageInfo* dereferenceable(24) %1, i8* nonnull %2, i64 %3, %"struct.SkCodec::Options"* nonnull dereferenceable(24) %55, i32* nonnull %10) #16
  %117 = add i32 %116, -1
  %118 = icmp ult i32 %117, 2
  br i1 %118, label %119, label %129

119:                                              ; preds = %100
  %120 = load i32, i32* %10, align 4
  %121 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 1
  %122 = load i32, i32* %121, align 4
  %123 = icmp eq i32 %120, %122
  br i1 %123, label %129, label %124

124:                                              ; preds = %119
  %125 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 9, i32 1
  store %struct.SkIRect* null, %struct.SkIRect** %125, align 8
  %126 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %55, i64 0, i32 0
  %127 = load i32, i32* %126, align 8
  %128 = load i32, i32* %121, align 4
  call void @_ZN7SkCodec19fillIncompleteImageERK11SkImageInfoPvmNS_15ZeroInitializedEii(%class.SkCodec* %0, %struct.SkImageInfo* dereferenceable(24) %1, i8* nonnull %2, i64 %3, i32 %127, i32 %128, i32 %120)
  br label %129

129:                                              ; preds = %119, %100, %124
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %111) #16
  br label %130

130:                                              ; preds = %129, %54, %74, %52
  %131 = phi i32 [ 9, %52 ], [ %116, %129 ], [ %56, %54 ], [ 4, %74 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #16
  br label %132

132:                                              ; preds = %16, %14, %5, %130
  %133 = phi i32 [ %131, %130 ], [ 3, %5 ], [ 5, %14 ], [ 5, %16 ]
  ret i32 %133
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkCodec19fillIncompleteImageERK11SkImageInfoPvmNS_15ZeroInitializedEii(%class.SkCodec*, %struct.SkImageInfo* nocapture readonly dereferenceable(24), i8*, i64, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %8 = alloca %struct.SkImageInfo, align 8
  %9 = icmp eq i32 %4, 0
  br i1 %9, label %78, label %10

10:                                               ; preds = %7
  %11 = sub nsw i32 %5, %6
  %12 = bitcast %class.SkCodec* %0 to %class.SkSampler* (%class.SkCodec*, i1)***
  %13 = load %class.SkSampler* (%class.SkCodec*, i1)**, %class.SkSampler* (%class.SkCodec*, i1)*** %12, align 8
  %14 = getelementptr inbounds %class.SkSampler* (%class.SkCodec*, i1)*, %class.SkSampler* (%class.SkCodec*, i1)** %13, i64 23
  %15 = load %class.SkSampler* (%class.SkCodec*, i1)*, %class.SkSampler* (%class.SkCodec*, i1)** %14, align 8
  %16 = tail call %class.SkSampler* %15(%class.SkCodec* %0, i1 zeroext false) #16
  %17 = icmp eq %class.SkSampler* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %10
  %19 = bitcast %class.SkSampler* %16 to i32 (%class.SkSampler*)***
  %20 = load i32 (%class.SkSampler*)**, i32 (%class.SkSampler*)*** %19, align 8
  %21 = load i32 (%class.SkSampler*)*, i32 (%class.SkSampler*)** %20, align 8
  %22 = tail call i32 %21(%class.SkSampler* nonnull %16) #16
  br label %36

23:                                               ; preds = %10
  %24 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 9, i32 1
  %25 = load %struct.SkIRect*, %struct.SkIRect** %24, align 8
  %26 = icmp eq %struct.SkIRect* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %25, i64 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %25, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = sub i32 %29, %31
  br label %36

33:                                               ; preds = %23
  %34 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %35 = load i32, i32* %34, align 4
  br label %36

36:                                               ; preds = %27, %33, %18
  %37 = phi i32 [ %22, %18 ], [ %32, %27 ], [ %35, %33 ]
  %38 = bitcast %class.SkCodec* %0 to i32 (%class.SkCodec*)***
  %39 = load i32 (%class.SkCodec*)**, i32 (%class.SkCodec*)*** %38, align 8
  %40 = getelementptr inbounds i32 (%class.SkCodec*)*, i32 (%class.SkCodec*)** %39, i64 10
  %41 = load i32 (%class.SkCodec*)*, i32 (%class.SkCodec*)** %40, align 8
  %42 = tail call i32 %41(%class.SkCodec* %0) #16
  %43 = icmp eq i32 %42, 1
  %44 = sext i32 %6 to i64
  %45 = mul i64 %44, %3
  %46 = getelementptr inbounds i8, i8* %2, i64 %45
  %47 = select i1 %43, i8* %2, i8* %46
  %48 = bitcast %struct.SkImageInfo* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #16
  %49 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 1
  %51 = zext i32 %11 to i64
  %52 = shl nuw i64 %51, 32
  %53 = zext i32 %37 to i64
  %54 = or i64 %52, %53
  %55 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 0, i32 0
  %56 = bitcast %struct.SkImageInfo* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 24, i1 false)
  %57 = load %class.SkColorSpace*, %class.SkColorSpace** %55, align 8, !noalias !14
  %58 = icmp eq %class.SkColorSpace* %57, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %36
  %60 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 1 monotonic, !noalias !14
  br label %62

62:                                               ; preds = %36, %59
  store %class.SkColorSpace* %57, %class.SkColorSpace** %49, align 8, !alias.scope !14
  %63 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %64 = bitcast i32* %63 to i64*
  %65 = bitcast i32* %50 to i64*
  %66 = load i64, i64* %64, align 8, !noalias !14
  store i64 %66, i64* %65, align 8, !alias.scope !14
  %67 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 1
  %68 = bitcast %struct.SkISize* %67 to i64*
  store i64 %54, i64* %68, align 8, !alias.scope !14
  call void @_ZN9SkSampler4FillERK11SkImageInfoPvmN7SkCodec15ZeroInitializedE(%struct.SkImageInfo* nonnull dereferenceable(24) %8, i8* %47, i64 %3, i32 1) #16
  %69 = load %class.SkColorSpace*, %class.SkColorSpace** %49, align 8
  %70 = icmp eq %class.SkColorSpace* %69, null
  br i1 %70, label %77, label %71

71:                                               ; preds = %62
  %72 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = atomicrmw add i32* %72, i32 -1 acq_rel
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %75, label %77

75:                                               ; preds = %71
  %76 = bitcast %class.SkColorSpace* %69 to i8*
  call void @_ZdlPv(i8* %76) #17
  br label %77

77:                                               ; preds = %62, %71, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #16
  br label %78

78:                                               ; preds = %7, %77
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkCodec8getImageERK11SkImageInfoPKNS_7OptionsE(%"class.std::__1::tuple"* noalias nocapture sret, %class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), %"struct.SkCodec::Options"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkBitmap, align 8
  %6 = alloca %class.sk_sp.33, align 8
  %7 = bitcast %class.SkBitmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %7) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %5) #16
  %8 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 1, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0
  %12 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %11) #16
  %13 = sext i32 %12 to i64
  %14 = mul nsw i64 %13, %10
  %15 = icmp ult i64 %14, 2147483648
  %16 = select i1 %15, i64 %14, i64 0
  %17 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* nonnull %5, %struct.SkImageInfo* dereferenceable(24) %2, i64 %16) #16
  br i1 %17, label %21, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.SkImage* null, %class.SkImage** %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 8, i32* %20, align 4
  br label %37

21:                                               ; preds = %4
  %22 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %5, i64 0, i32 1, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %5, i64 0, i32 1, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = call i32 @_ZN7SkCodec9getPixelsERK11SkImageInfoPvmPKNS_7OptionsE(%class.SkCodec* %1, %struct.SkImageInfo* dereferenceable(24) %2, i8* %23, i64 %25, %"struct.SkCodec::Options"* %3)
  %27 = icmp ult i32 %26, 3
  br i1 %27, label %28, label %34

28:                                               ; preds = %21
  call void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap* nonnull %5) #16
  %29 = bitcast %class.sk_sp.33* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #16
  call void @_ZNK8SkBitmap7asImageEv(%class.sk_sp.33* nonnull sret %6, %class.SkBitmap* nonnull %5) #16
  %30 = bitcast %class.sk_sp.33* %6 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::tuple"* %0 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 %26, i32* %33, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #16
  br label %37

34:                                               ; preds = %21
  %35 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.SkImage* null, %class.SkImage** %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 %26, i32* %36, align 4
  br label %37

37:                                               ; preds = %28, %34, %18
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %7) #16
  ret void
}

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

declare void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap*) local_unnamed_addr #2

declare void @_ZNK8SkBitmap7asImageEv(%class.sk_sp.33* sret, %class.SkBitmap*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkCodec8getImageEv(%"class.std::__1::tuple"* noalias nocapture sret, %class.SkCodec*) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkImageInfo, align 8
  %4 = bitcast %struct.SkImageInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  %5 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %1, i64 0, i32 1
  call void @_ZNK13SkEncodedInfo13makeImageInfoEv(%struct.SkImageInfo* nonnull sret %3, %struct.SkEncodedInfo* %5) #16
  call void @_ZN7SkCodec8getImageERK11SkImageInfoPKNS_7OptionsE(%"class.std::__1::tuple"* sret %0, %class.SkCodec* %1, %struct.SkImageInfo* nonnull dereferenceable(24) %3, %"struct.SkCodec::Options"* null)
  %6 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.SkColorSpace*, %class.SkColorSpace** %6, align 8
  %8 = icmp eq %class.SkColorSpace* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 -1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  %14 = bitcast %class.SkColorSpace* %7 to i8*
  call void @_ZdlPv(i8* %14) #17
  br label %15

15:                                               ; preds = %2, %9, %13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7SkCodec22startIncrementalDecodeERK11SkImageInfoPvmPKNS_7OptionsE(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"* readonly) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.SkCodec::Options", align 8
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %struct.SkISize*
  %9 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 15
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %149, label %13

13:                                               ; preds = %5
  %14 = icmp eq i8* %2, null
  br i1 %14, label %149, label %15

15:                                               ; preds = %13
  %16 = bitcast %"struct.SkCodec::Options"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #16
  %17 = bitcast %"struct.SkCodec::Options"* %6 to i64*
  store i64 -6148914691236517206, i64* %17, align 8
  %18 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %6, i64 0, i32 0
  store i32 1, i32* %18, align 8
  %19 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %6, i64 0, i32 1
  store %struct.SkIRect* null, %struct.SkIRect** %19, align 8
  %20 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %6, i64 0, i32 2
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %6, i64 0, i32 3
  store i32 -1, i32* %21, align 4
  %22 = icmp eq %"struct.SkCodec::Options"* %4, null
  br i1 %22, label %82, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %4, i64 0, i32 1
  %25 = load %struct.SkIRect*, %struct.SkIRect** %24, align 8
  %26 = icmp eq %struct.SkIRect* %25, null
  br i1 %26, label %82, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1
  %29 = bitcast %struct.SkISize* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = lshr i64 %30, 32
  %32 = trunc i64 %31 to i32
  %33 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %25, i64 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %25, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = sext i32 %37 to i64
  %39 = sub nsw i64 %35, %38
  %40 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %25, i64 0, i32 3
  %41 = load i32, i32* %40, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %25, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = sext i32 %44 to i64
  %46 = sub nsw i64 %42, %45
  %47 = icmp slt i64 %39, 1
  %48 = icmp slt i64 %46, 1
  %49 = or i1 %47, %48
  br i1 %49, label %147, label %50

50:                                               ; preds = %27
  %51 = or i64 %46, %39
  %52 = add nsw i64 %51, 2147483648
  %53 = icmp ugt i64 %52, 4294967295
  br i1 %53, label %147, label %54

54:                                               ; preds = %50
  %55 = shl i64 %30, 32
  %56 = icmp slt i64 %55, 4294967296
  %57 = icmp slt i64 %30, 4294967296
  %58 = or i1 %57, %56
  br i1 %58, label %147, label %59

59:                                               ; preds = %54
  %60 = trunc i64 %30 to i32
  %61 = or i64 %55, %30
  %62 = ashr i64 %61, 32
  %63 = add nsw i64 %62, 2147483648
  %64 = icmp ugt i64 %63, 4294967295
  %65 = or i32 %44, %37
  %66 = icmp slt i32 %65, 0
  %67 = or i1 %64, %66
  %68 = icmp sgt i32 %34, %60
  %69 = or i1 %68, %67
  %70 = icmp sgt i32 %41, %32
  %71 = or i1 %70, %69
  %72 = icmp slt i32 %44, 0
  %73 = or i1 %72, %71
  br i1 %73, label %147, label %74

74:                                               ; preds = %59
  %75 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = icmp sge i32 %44, %76
  %78 = icmp sge i32 %44, %41
  %79 = or i1 %78, %77
  %80 = icmp sgt i32 %41, %76
  %81 = or i1 %80, %79
  br i1 %81, label %147, label %82

82:                                               ; preds = %74, %15, %23
  %83 = phi %"struct.SkCodec::Options"* [ %4, %23 ], [ %6, %15 ], [ %4, %74 ]
  %84 = call i32 @_ZN7SkCodec16handleFrameIndexERK11SkImageInfoPvmRKNS_7OptionsEP14SkAndroidCodec(%class.SkCodec* %0, %struct.SkImageInfo* dereferenceable(24) %1, i8* nonnull %2, i64 %3, %"struct.SkCodec::Options"* nonnull dereferenceable(24) %83, %class.SkAndroidCodec* null)
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %147

86:                                               ; preds = %82
  %87 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #16
  %88 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1
  %89 = bitcast %struct.SkISize* %88 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %7, align 8
  %91 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = trunc i64 %90 to i32
  %94 = icmp eq i32 %92, %93
  br i1 %94, label %95, label %102

95:                                               ; preds = %86
  %96 = lshr i64 %90, 32
  %97 = trunc i64 %96 to i32
  %98 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, %97
  br i1 %100, label %101, label %102

101:                                              ; preds = %95
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #16
  br label %108

102:                                              ; preds = %86, %95
  %103 = bitcast %class.SkCodec* %0 to i1 (%class.SkCodec*, %struct.SkISize*)***
  %104 = load i1 (%class.SkCodec*, %struct.SkISize*)**, i1 (%class.SkCodec*, %struct.SkISize*)*** %103, align 8
  %105 = getelementptr inbounds i1 (%class.SkCodec*, %struct.SkISize*)*, i1 (%class.SkCodec*, %struct.SkISize*)** %104, i64 3
  %106 = load i1 (%class.SkCodec*, %struct.SkISize*)*, i1 (%class.SkCodec*, %struct.SkISize*)** %105, align 8
  %107 = call zeroext i1 %106(%class.SkCodec* %0, %struct.SkISize* nonnull dereferenceable(8) %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #16
  br i1 %107, label %108, label %147

108:                                              ; preds = %101, %102
  %109 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 8
  %110 = icmp eq %struct.SkImageInfo* %109, %1
  br i1 %110, label %128, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 0, i32 0
  %113 = load %class.SkColorSpace*, %class.SkColorSpace** %112, align 8
  %114 = icmp eq %class.SkColorSpace* %113, null
  br i1 %114, label %118, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = atomicrmw add i32* %116, i32 1 monotonic
  br label %118

118:                                              ; preds = %115, %111
  %119 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %109, i64 0, i32 0, i32 0, i32 0
  %120 = load %class.SkColorSpace*, %class.SkColorSpace** %119, align 8
  store %class.SkColorSpace* %113, %class.SkColorSpace** %119, align 8
  %121 = icmp eq %class.SkColorSpace* %120, null
  br i1 %121, label %128, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = atomicrmw add i32* %123, i32 -1 acq_rel
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %128

126:                                              ; preds = %122
  %127 = bitcast %class.SkColorSpace* %120 to i8*
  call void @_ZdlPv(i8* %127) #17
  br label %128

128:                                              ; preds = %108, %118, %122, %126
  %129 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 8, i32 0, i32 1
  %130 = bitcast i32* %10 to i64*
  %131 = bitcast i32* %129 to i64*
  %132 = load i64, i64* %130, align 8
  store i64 %132, i64* %131, align 8
  %133 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 8, i32 1
  %134 = bitcast %struct.SkISize* %133 to i64*
  %135 = load i64, i64* %89, align 8
  store i64 %135, i64* %134, align 8
  %136 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 9
  %137 = bitcast %"struct.SkCodec::Options"* %136 to i8*
  %138 = bitcast %"struct.SkCodec::Options"* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* align 8 %138, i64 24, i1 false)
  %139 = bitcast %class.SkCodec* %0 to i32 (%class.SkCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)***
  %140 = load i32 (%class.SkCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)**, i32 (%class.SkCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)*** %139, align 8
  %141 = getelementptr inbounds i32 (%class.SkCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)*, i32 (%class.SkCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)** %140, i64 19
  %142 = load i32 (%class.SkCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)*, i32 (%class.SkCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)** %141, align 8
  %143 = call i32 %142(%class.SkCodec* %0, %struct.SkImageInfo* dereferenceable(24) %1, i8* nonnull %2, i64 %3, %"struct.SkCodec::Options"* dereferenceable(24) %136) #16
  switch i32 %143, label %147 [
    i32 0, label %144
    i32 9, label %145
  ]

144:                                              ; preds = %128
  store i8 1, i8* %9, align 8
  br label %147

145:                                              ; preds = %128
  %146 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 5
  store i8 0, i8* %146, align 8
  br label %147

147:                                              ; preds = %74, %59, %27, %50, %54, %82, %102, %128, %145, %144
  %148 = phi i32 [ %84, %82 ], [ 4, %102 ], [ %143, %128 ], [ 9, %145 ], [ 0, %144 ], [ 5, %59 ], [ 5, %74 ], [ 5, %54 ], [ 5, %50 ], [ 5, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #16
  br label %149

149:                                              ; preds = %13, %5, %147
  %150 = phi i32 [ %148, %147 ], [ 3, %5 ], [ 5, %13 ]
  ret i32 %150
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7SkCodec19startScanlineDecodeERK11SkImageInfoPKNS_7OptionsE(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), %"struct.SkCodec::Options"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.SkCodec::Options", align 8
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %struct.SkISize*
  %7 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 14
  store i32 -1, i32* %7, align 4
  %8 = bitcast %"struct.SkCodec::Options"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #16
  %9 = bitcast %"struct.SkCodec::Options"* %4 to i64*
  store i64 -6148914691236517206, i64* %9, align 8
  %10 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %4, i64 0, i32 0
  store i32 1, i32* %10, align 8
  %11 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %4, i64 0, i32 1
  store %struct.SkIRect* null, %struct.SkIRect** %11, align 8
  %12 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %4, i64 0, i32 2
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %4, i64 0, i32 3
  store i32 -1, i32* %13, align 4
  %14 = icmp eq %"struct.SkCodec::Options"* %2, null
  br i1 %14, label %71, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %2, i64 0, i32 1
  %17 = load %struct.SkIRect*, %struct.SkIRect** %16, align 8
  %18 = icmp eq %struct.SkIRect* %17, null
  br i1 %18, label %71, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1
  %21 = bitcast %struct.SkISize* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = lshr i64 %22, 32
  %24 = trunc i64 %23 to i32
  %25 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %17, i64 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %17, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  %31 = sub nsw i64 %27, %30
  %32 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %17, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %17, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = sext i32 %36 to i64
  %38 = sub nsw i64 %34, %37
  %39 = icmp slt i64 %31, 1
  %40 = icmp slt i64 %38, 1
  %41 = or i1 %39, %40
  br i1 %41, label %141, label %42

42:                                               ; preds = %19
  %43 = or i64 %38, %31
  %44 = add nsw i64 %43, 2147483648
  %45 = icmp ugt i64 %44, 4294967295
  br i1 %45, label %141, label %46

46:                                               ; preds = %42
  %47 = shl i64 %22, 32
  %48 = icmp slt i64 %47, 4294967296
  %49 = icmp slt i64 %22, 4294967296
  %50 = or i1 %49, %48
  br i1 %50, label %141, label %51

51:                                               ; preds = %46
  %52 = trunc i64 %22 to i32
  %53 = or i64 %47, %22
  %54 = ashr i64 %53, 32
  %55 = add nsw i64 %54, 2147483648
  %56 = icmp ugt i64 %55, 4294967295
  %57 = or i32 %36, %29
  %58 = icmp slt i32 %57, 0
  %59 = or i1 %56, %58
  %60 = icmp sgt i32 %26, %52
  %61 = or i1 %60, %59
  %62 = icmp sle i32 %33, %24
  %63 = xor i1 %61, true
  %64 = and i1 %62, %63
  %65 = icmp eq i32 %36, 0
  %66 = and i1 %65, %64
  br i1 %66, label %67, label %141

67:                                               ; preds = %51
  %68 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %33, %69
  br i1 %70, label %71, label %141

71:                                               ; preds = %67, %3, %15
  %72 = phi %"struct.SkCodec::Options"* [ %2, %15 ], [ %4, %3 ], [ %2, %67 ]
  %73 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %72, i64 0, i32 2
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %141

76:                                               ; preds = %71
  %77 = call i32 @_ZN7SkCodec16handleFrameIndexERK11SkImageInfoPvmRKNS_7OptionsEP14SkAndroidCodec(%class.SkCodec* %0, %struct.SkImageInfo* dereferenceable(24) %1, i8* null, i64 0, %"struct.SkCodec::Options"* nonnull dereferenceable(24) %72, %class.SkAndroidCodec* null)
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %141

79:                                               ; preds = %76
  %80 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #16
  %81 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1
  %82 = bitcast %struct.SkISize* %81 to i64*
  %83 = load i64, i64* %82, align 8
  store i64 %83, i64* %5, align 8
  %84 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = trunc i64 %83 to i32
  %87 = icmp eq i32 %85, %86
  br i1 %87, label %88, label %95

88:                                               ; preds = %79
  %89 = lshr i64 %83, 32
  %90 = trunc i64 %89 to i32
  %91 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, %90
  br i1 %93, label %94, label %95

94:                                               ; preds = %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #16
  br label %101

95:                                               ; preds = %79, %88
  %96 = bitcast %class.SkCodec* %0 to i1 (%class.SkCodec*, %struct.SkISize*)***
  %97 = load i1 (%class.SkCodec*, %struct.SkISize*)**, i1 (%class.SkCodec*, %struct.SkISize*)*** %96, align 8
  %98 = getelementptr inbounds i1 (%class.SkCodec*, %struct.SkISize*)*, i1 (%class.SkCodec*, %struct.SkISize*)** %97, i64 3
  %99 = load i1 (%class.SkCodec*, %struct.SkISize*)*, i1 (%class.SkCodec*, %struct.SkISize*)** %98, align 8
  %100 = call zeroext i1 %99(%class.SkCodec* %0, %struct.SkISize* nonnull dereferenceable(8) %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #16
  br i1 %100, label %101, label %141

101:                                              ; preds = %94, %95
  %102 = bitcast %class.SkCodec* %0 to i32 (%class.SkCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)***
  %103 = load i32 (%class.SkCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)**, i32 (%class.SkCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)*** %102, align 8
  %104 = getelementptr inbounds i32 (%class.SkCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)*, i32 (%class.SkCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)** %103, i64 18
  %105 = load i32 (%class.SkCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)*, i32 (%class.SkCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)** %104, align 8
  %106 = call i32 %105(%class.SkCodec* %0, %struct.SkImageInfo* dereferenceable(24) %1, %"struct.SkCodec::Options"* nonnull dereferenceable(24) %72) #16
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %141

108:                                              ; preds = %101
  %109 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 5
  store i8 1, i8* %109, align 8
  store i32 0, i32* %7, align 4
  %110 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 8
  %111 = icmp eq %struct.SkImageInfo* %110, %1
  br i1 %111, label %129, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 0, i32 0
  %114 = load %class.SkColorSpace*, %class.SkColorSpace** %113, align 8
  %115 = icmp eq %class.SkColorSpace* %114, null
  br i1 %115, label %119, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = atomicrmw add i32* %117, i32 1 monotonic
  br label %119

119:                                              ; preds = %116, %112
  %120 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %110, i64 0, i32 0, i32 0, i32 0
  %121 = load %class.SkColorSpace*, %class.SkColorSpace** %120, align 8
  store %class.SkColorSpace* %114, %class.SkColorSpace** %120, align 8
  %122 = icmp eq %class.SkColorSpace* %121, null
  br i1 %122, label %129, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = atomicrmw add i32* %124, i32 -1 acq_rel
  %126 = icmp eq i32 %125, 1
  br i1 %126, label %127, label %129

127:                                              ; preds = %123
  %128 = bitcast %class.SkColorSpace* %121 to i8*
  call void @_ZdlPv(i8* %128) #17
  br label %129

129:                                              ; preds = %108, %119, %123, %127
  %130 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 8, i32 0, i32 1
  %131 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %132 = bitcast i32* %131 to i64*
  %133 = bitcast i32* %130 to i64*
  %134 = load i64, i64* %132, align 8
  store i64 %134, i64* %133, align 8
  %135 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 8, i32 1
  %136 = bitcast %struct.SkISize* %135 to i64*
  %137 = load i64, i64* %82, align 8
  store i64 %137, i64* %136, align 8
  %138 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 9
  %139 = bitcast %"struct.SkCodec::Options"* %138 to i8*
  %140 = bitcast %"struct.SkCodec::Options"* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %140, i64 24, i1 false)
  br label %141

141:                                              ; preds = %19, %42, %46, %51, %67, %76, %95, %101, %129, %71
  %142 = phi i32 [ 9, %71 ], [ %77, %76 ], [ 4, %95 ], [ 0, %129 ], [ %106, %101 ], [ 6, %67 ], [ 6, %51 ], [ 6, %46 ], [ 6, %42 ], [ 6, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #16
  ret i32 %142
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7SkCodec12getScanlinesEPvim(%class.SkCodec*, i8*, i32, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 14
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  %8 = icmp slt i32 %2, 1
  %9 = or i1 %8, %7
  br i1 %9, label %29, label %10

10:                                               ; preds = %4
  %11 = add nuw nsw i32 %6, %2
  %12 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 8
  %13 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 8, i32 1, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %11, %14
  br i1 %15, label %29, label %16

16:                                               ; preds = %10
  %17 = bitcast %class.SkCodec* %0 to i32 (%class.SkCodec*, i8*, i32, i64)***
  %18 = load i32 (%class.SkCodec*, i8*, i32, i64)**, i32 (%class.SkCodec*, i8*, i32, i64)*** %17, align 8
  %19 = getelementptr inbounds i32 (%class.SkCodec*, i8*, i32, i64)*, i32 (%class.SkCodec*, i8*, i32, i64)** %18, i64 22
  %20 = load i32 (%class.SkCodec*, i8*, i32, i64)*, i32 (%class.SkCodec*, i8*, i32, i64)** %19, align 8
  %21 = tail call i32 %20(%class.SkCodec* %0, i8* %1, i32 %2, i64 %3) #16
  %22 = icmp slt i32 %21, %2
  br i1 %22, label %23, label %26

23:                                               ; preds = %16
  %24 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 9, i32 0
  %25 = load i32, i32* %24, align 8
  tail call void @_ZN7SkCodec19fillIncompleteImageERK11SkImageInfoPvmNS_15ZeroInitializedEii(%class.SkCodec* %0, %struct.SkImageInfo* dereferenceable(24) %12, i8* %1, i64 %3, i32 %25, i32 %2, i32 %21)
  br label %26

26:                                               ; preds = %23, %16
  %27 = load i32, i32* %5, align 4
  %28 = add nsw i32 %27, %2
  store i32 %28, i32* %5, align 4
  br label %29

29:                                               ; preds = %10, %4, %26
  %30 = phi i32 [ %21, %26 ], [ 0, %4 ], [ 0, %10 ]
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7SkCodec13skipScanlinesEi(%class.SkCodec*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 14
  %4 = load i32, i32* %3, align 4
  %5 = or i32 %4, %1
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %20, label %7

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, %1
  %9 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 8, i32 1, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %8, %10
  br i1 %11, label %20, label %12

12:                                               ; preds = %7
  %13 = bitcast %class.SkCodec* %0 to i1 (%class.SkCodec*, i32)***
  %14 = load i1 (%class.SkCodec*, i32)**, i1 (%class.SkCodec*, i32)*** %13, align 8
  %15 = getelementptr inbounds i1 (%class.SkCodec*, i32)*, i1 (%class.SkCodec*, i32)** %14, i64 21
  %16 = load i1 (%class.SkCodec*, i32)*, i1 (%class.SkCodec*, i32)** %15, align 8
  %17 = tail call zeroext i1 %16(%class.SkCodec* %0, i32 %1) #16
  %18 = load i32, i32* %3, align 4
  %19 = add nsw i32 %18, %1
  store i32 %19, i32* %3, align 4
  br label %20

20:                                               ; preds = %7, %2, %12
  %21 = phi i1 [ %17, %12 ], [ false, %2 ], [ false, %7 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK7SkCodec14outputScanlineEi(%class.SkCodec*, i32) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkCodec* %0 to i32 (%class.SkCodec*, i32)***
  %4 = load i32 (%class.SkCodec*, i32)**, i32 (%class.SkCodec*, i32)*** %3, align 8
  %5 = getelementptr inbounds i32 (%class.SkCodec*, i32)*, i32 (%class.SkCodec*, i32)** %4, i64 11
  %6 = load i32 (%class.SkCodec*, i32)*, i32 (%class.SkCodec*, i32)** %5, align 8
  %7 = tail call i32 %6(%class.SkCodec* %0, i32 %1) #16
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK7SkCodec16onOutputScanlineEi(%class.SkCodec*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkCodec* %0 to i32 (%class.SkCodec*)***
  %4 = load i32 (%class.SkCodec*)**, i32 (%class.SkCodec*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%class.SkCodec*)*, i32 (%class.SkCodec*)** %4, i64 10
  %6 = load i32 (%class.SkCodec*)*, i32 (%class.SkCodec*)** %5, align 8
  %7 = tail call i32 %6(%class.SkCodec* %0) #16
  switch i32 %7, label %13 [
    i32 0, label %14
    i32 1, label %8
  ]

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = xor i32 %1, -1
  %12 = add i32 %10, %11
  br label %14

13:                                               ; preds = %2
  br label %14

14:                                               ; preds = %2, %13, %8
  %15 = phi i32 [ 0, %13 ], [ %12, %8 ], [ %1, %2 ]
  ret i32 %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_Z22sk_select_xform_format11SkColorTypebP17skcms_PixelFormat(i32, i1 zeroext, i32* nocapture) local_unnamed_addr #7 {
  switch i32 %0, label %11 [
    i32 4, label %9
    i32 6, label %4
    i32 2, label %5
    i32 13, label %7
    i32 11, label %8
  ]

4:                                                ; preds = %3
  br label %9

5:                                                ; preds = %3
  %6 = select i1 %1, i32 13, i32 7
  br label %9

7:                                                ; preds = %3
  br label %9

8:                                                ; preds = %3
  br label %9

9:                                                ; preds = %5, %3, %8, %7, %4
  %10 = phi i32 [ 13, %4 ], [ 32, %7 ], [ 2, %8 ], [ 12, %3 ], [ %6, %5 ]
  store i32 %10, i32* %2, align 4
  br label %11

11:                                               ; preds = %9, %3
  %12 = phi i1 [ false, %3 ], [ true, %9 ]
  ret i1 %12
}

declare void @_ZNK12SkColorSpace9toProfileEP16skcms_ICCProfile(%class.SkColorSpace*, %struct.skcms_ICCProfile*) local_unnamed_addr #2

declare %struct.skcms_ICCProfile* @skcms_sRGB_profile() local_unnamed_addr #2

declare zeroext i1 @skcms_ApproximatelyEqualProfiles(%struct.skcms_ICCProfile*, %struct.skcms_ICCProfile*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7SkCodec15applyColorXformEPvPKvi(%class.SkCodec*, i8*, i8*, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 5, i32 0, i32 0, i32 0
  %6 = load %"class.SkEncodedInfo::ICCProfile"*, %"class.SkEncodedInfo::ICCProfile"** %5, align 8
  %7 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %6, i64 0, i32 0
  %8 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 11
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 13
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 12
  %15 = sext i32 %3 to i64
  %16 = tail call zeroext i1 @skcms_Transform(i8* %2, i32 %9, i32 1, %struct.skcms_ICCProfile* %7, i8* %1, i32 %11, i32 %13, %struct.skcms_ICCProfile* %14, i64 %15) #16
  ret void
}

declare zeroext i1 @skcms_Transform(i8*, i32, i32, %struct.skcms_ICCProfile*, i8*, i32, i32, %struct.skcms_ICCProfile*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkCodec12getFrameInfoEv(%"class.std::__1::vector.37"* noalias nocapture sret, %class.SkCodec*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkCodec* %1 to i32 (%class.SkCodec*)***
  %4 = load i32 (%class.SkCodec*)**, i32 (%class.SkCodec*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%class.SkCodec*)*, i32 (%class.SkCodec*)** %4, i64 14
  %6 = load i32 (%class.SkCodec*)*, i32 (%class.SkCodec*)** %5, align 8
  %7 = tail call i32 %6(%class.SkCodec* %1) #16
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = bitcast %"class.std::__1::vector.37"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #16
  br label %54

11:                                               ; preds = %2
  %12 = icmp eq i32 %7, 1
  br i1 %12, label %13, label %21

13:                                               ; preds = %11
  %14 = bitcast %class.SkCodec* %1 to i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)***
  %15 = load i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)**, i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)*, i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)** %15, i64 15
  %17 = load i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)*, i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%class.SkCodec* %1, i32 0, %"struct.SkCodec::FrameInfo"* null) #16
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.std::__1::vector.37"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #16
  br label %54

21:                                               ; preds = %11, %13
  %22 = sext i32 %7 to i64
  %23 = mul nsw i64 %22, 44
  %24 = tail call i8* @_Znwm(i64 %23) #17
  %25 = bitcast i8* %24 to %"struct.SkCodec::FrameInfo"*
  %26 = getelementptr inbounds %"struct.SkCodec::FrameInfo", %"struct.SkCodec::FrameInfo"* %25, i64 %22
  %27 = ptrtoint i8* %24 to i64
  %28 = add nsw i64 %22, -1
  %29 = getelementptr %"struct.SkCodec::FrameInfo", %"struct.SkCodec::FrameInfo"* %25, i64 %28, i32 0
  %30 = ptrtoint i32* %29 to i64
  %31 = sub i64 %30, %27
  %32 = urem i64 %31, 44
  %33 = add i64 %31, 44
  %34 = sub i64 %33, %32
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %24, i8 0, i64 %34, i1 false) #16
  %35 = ptrtoint %"struct.SkCodec::FrameInfo"* %26 to i64
  %36 = bitcast %class.SkCodec* %1 to i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)***
  %37 = zext i32 %7 to i64
  br label %44

38:                                               ; preds = %44
  %39 = bitcast %"class.std::__1::vector.37"* %0 to i64*
  store i64 %27, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %0, i64 0, i32 0, i32 1
  %41 = bitcast %"struct.SkCodec::FrameInfo"** %40 to i64*
  store i64 %35, i64* %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %43 = bitcast %"struct.SkCodec::FrameInfo"** %42 to i64*
  store i64 %35, i64* %43, align 8
  br label %54

44:                                               ; preds = %44, %21
  %45 = phi i64 [ 0, %21 ], [ %52, %44 ]
  %46 = getelementptr inbounds %"struct.SkCodec::FrameInfo", %"struct.SkCodec::FrameInfo"* %25, i64 %45
  %47 = load i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)**, i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)*** %36, align 8
  %48 = getelementptr inbounds i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)*, i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)** %47, i64 15
  %49 = load i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)*, i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)** %48, align 8
  %50 = trunc i64 %45 to i32
  %51 = tail call zeroext i1 %49(%class.SkCodec* %1, i32 %50, %"struct.SkCodec::FrameInfo"* %46) #16
  %52 = add nuw nsw i64 %45, 1
  %53 = icmp eq i64 %52, %37
  br i1 %53, label %38, label %44

54:                                               ; preds = %38, %19, %9
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN7SkCodec14ResultToStringENS_6ResultE(i32) local_unnamed_addr #8 align 2 {
  %2 = icmp ult i32 %0, 10
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [10 x i8*], [10 x i8*]* @switch.table._ZN7SkCodec14ResultToStringENS_6ResultE, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7SkFrame6fillInEPN7SkCodec9FrameInfoEb(%class.SkFrame*, %"struct.SkCodec::FrameInfo"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"struct.SkCodec::FrameInfo", %"struct.SkCodec::FrameInfo"* %1, i64 0, i32 0
  store i32 %6, i32* %7, align 4
  %8 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %0, i64 0, i32 6
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"struct.SkCodec::FrameInfo", %"struct.SkCodec::FrameInfo"* %1, i64 0, i32 1
  store i32 %9, i32* %10, align 4
  %11 = getelementptr inbounds %"struct.SkCodec::FrameInfo", %"struct.SkCodec::FrameInfo"* %1, i64 0, i32 2
  store i8 %4, i8* %11, align 4
  %12 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %0, i64 0, i32 2
  %13 = load i8, i8* %12, align 4, !range !3
  %14 = icmp eq i8 %13, 0
  %15 = select i1 %14, i32 1, i32 3
  %16 = getelementptr inbounds %"struct.SkCodec::FrameInfo", %"struct.SkCodec::FrameInfo"* %1, i64 0, i32 3
  store i32 %15, i32* %16, align 4
  %17 = bitcast %class.SkFrame* %0 to i32 (%class.SkFrame*)***
  %18 = load i32 (%class.SkFrame*)**, i32 (%class.SkFrame*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%class.SkFrame*)*, i32 (%class.SkFrame*)** %18, i64 2
  %20 = load i32 (%class.SkFrame*)*, i32 (%class.SkFrame*)** %19, align 8
  %21 = tail call i32 %20(%class.SkFrame* %0) #16
  %22 = icmp ne i32 %21, 0
  %23 = getelementptr inbounds %"struct.SkCodec::FrameInfo", %"struct.SkCodec::FrameInfo"* %1, i64 0, i32 4
  %24 = zext i1 %22 to i8
  store i8 %24, i8* %23, align 4
  %25 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %0, i64 0, i32 5
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"struct.SkCodec::FrameInfo", %"struct.SkCodec::FrameInfo"* %1, i64 0, i32 5
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %0, i64 0, i32 7
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"struct.SkCodec::FrameInfo", %"struct.SkCodec::FrameInfo"* %1, i64 0, i32 6
  store i32 %29, i32* %30, align 4
  %31 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %0, i64 0, i32 4
  %32 = getelementptr inbounds %"struct.SkCodec::FrameInfo", %"struct.SkCodec::FrameInfo"* %1, i64 0, i32 7
  %33 = bitcast %struct.SkIRect* %32 to i8*
  %34 = bitcast %struct.SkIRect* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 4 %34, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkFrameHolder24setAlphaAndRequiredFrameEP7SkFrame(%class.SkFrameHolder*, %class.SkFrame*) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to { i64, i64 }*
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to { i64, i64 }*
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to { i64, i64 }*
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %struct.SkIRect*
  %11 = alloca { i64, i64 }, align 8
  %12 = alloca { i64, i64 }, align 8
  %13 = bitcast %class.SkFrame* %1 to i32 (%class.SkFrame*)***
  %14 = load i32 (%class.SkFrame*)**, i32 (%class.SkFrame*)*** %13, align 8
  %15 = getelementptr inbounds i32 (%class.SkFrame*)*, i32 (%class.SkFrame*)** %14, i64 2
  %16 = load i32 (%class.SkFrame*)*, i32 (%class.SkFrame*)** %15, align 8
  %17 = tail call i32 %16(%class.SkFrame* %1) #16
  %18 = icmp ne i32 %17, 0
  %19 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #16
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %21 = getelementptr inbounds %class.SkFrameHolder, %class.SkFrameHolder* %0, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %class.SkFrameHolder, %class.SkFrameHolder* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = shl nuw i64 %25, 32
  %27 = zext i32 %22 to i64
  %28 = or i64 %26, %27
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  store i64 0, i64* %29, align 8
  store i64 %28, i64* %20, align 8
  %30 = bitcast { i64, i64 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #16
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 1
  %32 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %1, i64 0, i32 4
  %33 = bitcast %struct.SkIRect* %32 to <2 x i64>*
  %34 = load <2 x i64>, <2 x i64>* %33, align 4
  %35 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35)
  %36 = bitcast <2 x i64>* %5 to %struct.SkIRect*
  %37 = getelementptr inbounds <2 x i64>, <2 x i64>* %5, i64 0, i64 0
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store <2 x i64> %34, <2 x i64>* %5, align 16
  %39 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %36, %struct.SkIRect* nonnull dereferenceable(16) %36, %struct.SkIRect* nonnull dereferenceable(16) %10) #16
  %40 = load i64, i64* %37, align 16
  %41 = load i64, i64* %38, align 8
  %42 = select i1 %39, i64 %40, i64 0
  %43 = select i1 %39, i64 %41, i64 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35)
  %44 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 0
  store i64 %42, i64* %44, align 8
  store i64 %43, i64* %31, align 8
  %45 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %1, i64 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 0
  %48 = trunc i64 %43 to i32
  %49 = trunc i64 %42 to i32
  %50 = lshr i64 %43, 32
  %51 = trunc i64 %50 to i32
  %52 = lshr i64 %42, 32
  %53 = trunc i64 %52 to i32
  br i1 %47, label %54, label %63

54:                                               ; preds = %2
  br i1 %18, label %59, label %55

55:                                               ; preds = %54
  %56 = call i32 @bcmp(i8* nonnull %30, i8* nonnull %19, i64 16) #16
  %57 = icmp ne i32 %56, 0
  %58 = zext i1 %57 to i8
  br label %59

59:                                               ; preds = %55, %54
  %60 = phi i8 [ 1, %54 ], [ %58, %55 ]
  %61 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %1, i64 0, i32 2
  store i8 %60, i8* %61, align 4
  %62 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %1, i64 0, i32 3
  store i32 -1, i32* %62, align 8
  br label %258

63:                                               ; preds = %2
  %64 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %1, i64 0, i32 7
  %65 = load i32, i32* %64, align 4
  %66 = icmp ne i32 %65, 0
  %67 = xor i1 %18, true
  %68 = or i1 %66, %67
  br i1 %68, label %69, label %76

69:                                               ; preds = %63
  %70 = call i32 @bcmp(i8* nonnull %30, i8* nonnull %19, i64 16) #16
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %76

72:                                               ; preds = %69
  %73 = zext i1 %18 to i8
  %74 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %1, i64 0, i32 2
  store i8 %73, i8* %74, align 4
  %75 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %1, i64 0, i32 3
  store i32 -1, i32* %75, align 8
  br label %258

76:                                               ; preds = %63, %69
  %77 = add nsw i32 %46, -1
  %78 = bitcast %class.SkFrameHolder* %0 to %class.SkFrame* (%class.SkFrameHolder*, i32)***
  %79 = load %class.SkFrame* (%class.SkFrameHolder*, i32)**, %class.SkFrame* (%class.SkFrameHolder*, i32)*** %78, align 8
  %80 = getelementptr inbounds %class.SkFrame* (%class.SkFrameHolder*, i32)*, %class.SkFrame* (%class.SkFrameHolder*, i32)** %79, i64 2
  %81 = load %class.SkFrame* (%class.SkFrameHolder*, i32)*, %class.SkFrame* (%class.SkFrameHolder*, i32)** %80, align 8
  %82 = call %class.SkFrame* %81(%class.SkFrameHolder* %0, i32 %77) #16
  %83 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %82, i64 0, i32 5
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 3
  br i1 %85, label %86, label %103

86:                                               ; preds = %76, %94
  %87 = phi %class.SkFrame* [ %99, %94 ], [ %82, %76 ]
  %88 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %87, i64 0, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %86
  %92 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %1, i64 0, i32 2
  store i8 1, i8* %92, align 4
  %93 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %1, i64 0, i32 3
  store i32 -1, i32* %93, align 8
  br label %258

94:                                               ; preds = %86
  %95 = add nsw i32 %89, -1
  %96 = load %class.SkFrame* (%class.SkFrameHolder*, i32)**, %class.SkFrame* (%class.SkFrameHolder*, i32)*** %78, align 8
  %97 = getelementptr inbounds %class.SkFrame* (%class.SkFrameHolder*, i32)*, %class.SkFrame* (%class.SkFrameHolder*, i32)** %96, i64 2
  %98 = load %class.SkFrame* (%class.SkFrameHolder*, i32)*, %class.SkFrame* (%class.SkFrameHolder*, i32)** %97, align 8
  %99 = call %class.SkFrame* %98(%class.SkFrameHolder* %0, i32 %95) #16
  %100 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %99, i64 0, i32 5
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, 3
  br i1 %102, label %86, label %103

103:                                              ; preds = %94, %76
  %104 = phi %class.SkFrame* [ %82, %76 ], [ %99, %94 ]
  %105 = phi i32 [ %84, %76 ], [ %101, %94 ]
  %106 = icmp eq i32 %105, 2
  %107 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %107) #16
  %108 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  %109 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %104, i64 0, i32 4
  %110 = bitcast %struct.SkIRect* %109 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 4
  %112 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %112)
  %113 = bitcast <2 x i64>* %3 to %struct.SkIRect*
  %114 = getelementptr inbounds <2 x i64>, <2 x i64>* %3, i64 0, i64 0
  %115 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  store <2 x i64> %111, <2 x i64>* %3, align 16
  %116 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %113, %struct.SkIRect* nonnull dereferenceable(16) %113, %struct.SkIRect* nonnull dereferenceable(16) %10) #16
  %117 = load i64, i64* %114, align 16
  %118 = load i64, i64* %115, align 8
  %119 = select i1 %116, i64 %117, i64 0
  %120 = select i1 %116, i64 %118, i64 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %112)
  %121 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  store i64 %119, i64* %121, align 8
  store i64 %120, i64* %108, align 8
  br i1 %106, label %122, label %132

122:                                              ; preds = %103
  %123 = call i32 @bcmp(i8* nonnull %107, i8* nonnull %19, i64 16) #16
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %129, label %125

125:                                              ; preds = %122
  %126 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %104, i64 0, i32 3
  %127 = load i32, i32* %126, align 8
  %128 = icmp eq i32 %127, -1
  br i1 %128, label %129, label %132

129:                                              ; preds = %125, %122
  %130 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %1, i64 0, i32 2
  store i8 1, i8* %130, align 4
  %131 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %1, i64 0, i32 3
  store i32 -1, i32* %131, align 8
  br label %257

132:                                              ; preds = %125, %103
  br i1 %68, label %133, label %166

133:                                              ; preds = %132
  %134 = shl i64 %120, 32
  %135 = ashr exact i64 %134, 32
  %136 = shl i64 %119, 32
  %137 = ashr exact i64 %136, 32
  %138 = sub nsw i64 %135, %137
  %139 = ashr i64 %120, 32
  %140 = ashr i64 %119, 32
  %141 = sub nsw i64 %139, %140
  %142 = icmp slt i64 %138, 1
  %143 = icmp slt i64 %141, 1
  %144 = or i1 %142, %143
  br i1 %144, label %239, label %145

145:                                              ; preds = %133
  %146 = shl i64 %43, 32
  %147 = ashr exact i64 %146, 32
  %148 = shl i64 %42, 32
  %149 = ashr exact i64 %148, 32
  %150 = sub nsw i64 %147, %149
  %151 = ashr i64 %43, 32
  %152 = ashr i64 %42, 32
  %153 = sub nsw i64 %151, %152
  %154 = icmp slt i64 %150, 1
  %155 = icmp slt i64 %153, 1
  %156 = or i1 %154, %155
  %157 = or i64 %153, %150
  %158 = add nsw i64 %157, 2147483648
  %159 = icmp ugt i64 %158, 4294967295
  %160 = bitcast <2 x i64>* %7 to i8*
  %161 = bitcast <2 x i64>* %7 to %struct.SkIRect*
  %162 = getelementptr inbounds <2 x i64>, <2 x i64>* %7, i64 0, i64 0
  %163 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %164 = load i64, i64* %121, align 8
  %165 = load i64, i64* %108, align 8
  br label %176

166:                                              ; preds = %132
  %167 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %104, i64 0, i32 1
  %168 = load i32, i32* %167, align 8
  %169 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %1, i64 0, i32 3
  store i32 %168, i32* %169, align 8
  %170 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %104, i64 0, i32 2
  %171 = load i8, i8* %170, align 4, !range !3
  %172 = icmp ne i8 %171, 0
  %173 = or i1 %106, %172
  %174 = zext i1 %173 to i8
  %175 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %1, i64 0, i32 2
  store i8 %174, i8* %175, align 4
  br label %257

176:                                              ; preds = %145, %211
  %177 = phi i64 [ %165, %145 ], [ %223, %211 ]
  %178 = phi i64 [ %164, %145 ], [ %222, %211 ]
  %179 = phi i64 [ %141, %145 ], [ %231, %211 ]
  %180 = phi i64 [ %119, %145 ], [ %222, %211 ]
  %181 = phi i64 [ %120, %145 ], [ %223, %211 ]
  %182 = phi i64 [ %138, %145 ], [ %228, %211 ]
  %183 = phi %class.SkFrame* [ %104, %145 ], [ %215, %211 ]
  %184 = or i64 %179, %182
  %185 = add nsw i64 %184, 2147483648
  %186 = icmp ugt i64 %185, 4294967295
  %187 = or i1 %186, %156
  br i1 %187, label %235, label %188

188:                                              ; preds = %176
  %189 = lshr i64 %181, 32
  %190 = lshr i64 %180, 32
  %191 = trunc i64 %181 to i32
  %192 = trunc i64 %180 to i32
  %193 = trunc i64 %189 to i32
  %194 = trunc i64 %190 to i32
  %195 = icmp slt i32 %192, %49
  %196 = or i1 %195, %159
  %197 = icmp slt i32 %194, %53
  %198 = or i1 %197, %196
  %199 = icmp sgt i32 %191, %48
  %200 = or i1 %199, %198
  %201 = icmp sle i32 %193, %51
  %202 = xor i1 %200, true
  %203 = and i1 %201, %202
  br i1 %203, label %204, label %235

204:                                              ; preds = %188
  %205 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %183, i64 0, i32 3
  %206 = load i32, i32* %205, align 8
  %207 = icmp eq i32 %206, -1
  br i1 %207, label %208, label %211

208:                                              ; preds = %204
  store i64 %178, i64* %121, align 8
  store i64 %177, i64* %108, align 8
  %209 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %1, i64 0, i32 3
  store i32 -1, i32* %209, align 8
  %210 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %1, i64 0, i32 2
  store i8 1, i8* %210, align 4
  br label %257

211:                                              ; preds = %204
  %212 = load %class.SkFrame* (%class.SkFrameHolder*, i32)**, %class.SkFrame* (%class.SkFrameHolder*, i32)*** %78, align 8
  %213 = getelementptr inbounds %class.SkFrame* (%class.SkFrameHolder*, i32)*, %class.SkFrame* (%class.SkFrameHolder*, i32)** %212, i64 2
  %214 = load %class.SkFrame* (%class.SkFrameHolder*, i32)*, %class.SkFrame* (%class.SkFrameHolder*, i32)** %213, align 8
  %215 = call %class.SkFrame* %214(%class.SkFrameHolder* %0, i32 %206) #16
  %216 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %215, i64 0, i32 4
  %217 = bitcast %struct.SkIRect* %216 to <2 x i64>*
  %218 = load <2 x i64>, <2 x i64>* %217, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %160)
  store <2 x i64> %218, <2 x i64>* %7, align 16
  %219 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %161, %struct.SkIRect* nonnull dereferenceable(16) %161, %struct.SkIRect* nonnull dereferenceable(16) %10) #16
  %220 = load i64, i64* %162, align 16
  %221 = load i64, i64* %163, align 8
  %222 = select i1 %219, i64 %220, i64 0
  %223 = select i1 %219, i64 %221, i64 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %160)
  %224 = shl i64 %223, 32
  %225 = ashr exact i64 %224, 32
  %226 = shl i64 %222, 32
  %227 = ashr exact i64 %226, 32
  %228 = sub nsw i64 %225, %227
  %229 = ashr i64 %223, 32
  %230 = ashr i64 %222, 32
  %231 = sub nsw i64 %229, %230
  %232 = icmp slt i64 %228, 1
  %233 = icmp slt i64 %231, 1
  %234 = or i1 %232, %233
  br i1 %234, label %235, label %176

235:                                              ; preds = %211, %188, %176
  %236 = phi i64 [ %223, %211 ], [ %177, %176 ], [ %177, %188 ]
  %237 = phi i64 [ %222, %211 ], [ %178, %176 ], [ %178, %188 ]
  %238 = phi %class.SkFrame* [ %215, %211 ], [ %183, %176 ], [ %183, %188 ]
  store i64 %237, i64* %121, align 8
  store i64 %236, i64* %108, align 8
  br label %239

239:                                              ; preds = %235, %133
  %240 = phi %class.SkFrame* [ %104, %133 ], [ %238, %235 ]
  %241 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %240, i64 0, i32 1
  %242 = load i32, i32* %241, align 8
  %243 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %1, i64 0, i32 3
  store i32 %242, i32* %243, align 8
  %244 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %240, i64 0, i32 5
  %245 = load i32, i32* %244, align 4
  %246 = icmp eq i32 %245, 2
  br i1 %246, label %247, label %249

247:                                              ; preds = %239
  %248 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %1, i64 0, i32 2
  store i8 1, i8* %248, align 4
  br label %257

249:                                              ; preds = %239
  %250 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %240, i64 0, i32 2
  %251 = load i8, i8* %250, align 4, !range !3
  %252 = icmp ne i8 %251, 0
  %253 = and i1 %18, %66
  %254 = or i1 %253, %252
  %255 = zext i1 %254 to i8
  %256 = getelementptr inbounds %class.SkFrame, %class.SkFrame* %1, i64 0, i32 2
  store i8 %255, i8* %256, align 4
  br label %257

257:                                              ; preds = %208, %249, %247, %166, %129
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107) #16
  br label %258

258:                                              ; preds = %91, %72, %257, %59
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK7SkCodec21onGetScaledDimensionsEf(%class.SkCodec*, float) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = shl nuw i64 %7, 32
  %9 = zext i32 %4 to i64
  %10 = or i64 %8, %9
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN7SkCodec21onDimensionsSupportedERK7SkISize(%class.SkCodec*, %struct.SkISize* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_(%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8), %class.SkYUVAPixmapInfo*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps(%class.SkCodec*, %class.SkYUVAPixmaps* dereferenceable(208)) unnamed_addr #0 comdat align 2 {
  ret i32 9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec16onGetValidSubsetEP7SkIRect(%class.SkCodec*, %struct.SkIRect*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN7SkCodec8onRewindEv(%class.SkCodec*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK7SkCodec18onGetScanlineOrderEv(%class.SkCodec*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec14usesColorXformEv(%class.SkCodec*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec15onGetFrameCountEv(%class.SkCodec*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE(%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec20onGetRepetitionCountEv(%class.SkCodec*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkFrameHolder* @_ZNK7SkCodec14getFrameHolderEv(%class.SkCodec*) unnamed_addr #0 comdat align 2 {
  ret %class.SkFrameHolder* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec21onStartScanlineDecodeERK11SkImageInfoRKNS_7OptionsE(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), %"struct.SkCodec::Options"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret i32 9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKNS_7OptionsE(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret i32 9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec19onIncrementalDecodeEPi(%class.SkCodec*, i32*) unnamed_addr #0 comdat align 2 {
  ret i32 9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN7SkCodec15onSkipScanlinesEi(%class.SkCodec*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec14onGetScanlinesEPvim(%class.SkCodec*, i8*, i32, i64) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkSampler* @_ZN7SkCodec10getSamplerEb(%class.SkCodec*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret %class.SkSampler* null
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare zeroext i1 @_ZN11SkJpegCodec6IsJpegEPKvm(i8*, i64) #2

declare %class.SkCodec* @_ZN11SkJpegCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPN7SkCodec6ResultE(%class.SkStream*, i32*) #2

declare zeroext i1 @_ZN11SkWebpCodec6IsWebpEPKvm(i8*, i64) #2

declare %class.SkCodec* @_ZN11SkWebpCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPN7SkCodec6ResultE(%class.SkStream*, i32*) #2

declare zeroext i1 @_ZN10SkGifCodec5IsGifEPKvm(i8*, i64) #2

declare %class.SkCodec* @_ZN10SkGifCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPN7SkCodec6ResultE(%class.SkStream*, i32*) #2

declare zeroext i1 @_ZN10SkIcoCodec5IsIcoEPKvm(i8*, i64) #2

declare %class.SkCodec* @_ZN10SkIcoCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPN7SkCodec6ResultE(%class.SkStream*, i32*) #2

declare zeroext i1 @_ZN10SkBmpCodec5IsBmpEPKvm(i8*, i64) #2

declare %class.SkCodec* @_ZN10SkBmpCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPN7SkCodec6ResultE(%class.SkStream*, i32*) #2

declare zeroext i1 @_ZN11SkWbmpCodec6IsWbmpEPKvm(i8*, i64) #2

declare %class.SkCodec* @_ZN11SkWbmpCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPN7SkCodec6ResultE(%class.SkStream*, i32*) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #13

declare zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #14

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #14

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #2

declare zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK13SkEncodedInfo13makeImageInfoEv(%struct.SkImageInfo* noalias sret, %struct.SkEncodedInfo*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.sk_sp.12, align 8
  %4 = alloca %class.sk_sp.12, align 8
  %5 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %7 [
    i32 0, label %11
    i32 2, label %10
  ]

7:                                                ; preds = %2
  %8 = icmp eq i32 %6, 3
  %9 = select i1 %8, i64 2, i64 6
  br label %11

10:                                               ; preds = %2
  br label %11

11:                                               ; preds = %2, %10, %7
  %12 = phi i64 [ 11, %2 ], [ %9, %7 ], [ 1, %10 ]
  %13 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %15, i64 4294967296, i64 12884901888
  %17 = bitcast %class.sk_sp.12* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  %18 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %3, i64 0, i32 0
  store %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*), %class.SkColorSpace** %18, align 8
  %19 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %20 = load %"class.SkEncodedInfo::ICCProfile"*, %"class.SkEncodedInfo::ICCProfile"** %19, align 8
  %21 = icmp eq %"class.SkEncodedInfo::ICCProfile"* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %11
  store %class.SkColorSpace* null, %class.SkColorSpace** %18, align 8
  br label %29

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %20, i64 0, i32 0
  call void @_ZN12SkColorSpace4MakeERK16skcms_ICCProfile(%class.sk_sp.12* nonnull sret %3, %struct.skcms_ICCProfile* dereferenceable(1008) %24) #16
  %25 = load %class.SkColorSpace*, %class.SkColorSpace** %18, align 8
  %26 = icmp eq %class.SkColorSpace* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = ptrtoint %class.SkColorSpace* %25 to i64
  br label %54

29:                                               ; preds = %23, %22
  %30 = bitcast %class.sk_sp.12* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #16
  call void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp.12* nonnull sret %4) #16
  %31 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %4, i64 0, i32 0
  %32 = bitcast %class.sk_sp.12* %4 to i64*
  %33 = load i64, i64* %32, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %31, align 8
  %34 = load %class.SkColorSpace*, %class.SkColorSpace** %18, align 8
  %35 = bitcast %class.sk_sp.12* %3 to i64*
  store i64 %33, i64* %35, align 8
  %36 = icmp eq %class.SkColorSpace* %34, null
  br i1 %36, label %52, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = bitcast %class.SkColorSpace* %34 to i8*
  call void @_ZdlPv(i8* %42) #17
  br label %43

43:                                               ; preds = %37, %41
  %44 = load %class.SkColorSpace*, %class.SkColorSpace** %31, align 8
  %45 = icmp eq %class.SkColorSpace* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = bitcast %class.SkColorSpace* %44 to i8*
  call void @_ZdlPv(i8* %51) #17
  br label %52

52:                                               ; preds = %29, %43, %46, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #16
  %53 = load i64, i64* %35, align 8
  br label %54

54:                                               ; preds = %52, %27
  %55 = phi i64 [ %28, %27 ], [ %53, %52 ]
  %56 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = or i64 %16, %12
  %61 = zext i32 %59 to i64
  %62 = shl nuw i64 %61, 32
  %63 = zext i32 %57 to i64
  %64 = or i64 %62, %63
  %65 = bitcast %struct.SkImageInfo* %0 to i64*
  store i64 %55, i64* %65, align 8, !alias.scope !19
  %66 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 1
  %67 = bitcast i32* %66 to i64*
  store i64 %60, i64* %67, align 8, !alias.scope !19
  %68 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 1
  %69 = bitcast %struct.SkISize* %68 to i64*
  store i64 %64, i64* %69, align 8, !alias.scope !19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  ret void
}

declare void @_ZN12SkColorSpace4MakeERK16skcms_ICCProfile(%class.sk_sp.12* sret, %struct.skcms_ICCProfile* dereferenceable(1008)) local_unnamed_addr #2

declare void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp.12* sret) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #15

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { nofree nounwind readonly }
attributes #16 = { nounwind }
attributes #17 = { builtin nounwind }
attributes #18 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!6 = distinct !{!6, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!7 = distinct !{!7, !8, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!8 = distinct !{!8, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo: argument 0"}
!11 = distinct !{!11, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo"}
!12 = distinct !{!12, !13, !"_ZNK11SkImageInfo14makeDimensionsE7SkISize: argument 0"}
!13 = distinct !{!13, !"_ZNK11SkImageInfo14makeDimensionsE7SkISize"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo: argument 0"}
!16 = distinct !{!16, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo"}
!17 = distinct !{!17, !18, !"_ZNK11SkImageInfo6makeWHEii: argument 0"}
!18 = distinct !{!18, !"_ZNK11SkImageInfo6makeWHEii"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!21 = distinct !{!21, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
