; ModuleID = '../../third_party/libwebp/src/demux/demux.c'
source_filename = "../../third_party/libwebp/src/demux/demux.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ChunkParser = type { [4 x i8], i32 (%struct.WebPDemuxer*)*, i32 (%struct.WebPDemuxer*)* }
%struct.WebPDemuxer = type { %struct.MemBuffer, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Frame*, %struct.Frame**, %struct.Chunk*, %struct.Chunk** }
%struct.MemBuffer = type { i64, i64, i64, i64, i8* }
%struct.Frame = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x %struct.ChunkData], %struct.Frame* }
%struct.ChunkData = type { i64, i64 }
%struct.Chunk = type { %struct.ChunkData, %struct.Chunk* }
%struct.WebPData = type { i8*, i64 }
%struct.WebPBitstreamFeatures = type { i32, i32, i32, i32, i32, [5 x i32] }
%struct.WebPIterator = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.WebPData, i32, i32, [2 x i32], i8* }
%struct.WebPChunkIterator = type { i32, i32, %struct.WebPData, [6 x i32], i8* }

@kMasterChunks = internal constant [4 x %struct.ChunkParser] [%struct.ChunkParser { [4 x i8] c"VP8 ", i32 (%struct.WebPDemuxer*)* @ParseSingleImage, i32 (%struct.WebPDemuxer*)* @IsValidSimpleFormat }, %struct.ChunkParser { [4 x i8] c"VP8L", i32 (%struct.WebPDemuxer*)* @ParseSingleImage, i32 (%struct.WebPDemuxer*)* @IsValidSimpleFormat }, %struct.ChunkParser { [4 x i8] c"VP8X", i32 (%struct.WebPDemuxer*)* @ParseVP8X, i32 (%struct.WebPDemuxer*)* @IsValidExtendedFormat }, %struct.ChunkParser { [4 x i8] c"0000", i32 (%struct.WebPDemuxer*)* null, i32 (%struct.WebPDemuxer*)* null }], align 16
@.str = private unnamed_addr constant [5 x i8] c"RIFF\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"WEBP\00", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @WebPGetDemuxVersion() local_unnamed_addr #0 {
  ret i32 66048
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.WebPDemuxer* @WebPDemuxInternal(%struct.WebPData* readonly, i32, i32*, i32) local_unnamed_addr #1 {
  %5 = alloca %struct.WebPBitstreamFeatures, align 4
  %6 = icmp ne i32* %2, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  store i32 -1, i32* %2, align 4
  br label %8

8:                                                ; preds = %7, %4
  %9 = and i32 %3, -256
  %10 = icmp ne i32 %9, 256
  %11 = icmp eq %struct.WebPData* %0, null
  %12 = or i1 %11, %10
  br i1 %12, label %227, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.WebPData, %struct.WebPData* %0, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %227, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.WebPData, %struct.WebPData* %0, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %227, label %21

21:                                               ; preds = %17
  %22 = icmp ult i64 %19, 20
  br i1 %22, label %141, label %23

23:                                               ; preds = %21
  %24 = tail call i32 @bcmp(i8* nonnull %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #9
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %55

26:                                               ; preds = %23
  %27 = getelementptr inbounds i8, i8* %15, i64 8
  %28 = tail call i32 @bcmp(i8* %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4) #9
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %55

30:                                               ; preds = %26
  %31 = getelementptr inbounds i8, i8* %15, i64 4
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = getelementptr inbounds i8, i8* %15, i64 5
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = shl nuw nsw i32 %36, 8
  %38 = or i32 %37, %33
  %39 = getelementptr inbounds i8, i8* %15, i64 6
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = getelementptr inbounds i8, i8* %15, i64 7
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = shl nuw nsw i32 %44, 8
  %46 = or i32 %45, %41
  %47 = shl nuw i32 %46, 16
  %48 = or i32 %38, %47
  %49 = add i32 %48, -8
  %50 = icmp ugt i32 %49, -18
  br i1 %50, label %55, label %51

51:                                               ; preds = %30
  %52 = add nuw i32 %48, 8
  %53 = zext i32 %52 to i64
  %54 = icmp ugt i64 %19, %53
  br i1 %54, label %150, label %146

55:                                               ; preds = %26, %23, %30
  %56 = bitcast %struct.WebPBitstreamFeatures* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %56) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %56, i8 -86, i64 40, i1 false) #9
  %57 = call i32 @WebPGetFeaturesInternal(i8* nonnull %15, i64 %19, %struct.WebPBitstreamFeatures* nonnull %5, i32 521) #9
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %55
  %60 = icmp eq i32 %57, 7
  %61 = select i1 %60, i32 1, i32 2
  br label %122

62:                                               ; preds = %55
  %63 = call i8* @WebPSafeCalloc(i64 1, i64 104) #9
  %64 = call i8* @WebPSafeCalloc(i64 1, i64 80) #9
  %65 = icmp eq i8* %63, null
  %66 = icmp eq i8* %64, null
  %67 = or i1 %65, %66
  br i1 %67, label %121, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds i8, i8* %63, i64 40
  %70 = bitcast i8* %69 to i32*
  store i32 0, i32* %70, align 8
  %71 = getelementptr inbounds i8, i8* %63, i64 52
  %72 = bitcast i8* %71 to i32*
  %73 = getelementptr inbounds i8, i8* %63, i64 56
  %74 = bitcast i8* %73 to i32*
  %75 = bitcast i8* %71 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 -1, i32 1, i32 -1>, <4 x i32>* %75, align 4
  %76 = getelementptr inbounds i8, i8* %63, i64 72
  %77 = getelementptr inbounds i8, i8* %63, i64 80
  %78 = bitcast i8* %77 to %struct.Frame***
  %79 = bitcast i8* %77 to i8**
  store i8* %76, i8** %79, align 8
  %80 = getelementptr inbounds i8, i8* %63, i64 88
  %81 = getelementptr inbounds i8, i8* %63, i64 96
  %82 = bitcast i8* %81 to i8**
  store i8* %80, i8** %82, align 8
  %83 = bitcast i8* %63 to i64*
  store i64 0, i64* %83, align 8
  %84 = getelementptr inbounds i8, i8* %63, i64 8
  %85 = bitcast i8* %84 to i64*
  store i64 %19, i64* %85, align 8
  %86 = getelementptr inbounds i8, i8* %63, i64 16
  %87 = bitcast i8* %86 to i64*
  store i64 0, i64* %87, align 8
  %88 = getelementptr inbounds i8, i8* %63, i64 24
  %89 = bitcast i8* %88 to i64*
  store i64 %19, i64* %89, align 8
  %90 = getelementptr inbounds i8, i8* %63, i64 32
  %91 = bitcast i8* %90 to i8**
  store i8* %15, i8** %91, align 8
  %92 = getelementptr inbounds i8, i8* %64, i64 40
  %93 = bitcast i8* %92 to i64*
  store i64 0, i64* %93, align 8
  %94 = getelementptr inbounds i8, i8* %64, i64 48
  %95 = bitcast i8* %94 to i64*
  store i64 %19, i64* %95, align 8
  %96 = getelementptr inbounds %struct.WebPBitstreamFeatures, %struct.WebPBitstreamFeatures* %5, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds i8, i8* %64, i64 8
  %99 = bitcast i8* %98 to i32*
  store i32 %97, i32* %99, align 8
  %100 = getelementptr inbounds %struct.WebPBitstreamFeatures, %struct.WebPBitstreamFeatures* %5, i64 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds i8, i8* %64, i64 12
  %103 = bitcast i8* %102 to i32*
  store i32 %101, i32* %103, align 4
  %104 = getelementptr inbounds %struct.WebPBitstreamFeatures, %struct.WebPBitstreamFeatures* %5, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds i8, i8* %64, i64 16
  %107 = bitcast i8* %106 to i32*
  %108 = load i32, i32* %107, align 8
  %109 = or i32 %108, %105
  store i32 %109, i32* %107, align 8
  %110 = getelementptr inbounds i8, i8* %64, i64 32
  %111 = bitcast i8* %110 to i32*
  store i32 1, i32* %111, align 8
  %112 = getelementptr inbounds i8, i8* %64, i64 36
  %113 = bitcast i8* %112 to i32*
  store i32 1, i32* %113, align 4
  %114 = load %struct.Frame**, %struct.Frame*** %78, align 8
  %115 = load %struct.Frame*, %struct.Frame** %114, align 8
  %116 = icmp eq %struct.Frame* %115, null
  br i1 %116, label %124, label %117

117:                                              ; preds = %68
  %118 = getelementptr inbounds %struct.Frame, %struct.Frame* %115, i64 0, i32 9
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %117, %62
  call void @WebPSafeFree(i8* %63) #9
  call void @WebPSafeFree(i8* %64) #9
  br label %122

122:                                              ; preds = %59, %121
  %123 = phi i32 [ 2, %121 ], [ %61, %59 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %56) #9
  br label %141

124:                                              ; preds = %117, %68
  %125 = bitcast %struct.Frame** %114 to i8**
  store i8* %64, i8** %125, align 8
  %126 = getelementptr inbounds i8, i8* %64, i64 72
  %127 = bitcast i8* %126 to %struct.Frame**
  store %struct.Frame* null, %struct.Frame** %127, align 8
  store i8* %126, i8** %79, align 8
  store i32 2, i32* %70, align 8
  %128 = load i32, i32* %99, align 8
  store i32 %128, i32* %72, align 4
  %129 = load i32, i32* %103, align 4
  store i32 %129, i32* %74, align 8
  %130 = load i32, i32* %107, align 8
  %131 = icmp eq i32 %130, 0
  %132 = select i1 %131, i32 0, i32 16
  %133 = getelementptr inbounds i8, i8* %63, i64 48
  %134 = bitcast i8* %133 to i32*
  %135 = load i32, i32* %134, align 8
  %136 = or i32 %132, %135
  store i32 %136, i32* %134, align 8
  %137 = getelementptr inbounds i8, i8* %63, i64 68
  %138 = bitcast i8* %137 to i32*
  store i32 1, i32* %138, align 4
  %139 = bitcast i8* %63 to %struct.WebPDemuxer*
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %56) #9
  br i1 %6, label %140, label %227

140:                                              ; preds = %124
  store i32 2, i32* %2, align 4
  br label %227

141:                                              ; preds = %122, %21
  %142 = phi i32 [ 1, %21 ], [ %123, %122 ]
  br i1 %6, label %143, label %227

143:                                              ; preds = %141
  %144 = icmp ne i32 %142, 1
  %145 = sext i1 %144 to i32
  store i32 %145, i32* %2, align 4
  br label %227

146:                                              ; preds = %51
  %147 = icmp ult i64 %19, %53
  %148 = icmp eq i32 %1, 0
  %149 = and i1 %148, %147
  br i1 %149, label %227, label %150

150:                                              ; preds = %51, %146
  %151 = phi i1 [ %147, %146 ], [ false, %51 ]
  %152 = phi i64 [ %19, %146 ], [ %53, %51 ]
  %153 = tail call i8* @WebPSafeCalloc(i64 1, i64 104) #9
  %154 = bitcast i8* %153 to %struct.WebPDemuxer*
  %155 = icmp eq i8* %153, null
  br i1 %155, label %227, label %156

156:                                              ; preds = %150
  %157 = getelementptr inbounds i8, i8* %153, i64 40
  %158 = bitcast i8* %157 to i32*
  store i32 0, i32* %158, align 8
  %159 = getelementptr inbounds i8, i8* %153, i64 52
  %160 = bitcast i8* %159 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 -1, i32 1, i32 -1>, <4 x i32>* %160, align 4
  %161 = getelementptr inbounds i8, i8* %153, i64 72
  %162 = bitcast i8* %161 to %struct.Frame**
  %163 = getelementptr inbounds i8, i8* %153, i64 80
  %164 = bitcast i8* %163 to i8**
  store i8* %161, i8** %164, align 8
  %165 = getelementptr inbounds i8, i8* %153, i64 88
  %166 = bitcast i8* %165 to %struct.Chunk**
  %167 = getelementptr inbounds i8, i8* %153, i64 96
  %168 = bitcast i8* %167 to i8**
  store i8* %165, i8** %168, align 8
  %169 = bitcast i8* %153 to i64*
  store i64 12, i64* %169, align 8
  %170 = getelementptr inbounds i8, i8* %153, i64 8
  %171 = bitcast i8* %170 to i64*
  store i64 %152, i64* %171, align 8
  %172 = getelementptr inbounds i8, i8* %153, i64 16
  %173 = bitcast i8* %172 to i64*
  store i64 %53, i64* %173, align 8
  %174 = getelementptr inbounds i8, i8* %153, i64 24
  %175 = bitcast i8* %174 to i64*
  store i64 %152, i64* %175, align 8
  %176 = getelementptr inbounds i8, i8* %153, i64 32
  %177 = bitcast i8* %176 to i8**
  store i8* %15, i8** %177, align 8
  %178 = getelementptr inbounds i8, i8* %15, i64 12
  %179 = tail call i32 @bcmp(i8* getelementptr inbounds ([4 x %struct.ChunkParser], [4 x %struct.ChunkParser]* @kMasterChunks, i64 0, i64 0, i32 0, i64 0), i8* %178, i64 4)
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %199

181:                                              ; preds = %229, %199, %156
  %182 = phi i32 (%struct.WebPDemuxer*)* [ @ParseSingleImage, %156 ], [ @ParseSingleImage, %199 ], [ @ParseVP8X, %229 ]
  %183 = phi %struct.ChunkParser* [ getelementptr inbounds ([4 x %struct.ChunkParser], [4 x %struct.ChunkParser]* @kMasterChunks, i64 0, i64 0), %156 ], [ getelementptr inbounds ([4 x %struct.ChunkParser], [4 x %struct.ChunkParser]* @kMasterChunks, i64 0, i64 1), %199 ], [ getelementptr inbounds ([4 x %struct.ChunkParser], [4 x %struct.ChunkParser]* @kMasterChunks, i64 0, i64 2), %229 ]
  %184 = tail call i32 %182(%struct.WebPDemuxer* nonnull %154) #9
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %181
  store i32 2, i32* %158, align 8
  br label %187

187:                                              ; preds = %186, %181
  %188 = icmp ne i32 %184, 1
  %189 = or i1 %151, %188
  %190 = icmp eq i32 %184, 2
  %191 = xor i1 %189, true
  %192 = or i1 %190, %191
  br i1 %192, label %198, label %193

193:                                              ; preds = %187
  %194 = getelementptr inbounds %struct.ChunkParser, %struct.ChunkParser* %183, i64 0, i32 2
  %195 = load i32 (%struct.WebPDemuxer*)*, i32 (%struct.WebPDemuxer*)** %194, align 8
  %196 = tail call i32 %195(%struct.WebPDemuxer* nonnull %154) #9
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %202

198:                                              ; preds = %193, %187
  store i32 -1, i32* %158, align 8
  br label %202

199:                                              ; preds = %156
  %200 = tail call i32 @bcmp(i8* getelementptr inbounds ([4 x %struct.ChunkParser], [4 x %struct.ChunkParser]* @kMasterChunks, i64 0, i64 1, i32 0, i64 0), i8* %178, i64 4)
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %181, label %229

202:                                              ; preds = %229, %193, %198
  %203 = phi i32 [ 2, %198 ], [ %184, %193 ], [ 2, %229 ]
  br i1 %6, label %204, label %206

204:                                              ; preds = %202
  %205 = load i32, i32* %158, align 8
  store i32 %205, i32* %2, align 4
  br label %206

206:                                              ; preds = %204, %202
  %207 = icmp eq i32 %203, 2
  br i1 %207, label %208, label %227

208:                                              ; preds = %206
  %209 = load %struct.Frame*, %struct.Frame** %162, align 8
  %210 = icmp eq %struct.Frame* %209, null
  br i1 %210, label %217, label %211

211:                                              ; preds = %208, %211
  %212 = phi %struct.Frame* [ %215, %211 ], [ %209, %208 ]
  %213 = bitcast %struct.Frame* %212 to i8*
  %214 = getelementptr inbounds %struct.Frame, %struct.Frame* %212, i64 0, i32 11
  %215 = load %struct.Frame*, %struct.Frame** %214, align 8
  tail call void @WebPSafeFree(i8* %213) #9
  %216 = icmp eq %struct.Frame* %215, null
  br i1 %216, label %217, label %211

217:                                              ; preds = %211, %208
  %218 = load %struct.Chunk*, %struct.Chunk** %166, align 8
  %219 = icmp eq %struct.Chunk* %218, null
  br i1 %219, label %226, label %220

220:                                              ; preds = %217, %220
  %221 = phi %struct.Chunk* [ %224, %220 ], [ %218, %217 ]
  %222 = bitcast %struct.Chunk* %221 to i8*
  %223 = getelementptr inbounds %struct.Chunk, %struct.Chunk* %221, i64 0, i32 1
  %224 = load %struct.Chunk*, %struct.Chunk** %223, align 8
  tail call void @WebPSafeFree(i8* %222) #9
  %225 = icmp eq %struct.Chunk* %224, null
  br i1 %225, label %226, label %220

226:                                              ; preds = %220, %217
  tail call void @WebPSafeFree(i8* nonnull %153) #9
  br label %227

227:                                              ; preds = %124, %140, %8, %206, %150, %146, %141, %143, %13, %17, %226
  %228 = phi %struct.WebPDemuxer* [ null, %226 ], [ null, %8 ], [ null, %17 ], [ null, %13 ], [ null, %143 ], [ null, %141 ], [ null, %146 ], [ null, %150 ], [ %154, %206 ], [ %139, %140 ], [ %139, %124 ]
  ret %struct.WebPDemuxer* %228

229:                                              ; preds = %199
  %230 = tail call i32 @bcmp(i8* getelementptr inbounds ([4 x %struct.ChunkParser], [4 x %struct.ChunkParser]* @kMasterChunks, i64 0, i64 2, i32 0, i64 0), i8* %178, i64 4)
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %181, label %202
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i8* @WebPSafeCalloc(i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @WebPDemuxDelete(%struct.WebPDemuxer*) local_unnamed_addr #1 {
  %2 = icmp eq %struct.WebPDemuxer* %0, null
  br i1 %2, label %25, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 9
  %5 = load %struct.Frame*, %struct.Frame** %4, align 8
  %6 = icmp eq %struct.Frame* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %3, %7
  %8 = phi %struct.Frame* [ %11, %7 ], [ %5, %3 ]
  %9 = bitcast %struct.Frame* %8 to i8*
  %10 = getelementptr inbounds %struct.Frame, %struct.Frame* %8, i64 0, i32 11
  %11 = load %struct.Frame*, %struct.Frame** %10, align 8
  tail call void @WebPSafeFree(i8* %9) #9
  %12 = icmp eq %struct.Frame* %11, null
  br i1 %12, label %13, label %7

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 11
  %15 = load %struct.Chunk*, %struct.Chunk** %14, align 8
  %16 = icmp eq %struct.Chunk* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %13, %17
  %18 = phi %struct.Chunk* [ %21, %17 ], [ %15, %13 ]
  %19 = bitcast %struct.Chunk* %18 to i8*
  %20 = getelementptr inbounds %struct.Chunk, %struct.Chunk* %18, i64 0, i32 1
  %21 = load %struct.Chunk*, %struct.Chunk** %20, align 8
  tail call void @WebPSafeFree(i8* %19) #9
  %22 = icmp eq %struct.Chunk* %21, null
  br i1 %22, label %23, label %17

23:                                               ; preds = %17, %13
  %24 = bitcast %struct.WebPDemuxer* %0 to i8*
  tail call void @WebPSafeFree(i8* nonnull %24) #9
  br label %25

25:                                               ; preds = %1, %23
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @WebPSafeFree(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @WebPDemuxGetI(%struct.WebPDemuxer* readonly, i32) local_unnamed_addr #4 {
  %3 = icmp eq %struct.WebPDemuxer* %0, null
  br i1 %3, label %23, label %4

4:                                                ; preds = %2
  switch i32 %1, label %23 [
    i32 0, label %5
    i32 1, label %8
    i32 2, label %11
    i32 3, label %14
    i32 4, label %17
    i32 5, label %20
  ]

5:                                                ; preds = %4
  %6 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  br label %23

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 4
  br label %23

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 5
  %13 = load i32, i32* %12, align 8
  br label %23

14:                                               ; preds = %4
  %15 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 6
  %16 = load i32, i32* %15, align 4
  br label %23

17:                                               ; preds = %4
  %18 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 7
  %19 = load i32, i32* %18, align 8
  br label %23

20:                                               ; preds = %4
  %21 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 8
  %22 = load i32, i32* %21, align 4
  br label %23

23:                                               ; preds = %4, %2, %20, %17, %14, %11, %8, %5
  %24 = phi i32 [ %22, %20 ], [ %19, %17 ], [ %16, %14 ], [ %13, %11 ], [ %10, %8 ], [ %7, %5 ], [ 0, %2 ], [ 0, %4 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @WebPDemuxGetFrame(%struct.WebPDemuxer*, i32, %struct.WebPIterator*) local_unnamed_addr #1 {
  %4 = icmp eq %struct.WebPIterator* %2, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %3
  %6 = bitcast %struct.WebPIterator* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 72, i1 false)
  %7 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %2, i64 0, i32 13
  %8 = bitcast i8** %7 to %struct.WebPDemuxer**
  store %struct.WebPDemuxer* %0, %struct.WebPDemuxer** %8, align 8
  %9 = tail call fastcc i32 @SetFrame(i32 %1, %struct.WebPIterator* nonnull %2)
  br label %10

10:                                               ; preds = %3, %5
  %11 = phi i32 [ %9, %5 ], [ 0, %3 ]
  ret i32 %11
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @SetFrame(i32, %struct.WebPIterator* nocapture) unnamed_addr #5 {
  %3 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %1, i64 0, i32 13
  %4 = bitcast i8** %3 to %struct.WebPDemuxer**
  %5 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %4, align 8
  %6 = icmp eq %struct.WebPDemuxer* %5, null
  %7 = icmp slt i32 %0, 0
  %8 = or i1 %7, %6
  br i1 %8, label %85, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %5, i64 0, i32 8
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, %0
  br i1 %12, label %85, label %13

13:                                               ; preds = %9
  %14 = icmp eq i32 %0, 0
  %15 = select i1 %14, i32 %11, i32 %0
  %16 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %5, i64 0, i32 9
  %17 = load %struct.Frame*, %struct.Frame** %16, align 8
  %18 = icmp eq %struct.Frame* %17, null
  br i1 %18, label %85, label %19

19:                                               ; preds = %13, %24
  %20 = phi %struct.Frame* [ %26, %24 ], [ %17, %13 ]
  %21 = getelementptr inbounds %struct.Frame, %struct.Frame* %20, i64 0, i32 8
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, %15
  br i1 %23, label %28, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.Frame, %struct.Frame* %20, i64 0, i32 11
  %26 = load %struct.Frame*, %struct.Frame** %25, align 8
  %27 = icmp eq %struct.Frame* %26, null
  br i1 %27, label %85, label %19

28:                                               ; preds = %19
  %29 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %5, i64 0, i32 0, i32 4
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %struct.Frame, %struct.Frame* %20, i64 0, i32 10, i64 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %struct.Frame, %struct.Frame* %20, i64 0, i32 10, i64 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %struct.Frame, %struct.Frame* %20, i64 0, i32 10, i64 1, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %47, label %38

38:                                               ; preds = %28
  %39 = icmp eq i64 %32, 0
  %40 = getelementptr inbounds %struct.Frame, %struct.Frame* %20, i64 0, i32 10, i64 1, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %32, %36
  %43 = sub i64 %42, %41
  %44 = select i1 %39, i64 0, i64 %43
  %45 = add i64 %36, %34
  %46 = add i64 %45, %44
  br label %47

47:                                               ; preds = %38, %28
  %48 = phi i64 [ %34, %28 ], [ %46, %38 ]
  %49 = phi i64 [ %32, %28 ], [ %41, %38 ]
  %50 = getelementptr inbounds i8, i8* %30, i64 %49
  %51 = icmp eq i8* %50, null
  br i1 %51, label %85, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %1, i64 0, i32 0
  store i32 %15, i32* %53, align 8
  %54 = load i32, i32* %10, align 4
  %55 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %1, i64 0, i32 1
  store i32 %54, i32* %55, align 4
  %56 = getelementptr inbounds %struct.Frame, %struct.Frame* %20, i64 0, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %1, i64 0, i32 2
  store i32 %57, i32* %58, align 8
  %59 = getelementptr inbounds %struct.Frame, %struct.Frame* %20, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %1, i64 0, i32 3
  store i32 %60, i32* %61, align 4
  %62 = getelementptr inbounds %struct.Frame, %struct.Frame* %20, i64 0, i32 2
  %63 = load i32, i32* %62, align 8
  %64 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %1, i64 0, i32 4
  store i32 %63, i32* %64, align 8
  %65 = getelementptr inbounds %struct.Frame, %struct.Frame* %20, i64 0, i32 3
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %1, i64 0, i32 5
  store i32 %66, i32* %67, align 4
  %68 = getelementptr inbounds %struct.Frame, %struct.Frame* %20, i64 0, i32 4
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %1, i64 0, i32 10
  store i32 %69, i32* %70, align 8
  %71 = getelementptr inbounds %struct.Frame, %struct.Frame* %20, i64 0, i32 5
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %1, i64 0, i32 6
  store i32 %72, i32* %73, align 8
  %74 = getelementptr inbounds %struct.Frame, %struct.Frame* %20, i64 0, i32 6
  %75 = load i32, i32* %74, align 8
  %76 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %1, i64 0, i32 7
  store i32 %75, i32* %76, align 4
  %77 = getelementptr inbounds %struct.Frame, %struct.Frame* %20, i64 0, i32 7
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %1, i64 0, i32 11
  store i32 %78, i32* %79, align 4
  %80 = getelementptr inbounds %struct.Frame, %struct.Frame* %20, i64 0, i32 9
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %1, i64 0, i32 8
  store i32 %81, i32* %82, align 8
  %83 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %1, i64 0, i32 9, i32 0
  store i8* %50, i8** %83, align 8
  %84 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %1, i64 0, i32 9, i32 1
  store i64 %48, i64* %84, align 8
  br label %85

85:                                               ; preds = %24, %13, %52, %47, %9, %2
  %86 = phi i32 [ 0, %2 ], [ 0, %9 ], [ 1, %52 ], [ 0, %47 ], [ 0, %13 ], [ 0, %24 ]
  ret i32 %86
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @WebPDemuxNextFrame(%struct.WebPIterator*) local_unnamed_addr #5 {
  %2 = icmp eq %struct.WebPIterator* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, 1
  %7 = tail call fastcc i32 @SetFrame(i32 %6, %struct.WebPIterator* nonnull %0)
  br label %8

8:                                                ; preds = %1, %3
  %9 = phi i32 [ %7, %3 ], [ 0, %1 ]
  ret i32 %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @WebPDemuxPrevFrame(%struct.WebPIterator*) local_unnamed_addr #5 {
  %2 = icmp eq %struct.WebPIterator* %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp slt i32 %5, 2
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = add nsw i32 %5, -1
  %9 = tail call fastcc i32 @SetFrame(i32 %8, %struct.WebPIterator* nonnull %0)
  br label %10

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ %9, %7 ], [ 0, %1 ], [ 0, %3 ]
  ret i32 %11
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @WebPDemuxReleaseIterator(%struct.WebPIterator* nocapture) local_unnamed_addr #0 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @WebPDemuxGetChunk(%struct.WebPDemuxer*, i8* readonly, i32, %struct.WebPChunkIterator*) local_unnamed_addr #1 {
  %5 = icmp eq %struct.WebPChunkIterator* %3, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = bitcast %struct.WebPChunkIterator* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 48, i1 false)
  %8 = getelementptr inbounds %struct.WebPChunkIterator, %struct.WebPChunkIterator* %3, i64 0, i32 4
  %9 = bitcast i8** %8 to %struct.WebPDemuxer**
  store %struct.WebPDemuxer* %0, %struct.WebPDemuxer** %9, align 8
  %10 = tail call fastcc i32 @SetChunk(i8* %1, i32 %2, %struct.WebPChunkIterator* nonnull %3)
  br label %11

11:                                               ; preds = %4, %6
  %12 = phi i32 [ %10, %6 ], [ 0, %4 ]
  ret i32 %12
}

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc i32 @SetChunk(i8* readonly, i32, %struct.WebPChunkIterator* nocapture) unnamed_addr #6 {
  %4 = getelementptr inbounds %struct.WebPChunkIterator, %struct.WebPChunkIterator* %2, i64 0, i32 4
  %5 = bitcast i8** %4 to %struct.WebPDemuxer**
  %6 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %5, align 8
  %7 = icmp eq %struct.WebPDemuxer* %6, null
  %8 = icmp eq i8* %0, null
  %9 = or i1 %8, %7
  %10 = icmp slt i32 %1, 0
  %11 = or i1 %10, %9
  br i1 %11, label %65, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %6, i64 0, i32 0, i32 4
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %6, i64 0, i32 11
  %16 = load %struct.Chunk*, %struct.Chunk** %15, align 8
  %17 = icmp eq %struct.Chunk* %16, null
  br i1 %17, label %65, label %18

18:                                               ; preds = %12, %18
  %19 = phi %struct.Chunk* [ %29, %18 ], [ %16, %12 ]
  %20 = phi i32 [ %27, %18 ], [ 0, %12 ]
  %21 = getelementptr inbounds %struct.Chunk, %struct.Chunk* %19, i64 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds i8, i8* %14, i64 %22
  %24 = tail call i32 @bcmp(i8* %23, i8* %0, i64 4) #9
  %25 = icmp eq i32 %24, 0
  %26 = zext i1 %25 to i32
  %27 = add nuw nsw i32 %20, %26
  %28 = getelementptr inbounds %struct.Chunk, %struct.Chunk* %19, i64 0, i32 1
  %29 = load %struct.Chunk*, %struct.Chunk** %28, align 8
  %30 = icmp eq %struct.Chunk* %29, null
  br i1 %30, label %31, label %18

31:                                               ; preds = %18
  %32 = icmp eq i32 %27, 0
  br i1 %32, label %65, label %33

33:                                               ; preds = %31
  %34 = icmp eq i32 %1, 0
  %35 = select i1 %34, i32 %27, i32 %1
  %36 = icmp sgt i32 %35, %27
  br i1 %36, label %65, label %37

37:                                               ; preds = %33, %48
  %38 = phi %struct.Chunk* [ %50, %48 ], [ %16, %33 ]
  %39 = phi i32 [ %46, %48 ], [ 0, %33 ]
  %40 = getelementptr inbounds %struct.Chunk, %struct.Chunk* %38, i64 0, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds i8, i8* %14, i64 %41
  %43 = tail call i32 @bcmp(i8* %42, i8* %0, i64 4) #9
  %44 = icmp eq i32 %43, 0
  %45 = zext i1 %44 to i32
  %46 = add nuw nsw i32 %39, %45
  %47 = icmp eq i32 %46, %35
  br i1 %47, label %52, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %struct.Chunk, %struct.Chunk* %38, i64 0, i32 1
  %50 = load %struct.Chunk*, %struct.Chunk** %49, align 8
  %51 = icmp eq %struct.Chunk* %50, null
  br i1 %51, label %52, label %37

52:                                               ; preds = %37, %48
  %53 = phi %struct.Chunk* [ %38, %37 ], [ null, %48 ]
  %54 = getelementptr inbounds %struct.Chunk, %struct.Chunk* %53, i64 0, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds i8, i8* %14, i64 %55
  %57 = getelementptr inbounds i8, i8* %56, i64 8
  %58 = getelementptr inbounds %struct.WebPChunkIterator, %struct.WebPChunkIterator* %2, i64 0, i32 2, i32 0
  store i8* %57, i8** %58, align 8
  %59 = getelementptr inbounds %struct.Chunk, %struct.Chunk* %53, i64 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, -8
  %62 = getelementptr inbounds %struct.WebPChunkIterator, %struct.WebPChunkIterator* %2, i64 0, i32 2, i32 1
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %struct.WebPChunkIterator, %struct.WebPChunkIterator* %2, i64 0, i32 1
  store i32 %27, i32* %63, align 4
  %64 = getelementptr inbounds %struct.WebPChunkIterator, %struct.WebPChunkIterator* %2, i64 0, i32 0
  store i32 %35, i32* %64, align 8
  br label %65

65:                                               ; preds = %12, %33, %31, %3, %52
  %66 = phi i32 [ 1, %52 ], [ 0, %3 ], [ 0, %31 ], [ 0, %33 ], [ 0, %12 ]
  ret i32 %66
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @WebPDemuxNextChunk(%struct.WebPChunkIterator*) local_unnamed_addr #6 {
  %2 = icmp eq %struct.WebPChunkIterator* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.WebPChunkIterator, %struct.WebPChunkIterator* %0, i64 0, i32 2, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 -8
  %7 = getelementptr inbounds %struct.WebPChunkIterator, %struct.WebPChunkIterator* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, 1
  %10 = tail call fastcc i32 @SetChunk(i8* %6, i32 %9, %struct.WebPChunkIterator* nonnull %0)
  br label %11

11:                                               ; preds = %1, %3
  %12 = phi i32 [ %10, %3 ], [ 0, %1 ]
  ret i32 %12
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @WebPDemuxPrevChunk(%struct.WebPChunkIterator*) local_unnamed_addr #6 {
  %2 = icmp eq %struct.WebPChunkIterator* %0, null
  br i1 %2, label %13, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.WebPChunkIterator, %struct.WebPChunkIterator* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 1
  br i1 %6, label %7, label %13

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.WebPChunkIterator, %struct.WebPChunkIterator* %0, i64 0, i32 2, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 -8
  %11 = add nsw i32 %5, -1
  %12 = tail call fastcc i32 @SetChunk(i8* %10, i32 %11, %struct.WebPChunkIterator* nonnull %0)
  br label %13

13:                                               ; preds = %3, %1, %7
  %14 = phi i32 [ %12, %7 ], [ 0, %1 ], [ 0, %3 ]
  ret i32 %14
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @WebPDemuxReleaseChunkIterator(%struct.WebPChunkIterator* nocapture) local_unnamed_addr #0 {
  ret void
}

declare i32 @WebPGetFeaturesInternal(i8*, i64, %struct.WebPBitstreamFeatures*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal i32 @ParseSingleImage(%struct.WebPDemuxer*) #1 {
  %2 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 0
  %3 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 9
  %4 = load %struct.Frame*, %struct.Frame** %3, align 8
  %5 = icmp eq %struct.Frame* %4, null
  br i1 %5, label %6, label %82

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = icmp ugt i64 %11, 7
  br i1 %12, label %13, label %82

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %10
  %17 = icmp ult i64 %16, 8
  br i1 %17, label %82, label %18

18:                                               ; preds = %13
  %19 = tail call i8* @WebPSafeCalloc(i64 1, i64 80) #9
  %20 = icmp eq i8* %19, null
  br i1 %20, label %82, label %21

21:                                               ; preds = %18
  %22 = bitcast i8* %19 to %struct.Frame*
  %23 = tail call fastcc i32 @StoreFrame(i32 1, i32 0, %struct.MemBuffer* %2, %struct.Frame* nonnull %22)
  %24 = icmp eq i32 %23, 2
  br i1 %24, label %81, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 3
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 16
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %39

30:                                               ; preds = %25
  %31 = getelementptr inbounds i8, i8* %19, i64 64
  %32 = bitcast i8* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds i8, i8* %19, i64 56
  %37 = getelementptr inbounds i8, i8* %19, i64 16
  %38 = bitcast i8* %37 to i32*
  store i32 0, i32* %38, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false)
  br label %39

39:                                               ; preds = %30, %25, %35
  %40 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %66

43:                                               ; preds = %39
  %44 = getelementptr inbounds i8, i8* %19, i64 8
  %45 = bitcast i8* %44 to i32*
  %46 = load i32, i32* %45, align 8
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %48, label %66

48:                                               ; preds = %43
  %49 = getelementptr inbounds i8, i8* %19, i64 12
  %50 = bitcast i8* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %53, label %66

53:                                               ; preds = %48
  %54 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 1
  store i32 1, i32* %54, align 8
  %55 = load i32, i32* %45, align 8
  %56 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 4
  store i32 %55, i32* %56, align 4
  %57 = load i32, i32* %50, align 4
  %58 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 5
  store i32 %57, i32* %58, align 8
  %59 = getelementptr inbounds i8, i8* %19, i64 16
  %60 = bitcast i8* %59 to i32*
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, 0
  %63 = select i1 %62, i32 0, i32 16
  %64 = load i32, i32* %26, align 8
  %65 = or i32 %63, %64
  store i32 %65, i32* %26, align 8
  br label %66

66:                                               ; preds = %39, %53, %48, %43
  %67 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 10
  %68 = load %struct.Frame**, %struct.Frame*** %67, align 8
  %69 = load %struct.Frame*, %struct.Frame** %68, align 8
  %70 = icmp eq %struct.Frame* %69, null
  br i1 %70, label %75, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %struct.Frame, %struct.Frame* %69, i64 0, i32 9
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %81, label %75

75:                                               ; preds = %66, %71
  %76 = bitcast %struct.Frame** %68 to i8**
  store i8* %19, i8** %76, align 8
  %77 = getelementptr inbounds i8, i8* %19, i64 72
  %78 = bitcast i8* %77 to %struct.Frame**
  store %struct.Frame* null, %struct.Frame** %78, align 8
  %79 = bitcast %struct.Frame*** %67 to i8**
  store i8* %77, i8** %79, align 8
  %80 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 8
  store i32 1, i32* %80, align 4
  br label %82

81:                                               ; preds = %71, %21
  tail call void @WebPSafeFree(i8* nonnull %19) #9
  br label %82

82:                                               ; preds = %75, %81, %18, %13, %6, %1
  %83 = phi i32 [ 2, %1 ], [ 2, %6 ], [ 1, %13 ], [ 2, %18 ], [ %23, %75 ], [ 2, %81 ]
  ret i32 %83
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @IsValidSimpleFormat(%struct.WebPDemuxer* nocapture readonly) #4 {
  %2 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 9
  %3 = load %struct.Frame*, %struct.Frame** %2, align 8
  %4 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %28, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 4
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %28, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 5
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %13, 1
  br i1 %14, label %28, label %15

15:                                               ; preds = %11
  %16 = icmp eq i32 %5, 2
  %17 = icmp eq %struct.Frame* %3, null
  %18 = and i1 %17, %16
  br i1 %18, label %28, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.Frame, %struct.Frame* %3, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.Frame, %struct.Frame* %3, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = icmp sgt i32 %25, 0
  %27 = zext i1 %26 to i32
  ret i32 %27

28:                                               ; preds = %19, %15, %7, %11, %1
  %29 = phi i32 [ 1, %1 ], [ 0, %11 ], [ 0, %7 ], [ 0, %15 ], [ 0, %19 ]
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ParseVP8X(%struct.WebPDemuxer*) #1 {
  %2 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 0
  %3 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = icmp ult i64 %7, 8
  br i1 %8, label %417, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 2
  store i32 1, i32* %10, align 4
  %11 = add i64 %6, 4
  store i64 %11, i64* %5, align 8
  %12 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 0, i32 4
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %11
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = getelementptr inbounds i8, i8* %14, i64 1
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = shl nuw nsw i32 %19, 8
  %21 = or i32 %20, %16
  %22 = getelementptr inbounds i8, i8* %14, i64 2
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = getelementptr inbounds i8, i8* %14, i64 3
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = shl nuw nsw i32 %27, 8
  %29 = or i32 %28, %24
  %30 = shl nuw i32 %29, 16
  %31 = or i32 %21, %30
  %32 = add i64 %6, 8
  store i64 %32, i64* %5, align 8
  %33 = add i32 %31, -10
  %34 = icmp ugt i32 %33, -20
  br i1 %34, label %417, label %35

35:                                               ; preds = %9
  %36 = and i32 %16, 1
  %37 = add nuw i32 %31, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 0, i32 2
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %32
  %42 = icmp ult i64 %41, %38
  br i1 %42, label %417, label %43

43:                                               ; preds = %35
  %44 = sub i64 %4, %32
  %45 = icmp ult i64 %44, %38
  br i1 %45, label %417, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds i8, i8* %13, i64 %32
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 3
  store i32 %49, i32* %50, align 8
  %51 = add i64 %6, 12
  store i64 %51, i64* %5, align 8
  %52 = getelementptr inbounds i8, i8* %13, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = getelementptr inbounds i8, i8* %52, i64 1
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = shl nuw nsw i32 %57, 8
  %59 = or i32 %58, %54
  %60 = getelementptr inbounds i8, i8* %52, i64 2
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = shl nuw nsw i32 %62, 16
  %64 = or i32 %59, %63
  %65 = add i64 %6, 15
  store i64 %65, i64* %5, align 8
  %66 = add nuw nsw i32 %64, 1
  %67 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 4
  store i32 %66, i32* %67, align 4
  %68 = getelementptr inbounds i8, i8* %13, i64 %65
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = getelementptr inbounds i8, i8* %68, i64 1
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = shl nuw nsw i32 %73, 8
  %75 = or i32 %74, %70
  %76 = getelementptr inbounds i8, i8* %68, i64 2
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = shl nuw nsw i32 %78, 16
  %80 = or i32 %75, %79
  %81 = add i64 %6, 18
  store i64 %81, i64* %5, align 8
  %82 = add nuw nsw i32 %80, 1
  %83 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 5
  store i32 %82, i32* %83, align 8
  %84 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %66, i32 %82)
  %85 = extractvalue { i32, i1 } %84, 1
  br i1 %85, label %417, label %86

86:                                               ; preds = %46
  %87 = add i32 %37, -10
  %88 = zext i32 %87 to i64
  %89 = add i64 %81, %88
  store i64 %89, i64* %5, align 8
  %90 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 1
  store i32 1, i32* %90, align 8
  %91 = sub i64 %40, %89
  %92 = icmp ugt i64 %91, 7
  br i1 %92, label %93, label %417

93:                                               ; preds = %86
  %94 = sub i64 %4, %89
  %95 = icmp ult i64 %94, 8
  br i1 %95, label %417, label %96

96:                                               ; preds = %93
  %97 = and i32 %49, 2
  %98 = icmp ne i32 %97, 0
  %99 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 8
  %100 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 10
  %101 = bitcast %struct.Frame*** %100 to i8**
  %102 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 7
  %103 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 6
  %104 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 12
  %105 = bitcast %struct.Chunk*** %104 to i8***
  %106 = bitcast %struct.Chunk*** %104 to i8**
  br label %107

107:                                              ; preds = %415, %96
  %108 = phi i64 [ %4, %96 ], [ %410, %415 ]
  %109 = phi i64 [ %40, %96 ], [ %407, %415 ]
  %110 = phi i8* [ %13, %96 ], [ %416, %415 ]
  %111 = phi i64 [ %89, %96 ], [ %406, %415 ]
  %112 = phi i32 [ 0, %96 ], [ %404, %415 ]
  %113 = getelementptr inbounds i8, i8* %110, i64 %111
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds i8, i8* %113, i64 1
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i32
  %119 = shl nuw nsw i32 %118, 8
  %120 = or i32 %119, %115
  %121 = getelementptr inbounds i8, i8* %113, i64 2
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i32
  %124 = getelementptr inbounds i8, i8* %113, i64 3
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = shl nuw nsw i32 %126, 8
  %128 = or i32 %127, %123
  %129 = shl nuw i32 %128, 16
  %130 = or i32 %120, %129
  %131 = add i64 %111, 4
  store i64 %131, i64* %5, align 8
  %132 = getelementptr inbounds i8, i8* %110, i64 %131
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i32
  %135 = getelementptr inbounds i8, i8* %132, i64 1
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i32
  %138 = shl nuw nsw i32 %137, 8
  %139 = or i32 %138, %134
  %140 = getelementptr inbounds i8, i8* %132, i64 2
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i32
  %143 = getelementptr inbounds i8, i8* %132, i64 3
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i32
  %146 = shl nuw nsw i32 %145, 8
  %147 = or i32 %146, %142
  %148 = shl nuw i32 %147, 16
  %149 = or i32 %139, %148
  %150 = add i64 %111, 8
  store i64 %150, i64* %5, align 8
  %151 = and i32 %134, 1
  %152 = add i32 %149, %151
  %153 = icmp ugt i32 %149, -10
  br i1 %153, label %417, label %154

154:                                              ; preds = %107
  %155 = zext i32 %152 to i64
  %156 = sub i64 %109, %150
  %157 = icmp ult i64 %156, %155
  br i1 %157, label %417, label %158

158:                                              ; preds = %154
  switch i32 %130, label %381 [
    i32 1480085590, label %417
    i32 1213221953, label %159
    i32 540561494, label %159
    i32 1278758998, label %159
    i32 1296649793, label %164
    i32 1179471425, label %203
    i32 1346585417, label %369
    i32 1179211845, label %373
    i32 542133592, label %377
  ]

159:                                              ; preds = %158, %158, %158
  %160 = icmp sgt i32 %112, 0
  %161 = or i1 %98, %160
  br i1 %161, label %417, label %162

162:                                              ; preds = %159
  store i64 %111, i64* %5, align 8
  %163 = tail call i32 @ParseSingleImage(%struct.WebPDemuxer* %0) #9
  br label %403

164:                                              ; preds = %158
  %165 = icmp ult i32 %152, 6
  br i1 %165, label %417, label %166

166:                                              ; preds = %164
  %167 = sub i64 %108, %150
  %168 = icmp ult i64 %167, %155
  br i1 %168, label %403, label %169

169:                                              ; preds = %166
  %170 = icmp eq i32 %112, 0
  br i1 %170, label %171, label %381

171:                                              ; preds = %169
  %172 = getelementptr inbounds i8, i8* %110, i64 %150
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i32
  %175 = getelementptr inbounds i8, i8* %172, i64 1
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i32
  %178 = shl nuw nsw i32 %177, 8
  %179 = or i32 %178, %174
  %180 = getelementptr inbounds i8, i8* %172, i64 2
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i32
  %183 = getelementptr inbounds i8, i8* %172, i64 3
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i32
  %186 = shl nuw nsw i32 %185, 8
  %187 = or i32 %186, %182
  %188 = shl nuw i32 %187, 16
  %189 = or i32 %179, %188
  %190 = add i64 %111, 12
  store i64 %190, i64* %5, align 8
  store i32 %189, i32* %102, align 8
  %191 = getelementptr inbounds i8, i8* %110, i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = getelementptr inbounds i8, i8* %191, i64 1
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i32
  %197 = shl nuw nsw i32 %196, 8
  %198 = or i32 %197, %193
  %199 = add i64 %111, 14
  store i32 %198, i32* %103, align 4
  %200 = add i32 %152, -6
  %201 = zext i32 %200 to i64
  %202 = add i64 %199, %201
  store i64 %202, i64* %5, align 8
  br label %403

203:                                              ; preds = %158
  %204 = icmp eq i32 %112, 0
  br i1 %204, label %417, label %205

205:                                              ; preds = %203
  %206 = load i32, i32* %50, align 8
  %207 = and i32 %206, 2
  %208 = icmp ne i32 %207, 0
  %209 = add i32 %152, -16
  %210 = icmp ult i64 %156, 16
  %211 = icmp ult i32 %152, 16
  %212 = or i1 %211, %210
  br i1 %212, label %403, label %213

213:                                              ; preds = %205
  %214 = sub i64 %108, %150
  %215 = icmp ult i64 %214, 16
  br i1 %215, label %403, label %216

216:                                              ; preds = %213
  %217 = tail call i8* @WebPSafeCalloc(i64 1, i64 80) #9
  %218 = bitcast i8* %217 to %struct.Frame*
  %219 = icmp eq i8* %217, null
  br i1 %219, label %403, label %220

220:                                              ; preds = %216
  %221 = load i8*, i8** %12, align 8
  %222 = load i64, i64* %5, align 8
  %223 = getelementptr inbounds i8, i8* %221, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i32
  %226 = getelementptr inbounds i8, i8* %223, i64 1
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i32
  %229 = shl nuw nsw i32 %228, 8
  %230 = or i32 %229, %225
  %231 = getelementptr inbounds i8, i8* %223, i64 2
  %232 = load i8, i8* %231, align 1
  %233 = zext i8 %232 to i32
  %234 = shl nuw nsw i32 %233, 16
  %235 = or i32 %230, %234
  %236 = add i64 %222, 3
  store i64 %236, i64* %5, align 8
  %237 = shl nuw nsw i32 %235, 1
  %238 = bitcast i8* %217 to i32*
  store i32 %237, i32* %238, align 8
  %239 = load i8*, i8** %12, align 8
  %240 = load i64, i64* %5, align 8
  %241 = getelementptr inbounds i8, i8* %239, i64 %240
  %242 = load i8, i8* %241, align 1
  %243 = zext i8 %242 to i32
  %244 = getelementptr inbounds i8, i8* %241, i64 1
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i32
  %247 = shl nuw nsw i32 %246, 8
  %248 = or i32 %247, %243
  %249 = getelementptr inbounds i8, i8* %241, i64 2
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i32
  %252 = shl nuw nsw i32 %251, 16
  %253 = or i32 %248, %252
  %254 = add i64 %240, 3
  store i64 %254, i64* %5, align 8
  %255 = shl nuw nsw i32 %253, 1
  %256 = getelementptr inbounds i8, i8* %217, i64 4
  %257 = bitcast i8* %256 to i32*
  store i32 %255, i32* %257, align 4
  %258 = load i8*, i8** %12, align 8
  %259 = load i64, i64* %5, align 8
  %260 = getelementptr inbounds i8, i8* %258, i64 %259
  %261 = load i8, i8* %260, align 1
  %262 = zext i8 %261 to i32
  %263 = getelementptr inbounds i8, i8* %260, i64 1
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i32
  %266 = shl nuw nsw i32 %265, 8
  %267 = or i32 %266, %262
  %268 = getelementptr inbounds i8, i8* %260, i64 2
  %269 = load i8, i8* %268, align 1
  %270 = zext i8 %269 to i32
  %271 = shl nuw nsw i32 %270, 16
  %272 = or i32 %267, %271
  %273 = add i64 %259, 3
  store i64 %273, i64* %5, align 8
  %274 = add nuw nsw i32 %272, 1
  %275 = getelementptr inbounds i8, i8* %217, i64 8
  %276 = bitcast i8* %275 to i32*
  store i32 %274, i32* %276, align 8
  %277 = load i8*, i8** %12, align 8
  %278 = load i64, i64* %5, align 8
  %279 = getelementptr inbounds i8, i8* %277, i64 %278
  %280 = load i8, i8* %279, align 1
  %281 = zext i8 %280 to i32
  %282 = getelementptr inbounds i8, i8* %279, i64 1
  %283 = load i8, i8* %282, align 1
  %284 = zext i8 %283 to i32
  %285 = shl nuw nsw i32 %284, 8
  %286 = or i32 %285, %281
  %287 = getelementptr inbounds i8, i8* %279, i64 2
  %288 = load i8, i8* %287, align 1
  %289 = zext i8 %288 to i32
  %290 = shl nuw nsw i32 %289, 16
  %291 = or i32 %286, %290
  %292 = add i64 %278, 3
  store i64 %292, i64* %5, align 8
  %293 = add nuw nsw i32 %291, 1
  %294 = getelementptr inbounds i8, i8* %217, i64 12
  %295 = bitcast i8* %294 to i32*
  store i32 %293, i32* %295, align 4
  %296 = load i8*, i8** %12, align 8
  %297 = load i64, i64* %5, align 8
  %298 = getelementptr inbounds i8, i8* %296, i64 %297
  %299 = load i8, i8* %298, align 1
  %300 = zext i8 %299 to i32
  %301 = getelementptr inbounds i8, i8* %298, i64 1
  %302 = load i8, i8* %301, align 1
  %303 = zext i8 %302 to i32
  %304 = shl nuw nsw i32 %303, 8
  %305 = or i32 %304, %300
  %306 = getelementptr inbounds i8, i8* %298, i64 2
  %307 = load i8, i8* %306, align 1
  %308 = zext i8 %307 to i32
  %309 = shl nuw nsw i32 %308, 16
  %310 = or i32 %305, %309
  %311 = add i64 %297, 3
  store i64 %311, i64* %5, align 8
  %312 = getelementptr inbounds i8, i8* %217, i64 20
  %313 = bitcast i8* %312 to i32*
  store i32 %310, i32* %313, align 4
  %314 = load i8*, i8** %12, align 8
  %315 = load i64, i64* %5, align 8
  %316 = getelementptr inbounds i8, i8* %314, i64 %315
  %317 = load i8, i8* %316, align 1
  %318 = add i64 %315, 1
  store i64 %318, i64* %5, align 8
  %319 = zext i8 %317 to i32
  %320 = and i32 %319, 1
  %321 = getelementptr inbounds i8, i8* %217, i64 24
  %322 = bitcast i8* %321 to i32*
  store i32 %320, i32* %322, align 8
  %323 = lshr i32 %319, 1
  %324 = and i32 %323, 1
  %325 = getelementptr inbounds i8, i8* %217, i64 28
  %326 = bitcast i8* %325 to i32*
  store i32 %324, i32* %326, align 4
  %327 = load i32, i32* %276, align 8
  %328 = sext i32 %327 to i64
  %329 = load i32, i32* %295, align 4
  %330 = sext i32 %329 to i64
  %331 = mul nsw i64 %330, %328
  %332 = icmp ugt i64 %331, 4294967295
  br i1 %332, label %333, label %334

333:                                              ; preds = %220
  tail call void @WebPSafeFree(i8* nonnull %217) #9
  br label %403

334:                                              ; preds = %220
  %335 = load i64, i64* %5, align 8
  %336 = load i32, i32* %99, align 4
  %337 = add nsw i32 %336, 1
  %338 = tail call fastcc i32 @StoreFrame(i32 %337, i32 %209, %struct.MemBuffer* %2, %struct.Frame* nonnull %218) #9
  %339 = icmp eq i32 %338, 2
  br i1 %339, label %367, label %340

340:                                              ; preds = %334
  %341 = load i64, i64* %5, align 8
  %342 = sub i64 %341, %335
  %343 = zext i32 %209 to i64
  %344 = icmp ugt i64 %342, %343
  %345 = select i1 %344, i32 2, i32 %338
  %346 = icmp ne i32 %345, 2
  %347 = and i1 %208, %346
  br i1 %347, label %348, label %367

348:                                              ; preds = %340
  %349 = getelementptr inbounds i8, i8* %217, i64 32
  %350 = bitcast i8* %349 to i32*
  %351 = load i32, i32* %350, align 8
  %352 = icmp sgt i32 %351, 0
  br i1 %352, label %353, label %367

353:                                              ; preds = %348
  %354 = load %struct.Frame**, %struct.Frame*** %100, align 8
  %355 = load %struct.Frame*, %struct.Frame** %354, align 8
  %356 = icmp eq %struct.Frame* %355, null
  br i1 %356, label %361, label %357

357:                                              ; preds = %353
  %358 = getelementptr inbounds %struct.Frame, %struct.Frame* %355, i64 0, i32 9
  %359 = load i32, i32* %358, align 4
  %360 = icmp eq i32 %359, 0
  br i1 %360, label %367, label %361

361:                                              ; preds = %357, %353
  %362 = bitcast %struct.Frame** %354 to i8**
  store i8* %217, i8** %362, align 8
  %363 = getelementptr inbounds i8, i8* %217, i64 72
  %364 = bitcast i8* %363 to %struct.Frame**
  store %struct.Frame* null, %struct.Frame** %364, align 8
  store i8* %363, i8** %101, align 8
  %365 = load i32, i32* %99, align 4
  %366 = add nsw i32 %365, 1
  store i32 %366, i32* %99, align 4
  br label %403

367:                                              ; preds = %357, %348, %340, %334
  %368 = phi i32 [ %345, %340 ], [ %345, %348 ], [ 2, %334 ], [ 2, %357 ]
  tail call void @WebPSafeFree(i8* nonnull %217) #9
  br label %403

369:                                              ; preds = %158
  %370 = load i32, i32* %50, align 8
  %371 = lshr i32 %370, 5
  %372 = and i32 %371, 1
  br label %381

373:                                              ; preds = %158
  %374 = load i32, i32* %50, align 8
  %375 = lshr i32 %374, 3
  %376 = and i32 %375, 1
  br label %381

377:                                              ; preds = %158
  %378 = load i32, i32* %50, align 8
  %379 = lshr i32 %378, 2
  %380 = and i32 %379, 1
  br label %381

381:                                              ; preds = %377, %373, %369, %169, %158
  %382 = phi i32 [ 1, %158 ], [ %380, %377 ], [ %376, %373 ], [ %372, %369 ], [ 0, %169 ]
  %383 = sub i64 %108, %150
  %384 = icmp ult i64 %383, %155
  br i1 %384, label %403, label %385

385:                                              ; preds = %381
  %386 = icmp eq i32 %382, 0
  br i1 %386, label %400, label %387

387:                                              ; preds = %385
  %388 = tail call i8* @WebPSafeCalloc(i64 1, i64 24) #9
  %389 = icmp eq i8* %388, null
  br i1 %389, label %417, label %390

390:                                              ; preds = %387
  %391 = add nuw i32 %149, 8
  %392 = bitcast i8* %388 to i64*
  store i64 %111, i64* %392, align 8
  %393 = zext i32 %391 to i64
  %394 = getelementptr inbounds i8, i8* %388, i64 8
  %395 = bitcast i8* %394 to i64*
  store i64 %393, i64* %395, align 8
  %396 = load i8**, i8*** %105, align 8
  store i8* %388, i8** %396, align 8
  %397 = getelementptr inbounds i8, i8* %388, i64 16
  %398 = bitcast i8* %397 to %struct.Chunk**
  store %struct.Chunk* null, %struct.Chunk** %398, align 8
  store i8* %397, i8** %106, align 8
  %399 = load i64, i64* %5, align 8
  br label %400

400:                                              ; preds = %390, %385
  %401 = phi i64 [ %399, %390 ], [ %150, %385 ]
  %402 = add i64 %401, %155
  store i64 %402, i64* %5, align 8
  br label %403

403:                                              ; preds = %400, %381, %367, %361, %333, %216, %213, %205, %171, %166, %162
  %404 = phi i32 [ %112, %400 ], [ 1, %171 ], [ %112, %162 ], [ %112, %166 ], [ %112, %381 ], [ %112, %205 ], [ %112, %213 ], [ %112, %216 ], [ %112, %333 ], [ %112, %361 ], [ %112, %367 ]
  %405 = phi i32 [ 0, %400 ], [ 0, %171 ], [ %163, %162 ], [ 1, %166 ], [ 1, %381 ], [ 2, %205 ], [ 1, %213 ], [ 2, %216 ], [ 2, %333 ], [ %345, %361 ], [ %368, %367 ]
  %406 = load i64, i64* %5, align 8
  %407 = load i64, i64* %39, align 8
  %408 = icmp eq i64 %406, %407
  br i1 %408, label %417, label %409

409:                                              ; preds = %403
  %410 = load i64, i64* %3, align 8
  %411 = sub i64 %410, %406
  %412 = icmp ult i64 %411, 8
  %413 = select i1 %412, i32 1, i32 %405
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %415, label %417

415:                                              ; preds = %409
  %416 = load i8*, i8** %12, align 8
  br label %107

417:                                              ; preds = %409, %403, %387, %203, %164, %159, %158, %154, %107, %35, %93, %86, %46, %43, %9, %1
  %418 = phi i32 [ 1, %1 ], [ 2, %9 ], [ 2, %35 ], [ 1, %43 ], [ 2, %46 ], [ 2, %86 ], [ 1, %93 ], [ 2, %387 ], [ 2, %203 ], [ 2, %164 ], [ 2, %159 ], [ 2, %158 ], [ 2, %154 ], [ 2, %107 ], [ %405, %403 ], [ %413, %409 ]
  ret i32 %418
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @IsValidExtendedFormat(%struct.WebPDemuxer* nocapture readonly) #4 {
  %2 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 2
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 9
  %7 = load %struct.Frame*, %struct.Frame** %6, align 8
  %8 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %130, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 4
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %13, 1
  br i1 %14, label %130, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 5
  %17 = load i32, i32* %16, align 8
  %18 = icmp slt i32 %17, 1
  br i1 %18, label %130, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.WebPDemuxer, %struct.WebPDemuxer* %0, i64 0, i32 6
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %130, label %23

23:                                               ; preds = %19
  %24 = icmp eq i32 %9, 2
  %25 = icmp eq %struct.Frame* %7, null
  %26 = and i1 %25, %24
  %27 = and i32 %3, -63
  %28 = icmp ne i32 %27, 0
  %29 = or i1 %26, %28
  %30 = or i1 %25, %28
  %31 = xor i1 %29, true
  %32 = zext i1 %31 to i32
  br i1 %30, label %130, label %33

33:                                               ; preds = %126, %23
  %34 = phi %struct.Frame* [ %7, %23 ], [ %124, %126 ]
  %35 = getelementptr inbounds %struct.Frame, %struct.Frame* %34, i64 0, i32 8
  %36 = load i32, i32* %35, align 8
  %37 = icmp sgt i32 %36, 1
  %38 = and i1 %5, %37
  br label %39

39:                                               ; preds = %33, %126
  %40 = phi %struct.Frame* [ %34, %33 ], [ %124, %126 ]
  %41 = getelementptr inbounds %struct.Frame, %struct.Frame* %40, i64 0, i32 10, i64 0
  %42 = getelementptr inbounds %struct.Frame, %struct.Frame* %40, i64 0, i32 10, i64 1
  br i1 %38, label %130, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.Frame, %struct.Frame* %40, i64 0, i32 9
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.Frame, %struct.Frame* %40, i64 0, i32 10, i64 1, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %55

51:                                               ; preds = %47
  %52 = getelementptr inbounds %struct.Frame, %struct.Frame* %40, i64 0, i32 10, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %130, label %61

55:                                               ; preds = %47
  %56 = getelementptr inbounds %struct.ChunkData, %struct.ChunkData* %42, i64 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %struct.ChunkData, %struct.ChunkData* %41, i64 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = icmp ugt i64 %57, %59
  br i1 %60, label %130, label %61

61:                                               ; preds = %51, %55
  %62 = getelementptr inbounds %struct.Frame, %struct.Frame* %40, i64 0, i32 2
  %63 = load i32, i32* %62, align 8
  %64 = icmp slt i32 %63, 1
  br i1 %64, label %130, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.Frame, %struct.Frame* %40, i64 0, i32 3
  %67 = load i32, i32* %66, align 4
  %68 = icmp slt i32 %67, 1
  br i1 %68, label %130, label %92

69:                                               ; preds = %43
  br i1 %24, label %130, label %70

70:                                               ; preds = %69
  %71 = getelementptr inbounds %struct.Frame, %struct.Frame* %40, i64 0, i32 10, i64 1, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %84, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %struct.Frame, %struct.Frame* %40, i64 0, i32 10, i64 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %84, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %struct.ChunkData, %struct.ChunkData* %42, i64 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %struct.ChunkData, %struct.ChunkData* %41, i64 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = icmp ugt i64 %80, %82
  br i1 %83, label %130, label %84

84:                                               ; preds = %74, %70, %78
  %85 = getelementptr inbounds %struct.Frame, %struct.Frame* %40, i64 0, i32 11
  %86 = load %struct.Frame*, %struct.Frame** %85, align 8
  %87 = icmp eq %struct.Frame* %86, null
  br i1 %87, label %88, label %130

88:                                               ; preds = %84
  %89 = getelementptr inbounds %struct.Frame, %struct.Frame* %40, i64 0, i32 2
  %90 = load i32, i32* %89, align 8
  %91 = icmp sgt i32 %90, 0
  br i1 %91, label %92, label %122

92:                                               ; preds = %65, %88
  %93 = phi i32 [ %90, %88 ], [ %63, %65 ]
  %94 = getelementptr inbounds %struct.Frame, %struct.Frame* %40, i64 0, i32 3
  %95 = load i32, i32* %94, align 4
  %96 = icmp sgt i32 %95, 0
  br i1 %96, label %97, label %122

97:                                               ; preds = %92
  %98 = getelementptr inbounds %struct.Frame, %struct.Frame* %40, i64 0, i32 0
  %99 = load i32, i32* %98, align 8
  br i1 %5, label %100, label %110

100:                                              ; preds = %97
  %101 = icmp eq i32 %99, 0
  br i1 %101, label %102, label %130

102:                                              ; preds = %100
  %103 = getelementptr inbounds %struct.Frame, %struct.Frame* %40, i64 0, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  %106 = icmp eq i32 %93, %13
  %107 = and i1 %106, %105
  %108 = icmp eq i32 %95, %17
  %109 = and i1 %108, %107
  br i1 %109, label %122, label %130

110:                                              ; preds = %97
  %111 = icmp slt i32 %99, 0
  br i1 %111, label %130, label %112

112:                                              ; preds = %110
  %113 = getelementptr inbounds %struct.Frame, %struct.Frame* %40, i64 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = icmp slt i32 %114, 0
  %116 = add nuw nsw i32 %99, %93
  %117 = icmp sgt i32 %116, %13
  %118 = or i1 %117, %115
  %119 = add nuw nsw i32 %114, %95
  %120 = icmp sgt i32 %119, %17
  %121 = or i1 %118, %120
  br i1 %121, label %130, label %122

122:                                              ; preds = %112, %102, %92, %88
  %123 = getelementptr inbounds %struct.Frame, %struct.Frame* %40, i64 0, i32 11
  %124 = load %struct.Frame*, %struct.Frame** %123, align 8
  %125 = icmp eq %struct.Frame* %124, null
  br i1 %125, label %130, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %struct.Frame, %struct.Frame* %124, i64 0, i32 8
  %128 = load i32, i32* %127, align 8
  %129 = icmp eq i32 %128, %36
  br i1 %129, label %39, label %33

130:                                              ; preds = %122, %39, %51, %55, %65, %61, %69, %78, %84, %102, %100, %112, %110, %23, %19, %11, %15, %1
  %131 = phi i32 [ 1, %1 ], [ 0, %15 ], [ 0, %11 ], [ 0, %19 ], [ %32, %23 ], [ 1, %122 ], [ 0, %39 ], [ 0, %51 ], [ 0, %55 ], [ 0, %65 ], [ 0, %61 ], [ 0, %69 ], [ 0, %78 ], [ 0, %84 ], [ 0, %102 ], [ 0, %100 ], [ 0, %112 ], [ 0, %110 ]
  ret i32 %131
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @StoreFrame(i32, i32, %struct.MemBuffer*, %struct.Frame* nocapture) unnamed_addr #1 {
  %5 = alloca %struct.WebPBitstreamFeatures, align 4
  %6 = getelementptr inbounds %struct.MemBuffer, %struct.MemBuffer* %2, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.MemBuffer, %struct.MemBuffer* %2, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = icmp ult i64 %10, 8
  %12 = zext i32 %1 to i64
  %13 = icmp ult i64 %10, %12
  %14 = or i1 %11, %13
  br i1 %14, label %139, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.MemBuffer, %struct.MemBuffer* %2, i64 0, i32 4
  %17 = getelementptr inbounds %struct.MemBuffer, %struct.MemBuffer* %2, i64 0, i32 2
  %18 = bitcast %struct.WebPBitstreamFeatures* %5 to i8*
  %19 = getelementptr inbounds %struct.Frame, %struct.Frame* %3, i64 0, i32 10, i64 0, i32 0
  %20 = getelementptr inbounds %struct.Frame, %struct.Frame* %3, i64 0, i32 10, i64 0, i32 1
  %21 = getelementptr inbounds %struct.WebPBitstreamFeatures, %struct.WebPBitstreamFeatures* %5, i64 0, i32 0
  %22 = getelementptr inbounds %struct.Frame, %struct.Frame* %3, i64 0, i32 2
  %23 = getelementptr inbounds %struct.WebPBitstreamFeatures, %struct.WebPBitstreamFeatures* %5, i64 0, i32 1
  %24 = getelementptr inbounds %struct.Frame, %struct.Frame* %3, i64 0, i32 3
  %25 = getelementptr inbounds %struct.WebPBitstreamFeatures, %struct.WebPBitstreamFeatures* %5, i64 0, i32 2
  %26 = getelementptr inbounds %struct.Frame, %struct.Frame* %3, i64 0, i32 4
  %27 = getelementptr inbounds %struct.Frame, %struct.Frame* %3, i64 0, i32 8
  %28 = getelementptr inbounds %struct.Frame, %struct.Frame* %3, i64 0, i32 9
  %29 = getelementptr inbounds %struct.Frame, %struct.Frame* %3, i64 0, i32 10, i64 1, i32 0
  %30 = getelementptr inbounds %struct.Frame, %struct.Frame* %3, i64 0, i32 10, i64 1, i32 1
  br label %31

31:                                               ; preds = %137, %15
  %32 = phi i64 [ %138, %137 ], [ %7, %15 ]
  %33 = phi i64 [ %121, %137 ], [ %9, %15 ]
  %34 = phi i32 [ %122, %137 ], [ 0, %15 ]
  %35 = phi i32 [ %123, %137 ], [ 0, %15 ]
  %36 = phi i32 [ %133, %137 ], [ 0, %15 ]
  %37 = phi i32 [ %134, %137 ], [ 0, %15 ]
  %38 = load i8*, i8** %16, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 %33
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = getelementptr inbounds i8, i8* %39, i64 1
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = shl nuw nsw i32 %44, 8
  %46 = or i32 %45, %41
  %47 = getelementptr inbounds i8, i8* %39, i64 2
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = getelementptr inbounds i8, i8* %39, i64 3
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = shl nuw nsw i32 %52, 8
  %54 = or i32 %53, %49
  %55 = shl nuw i32 %54, 16
  %56 = or i32 %46, %55
  %57 = add i64 %33, 4
  store i64 %57, i64* %8, align 8
  %58 = getelementptr inbounds i8, i8* %38, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = getelementptr inbounds i8, i8* %58, i64 1
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = shl nuw nsw i32 %63, 8
  %65 = or i32 %64, %60
  %66 = getelementptr inbounds i8, i8* %58, i64 2
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = getelementptr inbounds i8, i8* %58, i64 3
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = shl nuw nsw i32 %71, 8
  %73 = or i32 %72, %68
  %74 = shl nuw i32 %73, 16
  %75 = or i32 %65, %74
  %76 = add i64 %33, 8
  store i64 %76, i64* %8, align 8
  %77 = and i32 %60, 1
  %78 = add i32 %75, %77
  %79 = zext i32 %78 to i64
  %80 = sub i64 %32, %76
  %81 = icmp ult i64 %80, %79
  %82 = select i1 %81, i64 %80, i64 %79
  %83 = add nuw nsw i64 %82, 8
  %84 = icmp ugt i32 %75, -10
  br i1 %84, label %139, label %85

85:                                               ; preds = %31
  %86 = load i64, i64* %17, align 8
  %87 = sub i64 %86, %76
  %88 = icmp ult i64 %87, %79
  br i1 %88, label %139, label %89

89:                                               ; preds = %85
  %90 = select i1 %81, i32 1, i32 %37
  switch i32 %56, label %119 [
    i32 1213221953, label %91
    i32 1278758998, label %96
    i32 540561494, label %98
  ]

91:                                               ; preds = %89
  %92 = icmp eq i32 %34, 0
  br i1 %92, label %93, label %119

93:                                               ; preds = %91
  store i64 %33, i64* %29, align 8
  store i64 %83, i64* %30, align 8
  store i32 1, i32* %26, align 8
  store i32 %0, i32* %27, align 8
  %94 = load i64, i64* %8, align 8
  %95 = add i64 %94, %82
  store i64 %95, i64* %8, align 8
  br label %120

96:                                               ; preds = %89
  %97 = icmp sgt i32 %34, 0
  br i1 %97, label %139, label %98

98:                                               ; preds = %96, %89
  %99 = icmp eq i32 %35, 0
  br i1 %99, label %100, label %119

100:                                              ; preds = %98
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %18, i8 -86, i64 40, i1 false)
  %101 = call i32 @WebPGetFeaturesInternal(i8* %39, i64 %83, %struct.WebPBitstreamFeatures* nonnull %5, i32 521) #9
  %102 = icmp eq i32 %90, 1
  %103 = icmp eq i32 %101, 7
  %104 = and i1 %102, %103
  br i1 %104, label %107, label %105

105:                                              ; preds = %100
  %106 = icmp eq i32 %101, 0
  br i1 %106, label %109, label %107

107:                                              ; preds = %100, %105
  %108 = phi i32 [ 2, %105 ], [ 1, %100 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #9
  br label %139

109:                                              ; preds = %105
  %110 = icmp eq i32 %90, 0
  %111 = zext i1 %110 to i32
  store i64 %33, i64* %19, align 8
  store i64 %83, i64* %20, align 8
  %112 = load i32, i32* %21, align 4
  store i32 %112, i32* %22, align 8
  %113 = load i32, i32* %23, align 4
  store i32 %113, i32* %24, align 4
  %114 = load i32, i32* %25, align 4
  %115 = load i32, i32* %26, align 8
  %116 = or i32 %115, %114
  store i32 %116, i32* %26, align 8
  store i32 %0, i32* %27, align 8
  store i32 %111, i32* %28, align 4
  %117 = load i64, i64* %8, align 8
  %118 = add i64 %117, %82
  store i64 %118, i64* %8, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #9
  br label %120

119:                                              ; preds = %91, %98, %89
  store i64 %33, i64* %8, align 8
  br label %120

120:                                              ; preds = %109, %119, %93
  %121 = phi i64 [ %33, %119 ], [ %118, %109 ], [ %95, %93 ]
  %122 = phi i32 [ %34, %119 ], [ %34, %109 ], [ 1, %93 ]
  %123 = phi i32 [ %35, %119 ], [ 1, %109 ], [ %35, %93 ]
  %124 = phi i32 [ 1, %119 ], [ %36, %109 ], [ %36, %93 ]
  %125 = load i64, i64* %17, align 8
  %126 = icmp eq i64 %121, %125
  br i1 %126, label %132, label %127

127:                                              ; preds = %120
  %128 = load i64, i64* %6, align 8
  %129 = sub i64 %128, %121
  %130 = icmp ult i64 %129, 8
  %131 = select i1 %130, i32 1, i32 %90
  br label %132

132:                                              ; preds = %120, %127
  %133 = phi i32 [ 1, %120 ], [ %124, %127 ]
  %134 = phi i32 [ %90, %120 ], [ %131, %127 ]
  %135 = or i32 %134, %133
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %132
  %138 = load i64, i64* %6, align 8
  br label %31

139:                                              ; preds = %85, %96, %31, %132, %107, %4
  %140 = phi i32 [ 1, %4 ], [ %108, %107 ], [ 2, %31 ], [ 2, %85 ], [ 2, %96 ], [ %134, %132 ]
  ret i32 %140
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #8

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
