; ModuleID = '../../third_party/skia/src/gpu/GrPersistentCacheUtils.cpp'
source_filename = "../../third_party/skia/src/gpu/GrPersistentCacheUtils.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.SkSL::Program::Inputs" = type { i8, i8 }
%"struct.GrPersistentCacheUtils::ShaderMetadata" = type { %"struct.SkSL::ProgramSettings"*, %class.SkTArray, i8, i8, %class.sk_sp }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector"* }
%"class.std::__1::vector" = type opaque
%class.SkTArray = type { %"class.SkSL::String"*, i64 }
%class.SkBinaryWriteBuffer = type { %class.SkWriteBuffer, %class.sk_sp.13, %class.sk_sp.14, %class.SkWriter32, %class.SkTHashMap }
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp*, %class.SkTypeface*, i8*)*, i8* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.2", [7 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.6, i32, i32 }
%class.sk_sp.6 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.7, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.7 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.8" }
%"struct.std::__1::atomic.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.sk_sp.13 = type { %class.SkFactorySet* }
%class.SkFactorySet = type opaque
%class.sk_sp.14 = type { %class.SkRefCntSet* }
%class.SkRefCntSet = type opaque
%class.SkWriter32 = type { i8*, i64, i64, i8*, %class.SkAutoTMalloc }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i8* }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.18" }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap.22, i32, [4 x i8], %class.sk_sp.31*, i32, [4 x i8], void (%class.sk_sp.32*, %class.SkReadBuffer*)**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap.22 = type { %class.SkTHashTable.23 }
%class.SkTHashTable.23 = type { i32, i32, %class.SkAutoTArray.24 }
%class.SkAutoTArray.24 = type { %"class.std::__1::unique_ptr.25" }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.32*, %class.SkReadBuffer*)* }
%class.sk_sp.32 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.31 = type { %class.SkTypeface* }
%struct.SkDeserialProcs = type { void (%class.sk_sp.33*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.34*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.31*, i8*, i64, i8*)*, i8* }
%class.sk_sp.33 = type { %class.SkPicture* }
%class.sk_sp.34 = type { %class.SkImage* }

$_ZN8SkTArrayIN4SkSL6StringELb0EE11resize_backEi = comdat any

$_ZN8SkTArrayIN4SkSL6StringELb0EE12checkReallocEiNS2_11ReallocTypeE = comdat any

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN22GrPersistentCacheUtils17GetCurrentVersionEv() local_unnamed_addr #0 {
  ret i32 5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22GrPersistentCacheUtils17PackCachedShadersEjPKN4SkSL6StringEPKNS0_7Program6InputsEiPKNS_14ShaderMetadataE(%class.sk_sp* noalias sret, i32, %"class.SkSL::String"*, %"struct.SkSL::Program::Inputs"* nocapture readonly, i32, %"struct.GrPersistentCacheUtils::ShaderMetadata"*) local_unnamed_addr #1 {
  %7 = alloca %class.SkBinaryWriteBuffer, align 8
  %8 = bitcast %class.SkBinaryWriteBuffer* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %8) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 128, i1 false)
  call void @_ZN19SkBinaryWriteBufferC1Ev(%class.SkBinaryWriteBuffer* nonnull %7) #7
  call void @_ZN19SkBinaryWriteBuffer8writeIntEi(%class.SkBinaryWriteBuffer* nonnull %7, i32 5) #7
  call void @_ZN19SkBinaryWriteBuffer9writeUIntEj(%class.SkBinaryWriteBuffer* nonnull %7, i32 %1) #7
  %9 = add nsw i32 %4, -1
  %10 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %7, i64 0, i32 3
  %11 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %7, i64 0, i32 3, i32 2
  %12 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %7, i64 0, i32 3, i32 1
  %13 = getelementptr inbounds %class.SkWriter32, %class.SkWriter32* %10, i64 0, i32 0
  %14 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %23

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  br label %26

23:                                               ; preds = %6
  %24 = bitcast %"class.SkSL::String"* %2 to i8*
  %25 = zext i8 %16 to i64
  br label %26

26:                                               ; preds = %18, %23
  %27 = phi i8* [ %20, %18 ], [ %24, %23 ]
  %28 = phi i64 [ %22, %18 ], [ %25, %23 ]
  call void @_ZN19SkBinaryWriteBuffer14writeByteArrayEPKvm(%class.SkBinaryWriteBuffer* nonnull %7, i8* %27, i64 %28) #7
  %29 = icmp slt i32 %9, 0
  %30 = select i1 %29, i32 %9, i32 0
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.SkSL::Program::Inputs", %"struct.SkSL::Program::Inputs"* %3, i64 %31, i32 0
  %33 = load i64, i64* %11, align 8
  %34 = add i64 %33, 4
  %35 = load i64, i64* %12, align 8
  %36 = icmp ugt i64 %34, %35
  br i1 %36, label %37, label %38

37:                                               ; preds = %26
  call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %10, i64 %34) #7
  br label %38

38:                                               ; preds = %26, %37
  store i64 %34, i64* %11, align 8
  %39 = load i8*, i8** %13, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 %33
  %41 = bitcast i8* %40 to i32*
  store i32 0, i32* %41, align 4
  %42 = bitcast i8* %32 to i16*
  %43 = bitcast i8* %40 to i16*
  %44 = load i16, i16* %42, align 1
  store i16 %44, i16* %43, align 1
  %45 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 1, i32 0
  %46 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %125, label %122

50:                                               ; preds = %174
  %51 = getelementptr inbounds %"struct.GrPersistentCacheUtils::ShaderMetadata", %"struct.GrPersistentCacheUtils::ShaderMetadata"* %5, i64 0, i32 0
  %52 = load %"struct.SkSL::ProgramSettings"*, %"struct.SkSL::ProgramSettings"** %51, align 8
  %53 = icmp ne %"struct.SkSL::ProgramSettings"* %52, null
  call void @_ZN19SkBinaryWriteBuffer9writeBoolEb(%class.SkBinaryWriteBuffer* nonnull %7, i1 zeroext %53) #7
  %54 = load %"struct.SkSL::ProgramSettings"*, %"struct.SkSL::ProgramSettings"** %51, align 8
  %55 = icmp eq %"struct.SkSL::ProgramSettings"* %54, null
  br i1 %55, label %72, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %54, i64 0, i32 0
  %58 = load i8, i8* %57, align 8, !range !2
  %59 = icmp ne i8 %58, 0
  call void @_ZN19SkBinaryWriteBuffer9writeBoolEb(%class.SkBinaryWriteBuffer* nonnull %7, i1 zeroext %59) #7
  %60 = load %"struct.SkSL::ProgramSettings"*, %"struct.SkSL::ProgramSettings"** %51, align 8
  %61 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %60, i64 0, i32 1
  %62 = load i8, i8* %61, align 1, !range !2
  %63 = icmp ne i8 %62, 0
  call void @_ZN19SkBinaryWriteBuffer9writeBoolEb(%class.SkBinaryWriteBuffer* nonnull %7, i1 zeroext %63) #7
  %64 = load %"struct.SkSL::ProgramSettings"*, %"struct.SkSL::ProgramSettings"** %51, align 8
  %65 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %64, i64 0, i32 3
  %66 = load i8, i8* %65, align 1, !range !2
  %67 = icmp ne i8 %66, 0
  call void @_ZN19SkBinaryWriteBuffer9writeBoolEb(%class.SkBinaryWriteBuffer* nonnull %7, i1 zeroext %67) #7
  %68 = load %"struct.SkSL::ProgramSettings"*, %"struct.SkSL::ProgramSettings"** %51, align 8
  %69 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %68, i64 0, i32 17
  %70 = load i8, i8* %69, align 1, !range !2
  %71 = icmp ne i8 %70, 0
  call void @_ZN19SkBinaryWriteBuffer9writeBoolEb(%class.SkBinaryWriteBuffer* nonnull %7, i1 zeroext %71) #7
  br label %72

72:                                               ; preds = %50, %56
  %73 = getelementptr inbounds %"struct.GrPersistentCacheUtils::ShaderMetadata", %"struct.GrPersistentCacheUtils::ShaderMetadata"* %5, i64 0, i32 1, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = lshr i64 %74, 1
  %76 = trunc i64 %75 to i32
  %77 = and i32 %76, 2147483647
  call void @_ZN19SkBinaryWriteBuffer8writeIntEi(%class.SkBinaryWriteBuffer* nonnull %7, i32 %77) #7
  %78 = getelementptr inbounds %"struct.GrPersistentCacheUtils::ShaderMetadata", %"struct.GrPersistentCacheUtils::ShaderMetadata"* %5, i64 0, i32 1, i32 0
  %79 = load %"class.SkSL::String"*, %"class.SkSL::String"** %78, align 8
  %80 = icmp eq %"class.SkSL::String"* %79, null
  br i1 %80, label %87, label %81

81:                                               ; preds = %72
  %82 = load i64, i64* %73, align 8
  %83 = lshr i64 %82, 1
  %84 = and i64 %83, 2147483647
  %85 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %79, i64 %84
  %86 = icmp eq i64 %84, 0
  br i1 %86, label %87, label %97

87:                                               ; preds = %111, %72, %81
  %88 = getelementptr inbounds %"struct.GrPersistentCacheUtils::ShaderMetadata", %"struct.GrPersistentCacheUtils::ShaderMetadata"* %5, i64 0, i32 2
  %89 = load i8, i8* %88, align 8, !range !2
  %90 = icmp ne i8 %89, 0
  call void @_ZN19SkBinaryWriteBuffer9writeBoolEb(%class.SkBinaryWriteBuffer* nonnull %7, i1 zeroext %90) #7
  %91 = getelementptr inbounds %"struct.GrPersistentCacheUtils::ShaderMetadata", %"struct.GrPersistentCacheUtils::ShaderMetadata"* %5, i64 0, i32 3
  %92 = load i8, i8* %91, align 1, !range !2
  %93 = icmp ne i8 %92, 0
  call void @_ZN19SkBinaryWriteBuffer9writeBoolEb(%class.SkBinaryWriteBuffer* nonnull %7, i1 zeroext %93) #7
  %94 = getelementptr inbounds %"struct.GrPersistentCacheUtils::ShaderMetadata", %"struct.GrPersistentCacheUtils::ShaderMetadata"* %5, i64 0, i32 4, i32 0
  %95 = load %class.SkData*, %class.SkData** %94, align 8
  %96 = icmp eq %class.SkData* %95, null
  br i1 %96, label %121, label %116

97:                                               ; preds = %81, %111
  %98 = phi %"class.SkSL::String"* [ %114, %111 ], [ %79, %81 ]
  %99 = bitcast %"class.SkSL::String"* %98 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %108

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  %106 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %107 = load i64, i64* %106, align 8
  br label %111

108:                                              ; preds = %97
  %109 = bitcast %"class.SkSL::String"* %98 to i8*
  %110 = zext i8 %101 to i64
  br label %111

111:                                              ; preds = %103, %108
  %112 = phi i8* [ %105, %103 ], [ %109, %108 ]
  %113 = phi i64 [ %107, %103 ], [ %110, %108 ]
  call void @_ZN19SkBinaryWriteBuffer14writeByteArrayEPKvm(%class.SkBinaryWriteBuffer* nonnull %7, i8* %112, i64 %113) #7
  %114 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %98, i64 1
  %115 = icmp eq %"class.SkSL::String"* %114, %85
  br i1 %115, label %87, label %97

116:                                              ; preds = %87
  %117 = getelementptr inbounds %class.SkData, %class.SkData* %95, i64 0, i32 3
  %118 = load i8*, i8** %117, align 8
  %119 = getelementptr inbounds %class.SkData, %class.SkData* %95, i64 0, i32 4
  %120 = load i64, i64* %119, align 8
  call void @_ZN19SkBinaryWriteBuffer14writeByteArrayEPKvm(%class.SkBinaryWriteBuffer* nonnull %7, i8* %118, i64 %120) #7
  br label %121

121:                                              ; preds = %87, %174, %116
  call void @_ZNK10SkWriter3214snapshotAsDataEv(%class.sk_sp* sret %0, %class.SkWriter32* %10) #7
  call void @_ZN19SkBinaryWriteBufferD1Ev(%class.SkBinaryWriteBuffer* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %8) #7
  ret void

122:                                              ; preds = %38
  %123 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  %124 = zext i8 %48 to i64
  br label %130

125:                                              ; preds = %38
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  %128 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %129 = load i64, i64* %128, align 8
  br label %130

130:                                              ; preds = %125, %122
  %131 = phi i8* [ %127, %125 ], [ %123, %122 ]
  %132 = phi i64 [ %129, %125 ], [ %124, %122 ]
  call void @_ZN19SkBinaryWriteBuffer14writeByteArrayEPKvm(%class.SkBinaryWriteBuffer* nonnull %7, i8* %131, i64 %132) #7
  %133 = icmp slt i32 %9, 1
  %134 = select i1 %133, i32 %9, i32 1
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds %"struct.SkSL::Program::Inputs", %"struct.SkSL::Program::Inputs"* %3, i64 %135, i32 0
  %137 = load i64, i64* %11, align 8
  %138 = add i64 %137, 4
  %139 = load i64, i64* %12, align 8
  %140 = icmp ugt i64 %138, %139
  br i1 %140, label %141, label %142

141:                                              ; preds = %130
  call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %10, i64 %138) #7
  br label %142

142:                                              ; preds = %141, %130
  store i64 %138, i64* %11, align 8
  %143 = load i8*, i8** %13, align 8
  %144 = getelementptr inbounds i8, i8* %143, i64 %137
  %145 = bitcast i8* %144 to i32*
  store i32 0, i32* %145, align 4
  %146 = bitcast i8* %136 to i16*
  %147 = bitcast i8* %144 to i16*
  %148 = load i16, i16* %146, align 1
  store i16 %148, i16* %147, align 1
  %149 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 2, i32 0
  %150 = bitcast %"class.std::__1::basic_string"* %149 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %151 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %150, i64 0, i32 1, i32 0
  %152 = load i8, i8* %151, align 1
  %153 = icmp slt i8 %152, 0
  br i1 %153, label %157, label %154

154:                                              ; preds = %142
  %155 = bitcast %"class.std::__1::basic_string"* %149 to i8*
  %156 = zext i8 %152 to i64
  br label %162

157:                                              ; preds = %142
  %158 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %149, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  %160 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %161 = load i64, i64* %160, align 8
  br label %162

162:                                              ; preds = %157, %154
  %163 = phi i8* [ %159, %157 ], [ %155, %154 ]
  %164 = phi i64 [ %161, %157 ], [ %156, %154 ]
  call void @_ZN19SkBinaryWriteBuffer14writeByteArrayEPKvm(%class.SkBinaryWriteBuffer* nonnull %7, i8* %163, i64 %164) #7
  %165 = icmp slt i32 %9, 2
  %166 = select i1 %165, i32 %9, i32 2
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds %"struct.SkSL::Program::Inputs", %"struct.SkSL::Program::Inputs"* %3, i64 %167, i32 0
  %169 = load i64, i64* %11, align 8
  %170 = add i64 %169, 4
  %171 = load i64, i64* %12, align 8
  %172 = icmp ugt i64 %170, %171
  br i1 %172, label %173, label %174

173:                                              ; preds = %162
  call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %10, i64 %170) #7
  br label %174

174:                                              ; preds = %173, %162
  store i64 %170, i64* %11, align 8
  %175 = load i8*, i8** %13, align 8
  %176 = getelementptr inbounds i8, i8* %175, i64 %169
  %177 = bitcast i8* %176 to i32*
  store i32 0, i32* %177, align 4
  %178 = bitcast i8* %168 to i16*
  %179 = bitcast i8* %176 to i16*
  %180 = load i16, i16* %178, align 1
  store i16 %180, i16* %179, align 1
  %181 = icmp ne %"struct.GrPersistentCacheUtils::ShaderMetadata"* %5, null
  call void @_ZN19SkBinaryWriteBuffer9writeBoolEb(%class.SkBinaryWriteBuffer* nonnull %7, i1 zeroext %181) #7
  %182 = icmp eq %"struct.GrPersistentCacheUtils::ShaderMetadata"* %5, null
  br i1 %182, label %121, label %50
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN19SkBinaryWriteBufferC1Ev(%class.SkBinaryWriteBuffer*) unnamed_addr #3

declare void @_ZN19SkBinaryWriteBuffer8writeIntEi(%class.SkBinaryWriteBuffer*, i32) unnamed_addr #3

declare void @_ZN19SkBinaryWriteBuffer9writeUIntEj(%class.SkBinaryWriteBuffer*, i32) unnamed_addr #3

declare void @_ZN19SkBinaryWriteBuffer14writeByteArrayEPKvm(%class.SkBinaryWriteBuffer*, i8*, i64) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN19SkBinaryWriteBuffer9writeBoolEb(%class.SkBinaryWriteBuffer*, i1 zeroext) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN19SkBinaryWriteBufferD1Ev(%class.SkBinaryWriteBuffer*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN22GrPersistentCacheUtils7GetTypeEP12SkReadBuffer(%class.SkReadBuffer*) local_unnamed_addr #1 {
  %2 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %0) #7
  %3 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %0) #7
  %4 = icmp eq i32 %2, 5
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %0) #7
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = select i1 %9, i32 %3, i32 -1
  ret i32 %10
}

declare i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer*) local_unnamed_addr #3

declare i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN22GrPersistentCacheUtils19UnpackCachedShadersEP12SkReadBufferPN4SkSL6StringEPNS2_7Program6InputsEiPNS_14ShaderMetadataE(%class.SkReadBuffer*, %"class.SkSL::String"*, %"struct.SkSL::Program::Inputs"*, i32, %"struct.GrPersistentCacheUtils::ShaderMetadata"*) local_unnamed_addr #1 {
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7
  store i64 0, i64* %6, align 8
  %9 = call i8* @_ZN12SkReadBuffer13skipByteArrayEPm(%class.SkReadBuffer* %0, i64* nonnull %6) #7
  %10 = icmp eq i8* %9, null
  br i1 %10, label %37, label %11

11:                                               ; preds = %5
  %12 = load i64, i64* %6, align 8
  %13 = call i1 @llvm.is.constant.i64(i64 %12) #7
  %14 = icmp ult i64 %12, 23
  %15 = and i1 %14, %13
  br i1 %15, label %16, label %34

16:                                               ; preds = %11
  %17 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %12, i64* %22, align 8
  %23 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  br label %28

25:                                               ; preds = %16
  %26 = trunc i64 %12 to i8
  store i8 %26, i8* %18, align 1
  %27 = bitcast %"class.SkSL::String"* %1 to i8*
  br label %28

28:                                               ; preds = %25, %21
  %29 = phi i8* [ %24, %21 ], [ %27, %25 ]
  %30 = icmp eq i64 %12, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %28
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %29, i8* nonnull align 1 %9, i64 %12, i1 false) #7
  br label %32

32:                                               ; preds = %31, %28
  %33 = getelementptr inbounds i8, i8* %29, i64 %12
  store i8 0, i8* %33, align 1
  br label %37

34:                                               ; preds = %11
  %35 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0
  %36 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %35, i8* nonnull %9, i64 %12) #7
  br label %37

37:                                               ; preds = %34, %32, %5
  %38 = icmp sgt i32 %3, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.SkSL::Program::Inputs", %"struct.SkSL::Program::Inputs"* %2, i64 0, i32 0
  %41 = call zeroext i1 @_ZN12SkReadBuffer9readPad32EPvm(%class.SkReadBuffer* %0, i8* %40, i64 2) #7
  br label %44

42:                                               ; preds = %37
  %43 = call i8* @_ZN12SkReadBuffer4skipEm(%class.SkReadBuffer* %0, i64 2) #7
  br label %44

44:                                               ; preds = %42, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7
  store i64 0, i64* %6, align 8
  %45 = call i8* @_ZN12SkReadBuffer13skipByteArrayEPm(%class.SkReadBuffer* %0, i64* nonnull %6) #7
  %46 = icmp eq i8* %45, null
  br i1 %46, label %192, label %166

47:                                               ; preds = %235
  %48 = call zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer* %0) #7
  br i1 %48, label %49, label %67

49:                                               ; preds = %47
  %50 = call zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer* %0) #7
  %51 = getelementptr inbounds %"struct.GrPersistentCacheUtils::ShaderMetadata", %"struct.GrPersistentCacheUtils::ShaderMetadata"* %4, i64 0, i32 0
  %52 = load %"struct.SkSL::ProgramSettings"*, %"struct.SkSL::ProgramSettings"** %51, align 8
  %53 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %52, i64 0, i32 0
  %54 = zext i1 %50 to i8
  store i8 %54, i8* %53, align 8
  %55 = call zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer* %0) #7
  %56 = load %"struct.SkSL::ProgramSettings"*, %"struct.SkSL::ProgramSettings"** %51, align 8
  %57 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %56, i64 0, i32 1
  %58 = zext i1 %55 to i8
  store i8 %58, i8* %57, align 1
  %59 = call zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer* %0) #7
  %60 = load %"struct.SkSL::ProgramSettings"*, %"struct.SkSL::ProgramSettings"** %51, align 8
  %61 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %60, i64 0, i32 3
  %62 = zext i1 %59 to i8
  store i8 %62, i8* %61, align 1
  %63 = call zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer* %0) #7
  %64 = load %"struct.SkSL::ProgramSettings"*, %"struct.SkSL::ProgramSettings"** %51, align 8
  %65 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %64, i64 0, i32 17
  %66 = zext i1 %63 to i8
  store i8 %66, i8* %65, align 1
  br label %67

67:                                               ; preds = %49, %47
  %68 = getelementptr inbounds %"struct.GrPersistentCacheUtils::ShaderMetadata", %"struct.GrPersistentCacheUtils::ShaderMetadata"* %4, i64 0, i32 1
  %69 = call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %0) #7
  call void @_ZN8SkTArrayIN4SkSL6StringELb0EE11resize_backEi(%class.SkTArray* %68, i32 %69) #7
  %70 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %68, i64 0, i32 0
  %71 = load %"class.SkSL::String"*, %"class.SkSL::String"** %70, align 8
  %72 = icmp eq %"class.SkSL::String"* %71, null
  br i1 %72, label %82, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"struct.GrPersistentCacheUtils::ShaderMetadata", %"struct.GrPersistentCacheUtils::ShaderMetadata"* %4, i64 0, i32 1, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = lshr i64 %75, 1
  %77 = and i64 %76, 2147483647
  %78 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %71, i64 %77
  %79 = icmp eq i64 %77, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %73
  %81 = bitcast i64* %7 to i8*
  br label %89

82:                                               ; preds = %119, %67, %73
  %83 = call zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer* %0) #7
  %84 = getelementptr inbounds %"struct.GrPersistentCacheUtils::ShaderMetadata", %"struct.GrPersistentCacheUtils::ShaderMetadata"* %4, i64 0, i32 2
  %85 = zext i1 %83 to i8
  store i8 %85, i8* %84, align 8
  %86 = call zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer* %0) #7
  %87 = getelementptr inbounds %"struct.GrPersistentCacheUtils::ShaderMetadata", %"struct.GrPersistentCacheUtils::ShaderMetadata"* %4, i64 0, i32 3
  %88 = zext i1 %86 to i8
  store i8 %88, i8* %87, align 1
  br label %122

89:                                               ; preds = %80, %119
  %90 = phi %"class.SkSL::String"* [ %71, %80 ], [ %120, %119 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #7
  store i64 0, i64* %7, align 8
  %91 = call i8* @_ZN12SkReadBuffer13skipByteArrayEPm(%class.SkReadBuffer* %0, i64* nonnull %7) #7
  %92 = icmp eq i8* %91, null
  br i1 %92, label %119, label %93

93:                                               ; preds = %89
  %94 = load i64, i64* %7, align 8
  %95 = call i1 @llvm.is.constant.i64(i64 %94) #7
  %96 = icmp ult i64 %94, 23
  %97 = and i1 %96, %95
  br i1 %97, label %98, label %116

98:                                               ; preds = %93
  %99 = bitcast %"class.SkSL::String"* %90 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %107

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %94, i64* %104, align 8
  %105 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  br label %110

107:                                              ; preds = %98
  %108 = trunc i64 %94 to i8
  store i8 %108, i8* %100, align 1
  %109 = bitcast %"class.SkSL::String"* %90 to i8*
  br label %110

110:                                              ; preds = %107, %103
  %111 = phi i8* [ %106, %103 ], [ %109, %107 ]
  %112 = icmp eq i64 %94, 0
  br i1 %112, label %114, label %113

113:                                              ; preds = %110
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %111, i8* nonnull align 1 %91, i64 %94, i1 false) #7
  br label %114

114:                                              ; preds = %113, %110
  %115 = getelementptr inbounds i8, i8* %111, i64 %94
  store i8 0, i8* %115, align 1
  br label %119

116:                                              ; preds = %93
  %117 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %90, i64 0, i32 0
  %118 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %117, i8* nonnull %91, i64 %94) #7
  br label %119

119:                                              ; preds = %116, %114, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #7
  %120 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %90, i64 1
  %121 = icmp eq %"class.SkSL::String"* %120, %78
  br i1 %121, label %82, label %89

122:                                              ; preds = %82, %235
  %123 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %124 = load i8, i8* %123, align 8, !range !2
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %143, label %126

126:                                              ; preds = %122
  %127 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %128 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %127, i64 0, i32 1, i32 0
  %129 = load i8, i8* %128, align 1
  %130 = icmp slt i8 %129, 0
  br i1 %130, label %131, label %135

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load i8*, i8** %132, align 8
  store i8 0, i8* %133, align 1
  %134 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %134, align 8
  br label %137

135:                                              ; preds = %126
  %136 = bitcast %"class.SkSL::String"* %1 to i8*
  store i8 0, i8* %136, align 1
  store i8 0, i8* %128, align 1
  br label %137

137:                                              ; preds = %131, %135
  %138 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 1, i32 0
  %139 = bitcast %"class.std::__1::basic_string"* %138 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  %141 = load i8, i8* %140, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %142, label %147, label %145

143:                                              ; preds = %163, %122
  %144 = phi i1 [ %165, %163 ], [ true, %122 ]
  ret i1 %144

145:                                              ; preds = %137
  %146 = bitcast %"class.std::__1::basic_string"* %138 to i8*
  store i8 0, i8* %146, align 1
  store i8 0, i8* %140, align 1
  br label %151

147:                                              ; preds = %137
  %148 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %138, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load i8*, i8** %148, align 8
  store i8 0, i8* %149, align 1
  %150 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %150, align 8
  br label %151

151:                                              ; preds = %147, %145
  %152 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 2, i32 0
  %153 = bitcast %"class.std::__1::basic_string"* %152 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %154 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %153, i64 0, i32 1, i32 0
  %155 = load i8, i8* %154, align 1
  %156 = icmp slt i8 %155, 0
  br i1 %156, label %159, label %157

157:                                              ; preds = %151
  %158 = bitcast %"class.std::__1::basic_string"* %152 to i8*
  store i8 0, i8* %158, align 1
  store i8 0, i8* %154, align 1
  br label %163

159:                                              ; preds = %151
  %160 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %152, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load i8*, i8** %160, align 8
  store i8 0, i8* %161, align 1
  %162 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %162, align 8
  br label %163

163:                                              ; preds = %159, %157
  %164 = load i8, i8* %123, align 8, !range !2
  %165 = icmp eq i8 %164, 0
  br label %143

166:                                              ; preds = %44
  %167 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 1, i32 0
  %168 = load i64, i64* %6, align 8
  %169 = call i1 @llvm.is.constant.i64(i64 %168) #7
  %170 = icmp ult i64 %168, 23
  %171 = and i1 %170, %169
  br i1 %171, label %174, label %172

172:                                              ; preds = %166
  %173 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %167, i8* nonnull %45, i64 %168) #7
  br label %192

174:                                              ; preds = %166
  %175 = bitcast %"class.std::__1::basic_string"* %167 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %176 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %175, i64 0, i32 1, i32 0
  %177 = load i8, i8* %176, align 1
  %178 = icmp slt i8 %177, 0
  br i1 %178, label %182, label %179

179:                                              ; preds = %174
  %180 = trunc i64 %168 to i8
  store i8 %180, i8* %176, align 1
  %181 = bitcast %"class.std::__1::basic_string"* %167 to i8*
  br label %186

182:                                              ; preds = %174
  %183 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %168, i64* %183, align 8
  %184 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %167, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load i8*, i8** %184, align 8
  br label %186

186:                                              ; preds = %182, %179
  %187 = phi i8* [ %185, %182 ], [ %181, %179 ]
  %188 = icmp eq i64 %168, 0
  br i1 %188, label %190, label %189

189:                                              ; preds = %186
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %187, i8* nonnull align 1 %45, i64 %168, i1 false) #7
  br label %190

190:                                              ; preds = %189, %186
  %191 = getelementptr inbounds i8, i8* %187, i64 %168
  store i8 0, i8* %191, align 1
  br label %192

192:                                              ; preds = %190, %172, %44
  %193 = icmp sgt i32 %3, 1
  br i1 %193, label %196, label %194

194:                                              ; preds = %192
  %195 = call i8* @_ZN12SkReadBuffer4skipEm(%class.SkReadBuffer* %0, i64 2) #7
  br label %199

196:                                              ; preds = %192
  %197 = getelementptr inbounds %"struct.SkSL::Program::Inputs", %"struct.SkSL::Program::Inputs"* %2, i64 1, i32 0
  %198 = call zeroext i1 @_ZN12SkReadBuffer9readPad32EPvm(%class.SkReadBuffer* %0, i8* %197, i64 2) #7
  br label %199

199:                                              ; preds = %196, %194
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7
  store i64 0, i64* %6, align 8
  %200 = call i8* @_ZN12SkReadBuffer13skipByteArrayEPm(%class.SkReadBuffer* %0, i64* nonnull %6) #7
  %201 = icmp eq i8* %200, null
  br i1 %201, label %228, label %202

202:                                              ; preds = %199
  %203 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 2, i32 0
  %204 = load i64, i64* %6, align 8
  %205 = call i1 @llvm.is.constant.i64(i64 %204) #7
  %206 = icmp ult i64 %204, 23
  %207 = and i1 %206, %205
  br i1 %207, label %210, label %208

208:                                              ; preds = %202
  %209 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %203, i8* nonnull %200, i64 %204) #7
  br label %228

210:                                              ; preds = %202
  %211 = bitcast %"class.std::__1::basic_string"* %203 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %212 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %211, i64 0, i32 1, i32 0
  %213 = load i8, i8* %212, align 1
  %214 = icmp slt i8 %213, 0
  br i1 %214, label %218, label %215

215:                                              ; preds = %210
  %216 = trunc i64 %204 to i8
  store i8 %216, i8* %212, align 1
  %217 = bitcast %"class.std::__1::basic_string"* %203 to i8*
  br label %222

218:                                              ; preds = %210
  %219 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %204, i64* %219, align 8
  %220 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %203, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load i8*, i8** %220, align 8
  br label %222

222:                                              ; preds = %218, %215
  %223 = phi i8* [ %221, %218 ], [ %217, %215 ]
  %224 = icmp eq i64 %204, 0
  br i1 %224, label %226, label %225

225:                                              ; preds = %222
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %223, i8* nonnull align 1 %200, i64 %204, i1 false) #7
  br label %226

226:                                              ; preds = %225, %222
  %227 = getelementptr inbounds i8, i8* %223, i64 %204
  store i8 0, i8* %227, align 1
  br label %228

228:                                              ; preds = %226, %208, %199
  %229 = icmp sgt i32 %3, 2
  br i1 %229, label %232, label %230

230:                                              ; preds = %228
  %231 = call i8* @_ZN12SkReadBuffer4skipEm(%class.SkReadBuffer* %0, i64 2) #7
  br label %235

232:                                              ; preds = %228
  %233 = getelementptr inbounds %"struct.SkSL::Program::Inputs", %"struct.SkSL::Program::Inputs"* %2, i64 2, i32 0
  %234 = call zeroext i1 @_ZN12SkReadBuffer9readPad32EPvm(%class.SkReadBuffer* %0, i8* %233, i64 2) #7
  br label %235

235:                                              ; preds = %232, %230
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7
  %236 = call zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer* %0) #7
  %237 = icmp ne %"struct.GrPersistentCacheUtils::ShaderMetadata"* %4, null
  %238 = and i1 %237, %236
  br i1 %238, label %47, label %122
}

declare i8* @_ZN12SkReadBuffer13skipByteArrayEPm(%class.SkReadBuffer*, i64*) local_unnamed_addr #3

declare zeroext i1 @_ZN12SkReadBuffer9readPad32EPvm(%class.SkReadBuffer*, i8*, i64) local_unnamed_addr #3

declare i8* @_ZN12SkReadBuffer4skipEm(%class.SkReadBuffer*, i64) local_unnamed_addr #3

declare zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32*, i64) local_unnamed_addr #3

declare void @_ZNK10SkWriter3214snapshotAsDataEv(%class.sk_sp* sret, %class.SkWriter32*) local_unnamed_addr #3

declare void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer*) local_unnamed_addr #3

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN4SkSL6StringELb0EE11resize_backEi(%class.SkTArray*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 1
  %6 = trunc i64 %5 to i32
  %7 = and i32 %6, 2147483647
  %8 = icmp slt i32 %7, %1
  br i1 %8, label %9, label %28

9:                                                ; preds = %2
  %10 = sub nsw i32 %1, %7
  tail call void @_ZN8SkTArrayIN4SkSL6StringELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %0, i32 %10, i32 1) #7
  %11 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  %12 = load %"class.SkSL::String"*, %"class.SkSL::String"** %11, align 8
  %13 = load i64, i64* %3, align 8
  %14 = lshr i64 %13, 1
  %15 = trunc i64 %14 to i32
  %16 = add i32 %10, %15
  %17 = shl i32 %16, 1
  %18 = zext i32 %17 to i64
  %19 = and i64 %13, -4294967295
  %20 = or i64 %19, %18
  store i64 %20, i64* %3, align 8
  %21 = icmp sgt i32 %10, 0
  br i1 %21, label %22, label %63

22:                                               ; preds = %9
  %23 = and i64 %14, 2147483647
  %24 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 %23
  %25 = bitcast %"class.SkSL::String"* %24 to i8*
  %26 = zext i32 %10 to i64
  %27 = mul nuw nsw i64 %26, 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 %27, i1 false) #7
  br label %63

28:                                               ; preds = %2
  %29 = icmp sgt i32 %7, %1
  br i1 %29, label %30, label %63

30:                                               ; preds = %28
  %31 = sub nsw i32 %7, %1
  %32 = sub i32 %6, %31
  %33 = shl i32 %32, 1
  %34 = zext i32 %33 to i64
  %35 = and i64 %4, -4294967295
  %36 = or i64 %35, %34
  store i64 %36, i64* %3, align 8
  %37 = icmp sgt i32 %31, 0
  br i1 %37, label %38, label %62

38:                                               ; preds = %30
  %39 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %40

40:                                               ; preds = %60, %38
  %41 = phi i64 [ %36, %38 ], [ %61, %60 ]
  %42 = phi i32 [ 0, %38 ], [ %58, %60 ]
  %43 = load %"class.SkSL::String"*, %"class.SkSL::String"** %39, align 8
  %44 = lshr i64 %41, 1
  %45 = trunc i64 %44 to i32
  %46 = and i32 %45, 2147483647
  %47 = add nuw nsw i32 %46, %42
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %43, i64 %48, i32 0
  %50 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %40
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  tail call void @_ZdlPv(i8* %56) #8
  br label %57

57:                                               ; preds = %54, %40
  %58 = add nuw nsw i32 %42, 1
  %59 = icmp eq i32 %58, %31
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = load i64, i64* %3, align 8
  br label %40

62:                                               ; preds = %57, %30
  tail call void @_ZN8SkTArrayIN4SkSL6StringELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %0, i32 0, i32 2) #7
  br label %63

63:                                               ; preds = %22, %9, %28, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN4SkSL6StringELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %84

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %84, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 24) #7
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %72, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %66, %48
  %51 = phi i64 [ 0, %48 ], [ %67, %66 ]
  %52 = mul nuw nsw i64 %51, 24
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.SkSL::String"*, %"class.SkSL::String"** %49, align 8
  %55 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %54, i64 %51
  %56 = bitcast %"class.SkSL::String"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %56, i64 24, i1 false) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #7
  %57 = load %"class.SkSL::String"*, %"class.SkSL::String"** %49, align 8
  %58 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %57, i64 %51, i32 0
  %59 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %50
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  tail call void @_ZdlPv(i8* %65) #8
  br label %66

66:                                               ; preds = %63, %50
  %67 = add nuw nsw i64 %51, 1
  %68 = load i64, i64* %4, align 8
  %69 = lshr i64 %68, 1
  %70 = and i64 %69, 2147483647
  %71 = icmp ult i64 %67, %70
  br i1 %71, label %50, label %72

72:                                               ; preds = %66, %35
  %73 = phi i64 [ %45, %35 ], [ %68, %66 ]
  %74 = and i64 %73, 1
  %75 = icmp eq i64 %74, 0
  %76 = bitcast %class.SkTArray* %0 to i8**
  br i1 %75, label %80, label %77

77:                                               ; preds = %72
  %78 = load i8*, i8** %76, align 8
  tail call void @_Z7sk_freePv(i8* %78) #7
  %79 = load i64, i64* %4, align 8
  br label %80

80:                                               ; preds = %72, %77
  %81 = phi i64 [ %79, %77 ], [ %73, %72 ]
  store i8* %44, i8** %76, align 8
  %82 = and i64 %81, -4294967298
  %83 = or i64 %82, 1
  store i64 %83, i64* %4, align 8
  br label %84

84:                                               ; preds = %80, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #3

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
