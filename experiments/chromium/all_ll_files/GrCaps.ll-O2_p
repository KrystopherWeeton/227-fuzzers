; ModuleID = '../../third_party/skia/src/gpu/GrCaps.cpp'
source_filename = "../../third_party/skia/src/gpu/GrCaps.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.GrContextOptions = type { i8, i32, i32, i32, %class.SkExecutor*, i8, i8, i8, i8, i8, i64, float, float, i32, i8, i8, i32, i32, i8, i8, i32, %"class.GrContextOptions::PersistentCache"*, i32, %"class.GrContextOptions::ShaderErrorHandler"*, i32, i32, i8, i8, %class.GrDriverBugWorkarounds }
%class.SkExecutor = type opaque
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%class.SkJSONWriter = type { i8*, i8*, i8*, %class.SkWStream*, i32, i32, %class.SkSTArray, %class.SkSTArray.1 }
%class.SkWStream = type { i32 (...)** }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray = type { i32*, i64 }
%class.SkSTArray.1 = type { %class.SkAlignedSTStorage.2, %class.SkTArray.3 }
%class.SkAlignedSTStorage.2 = type { [16 x i8] }
%class.SkTArray.3 = type { i8*, i64 }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.5 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.4, i8* }
%class.sk_sp.4 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.5 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.6, void (i8*)*, i8* }
%class.SkNVRefCnt.6 = type { %"struct.std::__1::atomic" }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.7, %class.sk_sp.8, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.11" }
%class.SkNVRefCnt.7 = type { %"struct.std::__1::atomic" }
%class.sk_sp.8 = type { %class.GrSurface* }
%class.GrBackendFormat = type { i32, i8, %union.anon.9, i32, [4 x i8] }
%union.anon.9 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.8, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type opaque
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i64 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkIPoint = type { i32, i32 }
%class.GrSwizzle = type { i16 }
%class.GrRenderTargetProxy = type <{ i32 (...)**, i8, i8, i8, i8, %struct.SkIRect, [4 x i8], %class.sk_sp.16, [4 x i8], [4 x i8], %class.GrSurfaceProxy }>
%class.sk_sp.16 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.17, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.17 = type { %"struct.std::__1::atomic" }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.18 }
%class.SkFibBlockSizes.18 = type { i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.GrProcessorKeyBuilder = type opaque
%class.GrBackendRenderTarget = type { i8, i8, i32, i32, i32, i32, i32, %union.anon.19, %class.sk_sp.20 }
%union.anon.19 = type { %struct.GrGLFramebufferInfo, [136 x i8] }
%struct.GrGLFramebufferInfo = type { i32, i32 }
%class.sk_sp.20 = type { %class.GrBackendSurfaceMutableStateImpl* }
%class.GrBackendSurfaceMutableStateImpl = type opaque

$_ZN6GrCapsD2Ev = comdat any

$_ZN6GrCapsD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK6GrCaps22getDstCopyRestrictionsEPK19GrRenderTargetProxy11GrColorType = comdat any

$_ZNK6GrCaps18addExtraSamplerKeyEP21GrProcessorKeyBuilder14GrSamplerStateRK15GrBackendFormat = comdat any

$_ZNK6GrCaps33getExtraSurfaceFlagsForDeferredRTEv = comdat any

$_ZNK6GrCaps21onSupportsDynamicMSAAEPK19GrRenderTargetProxy = comdat any

$_ZN6GrCaps23onApplyOptionsOverridesERK16GrContextOptions = comdat any

$_ZNK6GrCaps10onDumpJSONEP12SkJSONWriter = comdat any

$_ZNK6GrCaps34onIsWindowRectanglesSupportedForRTERK21GrBackendRenderTarget = comdat any

$_ZNK6GrCaps26onGetDstSampleTypeForProxyEPK19GrRenderTargetProxy = comdat any

$_ZN9GrSwizzleC2EPKc = comdat any

$_ZTV6GrCaps = comdat any

@_ZTV6GrCaps = linkonce_odr hidden unnamed_addr constant { [32 x i8*] } { [32 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrCaps*)* @_ZN6GrCapsD2Ev to i8*), i8* bitcast (void (%class.GrCaps*)* @_ZN6GrCapsD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i16 (%class.GrCaps*, %class.GrRenderTargetProxy*, i32)* @_ZNK6GrCaps22getDstCopyRestrictionsEPK19GrRenderTargetProxy11GrColorType to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrCaps*, %class.GrProcessorKeyBuilder*, i64, i32, %class.GrBackendFormat*)* @_ZNK6GrCaps18addExtraSamplerKeyEP21GrProcessorKeyBuilder14GrSamplerStateRK15GrBackendFormat to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%class.GrCaps*)* @_ZNK6GrCaps33getExtraSurfaceFlagsForDeferredRTEv to i8*), i8* bitcast (i1 (%class.GrCaps*, %class.GrRenderTargetProxy*)* @_ZNK6GrCaps21onSupportsDynamicMSAAEPK19GrRenderTargetProxy to i8*), i8* bitcast (void (%class.GrCaps*, %struct.GrContextOptions*)* @_ZN6GrCaps23onApplyOptionsOverridesERK16GrContextOptions to i8*), i8* bitcast (void (%class.GrCaps*, %class.SkJSONWriter*)* @_ZNK6GrCaps10onDumpJSONEP12SkJSONWriter to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%class.GrCaps*, %class.GrBackendRenderTarget*)* @_ZNK6GrCaps34onIsWindowRectanglesSupportedForRTERK21GrBackendRenderTarget to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%class.GrCaps*, %class.GrRenderTargetProxy*)* @_ZNK6GrCaps26onGetDstSampleTypeForProxyEPK19GrRenderTargetProxy to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [42 x i8] c"../../third_party/skia/src/gpu/GrCaps.cpp\00", align 1
@.str.1 = private unnamed_addr constant [73 x i8] c"WARNING: capping window rectangles at %i. HW advertises support for %i.\0A\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"rgba\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6GrCapsC2ERK16GrContextOptions(%class.GrCaps*, %struct.GrContextOptions* nocapture readonly dereferenceable(240)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*] }, { [32 x i8*] }* @_ZTV6GrCaps, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 2, i32 0
  store %class.GrShaderCaps* null, %class.GrShaderCaps** %5, align 8
  %6 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 14
  store i32 25, i32* %6, align 8
  %7 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 15
  store i32 50, i32* %7, align 4
  %8 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 16
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 18
  store i64 1, i64* %9, align 8
  %10 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 19
  tail call void @_ZN22GrDriverBugWorkaroundsC1Ev(%class.GrDriverBugWorkarounds* %10) #7
  %11 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 3
  %12 = bitcast i48* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, -66039408754688
  %15 = or i64 %14, 8589934604
  store i64 %15, i64* %12, align 8
  %16 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 4
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 5
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 6
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 8
  %20 = bitcast i32* %19 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 1>, <4 x i32>* %20, align 8
  %21 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 12
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 13
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %1, i64 0, i32 0
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 20
  %26 = load i8, i8* %25, align 2
  %27 = and i8 %26, -4
  %28 = or i8 %27, %24
  store i8 %28, i8* %25, align 2
  %29 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %1, i64 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 7
  store i32 %30, i32* %31, align 4
  %32 = and i64 %15, -70360154243060
  %33 = or i64 %32, 2199031644160
  store i64 %33, i64* %12, align 8
  %34 = getelementptr inbounds %class.GrDriverBugWorkarounds, %class.GrDriverBugWorkarounds* %10, i64 0, i32 0
  %35 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %1, i64 0, i32 28, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 1 %35, i64 134, i1 false)
  ret void
}

declare void @_ZN22GrDriverBugWorkaroundsC1Ev(%class.GrDriverBugWorkarounds*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6GrCaps20finishInitializationERK16GrContextOptions(%class.GrCaps*, %struct.GrContextOptions* dereferenceable(240)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 3
  %4 = bitcast i48* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1024
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = or i64 %5, 2048
  store i64 %9, i64* %4, align 8
  br label %10

10:                                               ; preds = %2, %8
  tail call void @_ZN6GrCaps21applyOptionsOverridesERK16GrContextOptions(%class.GrCaps* %0, %struct.GrContextOptions* dereferenceable(240) %1)
  %11 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 8
  %12 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 11
  %13 = load i32, i32* %12, align 4
  %14 = load i32, i32* %11, align 4
  %15 = icmp slt i32 %13, %14
  %16 = select i1 %15, i32 %13, i32 %14
  store i32 %16, i32* %11, align 8
  %17 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 9
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %16, %18
  %20 = select i1 %19, i32 %16, i32 %18
  store i32 %20, i32* %17, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6GrCaps21applyOptionsOverridesERK16GrContextOptions(%class.GrCaps*, %struct.GrContextOptions* dereferenceable(240)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 2, i32 0
  %4 = load %class.GrShaderCaps*, %class.GrShaderCaps** %3, align 8
  tail call void @_ZN12GrShaderCaps21applyOptionsOverridesERK16GrContextOptions(%class.GrShaderCaps* %4, %struct.GrContextOptions* dereferenceable(240) %1) #7
  %5 = bitcast %class.GrCaps* %0 to void (%class.GrCaps*, %struct.GrContextOptions*)***
  %6 = load void (%class.GrCaps*, %struct.GrContextOptions*)**, void (%class.GrCaps*, %struct.GrContextOptions*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.GrCaps*, %struct.GrContextOptions*)*, void (%class.GrCaps*, %struct.GrContextOptions*)** %6, i64 20
  %8 = load void (%class.GrCaps*, %struct.GrContextOptions*)*, void (%class.GrCaps*, %struct.GrContextOptions*)** %7, align 8
  tail call void %8(%class.GrCaps* %0, %struct.GrContextOptions* dereferenceable(240) %1) #7
  %9 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %1, i64 0, i32 16
  %10 = load i32, i32* %9, align 8
  switch i32 %10, label %21 [
    i32 0, label %11
    i32 1, label %16
  ]

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 3
  %13 = bitcast i48* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, -167772161
  store i64 %15, i64* %13, align 8
  br label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 3
  %18 = bitcast i48* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = or i64 %19, 167772160
  store i64 %20, i64* %18, align 8
  br label %21

21:                                               ; preds = %2, %16, %11
  %22 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 11
  %23 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %1, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = load i32, i32* %22, align 4
  %26 = icmp slt i32 %24, %25
  %27 = select i1 %26, i32 %24, i32 %25
  store i32 %27, i32* %22, align 4
  %28 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %1, i64 0, i32 26
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %21
  %32 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 3
  %33 = bitcast i48* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = and i64 %34, -3
  store i64 %35, i64* %33, align 8
  br label %36

36:                                               ; preds = %21, %31
  %37 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 12
  %38 = load i32, i32* %37, align 8
  %39 = icmp sgt i32 %38, 8
  br i1 %39, label %40, label %41

40:                                               ; preds = %36
  tail call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 147, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1, i64 0, i64 0), i32 8, i32 %38) #7
  store i32 8, i32* %37, align 8
  br label %41

41:                                               ; preds = %40, %36
  %42 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %1, i64 0, i32 24
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 13
  store i32 %43, i32* %44, align 4
  %45 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %1, i64 0, i32 14
  %46 = load i8, i8* %45, align 4, !range !2
  %47 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 3
  %48 = bitcast i48* %47 to i64*
  %49 = zext i8 %46 to i64
  %50 = load i64, i64* %48, align 8
  %51 = shl nuw nsw i64 %49, 36
  %52 = and i64 %50, -68719476737
  %53 = or i64 %52, %51
  store i64 %53, i64* %48, align 8
  %54 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 19
  %55 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %1, i64 0, i32 28
  tail call void @_ZN22GrDriverBugWorkarounds14applyOverridesERKS_(%class.GrDriverBugWorkarounds* %54, %class.GrDriverBugWorkarounds* dereferenceable(134) %55) #7
  ret void
}

declare void @_ZN12GrShaderCaps21applyOptionsOverridesERK16GrContextOptions(%class.GrShaderCaps*, %struct.GrContextOptions* dereferenceable(240)) local_unnamed_addr #1

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #1

declare void @_ZN22GrDriverBugWorkarounds14applyOverridesERKS_(%class.GrDriverBugWorkarounds*, %class.GrDriverBugWorkarounds* dereferenceable(134)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK6GrCaps8dumpJSONEP12SkJSONWriter(%class.GrCaps* nocapture, %class.SkJSONWriter* nocapture) local_unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6GrCaps26surfaceSupportsWritePixelsEPK9GrSurface(%class.GrCaps*, %class.GrSurface*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = bitcast %class.GrCaps* %0 to i1 (%class.GrCaps*, %class.GrSurface*)***
  %9 = load i1 (%class.GrCaps*, %class.GrSurface*)**, i1 (%class.GrCaps*, %class.GrSurface*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%class.GrCaps*, %class.GrSurface*)*, i1 (%class.GrCaps*, %class.GrSurface*)** %9, i64 22
  %11 = load i1 (%class.GrCaps*, %class.GrSurface*)*, i1 (%class.GrCaps*, %class.GrSurface*)** %10, align 8
  %12 = tail call zeroext i1 %11(%class.GrCaps* %0, %class.GrSurface* %1) #7
  br label %13

13:                                               ; preds = %2, %7
  %14 = phi i1 [ %12, %7 ], [ false, %2 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6GrCaps14canCopySurfaceEPK14GrSurfaceProxyS2_RK7SkIRectRK8SkIPoint(%class.GrCaps*, %class.GrSurfaceProxy*, %class.GrSurfaceProxy*, %struct.SkIRect* dereferenceable(16), %struct.SkIPoint* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %1, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %20

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %1, i64 0, i32 5
  %12 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %2, i64 0, i32 5
  %13 = tail call zeroext i1 @_ZNK15GrBackendFormateqERKS_(%class.GrBackendFormat* %11, %class.GrBackendFormat* dereferenceable(72) %12) #7
  br i1 %13, label %14, label %20

14:                                               ; preds = %10
  %15 = bitcast %class.GrCaps* %0 to i1 (%class.GrCaps*, %class.GrSurfaceProxy*, %class.GrSurfaceProxy*, %struct.SkIRect*, %struct.SkIPoint*)***
  %16 = load i1 (%class.GrCaps*, %class.GrSurfaceProxy*, %class.GrSurfaceProxy*, %struct.SkIRect*, %struct.SkIPoint*)**, i1 (%class.GrCaps*, %class.GrSurfaceProxy*, %class.GrSurfaceProxy*, %struct.SkIRect*, %struct.SkIPoint*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%class.GrCaps*, %class.GrSurfaceProxy*, %class.GrSurfaceProxy*, %struct.SkIRect*, %struct.SkIPoint*)*, i1 (%class.GrCaps*, %class.GrSurfaceProxy*, %class.GrSurfaceProxy*, %struct.SkIRect*, %struct.SkIPoint*)** %16, i64 23
  %18 = load i1 (%class.GrCaps*, %class.GrSurfaceProxy*, %class.GrSurfaceProxy*, %struct.SkIRect*, %struct.SkIPoint*)*, i1 (%class.GrCaps*, %class.GrSurfaceProxy*, %class.GrSurfaceProxy*, %struct.SkIRect*, %struct.SkIPoint*)** %17, align 8
  %19 = tail call zeroext i1 %18(%class.GrCaps* %0, %class.GrSurfaceProxy* %1, %class.GrSurfaceProxy* %2, %struct.SkIRect* dereferenceable(16) %3, %struct.SkIPoint* dereferenceable(8) %4) #7
  br label %20

20:                                               ; preds = %10, %5, %14
  %21 = phi i1 [ %19, %14 ], [ false, %5 ], [ false, %10 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6GrCaps21validateSurfaceParamsERK7SkISizeRK15GrBackendFormat12GrRenderablei11GrMipmapped(%class.GrCaps*, %struct.SkISize* nocapture readonly dereferenceable(8), %class.GrBackendFormat* dereferenceable(72), i1 zeroext, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = bitcast %class.GrCaps* %0 to i1 (%class.GrCaps*, %class.GrBackendFormat*)***
  %8 = load i1 (%class.GrCaps*, %class.GrBackendFormat*)**, i1 (%class.GrCaps*, %class.GrBackendFormat*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%class.GrCaps*, %class.GrBackendFormat*)*, i1 (%class.GrCaps*, %class.GrBackendFormat*)** %8, i64 4
  %10 = load i1 (%class.GrCaps*, %class.GrBackendFormat*)*, i1 (%class.GrCaps*, %class.GrBackendFormat*)** %9, align 8
  %11 = tail call zeroext i1 %10(%class.GrCaps* %0, %class.GrBackendFormat* dereferenceable(72) %2) #7
  br i1 %11, label %12, label %50

12:                                               ; preds = %6
  br i1 %5, label %13, label %19

13:                                               ; preds = %12
  %14 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 3
  %15 = bitcast i48* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 2
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %50, label %19

19:                                               ; preds = %13, %12
  %20 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %1, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %50, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %1, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp slt i32 %25, 1
  br i1 %26, label %50, label %27

27:                                               ; preds = %23
  br i1 %3, label %28, label %42

28:                                               ; preds = %27
  %29 = bitcast %class.GrCaps* %0 to i1 (%class.GrCaps*, %class.GrBackendFormat*, i32)***
  %30 = load i1 (%class.GrCaps*, %class.GrBackendFormat*, i32)**, i1 (%class.GrCaps*, %class.GrBackendFormat*, i32)*** %29, align 8
  %31 = getelementptr inbounds i1 (%class.GrCaps*, %class.GrBackendFormat*, i32)*, i1 (%class.GrCaps*, %class.GrBackendFormat*, i32)** %30, i64 8
  %32 = load i1 (%class.GrCaps*, %class.GrBackendFormat*, i32)*, i1 (%class.GrCaps*, %class.GrBackendFormat*, i32)** %31, align 8
  %33 = tail call zeroext i1 %32(%class.GrCaps* %0, %class.GrBackendFormat* dereferenceable(72) %2, i32 %4) #7
  br i1 %33, label %34, label %50

34:                                               ; preds = %28
  %35 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 8
  %36 = load i32, i32* %35, align 8
  %37 = load i32, i32* %20, align 4
  %38 = icmp sgt i32 %37, %36
  br i1 %38, label %50, label %39

39:                                               ; preds = %34
  %40 = load i32, i32* %24, align 4
  %41 = icmp sle i32 %40, %36
  ret i1 %41

42:                                               ; preds = %27
  %43 = icmp eq i32 %4, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %42
  %45 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 11
  %46 = load i32, i32* %45, align 4
  %47 = icmp sle i32 %21, %46
  %48 = icmp sle i32 %25, %46
  %49 = and i1 %48, %47
  ret i1 %49

50:                                               ; preds = %13, %42, %34, %28, %19, %23, %6
  ret i1 false
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden { i32, i64 } @_ZNK6GrCaps28supportedReadPixelsColorTypeE11GrColorTypeRK15GrBackendFormatS0_(%class.GrCaps*, i32, %class.GrBackendFormat* dereferenceable(72), i32) local_unnamed_addr #0 align 2 {
  %5 = bitcast %class.GrCaps* %0 to { i32, i64 } (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)***
  %6 = load { i32, i64 } (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)**, { i32, i64 } (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)*** %5, align 8
  %7 = getelementptr inbounds { i32, i64 } (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)*, { i32, i64 } (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)** %6, i64 27
  %8 = load { i32, i64 } (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)*, { i32, i64 } (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)** %7, align 8
  %9 = tail call { i32, i64 } %8(%class.GrCaps* %0, i32 %1, %class.GrBackendFormat* dereferenceable(72) %2, i32 %3) #7
  %10 = extractvalue { i32, i64 } %9, 0
  %11 = extractvalue { i32, i64 } %9, 1
  %12 = icmp eq i32 %10, 6
  %13 = select i1 %12, i64 0, i64 %11
  switch i32 %10, label %14 [
    i32 0, label %21
    i32 1, label %21
    i32 2, label %21
    i32 3, label %21
    i32 4, label %15
    i32 5, label %15
    i32 6, label %15
    i32 7, label %21
    i32 8, label %15
    i32 9, label %15
    i32 10, label %15
    i32 11, label %21
    i32 12, label %21
    i32 13, label %21
    i32 14, label %21
    i32 15, label %21
    i32 16, label %21
    i32 21, label %15
    i32 22, label %21
    i32 23, label %15
    i32 17, label %21
    i32 18, label %21
    i32 20, label %21
    i32 19, label %21
    i32 24, label %21
    i32 25, label %21
    i32 26, label %21
    i32 27, label %21
    i32 28, label %21
    i32 30, label %21
    i32 29, label %21
  ]

14:                                               ; preds = %4
  tail call void @llvm.trap() #7
  unreachable

15:                                               ; preds = %4, %4, %4, %4, %4, %4, %4, %4
  %16 = and i64 %13, 3
  switch i64 %16, label %19 [
    i64 0, label %21
    i64 2, label %17
  ]

17:                                               ; preds = %15
  %18 = shl i64 %13, 1
  br label %21

19:                                               ; preds = %15
  %20 = shl i64 %13, 2
  br label %21

21:                                               ; preds = %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %15, %17, %19
  %22 = phi i64 [ %20, %19 ], [ %18, %17 ], [ %13, %15 ], [ %13, %4 ], [ %13, %4 ], [ %13, %4 ], [ %13, %4 ], [ %13, %4 ], [ %13, %4 ], [ %13, %4 ], [ %13, %4 ], [ %13, %4 ], [ %13, %4 ], [ %13, %4 ], [ %13, %4 ], [ %13, %4 ], [ %13, %4 ], [ %13, %4 ], [ %13, %4 ], [ %13, %4 ], [ %13, %4 ], [ %13, %4 ], [ %13, %4 ], [ %13, %4 ], [ %13, %4 ], [ %13, %4 ]
  %23 = insertvalue { i32, i64 } %9, i64 %22, 1
  ret { i32, i64 } %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6GrCaps23getDefaultBackendFormatE11GrColorType12GrRenderable(%class.GrBackendFormat* noalias sret, %class.GrCaps*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.GrBackendFormat, align 8
  %6 = icmp eq i32 %2, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %4
  %8 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  store i32 5, i32* %8, align 8
  %9 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  store i8 0, i8* %9, align 4
  %10 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 3
  store i32 0, i32* %10, align 8
  br label %68

11:                                               ; preds = %4
  %12 = bitcast %class.GrBackendFormat* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %12) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 72, i1 false)
  %13 = bitcast %class.GrCaps* %1 to void (%class.GrBackendFormat*, %class.GrCaps*, i32)***
  %14 = load void (%class.GrBackendFormat*, %class.GrCaps*, i32)**, void (%class.GrBackendFormat*, %class.GrCaps*, i32)*** %13, align 8
  %15 = getelementptr inbounds void (%class.GrBackendFormat*, %class.GrCaps*, i32)*, void (%class.GrBackendFormat*, %class.GrCaps*, i32)** %14, i64 24
  %16 = load void (%class.GrBackendFormat*, %class.GrCaps*, i32)*, void (%class.GrBackendFormat*, %class.GrCaps*, i32)** %15, align 8
  call void %16(%class.GrBackendFormat* nonnull sret %5, %class.GrCaps* %1, i32 %2) #7
  %17 = bitcast %class.GrCaps* %1 to i1 (%class.GrCaps*, %class.GrBackendFormat*)***
  %18 = load i1 (%class.GrCaps*, %class.GrBackendFormat*)**, i1 (%class.GrCaps*, %class.GrBackendFormat*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%class.GrCaps*, %class.GrBackendFormat*)*, i1 (%class.GrCaps*, %class.GrBackendFormat*)** %18, i64 4
  %20 = load i1 (%class.GrCaps*, %class.GrBackendFormat*)*, i1 (%class.GrCaps*, %class.GrBackendFormat*)** %19, align 8
  %21 = call zeroext i1 %20(%class.GrCaps* %1, %class.GrBackendFormat* nonnull dereferenceable(72) %5) #7
  br i1 %21, label %26, label %22

22:                                               ; preds = %11
  %23 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  store i32 5, i32* %23, align 8
  %24 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  store i8 0, i8* %24, align 4
  %25 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 3
  store i32 0, i32* %25, align 8
  br label %67

26:                                               ; preds = %11
  %27 = call i32 @_Z32GrBackendFormatToCompressionTypeRK15GrBackendFormat(%class.GrBackendFormat* nonnull dereferenceable(72) %5) #7
  switch i32 %27, label %28 [
    i32 0, label %33
    i32 3, label %30
    i32 1, label %29
    i32 2, label %29
  ]

28:                                               ; preds = %26
  call void @llvm.trap() #7
  unreachable

29:                                               ; preds = %26, %26
  br label %30

30:                                               ; preds = %29, %26
  %31 = phi i32 [ 6, %29 ], [ 4, %26 ]
  %32 = icmp eq i32 %31, %2
  br i1 %32, label %43, label %39

33:                                               ; preds = %26
  %34 = bitcast %class.GrCaps* %1 to i1 (%class.GrCaps*, i32, %class.GrBackendFormat*)***
  %35 = load i1 (%class.GrCaps*, i32, %class.GrBackendFormat*)**, i1 (%class.GrCaps*, i32, %class.GrBackendFormat*)*** %34, align 8
  %36 = getelementptr inbounds i1 (%class.GrCaps*, i32, %class.GrBackendFormat*)*, i1 (%class.GrCaps*, i32, %class.GrBackendFormat*)** %35, i64 26
  %37 = load i1 (%class.GrCaps*, i32, %class.GrBackendFormat*)*, i1 (%class.GrCaps*, i32, %class.GrBackendFormat*)** %36, align 8
  %38 = call zeroext i1 %37(%class.GrCaps* %1, i32 %2, %class.GrBackendFormat* nonnull dereferenceable(72) %5) #7
  br i1 %38, label %43, label %39

39:                                               ; preds = %30, %33
  %40 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  store i32 5, i32* %40, align 8
  %41 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  store i8 0, i8* %41, align 4
  %42 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 3
  store i32 0, i32* %42, align 8
  br label %67

43:                                               ; preds = %30, %33
  %44 = bitcast %class.GrCaps* %1 to { i32, i64 } (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)***
  %45 = load { i32, i64 } (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)**, { i32, i64 } (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)*** %44, align 8
  %46 = getelementptr inbounds { i32, i64 } (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)*, { i32, i64 } (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)** %45, i64 11
  %47 = load { i32, i64 } (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)*, { i32, i64 } (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)** %46, align 8
  %48 = call { i32, i64 } %47(%class.GrCaps* %1, i32 %2, %class.GrBackendFormat* nonnull dereferenceable(72) %5, i32 %2) #7
  %49 = extractvalue { i32, i64 } %48, 0
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %55

51:                                               ; preds = %43
  %52 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  store i32 5, i32* %52, align 8
  %53 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  store i8 0, i8* %53, align 4
  %54 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 3
  store i32 0, i32* %54, align 8
  br label %67

55:                                               ; preds = %43
  br i1 %3, label %56, label %66

56:                                               ; preds = %55
  %57 = bitcast %class.GrCaps* %1 to i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)***
  %58 = load i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)**, i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)*** %57, align 8
  %59 = getelementptr inbounds i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)*, i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)** %58, i64 7
  %60 = load i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)*, i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)** %59, align 8
  %61 = call zeroext i1 %60(%class.GrCaps* %1, i32 %2, %class.GrBackendFormat* nonnull dereferenceable(72) %5, i32 1) #7
  br i1 %61, label %66, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  store i32 5, i32* %63, align 8
  %64 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 1
  store i8 0, i8* %64, align 4
  %65 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 3
  store i32 0, i32* %65, align 8
  br label %67

66:                                               ; preds = %56, %55
  call void @_ZN15GrBackendFormatC1ERKS_(%class.GrBackendFormat* %0, %class.GrBackendFormat* nonnull dereferenceable(72) %5) #7
  br label %67

67:                                               ; preds = %66, %62, %51, %39, %22
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %12) #7
  br label %68

68:                                               ; preds = %67, %7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6GrCaps31areColorTypeAndFormatCompatibleE11GrColorTypeRK15GrBackendFormat(%class.GrCaps*, i32, %class.GrBackendFormat* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %18, label %5

5:                                                ; preds = %3
  %6 = tail call i32 @_Z32GrBackendFormatToCompressionTypeRK15GrBackendFormat(%class.GrBackendFormat* dereferenceable(72) %2) #7
  switch i32 %6, label %7 [
    i32 0, label %12
    i32 3, label %9
    i32 1, label %8
    i32 2, label %8
  ]

7:                                                ; preds = %5
  tail call void @llvm.trap() #7
  unreachable

8:                                                ; preds = %5, %5
  br label %9

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 6, %8 ], [ 4, %5 ]
  %11 = icmp eq i32 %10, %1
  br label %18

12:                                               ; preds = %5
  %13 = bitcast %class.GrCaps* %0 to i1 (%class.GrCaps*, i32, %class.GrBackendFormat*)***
  %14 = load i1 (%class.GrCaps*, i32, %class.GrBackendFormat*)**, i1 (%class.GrCaps*, i32, %class.GrBackendFormat*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%class.GrCaps*, i32, %class.GrBackendFormat*)*, i1 (%class.GrCaps*, i32, %class.GrBackendFormat*)** %14, i64 26
  %16 = load i1 (%class.GrCaps*, i32, %class.GrBackendFormat*)*, i1 (%class.GrCaps*, i32, %class.GrBackendFormat*)** %15, align 8
  %17 = tail call zeroext i1 %16(%class.GrCaps* %0, i32 %1, %class.GrBackendFormat* dereferenceable(72) %2) #7
  br label %18

18:                                               ; preds = %9, %12, %3
  %19 = phi i1 [ false, %3 ], [ %11, %9 ], [ %17, %12 ]
  ret i1 %19
}

declare void @_ZN15GrBackendFormatC1ERKS_(%class.GrBackendFormat*, %class.GrBackendFormat* dereferenceable(72)) unnamed_addr #1

declare i32 @_Z32GrBackendFormatToCompressionTypeRK15GrBackendFormat(%class.GrBackendFormat* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6GrCaps14getReadSwizzleERK15GrBackendFormat11GrColorType(%class.GrSwizzle* noalias sret, %class.GrCaps*, %class.GrBackendFormat* dereferenceable(72), i32) local_unnamed_addr #0 align 2 {
  %5 = tail call i32 @_Z32GrBackendFormatToCompressionTypeRK15GrBackendFormat(%class.GrBackendFormat* dereferenceable(72) %2) #7
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #7
  br label %13

8:                                                ; preds = %4
  %9 = bitcast %class.GrCaps* %1 to void (%class.GrSwizzle*, %class.GrCaps*, %class.GrBackendFormat*, i32)***
  %10 = load void (%class.GrSwizzle*, %class.GrCaps*, %class.GrBackendFormat*, i32)**, void (%class.GrSwizzle*, %class.GrCaps*, %class.GrBackendFormat*, i32)*** %9, align 8
  %11 = getelementptr inbounds void (%class.GrSwizzle*, %class.GrCaps*, %class.GrBackendFormat*, i32)*, void (%class.GrSwizzle*, %class.GrCaps*, %class.GrBackendFormat*, i32)** %10, i64 28
  %12 = load void (%class.GrSwizzle*, %class.GrCaps*, %class.GrBackendFormat*, i32)*, void (%class.GrSwizzle*, %class.GrCaps*, %class.GrBackendFormat*, i32)** %11, align 8
  tail call void %12(%class.GrSwizzle* sret %0, %class.GrCaps* %1, %class.GrBackendFormat* dereferenceable(72) %2, i32 %3) #7
  br label %13

13:                                               ; preds = %7, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6GrCaps18isFormatCompressedERK15GrBackendFormat(%class.GrCaps* nocapture readnone, %class.GrBackendFormat* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = tail call i32 @_Z32GrBackendFormatToCompressionTypeRK15GrBackendFormat(%class.GrBackendFormat* dereferenceable(72) %1) #7
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6GrCaps24getDstSampleTypeForProxyEPK19GrRenderTargetProxy(%class.GrCaps*, %class.GrRenderTargetProxy*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 3
  %4 = bitcast i48* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 64
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %27, label %8

8:                                                ; preds = %2
  %9 = bitcast %class.GrRenderTargetProxy* %1 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr i8, i8* %10, i64 -24
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %class.GrRenderTargetProxy* %1 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 %13
  %16 = getelementptr inbounds i8, i8* %15, i64 24
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %27

21:                                               ; preds = %8
  %22 = bitcast %class.GrCaps* %0 to i32 (%class.GrCaps*, %class.GrRenderTargetProxy*)***
  %23 = load i32 (%class.GrCaps*, %class.GrRenderTargetProxy*)**, i32 (%class.GrCaps*, %class.GrRenderTargetProxy*)*** %22, align 8
  %24 = getelementptr inbounds i32 (%class.GrCaps*, %class.GrRenderTargetProxy*)*, i32 (%class.GrCaps*, %class.GrRenderTargetProxy*)** %23, i64 29
  %25 = load i32 (%class.GrCaps*, %class.GrRenderTargetProxy*)*, i32 (%class.GrCaps*, %class.GrRenderTargetProxy*)** %24, align 8
  %26 = tail call i32 %25(%class.GrCaps* %0, %class.GrRenderTargetProxy* %1) #7
  br label %27

27:                                               ; preds = %8, %2, %21
  %28 = phi i32 [ %26, %21 ], [ 1, %8 ], [ 1, %2 ]
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6GrCaps19supportsDynamicMSAAEPK19GrRenderTargetProxy(%class.GrCaps*, %class.GrRenderTargetProxy*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrRenderTargetProxy, %class.GrRenderTargetProxy* %1, i64 0, i32 1
  %4 = load i8, i8* %3, align 8
  %5 = icmp eq i8 %4, 1
  br i1 %5, label %6, label %32

6:                                                ; preds = %2
  %7 = bitcast %class.GrRenderTargetProxy* %1 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr i8, i8* %8, i64 -24
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %class.GrRenderTargetProxy* %1 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 %11
  %14 = getelementptr inbounds i8, i8* %13, i64 32
  %15 = bitcast i8* %14 to %class.GrBackendFormat*
  %16 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 13
  %17 = bitcast %class.GrCaps* %0 to i32 (%class.GrCaps*, %class.GrBackendFormat*)***
  %18 = load i32 (%class.GrCaps*, %class.GrBackendFormat*)**, i32 (%class.GrCaps*, %class.GrBackendFormat*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%class.GrCaps*, %class.GrBackendFormat*)*, i32 (%class.GrCaps*, %class.GrBackendFormat*)** %18, i64 6
  %20 = load i32 (%class.GrCaps*, %class.GrBackendFormat*)*, i32 (%class.GrCaps*, %class.GrBackendFormat*)** %19, align 8
  %21 = tail call i32 %20(%class.GrCaps* %0, %class.GrBackendFormat* dereferenceable(72) %15) #7
  %22 = load i32, i32* %16, align 4
  %23 = icmp slt i32 %21, %22
  %24 = select i1 %23, i32 %21, i32 %22
  %25 = icmp sgt i32 %24, 1
  br i1 %25, label %26, label %32

26:                                               ; preds = %6
  %27 = bitcast %class.GrCaps* %0 to i1 (%class.GrCaps*, %class.GrRenderTargetProxy*)***
  %28 = load i1 (%class.GrCaps*, %class.GrRenderTargetProxy*)**, i1 (%class.GrCaps*, %class.GrRenderTargetProxy*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%class.GrCaps*, %class.GrRenderTargetProxy*)*, i1 (%class.GrCaps*, %class.GrRenderTargetProxy*)** %28, i64 19
  %30 = load i1 (%class.GrCaps*, %class.GrRenderTargetProxy*)*, i1 (%class.GrCaps*, %class.GrRenderTargetProxy*)** %29, align 8
  %31 = tail call zeroext i1 %30(%class.GrCaps* %0, %class.GrRenderTargetProxy* %1) #7
  br label %32

32:                                               ; preds = %26, %6, %2
  %33 = phi i1 [ false, %6 ], [ false, %2 ], [ %31, %26 ]
  ret i1 %33
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6GrCapsD2Ev(%class.GrCaps*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*] }, { [32 x i8*] }* @_ZTV6GrCaps, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 19
  tail call void @_ZN22GrDriverBugWorkaroundsD1Ev(%class.GrDriverBugWorkarounds* %3) #7
  %4 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %0, i64 0, i32 2, i32 0
  %5 = load %class.GrShaderCaps*, %class.GrShaderCaps** %4, align 8
  %6 = icmp eq %class.GrShaderCaps* %5, null
  br i1 %6, label %17, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 -1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %17

11:                                               ; preds = %7
  %12 = bitcast %class.GrShaderCaps* %5 to %class.SkRefCntBase*
  %13 = bitcast %class.GrShaderCaps* %5 to void (%class.SkRefCntBase*)***
  %14 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, i64 2
  %16 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %15, align 8
  tail call void %16(%class.SkRefCntBase* nonnull %12) #7
  br label %17

17:                                               ; preds = %1, %7, %11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6GrCapsD0Ev(%class.GrCaps*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #7
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i16 @_ZNK6GrCaps22getDstCopyRestrictionsEPK19GrRenderTargetProxy11GrColorType(%class.GrCaps*, %class.GrRenderTargetProxy*, i32) unnamed_addr #0 comdat align 2 {
  ret i16 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK6GrCaps18addExtraSamplerKeyEP21GrProcessorKeyBuilder14GrSamplerStateRK15GrBackendFormat(%class.GrCaps*, %class.GrProcessorKeyBuilder*, i64, i32, %class.GrBackendFormat* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK6GrCaps33getExtraSurfaceFlagsForDeferredRTEv(%class.GrCaps*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6GrCaps21onSupportsDynamicMSAAEPK19GrRenderTargetProxy(%class.GrCaps*, %class.GrRenderTargetProxy*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6GrCaps23onApplyOptionsOverridesERK16GrContextOptions(%class.GrCaps*, %struct.GrContextOptions* dereferenceable(240)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK6GrCaps10onDumpJSONEP12SkJSONWriter(%class.GrCaps*, %class.SkJSONWriter*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6GrCaps34onIsWindowRectanglesSupportedForRTERK21GrBackendRenderTarget(%class.GrCaps*, %class.GrBackendRenderTarget* dereferenceable(176)) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK6GrCaps26onGetDstSampleTypeForProxyEPK19GrRenderTargetProxy(%class.GrCaps*, %class.GrRenderTargetProxy*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

declare zeroext i1 @_ZNK15GrBackendFormateqERKS_(%class.GrBackendFormat*, %class.GrBackendFormat* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %4 = load i8, i8* %1, align 1
  %5 = sext i8 %4 to i32
  switch i32 %5, label %11 [
    i32 114, label %12
    i32 103, label %6
    i32 98, label %7
    i32 97, label %8
    i32 48, label %9
    i32 49, label %10
  ]

6:                                                ; preds = %2
  br label %12

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  br label %12

9:                                                ; preds = %2
  br label %12

10:                                               ; preds = %2
  br label %12

11:                                               ; preds = %2
  tail call void @llvm.trap() #7
  unreachable

12:                                               ; preds = %2, %6, %7, %8, %9, %10
  %13 = phi i16 [ 5, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %2 ]
  %14 = getelementptr inbounds i8, i8* %1, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  switch i32 %16, label %22 [
    i32 114, label %23
    i32 103, label %17
    i32 98, label %18
    i32 97, label %19
    i32 48, label %20
    i32 49, label %21
  ]

17:                                               ; preds = %12
  br label %23

18:                                               ; preds = %12
  br label %23

19:                                               ; preds = %12
  br label %23

20:                                               ; preds = %12
  br label %23

21:                                               ; preds = %12
  br label %23

22:                                               ; preds = %12
  tail call void @llvm.trap() #7
  unreachable

23:                                               ; preds = %12, %17, %18, %19, %20, %21
  %24 = phi i16 [ 80, %21 ], [ 64, %20 ], [ 48, %19 ], [ 32, %18 ], [ 16, %17 ], [ 0, %12 ]
  %25 = or i16 %24, %13
  %26 = getelementptr inbounds i8, i8* %1, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  switch i32 %28, label %34 [
    i32 114, label %35
    i32 103, label %29
    i32 98, label %30
    i32 97, label %31
    i32 48, label %32
    i32 49, label %33
  ]

29:                                               ; preds = %23
  br label %35

30:                                               ; preds = %23
  br label %35

31:                                               ; preds = %23
  br label %35

32:                                               ; preds = %23
  br label %35

33:                                               ; preds = %23
  br label %35

34:                                               ; preds = %23
  tail call void @llvm.trap() #7
  unreachable

35:                                               ; preds = %23, %29, %30, %31, %32, %33
  %36 = phi i16 [ 1280, %33 ], [ 1024, %32 ], [ 768, %31 ], [ 512, %30 ], [ 256, %29 ], [ 0, %23 ]
  %37 = or i16 %25, %36
  %38 = getelementptr inbounds i8, i8* %1, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  switch i32 %40, label %46 [
    i32 114, label %47
    i32 103, label %41
    i32 98, label %42
    i32 97, label %43
    i32 48, label %44
    i32 49, label %45
  ]

41:                                               ; preds = %35
  br label %47

42:                                               ; preds = %35
  br label %47

43:                                               ; preds = %35
  br label %47

44:                                               ; preds = %35
  br label %47

45:                                               ; preds = %35
  br label %47

46:                                               ; preds = %35
  tail call void @llvm.trap() #7
  unreachable

47:                                               ; preds = %35, %41, %42, %43, %44, %45
  %48 = phi i16 [ 20480, %45 ], [ 16384, %44 ], [ 12288, %43 ], [ 8192, %42 ], [ 4096, %41 ], [ 0, %35 ]
  %49 = or i16 %37, %48
  store i16 %49, i16* %3, align 2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN22GrDriverBugWorkaroundsD1Ev(%class.GrDriverBugWorkarounds*) unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
