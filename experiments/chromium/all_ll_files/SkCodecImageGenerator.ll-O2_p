; ModuleID = '../../third_party/skia/src/codec/SkCodecImageGenerator.cpp'
source_filename = "../../third_party/skia/src/codec/SkCodecImageGenerator.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkCodecImageGenerator = type { %class.SkImageGenerator.base, %"class.std::__1::unique_ptr.9", %class.sk_sp.7 }
%class.SkImageGenerator.base = type <{ i32 (...)**, %struct.SkImageInfo, i32 }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %class.SkCodec* }
%class.sk_sp.7 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.8, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.8 = type { %"struct.std::__1::atomic" }
%class.SkCodec = type <{ i32 (...)**, %struct.SkEncodedInfo, i32, [4 x i8], %"class.std::__1::unique_ptr.19", i8, [3 x i8], i32, %struct.SkImageInfo, %"struct.SkCodec::Options", i32, i32, %struct.skcms_ICCProfile, i32, i32, i8, i8, [6 x i8] }>
%struct.SkEncodedInfo = type { i32, i32, i32, i32, i8, %"class.std::__1::unique_ptr.12" }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.SkEncodedInfo::ICCProfile"* }
%"class.SkEncodedInfo::ICCProfile" = type { %struct.skcms_ICCProfile, %class.sk_sp.7 }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %class.SkStream* }
%class.SkStream = type { i32 (...)** }
%"struct.SkCodec::Options" = type { i32, %struct.SkIRect*, i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.15, [8 x i8] }
%struct.anon.15 = type { i32, i8*, i8* }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%class.SkImageGenerator = type <{ i32 (...)**, %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkPngChunkReader = type opaque
%class.SkAutoPixmapStorage = type { %class.SkPixmap, i8* }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%"struct.SkImageGenerator::Options" = type { i8 }
%"class.SkYUVAPixmapInfo::SupportedDataTypes" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%class.SkYUVAPixmapInfo = type <{ %class.SkYUVAInfo, %"struct.std::__1::array", %"struct.std::__1::array.28", i32, [4 x i8] }>
%class.SkYUVAInfo = type { %struct.SkISize, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [4 x %struct.SkImageInfo] }
%"struct.std::__1::array.28" = type { [4 x i64] }
%class.SkYUVAPixmaps = type <{ %"struct.std::__1::array.29", %class.sk_sp.7, %class.SkYUVAInfo, i32, [4 x i8] }>
%"struct.std::__1::array.29" = type { [4 x %class.SkPixmap] }
%class.GrRecordingContext = type opaque

$_ZN21SkCodecImageGeneratorD2Ev = comdat any

$_ZN21SkCodecImageGeneratorD0Ev = comdat any

$_ZNK16SkImageGenerator9onIsValidEP18GrRecordingContext = comdat any

$_ZNK13SkEncodedInfo13makeImageInfoEv = comdat any

@_ZTV21SkCodecImageGenerator = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkCodecImageGenerator*)* @_ZN21SkCodecImageGeneratorD2Ev to i8*), i8* bitcast (void (%class.SkCodecImageGenerator*)* @_ZN21SkCodecImageGeneratorD0Ev to i8*), i8* bitcast (void (%class.sk_sp.7*, %class.SkCodecImageGenerator*)* @_ZN21SkCodecImageGenerator16onRefEncodedDataEv to i8*), i8* bitcast (i1 (%class.SkCodecImageGenerator*, %struct.SkImageInfo*, i8*, i64, %"struct.SkImageGenerator::Options"*)* @_ZN21SkCodecImageGenerator11onGetPixelsERK11SkImageInfoPvmRKN16SkImageGenerator7OptionsE to i8*), i8* bitcast (i1 (%class.SkImageGenerator*, %class.GrRecordingContext*)* @_ZNK16SkImageGenerator9onIsValidEP18GrRecordingContext to i8*), i8* bitcast (i1 (%class.SkCodecImageGenerator*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)* @_ZNK21SkCodecImageGenerator15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ to i8*), i8* bitcast (i1 (%class.SkCodecImageGenerator*, %class.SkYUVAPixmaps*)* @_ZN21SkCodecImageGenerator15onGetYUVAPlanesERK13SkYUVAPixmaps to i8*), i8* bitcast (void ()* @_ZN16SkImageGenerator17onGenerateTextureEP18GrRecordingContextRK11SkImageInfoRK8SkIPoint11GrMipmapped19GrImageTexGenPolicy to i8*)] }, align 8
@_ZTV16SkImageGenerator = external unnamed_addr constant { [10 x i8*] }, align 8

@_ZN21SkCodecImageGeneratorC1ENSt3__110unique_ptrI7SkCodecNS0_14default_deleteIS2_EEEE5sk_spI6SkDataE = hidden unnamed_addr alias void (%class.SkCodecImageGenerator*, %class.SkCodec*, %class.sk_sp.7*), void (%class.SkCodecImageGenerator*, %class.SkCodec*, %class.sk_sp.7*)* @_ZN21SkCodecImageGeneratorC2ENSt3__110unique_ptrI7SkCodecNS0_14default_deleteIS2_EEEE5sk_spI6SkDataE

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkImageGenerator* @_ZN21SkCodecImageGenerator20MakeFromEncodedCodecE5sk_spI6SkDataE(%class.sk_sp.7* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.7, align 8
  %3 = alloca %class.sk_sp.7, align 8
  %4 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %2, i64 0, i32 0
  %5 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %0, i64 0, i32 0
  %6 = load %class.SkData*, %class.SkData** %5, align 8
  %7 = icmp eq %class.SkData* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkData, %class.SkData* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  br label %11

11:                                               ; preds = %1, %8
  store %class.SkData* %6, %class.SkData** %4, align 8
  %12 = call %class.SkCodec* @_ZN7SkCodec12MakeFromDataE5sk_spI6SkDataEP16SkPngChunkReader(%class.sk_sp.7* nonnull %2, %class.SkPngChunkReader* null) #8
  %13 = load %class.SkData*, %class.SkData** %4, align 8
  %14 = icmp eq %class.SkData* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkData, %class.SkData* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %13) #8
  %20 = bitcast %class.SkData* %13 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %20) #8
  br label %21

21:                                               ; preds = %11, %15, %19
  %22 = icmp eq %class.SkCodec* %12, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %21
  %24 = call i8* @_Znwm(i64 56) #9
  %25 = bitcast i8* %24 to %class.SkCodecImageGenerator*
  %26 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %3, i64 0, i32 0
  %27 = load %class.SkData*, %class.SkData** %5, align 8
  %28 = icmp eq %class.SkData* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %class.SkData, %class.SkData* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 1 monotonic
  br label %32

32:                                               ; preds = %23, %29
  store %class.SkData* %27, %class.SkData** %26, align 8
  call void @_ZN21SkCodecImageGeneratorC2ENSt3__110unique_ptrI7SkCodecNS0_14default_deleteIS2_EEEE5sk_spI6SkDataE(%class.SkCodecImageGenerator* nonnull %25, %class.SkCodec* nonnull %12, %class.sk_sp.7* nonnull %3)
  %33 = ptrtoint i8* %24 to i64
  %34 = load %class.SkData*, %class.SkData** %26, align 8
  %35 = icmp eq %class.SkData* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %class.SkData, %class.SkData* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 -1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %42

40:                                               ; preds = %36
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %34) #8
  %41 = bitcast %class.SkData* %34 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %41) #8
  br label %42

42:                                               ; preds = %21, %40, %36, %32
  %43 = phi i64 [ %33, %32 ], [ %33, %36 ], [ %33, %40 ], [ 0, %21 ]
  %44 = inttoptr i64 %43 to %class.SkImageGenerator*
  ret %class.SkImageGenerator* %44
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %class.SkCodec* @_ZN7SkCodec12MakeFromDataE5sk_spI6SkDataEP16SkPngChunkReader(%class.sk_sp.7*, %class.SkPngChunkReader*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkImageGenerator* @_ZN21SkCodecImageGenerator13MakeFromCodecENSt3__110unique_ptrI7SkCodecNS0_14default_deleteIS2_EEEE(%class.SkCodec*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.7, align 8
  %3 = icmp eq %class.SkCodec* %0, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %1
  %5 = tail call i8* @_Znwm(i64 56) #9
  %6 = bitcast i8* %5 to %class.SkCodecImageGenerator*
  %7 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %2, i64 0, i32 0
  store %class.SkData* null, %class.SkData** %7, align 8
  call void @_ZN21SkCodecImageGeneratorC2ENSt3__110unique_ptrI7SkCodecNS0_14default_deleteIS2_EEEE5sk_spI6SkDataE(%class.SkCodecImageGenerator* nonnull %6, %class.SkCodec* nonnull %0, %class.sk_sp.7* nonnull %2)
  %8 = ptrtoint i8* %5 to i64
  %9 = load %class.SkData*, %class.SkData** %7, align 8
  %10 = icmp eq %class.SkData* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.SkData, %class.SkData* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 -1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %9) #8
  %16 = bitcast %class.SkData* %9 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %16) #8
  br label %17

17:                                               ; preds = %1, %15, %11, %4
  %18 = phi i64 [ %8, %4 ], [ %8, %11 ], [ %8, %15 ], [ 0, %1 ]
  %19 = inttoptr i64 %18 to %class.SkImageGenerator*
  ret %class.SkImageGenerator* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SkCodecImageGeneratorC2ENSt3__110unique_ptrI7SkCodecNS0_14default_deleteIS2_EEEE5sk_spI6SkDataE(%class.SkCodecImageGenerator*, %class.SkCodec*, %class.sk_sp.7* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkImageInfo, align 8
  %5 = alloca %struct.SkImageInfo, align 8
  %6 = ptrtoint %class.SkCodec* %1 to i64
  %7 = bitcast %class.SkCodecImageGenerator* %0 to %class.SkImageGenerator*
  %8 = bitcast %struct.SkImageInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #8
  %9 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 2
  %12 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %1, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false) #8, !alias.scope !2
  call void @_ZNK13SkEncodedInfo13makeImageInfoEv(%struct.SkImageInfo* nonnull sret %5, %struct.SkEncodedInfo* %12) #8
  %13 = load i32, i32* %11, align 4, !alias.scope !2
  %14 = icmp eq i32 %13, 3
  br i1 %14, label %15, label %44

15:                                               ; preds = %3
  %16 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 1
  %17 = bitcast %struct.SkISize* %16 to i64*
  %18 = load i64, i64* %17, align 8, !alias.scope !2, !noalias !5
  %19 = load i32, i32* %10, align 8, !alias.scope !2, !noalias !8
  %20 = load %class.SkColorSpace*, %class.SkColorSpace** %9, align 8, !alias.scope !2
  %21 = icmp eq %class.SkColorSpace* %20, null
  br i1 %21, label %22, label %26

22:                                               ; preds = %15
  %23 = zext i32 %19 to i64
  %24 = or i64 %23, 8589934592
  %25 = bitcast %struct.SkImageInfo* %5 to i64*
  store i64 0, i64* %25, align 8, !alias.scope !2
  br label %41

26:                                               ; preds = %15
  %27 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 1 monotonic, !noalias !11
  %29 = load %class.SkColorSpace*, %class.SkColorSpace** %9, align 8, !alias.scope !2
  %30 = ptrtoint %class.SkColorSpace* %20 to i64
  %31 = zext i32 %19 to i64
  %32 = or i64 %31, 8589934592
  %33 = bitcast %struct.SkImageInfo* %5 to i64*
  store i64 %30, i64* %33, align 8, !alias.scope !2
  %34 = icmp eq %class.SkColorSpace* %29, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %26
  %36 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  %40 = bitcast %class.SkColorSpace* %29 to i8*
  call void @_ZdlPv(i8* %40) #9
  br label %41

41:                                               ; preds = %39, %35, %26, %22
  %42 = phi i64 [ %24, %22 ], [ %32, %26 ], [ %32, %35 ], [ %32, %39 ]
  %43 = bitcast i32* %10 to i64*
  store i64 %42, i64* %43, align 8, !alias.scope !2
  store i64 %18, i64* %17, align 8, !alias.scope !2
  br label %44

44:                                               ; preds = %41, %3
  %45 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %1, i64 0, i32 7
  %46 = load i32, i32* %45, align 4, !noalias !2
  %47 = icmp sgt i32 %46, 4
  br i1 %47, label %48, label %76

48:                                               ; preds = %44
  %49 = bitcast %struct.SkImageInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #8, !noalias !2
  call void @_ZN12SkPixmapPriv15SwapWidthHeightERK11SkImageInfo(%struct.SkImageInfo* nonnull sret %4, %struct.SkImageInfo* nonnull dereferenceable(24) %5) #8
  %50 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %struct.SkImageInfo* %4 to i64*
  %52 = load i64, i64* %51, align 8, !noalias !2
  store %class.SkColorSpace* null, %class.SkColorSpace** %50, align 8, !noalias !2
  %53 = load %class.SkColorSpace*, %class.SkColorSpace** %9, align 8, !alias.scope !2
  %54 = bitcast %struct.SkImageInfo* %5 to i64*
  store i64 %52, i64* %54, align 8, !alias.scope !2
  %55 = icmp eq %class.SkColorSpace* %53, null
  br i1 %55, label %62, label %56

56:                                               ; preds = %48
  %57 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 -1 acq_rel
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %62

60:                                               ; preds = %56
  %61 = bitcast %class.SkColorSpace* %53 to i8*
  call void @_ZdlPv(i8* %61) #9
  br label %62

62:                                               ; preds = %60, %56, %48
  %63 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 1
  %64 = bitcast i32* %63 to <2 x i64>*
  %65 = load <2 x i64>, <2 x i64>* %64, align 8, !noalias !2
  %66 = bitcast i32* %10 to <2 x i64>*
  store <2 x i64> %65, <2 x i64>* %66, align 8, !alias.scope !2
  %67 = load %class.SkColorSpace*, %class.SkColorSpace** %50, align 8, !noalias !2
  %68 = icmp eq %class.SkColorSpace* %67, null
  br i1 %68, label %75, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = atomicrmw add i32* %70, i32 -1 acq_rel
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %75

73:                                               ; preds = %69
  %74 = bitcast %class.SkColorSpace* %67 to i8*
  call void @_ZdlPv(i8* %74) #9
  br label %75

75:                                               ; preds = %73, %69, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #8, !noalias !2
  br label %76

76:                                               ; preds = %44, %75
  call void @_ZN16SkImageGeneratorC2ERK11SkImageInfoj(%class.SkImageGenerator* %7, %struct.SkImageInfo* nonnull dereferenceable(24) %5, i32 0) #8
  %77 = load %class.SkColorSpace*, %class.SkColorSpace** %9, align 8
  %78 = icmp eq %class.SkColorSpace* %77, null
  br i1 %78, label %85, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = atomicrmw add i32* %80, i32 -1 acq_rel
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = bitcast %class.SkColorSpace* %77 to i8*
  call void @_ZdlPv(i8* %84) #9
  br label %85

85:                                               ; preds = %83, %79, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #8
  %86 = getelementptr inbounds %class.SkCodecImageGenerator, %class.SkCodecImageGenerator* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV21SkCodecImageGenerator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %86, align 8
  %87 = getelementptr inbounds %class.SkCodecImageGenerator, %class.SkCodecImageGenerator* %0, i64 0, i32 1
  %88 = bitcast %"class.std::__1::unique_ptr.9"* %87 to i64*
  store i64 %6, i64* %88, align 8
  %89 = getelementptr inbounds %class.SkCodecImageGenerator, %class.SkCodecImageGenerator* %0, i64 0, i32 2
  %90 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %2, i64 0, i32 0
  %91 = bitcast %class.sk_sp.7* %2 to i64*
  %92 = load i64, i64* %91, align 8
  store %class.SkData* null, %class.SkData** %90, align 8
  %93 = bitcast %class.sk_sp.7* %89 to i64*
  store i64 %92, i64* %93, align 8
  ret void
}

declare void @_ZN16SkImageGeneratorC2ERK11SkImageInfoj(%class.SkImageGenerator*, %struct.SkImageInfo* dereferenceable(24), i32) unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN21SkCodecImageGenerator16onRefEncodedDataEv(%class.sk_sp.7* noalias nocapture sret, %class.SkCodecImageGenerator* nocapture readonly) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.SkCodecImageGenerator, %class.SkCodecImageGenerator* %1, i64 0, i32 2, i32 0
  %5 = load %class.SkData*, %class.SkData** %4, align 8
  %6 = icmp eq %class.SkData* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkData, %class.SkData* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  store %class.SkData* %5, %class.SkData** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN21SkCodecImageGenerator9getPixelsERK11SkImageInfoPvmPKN7SkCodec7OptionsE(%class.SkCodecImageGenerator*, %struct.SkImageInfo* nocapture readonly dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.SkAutoPixmapStorage, align 8
  %7 = alloca %struct.SkImageInfo, align 8
  %8 = alloca %struct.SkImageInfo, align 8
  %9 = alloca %class.SkPixmap, align 8
  %10 = bitcast %class.SkPixmap* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #8
  %11 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %9, i64 0, i32 2
  %12 = bitcast %struct.SkImageInfo* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  %13 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %9, i64 0, i32 0
  store i8* %2, i8** %13, align 8
  %14 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %9, i64 0, i32 1
  store i64 %3, i64* %14, align 8
  %15 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %class.SkColorSpace*, %class.SkColorSpace** %16, align 8
  %18 = icmp eq %class.SkColorSpace* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %5
  %20 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic
  br label %22

22:                                               ; preds = %5, %19
  store %class.SkColorSpace* %17, %class.SkColorSpace** %15, align 8
  %23 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %9, i64 0, i32 2, i32 0, i32 1
  %24 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %25 = bitcast i32* %24 to <2 x i64>*
  %26 = load <2 x i64>, <2 x i64>* %25, align 8
  %27 = bitcast i32* %23 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  %28 = getelementptr inbounds %class.SkCodecImageGenerator, %class.SkCodecImageGenerator* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %29 = load %class.SkCodec*, %class.SkCodec** %28, align 8
  %30 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %29, i64 0, i32 7
  %31 = load i32, i32* %30, align 4
  %32 = bitcast %class.SkAutoPixmapStorage* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 48, i1 false) #8
  call void @_ZN19SkAutoPixmapStorageC1Ev(%class.SkAutoPixmapStorage* nonnull %6) #8
  %33 = icmp eq i32 %31, 1
  br i1 %33, label %87, label %34

34:                                               ; preds = %22
  %35 = bitcast %struct.SkImageInfo* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #8
  %36 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 24, i1 false) #8
  br i1 %18, label %43, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 1 monotonic
  %41 = bitcast i32* %23 to <2 x i64>*
  %42 = load <2 x i64>, <2 x i64>* %41, align 8
  br label %43

43:                                               ; preds = %38, %34
  %44 = phi <2 x i64> [ %42, %38 ], [ %26, %34 ]
  store %class.SkColorSpace* %17, %class.SkColorSpace** %36, align 8
  %45 = bitcast i32* %37 to <2 x i64>*
  store <2 x i64> %44, <2 x i64>* %45, align 8
  %46 = icmp sgt i32 %31, 4
  br i1 %46, label %47, label %75

47:                                               ; preds = %43
  %48 = bitcast %struct.SkImageInfo* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #8
  call void @_ZN12SkPixmapPriv15SwapWidthHeightERK11SkImageInfo(%struct.SkImageInfo* nonnull sret %8, %struct.SkImageInfo* nonnull dereferenceable(24) %7) #8
  %49 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 0, i32 0
  %50 = bitcast %struct.SkImageInfo* %8 to i64*
  %51 = load i64, i64* %50, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %49, align 8
  %52 = load %class.SkColorSpace*, %class.SkColorSpace** %36, align 8
  %53 = bitcast %struct.SkImageInfo* %7 to i64*
  store i64 %51, i64* %53, align 8
  %54 = icmp eq %class.SkColorSpace* %52, null
  br i1 %54, label %61, label %55

55:                                               ; preds = %47
  %56 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 -1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = bitcast %class.SkColorSpace* %52 to i8*
  call void @_ZdlPv(i8* %60) #9
  br label %61

61:                                               ; preds = %59, %55, %47
  %62 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 1
  %63 = bitcast i32* %62 to <2 x i64>*
  %64 = load <2 x i64>, <2 x i64>* %63, align 8
  %65 = bitcast i32* %37 to <2 x i64>*
  store <2 x i64> %64, <2 x i64>* %65, align 8
  %66 = load %class.SkColorSpace*, %class.SkColorSpace** %49, align 8
  %67 = icmp eq %class.SkColorSpace* %66, null
  br i1 %67, label %74, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 -1 acq_rel
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %74

72:                                               ; preds = %68
  %73 = bitcast %class.SkColorSpace* %66 to i8*
  call void @_ZdlPv(i8* %73) #9
  br label %74

74:                                               ; preds = %72, %68, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #8
  br label %75

75:                                               ; preds = %74, %43
  %76 = call zeroext i1 @_ZN19SkAutoPixmapStorage8tryAllocERK11SkImageInfo(%class.SkAutoPixmapStorage* nonnull %6, %struct.SkImageInfo* nonnull dereferenceable(24) %7) #8
  %77 = getelementptr inbounds %class.SkAutoPixmapStorage, %class.SkAutoPixmapStorage* %6, i64 0, i32 0
  %78 = load %class.SkColorSpace*, %class.SkColorSpace** %36, align 8
  %79 = icmp eq %class.SkColorSpace* %78, null
  br i1 %79, label %86, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw add i32* %81, i32 -1 acq_rel
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %86

84:                                               ; preds = %80
  %85 = bitcast %class.SkColorSpace* %78 to i8*
  call void @_ZdlPv(i8* %85) #9
  br label %86

86:                                               ; preds = %84, %80, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #8
  br i1 %76, label %87, label %101

87:                                               ; preds = %86, %22
  %88 = phi %class.SkPixmap* [ %77, %86 ], [ %9, %22 ]
  %89 = load %class.SkCodec*, %class.SkCodec** %28, align 8
  %90 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %88, i64 0, i32 2
  %91 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %88, i64 0, i32 0
  %92 = load i8*, i8** %91, align 8
  %93 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %88, i64 0, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = call i32 @_ZN7SkCodec9getPixelsERK11SkImageInfoPvmPKNS_7OptionsE(%class.SkCodec* %89, %struct.SkImageInfo* dereferenceable(24) %90, i8* %92, i64 %94, %"struct.SkCodec::Options"* %4) #8
  %96 = icmp ult i32 %95, 3
  br i1 %96, label %97, label %101

97:                                               ; preds = %87
  %98 = icmp eq %class.SkPixmap* %88, %9
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = call zeroext i1 @_ZN12SkPixmapPriv6OrientERK8SkPixmapS2_15SkEncodedOrigin(%class.SkPixmap* nonnull dereferenceable(40) %9, %class.SkPixmap* dereferenceable(40) %88, i32 %31) #8
  br label %101

101:                                              ; preds = %86, %87, %97, %99
  %102 = phi i1 [ %100, %99 ], [ false, %86 ], [ false, %87 ], [ true, %97 ]
  call void @_ZN19SkAutoPixmapStorageD1Ev(%class.SkAutoPixmapStorage* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #8
  %103 = load %class.SkColorSpace*, %class.SkColorSpace** %15, align 8
  %104 = icmp eq %class.SkColorSpace* %103, null
  br i1 %104, label %111, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = atomicrmw add i32* %106, i32 -1 acq_rel
  %108 = icmp eq i32 %107, 1
  br i1 %108, label %109, label %111

109:                                              ; preds = %105
  %110 = bitcast %class.SkColorSpace* %103 to i8*
  call void @_ZdlPv(i8* %110) #9
  br label %111

111:                                              ; preds = %101, %105, %109
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #8
  ret i1 %102
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN21SkCodecImageGenerator11onGetPixelsERK11SkImageInfoPvmRKN16SkImageGenerator7OptionsE(%class.SkCodecImageGenerator*, %struct.SkImageInfo* nocapture readonly dereferenceable(24), i8*, i64, %"struct.SkImageGenerator::Options"* nocapture readnone dereferenceable(1)) unnamed_addr #0 align 2 {
  %6 = tail call zeroext i1 @_ZN21SkCodecImageGenerator9getPixelsERK11SkImageInfoPvmPKN7SkCodec7OptionsE(%class.SkCodecImageGenerator* %0, %struct.SkImageInfo* dereferenceable(24) %1, i8* %2, i64 %3, %"struct.SkCodec::Options"* null)
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK21SkCodecImageGenerator15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_(%class.SkCodecImageGenerator* nocapture readonly, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8), %class.SkYUVAPixmapInfo*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkCodecImageGenerator, %class.SkCodecImageGenerator* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %class.SkCodec*, %class.SkCodec** %4, align 8
  %6 = tail call zeroext i1 @_ZNK7SkCodec13queryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_(%class.SkCodec* %5, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8) %1, %class.SkYUVAPixmapInfo* %2) #8
  ret i1 %6
}

declare zeroext i1 @_ZNK7SkCodec13queryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_(%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8), %class.SkYUVAPixmapInfo*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN21SkCodecImageGenerator15onGetYUVAPlanesERK13SkYUVAPixmaps(%class.SkCodecImageGenerator* nocapture readonly, %class.SkYUVAPixmaps* dereferenceable(208)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkCodecImageGenerator, %class.SkCodecImageGenerator* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.SkCodec*, %class.SkCodec** %3, align 8
  %5 = tail call i32 @_ZN7SkCodec13getYUVAPlanesERK13SkYUVAPixmaps(%class.SkCodec* %4, %class.SkYUVAPixmaps* dereferenceable(208) %1) #8
  %6 = icmp ult i32 %5, 3
  ret i1 %6
}

declare i32 @_ZN7SkCodec13getYUVAPlanesERK13SkYUVAPixmaps(%class.SkCodec*, %class.SkYUVAPixmaps* dereferenceable(208)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK21SkCodecImageGenerator19getScaledDimensionsEf(%class.SkCodecImageGenerator* nocapture readonly, float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkCodecImageGenerator, %class.SkCodecImageGenerator* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.SkCodec*, %class.SkCodec** %3, align 8
  %5 = fcmp ugt float %1, 0.000000e+00
  br i1 %5, label %6, label %24

6:                                                ; preds = %2
  %7 = fcmp ult float %1, 1.000000e+00
  br i1 %7, label %17, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %4, i64 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %4, i64 0, i32 1, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = shl nuw i64 %13, 32
  %15 = zext i32 %10 to i64
  %16 = or i64 %14, %15
  br label %24

17:                                               ; preds = %6
  %18 = bitcast %class.SkCodec* %4 to i64 (%class.SkCodec*, float)***
  %19 = load i64 (%class.SkCodec*, float)**, i64 (%class.SkCodec*, float)*** %18, align 8
  %20 = getelementptr inbounds i64 (%class.SkCodec*, float)*, i64 (%class.SkCodec*, float)** %19, i64 2
  %21 = load i64 (%class.SkCodec*, float)*, i64 (%class.SkCodec*, float)** %20, align 8
  %22 = tail call i64 %21(%class.SkCodec* %4, float %1) #8
  %23 = load %class.SkCodec*, %class.SkCodec** %3, align 8
  br label %24

24:                                               ; preds = %2, %8, %17
  %25 = phi %class.SkCodec* [ %4, %8 ], [ %23, %17 ], [ %4, %2 ]
  %26 = phi i64 [ %16, %8 ], [ %22, %17 ], [ 0, %2 ]
  %27 = lshr i64 %26, 32
  %28 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %25, i64 0, i32 7
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, 4
  %31 = select i1 %30, i64 %26, i64 %27
  %32 = select i1 %30, i64 %27, i64 %26
  %33 = shl i64 %31, 32
  %34 = and i64 %32, 4294967295
  %35 = or i64 %33, %34
  ret i64 %35
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21SkCodecImageGeneratorD2Ev(%class.SkCodecImageGenerator*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkCodecImageGenerator, %class.SkCodecImageGenerator* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV21SkCodecImageGenerator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkCodecImageGenerator, %class.SkCodecImageGenerator* %0, i64 0, i32 2, i32 0
  %4 = load %class.SkData*, %class.SkData** %3, align 8
  %5 = icmp eq %class.SkData* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkData, %class.SkData* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %4) #8
  %11 = bitcast %class.SkData* %4 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %11) #8
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %class.SkCodecImageGenerator, %class.SkCodecImageGenerator* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %class.SkCodec*, %class.SkCodec** %13, align 8
  store %class.SkCodec* null, %class.SkCodec** %13, align 8
  %15 = icmp eq %class.SkCodec* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = bitcast %class.SkCodec* %14 to void (%class.SkCodec*)***
  %18 = load void (%class.SkCodec*)**, void (%class.SkCodec*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkCodec*)*, void (%class.SkCodec*)** %18, i64 1
  %20 = load void (%class.SkCodec*)*, void (%class.SkCodec*)** %19, align 8
  tail call void %20(%class.SkCodec* nonnull %14) #8
  br label %21

21:                                               ; preds = %12, %16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV16SkImageGenerator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %22 = getelementptr inbounds %class.SkCodecImageGenerator, %class.SkCodecImageGenerator* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %23 = load %class.SkColorSpace*, %class.SkColorSpace** %22, align 8
  %24 = icmp eq %class.SkColorSpace* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 -1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = bitcast %class.SkColorSpace* %23 to i8*
  tail call void @_ZdlPv(i8* %30) #9
  br label %31

31:                                               ; preds = %21, %25, %29
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21SkCodecImageGeneratorD0Ev(%class.SkCodecImageGenerator*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkCodecImageGenerator, %class.SkCodecImageGenerator* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV21SkCodecImageGenerator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkCodecImageGenerator, %class.SkCodecImageGenerator* %0, i64 0, i32 2, i32 0
  %4 = load %class.SkData*, %class.SkData** %3, align 8
  %5 = icmp eq %class.SkData* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkData, %class.SkData* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %4) #8
  %11 = bitcast %class.SkData* %4 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %11) #8
  br label %12

12:                                               ; preds = %10, %6, %1
  %13 = getelementptr inbounds %class.SkCodecImageGenerator, %class.SkCodecImageGenerator* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %class.SkCodec*, %class.SkCodec** %13, align 8
  store %class.SkCodec* null, %class.SkCodec** %13, align 8
  %15 = icmp eq %class.SkCodec* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = bitcast %class.SkCodec* %14 to void (%class.SkCodec*)***
  %18 = load void (%class.SkCodec*)**, void (%class.SkCodec*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkCodec*)*, void (%class.SkCodec*)** %18, i64 1
  %20 = load void (%class.SkCodec*)*, void (%class.SkCodec*)** %19, align 8
  tail call void %20(%class.SkCodec* nonnull %14) #8
  br label %21

21:                                               ; preds = %16, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV16SkImageGenerator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %22 = getelementptr inbounds %class.SkCodecImageGenerator, %class.SkCodecImageGenerator* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %23 = load %class.SkColorSpace*, %class.SkColorSpace** %22, align 8
  %24 = icmp eq %class.SkColorSpace* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 -1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = bitcast %class.SkColorSpace* %23 to i8*
  tail call void @_ZdlPv(i8* %30) #9
  br label %31

31:                                               ; preds = %21, %25, %29
  %32 = bitcast %class.SkCodecImageGenerator* %0 to i8*
  tail call void @_ZdlPv(i8* %32) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK16SkImageGenerator9onIsValidEP18GrRecordingContext(%class.SkImageGenerator*, %class.GrRecordingContext*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN16SkImageGenerator17onGenerateTextureEP18GrRecordingContextRK11SkImageInfoRK8SkIPoint11GrMipmapped19GrImageTexGenPolicy() unnamed_addr

declare void @_ZN12SkPixmapPriv15SwapWidthHeightERK11SkImageInfo(%struct.SkImageInfo* sret, %struct.SkImageInfo* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK13SkEncodedInfo13makeImageInfoEv(%struct.SkImageInfo* noalias sret, %struct.SkEncodedInfo*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = alloca %class.sk_sp, align 8
  %5 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %7 [
    i32 0, label %11
    i32 2, label %10
  ]

7:                                                ; preds = %2
  %8 = icmp eq i32 %6, 3
  %9 = select i1 %8, i64 2, i64 6
  br label %11

10:                                               ; preds = %2
  br label %11

11:                                               ; preds = %2, %10, %7
  %12 = phi i64 [ 11, %2 ], [ %9, %7 ], [ 1, %10 ]
  %13 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %15, i64 4294967296, i64 12884901888
  %17 = bitcast %class.sk_sp* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %18 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  store %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*), %class.SkColorSpace** %18, align 8
  %19 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %20 = load %"class.SkEncodedInfo::ICCProfile"*, %"class.SkEncodedInfo::ICCProfile"** %19, align 8
  %21 = icmp eq %"class.SkEncodedInfo::ICCProfile"* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %11
  store %class.SkColorSpace* null, %class.SkColorSpace** %18, align 8
  br label %29

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %20, i64 0, i32 0
  call void @_ZN12SkColorSpace4MakeERK16skcms_ICCProfile(%class.sk_sp* nonnull sret %3, %struct.skcms_ICCProfile* dereferenceable(1008) %24) #8
  %25 = load %class.SkColorSpace*, %class.SkColorSpace** %18, align 8
  %26 = icmp eq %class.SkColorSpace* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = ptrtoint %class.SkColorSpace* %25 to i64
  br label %54

29:                                               ; preds = %23, %22
  %30 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #8
  call void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp* nonnull sret %4) #8
  %31 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %32 = bitcast %class.sk_sp* %4 to i64*
  %33 = load i64, i64* %32, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %31, align 8
  %34 = load %class.SkColorSpace*, %class.SkColorSpace** %18, align 8
  %35 = bitcast %class.sk_sp* %3 to i64*
  store i64 %33, i64* %35, align 8
  %36 = icmp eq %class.SkColorSpace* %34, null
  br i1 %36, label %52, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = bitcast %class.SkColorSpace* %34 to i8*
  call void @_ZdlPv(i8* %42) #9
  br label %43

43:                                               ; preds = %37, %41
  %44 = load %class.SkColorSpace*, %class.SkColorSpace** %31, align 8
  %45 = icmp eq %class.SkColorSpace* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = bitcast %class.SkColorSpace* %44 to i8*
  call void @_ZdlPv(i8* %51) #9
  br label %52

52:                                               ; preds = %29, %43, %46, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8
  %53 = load i64, i64* %35, align 8
  br label %54

54:                                               ; preds = %52, %27
  %55 = phi i64 [ %28, %27 ], [ %53, %52 ]
  %56 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = or i64 %16, %12
  %61 = zext i32 %59 to i64
  %62 = shl nuw i64 %61, 32
  %63 = zext i32 %57 to i64
  %64 = or i64 %62, %63
  %65 = bitcast %struct.SkImageInfo* %0 to i64*
  store i64 %55, i64* %65, align 8, !alias.scope !14
  %66 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 1
  %67 = bitcast i32* %66 to i64*
  store i64 %60, i64* %67, align 8, !alias.scope !14
  %68 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 1
  %69 = bitcast %struct.SkISize* %68 to i64*
  store i64 %64, i64* %69, align 8, !alias.scope !14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  ret void
}

declare void @_ZN12SkColorSpace4MakeERK16skcms_ICCProfile(%class.sk_sp* sret, %struct.skcms_ICCProfile* dereferenceable(1008)) local_unnamed_addr #2

declare void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp* sret) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #7

declare void @_ZN19SkAutoPixmapStorageC1Ev(%class.SkAutoPixmapStorage*) unnamed_addr #2

declare zeroext i1 @_ZN19SkAutoPixmapStorage8tryAllocERK11SkImageInfo(%class.SkAutoPixmapStorage*, %struct.SkImageInfo* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN12SkPixmapPriv6OrientERK8SkPixmapS2_15SkEncodedOrigin(%class.SkPixmap* dereferenceable(40), %class.SkPixmap* dereferenceable(40), i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN19SkAutoPixmapStorageD1Ev(%class.SkAutoPixmapStorage*) unnamed_addr #7

declare i32 @_ZN7SkCodec9getPixelsERK11SkImageInfoPvmPKNS_7OptionsE(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZL11adjust_infoP7SkCodec: argument 0"}
!4 = distinct !{!4, !"_ZL11adjust_infoP7SkCodec"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!7 = distinct !{!7, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType"}
!8 = !{!9, !6}
!9 = distinct !{!9, !10, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!10 = distinct !{!10, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType"}
!11 = !{!12, !9, !6}
!12 = distinct !{!12, !13, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!13 = distinct !{!13, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!16 = distinct !{!16, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
