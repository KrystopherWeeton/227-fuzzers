; ModuleID = '../../ui/events/fraction_of_time_without_user_input_recorder.cc'
source_filename = "../../ui/events/fraction_of_time_without_user_input_recorder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::FractionOfTimeWithoutUserInputRecorder" = type { i32 (...)**, %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeDelta" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.1", [4 x i8] }>
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i32 }

$_ZNK4base9TimeDeltadvES0_ = comdat any

@_ZTVN2ui38FractionOfTimeWithoutUserInputRecorderE = hidden unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::FractionOfTimeWithoutUserInputRecorder"*, i64, i64)* @_ZN2ui38FractionOfTimeWithoutUserInputRecorder20RecordActiveIntervalEN4base9TimeTicksES2_ to i8*)] }, align 8
@.str = private unnamed_addr constant [37 x i8] c"Event.FractionOfTimeWithoutUserInput\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.2 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"!is_zero() || !a.is_zero()\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"!is_inf() || !a.is_inf()\00", align 1
@_ZZNK2ui38FractionOfTimeWithoutUserInputRecorder11RecordToUmaEfE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN2ui38FractionOfTimeWithoutUserInputRecorderC1Ev = hidden unnamed_addr alias void (%"class.ui::FractionOfTimeWithoutUserInputRecorder"*), void (%"class.ui::FractionOfTimeWithoutUserInputRecorder"*)* @_ZN2ui38FractionOfTimeWithoutUserInputRecorderC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui38FractionOfTimeWithoutUserInputRecorderC2Ev(%"class.ui::FractionOfTimeWithoutUserInputRecorder"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::FractionOfTimeWithoutUserInputRecorder", %"class.ui::FractionOfTimeWithoutUserInputRecorder"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN2ui38FractionOfTimeWithoutUserInputRecorderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::FractionOfTimeWithoutUserInputRecorder", %"class.ui::FractionOfTimeWithoutUserInputRecorder"* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.ui::FractionOfTimeWithoutUserInputRecorder", %"class.ui::FractionOfTimeWithoutUserInputRecorder"* %0, i64 0, i32 5, i32 0
  %5 = bitcast i64* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false)
  %6 = bitcast i64* %4 to <2 x i64>*
  store <2 x i64> <i64 10000000, i64 50000>, <2 x i64>* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui38FractionOfTimeWithoutUserInputRecorder17RecordEventAtTimeEN4base9TimeTicksE(%"class.ui::FractionOfTimeWithoutUserInputRecorder"*, i64) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.ui::FractionOfTimeWithoutUserInputRecorder", %"class.ui::FractionOfTimeWithoutUserInputRecorder"* %0, i64 0, i32 6, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = icmp slt i64 %5, 0
  %10 = select i1 %9, i64 -9223372036854775808, i64 9223372036854775807
  %11 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %1, i64 %5) #6
  %12 = extractvalue { i64, i1 } %11, 1
  %13 = extractvalue { i64, i1 } %11, 0
  %14 = select i1 %12, i64 %10, i64 %13, !prof !2
  br label %23

15:                                               ; preds = %2
  %16 = add i64 %1, -9223372036854775807
  %17 = icmp ugt i64 %16, 1
  %18 = icmp eq i64 %5, %1
  %19 = or i1 %17, %18
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #6
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #6
  br label %23

23:                                               ; preds = %8, %15, %20
  %24 = phi i64 [ %14, %8 ], [ %5, %15 ], [ %5, %20 ]
  %25 = getelementptr inbounds %"class.ui::FractionOfTimeWithoutUserInputRecorder", %"class.ui::FractionOfTimeWithoutUserInputRecorder"* %0, i64 0, i32 2, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %23
  store i64 %1, i64* %25, align 8
  br label %29

29:                                               ; preds = %28, %23
  %30 = phi i64 [ %1, %28 ], [ %26, %23 ]
  %31 = getelementptr inbounds %"class.ui::FractionOfTimeWithoutUserInputRecorder", %"class.ui::FractionOfTimeWithoutUserInputRecorder"* %0, i64 0, i32 4, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %29
  %35 = icmp slt i64 %32, %1
  br i1 %35, label %36, label %42

36:                                               ; preds = %34
  %37 = bitcast %"class.ui::FractionOfTimeWithoutUserInputRecorder"* %0 to void (%"class.ui::FractionOfTimeWithoutUserInputRecorder"*, i64, i64)***
  %38 = load void (%"class.ui::FractionOfTimeWithoutUserInputRecorder"*, i64, i64)**, void (%"class.ui::FractionOfTimeWithoutUserInputRecorder"*, i64, i64)*** %37, align 8
  %39 = load void (%"class.ui::FractionOfTimeWithoutUserInputRecorder"*, i64, i64)*, void (%"class.ui::FractionOfTimeWithoutUserInputRecorder"*, i64, i64)** %38, align 8
  call void %39(%"class.ui::FractionOfTimeWithoutUserInputRecorder"* %0, i64 %30, i64 %32) #6
  br label %40

40:                                               ; preds = %29, %36
  %41 = phi i64* [ %25, %36 ], [ %31, %29 ]
  store i64 %1, i64* %41, align 8
  br label %42

42:                                               ; preds = %40, %34
  %43 = getelementptr inbounds %"class.ui::FractionOfTimeWithoutUserInputRecorder", %"class.ui::FractionOfTimeWithoutUserInputRecorder"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 %24, i64* %43, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui38FractionOfTimeWithoutUserInputRecorder20RecordActiveIntervalEN4base9TimeTicksES2_(%"class.ui::FractionOfTimeWithoutUserInputRecorder"*, i64, i64) unnamed_addr #1 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store i64 %1, i64* %6, align 8
  store i64 %2, i64* %7, align 8
  %9 = getelementptr inbounds %"class.ui::FractionOfTimeWithoutUserInputRecorder", %"class.ui::FractionOfTimeWithoutUserInputRecorder"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %9, i64 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %3
  store i64 %1, i64* %10, align 8
  br label %14

14:                                               ; preds = %13, %3
  %15 = phi i64 [ %1, %13 ], [ %11, %3 ]
  %16 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  store i64 0, i64* %8, align 8
  %17 = getelementptr inbounds %"class.ui::FractionOfTimeWithoutUserInputRecorder", %"class.ui::FractionOfTimeWithoutUserInputRecorder"* %0, i64 0, i32 5, i32 0
  %18 = bitcast %"class.logging::CheckError"* %5 to i8*
  %19 = bitcast i64* %6 to %"class.base::TimeTicks"*
  %20 = getelementptr inbounds %"class.ui::FractionOfTimeWithoutUserInputRecorder", %"class.ui::FractionOfTimeWithoutUserInputRecorder"* %0, i64 0, i32 1
  %21 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %20, i64 0, i32 0
  %22 = bitcast %"class.logging::CheckError"* %4 to i8*
  br label %23

23:                                               ; preds = %85, %14
  %24 = phi i64 [ %95, %85 ], [ %15, %14 ]
  %25 = load i64, i64* %17, align 8
  %26 = add i64 %25, -9223372036854775807
  %27 = icmp ult i64 %26, 2
  br i1 %27, label %35, label %28

28:                                               ; preds = %23
  %29 = icmp slt i64 %25, 0
  %30 = select i1 %29, i64 -9223372036854775808, i64 9223372036854775807
  %31 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %24, i64 %25) #6
  %32 = extractvalue { i64, i1 } %31, 1
  %33 = extractvalue { i64, i1 } %31, 0
  %34 = select i1 %32, i64 %30, i64 %33, !prof !2
  br label %43

35:                                               ; preds = %23
  %36 = add i64 %24, -9223372036854775807
  %37 = icmp ugt i64 %36, 1
  %38 = icmp eq i64 %24, %25
  %39 = or i1 %38, %37
  br i1 %39, label %43, label %40

40:                                               ; preds = %35
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #6
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  %42 = load i64, i64* %10, align 8
  br label %43

43:                                               ; preds = %28, %35, %40
  %44 = phi i64 [ %24, %28 ], [ %24, %35 ], [ %42, %40 ]
  %45 = phi i64 [ %34, %28 ], [ %25, %35 ], [ %25, %40 ]
  store i64 %45, i64* %8, align 8
  %46 = load i64, i64* %7, align 8
  %47 = icmp slt i64 %45, %46
  %48 = load i64, i64* %6, align 8
  %49 = icmp slt i64 %48, %44
  %50 = select i1 %49, %"class.base::TimeTicks"* %9, %"class.base::TimeTicks"* %19
  %51 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %50, i64 0, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = select i1 %47, i64 %45, i64 %46
  %54 = sub nsw i64 %53, %52
  %55 = icmp sgt i64 %54, 0
  %56 = select i1 %55, i64 %54, i64 0
  %57 = add nsw i64 %56, -9223372036854775807
  %58 = icmp ult i64 %57, 2
  %59 = load i64, i64* %21, align 8
  br i1 %58, label %65, label %60

60:                                               ; preds = %43
  %61 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %59, i64 %56) #6
  %62 = extractvalue { i64, i1 } %61, 1
  %63 = extractvalue { i64, i1 } %61, 0
  %64 = select i1 %62, i64 9223372036854775807, i64 %63, !prof !2
  br label %72

65:                                               ; preds = %43
  %66 = add i64 %59, -9223372036854775807
  %67 = icmp ugt i64 %66, 1
  %68 = icmp eq i64 %59, %56
  %69 = or i1 %67, %68
  br i1 %69, label %72, label %70

70:                                               ; preds = %65
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #6
  %71 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #6
  br label %72

72:                                               ; preds = %60, %65, %70
  %73 = phi i64 [ %64, %60 ], [ 9223372036854775807, %65 ], [ 9223372036854775807, %70 ]
  store i64 %73, i64* %21, align 8
  %74 = icmp slt i64 %46, %45
  br i1 %74, label %96, label %75

75:                                               ; preds = %72
  %76 = load i64, i64* %17, align 8
  %77 = call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* %20, i64 %76)
  %78 = fptrunc double %77 to float
  %79 = load atomic i64, i64* @_ZZNK2ui38FractionOfTimeWithoutUserInputRecorder11RecordToUmaEfE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %80 = inttoptr i64 %79 to %"class.base::HistogramBase"*
  %81 = icmp eq i64 %79, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %75
  %83 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i32 1, i32 101, i32 102, i32 1) #6
  %84 = ptrtoint %"class.base::HistogramBase"* %83 to i64
  store atomic i64 %84, i64* @_ZZNK2ui38FractionOfTimeWithoutUserInputRecorder11RecordToUmaEfE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %85

85:                                               ; preds = %75, %82
  %86 = phi %"class.base::HistogramBase"* [ %80, %75 ], [ %83, %82 ]
  %87 = fsub float 1.000000e+00, %78
  %88 = fmul float %87, 1.000000e+02
  %89 = call float @llvm.round.f32(float %88) #6
  %90 = fptosi float %89 to i32
  %91 = bitcast %"class.base::HistogramBase"* %86 to void (%"class.base::HistogramBase"*, i32)***
  %92 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %92, i64 6
  %94 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %93, align 8
  call void %94(%"class.base::HistogramBase"* %86, i32 %90) #6
  store i64 0, i64* %21, align 8
  %95 = load i64, i64* %8, align 8
  store i64 %95, i64* %10, align 8
  br label %23

96:                                               ; preds = %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui38FractionOfTimeWithoutUserInputRecorder11RecordToUmaEf(%"class.ui::FractionOfTimeWithoutUserInputRecorder"* nocapture readnone, float) local_unnamed_addr #1 align 2 {
  %3 = load atomic i64, i64* @_ZZNK2ui38FractionOfTimeWithoutUserInputRecorder11RecordToUmaEfE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %4 = inttoptr i64 %3 to %"class.base::HistogramBase"*
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i32 1, i32 101, i32 102, i32 1) #6
  %8 = ptrtoint %"class.base::HistogramBase"* %7 to i64
  store atomic i64 %8, i64* @_ZZNK2ui38FractionOfTimeWithoutUserInputRecorder11RecordToUmaEfE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.base::HistogramBase"* [ %4, %2 ], [ %7, %6 ]
  %11 = fsub float 1.000000e+00, %1
  %12 = fmul float %11, 1.000000e+02
  %13 = tail call float @llvm.round.f32(float %12) #6
  %14 = fptosi float %13 to i32
  %15 = bitcast %"class.base::HistogramBase"* %10 to void (%"class.base::HistogramBase"*, i32)***
  %16 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %16, i64 6
  %18 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %17, align 8
  tail call void %18(%"class.base::HistogramBase"* %10, i32 %14) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = or i64 %6, %1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 302, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0)) #6
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #6
  %12 = load i64, i64* %5, align 8
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i64 [ %6, %2 ], [ %12, %9 ]
  %15 = add i64 %14, -9223372036854775807
  %16 = add i64 %1, -9223372036854775807
  %17 = or i64 %15, %16
  %18 = icmp ult i64 %17, 2
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 303, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0)) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  %22 = load i64, i64* %5, align 8
  %23 = add i64 %22, -9223372036854775807
  br label %24

24:                                               ; preds = %13, %19
  %25 = phi i64 [ %15, %13 ], [ %23, %19 ]
  %26 = phi i64 [ %14, %13 ], [ %22, %19 ]
  %27 = icmp ult i64 %25, 2
  %28 = icmp slt i64 %26, 0
  %29 = select i1 %28, double 0xFFF0000000000000, double 0x7FF0000000000000
  %30 = sitofp i64 %26 to double
  %31 = select i1 %27, double %29, double %30
  %32 = icmp ult i64 %16, 2
  %33 = icmp slt i64 %1, 0
  %34 = select i1 %33, double 0xFFF0000000000000, double 0x7FF0000000000000
  %35 = sitofp i64 %1 to double
  %36 = select i1 %32, double %34, double %35
  %37 = fdiv double %31, %36
  ret double %37
}

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
