; ModuleID = '../../net/third_party/quiche/src/quic/core/crypto/quic_crypter.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/crypto/quic_crypter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.quic::QuicCrypter" = type { i32 (...)** }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }

$_ZN4quic11QuicCrypterD2Ev = comdat any

$_ZN4quic11QuicCrypterD0Ev = comdat any

@_ZTVN4quic11QuicCrypterE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.quic::QuicCrypter"*)* @_ZN4quic11QuicCrypterD2Ev to i8*), i8* bitcast (void (%"class.quic::QuicCrypter"*)* @_ZN4quic11QuicCrypterD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.quic::QuicCrypter"*, %"struct.quic::ParsedQuicVersion"*, i8*, i64)* @_ZN4quic11QuicCrypter18SetNoncePrefixOrIVERKNS_17ParsedQuicVersionEN4absl11string_viewE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic11QuicCrypter18SetNoncePrefixOrIVERKNS_17ParsedQuicVersionEN4absl11string_viewE(%"class.quic::QuicCrypter"*, %"struct.quic::ParsedQuicVersion"* dereferenceable(8), i8*, i64) unnamed_addr #0 align 2 {
  %5 = tail call zeroext i1 @_ZNK4quic17ParsedQuicVersion22UsesInitialObfuscatorsEv(%"struct.quic::ParsedQuicVersion"* %1) #3
  %6 = bitcast %"class.quic::QuicCrypter"* %0 to i1 (%"class.quic::QuicCrypter"*, i8*, i64)***
  %7 = load i1 (%"class.quic::QuicCrypter"*, i8*, i64)**, i1 (%"class.quic::QuicCrypter"*, i8*, i64)*** %6, align 8
  br i1 %5, label %8, label %12

8:                                                ; preds = %4
  %9 = getelementptr inbounds i1 (%"class.quic::QuicCrypter"*, i8*, i64)*, i1 (%"class.quic::QuicCrypter"*, i8*, i64)** %7, i64 4
  %10 = load i1 (%"class.quic::QuicCrypter"*, i8*, i64)*, i1 (%"class.quic::QuicCrypter"*, i8*, i64)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.quic::QuicCrypter"* %0, i8* %2, i64 %3) #3
  br label %16

12:                                               ; preds = %4
  %13 = getelementptr inbounds i1 (%"class.quic::QuicCrypter"*, i8*, i64)*, i1 (%"class.quic::QuicCrypter"*, i8*, i64)** %7, i64 3
  %14 = load i1 (%"class.quic::QuicCrypter"*, i8*, i64)*, i1 (%"class.quic::QuicCrypter"*, i8*, i64)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.quic::QuicCrypter"* %0, i8* %2, i64 %3) #3
  br label %16

16:                                               ; preds = %12, %8
  %17 = phi i1 [ %11, %8 ], [ %15, %12 ]
  ret i1 %17
}

declare zeroext i1 @_ZNK4quic17ParsedQuicVersion22UsesInitialObfuscatorsEv(%"struct.quic::ParsedQuicVersion"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic11QuicCrypterD2Ev(%"class.quic::QuicCrypter"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic11QuicCrypterD0Ev(%"class.quic::QuicCrypter"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #4
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind }
attributes #4 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
