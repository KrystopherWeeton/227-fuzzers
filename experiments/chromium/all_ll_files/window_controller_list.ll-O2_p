; ModuleID = '../../chrome/browser/extensions/window_controller_list.cc'
source_filename = "../../chrome/browser/extensions/window_controller_list.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::WindowControllerList" = type { %"class.std::__1::list", %"class.base::ObserverList" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.1" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.extensions::WindowController" = type { i32 (...)**, %"class.ui::BaseWindow"*, %class.Profile* }
%"class.ui::BaseWindow" = type { i32 (...)** }
%class.Profile = type opaque
%"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%"class.extensions::WindowControllerListObserver" = type { i32 (...)** }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"class.extensions::WindowController"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.ExtensionFunction = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %class.scoped_refptr, %"class.std::__1::unique_ptr.99", %"class.base::ElapsedTimer", %"class.std::__1::unique_ptr.99", %"class.std::__1::basic_string", %"class.base::OnceCallback", i32, [4 x i8], i8*, i8*, %class.GURL, i8, i8, i8, i8, i32, i32, i32, i64, %"class.std::__1::unique_ptr.107", i8, [7 x i8], %"class.base::WeakPtr", %"class.content::BrowserContext"*, %"class.content::BrowserContext"*, %"class.base::CallbackListSubscription", %"class.content::RenderFrameHost"*, %"class.std::__1::unique_ptr.121", %"class.std::__1::vector.127", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr = type { %"class.extensions::Extension"* }
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe.7", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.23", %"class.std::__1::vector.29", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.49", %"class.std::__1::map", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe.7" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type opaque
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.31" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.extensions::InstallWarning"* }
%"class.base::Version" = type { %"class.std::__1::vector.42" }
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { i32*, i32*, %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { i32* }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.52", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.55" }
%"union.absl::variant_internal::DestructibleUnionImpl.55" = type { %"union.absl::variant_internal::DestructibleUnionImpl.56" }
%"union.absl::variant_internal::DestructibleUnionImpl.56" = type { %"union.absl::variant_internal::DestructibleUnionImpl.57" }
%"union.absl::variant_internal::DestructibleUnionImpl.57" = type { %"union.absl::variant_internal::DestructibleUnionImpl.58" }
%"union.absl::variant_internal::DestructibleUnionImpl.58" = type { %"class.std::__1::basic_string" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.90" }
%"class.std::__1::__tree.90" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.91", %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.base::ListValue"* }
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.105 }
%class.scoped_refptr.105 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.106", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.106" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.36" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %class.GURL* }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { i32* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.113 }
%class.scoped_refptr.113 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.114", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.114" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.115" }
%"struct.std::__1::atomic.115" = type { %"struct.std::__1::__atomic_base.116" }
%"struct.std::__1::__atomic_base.116" = type { %"struct.std::__1::__atomic_base.117" }
%"struct.std::__1::__atomic_base.117" = type { %"struct.std::__1::__cxx_atomic_impl.118" }
%"struct.std::__1::__cxx_atomic_impl.118" = type { %"struct.std::__1::__cxx_atomic_base_impl.119" }
%"struct.std::__1::__cxx_atomic_base_impl.119" = type { i8 }
%"class.content::BrowserContext" = type opaque
%"class.base::CallbackListSubscription" = type { %"class.base::OnceCallback.120" }
%"class.base::OnceCallback.120" = type { %"class.base::internal::CallbackBase" }
%"class.content::RenderFrameHost" = type opaque
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.ExtensionFunction::RenderFrameHostTracker"* }
%"class.ExtensionFunction::RenderFrameHostTracker" = type opaque
%"class.std::__1::vector.127" = type { %"class.std::__1::__vector_base.128" }
%"class.std::__1::__vector_base.128" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.std::__1::basic_string"* }

$_ZN4base9SingletonIN10extensions20WindowControllerListENS_22DefaultSingletonTraitsIS2_EES2_E6OnExitEPv = comdat any

$_ZN4base9SingletonIN10extensions20WindowControllerListENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E = comdat any

@_ZN4base9SingletonIN10extensions20WindowControllerListENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E = linkonce_odr hidden global i64 0, comdat, align 8

@_ZN10extensions20WindowControllerListC1Ev = hidden unnamed_addr alias void (%"class.extensions::WindowControllerList"*), void (%"class.extensions::WindowControllerList"*)* @_ZN10extensions20WindowControllerListC2Ev
@_ZN10extensions20WindowControllerListD1Ev = hidden unnamed_addr alias void (%"class.extensions::WindowControllerList"*), void (%"class.extensions::WindowControllerList"*)* @_ZN10extensions20WindowControllerListD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.extensions::WindowControllerList"* @_ZN10extensions20WindowControllerList11GetInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* @_ZN4base9SingletonIN10extensions20WindowControllerListENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %20, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* nonnull @_ZN4base9SingletonIN10extensions20WindowControllerListENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E) #7
  br i1 %4, label %5, label %18

5:                                                ; preds = %3
  %6 = tail call i8* @_Znwm(i64 80) #8
  %7 = bitcast i8* %6 to i8**
  store i8* %6, i8** %7, align 8
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to i8**
  store i8* %6, i8** %9, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 16
  %11 = getelementptr inbounds i8, i8* %6, i64 48
  %12 = bitcast i8* %11 to %"class.base::internal::LinkNodeBase"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false) #7
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %12, %"class.base::internal::LinkNodeBase"* %12, %"class.base::internal::LinkNodeBase"* %12) #7
  %13 = getelementptr inbounds i8, i8* %6, i64 64
  %14 = bitcast i8* %13 to i64*
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %6, i64 72
  %16 = bitcast i8* %15 to i32*
  store i32 0, i32* %16, align 8
  %17 = ptrtoint i8* %6 to i64
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* nonnull @_ZN4base9SingletonIN10extensions20WindowControllerListENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E, i64 %17, void (i8*)* nonnull @_ZN4base9SingletonIN10extensions20WindowControllerListENS_22DefaultSingletonTraitsIS2_EES2_E6OnExitEPv, i8* null) #7
  br label %20

18:                                               ; preds = %3
  %19 = load atomic i64, i64* @_ZN4base9SingletonIN10extensions20WindowControllerListENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E acquire, align 8
  br label %20

20:                                               ; preds = %0, %5, %18
  %21 = phi i64 [ %1, %0 ], [ %17, %5 ], [ %19, %18 ]
  %22 = inttoptr i64 %21 to %"class.extensions::WindowControllerList"*
  ret %"class.extensions::WindowControllerList"* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions20WindowControllerListC2Ev(%"class.extensions::WindowControllerList"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %2, %"struct.std::__1::__list_node_base"** %3, align 8
  %4 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %2, %"struct.std::__1::__list_node_base"** %4, align 8
  %5 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %7 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false)
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %6, %"class.base::internal::LinkNodeBase"* %6, %"class.base::internal::LinkNodeBase"* %6) #7
  %8 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1, i32 2
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1, i32 3
  store i32 0, i32* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions20WindowControllerListD2Ev(%"class.extensions::WindowControllerList"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %3 = bitcast %"class.base::internal::LinkNodeBase"** %2 to %"class.base::LinkNode"**
  %4 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1, i32 1, i32 0
  %5 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %3, align 8
  %6 = icmp eq %"class.base::LinkNode"* %5, %4
  br i1 %6, label %19, label %7

7:                                                ; preds = %1, %16
  %8 = phi %"class.base::LinkNode"* [ %17, %16 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %8, i64 1
  %10 = bitcast %"class.base::LinkNode"* %9 to %"class.base::ObserverList"**
  %11 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  %12 = icmp eq %"class.base::ObserverList"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %10, align 8
  %14 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %8, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %14) #7
  %15 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %3, align 8
  br label %16

16:                                               ; preds = %13, %7
  %17 = phi %"class.base::LinkNode"* [ %8, %7 ], [ %15, %13 ]
  %18 = icmp eq %"class.base::LinkNode"* %17, %4
  br i1 %18, label %19, label %7

19:                                               ; preds = %16, %1
  %20 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %20, align 8
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %21 to i64
  %25 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %26 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %21 to i8*
  tail call void @_ZdlPv(i8* %27) #8
  br label %28

28:                                               ; preds = %19, %23
  %29 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %56, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %34 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %33, align 8
  %35 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %37, i64 0, i32 1
  %39 = bitcast %"struct.std::__1::__list_node_base"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %34, i64 0, i32 0
  %42 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %42, i64 0, i32 1
  %44 = bitcast %"struct.std::__1::__list_node_base"** %43 to i64*
  store i64 %40, i64* %44, align 8
  %45 = bitcast %"struct.std::__1::__list_node_base"* %34 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"struct.std::__1::__list_node_base"** %38 to i64**
  %48 = load i64*, i64** %47, align 8
  store i64 %46, i64* %48, align 8
  store i64 0, i64* %29, align 8
  %49 = icmp eq %"struct.std::__1::__list_node_base"* %34, %35
  br i1 %49, label %56, label %50

50:                                               ; preds = %32, %50
  %51 = phi %"struct.std::__1::__list_node_base"* [ %53, %50 ], [ %34, %32 ]
  %52 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %51, i64 0, i32 1
  %53 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %52, align 8
  %54 = bitcast %"struct.std::__1::__list_node_base"* %51 to i8*
  tail call void @_ZdlPv(i8* %54) #8
  %55 = icmp eq %"struct.std::__1::__list_node_base"* %53, %35
  br i1 %55, label %56, label %50

56:                                               ; preds = %50, %28, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions20WindowControllerList18AddExtensionWindowEPNS_16WindowControllerE(%"class.extensions::WindowControllerList"*, %"class.extensions::WindowController"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = ptrtoint %"class.extensions::WindowController"* %1 to i64
  %6 = tail call i8* @_Znwm(i64 24) #8, !noalias !2
  %7 = bitcast i8* %6 to %"struct.std::__1::__list_node_base"**
  %8 = getelementptr inbounds i8, i8* %6, i64 16
  %9 = bitcast i8* %8 to i64*
  store i64 %5, i64* %9, align 8
  %10 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds i8, i8* %6, i64 8
  %12 = bitcast i8* %11 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %10, %"struct.std::__1::__list_node_base"** %12, align 8
  %13 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %13, align 8
  store %"struct.std::__1::__list_node_base"* %14, %"struct.std::__1::__list_node_base"** %7, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %14, i64 0, i32 1
  %16 = bitcast %"struct.std::__1::__list_node_base"** %15 to i8**
  store i8* %6, i8** %16, align 8
  %17 = bitcast %"class.extensions::WindowControllerList"* %0 to i8**
  store i8* %6, i8** %17, align 8
  %18 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 1
  store i64 %20, i64* %18, align 8
  %21 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1
  %22 = bitcast %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #7
  %23 = getelementptr inbounds %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %25 = getelementptr inbounds %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %26 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %21, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 40, i1 false)
  %28 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %26, align 8, !noalias !5
  %29 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %30 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %29, align 8, !noalias !5
  %31 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %28, %30
  %32 = getelementptr inbounds %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %32) #7
  br i1 %31, label %33, label %35

33:                                               ; preds = %2
  %34 = bitcast %"class.base::ObserverList"** %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #7, !alias.scope !5
  br label %75

35:                                               ; preds = %2
  store %"class.base::ObserverList"* %21, %"class.base::ObserverList"** %23, align 8
  %36 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %32, %"class.base::internal::LinkNodeBase"* %36) #7
  store i64 0, i64* %24, align 8
  %37 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1, i32 3
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %47, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %29 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.base::ObserverList"* %21 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %42, %44
  %46 = ashr exact i64 %45, 3
  br label %47

47:                                               ; preds = %40, %35
  %48 = phi i64 [ %46, %40 ], [ -1, %35 ]
  store i64 %48, i64* %25, align 8
  %49 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %23, align 8
  %50 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %49, i64 0, i32 0, i32 0, i32 1
  %51 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.base::ObserverList"* %49 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %52, %54
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, %48
  %58 = select i1 %57, i64 %56, i64 %48
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %75, label %60

60:                                               ; preds = %47
  %61 = inttoptr i64 %54 to %"class.base::internal::UncheckedObserverAdapter"*
  %62 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %49, i64 0, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %61, i64 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = icmp eq i8* %64, null
  br i1 %65, label %66, label %75

66:                                               ; preds = %60, %70
  %67 = phi i64 [ %68, %70 ], [ 0, %60 ]
  %68 = add nuw i64 %67, 1
  store i64 %68, i64* %24, align 8
  %69 = icmp ult i64 %68, %58
  br i1 %69, label %70, label %75

70:                                               ; preds = %66
  %71 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %62, align 8
  %72 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %71, i64 %68, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = icmp eq i8* %73, null
  br i1 %74, label %66, label %75

75:                                               ; preds = %70, %66, %60, %47, %33
  %76 = bitcast %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %76) #7
  %77 = getelementptr inbounds %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %78 = getelementptr inbounds %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %79 = getelementptr inbounds %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %80 = getelementptr inbounds %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %81 = bitcast %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %80) #7
  %82 = bitcast %"class.base::ObserverList"** %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 24, i1 false) #7, !alias.scope !8
  %83 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %23, align 8
  br label %84

84:                                               ; preds = %323, %75
  %85 = phi %"class.base::ObserverList"* [ %83, %75 ], [ %321, %323 ]
  %86 = icmp eq %"class.base::ObserverList"* %85, null
  br i1 %86, label %102, label %87

87:                                               ; preds = %84
  %88 = load i64, i64* %24, align 8
  %89 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %85, i64 0, i32 0, i32 0, i32 1
  %90 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.base::ObserverList"* %85 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = sub i64 %91, %93
  %95 = ashr exact i64 %94, 3
  %96 = load i64, i64* %25, align 8
  %97 = icmp ult i64 %95, %96
  %98 = select i1 %97, i64 %95, i64 %96
  %99 = icmp eq i64 %88, %98
  br i1 %99, label %102, label %100

100:                                              ; preds = %87
  %101 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %77, align 8
  br label %118

102:                                              ; preds = %87, %84
  %103 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %77, align 8
  %104 = icmp eq %"class.base::ObserverList"* %103, null
  br i1 %104, label %218, label %105

105:                                              ; preds = %102
  %106 = load i64, i64* %78, align 8
  %107 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %103, i64 0, i32 0, i32 0, i32 1
  %108 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.base::ObserverList"* %103 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = sub i64 %109, %111
  %113 = ashr exact i64 %112, 3
  %114 = load i64, i64* %79, align 8
  %115 = icmp ult i64 %113, %114
  %116 = select i1 %115, i64 %113, i64 %114
  %117 = icmp eq i64 %106, %116
  br i1 %117, label %127, label %118

118:                                              ; preds = %105, %100
  %119 = phi %"class.base::ObserverList"* [ %101, %100 ], [ %103, %105 ]
  %120 = icmp eq %"class.base::ObserverList"* %85, %119
  %121 = load i64, i64* %24, align 8
  %122 = load i64, i64* %78, align 8
  %123 = icmp eq i64 %121, %122
  %124 = and i1 %120, %123
  br i1 %124, label %125, label %312

125:                                              ; preds = %118
  %126 = icmp eq %"class.base::ObserverList"* %85, null
  br i1 %126, label %218, label %127

127:                                              ; preds = %105, %125
  %128 = phi %"class.base::ObserverList"* [ %85, %125 ], [ %103, %105 ]
  %129 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %128, i64 0, i32 1
  %130 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %128, i64 0, i32 1, i32 0, i32 0, i32 1
  %131 = bitcast %"class.base::internal::LinkNodeBase"** %130 to %"class.base::LinkNode"**
  %132 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %131, align 8
  %133 = bitcast %"class.base::LinkedList"* %129 to %"class.base::LinkNode"**
  %134 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %133, align 8
  %135 = icmp eq %"class.base::LinkNode"* %132, %134
  br i1 %135, label %136, label %214

136:                                              ; preds = %127
  %137 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %128, i64 0, i32 0, i32 0, i32 0
  %138 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %137, align 8
  %139 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %128, i64 0, i32 0, i32 0, i32 1
  %140 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %139, align 8
  %141 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %138, %140
  br i1 %141, label %150, label %142

142:                                              ; preds = %136, %147
  %143 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %148, %147 ], [ %138, %136 ]
  %144 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %143, i64 0, i32 0
  %145 = load i8*, i8** %144, align 8
  %146 = icmp eq i8* %145, null
  br i1 %146, label %150, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %143, i64 1
  %149 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %148, %140
  br i1 %149, label %214, label %142

150:                                              ; preds = %142, %136
  %151 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %138, %136 ], [ %143, %142 ]
  %152 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %151 to i64
  %153 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %151, %140
  br i1 %153, label %214, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %151, i64 1
  %156 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %155, %140
  br i1 %156, label %209, label %157

157:                                              ; preds = %154
  %158 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %140, i64 -2, i32 0
  %159 = ptrtoint i8** %158 to i64
  %160 = sub i64 %159, %152
  %161 = lshr i64 %160, 3
  %162 = add nuw nsw i64 %161, 1
  %163 = and i64 %162, 3
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %183, label %165

165:                                              ; preds = %157, %178
  %166 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %180, %178 ], [ %155, %157 ]
  %167 = phi i64 [ %179, %178 ], [ %152, %157 ]
  %168 = phi i64 [ %181, %178 ], [ %163, %157 ]
  %169 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %166, i64 0, i32 0
  %170 = load i8*, i8** %169, align 8
  %171 = icmp eq i8* %170, null
  br i1 %171, label %178, label %172

172:                                              ; preds = %165
  %173 = ptrtoint i8* %170 to i64
  %174 = inttoptr i64 %167 to %"class.base::internal::UncheckedObserverAdapter"*
  %175 = inttoptr i64 %167 to i64*
  store i64 %173, i64* %175, align 8
  %176 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %174, i64 1
  %177 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %176 to i64
  br label %178

178:                                              ; preds = %172, %165
  %179 = phi i64 [ %167, %165 ], [ %177, %172 ]
  %180 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %166, i64 1
  %181 = add i64 %168, -1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %165, !llvm.loop !11

183:                                              ; preds = %178, %157
  %184 = phi i64 [ undef, %157 ], [ %179, %178 ]
  %185 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %155, %157 ], [ %180, %178 ]
  %186 = phi i64 [ %152, %157 ], [ %179, %178 ]
  %187 = icmp ult i64 %160, 24
  br i1 %187, label %205, label %188

188:                                              ; preds = %183, %413
  %189 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %415, %413 ], [ %185, %183 ]
  %190 = phi i64 [ %414, %413 ], [ %186, %183 ]
  %191 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %189, i64 0, i32 0
  %192 = load i8*, i8** %191, align 8
  %193 = icmp eq i8* %192, null
  br i1 %193, label %200, label %194

194:                                              ; preds = %188
  %195 = ptrtoint i8* %192 to i64
  %196 = inttoptr i64 %190 to %"class.base::internal::UncheckedObserverAdapter"*
  %197 = inttoptr i64 %190 to i64*
  store i64 %195, i64* %197, align 8
  %198 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %196, i64 1
  %199 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %198 to i64
  br label %200

200:                                              ; preds = %194, %188
  %201 = phi i64 [ %190, %188 ], [ %199, %194 ]
  %202 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %189, i64 1, i32 0
  %203 = load i8*, i8** %202, align 8
  %204 = icmp eq i8* %203, null
  br i1 %204, label %391, label %385

205:                                              ; preds = %413, %183
  %206 = phi i64 [ %184, %183 ], [ %414, %413 ]
  %207 = inttoptr i64 %206 to %"class.base::internal::UncheckedObserverAdapter"*
  %208 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %139, align 8
  br label %209

209:                                              ; preds = %205, %154
  %210 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %140, %154 ], [ %208, %205 ]
  %211 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %151, %154 ], [ %207, %205 ]
  %212 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %211, %210
  br i1 %212, label %214, label %213

213:                                              ; preds = %209
  store %"class.base::internal::UncheckedObserverAdapter"* %211, %"class.base::internal::UncheckedObserverAdapter"** %139, align 8
  br label %214

214:                                              ; preds = %147, %213, %209, %150, %127
  %215 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %77, align 8
  %216 = icmp eq %"class.base::ObserverList"* %215, null
  br i1 %216, label %218, label %217

217:                                              ; preds = %214
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %77, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %80) #7
  br label %218

218:                                              ; preds = %102, %125, %214, %217
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %76) #7
  %219 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %23, align 8
  %220 = icmp eq %"class.base::ObserverList"* %219, null
  br i1 %220, label %311, label %221

221:                                              ; preds = %218
  %222 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %219, i64 0, i32 1
  %223 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %219, i64 0, i32 1, i32 0, i32 0, i32 1
  %224 = bitcast %"class.base::internal::LinkNodeBase"** %223 to %"class.base::LinkNode"**
  %225 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %224, align 8
  %226 = bitcast %"class.base::LinkedList"* %222 to %"class.base::LinkNode"**
  %227 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %226, align 8
  %228 = icmp eq %"class.base::LinkNode"* %225, %227
  br i1 %228, label %229, label %307

229:                                              ; preds = %221
  %230 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %219, i64 0, i32 0, i32 0, i32 0
  %231 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %230, align 8
  %232 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %219, i64 0, i32 0, i32 0, i32 1
  %233 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %232, align 8
  %234 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %231, %233
  br i1 %234, label %243, label %235

235:                                              ; preds = %229, %240
  %236 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %241, %240 ], [ %231, %229 ]
  %237 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %236, i64 0, i32 0
  %238 = load i8*, i8** %237, align 8
  %239 = icmp eq i8* %238, null
  br i1 %239, label %243, label %240

240:                                              ; preds = %235
  %241 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %236, i64 1
  %242 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %241, %233
  br i1 %242, label %307, label %235

243:                                              ; preds = %235, %229
  %244 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %231, %229 ], [ %236, %235 ]
  %245 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %244 to i64
  %246 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %244, %233
  br i1 %246, label %307, label %247

247:                                              ; preds = %243
  %248 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %244, i64 1
  %249 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %248, %233
  br i1 %249, label %302, label %250

250:                                              ; preds = %247
  %251 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %233, i64 -2, i32 0
  %252 = ptrtoint i8** %251 to i64
  %253 = sub i64 %252, %245
  %254 = lshr i64 %253, 3
  %255 = add nuw nsw i64 %254, 1
  %256 = and i64 %255, 3
  %257 = icmp eq i64 %256, 0
  br i1 %257, label %276, label %258

258:                                              ; preds = %250, %271
  %259 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %273, %271 ], [ %248, %250 ]
  %260 = phi i64 [ %272, %271 ], [ %245, %250 ]
  %261 = phi i64 [ %274, %271 ], [ %256, %250 ]
  %262 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %259, i64 0, i32 0
  %263 = load i8*, i8** %262, align 8
  %264 = icmp eq i8* %263, null
  br i1 %264, label %271, label %265

265:                                              ; preds = %258
  %266 = ptrtoint i8* %263 to i64
  %267 = inttoptr i64 %260 to %"class.base::internal::UncheckedObserverAdapter"*
  %268 = inttoptr i64 %260 to i64*
  store i64 %266, i64* %268, align 8
  %269 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %267, i64 1
  %270 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %269 to i64
  br label %271

271:                                              ; preds = %265, %258
  %272 = phi i64 [ %260, %258 ], [ %270, %265 ]
  %273 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %259, i64 1
  %274 = add i64 %261, -1
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %276, label %258, !llvm.loop !13

276:                                              ; preds = %271, %250
  %277 = phi i64 [ undef, %250 ], [ %272, %271 ]
  %278 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %248, %250 ], [ %273, %271 ]
  %279 = phi i64 [ %245, %250 ], [ %272, %271 ]
  %280 = icmp ult i64 %253, 24
  br i1 %280, label %298, label %281

281:                                              ; preds = %276, %381
  %282 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %383, %381 ], [ %278, %276 ]
  %283 = phi i64 [ %382, %381 ], [ %279, %276 ]
  %284 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %282, i64 0, i32 0
  %285 = load i8*, i8** %284, align 8
  %286 = icmp eq i8* %285, null
  br i1 %286, label %293, label %287

287:                                              ; preds = %281
  %288 = ptrtoint i8* %285 to i64
  %289 = inttoptr i64 %283 to %"class.base::internal::UncheckedObserverAdapter"*
  %290 = inttoptr i64 %283 to i64*
  store i64 %288, i64* %290, align 8
  %291 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %289, i64 1
  %292 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %291 to i64
  br label %293

293:                                              ; preds = %287, %281
  %294 = phi i64 [ %283, %281 ], [ %292, %287 ]
  %295 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %282, i64 1, i32 0
  %296 = load i8*, i8** %295, align 8
  %297 = icmp eq i8* %296, null
  br i1 %297, label %359, label %353

298:                                              ; preds = %381, %276
  %299 = phi i64 [ %277, %276 ], [ %382, %381 ]
  %300 = inttoptr i64 %299 to %"class.base::internal::UncheckedObserverAdapter"*
  %301 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %232, align 8
  br label %302

302:                                              ; preds = %298, %247
  %303 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %233, %247 ], [ %301, %298 ]
  %304 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %244, %247 ], [ %300, %298 ]
  %305 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %304, %303
  br i1 %305, label %307, label %306

306:                                              ; preds = %302
  store %"class.base::internal::UncheckedObserverAdapter"* %304, %"class.base::internal::UncheckedObserverAdapter"** %232, align 8
  br label %307

307:                                              ; preds = %240, %306, %302, %243, %221
  %308 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %23, align 8
  %309 = icmp eq %"class.base::ObserverList"* %308, null
  br i1 %309, label %311, label %310

310:                                              ; preds = %307
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %23, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %32) #7
  br label %311

311:                                              ; preds = %218, %307, %310
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #7
  ret void

312:                                              ; preds = %118
  %313 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %85, i64 0, i32 0, i32 0, i32 0
  %314 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %313, align 8
  %315 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %314, i64 %121
  %316 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %315 to %"class.extensions::WindowControllerListObserver"**
  %317 = load %"class.extensions::WindowControllerListObserver"*, %"class.extensions::WindowControllerListObserver"** %316, align 8
  %318 = bitcast %"class.extensions::WindowControllerListObserver"* %317 to void (%"class.extensions::WindowControllerListObserver"*, %"class.extensions::WindowController"*)***
  %319 = load void (%"class.extensions::WindowControllerListObserver"*, %"class.extensions::WindowController"*)**, void (%"class.extensions::WindowControllerListObserver"*, %"class.extensions::WindowController"*)*** %318, align 8
  %320 = load void (%"class.extensions::WindowControllerListObserver"*, %"class.extensions::WindowController"*)*, void (%"class.extensions::WindowControllerListObserver"*, %"class.extensions::WindowController"*)** %319, align 8
  call void %320(%"class.extensions::WindowControllerListObserver"* %317, %"class.extensions::WindowController"* %1) #7
  %321 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %23, align 8
  %322 = icmp eq %"class.base::ObserverList"* %321, null
  br i1 %322, label %323, label %324

323:                                              ; preds = %348, %344, %312, %324, %338
  br label %84

324:                                              ; preds = %312
  %325 = load i64, i64* %24, align 8
  %326 = add i64 %325, 1
  store i64 %326, i64* %24, align 8
  %327 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %321, i64 0, i32 0, i32 0, i32 1
  %328 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %327 to i64*
  %329 = load i64, i64* %328, align 8
  %330 = bitcast %"class.base::ObserverList"* %321 to i64*
  %331 = load i64, i64* %330, align 8
  %332 = sub i64 %329, %331
  %333 = ashr exact i64 %332, 3
  %334 = load i64, i64* %25, align 8
  %335 = icmp ult i64 %333, %334
  %336 = select i1 %335, i64 %333, i64 %334
  %337 = icmp ult i64 %326, %336
  br i1 %337, label %338, label %323

338:                                              ; preds = %324
  %339 = inttoptr i64 %331 to %"class.base::internal::UncheckedObserverAdapter"*
  %340 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %321, i64 0, i32 0, i32 0, i32 0
  %341 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %339, i64 %326, i32 0
  %342 = load i8*, i8** %341, align 8
  %343 = icmp eq i8* %342, null
  br i1 %343, label %344, label %323

344:                                              ; preds = %338, %348
  %345 = phi i64 [ %346, %348 ], [ %326, %338 ]
  %346 = add nuw i64 %345, 1
  store i64 %346, i64* %24, align 8
  %347 = icmp ult i64 %346, %336
  br i1 %347, label %348, label %323

348:                                              ; preds = %344
  %349 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %340, align 8
  %350 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %349, i64 %346, i32 0
  %351 = load i8*, i8** %350, align 8
  %352 = icmp eq i8* %351, null
  br i1 %352, label %344, label %323

353:                                              ; preds = %293
  %354 = ptrtoint i8* %296 to i64
  %355 = inttoptr i64 %294 to %"class.base::internal::UncheckedObserverAdapter"*
  %356 = inttoptr i64 %294 to i64*
  store i64 %354, i64* %356, align 8
  %357 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %355, i64 1
  %358 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %357 to i64
  br label %359

359:                                              ; preds = %353, %293
  %360 = phi i64 [ %294, %293 ], [ %358, %353 ]
  %361 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %282, i64 2, i32 0
  %362 = load i8*, i8** %361, align 8
  %363 = icmp eq i8* %362, null
  br i1 %363, label %370, label %364

364:                                              ; preds = %359
  %365 = ptrtoint i8* %362 to i64
  %366 = inttoptr i64 %360 to %"class.base::internal::UncheckedObserverAdapter"*
  %367 = inttoptr i64 %360 to i64*
  store i64 %365, i64* %367, align 8
  %368 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %366, i64 1
  %369 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %368 to i64
  br label %370

370:                                              ; preds = %364, %359
  %371 = phi i64 [ %360, %359 ], [ %369, %364 ]
  %372 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %282, i64 3, i32 0
  %373 = load i8*, i8** %372, align 8
  %374 = icmp eq i8* %373, null
  br i1 %374, label %381, label %375

375:                                              ; preds = %370
  %376 = ptrtoint i8* %373 to i64
  %377 = inttoptr i64 %371 to %"class.base::internal::UncheckedObserverAdapter"*
  %378 = inttoptr i64 %371 to i64*
  store i64 %376, i64* %378, align 8
  %379 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %377, i64 1
  %380 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %379 to i64
  br label %381

381:                                              ; preds = %375, %370
  %382 = phi i64 [ %371, %370 ], [ %380, %375 ]
  %383 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %282, i64 4
  %384 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %383, %233
  br i1 %384, label %298, label %281

385:                                              ; preds = %200
  %386 = ptrtoint i8* %203 to i64
  %387 = inttoptr i64 %201 to %"class.base::internal::UncheckedObserverAdapter"*
  %388 = inttoptr i64 %201 to i64*
  store i64 %386, i64* %388, align 8
  %389 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %387, i64 1
  %390 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %389 to i64
  br label %391

391:                                              ; preds = %385, %200
  %392 = phi i64 [ %201, %200 ], [ %390, %385 ]
  %393 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %189, i64 2, i32 0
  %394 = load i8*, i8** %393, align 8
  %395 = icmp eq i8* %394, null
  br i1 %395, label %402, label %396

396:                                              ; preds = %391
  %397 = ptrtoint i8* %394 to i64
  %398 = inttoptr i64 %392 to %"class.base::internal::UncheckedObserverAdapter"*
  %399 = inttoptr i64 %392 to i64*
  store i64 %397, i64* %399, align 8
  %400 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %398, i64 1
  %401 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %400 to i64
  br label %402

402:                                              ; preds = %396, %391
  %403 = phi i64 [ %392, %391 ], [ %401, %396 ]
  %404 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %189, i64 3, i32 0
  %405 = load i8*, i8** %404, align 8
  %406 = icmp eq i8* %405, null
  br i1 %406, label %413, label %407

407:                                              ; preds = %402
  %408 = ptrtoint i8* %405 to i64
  %409 = inttoptr i64 %403 to %"class.base::internal::UncheckedObserverAdapter"*
  %410 = inttoptr i64 %403 to i64*
  store i64 %408, i64* %410, align 8
  %411 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %409, i64 1
  %412 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %411 to i64
  br label %413

413:                                              ; preds = %407, %402
  %414 = phi i64 [ %403, %402 ], [ %412, %407 ]
  %415 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %189, i64 4
  %416 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %415, %140
  br i1 %416, label %205, label %188
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions20WindowControllerList21RemoveExtensionWindowEPNS_16WindowControllerE(%"class.extensions::WindowControllerList"*, %"class.extensions::WindowController"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %5, align 8
  %7 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = icmp eq %"struct.std::__1::__list_node_base"* %6, %7
  br i1 %8, label %24, label %9

9:                                                ; preds = %2
  %10 = ptrtoint %"struct.std::__1::__list_node_base"* %6 to i64
  br label %11

11:                                               ; preds = %18, %9
  %12 = phi %"struct.std::__1::__list_node_base"* [ %6, %9 ], [ %22, %18 ]
  %13 = phi i64 [ %10, %9 ], [ %21, %18 ]
  %14 = inttoptr i64 %13 to %"struct.std::__1::__list_node"*
  %15 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %14, i64 0, i32 1
  %16 = load %"class.extensions::WindowController"*, %"class.extensions::WindowController"** %15, align 8
  %17 = icmp eq %"class.extensions::WindowController"* %16, %1
  br i1 %17, label %24, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %12, i64 0, i32 1
  %20 = bitcast %"struct.std::__1::__list_node_base"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = inttoptr i64 %21 to %"struct.std::__1::__list_node_base"*
  %23 = icmp eq %"struct.std::__1::__list_node_base"* %7, %22
  br i1 %23, label %376, label %11

24:                                               ; preds = %11, %2
  %25 = phi %"struct.std::__1::__list_node_base"* [ %6, %2 ], [ %12, %11 ]
  %26 = icmp eq %"struct.std::__1::__list_node_base"* %25, %7
  br i1 %26, label %376, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 0, i32 1
  %29 = bitcast %"struct.std::__1::__list_node_base"** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 0, i32 0
  %32 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %31, align 8
  %33 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %32, i64 0, i32 1
  %34 = bitcast %"struct.std::__1::__list_node_base"** %33 to i64*
  store i64 %30, i64* %34, align 8
  %35 = bitcast %"struct.std::__1::__list_node_base"* %25 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"struct.std::__1::__list_node_base"** %28 to i64**
  %38 = load i64*, i64** %37, align 8
  store i64 %36, i64* %38, align 8
  %39 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = bitcast %"struct.std::__1::__list_node_base"* %25 to i8*
  tail call void @_ZdlPv(i8* %42) #8
  %43 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1
  %44 = bitcast %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %44) #7
  %45 = getelementptr inbounds %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %47 = getelementptr inbounds %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %48 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %43, i64 0, i32 0, i32 0, i32 0
  %49 = bitcast %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 40, i1 false)
  %50 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %48, align 8, !noalias !14
  %51 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %52 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %51, align 8, !noalias !14
  %53 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %50, %52
  %54 = getelementptr inbounds %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %54) #7
  br i1 %53, label %55, label %57

55:                                               ; preds = %27
  %56 = bitcast %"class.base::ObserverList"** %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #7, !alias.scope !14
  br label %97

57:                                               ; preds = %27
  store %"class.base::ObserverList"* %43, %"class.base::ObserverList"** %45, align 8
  %58 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %54, %"class.base::internal::LinkNodeBase"* %58) #7
  store i64 0, i64* %46, align 8
  %59 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %69, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %51 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.base::ObserverList"* %43 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %64, %66
  %68 = ashr exact i64 %67, 3
  br label %69

69:                                               ; preds = %62, %57
  %70 = phi i64 [ %68, %62 ], [ -1, %57 ]
  store i64 %70, i64* %47, align 8
  %71 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %45, align 8
  %72 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %71, i64 0, i32 0, i32 0, i32 1
  %73 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.base::ObserverList"* %71 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %74, %76
  %78 = ashr exact i64 %77, 3
  %79 = icmp ult i64 %78, %70
  %80 = select i1 %79, i64 %78, i64 %70
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %97, label %82

82:                                               ; preds = %69
  %83 = inttoptr i64 %76 to %"class.base::internal::UncheckedObserverAdapter"*
  %84 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %71, i64 0, i32 0, i32 0, i32 0
  %85 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %83, i64 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = icmp eq i8* %86, null
  br i1 %87, label %88, label %97

88:                                               ; preds = %82, %92
  %89 = phi i64 [ %90, %92 ], [ 0, %82 ]
  %90 = add nuw i64 %89, 1
  store i64 %90, i64* %46, align 8
  %91 = icmp ult i64 %90, %80
  br i1 %91, label %92, label %97

92:                                               ; preds = %88
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %84, align 8
  %94 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %93, i64 %90, i32 0
  %95 = load i8*, i8** %94, align 8
  %96 = icmp eq i8* %95, null
  br i1 %96, label %88, label %97

97:                                               ; preds = %92, %88, %82, %69, %55
  %98 = bitcast %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %98) #7
  %99 = getelementptr inbounds %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %100 = getelementptr inbounds %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %101 = getelementptr inbounds %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %102 = getelementptr inbounds %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %103 = bitcast %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %102) #7
  %104 = bitcast %"class.base::ObserverList"** %99 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 24, i1 false) #7, !alias.scope !17
  %105 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %45, align 8
  br label %106

106:                                              ; preds = %346, %97
  %107 = phi %"class.base::ObserverList"* [ %105, %97 ], [ %344, %346 ]
  %108 = icmp eq %"class.base::ObserverList"* %107, null
  br i1 %108, label %124, label %109

109:                                              ; preds = %106
  %110 = load i64, i64* %46, align 8
  %111 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %107, i64 0, i32 0, i32 0, i32 1
  %112 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.base::ObserverList"* %107 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = sub i64 %113, %115
  %117 = ashr exact i64 %116, 3
  %118 = load i64, i64* %47, align 8
  %119 = icmp ult i64 %117, %118
  %120 = select i1 %119, i64 %117, i64 %118
  %121 = icmp eq i64 %110, %120
  br i1 %121, label %124, label %122

122:                                              ; preds = %109
  %123 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %99, align 8
  br label %140

124:                                              ; preds = %109, %106
  %125 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %99, align 8
  %126 = icmp eq %"class.base::ObserverList"* %125, null
  br i1 %126, label %240, label %127

127:                                              ; preds = %124
  %128 = load i64, i64* %100, align 8
  %129 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %125, i64 0, i32 0, i32 0, i32 1
  %130 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.base::ObserverList"* %125 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = sub i64 %131, %133
  %135 = ashr exact i64 %134, 3
  %136 = load i64, i64* %101, align 8
  %137 = icmp ult i64 %135, %136
  %138 = select i1 %137, i64 %135, i64 %136
  %139 = icmp eq i64 %128, %138
  br i1 %139, label %149, label %140

140:                                              ; preds = %127, %122
  %141 = phi %"class.base::ObserverList"* [ %123, %122 ], [ %125, %127 ]
  %142 = icmp eq %"class.base::ObserverList"* %107, %141
  %143 = load i64, i64* %46, align 8
  %144 = load i64, i64* %100, align 8
  %145 = icmp eq i64 %143, %144
  %146 = and i1 %142, %145
  br i1 %146, label %147, label %334

147:                                              ; preds = %140
  %148 = icmp eq %"class.base::ObserverList"* %107, null
  br i1 %148, label %240, label %149

149:                                              ; preds = %127, %147
  %150 = phi %"class.base::ObserverList"* [ %107, %147 ], [ %125, %127 ]
  %151 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %150, i64 0, i32 1
  %152 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %150, i64 0, i32 1, i32 0, i32 0, i32 1
  %153 = bitcast %"class.base::internal::LinkNodeBase"** %152 to %"class.base::LinkNode"**
  %154 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %153, align 8
  %155 = bitcast %"class.base::LinkedList"* %151 to %"class.base::LinkNode"**
  %156 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %155, align 8
  %157 = icmp eq %"class.base::LinkNode"* %154, %156
  br i1 %157, label %158, label %236

158:                                              ; preds = %149
  %159 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %150, i64 0, i32 0, i32 0, i32 0
  %160 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %159, align 8
  %161 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %150, i64 0, i32 0, i32 0, i32 1
  %162 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %161, align 8
  %163 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %160, %162
  br i1 %163, label %172, label %164

164:                                              ; preds = %158, %169
  %165 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %170, %169 ], [ %160, %158 ]
  %166 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %165, i64 0, i32 0
  %167 = load i8*, i8** %166, align 8
  %168 = icmp eq i8* %167, null
  br i1 %168, label %172, label %169

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %165, i64 1
  %171 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %170, %162
  br i1 %171, label %236, label %164

172:                                              ; preds = %164, %158
  %173 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %160, %158 ], [ %165, %164 ]
  %174 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %173 to i64
  %175 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %173, %162
  br i1 %175, label %236, label %176

176:                                              ; preds = %172
  %177 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 1
  %178 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %177, %162
  br i1 %178, label %231, label %179

179:                                              ; preds = %176
  %180 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %162, i64 -2, i32 0
  %181 = ptrtoint i8** %180 to i64
  %182 = sub i64 %181, %174
  %183 = lshr i64 %182, 3
  %184 = add nuw nsw i64 %183, 1
  %185 = and i64 %184, 3
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %205, label %187

187:                                              ; preds = %179, %200
  %188 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %202, %200 ], [ %177, %179 ]
  %189 = phi i64 [ %201, %200 ], [ %174, %179 ]
  %190 = phi i64 [ %203, %200 ], [ %185, %179 ]
  %191 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %188, i64 0, i32 0
  %192 = load i8*, i8** %191, align 8
  %193 = icmp eq i8* %192, null
  br i1 %193, label %200, label %194

194:                                              ; preds = %187
  %195 = ptrtoint i8* %192 to i64
  %196 = inttoptr i64 %189 to %"class.base::internal::UncheckedObserverAdapter"*
  %197 = inttoptr i64 %189 to i64*
  store i64 %195, i64* %197, align 8
  %198 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %196, i64 1
  %199 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %198 to i64
  br label %200

200:                                              ; preds = %194, %187
  %201 = phi i64 [ %189, %187 ], [ %199, %194 ]
  %202 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %188, i64 1
  %203 = add i64 %190, -1
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %205, label %187, !llvm.loop !20

205:                                              ; preds = %200, %179
  %206 = phi i64 [ undef, %179 ], [ %201, %200 ]
  %207 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %177, %179 ], [ %202, %200 ]
  %208 = phi i64 [ %174, %179 ], [ %201, %200 ]
  %209 = icmp ult i64 %182, 24
  br i1 %209, label %227, label %210

210:                                              ; preds = %205, %437
  %211 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %439, %437 ], [ %207, %205 ]
  %212 = phi i64 [ %438, %437 ], [ %208, %205 ]
  %213 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %211, i64 0, i32 0
  %214 = load i8*, i8** %213, align 8
  %215 = icmp eq i8* %214, null
  br i1 %215, label %222, label %216

216:                                              ; preds = %210
  %217 = ptrtoint i8* %214 to i64
  %218 = inttoptr i64 %212 to %"class.base::internal::UncheckedObserverAdapter"*
  %219 = inttoptr i64 %212 to i64*
  store i64 %217, i64* %219, align 8
  %220 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %218, i64 1
  %221 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %220 to i64
  br label %222

222:                                              ; preds = %216, %210
  %223 = phi i64 [ %212, %210 ], [ %221, %216 ]
  %224 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %211, i64 1, i32 0
  %225 = load i8*, i8** %224, align 8
  %226 = icmp eq i8* %225, null
  br i1 %226, label %415, label %409

227:                                              ; preds = %437, %205
  %228 = phi i64 [ %206, %205 ], [ %438, %437 ]
  %229 = inttoptr i64 %228 to %"class.base::internal::UncheckedObserverAdapter"*
  %230 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %161, align 8
  br label %231

231:                                              ; preds = %227, %176
  %232 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %162, %176 ], [ %230, %227 ]
  %233 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %173, %176 ], [ %229, %227 ]
  %234 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %233, %232
  br i1 %234, label %236, label %235

235:                                              ; preds = %231
  store %"class.base::internal::UncheckedObserverAdapter"* %233, %"class.base::internal::UncheckedObserverAdapter"** %161, align 8
  br label %236

236:                                              ; preds = %169, %235, %231, %172, %149
  %237 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %99, align 8
  %238 = icmp eq %"class.base::ObserverList"* %237, null
  br i1 %238, label %240, label %239

239:                                              ; preds = %236
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %99, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %102) #7
  br label %240

240:                                              ; preds = %124, %147, %236, %239
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %98) #7
  %241 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %45, align 8
  %242 = icmp eq %"class.base::ObserverList"* %241, null
  br i1 %242, label %333, label %243

243:                                              ; preds = %240
  %244 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %241, i64 0, i32 1
  %245 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %241, i64 0, i32 1, i32 0, i32 0, i32 1
  %246 = bitcast %"class.base::internal::LinkNodeBase"** %245 to %"class.base::LinkNode"**
  %247 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %246, align 8
  %248 = bitcast %"class.base::LinkedList"* %244 to %"class.base::LinkNode"**
  %249 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %248, align 8
  %250 = icmp eq %"class.base::LinkNode"* %247, %249
  br i1 %250, label %251, label %329

251:                                              ; preds = %243
  %252 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %241, i64 0, i32 0, i32 0, i32 0
  %253 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %252, align 8
  %254 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %241, i64 0, i32 0, i32 0, i32 1
  %255 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %254, align 8
  %256 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %253, %255
  br i1 %256, label %265, label %257

257:                                              ; preds = %251, %262
  %258 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %263, %262 ], [ %253, %251 ]
  %259 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %258, i64 0, i32 0
  %260 = load i8*, i8** %259, align 8
  %261 = icmp eq i8* %260, null
  br i1 %261, label %265, label %262

262:                                              ; preds = %257
  %263 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %258, i64 1
  %264 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %263, %255
  br i1 %264, label %329, label %257

265:                                              ; preds = %257, %251
  %266 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %253, %251 ], [ %258, %257 ]
  %267 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %266 to i64
  %268 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %266, %255
  br i1 %268, label %329, label %269

269:                                              ; preds = %265
  %270 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 1
  %271 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %270, %255
  br i1 %271, label %324, label %272

272:                                              ; preds = %269
  %273 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %255, i64 -2, i32 0
  %274 = ptrtoint i8** %273 to i64
  %275 = sub i64 %274, %267
  %276 = lshr i64 %275, 3
  %277 = add nuw nsw i64 %276, 1
  %278 = and i64 %277, 3
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %298, label %280

280:                                              ; preds = %272, %293
  %281 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %295, %293 ], [ %270, %272 ]
  %282 = phi i64 [ %294, %293 ], [ %267, %272 ]
  %283 = phi i64 [ %296, %293 ], [ %278, %272 ]
  %284 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %281, i64 0, i32 0
  %285 = load i8*, i8** %284, align 8
  %286 = icmp eq i8* %285, null
  br i1 %286, label %293, label %287

287:                                              ; preds = %280
  %288 = ptrtoint i8* %285 to i64
  %289 = inttoptr i64 %282 to %"class.base::internal::UncheckedObserverAdapter"*
  %290 = inttoptr i64 %282 to i64*
  store i64 %288, i64* %290, align 8
  %291 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %289, i64 1
  %292 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %291 to i64
  br label %293

293:                                              ; preds = %287, %280
  %294 = phi i64 [ %282, %280 ], [ %292, %287 ]
  %295 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %281, i64 1
  %296 = add i64 %283, -1
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %280, !llvm.loop !21

298:                                              ; preds = %293, %272
  %299 = phi i64 [ undef, %272 ], [ %294, %293 ]
  %300 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %270, %272 ], [ %295, %293 ]
  %301 = phi i64 [ %267, %272 ], [ %294, %293 ]
  %302 = icmp ult i64 %275, 24
  br i1 %302, label %320, label %303

303:                                              ; preds = %298, %405
  %304 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %407, %405 ], [ %300, %298 ]
  %305 = phi i64 [ %406, %405 ], [ %301, %298 ]
  %306 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %304, i64 0, i32 0
  %307 = load i8*, i8** %306, align 8
  %308 = icmp eq i8* %307, null
  br i1 %308, label %315, label %309

309:                                              ; preds = %303
  %310 = ptrtoint i8* %307 to i64
  %311 = inttoptr i64 %305 to %"class.base::internal::UncheckedObserverAdapter"*
  %312 = inttoptr i64 %305 to i64*
  store i64 %310, i64* %312, align 8
  %313 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %311, i64 1
  %314 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %313 to i64
  br label %315

315:                                              ; preds = %309, %303
  %316 = phi i64 [ %305, %303 ], [ %314, %309 ]
  %317 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %304, i64 1, i32 0
  %318 = load i8*, i8** %317, align 8
  %319 = icmp eq i8* %318, null
  br i1 %319, label %383, label %377

320:                                              ; preds = %405, %298
  %321 = phi i64 [ %299, %298 ], [ %406, %405 ]
  %322 = inttoptr i64 %321 to %"class.base::internal::UncheckedObserverAdapter"*
  %323 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %254, align 8
  br label %324

324:                                              ; preds = %320, %269
  %325 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %255, %269 ], [ %323, %320 ]
  %326 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %266, %269 ], [ %322, %320 ]
  %327 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %326, %325
  br i1 %327, label %329, label %328

328:                                              ; preds = %324
  store %"class.base::internal::UncheckedObserverAdapter"* %326, %"class.base::internal::UncheckedObserverAdapter"** %254, align 8
  br label %329

329:                                              ; preds = %262, %328, %324, %265, %243
  %330 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %45, align 8
  %331 = icmp eq %"class.base::ObserverList"* %330, null
  br i1 %331, label %333, label %332

332:                                              ; preds = %329
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %45, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %54) #7
  br label %333

333:                                              ; preds = %240, %329, %332
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %44) #7
  br label %376

334:                                              ; preds = %140
  %335 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %107, i64 0, i32 0, i32 0, i32 0
  %336 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %335, align 8
  %337 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %336, i64 %143
  %338 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %337 to %"class.extensions::WindowControllerListObserver"**
  %339 = load %"class.extensions::WindowControllerListObserver"*, %"class.extensions::WindowControllerListObserver"** %338, align 8
  %340 = bitcast %"class.extensions::WindowControllerListObserver"* %339 to void (%"class.extensions::WindowControllerListObserver"*, %"class.extensions::WindowController"*)***
  %341 = load void (%"class.extensions::WindowControllerListObserver"*, %"class.extensions::WindowController"*)**, void (%"class.extensions::WindowControllerListObserver"*, %"class.extensions::WindowController"*)*** %340, align 8
  %342 = getelementptr inbounds void (%"class.extensions::WindowControllerListObserver"*, %"class.extensions::WindowController"*)*, void (%"class.extensions::WindowControllerListObserver"*, %"class.extensions::WindowController"*)** %341, i64 1
  %343 = load void (%"class.extensions::WindowControllerListObserver"*, %"class.extensions::WindowController"*)*, void (%"class.extensions::WindowControllerListObserver"*, %"class.extensions::WindowController"*)** %342, align 8
  call void %343(%"class.extensions::WindowControllerListObserver"* %339, %"class.extensions::WindowController"* %1) #7
  %344 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %45, align 8
  %345 = icmp eq %"class.base::ObserverList"* %344, null
  br i1 %345, label %346, label %347

346:                                              ; preds = %371, %367, %334, %347, %361
  br label %106

347:                                              ; preds = %334
  %348 = load i64, i64* %46, align 8
  %349 = add i64 %348, 1
  store i64 %349, i64* %46, align 8
  %350 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %344, i64 0, i32 0, i32 0, i32 1
  %351 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %350 to i64*
  %352 = load i64, i64* %351, align 8
  %353 = bitcast %"class.base::ObserverList"* %344 to i64*
  %354 = load i64, i64* %353, align 8
  %355 = sub i64 %352, %354
  %356 = ashr exact i64 %355, 3
  %357 = load i64, i64* %47, align 8
  %358 = icmp ult i64 %356, %357
  %359 = select i1 %358, i64 %356, i64 %357
  %360 = icmp ult i64 %349, %359
  br i1 %360, label %361, label %346

361:                                              ; preds = %347
  %362 = inttoptr i64 %354 to %"class.base::internal::UncheckedObserverAdapter"*
  %363 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %344, i64 0, i32 0, i32 0, i32 0
  %364 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %362, i64 %349, i32 0
  %365 = load i8*, i8** %364, align 8
  %366 = icmp eq i8* %365, null
  br i1 %366, label %367, label %346

367:                                              ; preds = %361, %371
  %368 = phi i64 [ %369, %371 ], [ %349, %361 ]
  %369 = add nuw i64 %368, 1
  store i64 %369, i64* %46, align 8
  %370 = icmp ult i64 %369, %359
  br i1 %370, label %371, label %346

371:                                              ; preds = %367
  %372 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %363, align 8
  %373 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %372, i64 %369, i32 0
  %374 = load i8*, i8** %373, align 8
  %375 = icmp eq i8* %374, null
  br i1 %375, label %367, label %346

376:                                              ; preds = %18, %24, %333
  ret void

377:                                              ; preds = %315
  %378 = ptrtoint i8* %318 to i64
  %379 = inttoptr i64 %316 to %"class.base::internal::UncheckedObserverAdapter"*
  %380 = inttoptr i64 %316 to i64*
  store i64 %378, i64* %380, align 8
  %381 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %379, i64 1
  %382 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %381 to i64
  br label %383

383:                                              ; preds = %377, %315
  %384 = phi i64 [ %316, %315 ], [ %382, %377 ]
  %385 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %304, i64 2, i32 0
  %386 = load i8*, i8** %385, align 8
  %387 = icmp eq i8* %386, null
  br i1 %387, label %394, label %388

388:                                              ; preds = %383
  %389 = ptrtoint i8* %386 to i64
  %390 = inttoptr i64 %384 to %"class.base::internal::UncheckedObserverAdapter"*
  %391 = inttoptr i64 %384 to i64*
  store i64 %389, i64* %391, align 8
  %392 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %390, i64 1
  %393 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %392 to i64
  br label %394

394:                                              ; preds = %388, %383
  %395 = phi i64 [ %384, %383 ], [ %393, %388 ]
  %396 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %304, i64 3, i32 0
  %397 = load i8*, i8** %396, align 8
  %398 = icmp eq i8* %397, null
  br i1 %398, label %405, label %399

399:                                              ; preds = %394
  %400 = ptrtoint i8* %397 to i64
  %401 = inttoptr i64 %395 to %"class.base::internal::UncheckedObserverAdapter"*
  %402 = inttoptr i64 %395 to i64*
  store i64 %400, i64* %402, align 8
  %403 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %401, i64 1
  %404 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %403 to i64
  br label %405

405:                                              ; preds = %399, %394
  %406 = phi i64 [ %395, %394 ], [ %404, %399 ]
  %407 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %304, i64 4
  %408 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %407, %255
  br i1 %408, label %320, label %303

409:                                              ; preds = %222
  %410 = ptrtoint i8* %225 to i64
  %411 = inttoptr i64 %223 to %"class.base::internal::UncheckedObserverAdapter"*
  %412 = inttoptr i64 %223 to i64*
  store i64 %410, i64* %412, align 8
  %413 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %411, i64 1
  %414 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %413 to i64
  br label %415

415:                                              ; preds = %409, %222
  %416 = phi i64 [ %223, %222 ], [ %414, %409 ]
  %417 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %211, i64 2, i32 0
  %418 = load i8*, i8** %417, align 8
  %419 = icmp eq i8* %418, null
  br i1 %419, label %426, label %420

420:                                              ; preds = %415
  %421 = ptrtoint i8* %418 to i64
  %422 = inttoptr i64 %416 to %"class.base::internal::UncheckedObserverAdapter"*
  %423 = inttoptr i64 %416 to i64*
  store i64 %421, i64* %423, align 8
  %424 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %422, i64 1
  %425 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %424 to i64
  br label %426

426:                                              ; preds = %420, %415
  %427 = phi i64 [ %416, %415 ], [ %425, %420 ]
  %428 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %211, i64 3, i32 0
  %429 = load i8*, i8** %428, align 8
  %430 = icmp eq i8* %429, null
  br i1 %430, label %437, label %431

431:                                              ; preds = %426
  %432 = ptrtoint i8* %429 to i64
  %433 = inttoptr i64 %427 to %"class.base::internal::UncheckedObserverAdapter"*
  %434 = inttoptr i64 %427 to i64*
  store i64 %432, i64* %434, align 8
  %435 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %433, i64 1
  %436 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %435 to i64
  br label %437

437:                                              ; preds = %431, %426
  %438 = phi i64 [ %427, %426 ], [ %436, %431 ]
  %439 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %211, i64 4
  %440 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %439, %162
  br i1 %440, label %227, label %210
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions20WindowControllerList25NotifyWindowBoundsChangedEPNS_16WindowControllerE(%"class.extensions::WindowControllerList"*, %"class.extensions::WindowController"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %5, align 8
  %7 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = icmp eq %"struct.std::__1::__list_node_base"* %6, %7
  br i1 %8, label %24, label %9

9:                                                ; preds = %2
  %10 = ptrtoint %"struct.std::__1::__list_node_base"* %6 to i64
  br label %11

11:                                               ; preds = %18, %9
  %12 = phi %"struct.std::__1::__list_node_base"* [ %6, %9 ], [ %22, %18 ]
  %13 = phi i64 [ %10, %9 ], [ %21, %18 ]
  %14 = inttoptr i64 %13 to %"struct.std::__1::__list_node"*
  %15 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %14, i64 0, i32 1
  %16 = load %"class.extensions::WindowController"*, %"class.extensions::WindowController"** %15, align 8
  %17 = icmp eq %"class.extensions::WindowController"* %16, %1
  br i1 %17, label %24, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %12, i64 0, i32 1
  %20 = bitcast %"struct.std::__1::__list_node_base"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = inttoptr i64 %21 to %"struct.std::__1::__list_node_base"*
  %23 = icmp eq %"struct.std::__1::__list_node_base"* %7, %22
  br i1 %23, label %361, label %11

24:                                               ; preds = %11, %2
  %25 = phi %"struct.std::__1::__list_node_base"* [ %6, %2 ], [ %12, %11 ]
  %26 = icmp eq %"struct.std::__1::__list_node_base"* %25, %7
  br i1 %26, label %361, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1
  %29 = bitcast %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %29) #7
  %30 = getelementptr inbounds %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %32 = getelementptr inbounds %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %28, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 40, i1 false)
  %35 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8, !noalias !22
  %36 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %37 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %36, align 8, !noalias !22
  %38 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %35, %37
  %39 = getelementptr inbounds %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %39) #7
  br i1 %38, label %40, label %42

40:                                               ; preds = %27
  %41 = bitcast %"class.base::ObserverList"** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #7, !alias.scope !22
  br label %82

42:                                               ; preds = %27
  store %"class.base::ObserverList"* %28, %"class.base::ObserverList"** %30, align 8
  %43 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %39, %"class.base::internal::LinkNodeBase"* %43) #7
  store i64 0, i64* %31, align 8
  %44 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1, i32 3
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %54, label %47

47:                                               ; preds = %42
  %48 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %36 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.base::ObserverList"* %28 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = sub i64 %49, %51
  %53 = ashr exact i64 %52, 3
  br label %54

54:                                               ; preds = %47, %42
  %55 = phi i64 [ %53, %47 ], [ -1, %42 ]
  store i64 %55, i64* %32, align 8
  %56 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %30, align 8
  %57 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %56, i64 0, i32 0, i32 0, i32 1
  %58 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.base::ObserverList"* %56 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = sub i64 %59, %61
  %63 = ashr exact i64 %62, 3
  %64 = icmp ult i64 %63, %55
  %65 = select i1 %64, i64 %63, i64 %55
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %82, label %67

67:                                               ; preds = %54
  %68 = inttoptr i64 %61 to %"class.base::internal::UncheckedObserverAdapter"*
  %69 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %56, i64 0, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %68, i64 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = icmp eq i8* %71, null
  br i1 %72, label %73, label %82

73:                                               ; preds = %67, %77
  %74 = phi i64 [ %75, %77 ], [ 0, %67 ]
  %75 = add nuw i64 %74, 1
  store i64 %75, i64* %31, align 8
  %76 = icmp ult i64 %75, %65
  br i1 %76, label %77, label %82

77:                                               ; preds = %73
  %78 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %69, align 8
  %79 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %78, i64 %75, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = icmp eq i8* %80, null
  br i1 %81, label %73, label %82

82:                                               ; preds = %77, %73, %67, %54, %40
  %83 = bitcast %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %83) #7
  %84 = getelementptr inbounds %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %85 = getelementptr inbounds %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %86 = getelementptr inbounds %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %87 = getelementptr inbounds %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.base::ObserverList<extensions::WindowControllerListObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %87) #7
  %89 = bitcast %"class.base::ObserverList"** %84 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #7, !alias.scope !25
  %90 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %30, align 8
  br label %91

91:                                               ; preds = %331, %82
  %92 = phi %"class.base::ObserverList"* [ %90, %82 ], [ %329, %331 ]
  %93 = icmp eq %"class.base::ObserverList"* %92, null
  br i1 %93, label %109, label %94

94:                                               ; preds = %91
  %95 = load i64, i64* %31, align 8
  %96 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %92, i64 0, i32 0, i32 0, i32 1
  %97 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.base::ObserverList"* %92 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = sub i64 %98, %100
  %102 = ashr exact i64 %101, 3
  %103 = load i64, i64* %32, align 8
  %104 = icmp ult i64 %102, %103
  %105 = select i1 %104, i64 %102, i64 %103
  %106 = icmp eq i64 %95, %105
  br i1 %106, label %109, label %107

107:                                              ; preds = %94
  %108 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %84, align 8
  br label %125

109:                                              ; preds = %94, %91
  %110 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %84, align 8
  %111 = icmp eq %"class.base::ObserverList"* %110, null
  br i1 %111, label %225, label %112

112:                                              ; preds = %109
  %113 = load i64, i64* %85, align 8
  %114 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %110, i64 0, i32 0, i32 0, i32 1
  %115 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = bitcast %"class.base::ObserverList"* %110 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = sub i64 %116, %118
  %120 = ashr exact i64 %119, 3
  %121 = load i64, i64* %86, align 8
  %122 = icmp ult i64 %120, %121
  %123 = select i1 %122, i64 %120, i64 %121
  %124 = icmp eq i64 %113, %123
  br i1 %124, label %134, label %125

125:                                              ; preds = %112, %107
  %126 = phi %"class.base::ObserverList"* [ %108, %107 ], [ %110, %112 ]
  %127 = icmp eq %"class.base::ObserverList"* %92, %126
  %128 = load i64, i64* %31, align 8
  %129 = load i64, i64* %85, align 8
  %130 = icmp eq i64 %128, %129
  %131 = and i1 %127, %130
  br i1 %131, label %132, label %319

132:                                              ; preds = %125
  %133 = icmp eq %"class.base::ObserverList"* %92, null
  br i1 %133, label %225, label %134

134:                                              ; preds = %112, %132
  %135 = phi %"class.base::ObserverList"* [ %92, %132 ], [ %110, %112 ]
  %136 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %135, i64 0, i32 1
  %137 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %135, i64 0, i32 1, i32 0, i32 0, i32 1
  %138 = bitcast %"class.base::internal::LinkNodeBase"** %137 to %"class.base::LinkNode"**
  %139 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %138, align 8
  %140 = bitcast %"class.base::LinkedList"* %136 to %"class.base::LinkNode"**
  %141 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %140, align 8
  %142 = icmp eq %"class.base::LinkNode"* %139, %141
  br i1 %142, label %143, label %221

143:                                              ; preds = %134
  %144 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %135, i64 0, i32 0, i32 0, i32 0
  %145 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %144, align 8
  %146 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %135, i64 0, i32 0, i32 0, i32 1
  %147 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %146, align 8
  %148 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %145, %147
  br i1 %148, label %157, label %149

149:                                              ; preds = %143, %154
  %150 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %155, %154 ], [ %145, %143 ]
  %151 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 0, i32 0
  %152 = load i8*, i8** %151, align 8
  %153 = icmp eq i8* %152, null
  br i1 %153, label %157, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 1
  %156 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %155, %147
  br i1 %156, label %221, label %149

157:                                              ; preds = %149, %143
  %158 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %145, %143 ], [ %150, %149 ]
  %159 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %158 to i64
  %160 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %158, %147
  br i1 %160, label %221, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %158, i64 1
  %163 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %162, %147
  br i1 %163, label %216, label %164

164:                                              ; preds = %161
  %165 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %147, i64 -2, i32 0
  %166 = ptrtoint i8** %165 to i64
  %167 = sub i64 %166, %159
  %168 = lshr i64 %167, 3
  %169 = add nuw nsw i64 %168, 1
  %170 = and i64 %169, 3
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %190, label %172

172:                                              ; preds = %164, %185
  %173 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %187, %185 ], [ %162, %164 ]
  %174 = phi i64 [ %186, %185 ], [ %159, %164 ]
  %175 = phi i64 [ %188, %185 ], [ %170, %164 ]
  %176 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 0, i32 0
  %177 = load i8*, i8** %176, align 8
  %178 = icmp eq i8* %177, null
  br i1 %178, label %185, label %179

179:                                              ; preds = %172
  %180 = ptrtoint i8* %177 to i64
  %181 = inttoptr i64 %174 to %"class.base::internal::UncheckedObserverAdapter"*
  %182 = inttoptr i64 %174 to i64*
  store i64 %180, i64* %182, align 8
  %183 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %181, i64 1
  %184 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %183 to i64
  br label %185

185:                                              ; preds = %179, %172
  %186 = phi i64 [ %174, %172 ], [ %184, %179 ]
  %187 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 1
  %188 = add i64 %175, -1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %190, label %172, !llvm.loop !28

190:                                              ; preds = %185, %164
  %191 = phi i64 [ undef, %164 ], [ %186, %185 ]
  %192 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %162, %164 ], [ %187, %185 ]
  %193 = phi i64 [ %159, %164 ], [ %186, %185 ]
  %194 = icmp ult i64 %167, 24
  br i1 %194, label %212, label %195

195:                                              ; preds = %190, %422
  %196 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %424, %422 ], [ %192, %190 ]
  %197 = phi i64 [ %423, %422 ], [ %193, %190 ]
  %198 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %196, i64 0, i32 0
  %199 = load i8*, i8** %198, align 8
  %200 = icmp eq i8* %199, null
  br i1 %200, label %207, label %201

201:                                              ; preds = %195
  %202 = ptrtoint i8* %199 to i64
  %203 = inttoptr i64 %197 to %"class.base::internal::UncheckedObserverAdapter"*
  %204 = inttoptr i64 %197 to i64*
  store i64 %202, i64* %204, align 8
  %205 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %203, i64 1
  %206 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %205 to i64
  br label %207

207:                                              ; preds = %201, %195
  %208 = phi i64 [ %197, %195 ], [ %206, %201 ]
  %209 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %196, i64 1, i32 0
  %210 = load i8*, i8** %209, align 8
  %211 = icmp eq i8* %210, null
  br i1 %211, label %400, label %394

212:                                              ; preds = %422, %190
  %213 = phi i64 [ %191, %190 ], [ %423, %422 ]
  %214 = inttoptr i64 %213 to %"class.base::internal::UncheckedObserverAdapter"*
  %215 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %146, align 8
  br label %216

216:                                              ; preds = %212, %161
  %217 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %147, %161 ], [ %215, %212 ]
  %218 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %158, %161 ], [ %214, %212 ]
  %219 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %218, %217
  br i1 %219, label %221, label %220

220:                                              ; preds = %216
  store %"class.base::internal::UncheckedObserverAdapter"* %218, %"class.base::internal::UncheckedObserverAdapter"** %146, align 8
  br label %221

221:                                              ; preds = %154, %220, %216, %157, %134
  %222 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %84, align 8
  %223 = icmp eq %"class.base::ObserverList"* %222, null
  br i1 %223, label %225, label %224

224:                                              ; preds = %221
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %84, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %87) #7
  br label %225

225:                                              ; preds = %109, %132, %221, %224
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %83) #7
  %226 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %30, align 8
  %227 = icmp eq %"class.base::ObserverList"* %226, null
  br i1 %227, label %318, label %228

228:                                              ; preds = %225
  %229 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %226, i64 0, i32 1
  %230 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %226, i64 0, i32 1, i32 0, i32 0, i32 1
  %231 = bitcast %"class.base::internal::LinkNodeBase"** %230 to %"class.base::LinkNode"**
  %232 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %231, align 8
  %233 = bitcast %"class.base::LinkedList"* %229 to %"class.base::LinkNode"**
  %234 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %233, align 8
  %235 = icmp eq %"class.base::LinkNode"* %232, %234
  br i1 %235, label %236, label %314

236:                                              ; preds = %228
  %237 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %226, i64 0, i32 0, i32 0, i32 0
  %238 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %237, align 8
  %239 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %226, i64 0, i32 0, i32 0, i32 1
  %240 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %239, align 8
  %241 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %238, %240
  br i1 %241, label %250, label %242

242:                                              ; preds = %236, %247
  %243 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %248, %247 ], [ %238, %236 ]
  %244 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 0, i32 0
  %245 = load i8*, i8** %244, align 8
  %246 = icmp eq i8* %245, null
  br i1 %246, label %250, label %247

247:                                              ; preds = %242
  %248 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 1
  %249 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %248, %240
  br i1 %249, label %314, label %242

250:                                              ; preds = %242, %236
  %251 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %238, %236 ], [ %243, %242 ]
  %252 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %251 to i64
  %253 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %251, %240
  br i1 %253, label %314, label %254

254:                                              ; preds = %250
  %255 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %251, i64 1
  %256 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %255, %240
  br i1 %256, label %309, label %257

257:                                              ; preds = %254
  %258 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %240, i64 -2, i32 0
  %259 = ptrtoint i8** %258 to i64
  %260 = sub i64 %259, %252
  %261 = lshr i64 %260, 3
  %262 = add nuw nsw i64 %261, 1
  %263 = and i64 %262, 3
  %264 = icmp eq i64 %263, 0
  br i1 %264, label %283, label %265

265:                                              ; preds = %257, %278
  %266 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %280, %278 ], [ %255, %257 ]
  %267 = phi i64 [ %279, %278 ], [ %252, %257 ]
  %268 = phi i64 [ %281, %278 ], [ %263, %257 ]
  %269 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 0, i32 0
  %270 = load i8*, i8** %269, align 8
  %271 = icmp eq i8* %270, null
  br i1 %271, label %278, label %272

272:                                              ; preds = %265
  %273 = ptrtoint i8* %270 to i64
  %274 = inttoptr i64 %267 to %"class.base::internal::UncheckedObserverAdapter"*
  %275 = inttoptr i64 %267 to i64*
  store i64 %273, i64* %275, align 8
  %276 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %274, i64 1
  %277 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %276 to i64
  br label %278

278:                                              ; preds = %272, %265
  %279 = phi i64 [ %267, %265 ], [ %277, %272 ]
  %280 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 1
  %281 = add i64 %268, -1
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %265, !llvm.loop !29

283:                                              ; preds = %278, %257
  %284 = phi i64 [ undef, %257 ], [ %279, %278 ]
  %285 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %255, %257 ], [ %280, %278 ]
  %286 = phi i64 [ %252, %257 ], [ %279, %278 ]
  %287 = icmp ult i64 %260, 24
  br i1 %287, label %305, label %288

288:                                              ; preds = %283, %390
  %289 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %392, %390 ], [ %285, %283 ]
  %290 = phi i64 [ %391, %390 ], [ %286, %283 ]
  %291 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %289, i64 0, i32 0
  %292 = load i8*, i8** %291, align 8
  %293 = icmp eq i8* %292, null
  br i1 %293, label %300, label %294

294:                                              ; preds = %288
  %295 = ptrtoint i8* %292 to i64
  %296 = inttoptr i64 %290 to %"class.base::internal::UncheckedObserverAdapter"*
  %297 = inttoptr i64 %290 to i64*
  store i64 %295, i64* %297, align 8
  %298 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %296, i64 1
  %299 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %298 to i64
  br label %300

300:                                              ; preds = %294, %288
  %301 = phi i64 [ %290, %288 ], [ %299, %294 ]
  %302 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %289, i64 1, i32 0
  %303 = load i8*, i8** %302, align 8
  %304 = icmp eq i8* %303, null
  br i1 %304, label %368, label %362

305:                                              ; preds = %390, %283
  %306 = phi i64 [ %284, %283 ], [ %391, %390 ]
  %307 = inttoptr i64 %306 to %"class.base::internal::UncheckedObserverAdapter"*
  %308 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %239, align 8
  br label %309

309:                                              ; preds = %305, %254
  %310 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %240, %254 ], [ %308, %305 ]
  %311 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %251, %254 ], [ %307, %305 ]
  %312 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %311, %310
  br i1 %312, label %314, label %313

313:                                              ; preds = %309
  store %"class.base::internal::UncheckedObserverAdapter"* %311, %"class.base::internal::UncheckedObserverAdapter"** %239, align 8
  br label %314

314:                                              ; preds = %247, %313, %309, %250, %228
  %315 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %30, align 8
  %316 = icmp eq %"class.base::ObserverList"* %315, null
  br i1 %316, label %318, label %317

317:                                              ; preds = %314
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %30, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %39) #7
  br label %318

318:                                              ; preds = %225, %314, %317
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %29) #7
  br label %361

319:                                              ; preds = %125
  %320 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %92, i64 0, i32 0, i32 0, i32 0
  %321 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %320, align 8
  %322 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %321, i64 %128
  %323 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %322 to %"class.extensions::WindowControllerListObserver"**
  %324 = load %"class.extensions::WindowControllerListObserver"*, %"class.extensions::WindowControllerListObserver"** %323, align 8
  %325 = bitcast %"class.extensions::WindowControllerListObserver"* %324 to void (%"class.extensions::WindowControllerListObserver"*, %"class.extensions::WindowController"*)***
  %326 = load void (%"class.extensions::WindowControllerListObserver"*, %"class.extensions::WindowController"*)**, void (%"class.extensions::WindowControllerListObserver"*, %"class.extensions::WindowController"*)*** %325, align 8
  %327 = getelementptr inbounds void (%"class.extensions::WindowControllerListObserver"*, %"class.extensions::WindowController"*)*, void (%"class.extensions::WindowControllerListObserver"*, %"class.extensions::WindowController"*)** %326, i64 2
  %328 = load void (%"class.extensions::WindowControllerListObserver"*, %"class.extensions::WindowController"*)*, void (%"class.extensions::WindowControllerListObserver"*, %"class.extensions::WindowController"*)** %327, align 8
  call void %328(%"class.extensions::WindowControllerListObserver"* %324, %"class.extensions::WindowController"* %1) #7
  %329 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %30, align 8
  %330 = icmp eq %"class.base::ObserverList"* %329, null
  br i1 %330, label %331, label %332

331:                                              ; preds = %356, %352, %319, %332, %346
  br label %91

332:                                              ; preds = %319
  %333 = load i64, i64* %31, align 8
  %334 = add i64 %333, 1
  store i64 %334, i64* %31, align 8
  %335 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %329, i64 0, i32 0, i32 0, i32 1
  %336 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %335 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = bitcast %"class.base::ObserverList"* %329 to i64*
  %339 = load i64, i64* %338, align 8
  %340 = sub i64 %337, %339
  %341 = ashr exact i64 %340, 3
  %342 = load i64, i64* %32, align 8
  %343 = icmp ult i64 %341, %342
  %344 = select i1 %343, i64 %341, i64 %342
  %345 = icmp ult i64 %334, %344
  br i1 %345, label %346, label %331

346:                                              ; preds = %332
  %347 = inttoptr i64 %339 to %"class.base::internal::UncheckedObserverAdapter"*
  %348 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %329, i64 0, i32 0, i32 0, i32 0
  %349 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %347, i64 %334, i32 0
  %350 = load i8*, i8** %349, align 8
  %351 = icmp eq i8* %350, null
  br i1 %351, label %352, label %331

352:                                              ; preds = %346, %356
  %353 = phi i64 [ %354, %356 ], [ %334, %346 ]
  %354 = add nuw i64 %353, 1
  store i64 %354, i64* %31, align 8
  %355 = icmp ult i64 %354, %344
  br i1 %355, label %356, label %331

356:                                              ; preds = %352
  %357 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %348, align 8
  %358 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %357, i64 %354, i32 0
  %359 = load i8*, i8** %358, align 8
  %360 = icmp eq i8* %359, null
  br i1 %360, label %352, label %331

361:                                              ; preds = %18, %24, %318
  ret void

362:                                              ; preds = %300
  %363 = ptrtoint i8* %303 to i64
  %364 = inttoptr i64 %301 to %"class.base::internal::UncheckedObserverAdapter"*
  %365 = inttoptr i64 %301 to i64*
  store i64 %363, i64* %365, align 8
  %366 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %364, i64 1
  %367 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %366 to i64
  br label %368

368:                                              ; preds = %362, %300
  %369 = phi i64 [ %301, %300 ], [ %367, %362 ]
  %370 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %289, i64 2, i32 0
  %371 = load i8*, i8** %370, align 8
  %372 = icmp eq i8* %371, null
  br i1 %372, label %379, label %373

373:                                              ; preds = %368
  %374 = ptrtoint i8* %371 to i64
  %375 = inttoptr i64 %369 to %"class.base::internal::UncheckedObserverAdapter"*
  %376 = inttoptr i64 %369 to i64*
  store i64 %374, i64* %376, align 8
  %377 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %375, i64 1
  %378 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %377 to i64
  br label %379

379:                                              ; preds = %373, %368
  %380 = phi i64 [ %369, %368 ], [ %378, %373 ]
  %381 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %289, i64 3, i32 0
  %382 = load i8*, i8** %381, align 8
  %383 = icmp eq i8* %382, null
  br i1 %383, label %390, label %384

384:                                              ; preds = %379
  %385 = ptrtoint i8* %382 to i64
  %386 = inttoptr i64 %380 to %"class.base::internal::UncheckedObserverAdapter"*
  %387 = inttoptr i64 %380 to i64*
  store i64 %385, i64* %387, align 8
  %388 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %386, i64 1
  %389 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %388 to i64
  br label %390

390:                                              ; preds = %384, %379
  %391 = phi i64 [ %380, %379 ], [ %389, %384 ]
  %392 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %289, i64 4
  %393 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %392, %240
  br i1 %393, label %305, label %288

394:                                              ; preds = %207
  %395 = ptrtoint i8* %210 to i64
  %396 = inttoptr i64 %208 to %"class.base::internal::UncheckedObserverAdapter"*
  %397 = inttoptr i64 %208 to i64*
  store i64 %395, i64* %397, align 8
  %398 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %396, i64 1
  %399 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %398 to i64
  br label %400

400:                                              ; preds = %394, %207
  %401 = phi i64 [ %208, %207 ], [ %399, %394 ]
  %402 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %196, i64 2, i32 0
  %403 = load i8*, i8** %402, align 8
  %404 = icmp eq i8* %403, null
  br i1 %404, label %411, label %405

405:                                              ; preds = %400
  %406 = ptrtoint i8* %403 to i64
  %407 = inttoptr i64 %401 to %"class.base::internal::UncheckedObserverAdapter"*
  %408 = inttoptr i64 %401 to i64*
  store i64 %406, i64* %408, align 8
  %409 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %407, i64 1
  %410 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %409 to i64
  br label %411

411:                                              ; preds = %405, %400
  %412 = phi i64 [ %401, %400 ], [ %410, %405 ]
  %413 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %196, i64 3, i32 0
  %414 = load i8*, i8** %413, align 8
  %415 = icmp eq i8* %414, null
  br i1 %415, label %422, label %416

416:                                              ; preds = %411
  %417 = ptrtoint i8* %414 to i64
  %418 = inttoptr i64 %412 to %"class.base::internal::UncheckedObserverAdapter"*
  %419 = inttoptr i64 %412 to i64*
  store i64 %417, i64* %419, align 8
  %420 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %418, i64 1
  %421 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %420 to i64
  br label %422

422:                                              ; preds = %416, %411
  %423 = phi i64 [ %412, %411 ], [ %421, %416 ]
  %424 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %196, i64 4
  %425 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %424, %147
  br i1 %425, label %212, label %195
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions20WindowControllerList11AddObserverEPNS_28WindowControllerListObserverE(%"class.extensions::WindowControllerList"*, %"class.extensions::WindowControllerListObserver"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1
  %4 = icmp eq %"class.extensions::WindowControllerListObserver"* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %"class.extensions::WindowControllerListObserver"* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %"class.extensions::WindowControllerListObserver"* %1 to i64
  %32 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #9
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #9
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #8
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #7
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #8
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions20WindowControllerList14RemoveObserverEPNS_28WindowControllerListObserverE(%"class.extensions::WindowControllerList"*, %"class.extensions::WindowControllerListObserver"* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.extensions::WindowControllerListObserver"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode"**
  %32 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %31, align 8
  %33 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 1, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #7
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.extensions::WindowController"* @_ZNK10extensions20WindowControllerList35FindWindowForFunctionByIdWithFilterEPK17ExtensionFunctionij(%"class.extensions::WindowControllerList"*, %class.ExtensionFunction*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::__list_node_base"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = inttoptr i64 %7 to %"struct.std::__1::__list_node_base"*
  %10 = icmp eq %"struct.std::__1::__list_node_base"* %8, %9
  br i1 %10, label %36, label %17

11:                                               ; preds = %17
  %12 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %18, i64 0, i32 1
  %13 = bitcast %"struct.std::__1::__list_node_base"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = inttoptr i64 %14 to %"struct.std::__1::__list_node_base"*
  %16 = icmp eq %"struct.std::__1::__list_node_base"* %8, %15
  br i1 %16, label %36, label %17

17:                                               ; preds = %4, %11
  %18 = phi %"struct.std::__1::__list_node_base"* [ %15, %11 ], [ %9, %4 ]
  %19 = phi i64 [ %14, %11 ], [ %7, %4 ]
  %20 = inttoptr i64 %19 to %"struct.std::__1::__list_node"*
  %21 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %20, i64 0, i32 1
  %22 = load %"class.extensions::WindowController"*, %"class.extensions::WindowController"** %21, align 8
  %23 = bitcast %"class.extensions::WindowController"* %22 to i32 (%"class.extensions::WindowController"*)***
  %24 = load i32 (%"class.extensions::WindowController"*)**, i32 (%"class.extensions::WindowController"*)*** %23, align 8
  %25 = getelementptr inbounds i32 (%"class.extensions::WindowController"*)*, i32 (%"class.extensions::WindowController"*)** %24, i64 2
  %26 = load i32 (%"class.extensions::WindowController"*)*, i32 (%"class.extensions::WindowController"*)** %25, align 8
  %27 = tail call i32 %26(%"class.extensions::WindowController"* %22) #7
  %28 = icmp eq i32 %27, %2
  br i1 %28, label %29, label %11

29:                                               ; preds = %17
  %30 = inttoptr i64 %19 to %"struct.std::__1::__list_node"*
  %31 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %30, i64 0, i32 1
  %32 = load %"class.extensions::WindowController"*, %"class.extensions::WindowController"** %31, align 8
  %33 = tail call zeroext i1 @_ZN12windows_util18CanOperateOnWindowEPK17ExtensionFunctionPKN10extensions16WindowControllerEj(%class.ExtensionFunction* %1, %"class.extensions::WindowController"* %32, i32 %3) #7
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  %35 = load %"class.extensions::WindowController"*, %"class.extensions::WindowController"** %31, align 8
  br label %36

36:                                               ; preds = %11, %4, %29, %34
  %37 = phi %"class.extensions::WindowController"* [ null, %29 ], [ %35, %34 ], [ null, %4 ], [ null, %11 ]
  ret %"class.extensions::WindowController"* %37
}

declare zeroext i1 @_ZN12windows_util18CanOperateOnWindowEPK17ExtensionFunctionPKN10extensions16WindowControllerEj(%class.ExtensionFunction*, %"class.extensions::WindowController"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.extensions::WindowController"* @_ZNK10extensions20WindowControllerList24CurrentWindowForFunctionEPK17ExtensionFunction(%"class.extensions::WindowControllerList"* readonly, %class.ExtensionFunction*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast %"struct.std::__1::__list_node_base"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = inttoptr i64 %5 to %"struct.std::__1::__list_node_base"*
  %8 = icmp eq %"struct.std::__1::__list_node_base"* %6, %7
  br i1 %8, label %32, label %9

9:                                                ; preds = %2, %25
  %10 = phi %"struct.std::__1::__list_node_base"* [ %30, %25 ], [ %7, %2 ]
  %11 = phi i64 [ %29, %25 ], [ %5, %2 ]
  %12 = phi %"class.extensions::WindowController"* [ %26, %25 ], [ null, %2 ]
  %13 = inttoptr i64 %11 to %"struct.std::__1::__list_node"*
  %14 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %13, i64 0, i32 1
  %15 = load %"class.extensions::WindowController"*, %"class.extensions::WindowController"** %14, align 8
  %16 = tail call zeroext i1 @_ZN12windows_util18CanOperateOnWindowEPK17ExtensionFunctionPKN10extensions16WindowControllerEj(%class.ExtensionFunction* %1, %"class.extensions::WindowController"* %15, i32 0) #7
  br i1 %16, label %17, label %25

17:                                               ; preds = %9
  %18 = load %"class.extensions::WindowController"*, %"class.extensions::WindowController"** %14, align 8
  %19 = getelementptr inbounds %"class.extensions::WindowController", %"class.extensions::WindowController"* %18, i64 0, i32 1
  %20 = load %"class.ui::BaseWindow"*, %"class.ui::BaseWindow"** %19, align 8
  %21 = bitcast %"class.ui::BaseWindow"* %20 to i1 (%"class.ui::BaseWindow"*)***
  %22 = load i1 (%"class.ui::BaseWindow"*)**, i1 (%"class.ui::BaseWindow"*)*** %21, align 8
  %23 = load i1 (%"class.ui::BaseWindow"*)*, i1 (%"class.ui::BaseWindow"*)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.ui::BaseWindow"* %20) #7
  br i1 %24, label %32, label %25

25:                                               ; preds = %17, %9
  %26 = phi %"class.extensions::WindowController"* [ %18, %17 ], [ %12, %9 ]
  %27 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %10, i64 0, i32 1
  %28 = bitcast %"struct.std::__1::__list_node_base"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = inttoptr i64 %29 to %"struct.std::__1::__list_node_base"*
  %31 = icmp eq %"struct.std::__1::__list_node_base"* %6, %30
  br i1 %31, label %32, label %9

32:                                               ; preds = %17, %25, %2
  %33 = phi %"class.extensions::WindowController"* [ null, %2 ], [ %18, %17 ], [ %26, %25 ]
  ret %"class.extensions::WindowController"* %33
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.extensions::WindowController"* @_ZNK10extensions20WindowControllerList34CurrentWindowForFunctionWithFilterEPK17ExtensionFunctionj(%"class.extensions::WindowControllerList"*, %class.ExtensionFunction*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.std::__1::__list_node_base"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.extensions::WindowControllerList", %"class.extensions::WindowControllerList"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = inttoptr i64 %6 to %"struct.std::__1::__list_node_base"*
  %9 = icmp eq %"struct.std::__1::__list_node_base"* %7, %8
  br i1 %9, label %33, label %10

10:                                               ; preds = %3, %26
  %11 = phi %"struct.std::__1::__list_node_base"* [ %31, %26 ], [ %8, %3 ]
  %12 = phi i64 [ %30, %26 ], [ %6, %3 ]
  %13 = phi %"class.extensions::WindowController"* [ %27, %26 ], [ null, %3 ]
  %14 = inttoptr i64 %12 to %"struct.std::__1::__list_node"*
  %15 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %14, i64 0, i32 1
  %16 = load %"class.extensions::WindowController"*, %"class.extensions::WindowController"** %15, align 8
  %17 = tail call zeroext i1 @_ZN12windows_util18CanOperateOnWindowEPK17ExtensionFunctionPKN10extensions16WindowControllerEj(%class.ExtensionFunction* %1, %"class.extensions::WindowController"* %16, i32 %2) #7
  br i1 %17, label %18, label %26

18:                                               ; preds = %10
  %19 = load %"class.extensions::WindowController"*, %"class.extensions::WindowController"** %15, align 8
  %20 = getelementptr inbounds %"class.extensions::WindowController", %"class.extensions::WindowController"* %19, i64 0, i32 1
  %21 = load %"class.ui::BaseWindow"*, %"class.ui::BaseWindow"** %20, align 8
  %22 = bitcast %"class.ui::BaseWindow"* %21 to i1 (%"class.ui::BaseWindow"*)***
  %23 = load i1 (%"class.ui::BaseWindow"*)**, i1 (%"class.ui::BaseWindow"*)*** %22, align 8
  %24 = load i1 (%"class.ui::BaseWindow"*)*, i1 (%"class.ui::BaseWindow"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.ui::BaseWindow"* %21) #7
  br i1 %25, label %33, label %26

26:                                               ; preds = %10, %18
  %27 = phi %"class.extensions::WindowController"* [ %19, %18 ], [ %13, %10 ]
  %28 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %11, i64 0, i32 1
  %29 = bitcast %"struct.std::__1::__list_node_base"** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = inttoptr i64 %30 to %"struct.std::__1::__list_node_base"*
  %32 = icmp eq %"struct.std::__1::__list_node_base"* %7, %31
  br i1 %32, label %33, label %10

33:                                               ; preds = %18, %26, %3
  %34 = phi %"class.extensions::WindowController"* [ null, %3 ], [ %27, %26 ], [ %19, %18 ]
  ret %"class.extensions::WindowController"* %34
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base9SingletonIN10extensions20WindowControllerListENS_22DefaultSingletonTraitsIS2_EES2_E6OnExitEPv(i8*) #0 comdat align 2 {
  %2 = load atomic i64, i64* @_ZN4base9SingletonIN10extensions20WindowControllerListENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E monotonic, align 8
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %7, label %4

4:                                                ; preds = %1
  %5 = inttoptr i64 %2 to %"class.extensions::WindowControllerList"*
  tail call void @_ZN10extensions20WindowControllerListD2Ev(%"class.extensions::WindowControllerList"* nonnull %5) #7
  %6 = inttoptr i64 %2 to i8*
  tail call void @_ZdlPv(i8* %6) #8
  br label %7

7:                                                ; preds = %1, %4
  store i64 0, i64* @_ZN4base9SingletonIN10extensions20WindowControllerListENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E, align 8
  ret void
}

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #2

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #2

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #2

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__14listIPN10extensions16WindowControllerENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__14listIPN10extensions16WindowControllerENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4base12ObserverListIN10extensions28WindowControllerListObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4base12ObserverListIN10extensions28WindowControllerListObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK4base12ObserverListIN10extensions28WindowControllerListObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!10 = distinct !{!10, !"_ZNK4base12ObserverListIN10extensions28WindowControllerListObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = distinct !{!13, !12}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK4base12ObserverListIN10extensions28WindowControllerListObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!16 = distinct !{!16, !"_ZNK4base12ObserverListIN10extensions28WindowControllerListObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK4base12ObserverListIN10extensions28WindowControllerListObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!19 = distinct !{!19, !"_ZNK4base12ObserverListIN10extensions28WindowControllerListObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!20 = distinct !{!20, !12}
!21 = distinct !{!21, !12}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK4base12ObserverListIN10extensions28WindowControllerListObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!24 = distinct !{!24, !"_ZNK4base12ObserverListIN10extensions28WindowControllerListObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK4base12ObserverListIN10extensions28WindowControllerListObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!27 = distinct !{!27, !"_ZNK4base12ObserverListIN10extensions28WindowControllerListObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!28 = distinct !{!28, !12}
!29 = distinct !{!29, !12}
