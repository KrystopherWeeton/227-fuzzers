; ModuleID = '../../third_party/angle/src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp'
source_filename = "../../third_party/angle/src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.angle::PackedEnumMap.1453" = type { %"struct.std::__1::array.1454" }
%"struct.std::__1::array.1454" = type { [6 x i32] }
%"class.angle::PackedEnumMap.1466" = type { %"struct.std::__1::array.1467" }
%"struct.std::__1::array.1467" = type { [6 x i8*] }
%"class.angle::PackedEnumMap.1545" = type { %"struct.std::__1::array.1546" }
%"struct.std::__1::array.1546" = type { [15 x i8] }
%struct.VkDevice_T = type opaque
%struct.VkShaderModule_T = type opaque
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%"struct.rx::DefaultUniformBlock" = type { [8 x i8], %"class.angle::MemoryBuffer", %"class.std::__1::vector.644" }
%"class.angle::MemoryBuffer" = type { i64, i8* }
%"class.std::__1::vector.644" = type { %"class.std::__1::__vector_base.645" }
%"class.std::__1::__vector_base.645" = type { %"struct.sh::BlockMemberInfo"*, %"struct.sh::BlockMemberInfo"*, %"class.std::__1::__compressed_pair.646" }
%"struct.sh::BlockMemberInfo" = type { i32, i32, i32, i8, i32 }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"struct.sh::BlockMemberInfo"* }
%"class.rx::ShaderInfo" = type <{ %"class.angle::PackedEnumMap.651", i8, [7 x i8] }>
%"class.angle::PackedEnumMap.651" = type { %"struct.std::__1::array.652" }
%"struct.std::__1::array.652" = type { [6 x %"class.std::__1::vector"] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i32* }
%"class.rx::ProgramInfo" = type { [8 x i8], %"class.rx::vk::ShaderProgramHelper", %"class.angle::PackedEnumMap.898" }
%"class.rx::vk::ShaderProgramHelper" = type { [8 x i8], %"class.angle::PackedEnumMap.871", %"class.rx::GraphicsPipelineCache", %"class.rx::vk::ObjectAndSerial", %"struct.rx::vk::SpecializationConstants" }
%"class.angle::PackedEnumMap.871" = type { %"struct.std::__1::array.872" }
%"struct.std::__1::array.872" = type { [6 x %"class.rx::vk::BindingPointer.873"] }
%"class.rx::vk::BindingPointer.873" = type { %"class.rx::vk::RefCounted.874"* }
%"class.rx::vk::RefCounted.874" = type { i32, %"class.rx::vk::ObjectAndSerial.875" }
%"class.rx::vk::ObjectAndSerial.875" = type { [8 x i8], %"class.rx::vk::ShaderModule", %"class.rx::Serial" }
%"class.rx::vk::ShaderModule" = type { %"class.rx::vk::WrappedObject.876" }
%"class.rx::vk::WrappedObject.876" = type { %struct.VkShaderModule_T* }
%"class.rx::Serial" = type { i64 }
%"class.rx::GraphicsPipelineCache" = type { %"class.rx::HasCacheStats.877", %"class.std::__1::unordered_map" }
%"class.rx::HasCacheStats.877" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.rx::CacheStats" = type { i64, i64 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.886", %"class.std::__1::__compressed_pair.891", %"class.std::__1::__compressed_pair.893", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.882" }
%"class.std::__1::__compressed_pair.882" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.887" }
%"struct.std::__1::__compressed_pair_elem.887" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.891" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { float }
%"class.rx::vk::ObjectAndSerial" = type { [8 x i8], %"class.rx::vk::Pipeline", %"class.rx::Serial" }
%"class.rx::vk::Pipeline" = type { %"class.rx::vk::WrappedObject" }
%"class.rx::vk::WrappedObject" = type { %struct.VkPipeline_T* }
%struct.VkPipeline_T = type opaque
%"struct.rx::vk::SpecializationConstants" = type { i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.898" = type { %"struct.std::__1::array.899" }
%"struct.std::__1::array.899" = type { [6 x %"class.rx::vk::RefCounted.874"] }
%"class.rx::ProgramExecutableVk" = type { i32 (...)**, %"class.angle::PackedEnumMap.807", %"class.angle::PackedEnumMap.807", i32, %"class.rx::vk::BufferSerial", %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache.824", %"class.rx::DescriptorSetCache.841", %"class.rx::vk::BindingPointer.858", %"class.angle::PackedEnumMap.860", %"class.angle::PackedEnumMap.864", %"class.angle::PackedEnumMap.867", i32, %"class.angle::FixedVector.869", %"class.std::__1::vector", %"class.rx::ShaderInterfaceVariableInfoMap", [64 x %"class.rx::ProgramInfo"], %"class.rx::ProgramInfo", %"struct.rx::ProgramTransformOptions", %"class.rx::ProgramVk"*, %"class.rx::ProgramPipelineVk"*, %"struct.rx::ProgramExecutablePerfCounters", %"struct.rx::ProgramExecutablePerfCounters" }
%"class.angle::PackedEnumMap.807" = type { %"struct.std::__1::array.808" }
%"struct.std::__1::array.808" = type { [4 x %struct.VkDescriptorSet_T*] }
%struct.VkDescriptorSet_T = type opaque
%"class.rx::vk::BufferSerial" = type { i32 }
%"class.rx::DescriptorSetCache" = type { %"class.rx::HasCacheStats", %"class.absl::flat_hash_map.809" }
%"class.rx::HasCacheStats" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.absl::flat_hash_map.809" = type { %"class.absl::container_internal::raw_hash_map.810" }
%"class.absl::container_internal::raw_hash_map.810" = type { %"class.absl::container_internal::raw_hash_set.811" }
%"class.absl::container_internal::raw_hash_set.811" = type { i8*, %"union.absl::container_internal::map_slot_type.812"*, i64, i64, %"class.absl::container_internal::CompressedTuple.813" }
%"union.absl::container_internal::map_slot_type.812" = type { %"struct.std::__1::pair.1527" }
%"struct.std::__1::pair.1527" = type { %"class.rx::vk::UniformsAndXfbDescriptorDesc", %struct.VkDescriptorSet_T* }
%"class.rx::vk::UniformsAndXfbDescriptorDesc" = type { i32, %"struct.std::__1::array.1449", %"struct.std::__1::array.901" }
%"struct.std::__1::array.1449" = type { [5 x %"class.rx::vk::BufferSerial"] }
%"struct.std::__1::array.901" = type { [4 x i32] }
%"class.absl::container_internal::CompressedTuple.813" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.814" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.814" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.rx::DescriptorSetCache.824" = type { %"class.rx::HasCacheStats.825", %"class.absl::flat_hash_map.826" }
%"class.rx::HasCacheStats.825" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.absl::flat_hash_map.826" = type { %"class.absl::container_internal::raw_hash_map.827" }
%"class.absl::container_internal::raw_hash_map.827" = type { %"class.absl::container_internal::raw_hash_set.828" }
%"class.absl::container_internal::raw_hash_set.828" = type { i8*, %"union.absl::container_internal::map_slot_type.829"*, i64, i64, %"class.absl::container_internal::CompressedTuple.830" }
%"union.absl::container_internal::map_slot_type.829" = type { %"struct.std::__1::pair.1529" }
%"struct.std::__1::pair.1529" = type { %"class.rx::vk::TextureDescriptorDesc", %struct.VkDescriptorSet_T* }
%"class.rx::vk::TextureDescriptorDesc" = type { i32, %"struct.std::__1::array.956" }
%"struct.std::__1::array.956" = type { [96 x %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"] }
%"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials" = type { %"struct.rx::vk::ImageOrBufferViewSubresourceSerial", %"class.rx::vk::SamplerSerial" }
%"struct.rx::vk::ImageOrBufferViewSubresourceSerial" = type { %"class.rx::vk::ImageOrBufferViewSerial", %"struct.rx::vk::ImageSubresourceRange" }
%"class.rx::vk::ImageOrBufferViewSerial" = type { i32 }
%"struct.rx::vk::ImageSubresourceRange" = type { i32 }
%"class.rx::vk::SamplerSerial" = type { i32 }
%"class.absl::container_internal::CompressedTuple.830" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.831" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.831" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.rx::DescriptorSetCache.841" = type { %"class.rx::HasCacheStats.842", %"class.absl::flat_hash_map.843" }
%"class.rx::HasCacheStats.842" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.absl::flat_hash_map.843" = type { %"class.absl::container_internal::raw_hash_map.844" }
%"class.absl::container_internal::raw_hash_map.844" = type { %"class.absl::container_internal::raw_hash_set.845" }
%"class.absl::container_internal::raw_hash_set.845" = type { i8*, %"union.absl::container_internal::map_slot_type.846"*, i64, i64, %"class.absl::container_internal::CompressedTuple.847" }
%"union.absl::container_internal::map_slot_type.846" = type { %"struct.std::__1::pair.1531" }
%"struct.std::__1::pair.1531" = type { %"class.rx::vk::ShaderBuffersDescriptorDesc", %struct.VkDescriptorSet_T* }
%"class.rx::vk::ShaderBuffersDescriptorDesc" = type { %"class.angle::FastVector.957" }
%"class.angle::FastVector.957" = type { %"struct.std::__1::array.958", i32*, i64, i64 }
%"struct.std::__1::array.958" = type { [32 x i32] }
%"class.absl::container_internal::CompressedTuple.847" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.848" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.848" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.rx::vk::BindingPointer.858" = type { %"class.rx::vk::RefCounted.859"* }
%"class.rx::vk::RefCounted.859" = type { i32, %"class.rx::vk::PipelineLayout" }
%"class.rx::vk::PipelineLayout" = type { %"class.rx::vk::WrappedObject.1456" }
%"class.rx::vk::WrappedObject.1456" = type { %struct.VkPipelineLayout_T* }
%struct.VkPipelineLayout_T = type opaque
%"class.angle::PackedEnumMap.860" = type { %"struct.std::__1::array.861" }
%"struct.std::__1::array.861" = type { [4 x %"class.rx::vk::BindingPointer.862"] }
%"class.rx::vk::BindingPointer.862" = type { %"class.rx::vk::RefCounted.863"* }
%"class.rx::vk::RefCounted.863" = type { i32, %"class.rx::vk::DescriptorSetLayout" }
%"class.rx::vk::DescriptorSetLayout" = type { %"class.rx::vk::WrappedObject.1451" }
%"class.rx::vk::WrappedObject.1451" = type { %struct.VkDescriptorSetLayout_T* }
%struct.VkDescriptorSetLayout_T = type opaque
%"class.angle::PackedEnumMap.864" = type { %"struct.std::__1::array.865" }
%"struct.std::__1::array.865" = type { [4 x %"class.rx::vk::BindingPointer.866"] }
%"class.rx::vk::BindingPointer.866" = type { %"class.rx::vk::RefCounted"* }
%"class.rx::vk::RefCounted" = type { i32, %"class.rx::vk::DescriptorPoolHelper" }
%"class.rx::vk::DescriptorPoolHelper" = type { %"class.rx::vk::Resource", i32, %"class.rx::vk::DescriptorPool" }
%"class.rx::vk::Resource" = type { i32 (...)**, %"class.rx::vk::SharedResourceUse" }
%"class.rx::vk::SharedResourceUse" = type { %"struct.rx::vk::ResourceUse"* }
%"struct.rx::vk::ResourceUse" = type { i32, %"class.rx::Serial" }
%"class.rx::vk::DescriptorPool" = type { %"class.rx::vk::WrappedObject.1450" }
%"class.rx::vk::WrappedObject.1450" = type { %struct.VkDescriptorPool_T* }
%struct.VkDescriptorPool_T = type opaque
%"class.angle::PackedEnumMap.867" = type { %"struct.std::__1::array.868" }
%"struct.std::__1::array.868" = type { [4 x %"class.rx::vk::DynamicDescriptorPool"] }
%"class.rx::vk::DynamicDescriptorPool" = type { i64, %"class.std::__1::vector.699", %"class.std::__1::vector.706", %struct.VkDescriptorSetLayout_T* }
%"class.std::__1::vector.699" = type { %"class.std::__1::__vector_base.700" }
%"class.std::__1::__vector_base.700" = type { %"class.rx::vk::RefCounted"**, %"class.rx::vk::RefCounted"**, %"class.std::__1::__compressed_pair.701" }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.702" }
%"struct.std::__1::__compressed_pair_elem.702" = type { %"class.rx::vk::RefCounted"** }
%"class.std::__1::vector.706" = type { %"class.std::__1::__vector_base.707" }
%"class.std::__1::__vector_base.707" = type { %struct.VkDescriptorPoolSize*, %struct.VkDescriptorPoolSize*, %"class.std::__1::__compressed_pair.708" }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.709" }
%"struct.std::__1::__compressed_pair_elem.709" = type { %struct.VkDescriptorPoolSize* }
%"class.angle::FixedVector.869" = type { %"struct.std::__1::array.870", i64 }
%"struct.std::__1::array.870" = type { [6 x i32] }
%"class.rx::ShaderInterfaceVariableInfoMap" = type { %"class.angle::PackedEnumMap.655" }
%"class.angle::PackedEnumMap.655" = type { %"struct.std::__1::array.656" }
%"struct.std::__1::array.656" = type { [6 x %"class.absl::flat_hash_map.657"] }
%"class.absl::flat_hash_map.657" = type { %"class.absl::container_internal::raw_hash_map.658" }
%"class.absl::container_internal::raw_hash_map.658" = type { %"class.absl::container_internal::raw_hash_set.659" }
%"class.absl::container_internal::raw_hash_set.659" = type { i8*, %"union.absl::container_internal::map_slot_type.660"*, i64, i64, %"class.absl::container_internal::CompressedTuple.661" }
%"union.absl::container_internal::map_slot_type.660" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"struct.rx::ShaderInterfaceVariableInfo" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.rx::ShaderInterfaceVariableInfo" = type <{ i32, i32, i32, i32, i32, %"class.angle::BitSetT.141", [3 x i8], %"struct.rx::ShaderInterfaceVariableXfbInfo", %"class.std::__1::vector.1432", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.angle::BitSetT.141" = type { i8 }
%"struct.rx::ShaderInterfaceVariableXfbInfo" = type { i32, i32, i32, i32, i32, i32, i32, i32, %"class.std::__1::vector.1432" }
%"class.std::__1::vector.1432" = type { %"class.std::__1::__vector_base.1433" }
%"class.std::__1::__vector_base.1433" = type { %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"class.std::__1::__compressed_pair.1434" }
%"class.std::__1::__compressed_pair.1434" = type { %"struct.std::__1::__compressed_pair_elem.1435" }
%"struct.std::__1::__compressed_pair_elem.1435" = type { %"struct.rx::ShaderInterfaceVariableXfbInfo"* }
%"class.absl::container_internal::CompressedTuple.661" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.662" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.662" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.rx::ProgramTransformOptions" = type { i8 }
%"class.rx::ProgramVk" = type { %"class.rx::ProgramImpl", %"class.angle::PackedEnumMap.805", %"class.angle::BitSetT.141", [7 x i8], %"class.rx::ShaderInfo", %"struct.rx::GlslangProgramInterfaceInfo", %"class.rx::ProgramExecutableVk" }
%"class.rx::ProgramImpl" = type { i32 (...)**, %"class.gl::ProgramState"* }
%"class.gl::ProgramState" = type { %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", %"class.angle::PackedEnumMap.123", i32, %"class.std::__1::vector.125", %"class.std::__1::vector.132", %"class.std::__1::vector.139", %"class.gl::Range", %"class.angle::BitSetT.147", %"class.std::__1::vector", %"class.angle::BitSetT.148", i8, i8, i8, i8, %"class.angle::BitSetT", i32, i32, i32, i32, i32, i32, %"class.gl::ProgramAliasedBindings", %"class.std::__1::shared_ptr" }
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.angle::PackedEnumMap.123" = type { %"struct.std::__1::array.124" }
%"struct.std::__1::array.124" = type { [6 x %"class.gl::Shader"*] }
%"class.gl::Shader" = type { %"class.gl::LabeledObject", %"class.gl::ShaderState", %"class.std::__1::unique_ptr.85", %"struct.gl::Limitations", %"struct.gl::ShaderProgramID", i8, i32, i8, %"class.std::__1::basic_string", %"class.gl::BindingPointer", %"class.std::__1::unique_ptr.107", %"class.std::__1::basic_string", %"class.gl::ShaderProgramManager"*, i32, i32 }
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.gl::ShaderState" = type <{ %"class.std::__1::basic_string", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", [4 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.77", %"class.std::__1::vector.77", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", i8, [3 x i8], %"class.angle::BitSetT", i32, %struct.Optional, %struct.Optional, %struct.Optional.84, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.79" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.70" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.sh::InterfaceBlock"* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.72" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", i8, i8, %"class.std::__1::vector.70", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.sh::ShaderVariable"* }
%struct.Optional = type { i8, i8 }
%struct.Optional.84 = type { i8, i32 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.rx::ShaderImpl"* }
%"class.rx::ShaderImpl" = type opaque
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.gl::ShaderProgramID" = type { i32 }
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer.91" }
%"class.angle::BindingPointer.91" = type { i32 (...)**, %"class.gl::Compiler"* }
%"class.gl::Compiler" = type { %"class.angle::RefCountObject", %"class.std::__1::unique_ptr.92", i32, i32, %struct.ShBuiltInResources, %"class.angle::PackedEnumMap.98" }
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.rx::CompilerImpl"* }
%"class.rx::CompilerImpl" = type opaque
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array.32" = type { [3 x i32] }
%"class.angle::PackedEnumMap.98" = type { %"struct.std::__1::array.99" }
%"struct.std::__1::array.99" = type { [6 x %"class.std::__1::vector.100"] }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.gl::ShCompilerInstance"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::__compressed_pair.102" }
%"class.gl::ShCompilerInstance" = type <{ i8*, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.gl::ShCompilerInstance"* }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.gl::Shader::CompilingState"* }
%"struct.gl::Shader::CompilingState" = type opaque
%"class.gl::ShaderProgramManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.122" }
%"class.gl::ResourceManagerBase" = type { i32 (...)**, %"class.gl::HandleAllocator", i64 }
%"class.gl::HandleAllocator" = type <{ i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.45", %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"*, %"class.std::__1::__compressed_pair.47" }
%"struct.gl::HandleAllocator::HandleRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.gl::HandleAllocator::HandleRange"* }
%"class.gl::ResourceMap.69" = type { i64, %"class.gl::Shader"**, %"class.absl::flat_hash_map.113" }
%"class.absl::flat_hash_map.113" = type { %"class.absl::container_internal::raw_hash_map.114" }
%"class.absl::container_internal::raw_hash_map.114" = type { %"class.absl::container_internal::raw_hash_set.115" }
%"class.absl::container_internal::raw_hash_set.115" = type { i8*, %"union.absl::container_internal::map_slot_type.116"*, i64, i64, %"class.absl::container_internal::CompressedTuple.117" }
%"union.absl::container_internal::map_slot_type.116" = type opaque
%"class.absl::container_internal::CompressedTuple.117" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.122" = type { i64, %"class.gl::Program"**, %"class.absl::flat_hash_map.241" }
%"class.gl::Program" = type { %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::HasAttachedShaders", %"class.rx::Serial", %"class.gl::ProgramState", %"class.rx::ProgramImpl"*, i8, %"class.gl::ProgramBindings", %"class.gl::ProgramAliasedBindings", %"class.gl::ProgramAliasedBindings", i8, %"class.std::__1::unique_ptr.235", i8, i32, %"class.gl::ShaderProgramManager"*, %"struct.gl::ShaderProgramID", %"class.angle::BitSetT.201" }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.gl::HasAttachedShaders" = type { i32 (...)** }
%"class.gl::ProgramBindings" = type { %"class.absl::flat_hash_map.226" }
%"class.absl::flat_hash_map.226" = type { %"class.absl::container_internal::raw_hash_map.227" }
%"class.absl::container_internal::raw_hash_map.227" = type { %"class.absl::container_internal::raw_hash_set.228" }
%"class.absl::container_internal::raw_hash_set.228" = type { i8*, %"union.absl::container_internal::map_slot_type.229"*, i64, i64, %"class.absl::container_internal::CompressedTuple.230" }
%"union.absl::container_internal::map_slot_type.229" = type { %"class.std::__1::basic_string", [8 x i8] }
%"class.absl::container_internal::CompressedTuple.230" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.gl::Program::LinkingState"* }
%"struct.gl::Program::LinkingState" = type opaque
%"class.angle::BitSetT.201" = type { i64 }
%"class.absl::flat_hash_map.241" = type { %"class.absl::container_internal::raw_hash_map.242" }
%"class.absl::container_internal::raw_hash_map.242" = type { %"class.absl::container_internal::raw_hash_set.243" }
%"class.absl::container_internal::raw_hash_set.243" = type { i8*, %"union.absl::container_internal::map_slot_type.244"*, i64, i64, %"class.absl::container_internal::CompressedTuple.245" }
%"union.absl::container_internal::map_slot_type.244" = type { %"struct.std::__1::pair.1494" }
%"struct.std::__1::pair.1494" = type { i32, %"class.gl::Program"* }
%"class.absl::container_internal::CompressedTuple.245" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"*, %"class.std::__1::__compressed_pair.134" }
%"struct.gl::VariableLocation" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.gl::VariableLocation"* }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"struct.gl::BufferVariable"*, %"struct.gl::BufferVariable"*, %"class.std::__1::__compressed_pair.142" }
%"struct.gl::BufferVariable" = type <{ %"struct.gl::ActiveVariable.base", [7 x i8], %"struct.sh::ShaderVariable", i32, %"struct.sh::BlockMemberInfo", i32, [4 x i8] }>
%"struct.gl::ActiveVariable.base" = type <{ i32 (...)**, %"class.angle::BitSetT.141" }>
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.gl::BufferVariable"* }
%"class.gl::Range" = type { i32, i32 }
%"class.angle::BitSetT.147" = type { i8 }
%"class.angle::BitSetT.148" = type { i64 }
%"class.angle::BitSetT" = type { i32 }
%"class.gl::ProgramAliasedBindings" = type { %"class.absl::flat_hash_map.149" }
%"class.absl::flat_hash_map.149" = type { %"class.absl::container_internal::raw_hash_map.150" }
%"class.absl::container_internal::raw_hash_map.150" = type { %"class.absl::container_internal::raw_hash_set.151" }
%"class.absl::container_internal::raw_hash_set.151" = type { i8*, %"union.absl::container_internal::map_slot_type.152"*, i64, i64, %"class.absl::container_internal::CompressedTuple.153" }
%"union.absl::container_internal::map_slot_type.152" = type opaque
%"class.absl::container_internal::CompressedTuple.153" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::shared_ptr" = type { %"class.gl::ProgramExecutable"*, %"class.std::__1::__shared_weak_count"* }
%"class.gl::ProgramExecutable" = type <{ %"class.angle::Subject", %"class.gl::InfoLog", %"class.angle::BitSetT.141", %"class.angle::BitSetT.141", [6 x i8], %"class.angle::BitSetT.166", i32, [4 x i8], %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"struct.std::__1::array.169", %"struct.std::__1::array.170", %"class.angle::BitSetArray", %"struct.std::__1::array.171", %"struct.std::__1::array.172", %"class.angle::BitSetArray", %"struct.std::__1::array.172", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.132", %"class.std::__1::vector.132", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.173", %"class.std::__1::vector.180", i32, [4 x i8], %"class.std::__1::vector.187", %"class.gl::Range", %"class.gl::Range", %"class.std::__1::vector.194", %"class.angle::BitSetT.201", %"class.std::__1::vector.202", %"class.gl::Range", %"class.std::__1::vector.194", %"class.std::__1::vector.194", %"class.gl::Range", %"class.std::__1::vector.209", %"class.std::__1::vector.216", %"class.std::__1::vector.216", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap", i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, %struct.Optional.225, [6 x i8] }>
%"class.gl::InfoLog" = type { %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.angle::BitSetT.166" = type { i64 }
%"struct.std::__1::array.169" = type { [96 x i32] }
%"struct.std::__1::array.170" = type { [96 x i8] }
%"struct.std::__1::array.171" = type { [96 x i8] }
%"class.angle::BitSetArray" = type { %"struct.std::__1::array.167" }
%"struct.std::__1::array.167" = type { [2 x %"class.angle::BitSetT.168"] }
%"class.angle::BitSetT.168" = type { i64 }
%"struct.std::__1::array.172" = type { [96 x %"class.angle::BitSetT.141"] }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*, %"class.std::__1::__compressed_pair.175" }
%"struct.gl::TransformFeedbackVarying" = type <{ %"struct.sh::ShaderVariable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.gl::TransformFeedbackVarying"* }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { i32*, i32*, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { i32* }
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"*, %"class.std::__1::__compressed_pair.189" }
%"struct.gl::LinkedUniform" = type { %"struct.gl::ActiveVariable.base", %"struct.sh::ShaderVariable", %"struct.gl::UniformTypeInfo"*, i32, %"struct.sh::BlockMemberInfo", %"class.std::__1::vector" }
%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.gl::LinkedUniform"* }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"*, %"class.std::__1::__compressed_pair.204" }
%"struct.gl::ShaderVariableBuffer" = type { %"struct.gl::ActiveVariable.base", i32, i32, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.gl::ShaderVariableBuffer"* }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"*, %"class.std::__1::__compressed_pair.196" }
%"struct.gl::InterfaceBlock" = type <{ %"struct.gl::ShaderVariableBuffer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.gl::InterfaceBlock"* }
%"class.std::__1::vector.209" = type { %"class.std::__1::__vector_base.210" }
%"class.std::__1::__vector_base.210" = type { %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"*, %"class.std::__1::__compressed_pair.211" }
%"struct.gl::SamplerBinding" = type { i8, i32, i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.gl::SamplerBinding"* }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"*, %"class.std::__1::__compressed_pair.218" }
%"struct.gl::ImageBinding" = type { i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.gl::ImageBinding"* }
%"class.angle::PackedEnumMap.223" = type { %"struct.std::__1::array.224" }
%"struct.std::__1::array.224" = type { [6 x %"class.std::__1::vector.70"] }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array.29" }
%"struct.std::__1::array.29" = type { [6 x i32] }
%struct.Optional.225 = type { i8, i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.angle::PackedEnumMap.805" = type { %"struct.std::__1::array.806" }
%"struct.std::__1::array.806" = type { [6 x %"struct.rx::DefaultUniformBlock"] }
%"struct.rx::GlslangProgramInterfaceInfo" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.rx::ProgramPipelineVk" = type { %"class.rx::ProgramPipelineImpl", %"class.rx::ProgramExecutableVk" }
%"class.rx::ProgramPipelineImpl" = type { i32 (...)**, %"class.gl::ProgramPipelineState"* }
%"class.gl::ProgramPipelineState" = type <{ %"class.std::__1::basic_string", %"class.gl::Program"*, %"class.angle::PackedEnumMap.335", i8, [7 x i8], %"class.gl::ProgramExecutable"*, i8, [7 x i8] }>
%"class.angle::PackedEnumMap.335" = type { %"struct.std::__1::array.336" }
%"struct.std::__1::array.336" = type { [6 x %"class.gl::Program"*] }
%"struct.rx::ProgramExecutablePerfCounters" = type { %"class.angle::PackedEnumMap.900", %"class.angle::PackedEnumMap.900", %"class.angle::PackedEnumMap.900" }
%"class.angle::PackedEnumMap.900" = type { %"struct.std::__1::array.901" }
%"class.rx::LinkEventDone" = type <{ %"class.rx::LinkEvent", i32, [4 x i8] }>
%"class.rx::LinkEvent" = type { i32 (...)** }
%"class.gl::Context" = type <{ %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::State", i8, i8, i8, i8, [4 x i8], %"class.gl::ErrorSet", %"class.angle::BitSetT.537", [4 x i8], %"class.std::__1::unique_ptr.538", i8*, %"struct.gl::Extensions", [4 x i8], %"class.gl::BindingPointer", %"struct.egl::Config"*, %"class.angle::PackedEnumMap.544", %"class.gl::ResourceMap.546", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.556", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.566", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.576", %"class.gl::HandleAllocator", i8*, i8*, i8*, i8*, %"class.std::__1::vector.586", i8*, %"class.std::__1::vector.586", %"class.std::__1::unique_ptr.593", i8, i8, i8, i8, i32, i8, i8, i8, [5 x i8], %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.egl::Display"*, i8, i8, i8, [5 x i8], %"class.gl::MemoryProgramCache"*, %"class.angle::BitSetT.536", %"class.gl::StateCache", %"class.angle::BitSetT.168", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %struct.Optional.607, %struct.Optional.607, %"class.std::__1::shared_ptr.608", %"class.std::__1::unique_ptr.609", %"class.std::__1::basic_string", i64, %"class.gl::MockOverlay", i8, i8, i8, [4 x i8] }>
%"class.egl::LabeledObject" = type { i32 (...)** }
%"class.gl::State" = type <{ %"struct.gl::ContextID", i32, i32, %"struct.gl::Version", [4 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"class.egl::ShareGroup"*, %"class.gl::BufferManager"*, %"class.gl::ShaderProgramManager"*, %"class.gl::TextureManager"*, %"class.gl::RenderbufferManager"*, %"class.gl::SamplerManager"*, %"class.gl::SyncManager"*, %"class.gl::FramebufferManager"*, %"class.gl::ProgramPipelineManager"*, %"class.gl::MemoryObjectManager"*, %"class.gl::SemaphoreManager"*, i32, i32, %"struct.angle::Color", float, i32, %"struct.gl::RasterizerState", i8, [3 x i8], %"struct.gl::Rectangle", %"struct.gl::BlendState", [4 x i8], %"class.gl::BlendStateExt", %"struct.angle::Color", i8, i8, [2 x i8], float, i8, i8, [2 x i8], i32, %"struct.std::__1::array.373", i8, [3 x i8], float, %"struct.gl::DepthStencilState", i32, i32, float, i32, i32, i32, i8, i8, [2 x i8], %"struct.gl::Rectangle", float, float, i32, i32, %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"*, %"class.gl::BindingPointer.374", %"class.gl::Program"*, %"class.gl::BindingPointer.376", %"class.gl::ProgramExecutable"*, i8, [7 x i8], %"class.std::__1::vector.378", %"class.gl::VertexArray"*, %"class.angle::BitSetT.148", i64, %"class.angle::PackedEnumMap.406", %"class.gl::ActiveTexturesCache", %"class.std::__1::vector.337", %"class.angle::BitSetArray", %"class.std::__1::vector.418", %"class.std::__1::vector.427", %"class.angle::PackedEnumMap.434", %"class.angle::PackedEnumMap.438", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.angle::BitSetArray.447", %"class.angle::BitSetT.448", %"class.angle::BitSetT.168", %"class.gl::BindingPointer.449", %"struct.gl::PixelUnpackState", %"struct.gl::PixelPackState", i8, [3 x i8], %"class.gl::Debug", i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, %"class.angle::BitSetT.476", i32, %"class.gl::GLES1State", %"class.angle::BitSetT.168", %"class.angle::BitSetT.535", [4 x i8], %"class.angle::BitSetT.536", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.gl::MockOverlay"*, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i8, [5 x i8] }>
%"struct.gl::ContextID" = type { i32 }
%"struct.gl::Version" = type { i32, i32 }
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap.30", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array.28", i32 }
%"struct.std::__1::array.28" = type { [2 x i32] }
%"class.angle::PackedEnumMap.30" = type { %"struct.std::__1::array.31" }
%"struct.std::__1::array.31" = type { [6 x i64] }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.33" }
%"class.angle::PackedEnumMap.33" = type { %"struct.std::__1::array.34" }
%"struct.std::__1::array.34" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set.35" }
%"class.std::__1::set.35" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.egl::ShareGroup" = type opaque
%"class.gl::BufferManager" = type { %"class.gl::TypedResourceManager" }
%"class.gl::TypedResourceManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap" }
%"class.gl::ResourceMap" = type { i64, %"class.gl::Buffer"**, %"class.absl::flat_hash_map" }
%"class.gl::Buffer" = type { %"class.gl::RefCountObject.base.53", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.angle::Subject", %"class.gl::BufferState", %"class.rx::BufferImpl"*, %"class.angle::ObserverBinding", %"class.gl::IndexRangeCache" }
%"class.gl::RefCountObject.base.53" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::BufferID" }>
%"struct.gl::BufferID" = type { i32 }
%"class.gl::BufferState" = type <{ %"class.std::__1::basic_string", i8, [7 x i8], i64, i32, i32, i8, [7 x i8], i8*, i64, i64, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.rx::BufferImpl" = type { %"class.angle::Subject", %"class.gl::BufferState"* }
%"class.gl::IndexRangeCache" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.54" }
%"class.std::__1::__tree.54" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair.1492" }
%"struct.std::__1::pair.1492" = type { i32, %"class.gl::Buffer"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::TextureManager" = type { %"class.gl::TypedResourceManager.250" }
%"class.gl::TypedResourceManager.250" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.251" }
%"class.gl::ResourceMap.251" = type { i64, %"class.gl::Texture"**, %"class.absl::flat_hash_map.270" }
%"class.gl::Texture" = type <{ %"class.gl::RefCountObject.base.253", [4 x i8], %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::TextureState", %"class.angle::BitSetT.266", %"class.rx::TextureImpl"*, %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::basic_string", %"class.egl::Surface"*, %"class.egl::Stream"*, %"class.angle::FastVector.268", %"struct.gl::Texture::SamplerCompletenessCache", [4 x i8] }>
%"class.gl::RefCountObject.base.253" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TextureID" }>
%"struct.gl::TextureID" = type { i32 }
%"class.egl::ImageSibling" = type { %"class.gl::FramebufferAttachmentObject", %"class.std::__1::set", %"class.angle::BindingPointer" }
%"class.gl::FramebufferAttachmentObject" = type { %"class.angle::Subject", %"class.angle::ObserverInterface" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.egl::Image"* }
%"class.egl::Image" = type <{ %"class.angle::RefCountObject.4", %"class.egl::LabeledObject", %"struct.egl::ImageState", %"class.rx::ImageImpl"*, i8, [7 x i8] }>
%"class.angle::RefCountObject.4" = type { i32 (...)**, i64 }
%"struct.egl::ImageState" = type { i8*, i32, %"class.gl::ImageIndex", %"class.egl::ImageSibling"*, %"class.std::__1::set.5", %"struct.gl::Format", i8, %"struct.gl::Extents", i64, i32, i32 }
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.std::__1::set.5" = type { %"class.std::__1::__tree.6" }
%"class.std::__1::__tree.6" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Format" = type { %"struct.gl::InternalFormat"* }
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Extents" = type { i32, i32, i32 }
%"class.rx::ImageImpl" = type opaque
%"class.gl::TextureState" = type <{ i8, [3 x i8], %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.std::__1::vector.257", %"struct.gl::Rectangle", i32, [4 x i8], %"class.gl::OffsetBindingPointer", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.gl::SwizzleState" = type { i32, i32, i32, i32 }
%"class.gl::SamplerState" = type { i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, %"struct.angle::ColorGeneric", %"union.gl::SamplerState::Completeness" }
%"struct.angle::ColorGeneric" = type <{ %union.anon.254, i8, [3 x i8] }>
%union.anon.254 = type { %"struct.angle::Color" }
%"union.gl::SamplerState::Completeness" = type { i32 }
%"class.std::__1::vector.257" = type { %"class.std::__1::__vector_base.258" }
%"class.std::__1::__vector_base.258" = type { %"struct.gl::ImageDesc"*, %"struct.gl::ImageDesc"*, %"class.std::__1::__compressed_pair.259" }
%"struct.gl::ImageDesc" = type <{ %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.gl::ImageDesc"* }
%"class.gl::OffsetBindingPointer" = type { %"class.gl::BindingPointer.264", i64, i64 }
%"class.gl::BindingPointer.264" = type { %"class.angle::BindingPointer.265" }
%"class.angle::BindingPointer.265" = type { i32 (...)**, %"class.gl::Buffer"* }
%"class.angle::BitSetT.266" = type { i64 }
%"class.rx::TextureImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::TextureState"* }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.egl::Stream" = type { %"class.egl::LabeledObject", i8*, %"class.egl::Display"*, %"class.rx::StreamProducerImpl"*, %"class.gl::Context"*, i32, i64, i64, i32, i32, i32, %"struct.std::__1::array.267", i32, i32 }
%"class.rx::StreamProducerImpl" = type opaque
%"struct.std::__1::array.267" = type { [3 x %"struct.egl::Stream::PlaneTexture"] }
%"struct.egl::Stream::PlaneTexture" = type { i32, %"class.gl::Texture"* }
%"class.angle::FastVector.268" = type { %"struct.std::__1::array.269", %"class.rx::Serial"*, i64, i64 }
%"struct.std::__1::array.269" = type { [8 x %"class.rx::Serial"] }
%"struct.gl::Texture::SamplerCompletenessCache" = type <{ %"struct.gl::ContextID", %"class.gl::SamplerState", i8, [3 x i8] }>
%"class.absl::flat_hash_map.270" = type { %"class.absl::container_internal::raw_hash_map.271" }
%"class.absl::container_internal::raw_hash_map.271" = type { %"class.absl::container_internal::raw_hash_set.272" }
%"class.absl::container_internal::raw_hash_set.272" = type { i8*, %"union.absl::container_internal::map_slot_type.273"*, i64, i64, %"class.absl::container_internal::CompressedTuple.274" }
%"union.absl::container_internal::map_slot_type.273" = type { %"struct.std::__1::pair.1496" }
%"struct.std::__1::pair.1496" = type { i32, %"class.gl::Texture"* }
%"class.absl::container_internal::CompressedTuple.274" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::RenderbufferManager" = type { %"class.gl::TypedResourceManager.279" }
%"class.gl::TypedResourceManager.279" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.280" }
%"class.gl::ResourceMap.280" = type { i64, %"class.gl::Renderbuffer"**, %"class.absl::flat_hash_map.281" }
%"class.gl::Renderbuffer" = type { %"class.gl::RefCountObject.base", %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::RenderbufferState", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::RenderbufferID" }>
%"struct.gl::RenderbufferID" = type { i32 }
%"class.gl::RenderbufferState" = type <{ i32, i32, %"struct.gl::Format", i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.rx::RenderbufferImpl"* }
%"class.rx::RenderbufferImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::RenderbufferState"* }
%"class.absl::flat_hash_map.281" = type { %"class.absl::container_internal::raw_hash_map.282" }
%"class.absl::container_internal::raw_hash_map.282" = type { %"class.absl::container_internal::raw_hash_set.283" }
%"class.absl::container_internal::raw_hash_set.283" = type { i8*, %"union.absl::container_internal::map_slot_type.284"*, i64, i64, %"class.absl::container_internal::CompressedTuple.285" }
%"union.absl::container_internal::map_slot_type.284" = type { %"struct.std::__1::pair.1498" }
%"struct.std::__1::pair.1498" = type { i32, %"class.gl::Renderbuffer"* }
%"class.absl::container_internal::CompressedTuple.285" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SamplerManager" = type { %"class.gl::TypedResourceManager.290" }
%"class.gl::TypedResourceManager.290" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.291" }
%"class.gl::ResourceMap.291" = type { i64, %"class.gl::Sampler"**, %"class.absl::flat_hash_map.294" }
%"class.gl::Sampler" = type { %"class.gl::RefCountObject.base.293", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::SamplerState", i8, %"class.rx::SamplerImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.293" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::SamplerID" }>
%"struct.gl::SamplerID" = type { i32 }
%"class.rx::SamplerImpl" = type { i32 (...)**, %"class.gl::SamplerState"* }
%"class.absl::flat_hash_map.294" = type { %"class.absl::container_internal::raw_hash_map.295" }
%"class.absl::container_internal::raw_hash_map.295" = type { %"class.absl::container_internal::raw_hash_set.296" }
%"class.absl::container_internal::raw_hash_set.296" = type { i8*, %"union.absl::container_internal::map_slot_type.297"*, i64, i64, %"class.absl::container_internal::CompressedTuple.298" }
%"union.absl::container_internal::map_slot_type.297" = type { %"struct.std::__1::pair.1500" }
%"struct.std::__1::pair.1500" = type { i32, %"class.gl::Sampler"* }
%"class.absl::container_internal::CompressedTuple.298" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SyncManager" = type { %"class.gl::TypedResourceManager.303" }
%"class.gl::TypedResourceManager.303" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.304" }
%"class.gl::ResourceMap.304" = type { i64, %"class.gl::Sync"**, %"class.absl::flat_hash_map.305" }
%"class.gl::Sync" = type opaque
%"class.absl::flat_hash_map.305" = type { %"class.absl::container_internal::raw_hash_map.306" }
%"class.absl::container_internal::raw_hash_map.306" = type { %"class.absl::container_internal::raw_hash_set.307" }
%"class.absl::container_internal::raw_hash_set.307" = type { i8*, %"union.absl::container_internal::map_slot_type.308"*, i64, i64, %"class.absl::container_internal::CompressedTuple.309" }
%"union.absl::container_internal::map_slot_type.308" = type opaque
%"class.absl::container_internal::CompressedTuple.309" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::FramebufferManager" = type { %"class.gl::TypedResourceManager.314" }
%"class.gl::TypedResourceManager.314" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.315" }
%"class.gl::ResourceMap.315" = type { i64, %"class.gl::Framebuffer"**, %"class.absl::flat_hash_map.316" }
%"class.absl::flat_hash_map.316" = type { %"class.absl::container_internal::raw_hash_map.317" }
%"class.absl::container_internal::raw_hash_map.317" = type { %"class.absl::container_internal::raw_hash_set.318" }
%"class.absl::container_internal::raw_hash_set.318" = type { i8*, %"union.absl::container_internal::map_slot_type.319"*, i64, i64, %"class.absl::container_internal::CompressedTuple.320" }
%"union.absl::container_internal::map_slot_type.319" = type { %"struct.std::__1::pair.1502" }
%"struct.std::__1::pair.1502" = type { i32, %"class.gl::Framebuffer"* }
%"class.absl::container_internal::CompressedTuple.320" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramPipelineManager" = type { %"class.gl::TypedResourceManager.325" }
%"class.gl::TypedResourceManager.325" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.326" }
%"class.gl::ResourceMap.326" = type { i64, %"class.gl::ProgramPipeline"**, %"class.absl::flat_hash_map.344" }
%"class.gl::ProgramPipeline" = type { %"class.gl::RefCountObject.base.328", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::HasAttachedShaders", %"class.std::__1::unique_ptr.329", %"class.gl::ProgramPipelineState", %"class.std::__1::vector.337", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base.328" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::ProgramPipelineID" }>
%"struct.gl::ProgramPipelineID" = type { i32 }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.rx::ProgramPipelineImpl"* }
%"class.absl::flat_hash_map.344" = type { %"class.absl::container_internal::raw_hash_map.345" }
%"class.absl::container_internal::raw_hash_map.345" = type { %"class.absl::container_internal::raw_hash_set.346" }
%"class.absl::container_internal::raw_hash_set.346" = type { i8*, %"union.absl::container_internal::map_slot_type.347"*, i64, i64, %"class.absl::container_internal::CompressedTuple.348" }
%"union.absl::container_internal::map_slot_type.347" = type { %"struct.std::__1::pair.1504" }
%"struct.std::__1::pair.1504" = type { i32, %"class.gl::ProgramPipeline"* }
%"class.absl::container_internal::CompressedTuple.348" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::MemoryObjectManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.353" }
%"class.gl::ResourceMap.353" = type { i64, %"class.gl::MemoryObject"**, %"class.absl::flat_hash_map.354" }
%"class.gl::MemoryObject" = type opaque
%"class.absl::flat_hash_map.354" = type { %"class.absl::container_internal::raw_hash_map.355" }
%"class.absl::container_internal::raw_hash_map.355" = type { %"class.absl::container_internal::raw_hash_set.356" }
%"class.absl::container_internal::raw_hash_set.356" = type { i8*, %"union.absl::container_internal::map_slot_type.357"*, i64, i64, %"class.absl::container_internal::CompressedTuple.358" }
%"union.absl::container_internal::map_slot_type.357" = type opaque
%"class.absl::container_internal::CompressedTuple.358" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SemaphoreManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.363" }
%"class.gl::ResourceMap.363" = type { i64, %"class.gl::Semaphore"**, %"class.absl::flat_hash_map.364" }
%"class.gl::Semaphore" = type opaque
%"class.absl::flat_hash_map.364" = type { %"class.absl::container_internal::raw_hash_map.365" }
%"class.absl::container_internal::raw_hash_map.365" = type { %"class.absl::container_internal::raw_hash_set.366" }
%"class.absl::container_internal::raw_hash_set.366" = type { i8*, %"union.absl::container_internal::map_slot_type.367"*, i64, i64, %"class.absl::container_internal::CompressedTuple.368" }
%"union.absl::container_internal::map_slot_type.367" = type opaque
%"class.absl::container_internal::CompressedTuple.368" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::RasterizerState" = type { i8, i8, i32, i8, float, float, i8, i8, i8, i8 }
%"struct.gl::BlendState" = type { i8, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%"class.gl::BlendStateExt" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i64 }
%"struct.angle::Color" = type { float, float, float, float }
%"struct.std::__1::array.373" = type { [2 x i32] }
%"struct.gl::DepthStencilState" = type { i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.gl::Framebuffer" = type { %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::FramebufferState", %"class.rx::FramebufferImpl"*, %struct.Optional.622, %"class.std::__1::vector.337", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::BitSetT.623", %"class.angle::BitSetT.147", %struct.Optional.624 }
%"class.gl::FramebufferState" = type { %"struct.gl::FramebufferID", %"class.rx::Serial", %"class.std::__1::basic_string", %"class.std::__1::vector.615", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.angle::BitSetT.147", %"class.std::__1::vector", i32, %"class.angle::BitSetT.147", %"class.angle::BitSetT.148", i32, i32, i32, i8, i32, %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", i8, %"class.angle::BitSetT.536", i8, %"class.gl::FramebufferAttachment", i32, %"struct.gl::Offset" }
%"struct.gl::FramebufferID" = type { i32 }
%"class.std::__1::vector.615" = type { %"class.std::__1::__vector_base.616" }
%"class.std::__1::__vector_base.616" = type { %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"*, %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"class.gl::FramebufferAttachment"* }
%"class.gl::FramebufferAttachment" = type { i32, %"class.gl::FramebufferAttachment::Target", %"class.gl::FramebufferAttachmentObject"*, i32, i8, i32, i32 }
%"class.gl::FramebufferAttachment::Target" = type { i32, %"class.gl::ImageIndex" }
%"struct.gl::Offset" = type { i32, i32, i32 }
%"class.rx::FramebufferImpl" = type { i32 (...)**, %"class.gl::FramebufferState"* }
%struct.Optional.622 = type { i8, %"struct.gl::FramebufferStatus" }
%"struct.gl::FramebufferStatus" = type { i32, i8* }
%"class.angle::BitSetT.623" = type { i64 }
%struct.Optional.624 = type { i8, %"class.angle::BitSetT.623" }
%"class.gl::BindingPointer.374" = type { %"class.angle::BindingPointer.375" }
%"class.angle::BindingPointer.375" = type { i32 (...)**, %"class.gl::Renderbuffer"* }
%"class.gl::BindingPointer.376" = type { %"class.angle::BindingPointer.377" }
%"class.angle::BindingPointer.377" = type { i32 (...)**, %"class.gl::ProgramPipeline"* }
%"class.std::__1::vector.378" = type { %"class.std::__1::__vector_base.379" }
%"class.std::__1::__vector_base.379" = type { %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"*, %"class.std::__1::__compressed_pair.381" }
%"struct.gl::VertexAttribCurrentValueData" = type { %union.anon.380, i32 }
%union.anon.380 = type { [4 x float] }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.gl::VertexAttribCurrentValueData"* }
%"class.gl::VertexArray" = type <{ %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"struct.gl::VertexArrayID", [4 x i8], %"class.gl::VertexArrayState", %"class.angle::BitSetT.400", %"struct.std::__1::array.401", %"struct.std::__1::array.403", %struct.Optional.405, %"class.rx::VertexArrayImpl"*, %"class.std::__1::vector.337", %"class.angle::BitSetT.166", %"class.gl::VertexArray::IndexRangeCache", i8, [7 x i8] }>
%"struct.gl::VertexArrayID" = type { i32 }
%"class.gl::VertexArrayState" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.386", %"class.gl::SubjectBindingPointer", %"class.std::__1::vector.393", %"class.angle::BitSetT.166", %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166" }
%"class.std::__1::vector.386" = type { %"class.std::__1::__vector_base.387" }
%"class.std::__1::__vector_base.387" = type { %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"*, %"class.std::__1::__compressed_pair.388" }
%"struct.gl::VertexAttribute" = type { i8, %"struct.angle::Format"*, i8*, i32, i32, i32, i64 }
%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"struct.gl::VertexAttribute"* }
%"class.gl::SubjectBindingPointer" = type { %"class.gl::BindingPointer.264", %"class.angle::ObserverBindingBase" }
%"class.std::__1::vector.393" = type { %"class.std::__1::__vector_base.394" }
%"class.std::__1::__vector_base.394" = type { %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"*, %"class.std::__1::__compressed_pair.395" }
%"class.gl::VertexBinding" = type { i32, i32, i64, %"class.gl::BindingPointer.264", %"class.angle::BitSetT.166" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.gl::VertexBinding"* }
%"class.angle::BitSetT.400" = type { i64 }
%"struct.std::__1::array.401" = type { [16 x %"class.angle::BitSetT.402"] }
%"class.angle::BitSetT.402" = type { i64 }
%"struct.std::__1::array.403" = type { [16 x %"class.angle::BitSetT.404"] }
%"class.angle::BitSetT.404" = type { i64 }
%struct.Optional.405 = type { i8, %"class.angle::BitSetT.400" }
%"class.rx::VertexArrayImpl" = type opaque
%"class.gl::VertexArray::IndexRangeCache" = type { i64, i32, i64, %"struct.gl::IndexRange" }
%"struct.gl::IndexRange" = type { i64, i64, i64 }
%"class.angle::PackedEnumMap.406" = type { %"struct.std::__1::array.407" }
%"struct.std::__1::array.407" = type { [11 x %"class.std::__1::vector.408"] }
%"class.std::__1::vector.408" = type { %"class.std::__1::__vector_base.409" }
%"class.std::__1::__vector_base.409" = type { %"class.gl::BindingPointer.410"*, %"class.gl::BindingPointer.410"*, %"class.std::__1::__compressed_pair.412" }
%"class.gl::BindingPointer.410" = type { %"class.angle::BindingPointer.411" }
%"class.angle::BindingPointer.411" = type { i32 (...)**, %"class.gl::Texture"* }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.gl::BindingPointer.410"* }
%"class.gl::ActiveTexturesCache" = type { %"struct.std::__1::array.417" }
%"struct.std::__1::array.417" = type { [96 x %"class.gl::Texture"*] }
%"class.std::__1::vector.418" = type { %"class.std::__1::__vector_base.419" }
%"class.std::__1::__vector_base.419" = type { %"class.gl::BindingPointer.420"*, %"class.gl::BindingPointer.420"*, %"class.std::__1::__compressed_pair.422" }
%"class.gl::BindingPointer.420" = type { %"class.angle::BindingPointer.421" }
%"class.angle::BindingPointer.421" = type { i32 (...)**, %"class.gl::Sampler"* }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.gl::BindingPointer.420"* }
%"class.std::__1::vector.427" = type { %"class.std::__1::__vector_base.428" }
%"class.std::__1::__vector_base.428" = type { %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"*, %"class.std::__1::__compressed_pair.429" }
%"struct.gl::ImageUnit" = type <{ %"class.gl::BindingPointer.410", i32, i8, [3 x i8], i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"struct.gl::ImageUnit"* }
%"class.angle::PackedEnumMap.434" = type { %"struct.std::__1::array.435" }
%"struct.std::__1::array.435" = type { [7 x %"class.gl::BindingPointer.436"] }
%"class.gl::BindingPointer.436" = type { %"class.angle::BindingPointer.437" }
%"class.angle::BindingPointer.437" = type { i32 (...)**, %"class.gl::Query"* }
%"class.gl::Query" = type opaque
%"class.angle::PackedEnumMap.438" = type { %"struct.std::__1::array.439" }
%"struct.std::__1::array.439" = type { [13 x %"class.gl::BindingPointer.264"] }
%"class.std::__1::vector.440" = type { %"class.std::__1::__vector_base.441" }
%"class.std::__1::__vector_base.441" = type { %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"*, %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.gl::OffsetBindingPointer"* }
%"class.angle::BitSetArray.447" = type { %"struct.std::__1::array.167" }
%"class.angle::BitSetT.448" = type { i64 }
%"class.gl::BindingPointer.449" = type { %"class.angle::BindingPointer.450" }
%"class.angle::BindingPointer.450" = type { i32 (...)**, %"class.gl::TransformFeedback"* }
%"class.gl::TransformFeedback" = type { %"class.gl::RefCountObject.base.452", %"class.gl::LabeledObject", %"class.gl::TransformFeedbackState", %"class.rx::TransformFeedbackImpl"* }
%"class.gl::RefCountObject.base.452" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TransformFeedbackID" }>
%"struct.gl::TransformFeedbackID" = type { i32 }
%"class.gl::TransformFeedbackState" = type { %"class.std::__1::basic_string", i8, i8, i8, i64, i64, %"class.gl::Program"*, %"class.std::__1::vector.440" }
%"class.rx::TransformFeedbackImpl" = type { i32 (...)**, %"class.gl::TransformFeedbackState"* }
%"struct.gl::PixelUnpackState" = type { %"struct.gl::PixelStoreStateBase" }
%"struct.gl::PixelStoreStateBase" = type { i32, i32, i32, i32, i32, i32 }
%"struct.gl::PixelPackState" = type <{ %"struct.gl::PixelStoreStateBase", i8, [3 x i8] }>
%"class.gl::Debug" = type { i8, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*, %"class.std::__1::deque", i32, i8, %"class.std::__1::vector.462" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.458" }
%"struct.std::__1::__split_buffer" = type { %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"class.std::__1::__compressed_pair.453" }
%"struct.gl::Debug::Message" = type { i32, i32, i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"struct.gl::Debug::Message"** }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.462" = type { %"class.std::__1::__vector_base.463" }
%"class.std::__1::__vector_base.463" = type { %"struct.gl::Debug::Group"*, %"struct.gl::Debug::Group"*, %"class.std::__1::__compressed_pair.471" }
%"struct.gl::Debug::Group" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.464" }
%"class.std::__1::vector.464" = type { %"class.std::__1::__vector_base.465" }
%"class.std::__1::__vector_base.465" = type { %"struct.gl::Debug::Control"*, %"struct.gl::Debug::Control"*, %"class.std::__1::__compressed_pair.466" }
%"struct.gl::Debug::Control" = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.gl::Debug::Control"* }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"struct.gl::Debug::Group"* }
%"class.angle::BitSetT.476" = type { i32 }
%"class.gl::GLES1State" = type <{ %"class.gl::State"*, %"class.angle::BitSetT.166", %"class.std::__1::vector.477", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.485", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", %"class.angle::Vector", %"class.std::__1::vector.490", i32, i8, [3 x i8], %"class.angle::FixedVector", %"class.angle::FixedVector", %"class.std::__1::vector.505", %"class.std::__1::vector.512", %"struct.gl::MaterialParameters", %"struct.gl::LightModelParameters", %"class.std::__1::vector.519", %"struct.gl::FogParameters", i8, [3 x i8], %"struct.gl::PointParameters", i8, [3 x i8], float, i8, [7 x i8], %"class.std::__1::vector.528", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::vector.477" = type { %"class.std::__1::__vector_base.478" }
%"class.std::__1::__vector_base.478" = type { %"class.angle::BitSetT.479"*, %"class.angle::BitSetT.479"*, %"class.std::__1::__compressed_pair.480" }
%"class.angle::BitSetT.479" = type opaque
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.angle::BitSetT.479"* }
%"class.std::__1::vector.485" = type { i64*, i64, %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::Vector" = type { %"class.angle::VectorBase" }
%"class.angle::VectorBase" = type { [3 x float] }
%"class.std::__1::vector.490" = type { %"class.std::__1::__vector_base.491" }
%"class.std::__1::__vector_base.491" = type { %"struct.gl::TextureCoordF"*, %"struct.gl::TextureCoordF"*, %"class.std::__1::__compressed_pair.492" }
%"struct.gl::TextureCoordF" = type { float, float, float, float }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"struct.gl::TextureCoordF"* }
%"class.angle::FixedVector" = type { %"struct.std::__1::array.497", i64 }
%"struct.std::__1::array.497" = type { [16 x %"class.angle::Mat4"] }
%"class.angle::Mat4" = type { %"class.angle::Matrix" }
%"class.angle::Matrix" = type { %"class.std::__1::vector.498", i32, i32 }
%"class.std::__1::vector.498" = type { %"class.std::__1::__vector_base.499" }
%"class.std::__1::__vector_base.499" = type { float*, float*, %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { float* }
%"class.std::__1::vector.505" = type { %"class.std::__1::__vector_base.506" }
%"class.std::__1::__vector_base.506" = type { %"class.angle::FixedVector"*, %"class.angle::FixedVector"*, %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.angle::FixedVector"* }
%"class.std::__1::vector.512" = type { %"class.std::__1::__vector_base.513" }
%"class.std::__1::__vector_base.513" = type { %"struct.gl::TextureEnvironmentParameters"*, %"struct.gl::TextureEnvironmentParameters"*, %"class.std::__1::__compressed_pair.514" }
%"struct.gl::TextureEnvironmentParameters" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", float, float, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"struct.gl::TextureEnvironmentParameters"* }
%"struct.gl::MaterialParameters" = type { %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", float }
%"struct.gl::LightModelParameters" = type <{ %"struct.angle::Color", i8, [3 x i8] }>
%"class.std::__1::vector.519" = type { %"class.std::__1::__vector_base.520" }
%"class.std::__1::__vector_base.520" = type { %"struct.gl::LightParameters"*, %"struct.gl::LightParameters"*, %"class.std::__1::__compressed_pair.523" }
%"struct.gl::LightParameters" = type { i8, %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"class.angle::Vector.521", %"class.angle::Vector", float, float, float, float, float }
%"class.angle::Vector.521" = type { %"class.angle::VectorBase.522" }
%"class.angle::VectorBase.522" = type { [4 x float] }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"struct.gl::LightParameters"* }
%"struct.gl::FogParameters" = type { i8, float, float, float, %"struct.angle::Color" }
%"struct.gl::PointParameters" = type { float, float, float, %"class.angle::Vector", float }
%"class.std::__1::vector.528" = type { %"class.std::__1::__vector_base.529" }
%"class.std::__1::__vector_base.529" = type { %"struct.gl::ClipPlaneParameters"*, %"struct.gl::ClipPlaneParameters"*, %"class.std::__1::__compressed_pair.530" }
%"struct.gl::ClipPlaneParameters" = type { i8, %"class.angle::Vector.521" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"struct.gl::ClipPlaneParameters"* }
%"class.angle::BitSetT.535" = type { i32 }
%"class.gl::ErrorSet" = type { %"class.gl::Context"*, %"class.std::__1::set.35" }
%"class.angle::BitSetT.537" = type { i32 }
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.rx::ContextImpl"* }
%"class.rx::ContextImpl" = type { %"class.rx::GLImplFactory", %"class.gl::State"*, %"class.gl::MemoryProgramCache"*, %"class.gl::ErrorSet"* }
%"class.rx::GLImplFactory" = type { i32 (...)**, %"class.rx::SerialFactoryBase" }
%"class.rx::SerialFactoryBase" = type { i64 }
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.egl::Config" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.544" = type { %"struct.std::__1::array.545" }
%"struct.std::__1::array.545" = type { [11 x %"class.gl::BindingPointer.410"] }
%"class.gl::ResourceMap.546" = type { i64, %"class.gl::FenceNV"**, %"class.absl::flat_hash_map.547" }
%"class.gl::FenceNV" = type opaque
%"class.absl::flat_hash_map.547" = type { %"class.absl::container_internal::raw_hash_map.548" }
%"class.absl::container_internal::raw_hash_map.548" = type { %"class.absl::container_internal::raw_hash_set.549" }
%"class.absl::container_internal::raw_hash_set.549" = type { i8*, %"union.absl::container_internal::map_slot_type.550"*, i64, i64, %"class.absl::container_internal::CompressedTuple.551" }
%"union.absl::container_internal::map_slot_type.550" = type opaque
%"class.absl::container_internal::CompressedTuple.551" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.556" = type { i64, %"class.gl::Query"**, %"class.absl::flat_hash_map.557" }
%"class.absl::flat_hash_map.557" = type { %"class.absl::container_internal::raw_hash_map.558" }
%"class.absl::container_internal::raw_hash_map.558" = type { %"class.absl::container_internal::raw_hash_set.559" }
%"class.absl::container_internal::raw_hash_set.559" = type { i8*, %"union.absl::container_internal::map_slot_type.560"*, i64, i64, %"class.absl::container_internal::CompressedTuple.561" }
%"union.absl::container_internal::map_slot_type.560" = type opaque
%"class.absl::container_internal::CompressedTuple.561" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.566" = type { i64, %"class.gl::VertexArray"**, %"class.absl::flat_hash_map.567" }
%"class.absl::flat_hash_map.567" = type { %"class.absl::container_internal::raw_hash_map.568" }
%"class.absl::container_internal::raw_hash_map.568" = type { %"class.absl::container_internal::raw_hash_set.569" }
%"class.absl::container_internal::raw_hash_set.569" = type { i8*, %"union.absl::container_internal::map_slot_type.570"*, i64, i64, %"class.absl::container_internal::CompressedTuple.571" }
%"union.absl::container_internal::map_slot_type.570" = type opaque
%"class.absl::container_internal::CompressedTuple.571" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.576" = type { i64, %"class.gl::TransformFeedback"**, %"class.absl::flat_hash_map.577" }
%"class.absl::flat_hash_map.577" = type { %"class.absl::container_internal::raw_hash_map.578" }
%"class.absl::container_internal::raw_hash_map.578" = type { %"class.absl::container_internal::raw_hash_set.579" }
%"class.absl::container_internal::raw_hash_set.579" = type { i8*, %"union.absl::container_internal::map_slot_type.580"*, i64, i64, %"class.absl::container_internal::CompressedTuple.581" }
%"union.absl::container_internal::map_slot_type.580" = type opaque
%"class.absl::container_internal::CompressedTuple.581" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::vector.586" = type { %"class.std::__1::__vector_base.587" }
%"class.std::__1::__vector_base.587" = type { i8**, i8**, %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { i8** }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.gl::GLES1Renderer"* }
%"class.gl::GLES1Renderer" = type opaque
%"class.egl::Surface" = type opaque
%"class.egl::Display" = type opaque
%"class.gl::MemoryProgramCache" = type opaque
%"class.gl::StateCache" = type <{ %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", i8, [7 x i8], i64, i64, i64, i64, i8, [7 x i8], %"class.angle::BitSetT.168", %"class.angle::BitSetArray", %"class.angle::PackedEnumMap.599", %"class.angle::PackedEnumMap.601", %"class.angle::PackedEnumMap.603", %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605", i8, [7 x i8] }>
%"class.angle::PackedEnumMap.599" = type { %"struct.std::__1::array.600" }
%"struct.std::__1::array.600" = type { [16 x i8] }
%"class.angle::PackedEnumMap.601" = type { %"struct.std::__1::array.602" }
%"struct.std::__1::array.602" = type { [12 x i8] }
%"class.angle::PackedEnumMap.603" = type { %"struct.std::__1::array.604" }
%"struct.std::__1::array.604" = type { [4 x i8] }
%"class.angle::PackedEnumMap.605" = type { %"struct.std::__1::array.606" }
%"struct.std::__1::array.606" = type { [19 x i32] }
%"class.angle::BitSetT.536" = type { i64 }
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.std::__1::vector.337" = type { %"class.std::__1::__vector_base.338" }
%"class.std::__1::__vector_base.338" = type { %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"*, %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.angle::ObserverBinding"* }
%struct.Optional.607 = type { i8, %"class.angle::ScratchBuffer" }
%"class.angle::ScratchBuffer" = type { i32, i32, %"class.angle::MemoryBuffer" }
%"class.std::__1::shared_ptr.608" = type { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WorkerThreadPool" = type { i32 (...)** }
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.angle::FrameCapture"* }
%"class.angle::FrameCapture" = type opaque
%"class.gl::MockOverlay" = type { %"class.gl::overlay::Mock" }
%"class.gl::overlay::Mock" = type { i8 }
%"class.angle::PackedEnumMap.653" = type { %"struct.std::__1::array.654" }
%"struct.std::__1::array.654" = type { [6 x %"class.std::__1::vector"*] }
%"class.rx::ContextVk" = type { %"class.rx::ContextImpl", %"class.rx::vk::Context", %"class.rx::MultisampleTextureInitializer", %"struct.std::__1::array.666", %"struct.std::__1::array.667", %"class.rx::vk::priv::SecondaryCommandBuffer"*, %"class.rx::vk::PipelineHelper"*, %"class.rx::vk::ObjectAndSerial"*, i8, %"class.rx::WindowSurfaceVk"*, i32, i32, %"class.std::__1::unique_ptr.691", %"class.angle::BitSetT.684", %"class.angle::PackedEnumMap.697", %"class.angle::PackedEnumMap.713", %"class.angle::PackedEnumMap.730", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.rx::VertexArrayVk"*, %"class.rx::FramebufferVk"*, %"class.rx::ProgramVk"*, %"class.rx::ProgramPipelineVk"*, %"class.rx::ProgramExecutableVk"*, i8*, i64, i64, %"class.angle::PackedEnumMap.902", i32, i32, %union.VkClearValue, %union.VkClearValue, i64, %"class.rx::IncompleteTextureSet", i8, i8, i8, i8, i8, %"class.angle::PackedEnumMap.906", %"struct.std::__1::array.923", %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc", %"struct.std::__1::array.959", %"class.angle::BitSetT.166", %"struct.std::__1::array.960", %"class.rx::vk::CommandPool", %"class.std::__1::vector.962", %"class.rx::RenderPassCache", %"class.rx::vk::CommandBufferHelper"*, %"class.rx::vk::CommandBufferHelper"*, %"class.angle::FastUnorderedSet", %"class.rx::vk::ShaderLibrary", %"class.rx::UtilsVk", i8, [7 x i8], %"class.rx::vk::DynamicQueryPool", %"class.std::__1::vector.1062", %"class.std::__1::vector.1070", i8, i8, i8, %"class.std::__1::vector.1077", %"class.std::__1::vector", %"struct.rx::ContextVk::GpuClockSyncInfo", i64, %"struct.rx::vk::PerfCounters", %"struct.rx::ContextVkPerfCounters", %"struct.rx::ContextVkPerfCounters", %"class.angle::BitSetT.168", %"class.rx::vk::ResourceUseList", i8, %"class.std::__1::vector.1092", %"class.std::__1::vector.1099", %"class.std::__1::vector.1106", %"class.rx::ShareGroupVk"*, %"class.rx::vk::BufferHelper", %"class.rx::vk::DynamicBuffer", %"class.rx::vk::DynamicBuffer", %"class.std::__1::vector.125", %"class.std::__1::vector.125" }
%"class.rx::vk::Context" = type { i32 (...)**, %"class.rx::RendererVk"* }
%"class.rx::RendererVk" = type { %"class.egl::Display"*, i8, [7 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"struct.angle::FeaturesVk", %struct.VkInstance_T*, i8, i8, i8, i32, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkDebugReportCallbackEXT_T*, %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceLineRasterizationFeaturesEXT, %struct.VkPhysicalDeviceProvokingVertexFeaturesEXT, %struct.VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT, %struct.VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT, %struct.VkPhysicalDeviceTransformFeedbackFeaturesEXT, %struct.VkPhysicalDeviceIndexTypeUint8FeaturesEXT, %struct.VkPhysicalDeviceSubgroupProperties, %struct.VkPhysicalDeviceDeviceMemoryReportFeaturesEXT, %struct.VkDeviceDeviceMemoryReportCreateInfoEXT, %struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT, %struct.VkPhysicalDeviceShaderFloat16Int8Features, %struct.VkPhysicalDeviceDepthStencilResolveProperties, %struct.VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT, %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceCustomBorderColorFeaturesEXT, %struct.VkExternalFenceProperties, %struct.VkExternalSemaphoreProperties, %struct.VkPhysicalDeviceSamplerYcbcrConversionFeatures, %"class.std::__1::vector.1197", %"class.angle::PackedEnumMap.1204", i32, i32, i64, i64, i32, %struct.VkDevice_T*, %"class.rx::SerialFactoryBase.1206", i8, %"class.std::__1::mutex", %"class.std::__1::vector.1208", %"class.rx::vk::MemoryProperties", %"class.rx::vk::FormatTable", %"class.std::__1::mutex", %"class.rx::vk::PipelineCache", i32, i8, i8, %"class.angle::PackedEnumMap.1217", %"class.std::__1::basic_string", i32, %"class.rx::DebugAnnotatorVk", i32, %"class.rx::vk::CommandPool", %"class.std::__1::deque.1219", %"class.std::__1::mutex", %"class.rx::vk::CommandQueue", %"class.std::__1::mutex", %"class.std::__1::vector.1266", %"class.rx::vk::CommandProcessor", %"class.rx::vk::Allocator", %"class.rx::SamplerCache", %"class.rx::SamplerYcbcrConversionCache", %"class.rx::vk::ActiveHandleCounter", %"class.rx::vk::ResourceSerialFactory", %"class.rx::vk::MemoryReport", %"class.angle::PackedEnumMap.1415", i32, %"class.std::__1::shared_ptr.1417" }
%"struct.angle::FeaturesVk" = type { %"struct.angle::FeatureSetBase", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.std::__1::array.1196", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature" }
%"struct.angle::FeatureSetBase" = type { %"class.std::__1::map.1185" }
%"class.std::__1::map.1185" = type { %"class.std::__1::__tree.1186" }
%"class.std::__1::__tree.1186" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1187", %"class.std::__1::__compressed_pair.1191" }
%"class.std::__1::__compressed_pair.1187" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1191" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::array.1196" = type { [4 x %"struct.angle::Feature"] }
%"struct.angle::Feature" = type { i8*, i32, i8*, i8*, i8, i8* }
%struct.VkInstance_T = type opaque
%struct.VkDebugUtilsMessengerEXT_T = type opaque
%struct.VkDebugReportCallbackEXT_T = type opaque
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceLineRasterizationFeaturesEXT = type { i32, i8*, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceProvokingVertexFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceTransformFeedbackFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceIndexTypeUint8FeaturesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceSubgroupProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDeviceMemoryReportFeaturesEXT = type { i32, i8*, i32 }
%struct.VkDeviceDeviceMemoryReportCreateInfoEXT = type { i32, i8*, i32, void (%struct.VkDeviceMemoryReportCallbackDataEXT*, i8*)*, i8* }
%struct.VkDeviceMemoryReportCallbackDataEXT = type { i32, i8*, i32, i32, i64, i64, i32, i64, i32 }
%struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT = type { i32, i8*, i64 }
%struct.VkPhysicalDeviceShaderFloat16Int8Features = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceDepthStencilResolveProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceCustomBorderColorFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkExternalFenceProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceSamplerYcbcrConversionFeatures = type { i32, i8*, i32 }
%"class.std::__1::vector.1197" = type { %"class.std::__1::__vector_base.1198" }
%"class.std::__1::__vector_base.1198" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.1199" }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.1199" = type { %"struct.std::__1::__compressed_pair_elem.1200" }
%"struct.std::__1::__compressed_pair_elem.1200" = type { %struct.VkQueueFamilyProperties* }
%"class.angle::PackedEnumMap.1204" = type { %"struct.std::__1::array.1205" }
%"struct.std::__1::array.1205" = type { [3 x i8] }
%"class.rx::SerialFactoryBase.1206" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1207" }
%"struct.std::__1::__atomic_base.1207" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::vector.1208" = type { %"class.std::__1::__vector_base.1209" }
%"class.std::__1::__vector_base.1209" = type { %"class.rx::vk::SharedGarbage"*, %"class.rx::vk::SharedGarbage"*, %"class.std::__1::__compressed_pair.1210" }
%"class.rx::vk::SharedGarbage" = type { %"class.rx::vk::SharedResourceUse", %"class.std::__1::vector.962" }
%"class.std::__1::__compressed_pair.1210" = type { %"struct.std::__1::__compressed_pair_elem.1211" }
%"struct.std::__1::__compressed_pair_elem.1211" = type { %"class.rx::vk::SharedGarbage"* }
%"class.rx::vk::MemoryProperties" = type { %struct.VkPhysicalDeviceMemoryProperties }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.rx::vk::FormatTable" = type { [8 x i8], %"struct.std::__1::array.1215" }
%"struct.std::__1::array.1215" = type { [227 x %"struct.rx::vk::Format"] }
%"struct.rx::vk::Format" = type <{ i32, i32, i32, i32, i32, [4 x i8], void (i64, i64, i64, i8*, i64, i64)*, { void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, i8 } (i32)*, void (i8*, i64, i64, i8*)*, void (i8*, i64, i64, i8*)*, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.rx::vk::PipelineCache" = type { %"class.rx::vk::WrappedObject.1216" }
%"class.rx::vk::WrappedObject.1216" = type { %struct.VkPipelineCache_T* }
%struct.VkPipelineCache_T = type opaque
%"class.angle::PackedEnumMap.1217" = type { %"struct.std::__1::array.1218" }
%"struct.std::__1::array.1218" = type { [227 x %struct.VkFormatProperties] }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.rx::DebugAnnotatorVk" = type { %"class.angle::LoggingAnnotator" }
%"class.angle::LoggingAnnotator" = type { %"class.gl::DebugAnnotator" }
%"class.gl::DebugAnnotator" = type { i32 (...)** }
%"class.std::__1::deque.1219" = type { %"class.std::__1::__deque_base.1220" }
%"class.std::__1::__deque_base.1220" = type { %"struct.std::__1::__split_buffer.1221", i64, %"class.std::__1::__compressed_pair.1228" }
%"struct.std::__1::__split_buffer.1221" = type { %"struct.rx::RendererVk::PendingOneOffCommands"**, %"struct.rx::RendererVk::PendingOneOffCommands"**, %"struct.rx::RendererVk::PendingOneOffCommands"**, %"class.std::__1::__compressed_pair.1223" }
%"struct.rx::RendererVk::PendingOneOffCommands" = type { %"class.rx::Serial", %"class.rx::vk::priv::CommandBuffer" }
%"class.rx::vk::priv::CommandBuffer" = type { %"class.rx::vk::WrappedObject.1222" }
%"class.rx::vk::WrappedObject.1222" = type { %struct.VkCommandBuffer_T* }
%struct.VkCommandBuffer_T = type opaque
%"class.std::__1::__compressed_pair.1223" = type { %"struct.std::__1::__compressed_pair_elem.1224" }
%"struct.std::__1::__compressed_pair_elem.1224" = type { %"struct.rx::RendererVk::PendingOneOffCommands"** }
%"class.std::__1::__compressed_pair.1228" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.rx::vk::CommandQueue" = type { %"class.rx::vk::CommandQueueInterface", %"class.std::__1::vector.1232", %"class.std::__1::vector.1240", %"class.rx::vk::priv::CommandBuffer", %"class.rx::vk::PersistentCommandPool", %"class.rx::SerialFactoryBase.1206", %"class.rx::Serial", %"class.rx::Serial", %"class.rx::Serial", %"class.angle::PackedEnumMap.1256", %"class.rx::vk::FenceRecycler" }
%"class.rx::vk::CommandQueueInterface" = type { i32 (...)** }
%"class.std::__1::vector.1232" = type { %"class.std::__1::__vector_base.1233" }
%"class.std::__1::__vector_base.1233" = type { %"class.rx::vk::ObjectAndSerial.1234"*, %"class.rx::vk::ObjectAndSerial.1234"*, %"class.std::__1::__compressed_pair.1235" }
%"class.rx::vk::ObjectAndSerial.1234" = type opaque
%"class.std::__1::__compressed_pair.1235" = type { %"struct.std::__1::__compressed_pair_elem.1236" }
%"struct.std::__1::__compressed_pair_elem.1236" = type { %"class.rx::vk::ObjectAndSerial.1234"* }
%"class.std::__1::vector.1240" = type { %"class.std::__1::__vector_base.1241" }
%"class.std::__1::__vector_base.1241" = type { %"struct.rx::vk::CommandBatch"*, %"struct.rx::vk::CommandBatch"*, %"class.std::__1::__compressed_pair.1244" }
%"struct.rx::vk::CommandBatch" = type { [8 x i8], %"class.rx::vk::priv::CommandBuffer", %"class.rx::vk::CommandPool", %"class.rx::vk::Shared.1242", %"class.rx::Serial" }
%"class.rx::vk::Shared.1242" = type { %"class.rx::vk::RefCounted.1243"* }
%"class.rx::vk::RefCounted.1243" = type { i32, %"class.rx::vk::Fence" }
%"class.rx::vk::Fence" = type { %"class.rx::vk::WrappedObject.1260" }
%"class.rx::vk::WrappedObject.1260" = type { %struct.VkFence_T* }
%struct.VkFence_T = type opaque
%"class.std::__1::__compressed_pair.1244" = type { %"struct.std::__1::__compressed_pair_elem.1245" }
%"struct.std::__1::__compressed_pair_elem.1245" = type { %"struct.rx::vk::CommandBatch"* }
%"class.rx::vk::PersistentCommandPool" = type { %"class.std::__1::vector.1249", %"class.rx::vk::CommandPool" }
%"class.std::__1::vector.1249" = type { %"class.std::__1::__vector_base.1250" }
%"class.std::__1::__vector_base.1250" = type { %"class.rx::vk::priv::CommandBuffer"*, %"class.rx::vk::priv::CommandBuffer"*, %"class.std::__1::__compressed_pair.1251" }
%"class.std::__1::__compressed_pair.1251" = type { %"struct.std::__1::__compressed_pair_elem.1252" }
%"struct.std::__1::__compressed_pair_elem.1252" = type { %"class.rx::vk::priv::CommandBuffer"* }
%"class.angle::PackedEnumMap.1256" = type { %"struct.std::__1::array.1257" }
%"struct.std::__1::array.1257" = type { [3 x %struct.VkQueue_T*] }
%struct.VkQueue_T = type opaque
%"class.rx::vk::FenceRecycler" = type { %"class.std::__1::mutex", %"class.rx::vk::Recycler" }
%"class.rx::vk::Recycler" = type { %"class.std::__1::vector.1258" }
%"class.std::__1::vector.1258" = type { %"class.std::__1::__vector_base.1259" }
%"class.std::__1::__vector_base.1259" = type { %"class.rx::vk::Fence"*, %"class.rx::vk::Fence"*, %"class.std::__1::__compressed_pair.1261" }
%"class.std::__1::__compressed_pair.1261" = type { %"struct.std::__1::__compressed_pair_elem.1262" }
%"struct.std::__1::__compressed_pair_elem.1262" = type { %"class.rx::vk::Fence"* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.1266" = type { %"class.std::__1::__vector_base.1267" }
%"class.std::__1::__vector_base.1267" = type { %"class.rx::vk::CommandBufferHelper"**, %"class.rx::vk::CommandBufferHelper"**, %"class.std::__1::__compressed_pair.1268" }
%"class.std::__1::__compressed_pair.1268" = type { %"struct.std::__1::__compressed_pair_elem.1269" }
%"struct.std::__1::__compressed_pair_elem.1269" = type { %"class.rx::vk::CommandBufferHelper"** }
%"class.rx::vk::CommandProcessor" = type { %"class.rx::vk::Context", %"class.rx::vk::CommandQueueInterface", %"class.std::__1::queue", %"class.std::__1::mutex", %"class.std::__1::condition_variable", %"class.std::__1::condition_variable", i8, %"class.rx::vk::CommandPool", %"class.rx::vk::CommandQueue", %"class.std::__1::mutex", %"class.std::__1::mutex", %"class.std::__1::queue.1298", %"class.std::__1::mutex", %"class.std::__1::condition_variable", %"class.std::__1::map.1311", %"class.std::__1::thread" }
%"class.std::__1::queue" = type { %"class.std::__1::deque.1273" }
%"class.std::__1::deque.1273" = type { %"class.std::__1::__deque_base.1274" }
%"class.std::__1::__deque_base.1274" = type { %"struct.std::__1::__split_buffer.1275", i64, %"class.std::__1::__compressed_pair.1290" }
%"struct.std::__1::__split_buffer.1275" = type { %"class.rx::vk::CommandProcessorTask"**, %"class.rx::vk::CommandProcessorTask"**, %"class.rx::vk::CommandProcessorTask"**, %"class.std::__1::__compressed_pair.1285" }
%"class.rx::vk::CommandProcessorTask" = type <{ i32, [4 x i8], %"class.rx::vk::RenderPass"*, %"class.rx::vk::CommandBufferHelper"*, %"class.std::__1::vector.1077", %"class.std::__1::vector", %"class.rx::vk::Semaphore"*, %"class.std::__1::vector.962", %"class.rx::Serial", %struct.VkPresentInfoKHR, %struct.VkSwapchainKHR_T*, %struct.VkSemaphore_T*, i32, [4 x i8], %struct.VkPresentRegionKHR, %struct.VkPresentRegionsKHR, %"class.std::__1::vector.1278", %struct.VkCommandBuffer_T*, %"class.rx::vk::Fence"*, i8, [7 x i8] }>
%"class.rx::vk::RenderPass" = type { %"class.rx::vk::WrappedObject.1276" }
%"class.rx::vk::WrappedObject.1276" = type { %struct.VkRenderPass_T* }
%struct.VkRenderPass_T = type opaque
%"class.rx::vk::Semaphore" = type { %"class.rx::vk::WrappedObject.1277" }
%"class.rx::vk::WrappedObject.1277" = type { %struct.VkSemaphore_T* }
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%struct.VkSwapchainKHR_T = type opaque
%struct.VkSemaphore_T = type opaque
%struct.VkPresentRegionKHR = type { i32, %struct.VkRectLayerKHR* }
%struct.VkRectLayerKHR = type { %struct.VkOffset2D, %struct.VkExtent2D, i32 }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkPresentRegionsKHR = type { i32, i8*, i32, %struct.VkPresentRegionKHR* }
%"class.std::__1::vector.1278" = type { %"class.std::__1::__vector_base.1279" }
%"class.std::__1::__vector_base.1279" = type { %struct.VkRectLayerKHR*, %struct.VkRectLayerKHR*, %"class.std::__1::__compressed_pair.1280" }
%"class.std::__1::__compressed_pair.1280" = type { %"struct.std::__1::__compressed_pair_elem.1281" }
%"struct.std::__1::__compressed_pair_elem.1281" = type { %struct.VkRectLayerKHR* }
%"class.std::__1::__compressed_pair.1285" = type { %"struct.std::__1::__compressed_pair_elem.1286" }
%"struct.std::__1::__compressed_pair_elem.1286" = type { %"class.rx::vk::CommandProcessorTask"** }
%"class.std::__1::__compressed_pair.1290" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::queue.1298" = type { %"class.std::__1::deque.1299" }
%"class.std::__1::deque.1299" = type { %"class.std::__1::__deque_base.1300" }
%"class.std::__1::__deque_base.1300" = type { %"struct.std::__1::__split_buffer.1301", i64, %"class.std::__1::__compressed_pair.1307" }
%"struct.std::__1::__split_buffer.1301" = type { %"struct.rx::vk::Error"**, %"struct.rx::vk::Error"**, %"struct.rx::vk::Error"**, %"class.std::__1::__compressed_pair.1302" }
%"struct.rx::vk::Error" = type { i32, i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.1302" = type { %"struct.std::__1::__compressed_pair_elem.1303" }
%"struct.std::__1::__compressed_pair_elem.1303" = type { %"struct.rx::vk::Error"** }
%"class.std::__1::__compressed_pair.1307" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1294, %union.anon.1296, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1294 = type { i64 }
%union.anon.1296 = type { i64 }
%"class.std::__1::map.1311" = type { %"class.std::__1::__tree.1312" }
%"class.std::__1::__tree.1312" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1313", %"class.std::__1::__compressed_pair.1317" }
%"class.std::__1::__compressed_pair.1313" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1317" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::thread" = type { i64 }
%"class.rx::vk::Allocator" = type { %"class.rx::vk::WrappedObject.1322" }
%"class.rx::vk::WrappedObject.1322" = type { %struct.VmaAllocator_T* }
%struct.VmaAllocator_T = type opaque
%"class.rx::SamplerCache" = type { %"class.rx::HasCacheStats.1323", %"class.std::__1::unordered_map.1324" }
%"class.rx::HasCacheStats.1323" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1324" = type { %"class.std::__1::__hash_table.1325" }
%"class.std::__1::__hash_table.1325" = type <{ %"class.std::__1::unique_ptr.1326", %"class.std::__1::__compressed_pair.1336", %"class.std::__1::__compressed_pair.1341", %"class.std::__1::__compressed_pair.1345", [4 x i8] }>
%"class.std::__1::unique_ptr.1326" = type { %"class.std::__1::__compressed_pair.1327" }
%"class.std::__1::__compressed_pair.1327" = type { %"struct.std::__1::__compressed_pair_elem.1328", %"struct.std::__1::__compressed_pair_elem.1330" }
%"struct.std::__1::__compressed_pair_elem.1328" = type { %"struct.std::__1::__hash_node_base.1329"** }
%"struct.std::__1::__hash_node_base.1329" = type { %"struct.std::__1::__hash_node_base.1329"* }
%"struct.std::__1::__compressed_pair_elem.1330" = type { %"class.std::__1::__bucket_list_deallocator.1331" }
%"class.std::__1::__bucket_list_deallocator.1331" = type { %"class.std::__1::__compressed_pair.1332" }
%"class.std::__1::__compressed_pair.1332" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1336" = type { %"struct.std::__1::__compressed_pair_elem.1337" }
%"struct.std::__1::__compressed_pair_elem.1337" = type { %"struct.std::__1::__hash_node_base.1329" }
%"class.std::__1::__compressed_pair.1341" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1345" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"class.rx::SamplerYcbcrConversionCache" = type { %"class.rx::HasCacheStats.1351", %"class.std::__1::unordered_map.1352" }
%"class.rx::HasCacheStats.1351" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1352" = type { %"class.std::__1::__hash_table.1353" }
%"class.std::__1::__hash_table.1353" = type <{ %"class.std::__1::unique_ptr.1354", %"class.std::__1::__compressed_pair.1364", %"class.std::__1::__compressed_pair.1369", %"class.std::__1::__compressed_pair.1374", [4 x i8] }>
%"class.std::__1::unique_ptr.1354" = type { %"class.std::__1::__compressed_pair.1355" }
%"class.std::__1::__compressed_pair.1355" = type { %"struct.std::__1::__compressed_pair_elem.1356", %"struct.std::__1::__compressed_pair_elem.1358" }
%"struct.std::__1::__compressed_pair_elem.1356" = type { %"struct.std::__1::__hash_node_base.1357"** }
%"struct.std::__1::__hash_node_base.1357" = type { %"struct.std::__1::__hash_node_base.1357"* }
%"struct.std::__1::__compressed_pair_elem.1358" = type { %"class.std::__1::__bucket_list_deallocator.1359" }
%"class.std::__1::__bucket_list_deallocator.1359" = type { %"class.std::__1::__compressed_pair.1360" }
%"class.std::__1::__compressed_pair.1360" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1364" = type { %"struct.std::__1::__compressed_pair_elem.1365" }
%"struct.std::__1::__compressed_pair_elem.1365" = type { %"struct.std::__1::__hash_node_base.1357" }
%"class.std::__1::__compressed_pair.1369" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1374" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"class.rx::vk::ActiveHandleCounter" = type { %"class.angle::PackedEnumMap.1380", %"class.angle::PackedEnumMap.1380" }
%"class.angle::PackedEnumMap.1380" = type { %"struct.std::__1::array.1381" }
%"struct.std::__1::array.1381" = type { [24 x i32] }
%"class.rx::vk::ResourceSerialFactory" = type { %"struct.std::__1::atomic.1382" }
%"struct.std::__1::atomic.1382" = type { %"struct.std::__1::__atomic_base.1383" }
%"struct.std::__1::__atomic_base.1383" = type { %"struct.std::__1::__atomic_base.1384" }
%"struct.std::__1::__atomic_base.1384" = type { %"struct.std::__1::__cxx_atomic_impl.1385" }
%"struct.std::__1::__cxx_atomic_impl.1385" = type { %"struct.std::__1::__cxx_atomic_base_impl.1386" }
%"struct.std::__1::__cxx_atomic_base_impl.1386" = type { i32 }
%"class.rx::vk::MemoryReport" = type { %"class.std::__1::mutex", i64, i64, %"class.absl::flat_hash_map.1387", i64, i64, %"class.absl::flat_hash_map.1402" }
%"class.absl::flat_hash_map.1387" = type { %"class.absl::container_internal::raw_hash_map.1388" }
%"class.absl::container_internal::raw_hash_map.1388" = type { %"class.absl::container_internal::raw_hash_set.1389" }
%"class.absl::container_internal::raw_hash_set.1389" = type { i8*, %"union.absl::container_internal::map_slot_type.1390"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1391" }
%"union.absl::container_internal::map_slot_type.1390" = type opaque
%"class.absl::container_internal::CompressedTuple.1391" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1392" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1392" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::flat_hash_map.1402" = type { %"class.absl::container_internal::raw_hash_map.1403" }
%"class.absl::container_internal::raw_hash_map.1403" = type { %"class.absl::container_internal::raw_hash_set.1404" }
%"class.absl::container_internal::raw_hash_set.1404" = type { i8*, %"union.absl::container_internal::map_slot_type.1405"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1406" }
%"union.absl::container_internal::map_slot_type.1405" = type opaque
%"class.absl::container_internal::CompressedTuple.1406" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1407" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1407" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.angle::PackedEnumMap.1415" = type { %"struct.std::__1::array.1416" }
%"struct.std::__1::array.1416" = type { [12 x %"class.rx::CacheStats"] }
%"class.std::__1::shared_ptr.1417" = type { %"class.rx::WaitableCompressEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.rx::WaitableCompressEvent" = type { i32 (...)**, %"class.std::__1::shared_ptr.1418" }
%"class.std::__1::shared_ptr.1418" = type { %"class.angle::WaitableEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WaitableEvent" = type { i32 (...)**, %"class.std::__1::shared_ptr.608" }
%"class.rx::MultisampleTextureInitializer" = type { i32 (...)** }
%"struct.std::__1::array.666" = type { [16 x { i64, i64 }] }
%"struct.std::__1::array.667" = type { [16 x { i64, i64 }] }
%"class.rx::vk::priv::SecondaryCommandBuffer" = type { i8, %"class.std::__1::vector.668", %"class.angle::PoolAllocator"*, i8*, i64 }
%"class.std::__1::vector.668" = type { %"class.std::__1::__vector_base.669" }
%"class.std::__1::__vector_base.669" = type { %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"**, %"class.std::__1::__compressed_pair.670" }
%"struct.rx::vk::priv::CommandHeader" = type { i16, i16 }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.rx::vk::priv::CommandHeader"** }
%"class.angle::PoolAllocator" = type <{ i64, i64, i64, i64, i64, %"struct.angle::PoolAllocator::Header"*, %"struct.angle::PoolAllocator::Header"*, %"class.std::__1::vector.675", i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.angle::PoolAllocator::Header" = type { %"struct.angle::PoolAllocator::Header"*, i64 }
%"class.std::__1::vector.675" = type { %"class.std::__1::__vector_base.676" }
%"class.std::__1::__vector_base.676" = type { %"struct.angle::PoolAllocator::AllocState"*, %"struct.angle::PoolAllocator::AllocState"*, %"class.std::__1::__compressed_pair.677" }
%"struct.angle::PoolAllocator::AllocState" = type { i64, %"struct.angle::PoolAllocator::Header"* }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.678" }
%"struct.std::__1::__compressed_pair_elem.678" = type { %"struct.angle::PoolAllocator::AllocState"* }
%"class.rx::vk::PipelineHelper" = type { %"class.std::__1::vector.682", %"class.rx::Serial", %"class.rx::vk::Pipeline" }
%"class.std::__1::vector.682" = type { %"class.std::__1::__vector_base.683" }
%"class.std::__1::__vector_base.683" = type { %"struct.rx::vk::GraphicsPipelineTransition"*, %"struct.rx::vk::GraphicsPipelineTransition"*, %"class.std::__1::__compressed_pair.686" }
%"struct.rx::vk::GraphicsPipelineTransition" = type { %"class.angle::BitSetT.684", %"class.rx::vk::GraphicsPipelineDesc"*, %"class.rx::vk::PipelineHelper"* }
%"class.rx::vk::GraphicsPipelineDesc" = type { %"struct.rx::vk::VertexInputAttributes", %"class.rx::vk::RenderPassDesc", %"struct.rx::vk::PackedRasterizationAndMultisampleStateInfo", %"struct.rx::vk::PackedDepthStencilStateInfo", %"struct.rx::vk::PackedInputAssemblyAndColorBlendStateInfo", %struct.VkViewport, %"struct.rx::vk::PackedScissor", %"struct.rx::vk::PackedExtent" }
%"struct.rx::vk::VertexInputAttributes" = type { [16 x %"struct.rx::vk::PackedAttribDesc"] }
%"struct.rx::vk::PackedAttribDesc" = type { i8, i8, i16, i16 }
%"class.rx::vk::RenderPassDesc" = type { i8, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", %"struct.std::__1::array.685" }
%"struct.std::__1::array.685" = type { [9 x i8] }
%"struct.rx::vk::PackedRasterizationAndMultisampleStateInfo" = type { %"struct.rx::vk::RasterizationStateBits", float, [2 x i32], float, float, float, float }
%"struct.rx::vk::RasterizationStateBits" = type { i32 }
%"struct.rx::vk::PackedDepthStencilStateInfo" = type { %"struct.rx::vk::DepthStencilEnableFlags", i8, i8, %"struct.rx::vk::DepthCompareOpAndSurfaceRotation", float, float, %"struct.rx::vk::PackedStencilOpState", %"struct.rx::vk::PackedStencilOpState" }
%"struct.rx::vk::DepthStencilEnableFlags" = type { i8 }
%"struct.rx::vk::DepthCompareOpAndSurfaceRotation" = type { i8 }
%"struct.rx::vk::PackedStencilOpState" = type { %"struct.rx::vk::StencilOps", i8, i8 }
%"struct.rx::vk::StencilOps" = type { i16 }
%"struct.rx::vk::PackedInputAssemblyAndColorBlendStateInfo" = type { [4 x i8], [8 x %"struct.rx::vk::PackedColorBlendAttachmentState"], [4 x float], %"struct.rx::vk::LogicOpState", i8, %"struct.rx::vk::PrimitiveState" }
%"struct.rx::vk::PackedColorBlendAttachmentState" = type { i32 }
%"struct.rx::vk::LogicOpState" = type { i8 }
%"struct.rx::vk::PrimitiveState" = type { i16 }
%struct.VkViewport = type { float, float, float, float, float, float }
%"struct.rx::vk::PackedScissor" = type { i16, i16, i16, i16 }
%"struct.rx::vk::PackedExtent" = type { i16, i16 }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.687" }
%"struct.std::__1::__compressed_pair_elem.687" = type { %"struct.rx::vk::GraphicsPipelineTransition"* }
%"class.rx::WindowSurfaceVk" = type opaque
%"class.std::__1::unique_ptr.691" = type { %"class.std::__1::__compressed_pair.692" }
%"class.std::__1::__compressed_pair.692" = type { %"struct.std::__1::__compressed_pair_elem.693" }
%"struct.std::__1::__compressed_pair_elem.693" = type { %"class.rx::vk::GraphicsPipelineDesc"* }
%"class.angle::BitSetT.684" = type { i64 }
%"class.angle::PackedEnumMap.697" = type { %"struct.std::__1::array.698" }
%"struct.std::__1::array.698" = type { [2 x %"class.rx::vk::DynamicDescriptorPool"] }
%"class.angle::PackedEnumMap.713" = type { %"struct.std::__1::array.714" }
%"struct.std::__1::array.714" = type { [7 x %"class.rx::vk::DynamicQueryPool"] }
%"class.angle::PackedEnumMap.730" = type { %"struct.std::__1::array.731" }
%"struct.std::__1::array.731" = type { [7 x %"class.rx::QueryVk"*] }
%"class.rx::QueryVk" = type <{ %"class.rx::QueryImpl.base", [7 x i8], %"class.rx::vk::Shared", %"class.std::__1::vector.733", %"class.rx::vk::QueryHelper", i64, i64, i8, [7 x i8] }>
%"class.rx::QueryImpl.base" = type <{ i32 (...)**, i8 }>
%"class.rx::vk::Shared" = type { %"class.rx::vk::RefCounted.732"* }
%"class.rx::vk::RefCounted.732" = type { i32, [4 x i8], %"class.rx::vk::QueryHelper" }
%"class.std::__1::vector.733" = type { %"class.std::__1::__vector_base.734" }
%"class.std::__1::__vector_base.734" = type { %"class.rx::vk::Shared"*, %"class.rx::vk::Shared"*, %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.736" }
%"struct.std::__1::__compressed_pair_elem.736" = type { %"class.rx::vk::Shared"* }
%"class.rx::vk::QueryHelper" = type <{ %"class.rx::vk::Resource", %"class.rx::vk::DynamicQueryPool"*, i64, i32, [4 x i8] }>
%"class.rx::VertexArrayVk" = type opaque
%"class.rx::FramebufferVk" = type <{ %"class.rx::FramebufferImpl", %"class.rx::WindowSurfaceVk"*, %"class.rx::vk::RenderPassDesc", [4 x i8], %"class.rx::vk::FramebufferHelper"*, %"class.rx::RenderTargetCache", i64, %"class.rx::vk::DynamicBuffer", %"class.angle::BitSetT.147", [3 x i8], %"class.rx::vk::FramebufferDesc", %"class.rx::FramebufferCache", %"class.rx::vk::ClearValuesArray", i8, [7 x i8] }>
%"class.rx::vk::FramebufferHelper" = type { %"class.rx::vk::Resource", %"class.rx::vk::Framebuffer" }
%"class.rx::vk::Framebuffer" = type { %"class.rx::vk::WrappedObject.740" }
%"class.rx::vk::WrappedObject.740" = type { %struct.VkFramebuffer_T* }
%struct.VkFramebuffer_T = type opaque
%"class.rx::RenderTargetCache" = type { %"class.rx::RenderTargetVk"*, %"struct.std::__1::array.786", %"class.rx::RenderTargetVk"* }
%"struct.std::__1::array.786" = type { [10 x %"class.rx::RenderTargetVk"*] }
%"class.rx::RenderTargetVk" = type { %"class.rx::FramebufferAttachmentRenderTarget", %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageViewHelper"*, %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageViewHelper"*, %"class.gl::LevelIndexWrapper", i32, i32, i32 }
%"class.rx::FramebufferAttachmentRenderTarget" = type { i32 (...)** }
%"class.rx::vk::ImageHelper" = type <{ %"class.rx::vk::Resource", %"class.angle::Subject", %"class.rx::vk::Image", %"class.rx::vk::DeviceMemory", i32, i32, i32, i32, %struct.VkExtent3D, i8, [3 x i8], %"struct.rx::vk::Format"*, i32, %"class.rx::vk::ImageSerial", i32, i32, i32, i32, %"class.angle::BitSetT.743", [6 x i8], %"class.rx::vk::BindingPointer", i64, %"class.gl::LevelIndexWrapper", i32, i32, [4 x i8], %"class.rx::vk::DynamicBuffer", %"class.std::__1::vector.760", %struct.Optional.768, %"struct.std::__1::array.769", %"struct.std::__1::array.769", [4 x i8] }>
%"class.rx::vk::Image" = type { %"class.rx::vk::WrappedObject.741" }
%"class.rx::vk::WrappedObject.741" = type { %struct.VkImage_T* }
%struct.VkImage_T = type opaque
%"class.rx::vk::DeviceMemory" = type { %"class.rx::vk::WrappedObject.742" }
%"class.rx::vk::WrappedObject.742" = type { %struct.VkDeviceMemory_T* }
%struct.VkDeviceMemory_T = type opaque
%"class.rx::vk::ImageSerial" = type { i32 }
%"class.angle::BitSetT.743" = type { i16 }
%"class.rx::vk::BindingPointer" = type { %"class.rx::vk::RefCounted.744"* }
%"class.rx::vk::RefCounted.744" = type opaque
%"class.std::__1::vector.760" = type { %"class.std::__1::__vector_base.761" }
%"class.std::__1::__vector_base.761" = type { %"class.std::__1::vector.762"*, %"class.std::__1::vector.762"*, %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::vector.762" = type opaque
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"class.std::__1::vector.762"* }
%struct.Optional.768 = type { i8, %"struct.rx::vk::ImageHelper::ClearUpdate" }
%"struct.rx::vk::ImageHelper::ClearUpdate" = type { i32, %union.VkClearValue, i32, i32, i32 }
%"struct.std::__1::array.769" = type { [16 x %"class.angle::BitSetT.147"] }
%"class.rx::vk::ImageViewHelper" = type <{ %"class.rx::vk::Resource", %"class.gl::LevelIndexWrapper.770", [4 x i8], %"class.std::__1::vector.771", %"class.std::__1::vector.771", %"class.std::__1::vector.771", %"class.std::__1::vector.771", %"class.std::__1::vector.771", %"class.std::__1::vector.771", %"class.std::__1::vector.771", i8, [7 x i8], %"class.std::__1::vector.771", %"class.std::__1::vector.779", %"class.std::__1::vector.771", %"class.std::__1::vector.779", %"class.std::__1::vector.771", %"class.std::__1::vector.779", %"class.rx::vk::ImageOrBufferViewSerial", [4 x i8] }>
%"class.gl::LevelIndexWrapper.770" = type { i32 }
%"class.std::__1::vector.771" = type { %"class.std::__1::__vector_base.772" }
%"class.std::__1::__vector_base.772" = type { %"class.rx::vk::ImageView"*, %"class.rx::vk::ImageView"*, %"class.std::__1::__compressed_pair.774" }
%"class.rx::vk::ImageView" = type { %"class.rx::vk::WrappedObject.773" }
%"class.rx::vk::WrappedObject.773" = type { %struct.VkImageView_T* }
%struct.VkImageView_T = type opaque
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.rx::vk::ImageView"* }
%"class.std::__1::vector.779" = type { %"class.std::__1::__vector_base.780" }
%"class.std::__1::__vector_base.780" = type { %"class.std::__1::vector.771"*, %"class.std::__1::vector.771"*, %"class.std::__1::__compressed_pair.781" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"class.std::__1::vector.771"* }
%"class.gl::LevelIndexWrapper" = type { i32 }
%"class.rx::vk::FramebufferDesc" = type { i32, %"struct.std::__1::array.787" }
%"struct.std::__1::array.787" = type { [18 x %"struct.rx::vk::ImageOrBufferViewSubresourceSerial"] }
%"class.rx::FramebufferCache" = type { %"class.absl::flat_hash_map.788", %"class.rx::CacheStats" }
%"class.absl::flat_hash_map.788" = type { %"class.absl::container_internal::raw_hash_map.789" }
%"class.absl::container_internal::raw_hash_map.789" = type { %"class.absl::container_internal::raw_hash_set.790" }
%"class.absl::container_internal::raw_hash_set.790" = type { i8*, %"union.absl::container_internal::map_slot_type.791"*, i64, i64, %"class.absl::container_internal::CompressedTuple.792" }
%"union.absl::container_internal::map_slot_type.791" = type { %"struct.std::__1::pair.1525" }
%"struct.std::__1::pair.1525" = type { %"class.rx::vk::FramebufferDesc", %"class.rx::vk::FramebufferHelper" }
%"class.absl::container_internal::CompressedTuple.792" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.793" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.793" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.rx::vk::ClearValuesArray" = type { %"struct.std::__1::array.803", %"class.angle::BitSetT.804" }
%"struct.std::__1::array.803" = type { [10 x %union.VkClearValue] }
%"class.angle::BitSetT.804" = type { i64 }
%"class.angle::PackedEnumMap.902" = type { %"struct.std::__1::array.903" }
%"struct.std::__1::array.903" = type { [3 x i32] }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%"class.rx::IncompleteTextureSet" = type { %"class.angle::PackedEnumMap.904", %"class.gl::Buffer"* }
%"class.angle::PackedEnumMap.904" = type { %"struct.std::__1::array.905" }
%"struct.std::__1::array.905" = type { [4 x %"class.angle::PackedEnumMap.544"] }
%"class.angle::PackedEnumMap.906" = type { %"struct.std::__1::array.907" }
%"struct.std::__1::array.907" = type { [2 x %"struct.rx::ContextVk::DriverUniformsDescriptorSet"] }
%"struct.rx::ContextVk::DriverUniformsDescriptorSet" = type { %"class.rx::vk::DynamicBuffer", %struct.VkDescriptorSet_T*, i32, %"class.rx::vk::BindingPointer.862", %"class.rx::vk::BindingPointer.866", %"class.rx::DriverUniformsDescriptorSetCache" }
%"class.rx::DriverUniformsDescriptorSetCache" = type { %"class.rx::HasCacheStats.908", %"class.angle::FastIntegerMap" }
%"class.rx::HasCacheStats.908" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.angle::FastIntegerMap" = type { %"class.angle::FastIntegerSet", %"class.std::__1::vector.916" }
%"class.angle::FastIntegerSet" = type { %"class.std::__1::vector.909" }
%"class.std::__1::vector.909" = type { %"class.std::__1::__vector_base.910" }
%"class.std::__1::__vector_base.910" = type { %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*, %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"class.angle::BitSetT.168"* }
%"class.std::__1::vector.916" = type { %"class.std::__1::__vector_base.917" }
%"class.std::__1::__vector_base.917" = type { %struct.VkDescriptorSet_T**, %struct.VkDescriptorSet_T**, %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %struct.VkDescriptorSet_T** }
%"struct.std::__1::array.923" = type { [96 x %"struct.rx::vk::TextureUnit"] }
%"struct.rx::vk::TextureUnit" = type { %"class.rx::TextureVk"*, %"class.rx::vk::SamplerHelper"*, i32 }
%"class.rx::TextureVk" = type { %"class.rx::TextureImpl", %"class.angle::ObserverInterface", i8, i8, i8, i32, i32, [4 x i8], %"class.angle::PackedEnumMap.924", %"class.angle::PackedEnumMap.926", %"class.rx::vk::BufferViewHelper", %"class.angle::PackedEnumMap.943", %"class.rx::vk::ImageHelper"*, %"class.rx::vk::BindingPointer.953", i64, i32, i32, %"class.angle::BitSetT.166", %"class.angle::ObserverBinding" }
%"class.angle::PackedEnumMap.924" = type { %"struct.std::__1::array.925" }
%"struct.std::__1::array.925" = type { [5 x %"class.rx::vk::ImageHelper"] }
%"class.angle::PackedEnumMap.926" = type { %"struct.std::__1::array.927" }
%"struct.std::__1::array.927" = type { [5 x %"class.rx::vk::ImageViewHelper"] }
%"class.rx::vk::BufferViewHelper" = type <{ %"class.rx::vk::Resource", %"class.absl::flat_hash_map.928", i64, i64, %"class.rx::vk::ImageOrBufferViewSerial", [4 x i8] }>
%"class.absl::flat_hash_map.928" = type { %"class.absl::container_internal::raw_hash_map.929" }
%"class.absl::container_internal::raw_hash_map.929" = type { %"class.absl::container_internal::raw_hash_set.930" }
%"class.absl::container_internal::raw_hash_set.930" = type { i8*, %"union.absl::container_internal::map_slot_type.931"*, i64, i64, %"class.absl::container_internal::CompressedTuple.932" }
%"union.absl::container_internal::map_slot_type.931" = type opaque
%"class.absl::container_internal::CompressedTuple.932" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.933" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.933" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.angle::PackedEnumMap.943" = type { %"struct.std::__1::array.944" }
%"struct.std::__1::array.944" = type { [5 x %"class.std::__1::vector.945"] }
%"class.std::__1::vector.945" = type { %"class.std::__1::__vector_base.946" }
%"class.std::__1::__vector_base.946" = type { %"class.std::__1::vector.947"*, %"class.std::__1::vector.947"*, %"class.std::__1::__compressed_pair.948" }
%"class.std::__1::vector.947" = type opaque
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.949" }
%"struct.std::__1::__compressed_pair_elem.949" = type { %"class.std::__1::vector.947"* }
%"class.rx::vk::BindingPointer.953" = type { %"class.rx::vk::RefCounted.954"* }
%"class.rx::vk::RefCounted.954" = type { i32, [4 x i8], %"class.rx::vk::SamplerHelper" }
%"class.rx::vk::SamplerHelper" = type <{ [8 x i8], %"class.rx::vk::Sampler", %"class.rx::vk::SamplerSerial", [4 x i8] }>
%"class.rx::vk::Sampler" = type { %"class.rx::vk::WrappedObject.955" }
%"class.rx::vk::WrappedObject.955" = type { %struct.VkSampler_T* }
%struct.VkSampler_T = type opaque
%"struct.std::__1::array.959" = type { [96 x %"class.rx::TextureVk"*] }
%"struct.std::__1::array.960" = type { [16 x %"class.rx::vk::DynamicBuffer"] }
%"class.rx::vk::CommandPool" = type { %"class.rx::vk::WrappedObject.961" }
%"class.rx::vk::WrappedObject.961" = type { %struct.VkCommandPool_T* }
%struct.VkCommandPool_T = type opaque
%"class.std::__1::vector.962" = type { %"class.std::__1::__vector_base.963" }
%"class.std::__1::__vector_base.963" = type { %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"*, %"class.std::__1::__compressed_pair.964" }
%"class.rx::vk::GarbageObject" = type { i32, %"struct.rx::vk::GarbageHandle_T"* }
%"struct.rx::vk::GarbageHandle_T" = type opaque
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.965" }
%"struct.std::__1::__compressed_pair_elem.965" = type { %"class.rx::vk::GarbageObject"* }
%"class.rx::RenderPassCache" = type { %"class.absl::flat_hash_map.969", %"class.rx::CacheStats", %"class.rx::CacheStats" }
%"class.absl::flat_hash_map.969" = type { %"class.absl::container_internal::raw_hash_map.970" }
%"class.absl::container_internal::raw_hash_map.970" = type { %"class.absl::container_internal::raw_hash_set.971" }
%"class.absl::container_internal::raw_hash_set.971" = type { i8*, %"union.absl::container_internal::map_slot_type.972"*, i64, i64, %"class.absl::container_internal::CompressedTuple.973" }
%"union.absl::container_internal::map_slot_type.972" = type { %"struct.std::__1::pair.1506" }
%"struct.std::__1::pair.1506" = type { %"class.rx::vk::RenderPassDesc", %"class.absl::flat_hash_map.1507" }
%"class.absl::flat_hash_map.1507" = type { %"class.absl::container_internal::raw_hash_map.1508" }
%"class.absl::container_internal::raw_hash_map.1508" = type { %"class.absl::container_internal::raw_hash_set.1509" }
%"class.absl::container_internal::raw_hash_set.1509" = type { i8*, %"union.absl::container_internal::map_slot_type.1510"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1511" }
%"union.absl::container_internal::map_slot_type.1510" = type { %"struct.std::__1::pair.1523" }
%"struct.std::__1::pair.1523" = type { %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::RenderPassHelper" }
%"class.rx::vk::AttachmentOpsArray" = type { %"struct.std::__1::array.994" }
%"struct.std::__1::array.994" = type { [10 x %"struct.rx::vk::PackedAttachmentOpsDesc"] }
%"struct.rx::vk::PackedAttachmentOpsDesc" = type { i32 }
%"class.rx::vk::RenderPassHelper" = type <{ [8 x i8], %"class.rx::vk::RenderPass", %"struct.rx::vk::RenderPassPerfCounters", [3 x i8] }>
%"struct.rx::vk::RenderPassPerfCounters" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.absl::container_internal::CompressedTuple.1511" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1512" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1512" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::container_internal::CompressedTuple.973" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.974" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.974" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.rx::vk::CommandBufferHelper" = type { [8 x i8], %"class.angle::PoolAllocator", %"class.angle::PackedEnumMap.984", %"class.angle::BitSetT.993", %"class.rx::vk::priv::SecondaryCommandBuffer", i32, %"class.rx::vk::RenderPassDesc", %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::Framebuffer", %"struct.gl::Rectangle", %"class.rx::vk::PackedClearValuesArray", i8, %"struct.std::__1::array.995", i32, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, %"struct.gl::Rectangle", %"struct.gl::Rectangle", %"class.rx::vk::PackedAttachmentIndex", %"class.angle::FastIntegerMap.996", %"class.angle::FastIntegerSet", %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"*, %"class.gl::LevelIndexWrapper", i32, i32, %"class.rx::vk::PackedAttachmentIndex", %"class.rx::vk::PackedImageAttachmentArray", %"class.rx::vk::PackedImageAttachmentArray", %"class.rx::vk::ImageHelper"* }
%"class.angle::PackedEnumMap.984" = type { %"struct.std::__1::array.985" }
%"struct.std::__1::array.985" = type { [14 x %"class.rx::vk::PipelineBarrier"] }
%"class.rx::vk::PipelineBarrier" = type { i32, i32, i32, i32, %"class.std::__1::vector.986" }
%"class.std::__1::vector.986" = type { %"class.std::__1::__vector_base.987" }
%"class.std::__1::__vector_base.987" = type { %struct.VkImageMemoryBarrier*, %struct.VkImageMemoryBarrier*, %"class.std::__1::__compressed_pair.988" }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.988" = type { %"struct.std::__1::__compressed_pair_elem.989" }
%"struct.std::__1::__compressed_pair_elem.989" = type { %struct.VkImageMemoryBarrier* }
%"class.angle::BitSetT.993" = type { i16 }
%"class.rx::vk::PackedClearValuesArray" = type { %"struct.std::__1::array.803" }
%"struct.std::__1::array.995" = type { [4 x %struct.VkBuffer_T*] }
%struct.VkBuffer_T = type opaque
%"class.angle::FastIntegerMap.996" = type { %"class.angle::FastIntegerSet", %"class.std::__1::vector.997" }
%"class.std::__1::vector.997" = type { %"class.std::__1::__vector_base.998" }
%"class.std::__1::__vector_base.998" = type { i32*, i32*, %"class.std::__1::__compressed_pair.999" }
%"class.std::__1::__compressed_pair.999" = type { %"struct.std::__1::__compressed_pair_elem.1000" }
%"struct.std::__1::__compressed_pair_elem.1000" = type { i32* }
%"class.rx::vk::PackedAttachmentIndex" = type { i32 }
%"class.rx::vk::PackedImageAttachmentArray" = type { %"struct.std::__1::array.1004" }
%"struct.std::__1::array.1004" = type { [10 x %"class.rx::vk::ImageHelper"*] }
%"class.angle::FastUnorderedSet" = type { %"class.angle::FastVector.1005" }
%"class.angle::FastVector.1005" = type { %"struct.std::__1::array.1006", %"class.rx::vk::BufferHelper"**, i64, i64 }
%"struct.std::__1::array.1006" = type { [4 x %"class.rx::vk::BufferHelper"*] }
%"class.rx::vk::ShaderLibrary" = type { [8 x i8], [24 x %"class.rx::vk::RefCounted.874"], [4 x %"class.rx::vk::RefCounted.874"], [4 x %"class.rx::vk::RefCounted.874"], [3 x %"class.rx::vk::RefCounted.874"], [1 x %"class.rx::vk::RefCounted.874"], [8 x %"class.rx::vk::RefCounted.874"], [1 x %"class.rx::vk::RefCounted.874"], [10 x %"class.rx::vk::RefCounted.874"], [48 x %"class.rx::vk::RefCounted.874"], [43 x %"class.rx::vk::RefCounted.874"], [6 x %"class.rx::vk::RefCounted.874"], [2 x %"class.rx::vk::RefCounted.874"] }
%"class.rx::UtilsVk" = type { [8 x i8], %"class.angle::PackedEnumMap.1007", %"class.angle::PackedEnumMap.1009", %"class.angle::PackedEnumMap.1011", [4 x %"class.rx::vk::ShaderProgramHelper"], [3 x %"class.rx::vk::ShaderProgramHelper"], [1 x %"class.rx::vk::ShaderProgramHelper"], [8 x %"class.rx::vk::ShaderProgramHelper"], %"class.rx::vk::ShaderProgramHelper", [48 x %"class.rx::vk::ShaderProgramHelper"], [43 x %"class.rx::vk::ShaderProgramHelper"], [24 x %"class.rx::vk::ShaderProgramHelper"], [4 x %"class.rx::vk::ShaderProgramHelper"], [6 x %"class.rx::vk::ShaderProgramHelper"], [2 x %"class.rx::vk::ShaderProgramHelper"], [10 x %"class.rx::vk::ShaderProgramHelper"], %"class.std::__1::unordered_map.1013", %"class.std::__1::unordered_map.1038", %"class.rx::vk::Sampler", %"class.rx::vk::Sampler", %"struct.rx::InternalShaderPerfCounters", %"struct.rx::InternalShaderPerfCounters" }
%"class.angle::PackedEnumMap.1007" = type { %"struct.std::__1::array.1008" }
%"struct.std::__1::array.1008" = type { [22 x %"class.angle::PackedEnumMap.860"] }
%"class.angle::PackedEnumMap.1009" = type { %"struct.std::__1::array.1010" }
%"struct.std::__1::array.1010" = type { [22 x %"class.rx::vk::BindingPointer.858"] }
%"class.angle::PackedEnumMap.1011" = type { %"struct.std::__1::array.1012" }
%"struct.std::__1::array.1012" = type { [22 x %"class.rx::vk::DynamicDescriptorPool"] }
%"class.std::__1::unordered_map.1013" = type { %"class.std::__1::__hash_table.1014" }
%"class.std::__1::__hash_table.1014" = type <{ %"class.std::__1::unique_ptr.1015", %"class.std::__1::__compressed_pair.1025", %"class.std::__1::__compressed_pair.1030", %"class.std::__1::__compressed_pair.1034", [4 x i8] }>
%"class.std::__1::unique_ptr.1015" = type { %"class.std::__1::__compressed_pair.1016" }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.1017", %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1017" = type { %"struct.std::__1::__hash_node_base.1018"** }
%"struct.std::__1::__hash_node_base.1018" = type { %"struct.std::__1::__hash_node_base.1018"* }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"class.std::__1::__bucket_list_deallocator.1020" }
%"class.std::__1::__bucket_list_deallocator.1020" = type { %"class.std::__1::__compressed_pair.1021" }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.1026" }
%"struct.std::__1::__compressed_pair_elem.1026" = type { %"struct.std::__1::__hash_node_base.1018" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"class.std::__1::unordered_map.1038" = type { %"class.std::__1::__hash_table.1039" }
%"class.std::__1::__hash_table.1039" = type <{ %"class.std::__1::unique_ptr.1040", %"class.std::__1::__compressed_pair.1050", %"class.std::__1::__compressed_pair.1055", %"class.std::__1::__compressed_pair.1058", [4 x i8] }>
%"class.std::__1::unique_ptr.1040" = type { %"class.std::__1::__compressed_pair.1041" }
%"class.std::__1::__compressed_pair.1041" = type { %"struct.std::__1::__compressed_pair_elem.1042", %"struct.std::__1::__compressed_pair_elem.1044" }
%"struct.std::__1::__compressed_pair_elem.1042" = type { %"struct.std::__1::__hash_node_base.1043"** }
%"struct.std::__1::__hash_node_base.1043" = type { %"struct.std::__1::__hash_node_base.1043"* }
%"struct.std::__1::__compressed_pair_elem.1044" = type { %"class.std::__1::__bucket_list_deallocator.1045" }
%"class.std::__1::__bucket_list_deallocator.1045" = type { %"class.std::__1::__compressed_pair.1046" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"struct.std::__1::__hash_node_base.1043" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.rx::InternalShaderPerfCounters" = type { i32 }
%"class.rx::vk::DynamicQueryPool" = type { %"class.rx::vk::DynamicallyGrowingPool.base", i32 }
%"class.rx::vk::DynamicallyGrowingPool.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.std::__1::vector.715", %"class.std::__1::vector.723", i64, i32 }>
%"class.std::__1::vector.715" = type { %"class.std::__1::__vector_base.716" }
%"class.std::__1::__vector_base.716" = type { %"class.rx::vk::QueryPool"*, %"class.rx::vk::QueryPool"*, %"class.std::__1::__compressed_pair.718" }
%"class.rx::vk::QueryPool" = type { %"class.rx::vk::WrappedObject.717" }
%"class.rx::vk::WrappedObject.717" = type { %struct.VkQueryPool_T* }
%struct.VkQueryPool_T = type opaque
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.rx::vk::QueryPool"* }
%"class.std::__1::vector.723" = type { %"class.std::__1::__vector_base.724" }
%"class.std::__1::__vector_base.724" = type { %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"*, %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"*, %"class.std::__1::__compressed_pair.725" }
%"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats" = type opaque
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"* }
%"class.std::__1::vector.1062" = type { %"class.std::__1::__vector_base.1063" }
%"class.std::__1::__vector_base.1063" = type { %"struct.rx::ContextVk::GpuEventQuery"*, %"struct.rx::ContextVk::GpuEventQuery"*, %"class.std::__1::__compressed_pair.1065" }
%"struct.rx::ContextVk::GpuEventQuery" = type { %"struct.std::__1::array.1064", i8, [7 x i8], %"class.rx::vk::QueryHelper" }
%"struct.std::__1::array.1064" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.1066" }
%"struct.std::__1::__compressed_pair_elem.1066" = type { %"struct.rx::ContextVk::GpuEventQuery"* }
%"class.std::__1::vector.1070" = type { %"class.std::__1::__vector_base.1071" }
%"class.std::__1::__vector_base.1071" = type { %"struct.rx::ContextVk::GpuEvent"*, %"struct.rx::ContextVk::GpuEvent"*, %"class.std::__1::__compressed_pair.1072" }
%"struct.rx::ContextVk::GpuEvent" = type { i64, %"struct.std::__1::array.1064", i8 }
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.1073" }
%"struct.std::__1::__compressed_pair_elem.1073" = type { %"struct.rx::ContextVk::GpuEvent"* }
%"class.std::__1::vector.1077" = type { %"class.std::__1::__vector_base.1078" }
%"class.std::__1::__vector_base.1078" = type { %struct.VkSemaphore_T**, %struct.VkSemaphore_T**, %"class.std::__1::__compressed_pair.1079" }
%"class.std::__1::__compressed_pair.1079" = type { %"struct.std::__1::__compressed_pair_elem.1080" }
%"struct.std::__1::__compressed_pair_elem.1080" = type { %struct.VkSemaphore_T** }
%"struct.rx::ContextVk::GpuClockSyncInfo" = type { double, double }
%"struct.rx::vk::PerfCounters" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.rx::ContextVkPerfCounters" = type { %"class.angle::PackedEnumMap.1084" }
%"class.angle::PackedEnumMap.1084" = type { %"struct.std::__1::array.373" }
%"class.rx::vk::ResourceUseList" = type { i32 (...)**, %"class.std::__1::vector.1085" }
%"class.std::__1::vector.1085" = type { %"class.std::__1::__vector_base.1086" }
%"class.std::__1::__vector_base.1086" = type { %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"*, %"class.std::__1::__compressed_pair.1087" }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.1088" }
%"struct.std::__1::__compressed_pair_elem.1088" = type { %"class.rx::vk::SharedResourceUse"* }
%"class.std::__1::vector.1092" = type { %"class.std::__1::__vector_base.1093" }
%"class.std::__1::__vector_base.1093" = type { %struct.VkDescriptorBufferInfo*, %struct.VkDescriptorBufferInfo*, %"class.std::__1::__compressed_pair.1094" }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { %struct.VkDescriptorBufferInfo* }
%"class.std::__1::vector.1099" = type { %"class.std::__1::__vector_base.1100" }
%"class.std::__1::__vector_base.1100" = type { %struct.VkDescriptorImageInfo*, %struct.VkDescriptorImageInfo*, %"class.std::__1::__compressed_pair.1101" }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%"class.std::__1::__compressed_pair.1101" = type { %"struct.std::__1::__compressed_pair_elem.1102" }
%"struct.std::__1::__compressed_pair_elem.1102" = type { %struct.VkDescriptorImageInfo* }
%"class.std::__1::vector.1106" = type { %"class.std::__1::__vector_base.1107" }
%"class.std::__1::__vector_base.1107" = type { %struct.VkWriteDescriptorSet*, %struct.VkWriteDescriptorSet*, %"class.std::__1::__compressed_pair.1108" }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkBufferView_T = type opaque
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.1109" }
%"struct.std::__1::__compressed_pair_elem.1109" = type { %struct.VkWriteDescriptorSet* }
%"class.rx::ShareGroupVk" = type <{ %"class.rx::ShareGroupImpl", %"class.rx::PipelineLayoutCache", %"class.rx::DescriptorSetLayoutCache", %"class.std::__1::set.1168", %"class.std::__1::vector.1178", i8, [7 x i8] }>
%"class.rx::ShareGroupImpl" = type { i32 (...)** }
%"class.rx::PipelineLayoutCache" = type { %"class.rx::HasCacheStats.1113", %"class.std::__1::unordered_map.1114" }
%"class.rx::HasCacheStats.1113" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1114" = type { %"class.std::__1::__hash_table.1115" }
%"class.std::__1::__hash_table.1115" = type <{ %"class.std::__1::unique_ptr.1116", %"class.std::__1::__compressed_pair.1126", %"class.std::__1::__compressed_pair.1131", %"class.std::__1::__compressed_pair.1135", [4 x i8] }>
%"class.std::__1::unique_ptr.1116" = type { %"class.std::__1::__compressed_pair.1117" }
%"class.std::__1::__compressed_pair.1117" = type { %"struct.std::__1::__compressed_pair_elem.1118", %"struct.std::__1::__compressed_pair_elem.1120" }
%"struct.std::__1::__compressed_pair_elem.1118" = type { %"struct.std::__1::__hash_node_base.1119"** }
%"struct.std::__1::__hash_node_base.1119" = type { %"struct.std::__1::__hash_node_base.1119"* }
%"struct.std::__1::__compressed_pair_elem.1120" = type { %"class.std::__1::__bucket_list_deallocator.1121" }
%"class.std::__1::__bucket_list_deallocator.1121" = type { %"class.std::__1::__compressed_pair.1122" }
%"class.std::__1::__compressed_pair.1122" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1126" = type { %"struct.std::__1::__compressed_pair_elem.1127" }
%"struct.std::__1::__compressed_pair_elem.1127" = type { %"struct.std::__1::__hash_node_base.1119" }
%"class.std::__1::__compressed_pair.1131" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1135" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"class.rx::DescriptorSetLayoutCache" = type { %"class.std::__1::unordered_map.1141", %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1141" = type { %"class.std::__1::__hash_table.1142" }
%"class.std::__1::__hash_table.1142" = type <{ %"class.std::__1::unique_ptr.1143", %"class.std::__1::__compressed_pair.1153", %"class.std::__1::__compressed_pair.1158", %"class.std::__1::__compressed_pair.1162", [4 x i8] }>
%"class.std::__1::unique_ptr.1143" = type { %"class.std::__1::__compressed_pair.1144" }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem.1145", %"struct.std::__1::__compressed_pair_elem.1147" }
%"struct.std::__1::__compressed_pair_elem.1145" = type { %"struct.std::__1::__hash_node_base.1146"** }
%"struct.std::__1::__hash_node_base.1146" = type { %"struct.std::__1::__hash_node_base.1146"* }
%"struct.std::__1::__compressed_pair_elem.1147" = type { %"class.std::__1::__bucket_list_deallocator.1148" }
%"class.std::__1::__bucket_list_deallocator.1148" = type { %"class.std::__1::__compressed_pair.1149" }
%"class.std::__1::__compressed_pair.1149" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.1154" }
%"struct.std::__1::__compressed_pair_elem.1154" = type { %"struct.std::__1::__hash_node_base.1146" }
%"class.std::__1::__compressed_pair.1158" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1162" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"class.std::__1::set.1168" = type { %"class.std::__1::__tree.1169" }
%"class.std::__1::__tree.1169" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1170", %"class.std::__1::__compressed_pair.1174" }
%"class.std::__1::__compressed_pair.1170" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1174" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.1178" = type { %"class.std::__1::__vector_base.1179" }
%"class.std::__1::__vector_base.1179" = type { %"class.rx::vk::ResourceUseList"*, %"class.rx::vk::ResourceUseList"*, %"class.std::__1::__compressed_pair.1180" }
%"class.std::__1::__compressed_pair.1180" = type { %"struct.std::__1::__compressed_pair_elem.1181" }
%"struct.std::__1::__compressed_pair_elem.1181" = type { %"class.rx::vk::ResourceUseList"* }
%"class.rx::vk::BufferHelper" = type { %"class.rx::vk::Resource", %"class.rx::vk::Buffer", %"class.rx::vk::BufferMemory", i32, i64, i32, i32, i32, i32, i32, %"class.rx::vk::BufferSerial" }
%"class.rx::vk::Buffer" = type { %"class.rx::vk::WrappedObject.748" }
%"class.rx::vk::WrappedObject.748" = type { %struct.VkBuffer_T* }
%"class.rx::vk::BufferMemory" = type { [8 x i8], %"class.rx::vk::Allocation", %"class.rx::vk::DeviceMemory", i8*, i8* }
%"class.rx::vk::Allocation" = type { %"class.rx::vk::WrappedObject.749" }
%"class.rx::vk::WrappedObject.749" = type { %struct.VmaAllocation_T* }
%struct.VmaAllocation_T = type opaque
%"class.rx::vk::DynamicBuffer" = type { i32, i8, i32, i64, %"class.std::__1::unique_ptr.745", i32, i32, i64, i64, i32, %"class.std::__1::vector.753", %"class.std::__1::vector.753" }
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.rx::vk::BufferHelper"* }
%"class.std::__1::vector.753" = type { %"class.std::__1::__vector_base.754" }
%"class.std::__1::__vector_base.754" = type { %"class.std::__1::unique_ptr.745"*, %"class.std::__1::unique_ptr.745"*, %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.std::__1::unique_ptr.745"* }
%"class.gl::BinaryInputStream" = type { i8, i64, i8*, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.gl::BinaryOutputStream" = type { %"class.std::__1::vector.1419" }
%"class.std::__1::vector.1419" = type { %"class.std::__1::__vector_base.1420" }
%"class.std::__1::__vector_base.1420" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1421" }
%"class.std::__1::__compressed_pair.1421" = type { %"struct.std::__1::__compressed_pair_elem.1422" }
%"struct.std::__1::__compressed_pair_elem.1422" = type { i8* }
%"struct.rx::GlslangSpirvOptions" = type <{ i8, [3 x i8], i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.rx::ShaderInterfaceVariableInfoMap::Iterator" = type { %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, rx::ShaderInterfaceVariableInfo>, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, rx::ShaderInterfaceVariableInfo> > >::const_iterator", %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, rx::ShaderInterfaceVariableInfo>, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, rx::ShaderInterfaceVariableInfo> > >::const_iterator" }
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, rx::ShaderInterfaceVariableInfo>, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, rx::ShaderInterfaceVariableInfo> > >::const_iterator" = type { %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, rx::ShaderInterfaceVariableInfo>, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, rx::ShaderInterfaceVariableInfo> > >::iterator" }
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, rx::ShaderInterfaceVariableInfo>, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, rx::ShaderInterfaceVariableInfo> > >::iterator" = type { i8*, %union.anon.1445 }
%union.anon.1445 = type { %"union.absl::container_internal::map_slot_type.660"* }
%"class.angle::PackedEnumMap.1447" = type { %"struct.std::__1::array.1448" }
%"struct.std::__1::array.1448" = type { [6 x %"class.gl::ProgramState"*] }
%"class.rx::vk::DescriptorSetLayoutDesc" = type { %"struct.std::__1::array.1452" }
%"struct.std::__1::array.1452" = type { [96 x %"struct.rx::vk::DescriptorSetLayoutDesc::PackedDescriptorSetBinding"] }
%"struct.rx::vk::DescriptorSetLayoutDesc::PackedDescriptorSetBinding" = type { i8, i8, i16, i32, %struct.VkSampler_T* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.angle::FixedVector.1457" = type { %"struct.std::__1::array.1458", i64 }
%"struct.std::__1::array.1458" = type { [96 x %struct.VkDescriptorSetLayoutBinding] }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%"class.std::__1::vector.1459" = type { %"class.std::__1::__vector_base.1460" }
%"class.std::__1::__vector_base.1460" = type { %struct.VkSampler_T**, %struct.VkSampler_T**, %"class.std::__1::__compressed_pair.1461" }
%"class.std::__1::__compressed_pair.1461" = type { %"struct.std::__1::__compressed_pair_elem.1462" }
%"struct.std::__1::__compressed_pair_elem.1462" = type { %struct.VkSampler_T** }
%"class.rx::vk::PipelineLayoutDesc" = type { %"class.angle::PackedEnumMap.1471", %"class.angle::PackedEnumMap.1473" }
%"class.angle::PackedEnumMap.1471" = type { %"struct.std::__1::array.1472" }
%"struct.std::__1::array.1472" = type { [4 x %"class.rx::vk::DescriptorSetLayoutDesc"] }
%"class.angle::PackedEnumMap.1473" = type { %"struct.std::__1::array.1474" }
%"struct.std::__1::array.1474" = type { [6 x %"struct.rx::vk::PackedPushConstantRange"] }
%"struct.rx::vk::PackedPushConstantRange" = type { i32, i32 }
%"class.rx::TransformFeedbackVk" = type { %"class.rx::TransformFeedbackImpl", i8, %"struct.std::__1::array.1468", %"struct.std::__1::array.995", %"struct.std::__1::array.1469", %"struct.std::__1::array.1469", %"struct.std::__1::array.1469", %"struct.std::__1::array.1470", %"struct.std::__1::array.995", %"class.rx::vk::UniformsAndXfbDescriptorDesc" }
%"struct.std::__1::array.1468" = type { [4 x %"class.rx::vk::BufferHelper"*] }
%"struct.std::__1::array.1469" = type { [4 x i64] }
%"struct.std::__1::array.1470" = type { [4 x %"class.rx::vk::BufferHelper"] }
%"class.std::__1::vector.1475" = type { %"class.std::__1::__vector_base.1476" }
%"class.std::__1::__vector_base.1476" = type { %"struct.gl::ProgramVaryingRef"*, %"struct.gl::ProgramVaryingRef"*, %"class.std::__1::__compressed_pair.1477" }
%"struct.gl::ProgramVaryingRef" = type <{ %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.1477" = type { %"struct.std::__1::__compressed_pair_elem.1478" }
%"struct.std::__1::__compressed_pair_elem.1478" = type { %"struct.gl::ProgramVaryingRef"* }
%"class.rx::BufferVk" = type { %"class.rx::BufferImpl", %"class.rx::vk::BufferHelper"*, i64, %"class.rx::vk::DynamicBuffer", %"class.rx::vk::DynamicBuffer", i64, %"class.rx::vk::DynamicShadowBuffer", %"class.std::__1::vector.1483" }
%"class.rx::vk::DynamicShadowBuffer" = type { i64, i64, %"class.angle::MemoryBuffer" }
%"class.std::__1::vector.1483" = type { %"class.std::__1::__vector_base.1484" }
%"class.std::__1::__vector_base.1484" = type { %"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"*, %"class.std::__1::__compressed_pair.1485" }
%"struct.rx::BufferVk::VertexConversionBuffer" = type { %"struct.rx::ConversionBuffer", i32, i32, i64 }
%"struct.rx::ConversionBuffer" = type { i8, i64, %"class.rx::vk::DynamicBuffer" }
%"class.std::__1::__compressed_pair.1485" = type { %"struct.std::__1::__compressed_pair_elem.1486" }
%"struct.std::__1::__compressed_pair_elem.1486" = type { %"struct.rx::BufferVk::VertexConversionBuffer"* }
%"class.rx::vk::BufferView" = type { %"class.rx::vk::WrappedObject.1490" }
%"class.rx::vk::WrappedObject.1490" = type { %struct.VkBufferView_T* }

$_ZN2rx13LinkEventDone4waitEPKN2gl7ContextE = comdat any

$_ZN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EED2Ev = comdat any

$_ZN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EED2Ev = comdat any

$_ZN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EED2Ev = comdat any

$_ZN2gl14InterfaceBlockD2Ev = comdat any

$_ZN2rx13LinkEventDoneD0Ev = comdat any

$_ZN2rx13LinkEventDone9isLinkingEv = comdat any

$_ZN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EED0Ev = comdat any

$_ZN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EED0Ev = comdat any

$_ZN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EED0Ev = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_ = comdat any

$_ZN2gl14InterfaceBlockD0Ev = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEENSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE4findIS5_EENSR_8iteratorERSO_ = comdat any

$_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm = comdat any

$_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEE8__appendEm = comdat any

$_ZNSt3__113__vector_baseIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEE17__destruct_at_endEPS2_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZN2rx9LinkEventD2Ev = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE4findIS5_EENSK_8iteratorERSH_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE22find_or_prepare_insertIS5_EENSG_ImbEERKT_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE22find_or_prepare_insertIS5_EENSG_ImbEERKT_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE22find_or_prepare_insertIS9_EENSE_ImbEERKT_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE4findIS5_EENSK_8iteratorERSH_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE4findIS5_EENSK_8iteratorERSH_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE22find_or_prepare_insertIS5_EENSG_ImbEERKT_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZTVN2rx13LinkEventDoneE = comdat any

$_ZTVN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EEE = comdat any

$_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = comdat any

$_ZTVN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EEE = comdat any

$_ZTVN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EEE = comdat any

$_ZTVN2gl14InterfaceBlockE = comdat any

@_ZTVN2rx19ProgramExecutableVkE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::ProgramExecutableVk"*)* @_ZN2rx19ProgramExecutableVkD2Ev to i8*), i8* bitcast (void (%"class.rx::ProgramExecutableVk"*)* @_ZN2rx19ProgramExecutableVkD0Ev to i8*)] }, align 8
@_ZN2rx5gl_vkL15kShaderStageMapE = internal unnamed_addr constant %"class.angle::PackedEnumMap.1453" { %"struct.std::__1::array.1454" { [6 x i32] [i32 1, i32 2, i32 4, i32 8, i32 16, i32 32] } }, align 4
@_ZN2sh2vk24kAtomicCountersBlockNameE = external constant [0 x i8], align 1
@_ZN2rxL20kDefaultUniformNamesE = internal unnamed_addr constant %"class.angle::PackedEnumMap.1466" { %"struct.std::__1::array.1467" { [6 x i8*] [i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk22kDefaultUniformsNameVSE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk23kDefaultUniformsNameTCSE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk23kDefaultUniformsNameTESE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk22kDefaultUniformsNameGSE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk22kDefaultUniformsNameFSE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk22kDefaultUniformsNameCSE, i32 0, i32 0)] } }, align 8
@_ZTVN2rx13LinkEventDoneE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::LinkEvent"*)* @_ZN2rx9LinkEventD2Ev to i8*), i8* bitcast (void (%"class.rx::LinkEventDone"*)* @_ZN2rx13LinkEventDoneD0Ev to i8*), i8* bitcast (i32 (%"class.rx::LinkEventDone"*, %"class.gl::Context"*)* @_ZN2rx13LinkEventDone4waitEPKN2gl7ContextE to i8*), i8* bitcast (i1 (%"class.rx::LinkEventDone"*)* @_ZN2rx13LinkEventDone9isLinkingEv to i8*)] }, comdat, align 8
@_ZTVN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::DescriptorSetCache"*)* @_ZN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EED2Ev to i8*), i8* bitcast (void (%"class.rx::DescriptorSetCache"*)* @_ZN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EED0Ev to i8*)] }, comdat, align 8
@_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = linkonce_odr hidden constant [16 x i8] c"\FF\80\80\80\80\80\80\80\80\80\80\80\80\80\80\80", comdat, align 16
@_ZTVN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::DescriptorSetCache.824"*)* @_ZN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EED2Ev to i8*), i8* bitcast (void (%"class.rx::DescriptorSetCache.824"*)* @_ZN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EED0Ev to i8*)] }, comdat, align 8
@_ZTVN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::DescriptorSetCache.841"*)* @_ZN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EED2Ev to i8*), i8* bitcast (void (%"class.rx::DescriptorSetCache.841"*)* @_ZN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EED0Ev to i8*)] }, comdat, align 8
@_ZTVN2gl14InterfaceBlockE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.gl::InterfaceBlock"*)* @_ZN2gl14InterfaceBlockD2Ev to i8*), i8* bitcast (void (%"struct.gl::InterfaceBlock"*)* @_ZN2gl14InterfaceBlockD0Ev to i8*)] }, comdat, align 8
@_ZN2gl4priv10gLineModesE = external local_unnamed_addr global %"class.angle::PackedEnumMap.1545", align 1
@_ZN4absl13hash_internal15MixingHashState5kSeedE = external local_unnamed_addr constant i8*, align 8
@_ZN2sh2vk22kDefaultUniformsNameVSE = external constant [0 x i8], align 1
@_ZN2sh2vk23kDefaultUniformsNameTCSE = external constant [0 x i8], align 1
@_ZN2sh2vk23kDefaultUniformsNameTESE = external constant [0 x i8], align 1
@_ZN2sh2vk22kDefaultUniformsNameGSE = external constant [0 x i8], align 1
@_ZN2sh2vk22kDefaultUniformsNameFSE = external constant [0 x i8], align 1
@_ZN2sh2vk22kDefaultUniformsNameCSE = external constant [0 x i8], align 1
@vkDestroyShaderModule = external local_unnamed_addr global void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, align 8
@switch.table._ZN2rx19ProgramExecutableVk20accumulateCacheStatsENS_15VulkanCacheTypeERKNS_10CacheStatsE = private unnamed_addr constant [4 x i64] [i64 0, i64 2, i64 1, i64 3], align 8

@_ZN2rx19DefaultUniformBlockC1Ev = hidden unnamed_addr alias void (%"struct.rx::DefaultUniformBlock"*), void (%"struct.rx::DefaultUniformBlock"*)* @_ZN2rx19DefaultUniformBlockC2Ev
@_ZN2rx19DefaultUniformBlockD1Ev = hidden unnamed_addr alias void (%"struct.rx::DefaultUniformBlock"*), void (%"struct.rx::DefaultUniformBlock"*)* @_ZN2rx19DefaultUniformBlockD2Ev
@_ZN2rx10ShaderInfoC1Ev = hidden unnamed_addr alias void (%"class.rx::ShaderInfo"*), void (%"class.rx::ShaderInfo"*)* @_ZN2rx10ShaderInfoC2Ev
@_ZN2rx10ShaderInfoD1Ev = hidden unnamed_addr alias void (%"class.rx::ShaderInfo"*), void (%"class.rx::ShaderInfo"*)* @_ZN2rx10ShaderInfoD2Ev
@_ZN2rx11ProgramInfoC1Ev = hidden unnamed_addr alias void (%"class.rx::ProgramInfo"*), void (%"class.rx::ProgramInfo"*)* @_ZN2rx11ProgramInfoC2Ev
@_ZN2rx11ProgramInfoD1Ev = hidden unnamed_addr alias void (%"class.rx::ProgramInfo"*), void (%"class.rx::ProgramInfo"*)* @_ZN2rx11ProgramInfoD2Ev
@_ZN2rx19ProgramExecutableVkC1Ev = hidden unnamed_addr alias void (%"class.rx::ProgramExecutableVk"*), void (%"class.rx::ProgramExecutableVk"*)* @_ZN2rx19ProgramExecutableVkC2Ev
@_ZN2rx19ProgramExecutableVkD1Ev = hidden unnamed_addr alias void (%"class.rx::ProgramExecutableVk"*), void (%"class.rx::ProgramExecutableVk"*)* @_ZN2rx19ProgramExecutableVkD2Ev

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2rx13LinkEventDone4waitEPKN2gl7ContextE(%"class.rx::LinkEventDone"*, %"class.gl::Context"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.rx::LinkEventDone", %"class.rx::LinkEventDone"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  ret i32 %4
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx19DefaultUniformBlockC2Ev(%"struct.rx::DefaultUniformBlock"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.rx::DefaultUniformBlock", %"struct.rx::DefaultUniformBlock"* %0, i64 0, i32 1
  %3 = bitcast %"class.angle::MemoryBuffer"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx19DefaultUniformBlockD2Ev(%"struct.rx::DefaultUniformBlock"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.rx::DefaultUniformBlock", %"struct.rx::DefaultUniformBlock"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"struct.sh::BlockMemberInfo"*, %"struct.sh::BlockMemberInfo"** %2, align 8
  %4 = icmp eq %"struct.sh::BlockMemberInfo"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.sh::BlockMemberInfo"* %3 to i64
  %7 = getelementptr inbounds %"struct.rx::DefaultUniformBlock", %"struct.rx::DefaultUniformBlock"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast %"struct.sh::BlockMemberInfo"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.sh::BlockMemberInfo"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #20
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"struct.rx::DefaultUniformBlock", %"struct.rx::DefaultUniformBlock"* %0, i64 0, i32 1
  tail call void @_ZN5angle12MemoryBufferD1Ev(%"class.angle::MemoryBuffer"* %11) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5angle12MemoryBufferD1Ev(%"class.angle::MemoryBuffer"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx10ShaderInfoC2Ev(%"class.rx::ShaderInfo"* nocapture) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.rx::ShaderInfo"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 145, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx10ShaderInfoD2Ev(%"class.rx::ShaderInfo"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 5, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i32* %3 to i64
  %7 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 5, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i32* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #20
  br label %10

10:                                               ; preds = %5, %1
  %11 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 4, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = icmp eq i32* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i32* %12 to i64
  %16 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 4, i32 0, i32 1
  %17 = bitcast i32** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast i32* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #20
  br label %19

19:                                               ; preds = %14, %10
  %20 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 3, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = icmp eq i32* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint i32* %21 to i64
  %25 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 3, i32 0, i32 1
  %26 = bitcast i32** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast i32* %21 to i8*
  tail call void @_ZdlPv(i8* %27) #20
  br label %28

28:                                               ; preds = %23, %19
  %29 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 2, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = icmp eq i32* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = ptrtoint i32* %30 to i64
  %34 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 2, i32 0, i32 1
  %35 = bitcast i32** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = bitcast i32* %30 to i8*
  tail call void @_ZdlPv(i8* %36) #20
  br label %37

37:                                               ; preds = %32, %28
  %38 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 1, i32 0, i32 0
  %39 = load i32*, i32** %38, align 8
  %40 = icmp eq i32* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = ptrtoint i32* %39 to i64
  %43 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 1, i32 0, i32 1
  %44 = bitcast i32** %43 to i64*
  store i64 %42, i64* %44, align 8
  %45 = bitcast i32* %39 to i8*
  tail call void @_ZdlPv(i8* %45) #20
  br label %46

46:                                               ; preds = %41, %37
  %47 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 0, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = icmp eq i32* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = ptrtoint i32* %48 to i64
  %52 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = bitcast i32* %48 to i8*
  tail call void @_ZdlPv(i8* %54) #20
  br label %55

55:                                               ; preds = %46, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx10ShaderInfo11initShadersERKN5angle7BitSetTILm6EhN2gl10ShaderTypeEEERKNS1_13PackedEnumMapIS4_PKNSt3__16vectorIjNS9_9allocatorIjEEEELm6EEERKNS_30ShaderInterfaceVariableInfoMapE(%"class.rx::ShaderInfo"*, %"class.angle::BitSetT.141"* nocapture readnone dereferenceable(1), %"class.angle::PackedEnumMap.653"* nocapture readonly dereferenceable(48), %"class.rx::ShaderInterfaceVariableInfoMap"* nocapture readnone dereferenceable(240)) local_unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"class.angle::PackedEnumMap.653", %"class.angle::PackedEnumMap.653"* %2, i64 0, i32 0, i32 0, i64 0
  %6 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %5, align 8
  %7 = icmp eq %"class.std::__1::vector"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %10 = icmp eq %"class.std::__1::vector"* %9, %6
  br i1 %10, label %16, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %15 = load i32*, i32** %14, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %9, i32* %13, i32* %15) #15
  br label %16

16:                                               ; preds = %11, %8, %4
  %17 = getelementptr inbounds %"class.angle::PackedEnumMap.653", %"class.angle::PackedEnumMap.653"* %2, i64 0, i32 0, i32 0, i64 1
  %18 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %17, align 8
  %19 = icmp eq %"class.std::__1::vector"* %18, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 1
  %22 = icmp eq %"class.std::__1::vector"* %21, %18
  br i1 %22, label %28, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %18, i64 0, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %18, i64 0, i32 0, i32 1
  %27 = load i32*, i32** %26, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %21, i32* %25, i32* %27) #15
  br label %28

28:                                               ; preds = %23, %20, %16
  %29 = getelementptr inbounds %"class.angle::PackedEnumMap.653", %"class.angle::PackedEnumMap.653"* %2, i64 0, i32 0, i32 0, i64 2
  %30 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %29, align 8
  %31 = icmp eq %"class.std::__1::vector"* %30, null
  br i1 %31, label %40, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 2
  %34 = icmp eq %"class.std::__1::vector"* %33, %30
  br i1 %34, label %40, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %30, i64 0, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %30, i64 0, i32 0, i32 1
  %39 = load i32*, i32** %38, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %33, i32* %37, i32* %39) #15
  br label %40

40:                                               ; preds = %35, %32, %28
  %41 = getelementptr inbounds %"class.angle::PackedEnumMap.653", %"class.angle::PackedEnumMap.653"* %2, i64 0, i32 0, i32 0, i64 3
  %42 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %41, align 8
  %43 = icmp eq %"class.std::__1::vector"* %42, null
  br i1 %43, label %52, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 3
  %46 = icmp eq %"class.std::__1::vector"* %45, %42
  br i1 %46, label %52, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %42, i64 0, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %42, i64 0, i32 0, i32 1
  %51 = load i32*, i32** %50, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %45, i32* %49, i32* %51) #15
  br label %52

52:                                               ; preds = %47, %44, %40
  %53 = getelementptr inbounds %"class.angle::PackedEnumMap.653", %"class.angle::PackedEnumMap.653"* %2, i64 0, i32 0, i32 0, i64 4
  %54 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %53, align 8
  %55 = icmp eq %"class.std::__1::vector"* %54, null
  br i1 %55, label %64, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 4
  %58 = icmp eq %"class.std::__1::vector"* %57, %54
  br i1 %58, label %64, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %54, i64 0, i32 0, i32 0
  %61 = load i32*, i32** %60, align 8
  %62 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %54, i64 0, i32 0, i32 1
  %63 = load i32*, i32** %62, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %57, i32* %61, i32* %63) #15
  br label %64

64:                                               ; preds = %59, %56, %52
  %65 = getelementptr inbounds %"class.angle::PackedEnumMap.653", %"class.angle::PackedEnumMap.653"* %2, i64 0, i32 0, i32 0, i64 5
  %66 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %65, align 8
  %67 = icmp eq %"class.std::__1::vector"* %66, null
  br i1 %67, label %76, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 5
  %70 = icmp eq %"class.std::__1::vector"* %69, %66
  br i1 %70, label %76, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %66, i64 0, i32 0, i32 0
  %73 = load i32*, i32** %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %66, i64 0, i32 0, i32 1
  %75 = load i32*, i32** %74, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %69, i32* %73, i32* %75) #15
  br label %76

76:                                               ; preds = %71, %68, %64
  %77 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 1
  store i8 1, i8* %77, align 8
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx10ShaderInfo7releaseEPNS_9ContextVkE(%"class.rx::ShaderInfo"*, %"class.rx::ContextVk"* nocapture readnone) local_unnamed_addr #5 align 2 {
  %3 = bitcast %"class.rx::ShaderInfo"* %0 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 0, i32 0, i32 1
  %6 = bitcast i32** %5 to i64*
  store i64 %4, i64* %6, align 8
  %7 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 1
  %8 = bitcast %"class.std::__1::vector"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 1, i32 0, i32 1
  %11 = bitcast i32** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 2
  %13 = bitcast %"class.std::__1::vector"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 2, i32 0, i32 1
  %16 = bitcast i32** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 3
  %18 = bitcast %"class.std::__1::vector"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 3, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 4
  %23 = bitcast %"class.std::__1::vector"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 4, i32 0, i32 1
  %26 = bitcast i32** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 5
  %28 = bitcast %"class.std::__1::vector"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 5, i32 0, i32 1
  %31 = bitcast i32** %30 to i64*
  store i64 %29, i64* %31, align 8
  %32 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 1
  store i8 0, i8* %32, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx10ShaderInfo4loadEPN2gl17BinaryInputStreamE(%"class.rx::ShaderInfo"*, %"class.gl::BinaryInputStream"* nocapture) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %1, i64 0, i32 3
  %5 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %1, i64 0, i32 2
  %6 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %1, i64 0, i32 0
  br label %9

7:                                                ; preds = %112
  %8 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 1
  store i8 1, i8* %8, align 8
  ret void

9:                                                ; preds = %2, %112
  %10 = phi i64 [ 0, %2 ], [ %113, %112 ]
  %11 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 %10
  %12 = load i64, i64* %3, align 8
  %13 = add i64 %12, 8
  %14 = icmp ugt i64 %12, -9
  br i1 %14, label %18, label %15

15:                                               ; preds = %9
  %16 = load i64, i64* %4, align 8
  %17 = icmp ugt i64 %13, %16
  br i1 %17, label %18, label %19

18:                                               ; preds = %15, %9
  store i8 1, i8* %6, align 8
  br label %112

19:                                               ; preds = %15
  %20 = load i8*, i8** %5, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 %12
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  store i64 %13, i64* %3, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %112, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 %10, i32 0, i32 1
  %27 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 %10, i32 0, i32 2, i32 0, i32 0
  %28 = bitcast i32** %26 to i64*
  %29 = bitcast %"class.std::__1::vector"* %11 to i64*
  %30 = bitcast i32** %27 to i64*
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  br label %32

32:                                               ; preds = %110, %25
  %33 = phi i64 [ %13, %25 ], [ %111, %110 ]
  %34 = phi i64 [ 0, %25 ], [ %108, %110 ]
  %35 = add i64 %33, 4
  %36 = icmp ugt i64 %33, -5
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = load i64, i64* %4, align 8
  %39 = icmp ugt i64 %35, %38
  br i1 %39, label %40, label %41

40:                                               ; preds = %37, %32
  store i8 1, i8* %6, align 8
  br label %46

41:                                               ; preds = %37
  %42 = load i8*, i8** %5, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 %33
  %44 = bitcast i8* %43 to i32*
  %45 = load i32, i32* %44, align 1
  store i64 %35, i64* %3, align 8
  br label %46

46:                                               ; preds = %41, %40
  %47 = phi i32 [ 0, %40 ], [ %45, %41 ]
  %48 = load i32*, i32** %26, align 8
  %49 = load i32*, i32** %27, align 8
  %50 = icmp ult i32* %48, %49
  %51 = ptrtoint i32* %49 to i64
  br i1 %50, label %52, label %55

52:                                               ; preds = %46
  store i32 %47, i32* %48, align 4
  %53 = getelementptr inbounds i32, i32* %48, i64 1
  %54 = ptrtoint i32* %53 to i64
  store i64 %54, i64* %28, align 8
  br label %107

55:                                               ; preds = %46
  %56 = ptrtoint i32* %48 to i64
  %57 = load i64, i64* %29, align 8
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 2
  %60 = add nsw i64 %59, 1
  %61 = icmp ugt i64 %60, 4611686018427387903
  br i1 %61, label %62, label %64

62:                                               ; preds = %55
  %63 = bitcast %"class.std::__1::vector"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %63) #21
  unreachable

64:                                               ; preds = %55
  %65 = sub i64 %51, %57
  %66 = ashr exact i64 %65, 2
  %67 = icmp ult i64 %66, 2305843009213693951
  br i1 %67, label %68, label %76

68:                                               ; preds = %64
  %69 = ashr exact i64 %65, 1
  %70 = icmp ult i64 %69, %60
  %71 = select i1 %70, i64 %60, i64 %69
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %81, label %73

73:                                               ; preds = %68
  %74 = icmp ugt i64 %71, 4611686018427387903
  br i1 %74, label %75, label %76

75:                                               ; preds = %73
  tail call void @abort() #21
  unreachable

76:                                               ; preds = %73, %64
  %77 = phi i64 [ %71, %73 ], [ 4611686018427387903, %64 ]
  %78 = shl i64 %77, 2
  %79 = tail call i8* @_Znwm(i64 %78) #20
  %80 = bitcast i8* %79 to i32*
  br label %81

81:                                               ; preds = %76, %68
  %82 = phi i64 [ %77, %76 ], [ 0, %68 ]
  %83 = phi i32* [ %80, %76 ], [ null, %68 ]
  %84 = getelementptr inbounds i32, i32* %83, i64 %59
  %85 = getelementptr inbounds i32, i32* %83, i64 %82
  %86 = ptrtoint i32* %85 to i64
  store i32 %47, i32* %84, align 4
  %87 = getelementptr inbounds i32, i32* %84, i64 1
  %88 = ptrtoint i32* %87 to i64
  %89 = load i32*, i32** %31, align 8
  %90 = load i64, i64* %28, align 8
  %91 = ptrtoint i32* %89 to i64
  %92 = sub i64 %90, %91
  %93 = ashr exact i64 %92, 2
  %94 = sub nsw i64 0, %93
  %95 = getelementptr inbounds i32, i32* %84, i64 %94
  %96 = ptrtoint i32* %95 to i64
  %97 = icmp sgt i64 %92, 0
  br i1 %97, label %98, label %102

98:                                               ; preds = %81
  %99 = bitcast i32* %95 to i8*
  %100 = bitcast i32* %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %99, i8* align 4 %100, i64 %92, i1 false) #15
  %101 = load i32*, i32** %31, align 8
  br label %102

102:                                              ; preds = %98, %81
  %103 = phi i32* [ %89, %81 ], [ %101, %98 ]
  store i64 %96, i64* %29, align 8
  store i64 %88, i64* %28, align 8
  store i64 %86, i64* %30, align 8
  %104 = icmp eq i32* %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %102
  %106 = bitcast i32* %103 to i8*
  tail call void @_ZdlPv(i8* %106) #20
  br label %107

107:                                              ; preds = %52, %102, %105
  %108 = add nuw i64 %34, 1
  %109 = icmp eq i64 %108, %23
  br i1 %109, label %112, label %110

110:                                              ; preds = %107
  %111 = load i64, i64* %3, align 8
  br label %32

112:                                              ; preds = %107, %18, %19
  %113 = add nuw nsw i64 %10, 1
  %114 = icmp eq i64 %113, 6
  br i1 %114, label %7, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx10ShaderInfo4saveEPN2gl18BinaryOutputStreamE(%"class.rx::ShaderInfo"* nocapture readonly, %"class.gl::BinaryOutputStream"*) local_unnamed_addr #3 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i64* %3 to i8*
  %7 = getelementptr inbounds %"class.gl::BinaryOutputStream", %"class.gl::BinaryOutputStream"* %1, i64 0, i32 0
  %8 = getelementptr inbounds %"class.gl::BinaryOutputStream", %"class.gl::BinaryOutputStream"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds i64, i64* %3, i64 1
  %10 = bitcast i64* %9 to i8*
  %11 = bitcast i32* %4 to i8*
  %12 = getelementptr inbounds i32, i32* %4, i64 1
  %13 = bitcast i32* %12 to i8*
  %14 = bitcast i32* %5 to i8*
  %15 = getelementptr inbounds i32, i32* %5, i64 1
  %16 = bitcast i32* %15 to i8*
  br label %18

17:                                               ; preds = %48
  ret void

18:                                               ; preds = %2, %48
  %19 = phi i64 [ 0, %2 ], [ %49, %48 ]
  %20 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 %19
  %21 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i64 %19, i32 0, i32 1
  %22 = bitcast i32** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector"* %20 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = ashr exact i64 %26, 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  store i64 %27, i64* %3, align 8
  %28 = load i8*, i8** %8, align 8
  %29 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"* %7, i8* %28, i8* nonnull %6, i8* %10) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = load i32*, i32** %21, align 8
  %33 = icmp eq i32* %31, %32
  br i1 %33, label %48, label %34

34:                                               ; preds = %18, %44
  %35 = phi i32* [ %46, %44 ], [ %31, %18 ]
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, -1
  br i1 %37, label %38, label %41

38:                                               ; preds = %34
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #15
  store i32 -1, i32* %5, align 4
  %39 = load i8*, i8** %8, align 8
  %40 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"* %7, i8* %39, i8* nonnull %14, i8* %16) #15
  br label %44

41:                                               ; preds = %34
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #15
  store i32 %36, i32* %4, align 4
  %42 = load i8*, i8** %8, align 8
  %43 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"* %7, i8* %42, i8* nonnull %11, i8* %13) #15
  br label %44

44:                                               ; preds = %41, %38
  %45 = phi i8* [ %11, %41 ], [ %14, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #15
  %46 = getelementptr inbounds i32, i32* %35, i64 1
  %47 = icmp eq i32* %46, %32
  br i1 %47, label %48, label %34

48:                                               ; preds = %44, %18
  %49 = add nuw nsw i64 %19, 1
  %50 = icmp eq i64 %49, 6
  br i1 %50, label %17, label %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx11ProgramInfoC2Ev(%"class.rx::ProgramInfo"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %0, i64 0, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperC1Ev(%"class.rx::vk::ShaderProgramHelper"* %2) #15
  %3 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %0, i64 0, i32 2, i32 0, i32 0, i64 0, i32 0
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %0, i64 0, i32 2, i32 0, i32 0, i64 0, i32 1, i32 1, i32 0, i32 0
  %5 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %0, i64 0, i32 2, i32 0, i32 0, i64 1, i32 1, i32 1, i32 0, i32 0
  %6 = bitcast %struct.VkShaderModule_T** %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 20, i1 false) #15
  %7 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %0, i64 0, i32 2, i32 0, i32 0, i64 2, i32 1, i32 1, i32 0, i32 0
  %8 = bitcast %struct.VkShaderModule_T** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 20, i1 false) #15
  %9 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %0, i64 0, i32 2, i32 0, i32 0, i64 3, i32 1, i32 1, i32 0, i32 0
  %10 = bitcast %struct.VkShaderModule_T** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false) #15
  %11 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %0, i64 0, i32 2, i32 0, i32 0, i64 4, i32 1, i32 1, i32 0, i32 0
  %12 = bitcast %struct.VkShaderModule_T** %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 20, i1 false) #15
  %13 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %0, i64 0, i32 2, i32 0, i32 0, i64 5, i32 1, i32 1, i32 0, i32 0
  %14 = bitcast %struct.VkShaderModule_T** %13 to i8*
  %15 = bitcast %struct.VkShaderModule_T** %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 20, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #15
  ret void
}

declare void @_ZN2rx2vk19ShaderProgramHelperC1Ev(%"class.rx::vk::ShaderProgramHelper"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx11ProgramInfoD2Ev(%"class.rx::ProgramInfo"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %0, i64 0, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %2) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx11ProgramInfo11initProgramEPNS_9ContextVkEN2gl10ShaderTypeEbbRKNS_10ShaderInfoENS_23ProgramTransformOptionsERKNS_30ShaderInterfaceVariableInfoMapE(%"class.rx::ProgramInfo"*, %"class.rx::ContextVk"*, i8 zeroext, i1 zeroext, i1 zeroext, %"class.rx::ShaderInfo"* dereferenceable(152), i8, %"class.rx::ShaderInterfaceVariableInfoMap"* dereferenceable(240)) local_unnamed_addr #3 align 2 {
  %9 = alloca %"class.angle::PackedEnumMap.651", align 8
  %10 = alloca %"struct.rx::GlslangSpirvOptions", align 4
  %11 = zext i8 %2 to i64
  %12 = getelementptr inbounds %"class.rx::ShaderInfo", %"class.rx::ShaderInfo"* %5, i64 0, i32 0, i32 0, i32 0, i64 %11
  %13 = bitcast %"class.angle::PackedEnumMap.651"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %13) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 144, i1 false) #15
  %14 = getelementptr inbounds %"class.angle::PackedEnumMap.651", %"class.angle::PackedEnumMap.651"* %9, i64 0, i32 0, i32 0, i64 %11
  %15 = getelementptr inbounds %"struct.rx::GlslangSpirvOptions", %"struct.rx::GlslangSpirvOptions"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #15
  %16 = getelementptr inbounds %"struct.rx::GlslangSpirvOptions", %"struct.rx::GlslangSpirvOptions"* %10, i64 0, i32 2
  %17 = getelementptr inbounds %"struct.rx::GlslangSpirvOptions", %"struct.rx::GlslangSpirvOptions"* %10, i64 0, i32 3
  %18 = getelementptr inbounds %"struct.rx::GlslangSpirvOptions", %"struct.rx::GlslangSpirvOptions"* %10, i64 0, i32 5
  %19 = getelementptr inbounds %"struct.rx::GlslangSpirvOptions", %"struct.rx::GlslangSpirvOptions"* %10, i64 0, i32 6
  %20 = getelementptr inbounds %"struct.rx::GlslangSpirvOptions", %"struct.rx::GlslangSpirvOptions"* %10, i64 0, i32 7
  %21 = getelementptr inbounds %"struct.rx::GlslangSpirvOptions", %"struct.rx::GlslangSpirvOptions"* %10, i64 0, i32 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %15, i8 -86, i64 16, i1 false)
  %22 = bitcast i32* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 10, i1 false) #15
  store i8 %2, i8* %15, align 4
  %23 = icmp eq i8 %2, 4
  %24 = lshr i8 %6, 1
  %25 = and i8 %24, 1
  %26 = select i1 %23, i8 %25, i8 0
  store i8 %26, i8* %18, align 2
  %27 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1
  %28 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %29 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %28, align 8
  %30 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %29, i64 0, i32 9
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = xor i8 %31, 1
  store i8 %32, i8* %19, align 1
  %33 = and i1 %3, %4
  %34 = zext i1 %33 to i8
  store i8 %34, i8* %20, align 4
  %35 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %29, i64 0, i32 7, i32 26, i32 4
  %36 = load i8, i8* %35, align 8, !range !2
  store i8 %36, i8* %21, align 1
  %37 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %29, i64 0, i32 7, i32 71, i32 4
  %38 = load i8, i8* %37, align 8, !range !2
  store i8 %38, i8* %17, align 4
  br i1 %3, label %39, label %46

39:                                               ; preds = %8
  %40 = getelementptr inbounds %"struct.rx::GlslangSpirvOptions", %"struct.rx::GlslangSpirvOptions"* %10, i64 0, i32 4
  %41 = lshr i8 %6, 2
  %42 = and i8 %41, 7
  %43 = zext i8 %42 to i32
  store i32 %43, i32* %16, align 4
  %44 = lshr i8 %6, 5
  %45 = and i8 %44, 1
  store i8 %45, i8* %40, align 1
  br label %46

46:                                               ; preds = %8, %39
  %47 = call i32 @_ZN2rx16GlslangWrapperVk14TransformSpirVERKNS_19GlslangSpirvOptionsERKNS_30ShaderInterfaceVariableInfoMapERKNSt3__16vectorIjNS7_9allocatorIjEEEEPSB_(%"struct.rx::GlslangSpirvOptions"* nonnull dereferenceable(16) %10, %"class.rx::ShaderInterfaceVariableInfoMap"* dereferenceable(240) %7, %"class.std::__1::vector"* dereferenceable(24) %12, %"class.std::__1::vector"* %14) #15
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %70, label %49

49:                                               ; preds = %46
  %50 = icmp eq %"class.rx::ContextVk"* %1, null
  %51 = select i1 %50, %"class.rx::vk::Context"* null, %"class.rx::vk::Context"* %27
  %52 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %0, i64 0, i32 2, i32 0, i32 0, i64 %11, i32 1
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %14, i64 0, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = getelementptr inbounds %"class.angle::PackedEnumMap.651", %"class.angle::PackedEnumMap.651"* %9, i64 0, i32 0, i32 0, i64 %11, i32 0, i32 1
  %56 = bitcast i32** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = ptrtoint i32* %54 to i64
  %59 = sub i64 %57, %58
  %60 = call i32 @_ZN2rx2vk19InitShaderAndSerialEPNS0_7ContextEPNS0_15ObjectAndSerialINS0_12ShaderModuleEEEPKjm(%"class.rx::vk::Context"* %51, %"class.rx::vk::ObjectAndSerial.875"* %52, i32* %54, i64 %59) #15
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %70, label %62

62:                                               ; preds = %49
  %63 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %0, i64 0, i32 2, i32 0, i32 0, i64 %11
  %64 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %0, i64 0, i32 1
  call void @_ZN2rx2vk19ShaderProgramHelper9setShaderEN2gl10ShaderTypeEPNS0_10RefCountedINS0_15ObjectAndSerialINS0_12ShaderModuleEEEEE(%"class.rx::vk::ShaderProgramHelper"* %64, i8 zeroext %2, %"class.rx::vk::RefCounted.874"* %63) #15
  %65 = and i8 %6, 1
  %66 = zext i8 %65 to i32
  call void @_ZN2rx2vk19ShaderProgramHelper25setSpecializationConstantEN2sh2vk24SpecializationConstantIdEj(%"class.rx::vk::ShaderProgramHelper"* %64, i32 0, i32 %66) #15
  %67 = lshr i8 %6, 2
  %68 = and i8 %67, 7
  %69 = zext i8 %68 to i32
  call void @_ZN2rx2vk19ShaderProgramHelper25setSpecializationConstantEN2sh2vk24SpecializationConstantIdEj(%"class.rx::vk::ShaderProgramHelper"* %64, i32 1, i32 %69) #15
  br label %70

70:                                               ; preds = %49, %46, %62
  %71 = phi i32 [ 0, %62 ], [ 1, %49 ], [ 1, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #15
  %72 = getelementptr inbounds %"class.angle::PackedEnumMap.651", %"class.angle::PackedEnumMap.651"* %9, i64 0, i32 0, i32 0, i64 5, i32 0, i32 0
  %73 = load i32*, i32** %72, align 8
  %74 = icmp eq i32* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %70
  %76 = ptrtoint i32* %73 to i64
  %77 = getelementptr inbounds %"class.angle::PackedEnumMap.651", %"class.angle::PackedEnumMap.651"* %9, i64 0, i32 0, i32 0, i64 5, i32 0, i32 1
  %78 = bitcast i32** %77 to i64*
  store i64 %76, i64* %78, align 8
  %79 = bitcast i32* %73 to i8*
  call void @_ZdlPv(i8* %79) #20
  br label %80

80:                                               ; preds = %75, %70
  %81 = getelementptr inbounds %"class.angle::PackedEnumMap.651", %"class.angle::PackedEnumMap.651"* %9, i64 0, i32 0, i32 0, i64 4, i32 0, i32 0
  %82 = load i32*, i32** %81, align 8
  %83 = icmp eq i32* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %80
  %85 = ptrtoint i32* %82 to i64
  %86 = getelementptr inbounds %"class.angle::PackedEnumMap.651", %"class.angle::PackedEnumMap.651"* %9, i64 0, i32 0, i32 0, i64 4, i32 0, i32 1
  %87 = bitcast i32** %86 to i64*
  store i64 %85, i64* %87, align 8
  %88 = bitcast i32* %82 to i8*
  call void @_ZdlPv(i8* %88) #20
  br label %89

89:                                               ; preds = %84, %80
  %90 = getelementptr inbounds %"class.angle::PackedEnumMap.651", %"class.angle::PackedEnumMap.651"* %9, i64 0, i32 0, i32 0, i64 3, i32 0, i32 0
  %91 = load i32*, i32** %90, align 8
  %92 = icmp eq i32* %91, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %89
  %94 = ptrtoint i32* %91 to i64
  %95 = getelementptr inbounds %"class.angle::PackedEnumMap.651", %"class.angle::PackedEnumMap.651"* %9, i64 0, i32 0, i32 0, i64 3, i32 0, i32 1
  %96 = bitcast i32** %95 to i64*
  store i64 %94, i64* %96, align 8
  %97 = bitcast i32* %91 to i8*
  call void @_ZdlPv(i8* %97) #20
  br label %98

98:                                               ; preds = %93, %89
  %99 = getelementptr inbounds %"class.angle::PackedEnumMap.651", %"class.angle::PackedEnumMap.651"* %9, i64 0, i32 0, i32 0, i64 2, i32 0, i32 0
  %100 = load i32*, i32** %99, align 8
  %101 = icmp eq i32* %100, null
  br i1 %101, label %107, label %102

102:                                              ; preds = %98
  %103 = ptrtoint i32* %100 to i64
  %104 = getelementptr inbounds %"class.angle::PackedEnumMap.651", %"class.angle::PackedEnumMap.651"* %9, i64 0, i32 0, i32 0, i64 2, i32 0, i32 1
  %105 = bitcast i32** %104 to i64*
  store i64 %103, i64* %105, align 8
  %106 = bitcast i32* %100 to i8*
  call void @_ZdlPv(i8* %106) #20
  br label %107

107:                                              ; preds = %102, %98
  %108 = getelementptr inbounds %"class.angle::PackedEnumMap.651", %"class.angle::PackedEnumMap.651"* %9, i64 0, i32 0, i32 0, i64 1, i32 0, i32 0
  %109 = load i32*, i32** %108, align 8
  %110 = icmp eq i32* %109, null
  br i1 %110, label %116, label %111

111:                                              ; preds = %107
  %112 = ptrtoint i32* %109 to i64
  %113 = getelementptr inbounds %"class.angle::PackedEnumMap.651", %"class.angle::PackedEnumMap.651"* %9, i64 0, i32 0, i32 0, i64 1, i32 0, i32 1
  %114 = bitcast i32** %113 to i64*
  store i64 %112, i64* %114, align 8
  %115 = bitcast i32* %109 to i8*
  call void @_ZdlPv(i8* %115) #20
  br label %116

116:                                              ; preds = %111, %107
  %117 = getelementptr inbounds %"class.angle::PackedEnumMap.651", %"class.angle::PackedEnumMap.651"* %9, i64 0, i32 0, i32 0, i64 0, i32 0, i32 0
  %118 = load i32*, i32** %117, align 8
  %119 = icmp eq i32* %118, null
  br i1 %119, label %125, label %120

120:                                              ; preds = %116
  %121 = ptrtoint i32* %118 to i64
  %122 = getelementptr inbounds %"class.angle::PackedEnumMap.651", %"class.angle::PackedEnumMap.651"* %9, i64 0, i32 0, i32 0, i64 0, i32 0, i32 1
  %123 = bitcast i32** %122 to i64*
  store i64 %121, i64* %123, align 8
  %124 = bitcast i32* %118 to i8*
  call void @_ZdlPv(i8* %124) #20
  br label %125

125:                                              ; preds = %116, %120
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %13) #15
  ret i32 %71
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i32 @_ZN2rx16GlslangWrapperVk14TransformSpirVERKNS_19GlslangSpirvOptionsERKNS_30ShaderInterfaceVariableInfoMapERKNSt3__16vectorIjNS7_9allocatorIjEEEEPSB_(%"struct.rx::GlslangSpirvOptions"* dereferenceable(16), %"class.rx::ShaderInterfaceVariableInfoMap"* dereferenceable(240), %"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::vector"*) local_unnamed_addr #6

declare i32 @_ZN2rx2vk19InitShaderAndSerialEPNS0_7ContextEPNS0_15ObjectAndSerialINS0_12ShaderModuleEEEPKjm(%"class.rx::vk::Context"*, %"class.rx::vk::ObjectAndSerial.875"*, i32*, i64) local_unnamed_addr #6

declare void @_ZN2rx2vk19ShaderProgramHelper9setShaderEN2gl10ShaderTypeEPNS0_10RefCountedINS0_15ObjectAndSerialINS0_12ShaderModuleEEEEE(%"class.rx::vk::ShaderProgramHelper"*, i8 zeroext, %"class.rx::vk::RefCounted.874"*) local_unnamed_addr #6

declare void @_ZN2rx2vk19ShaderProgramHelper25setSpecializationConstantEN2sh2vk24SpecializationConstantIdEj(%"class.rx::vk::ShaderProgramHelper"*, i32, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx11ProgramInfo7releaseEPNS_9ContextVkE(%"class.rx::ProgramInfo"*, %"class.rx::ContextVk"*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %0, i64 0, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelper7releaseEPNS_9ContextVkE(%"class.rx::vk::ShaderProgramHelper"* %3, %"class.rx::ContextVk"* %1) #15
  %4 = tail call %struct.VkDevice_T* @_ZNK2rx9ContextVk9getDeviceEv(%"class.rx::ContextVk"* %1) #15
  %5 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %0, i64 0, i32 2, i32 0, i32 0, i64 0, i32 1, i32 1, i32 0, i32 0
  %6 = load %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %5, align 8
  %7 = icmp eq %struct.VkShaderModule_T* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = load void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)** @vkDestroyShaderModule, align 8
  tail call void %9(%struct.VkDevice_T* %4, %struct.VkShaderModule_T* nonnull %6, %struct.VkAllocationCallbacks* null) #15
  store %struct.VkShaderModule_T* null, %struct.VkShaderModule_T** %5, align 8
  br label %10

10:                                               ; preds = %2, %8
  %11 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %0, i64 0, i32 2, i32 0, i32 0, i64 0, i32 1, i32 2, i32 0
  store i64 0, i64* %11, align 8
  %12 = tail call %struct.VkDevice_T* @_ZNK2rx9ContextVk9getDeviceEv(%"class.rx::ContextVk"* %1) #15
  %13 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %0, i64 0, i32 2, i32 0, i32 0, i64 1, i32 1, i32 1, i32 0, i32 0
  %14 = load %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %13, align 8
  %15 = icmp eq %struct.VkShaderModule_T* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %10
  %17 = load void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)** @vkDestroyShaderModule, align 8
  tail call void %17(%struct.VkDevice_T* %12, %struct.VkShaderModule_T* nonnull %14, %struct.VkAllocationCallbacks* null) #15
  store %struct.VkShaderModule_T* null, %struct.VkShaderModule_T** %13, align 8
  br label %18

18:                                               ; preds = %16, %10
  %19 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %0, i64 0, i32 2, i32 0, i32 0, i64 1, i32 1, i32 2, i32 0
  store i64 0, i64* %19, align 8
  %20 = tail call %struct.VkDevice_T* @_ZNK2rx9ContextVk9getDeviceEv(%"class.rx::ContextVk"* %1) #15
  %21 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %0, i64 0, i32 2, i32 0, i32 0, i64 2, i32 1, i32 1, i32 0, i32 0
  %22 = load %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %21, align 8
  %23 = icmp eq %struct.VkShaderModule_T* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %18
  %25 = load void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)** @vkDestroyShaderModule, align 8
  tail call void %25(%struct.VkDevice_T* %20, %struct.VkShaderModule_T* nonnull %22, %struct.VkAllocationCallbacks* null) #15
  store %struct.VkShaderModule_T* null, %struct.VkShaderModule_T** %21, align 8
  br label %26

26:                                               ; preds = %24, %18
  %27 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %0, i64 0, i32 2, i32 0, i32 0, i64 2, i32 1, i32 2, i32 0
  store i64 0, i64* %27, align 8
  %28 = tail call %struct.VkDevice_T* @_ZNK2rx9ContextVk9getDeviceEv(%"class.rx::ContextVk"* %1) #15
  %29 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %0, i64 0, i32 2, i32 0, i32 0, i64 3, i32 1, i32 1, i32 0, i32 0
  %30 = load %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %29, align 8
  %31 = icmp eq %struct.VkShaderModule_T* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %26
  %33 = load void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)** @vkDestroyShaderModule, align 8
  tail call void %33(%struct.VkDevice_T* %28, %struct.VkShaderModule_T* nonnull %30, %struct.VkAllocationCallbacks* null) #15
  store %struct.VkShaderModule_T* null, %struct.VkShaderModule_T** %29, align 8
  br label %34

34:                                               ; preds = %32, %26
  %35 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %0, i64 0, i32 2, i32 0, i32 0, i64 3, i32 1, i32 2, i32 0
  store i64 0, i64* %35, align 8
  %36 = tail call %struct.VkDevice_T* @_ZNK2rx9ContextVk9getDeviceEv(%"class.rx::ContextVk"* %1) #15
  %37 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %0, i64 0, i32 2, i32 0, i32 0, i64 4, i32 1, i32 1, i32 0, i32 0
  %38 = load %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %37, align 8
  %39 = icmp eq %struct.VkShaderModule_T* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = load void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)** @vkDestroyShaderModule, align 8
  tail call void %41(%struct.VkDevice_T* %36, %struct.VkShaderModule_T* nonnull %38, %struct.VkAllocationCallbacks* null) #15
  store %struct.VkShaderModule_T* null, %struct.VkShaderModule_T** %37, align 8
  br label %42

42:                                               ; preds = %40, %34
  %43 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %0, i64 0, i32 2, i32 0, i32 0, i64 4, i32 1, i32 2, i32 0
  store i64 0, i64* %43, align 8
  %44 = tail call %struct.VkDevice_T* @_ZNK2rx9ContextVk9getDeviceEv(%"class.rx::ContextVk"* %1) #15
  %45 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %0, i64 0, i32 2, i32 0, i32 0, i64 5, i32 1, i32 1, i32 0, i32 0
  %46 = load %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %45, align 8
  %47 = icmp eq %struct.VkShaderModule_T* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %42
  %49 = load void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)** @vkDestroyShaderModule, align 8
  tail call void %49(%struct.VkDevice_T* %44, %struct.VkShaderModule_T* nonnull %46, %struct.VkAllocationCallbacks* null) #15
  store %struct.VkShaderModule_T* null, %struct.VkShaderModule_T** %45, align 8
  br label %50

50:                                               ; preds = %48, %42
  %51 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %0, i64 0, i32 2, i32 0, i32 0, i64 5, i32 1, i32 2, i32 0
  store i64 0, i64* %51, align 8
  ret void
}

declare void @_ZN2rx2vk19ShaderProgramHelper7releaseEPNS_9ContextVkE(%"class.rx::vk::ShaderProgramHelper"*, %"class.rx::ContextVk"*) local_unnamed_addr #6

declare %struct.VkDevice_T* @_ZNK2rx9ContextVk9getDeviceEv(%"class.rx::ContextVk"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx19ProgramExecutableVkC2Ev(%"class.rx::ProgramExecutableVk"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx19ProgramExecutableVkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 5, i32 0, i32 0
  %5 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 5, i32 0, i32 1
  %6 = bitcast %"class.rx::CacheStats"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #15
  %7 = bitcast %"class.angle::PackedEnumMap.807"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 40, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %8 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 5, i32 1, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 5, i32 1, i32 0, i32 0, i32 1
  %10 = bitcast %"union.absl::container_internal::map_slot_type.812"** %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false) #15
  %11 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 6, i32 0, i32 0
  %12 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 6, i32 0, i32 1
  %13 = bitcast %"class.rx::CacheStats"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %14 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 6, i32 1, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %14, align 8
  %15 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 6, i32 1, i32 0, i32 0, i32 1
  %16 = bitcast %"union.absl::container_internal::map_slot_type.829"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #15
  %17 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 7, i32 0, i32 0
  %18 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 7, i32 0, i32 1
  %19 = bitcast %"class.rx::CacheStats"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %20 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 7, i32 1, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %20, align 8
  %21 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 7, i32 1, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 11, i32 0, i32 0, i64 0
  %23 = bitcast %"union.absl::container_internal::map_slot_type.846"** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 104, i1 false)
  tail call void @_ZN2rx2vk21DynamicDescriptorPoolC1Ev(%"class.rx::vk::DynamicDescriptorPool"* %22) #15
  %24 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 11, i32 0, i32 0, i64 1
  tail call void @_ZN2rx2vk21DynamicDescriptorPoolC1Ev(%"class.rx::vk::DynamicDescriptorPool"* %24) #15
  %25 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 11, i32 0, i32 0, i64 2
  tail call void @_ZN2rx2vk21DynamicDescriptorPoolC1Ev(%"class.rx::vk::DynamicDescriptorPool"* %25) #15
  %26 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 11, i32 0, i32 0, i64 3
  tail call void @_ZN2rx2vk21DynamicDescriptorPoolC1Ev(%"class.rx::vk::DynamicDescriptorPool"* %26) #15
  %27 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 12
  store i32 2147483647, i32* %27, align 8
  %28 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 13, i32 1
  %29 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 15
  %30 = bitcast i64* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false)
  tail call void @_ZN2rx30ShaderInterfaceVariableInfoMapC1Ev(%"class.rx::ShaderInterfaceVariableInfoMap"* %29) #15
  %31 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 0
  %32 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 64
  br label %33

33:                                               ; preds = %33, %1
  %34 = phi %"class.rx::ProgramInfo"* [ %31, %1 ], [ %49, %33 ]
  %35 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %34, i64 0, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperC1Ev(%"class.rx::vk::ShaderProgramHelper"* %35) #15
  %36 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %34, i64 0, i32 2, i32 0, i32 0, i64 0, i32 0
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %34, i64 0, i32 2, i32 0, i32 0, i64 0, i32 1, i32 1, i32 0, i32 0
  %38 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %34, i64 0, i32 2, i32 0, i32 0, i64 1, i32 1, i32 1, i32 0, i32 0
  %39 = bitcast %struct.VkShaderModule_T** %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 20, i1 false) #15
  %40 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %34, i64 0, i32 2, i32 0, i32 0, i64 2, i32 1, i32 1, i32 0, i32 0
  %41 = bitcast %struct.VkShaderModule_T** %38 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 20, i1 false) #15
  %42 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %34, i64 0, i32 2, i32 0, i32 0, i64 3, i32 1, i32 1, i32 0, i32 0
  %43 = bitcast %struct.VkShaderModule_T** %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 20, i1 false) #15
  %44 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %34, i64 0, i32 2, i32 0, i32 0, i64 4, i32 1, i32 1, i32 0, i32 0
  %45 = bitcast %struct.VkShaderModule_T** %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 20, i1 false) #15
  %46 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %34, i64 0, i32 2, i32 0, i32 0, i64 5, i32 1, i32 1, i32 0, i32 0
  %47 = bitcast %struct.VkShaderModule_T** %46 to i8*
  %48 = bitcast %struct.VkShaderModule_T** %44 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 20, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 16, i1 false) #15
  %49 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %34, i64 1
  %50 = icmp eq %"class.rx::ProgramInfo"* %49, %32
  br i1 %50, label %51, label %33

51:                                               ; preds = %33
  %52 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 17, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperC1Ev(%"class.rx::vk::ShaderProgramHelper"* %52) #15
  %53 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 17, i32 2, i32 0, i32 0, i64 0, i32 0
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 17, i32 2, i32 0, i32 0, i64 0, i32 1, i32 1, i32 0, i32 0
  %55 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 17, i32 2, i32 0, i32 0, i64 1, i32 1, i32 1, i32 0, i32 0
  %56 = bitcast %struct.VkShaderModule_T** %54 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 20, i1 false) #15
  %57 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 17, i32 2, i32 0, i32 0, i64 2, i32 1, i32 1, i32 0, i32 0
  %58 = bitcast %struct.VkShaderModule_T** %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 20, i1 false) #15
  %59 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 17, i32 2, i32 0, i32 0, i64 3, i32 1, i32 1, i32 0, i32 0
  %60 = bitcast %struct.VkShaderModule_T** %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 20, i1 false) #15
  %61 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 17, i32 2, i32 0, i32 0, i64 4, i32 1, i32 1, i32 0, i32 0
  %62 = bitcast %struct.VkShaderModule_T** %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 20, i1 false) #15
  %63 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 17, i32 2, i32 0, i32 0, i64 5, i32 1, i32 1, i32 0, i32 0
  %64 = bitcast %struct.VkShaderModule_T** %63 to i8*
  %65 = bitcast %struct.VkShaderModule_T** %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 20, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 16, i1 false) #15
  %66 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 19
  %67 = bitcast %"class.rx::ProgramVk"** %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 112, i1 false)
  ret void
}

declare void @_ZN2rx30ShaderInterfaceVariableInfoMapC1Ev(%"class.rx::ShaderInterfaceVariableInfoMap"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx19ProgramExecutableVkD2Ev(%"class.rx::ProgramExecutableVk"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx19ProgramExecutableVkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 17, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %3) #15
  %4 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 63, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %4) #15
  %5 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 62, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %5) #15
  %6 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 61, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %6) #15
  %7 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 60, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %7) #15
  %8 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 59, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %8) #15
  %9 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 58, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %9) #15
  %10 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 57, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %10) #15
  %11 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 56, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %11) #15
  %12 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 55, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %12) #15
  %13 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 54, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %13) #15
  %14 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 53, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %14) #15
  %15 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 52, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %15) #15
  %16 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 51, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %16) #15
  %17 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 50, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %17) #15
  %18 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 49, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %18) #15
  %19 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 48, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %19) #15
  %20 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 47, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %20) #15
  %21 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 46, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %21) #15
  %22 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 45, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %22) #15
  %23 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 44, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %23) #15
  %24 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 43, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %24) #15
  %25 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 42, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %25) #15
  %26 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 41, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %26) #15
  %27 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 40, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %27) #15
  %28 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 39, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %28) #15
  %29 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 38, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %29) #15
  %30 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 37, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %30) #15
  %31 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 36, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %31) #15
  %32 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 35, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %32) #15
  %33 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 34, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %33) #15
  %34 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 33, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %34) #15
  %35 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 32, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %35) #15
  %36 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 31, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %36) #15
  %37 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 30, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %37) #15
  %38 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 29, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %38) #15
  %39 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 28, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %39) #15
  %40 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 27, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %40) #15
  %41 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 26, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %41) #15
  %42 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 25, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %42) #15
  %43 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 24, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %43) #15
  %44 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 23, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %44) #15
  %45 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 22, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %45) #15
  %46 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 21, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %46) #15
  %47 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 20, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %47) #15
  %48 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 19, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %48) #15
  %49 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 18, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %49) #15
  %50 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 17, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %50) #15
  %51 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 16, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %51) #15
  %52 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 15, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %52) #15
  %53 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 14, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %53) #15
  %54 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 13, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %54) #15
  %55 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 12, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %55) #15
  %56 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 11, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %56) #15
  %57 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 10, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %57) #15
  %58 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 9, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %58) #15
  %59 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 8, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %59) #15
  %60 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 7, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %60) #15
  %61 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 6, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %61) #15
  %62 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 5, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %62) #15
  %63 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 4, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %63) #15
  %64 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 3, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %64) #15
  %65 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 2, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %65) #15
  %66 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 1, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %66) #15
  %67 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 0, i32 1
  tail call void @_ZN2rx2vk19ShaderProgramHelperD1Ev(%"class.rx::vk::ShaderProgramHelper"* %67) #15
  %68 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 15
  tail call void @_ZN2rx30ShaderInterfaceVariableInfoMapD1Ev(%"class.rx::ShaderInterfaceVariableInfoMap"* %68) #15
  %69 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 14, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = icmp eq i32* %70, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %1
  %73 = ptrtoint i32* %70 to i64
  %74 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 14, i32 0, i32 1
  %75 = bitcast i32** %74 to i64*
  store i64 %73, i64* %75, align 8
  %76 = bitcast i32* %70 to i8*
  tail call void @_ZdlPv(i8* %76) #20
  br label %77

77:                                               ; preds = %1, %72
  %78 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 13, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %87, label %81

81:                                               ; preds = %77, %81
  %82 = phi i64 [ %85, %81 ], [ %79, %77 ]
  %83 = add i64 %82, -1
  store i64 %83, i64* %78, align 8
  %84 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 13, i32 0, i32 0, i64 %83
  store i32 0, i32* %84, align 4
  %85 = load i64, i64* %78, align 8
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %81

87:                                               ; preds = %81, %77
  %88 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 11, i32 0, i32 0, i64 3
  tail call void @_ZN2rx2vk21DynamicDescriptorPoolD1Ev(%"class.rx::vk::DynamicDescriptorPool"* %88) #15
  %89 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 11, i32 0, i32 0, i64 2
  tail call void @_ZN2rx2vk21DynamicDescriptorPoolD1Ev(%"class.rx::vk::DynamicDescriptorPool"* %89) #15
  %90 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 11, i32 0, i32 0, i64 1
  tail call void @_ZN2rx2vk21DynamicDescriptorPoolD1Ev(%"class.rx::vk::DynamicDescriptorPool"* %90) #15
  %91 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 11, i32 0, i32 0, i64 0
  tail call void @_ZN2rx2vk21DynamicDescriptorPoolD1Ev(%"class.rx::vk::DynamicDescriptorPool"* %91) #15
  %92 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 10, i32 0, i32 0, i64 3, i32 0
  %93 = load %"class.rx::vk::RefCounted"*, %"class.rx::vk::RefCounted"** %92, align 8
  %94 = icmp eq %"class.rx::vk::RefCounted"* %93, null
  br i1 %94, label %99, label %95

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"class.rx::vk::RefCounted", %"class.rx::vk::RefCounted"* %93, i64 0, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = add i32 %97, -1
  store i32 %98, i32* %96, align 8
  br label %99

99:                                               ; preds = %95, %87
  store %"class.rx::vk::RefCounted"* null, %"class.rx::vk::RefCounted"** %92, align 8
  %100 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 10, i32 0, i32 0, i64 2, i32 0
  %101 = load %"class.rx::vk::RefCounted"*, %"class.rx::vk::RefCounted"** %100, align 8
  %102 = icmp eq %"class.rx::vk::RefCounted"* %101, null
  br i1 %102, label %107, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.rx::vk::RefCounted", %"class.rx::vk::RefCounted"* %101, i64 0, i32 0
  %105 = load i32, i32* %104, align 8
  %106 = add i32 %105, -1
  store i32 %106, i32* %104, align 8
  br label %107

107:                                              ; preds = %103, %99
  store %"class.rx::vk::RefCounted"* null, %"class.rx::vk::RefCounted"** %100, align 8
  %108 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 10, i32 0, i32 0, i64 1, i32 0
  %109 = load %"class.rx::vk::RefCounted"*, %"class.rx::vk::RefCounted"** %108, align 8
  %110 = icmp eq %"class.rx::vk::RefCounted"* %109, null
  br i1 %110, label %115, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.rx::vk::RefCounted", %"class.rx::vk::RefCounted"* %109, i64 0, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = add i32 %113, -1
  store i32 %114, i32* %112, align 8
  br label %115

115:                                              ; preds = %111, %107
  store %"class.rx::vk::RefCounted"* null, %"class.rx::vk::RefCounted"** %108, align 8
  %116 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 10, i32 0, i32 0, i64 0, i32 0
  %117 = load %"class.rx::vk::RefCounted"*, %"class.rx::vk::RefCounted"** %116, align 8
  %118 = icmp eq %"class.rx::vk::RefCounted"* %117, null
  br i1 %118, label %123, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.rx::vk::RefCounted", %"class.rx::vk::RefCounted"* %117, i64 0, i32 0
  %121 = load i32, i32* %120, align 8
  %122 = add i32 %121, -1
  store i32 %122, i32* %120, align 8
  br label %123

123:                                              ; preds = %115, %119
  store %"class.rx::vk::RefCounted"* null, %"class.rx::vk::RefCounted"** %116, align 8
  %124 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 9, i32 0, i32 0, i64 3, i32 0
  %125 = load %"class.rx::vk::RefCounted.863"*, %"class.rx::vk::RefCounted.863"** %124, align 8
  %126 = icmp eq %"class.rx::vk::RefCounted.863"* %125, null
  br i1 %126, label %131, label %127

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"class.rx::vk::RefCounted.863", %"class.rx::vk::RefCounted.863"* %125, i64 0, i32 0
  %129 = load i32, i32* %128, align 8
  %130 = add i32 %129, -1
  store i32 %130, i32* %128, align 8
  br label %131

131:                                              ; preds = %127, %123
  store %"class.rx::vk::RefCounted.863"* null, %"class.rx::vk::RefCounted.863"** %124, align 8
  %132 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 9, i32 0, i32 0, i64 2, i32 0
  %133 = load %"class.rx::vk::RefCounted.863"*, %"class.rx::vk::RefCounted.863"** %132, align 8
  %134 = icmp eq %"class.rx::vk::RefCounted.863"* %133, null
  br i1 %134, label %139, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.rx::vk::RefCounted.863", %"class.rx::vk::RefCounted.863"* %133, i64 0, i32 0
  %137 = load i32, i32* %136, align 8
  %138 = add i32 %137, -1
  store i32 %138, i32* %136, align 8
  br label %139

139:                                              ; preds = %135, %131
  store %"class.rx::vk::RefCounted.863"* null, %"class.rx::vk::RefCounted.863"** %132, align 8
  %140 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 9, i32 0, i32 0, i64 1, i32 0
  %141 = load %"class.rx::vk::RefCounted.863"*, %"class.rx::vk::RefCounted.863"** %140, align 8
  %142 = icmp eq %"class.rx::vk::RefCounted.863"* %141, null
  br i1 %142, label %147, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.rx::vk::RefCounted.863", %"class.rx::vk::RefCounted.863"* %141, i64 0, i32 0
  %145 = load i32, i32* %144, align 8
  %146 = add i32 %145, -1
  store i32 %146, i32* %144, align 8
  br label %147

147:                                              ; preds = %143, %139
  store %"class.rx::vk::RefCounted.863"* null, %"class.rx::vk::RefCounted.863"** %140, align 8
  %148 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 9, i32 0, i32 0, i64 0, i32 0
  %149 = load %"class.rx::vk::RefCounted.863"*, %"class.rx::vk::RefCounted.863"** %148, align 8
  %150 = icmp eq %"class.rx::vk::RefCounted.863"* %149, null
  br i1 %150, label %155, label %151

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"class.rx::vk::RefCounted.863", %"class.rx::vk::RefCounted.863"* %149, i64 0, i32 0
  %153 = load i32, i32* %152, align 8
  %154 = add i32 %153, -1
  store i32 %154, i32* %152, align 8
  br label %155

155:                                              ; preds = %147, %151
  store %"class.rx::vk::RefCounted.863"* null, %"class.rx::vk::RefCounted.863"** %148, align 8
  %156 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 8, i32 0
  %157 = load %"class.rx::vk::RefCounted.859"*, %"class.rx::vk::RefCounted.859"** %156, align 8
  %158 = icmp eq %"class.rx::vk::RefCounted.859"* %157, null
  br i1 %158, label %163, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.rx::vk::RefCounted.859", %"class.rx::vk::RefCounted.859"* %157, i64 0, i32 0
  %161 = load i32, i32* %160, align 8
  %162 = add i32 %161, -1
  store i32 %162, i32* %160, align 8
  br label %163

163:                                              ; preds = %155, %159
  store %"class.rx::vk::RefCounted.859"* null, %"class.rx::vk::RefCounted.859"** %156, align 8
  %164 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 7, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %164, align 8
  %165 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 7, i32 1, i32 0, i32 0, i32 3
  %166 = load i64, i64* %165, align 8
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %189, label %168

168:                                              ; preds = %163
  %169 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 7, i32 1, i32 0, i32 0, i32 0
  %170 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 7, i32 1, i32 0, i32 0, i32 1
  br label %174

171:                                              ; preds = %185
  %172 = load i8*, i8** %169, align 8
  tail call void @_ZdlPv(i8* %172) #20
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %169, align 8
  %173 = bitcast %"union.absl::container_internal::map_slot_type.846"** %170 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %173, i8 0, i64 32, i1 false) #15
  br label %189

174:                                              ; preds = %185, %168
  %175 = phi i64 [ %166, %168 ], [ %186, %185 ]
  %176 = phi i64 [ 0, %168 ], [ %187, %185 ]
  %177 = load i8*, i8** %169, align 8
  %178 = getelementptr inbounds i8, i8* %177, i64 %176
  %179 = load i8, i8* %178, align 1
  %180 = icmp sgt i8 %179, -1
  br i1 %180, label %181, label %185

181:                                              ; preds = %174
  %182 = load %"union.absl::container_internal::map_slot_type.846"*, %"union.absl::container_internal::map_slot_type.846"** %170, align 8
  %183 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %182, i64 %176, i32 0, i32 0
  tail call void @_ZN2rx2vk27ShaderBuffersDescriptorDescD1Ev(%"class.rx::vk::ShaderBuffersDescriptorDesc"* %183) #15
  %184 = load i64, i64* %165, align 8
  br label %185

185:                                              ; preds = %181, %174
  %186 = phi i64 [ %175, %174 ], [ %184, %181 ]
  %187 = add i64 %176, 1
  %188 = icmp eq i64 %187, %186
  br i1 %188, label %171, label %174

189:                                              ; preds = %163, %171
  %190 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 6, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %190, align 8
  %191 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 6, i32 1, i32 0, i32 0, i32 3
  %192 = load i64, i64* %191, align 8
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %215, label %194

194:                                              ; preds = %189
  %195 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 6, i32 1, i32 0, i32 0, i32 0
  %196 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 6, i32 1, i32 0, i32 0, i32 1
  br label %200

197:                                              ; preds = %211
  %198 = load i8*, i8** %195, align 8
  tail call void @_ZdlPv(i8* %198) #20
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %195, align 8
  %199 = bitcast %"union.absl::container_internal::map_slot_type.829"** %196 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %199, i8 0, i64 32, i1 false) #15
  br label %215

200:                                              ; preds = %211, %194
  %201 = phi i64 [ %192, %194 ], [ %212, %211 ]
  %202 = phi i64 [ 0, %194 ], [ %213, %211 ]
  %203 = load i8*, i8** %195, align 8
  %204 = getelementptr inbounds i8, i8* %203, i64 %202
  %205 = load i8, i8* %204, align 1
  %206 = icmp sgt i8 %205, -1
  br i1 %206, label %207, label %211

207:                                              ; preds = %200
  %208 = load %"union.absl::container_internal::map_slot_type.829"*, %"union.absl::container_internal::map_slot_type.829"** %196, align 8
  %209 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %208, i64 %202, i32 0, i32 0
  tail call void @_ZN2rx2vk21TextureDescriptorDescD1Ev(%"class.rx::vk::TextureDescriptorDesc"* %209) #15
  %210 = load i64, i64* %191, align 8
  br label %211

211:                                              ; preds = %207, %200
  %212 = phi i64 [ %201, %200 ], [ %210, %207 ]
  %213 = add i64 %202, 1
  %214 = icmp eq i64 %213, %212
  br i1 %214, label %197, label %200

215:                                              ; preds = %189, %197
  %216 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 5, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %216, align 8
  %217 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 5, i32 1, i32 0, i32 0, i32 3
  %218 = load i64, i64* %217, align 8
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %241, label %220

220:                                              ; preds = %215
  %221 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 5, i32 1, i32 0, i32 0, i32 0
  %222 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 5, i32 1, i32 0, i32 0, i32 1
  br label %226

223:                                              ; preds = %237
  %224 = load i8*, i8** %221, align 8
  tail call void @_ZdlPv(i8* %224) #20
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %221, align 8
  %225 = bitcast %"union.absl::container_internal::map_slot_type.812"** %222 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %225, i8 0, i64 32, i1 false) #15
  br label %241

226:                                              ; preds = %237, %220
  %227 = phi i64 [ %218, %220 ], [ %238, %237 ]
  %228 = phi i64 [ 0, %220 ], [ %239, %237 ]
  %229 = load i8*, i8** %221, align 8
  %230 = getelementptr inbounds i8, i8* %229, i64 %228
  %231 = load i8, i8* %230, align 1
  %232 = icmp sgt i8 %231, -1
  br i1 %232, label %233, label %237

233:                                              ; preds = %226
  %234 = load %"union.absl::container_internal::map_slot_type.812"*, %"union.absl::container_internal::map_slot_type.812"** %222, align 8
  %235 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %234, i64 %228, i32 0, i32 0
  tail call void @_ZN2rx2vk28UniformsAndXfbDescriptorDescD1Ev(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* %235) #15
  %236 = load i64, i64* %217, align 8
  br label %237

237:                                              ; preds = %233, %226
  %238 = phi i64 [ %227, %226 ], [ %236, %233 ]
  %239 = add i64 %228, 1
  %240 = icmp eq i64 %239, %238
  br i1 %240, label %223, label %226

241:                                              ; preds = %215, %223
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2rx19ProgramExecutableVk28outputCumulativePerfCountersEv(%"class.rx::ProgramExecutableVk"* nocapture) local_unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2rx30ShaderInterfaceVariableInfoMapD1Ev(%"class.rx::ShaderInterfaceVariableInfoMap"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EED2Ev(%"class.rx::DescriptorSetCache.841"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.rx::DescriptorSetCache.841", %"class.rx::DescriptorSetCache.841"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::DescriptorSetCache.841", %"class.rx::DescriptorSetCache.841"* %0, i64 0, i32 1, i32 0, i32 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %27, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.rx::DescriptorSetCache.841", %"class.rx::DescriptorSetCache.841"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.rx::DescriptorSetCache.841", %"class.rx::DescriptorSetCache.841"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  br label %12

9:                                                ; preds = %23
  %10 = load i8*, i8** %7, align 8
  tail call void @_ZdlPv(i8* %10) #20
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %7, align 8
  %11 = bitcast %"union.absl::container_internal::map_slot_type.846"** %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #15
  br label %27

12:                                               ; preds = %23, %6
  %13 = phi i64 [ %4, %6 ], [ %24, %23 ]
  %14 = phi i64 [ 0, %6 ], [ %25, %23 ]
  %15 = load i8*, i8** %7, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = load i8, i8* %16, align 1
  %18 = icmp sgt i8 %17, -1
  br i1 %18, label %19, label %23

19:                                               ; preds = %12
  %20 = load %"union.absl::container_internal::map_slot_type.846"*, %"union.absl::container_internal::map_slot_type.846"** %8, align 8
  %21 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %20, i64 %14, i32 0, i32 0
  tail call void @_ZN2rx2vk27ShaderBuffersDescriptorDescD1Ev(%"class.rx::vk::ShaderBuffersDescriptorDesc"* %21) #15
  %22 = load i64, i64* %3, align 8
  br label %23

23:                                               ; preds = %19, %12
  %24 = phi i64 [ %13, %12 ], [ %22, %19 ]
  %25 = add i64 %14, 1
  %26 = icmp eq i64 %25, %24
  br i1 %26, label %9, label %12

27:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EED2Ev(%"class.rx::DescriptorSetCache.824"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.rx::DescriptorSetCache.824", %"class.rx::DescriptorSetCache.824"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::DescriptorSetCache.824", %"class.rx::DescriptorSetCache.824"* %0, i64 0, i32 1, i32 0, i32 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %27, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.rx::DescriptorSetCache.824", %"class.rx::DescriptorSetCache.824"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.rx::DescriptorSetCache.824", %"class.rx::DescriptorSetCache.824"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  br label %12

9:                                                ; preds = %23
  %10 = load i8*, i8** %7, align 8
  tail call void @_ZdlPv(i8* %10) #20
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %7, align 8
  %11 = bitcast %"union.absl::container_internal::map_slot_type.829"** %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #15
  br label %27

12:                                               ; preds = %23, %6
  %13 = phi i64 [ %4, %6 ], [ %24, %23 ]
  %14 = phi i64 [ 0, %6 ], [ %25, %23 ]
  %15 = load i8*, i8** %7, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = load i8, i8* %16, align 1
  %18 = icmp sgt i8 %17, -1
  br i1 %18, label %19, label %23

19:                                               ; preds = %12
  %20 = load %"union.absl::container_internal::map_slot_type.829"*, %"union.absl::container_internal::map_slot_type.829"** %8, align 8
  %21 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %20, i64 %14, i32 0, i32 0
  tail call void @_ZN2rx2vk21TextureDescriptorDescD1Ev(%"class.rx::vk::TextureDescriptorDesc"* %21) #15
  %22 = load i64, i64* %3, align 8
  br label %23

23:                                               ; preds = %19, %12
  %24 = phi i64 [ %13, %12 ], [ %22, %19 ]
  %25 = add i64 %14, 1
  %26 = icmp eq i64 %25, %24
  br i1 %26, label %9, label %12

27:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EED2Ev(%"class.rx::DescriptorSetCache"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %27, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  br label %12

9:                                                ; preds = %23
  %10 = load i8*, i8** %7, align 8
  tail call void @_ZdlPv(i8* %10) #20
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %7, align 8
  %11 = bitcast %"union.absl::container_internal::map_slot_type.812"** %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #15
  br label %27

12:                                               ; preds = %23, %6
  %13 = phi i64 [ %4, %6 ], [ %24, %23 ]
  %14 = phi i64 [ 0, %6 ], [ %25, %23 ]
  %15 = load i8*, i8** %7, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = load i8, i8* %16, align 1
  %18 = icmp sgt i8 %17, -1
  br i1 %18, label %19, label %23

19:                                               ; preds = %12
  %20 = load %"union.absl::container_internal::map_slot_type.812"*, %"union.absl::container_internal::map_slot_type.812"** %8, align 8
  %21 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %20, i64 %14, i32 0, i32 0
  tail call void @_ZN2rx2vk28UniformsAndXfbDescriptorDescD1Ev(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* %21) #15
  %22 = load i64, i64* %3, align 8
  br label %23

23:                                               ; preds = %19, %12
  %24 = phi i64 [ %13, %12 ], [ %22, %19 ]
  %25 = add i64 %14, 1
  %26 = icmp eq i64 %25, %24
  br i1 %26, label %9, label %12

27:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx19ProgramExecutableVkD0Ev(%"class.rx::ProgramExecutableVk"*) unnamed_addr #3 align 2 {
  tail call void @_ZN2rx19ProgramExecutableVkD2Ev(%"class.rx::ProgramExecutableVk"* %0) #15
  %2 = bitcast %"class.rx::ProgramExecutableVk"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #20
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx19ProgramExecutableVk5resetEPNS_9ContextVkE(%"class.rx::ProgramExecutableVk"*, %"class.rx::ContextVk"*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 9, i32 0, i32 0, i64 0, i32 0
  %4 = load %"class.rx::vk::RefCounted.863"*, %"class.rx::vk::RefCounted.863"** %3, align 8
  %5 = icmp eq %"class.rx::vk::RefCounted.863"* %4, null
  br i1 %5, label %21, label %17

6:                                                ; preds = %94
  %7 = getelementptr inbounds %"class.rx::vk::RefCounted.859", %"class.rx::vk::RefCounted.859"* %96, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  store i32 %9, i32* %7, align 8
  br label %10

10:                                               ; preds = %94, %6
  store %"class.rx::vk::RefCounted.859"* null, %"class.rx::vk::RefCounted.859"** %95, align 8
  %11 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 18, i32 0
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 10, i32 0, i32 0, i64 0, i32 0
  %14 = bitcast %"class.angle::PackedEnumMap.807"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 68, i1 false)
  %15 = load %"class.rx::vk::RefCounted"*, %"class.rx::vk::RefCounted"** %13, align 8
  %16 = icmp eq %"class.rx::vk::RefCounted"* %15, null
  br i1 %16, label %29, label %25

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.rx::vk::RefCounted.863", %"class.rx::vk::RefCounted.863"* %4, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %19, -1
  store i32 %20, i32* %18, align 8
  br label %21

21:                                               ; preds = %2, %17
  store %"class.rx::vk::RefCounted.863"* null, %"class.rx::vk::RefCounted.863"** %3, align 8
  %22 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 9, i32 0, i32 0, i64 1, i32 0
  %23 = load %"class.rx::vk::RefCounted.863"*, %"class.rx::vk::RefCounted.863"** %22, align 8
  %24 = icmp eq %"class.rx::vk::RefCounted.863"* %23, null
  br i1 %24, label %78, label %74

25:                                               ; preds = %10
  %26 = getelementptr inbounds %"class.rx::vk::RefCounted", %"class.rx::vk::RefCounted"* %15, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, -1
  store i32 %28, i32* %26, align 8
  br label %29

29:                                               ; preds = %10, %25
  store %"class.rx::vk::RefCounted"* null, %"class.rx::vk::RefCounted"** %13, align 8
  %30 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 10, i32 0, i32 0, i64 1, i32 0
  %31 = load %"class.rx::vk::RefCounted"*, %"class.rx::vk::RefCounted"** %30, align 8
  %32 = icmp eq %"class.rx::vk::RefCounted"* %31, null
  br i1 %32, label %43, label %39

33:                                               ; preds = %35
  %34 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 17
  tail call void @_ZN2rx11ProgramInfo7releaseEPNS_9ContextVkE(%"class.rx::ProgramInfo"* %34, %"class.rx::ContextVk"* %1)
  tail call void @_ZN2rx9ContextVk24onProgramExecutableResetEPNS_19ProgramExecutableVkE(%"class.rx::ContextVk"* %1, %"class.rx::ProgramExecutableVk"* %0) #15
  ret void

35:                                               ; preds = %59, %35
  %36 = phi %"class.rx::ProgramInfo"* [ %72, %59 ], [ %37, %35 ]
  tail call void @_ZN2rx11ProgramInfo7releaseEPNS_9ContextVkE(%"class.rx::ProgramInfo"* %36, %"class.rx::ContextVk"* %1)
  %37 = getelementptr inbounds %"class.rx::ProgramInfo", %"class.rx::ProgramInfo"* %36, i64 1
  %38 = icmp eq %"class.rx::ProgramInfo"* %37, %73
  br i1 %38, label %33, label %35

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.rx::vk::RefCounted", %"class.rx::vk::RefCounted"* %31, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = add i32 %41, -1
  store i32 %42, i32* %40, align 8
  br label %43

43:                                               ; preds = %39, %29
  store %"class.rx::vk::RefCounted"* null, %"class.rx::vk::RefCounted"** %30, align 8
  %44 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 10, i32 0, i32 0, i64 2, i32 0
  %45 = load %"class.rx::vk::RefCounted"*, %"class.rx::vk::RefCounted"** %44, align 8
  %46 = icmp eq %"class.rx::vk::RefCounted"* %45, null
  br i1 %46, label %51, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.rx::vk::RefCounted", %"class.rx::vk::RefCounted"* %45, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = add i32 %49, -1
  store i32 %50, i32* %48, align 8
  br label %51

51:                                               ; preds = %47, %43
  store %"class.rx::vk::RefCounted"* null, %"class.rx::vk::RefCounted"** %44, align 8
  %52 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 10, i32 0, i32 0, i64 3, i32 0
  %53 = load %"class.rx::vk::RefCounted"*, %"class.rx::vk::RefCounted"** %52, align 8
  %54 = icmp eq %"class.rx::vk::RefCounted"* %53, null
  br i1 %54, label %59, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.rx::vk::RefCounted", %"class.rx::vk::RefCounted"* %53, i64 0, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, -1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %51
  store %"class.rx::vk::RefCounted"* null, %"class.rx::vk::RefCounted"** %52, align 8
  %60 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 11, i32 0, i32 0, i64 0
  tail call void @_ZN2rx2vk21DynamicDescriptorPool7releaseEPNS_9ContextVkE(%"class.rx::vk::DynamicDescriptorPool"* %60, %"class.rx::ContextVk"* %1) #15
  %61 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 11, i32 0, i32 0, i64 1
  tail call void @_ZN2rx2vk21DynamicDescriptorPool7releaseEPNS_9ContextVkE(%"class.rx::vk::DynamicDescriptorPool"* %61, %"class.rx::ContextVk"* %1) #15
  %62 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 11, i32 0, i32 0, i64 2
  tail call void @_ZN2rx2vk21DynamicDescriptorPool7releaseEPNS_9ContextVkE(%"class.rx::vk::DynamicDescriptorPool"* %62, %"class.rx::ContextVk"* %1) #15
  %63 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 11, i32 0, i32 0, i64 3
  tail call void @_ZN2rx2vk21DynamicDescriptorPool7releaseEPNS_9ContextVkE(%"class.rx::vk::DynamicDescriptorPool"* %63, %"class.rx::ContextVk"* %1) #15
  %64 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %65 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %64, align 8
  %66 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 6
  tail call void @_ZN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EE7destroyEPNS_10RendererVkE(%"class.rx::DescriptorSetCache.824"* %66, %"class.rx::RendererVk"* %65) #15
  %67 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 5
  tail call void @_ZN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EE7destroyEPNS_10RendererVkE(%"class.rx::DescriptorSetCache"* %67, %"class.rx::RendererVk"* %65) #15
  %68 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 7
  tail call void @_ZN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EE7destroyEPNS_10RendererVkE(%"class.rx::DescriptorSetCache.841"* %68, %"class.rx::RendererVk"* %65) #15
  %69 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %65, i64 0, i32 71
  %70 = tail call i32 @_ZN2rx2vk21ResourceSerialFactory20generateBufferSerialEv(%"class.rx::vk::ResourceSerialFactory"* %69) #15
  %71 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 4, i32 0
  store i32 %70, i32* %71, align 4
  %72 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 0
  %73 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 64
  br label %35

74:                                               ; preds = %21
  %75 = getelementptr inbounds %"class.rx::vk::RefCounted.863", %"class.rx::vk::RefCounted.863"* %23, i64 0, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, -1
  store i32 %77, i32* %75, align 8
  br label %78

78:                                               ; preds = %74, %21
  store %"class.rx::vk::RefCounted.863"* null, %"class.rx::vk::RefCounted.863"** %22, align 8
  %79 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 9, i32 0, i32 0, i64 2, i32 0
  %80 = load %"class.rx::vk::RefCounted.863"*, %"class.rx::vk::RefCounted.863"** %79, align 8
  %81 = icmp eq %"class.rx::vk::RefCounted.863"* %80, null
  br i1 %81, label %86, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.rx::vk::RefCounted.863", %"class.rx::vk::RefCounted.863"* %80, i64 0, i32 0
  %84 = load i32, i32* %83, align 8
  %85 = add i32 %84, -1
  store i32 %85, i32* %83, align 8
  br label %86

86:                                               ; preds = %82, %78
  store %"class.rx::vk::RefCounted.863"* null, %"class.rx::vk::RefCounted.863"** %79, align 8
  %87 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 9, i32 0, i32 0, i64 3, i32 0
  %88 = load %"class.rx::vk::RefCounted.863"*, %"class.rx::vk::RefCounted.863"** %87, align 8
  %89 = icmp eq %"class.rx::vk::RefCounted.863"* %88, null
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.rx::vk::RefCounted.863", %"class.rx::vk::RefCounted.863"* %88, i64 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = add i32 %92, -1
  store i32 %93, i32* %91, align 8
  br label %94

94:                                               ; preds = %90, %86
  store %"class.rx::vk::RefCounted.863"* null, %"class.rx::vk::RefCounted.863"** %87, align 8
  %95 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 8, i32 0
  %96 = load %"class.rx::vk::RefCounted.859"*, %"class.rx::vk::RefCounted.859"** %95, align 8
  %97 = icmp eq %"class.rx::vk::RefCounted.859"* %96, null
  br i1 %97, label %10, label %6
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN2rx2vk21DynamicDescriptorPool7releaseEPNS_9ContextVkE(%"class.rx::vk::DynamicDescriptorPool"*, %"class.rx::ContextVk"*) local_unnamed_addr #6

declare void @_ZN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EE7destroyEPNS_10RendererVkE(%"class.rx::DescriptorSetCache.824"*, %"class.rx::RendererVk"*) local_unnamed_addr #6

declare void @_ZN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EE7destroyEPNS_10RendererVkE(%"class.rx::DescriptorSetCache"*, %"class.rx::RendererVk"*) local_unnamed_addr #6

declare void @_ZN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EE7destroyEPNS_10RendererVkE(%"class.rx::DescriptorSetCache.841"*, %"class.rx::RendererVk"*) local_unnamed_addr #6

declare i32 @_ZN2rx2vk21ResourceSerialFactory20generateBufferSerialEv(%"class.rx::vk::ResourceSerialFactory"*) local_unnamed_addr #6

declare void @_ZN2rx9ContextVk24onProgramExecutableResetEPNS_19ProgramExecutableVkE(%"class.rx::ContextVk"*, %"class.rx::ProgramExecutableVk"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.rx::LinkEvent"* @_ZN2rx19ProgramExecutableVk4loadEPN2gl17BinaryInputStreamE(%"class.rx::ProgramExecutableVk"*, %"class.gl::BinaryInputStream"*) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 15
  tail call void @_ZN2rx30ShaderInterfaceVariableInfoMap5clearEv(%"class.rx::ShaderInterfaceVariableInfoMap"* %4) #15
  %5 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %1, i64 0, i32 3
  %7 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %1, i64 0, i32 2
  %8 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %1, i64 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  br label %19

13:                                               ; preds = %34
  %14 = call i8* @_Znwm(i64 16) #20
  %15 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2rx13LinkEventDoneE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds i8, i8* %14, i64 8
  %17 = bitcast i8* %16 to i32*
  store i32 0, i32* %17, align 8
  %18 = bitcast i8* %14 to %"class.rx::LinkEvent"*
  ret %"class.rx::LinkEvent"* %18

19:                                               ; preds = %2, %34
  %20 = phi i8 [ 0, %2 ], [ %35, %34 ]
  %21 = load i64, i64* %5, align 8
  %22 = add i64 %21, 8
  %23 = icmp ugt i64 %21, -9
  br i1 %23, label %27, label %24

24:                                               ; preds = %19
  %25 = load i64, i64* %6, align 8
  %26 = icmp ugt i64 %22, %25
  br i1 %26, label %27, label %28

27:                                               ; preds = %19, %24
  store i8 1, i8* %8, align 8
  br label %34

28:                                               ; preds = %24
  %29 = load i8*, i8** %7, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 %21
  %31 = bitcast i8* %30 to i64*
  %32 = load i64, i64* %31, align 1
  store i64 %22, i64* %5, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %293, %27, %28
  %35 = add nuw nsw i8 %20, 1
  %36 = icmp eq i8 %35, 6
  br i1 %36, label %13, label %19

37:                                               ; preds = %28, %296
  %38 = phi i64 [ %297, %296 ], [ %22, %28 ]
  %39 = phi i64 [ %294, %296 ], [ 0, %28 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #15, !alias.scope !3
  %40 = add i64 %38, 8
  %41 = icmp ugt i64 %38, -9
  br i1 %41, label %45, label %42

42:                                               ; preds = %37
  %43 = load i64, i64* %6, align 8, !noalias !3
  %44 = icmp ugt i64 %40, %43
  br i1 %44, label %45, label %46

45:                                               ; preds = %42, %37
  store i8 1, i8* %8, align 8, !noalias !3
  br label %74

46:                                               ; preds = %42
  %47 = load i8*, i8** %7, align 8, !noalias !3
  %48 = getelementptr inbounds i8, i8* %47, i64 %38
  %49 = bitcast i8* %48 to i64*
  %50 = load i64, i64* %49, align 1, !noalias !3
  store i64 %40, i64* %5, align 8, !noalias !3
  %51 = load i8, i8* %8, align 8, !range !2, !noalias !3
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %74

53:                                               ; preds = %46
  %54 = add i64 %50, %40
  %55 = sub nuw i64 -9, %38
  %56 = icmp ugt i64 %50, %55
  %57 = icmp ugt i64 %54, %43
  %58 = or i1 %56, %57
  br i1 %58, label %59, label %60

59:                                               ; preds = %53
  store i8 1, i8* %8, align 8, !noalias !3
  br label %74

60:                                               ; preds = %53
  %61 = getelementptr inbounds i8, i8* %47, i64 %40
  %62 = call i1 @llvm.is.constant.i64(i64 %50) #15
  %63 = icmp ult i64 %50, 23
  %64 = and i1 %63, %62
  br i1 %64, label %65, label %71

65:                                               ; preds = %60
  %66 = trunc i64 %50 to i8
  store i8 %66, i8* %12, align 1, !alias.scope !3
  %67 = icmp eq i64 %50, 0
  br i1 %67, label %69, label %68

68:                                               ; preds = %65
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %61, i64 %50, i1 false) #15
  br label %69

69:                                               ; preds = %68, %65
  %70 = getelementptr inbounds i8, i8* %9, i64 %50
  store i8 0, i8* %70, align 1, !alias.scope !3
  br label %73

71:                                               ; preds = %60
  %72 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %61, i64 %50) #15
  br label %73

73:                                               ; preds = %71, %69
  store i64 %54, i64* %5, align 8, !noalias !3
  br label %74

74:                                               ; preds = %45, %46, %59, %73
  %75 = call dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx30ShaderInterfaceVariableInfoMap3addEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"* %4, i8 zeroext %20, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #15
  %76 = load i64, i64* %5, align 8
  %77 = add i64 %76, 4
  %78 = icmp ugt i64 %76, -5
  br i1 %78, label %82, label %79

79:                                               ; preds = %74
  %80 = load i64, i64* %6, align 8
  %81 = icmp ugt i64 %77, %80
  br i1 %81, label %82, label %83

82:                                               ; preds = %79, %74
  store i8 1, i8* %8, align 8
  br label %88

83:                                               ; preds = %79
  %84 = load i8*, i8** %7, align 8
  %85 = getelementptr inbounds i8, i8* %84, i64 %76
  %86 = bitcast i8* %85 to i32*
  %87 = load i32, i32* %86, align 1
  store i64 %77, i64* %5, align 8
  br label %88

88:                                               ; preds = %82, %83
  %89 = phi i32 [ 0, %82 ], [ %87, %83 ]
  %90 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %75, i64 0, i32 0
  store i32 %89, i32* %90, align 8
  %91 = load i64, i64* %5, align 8
  %92 = add i64 %91, 4
  %93 = icmp ugt i64 %91, -5
  br i1 %93, label %97, label %94

94:                                               ; preds = %88
  %95 = load i64, i64* %6, align 8
  %96 = icmp ugt i64 %92, %95
  br i1 %96, label %97, label %98

97:                                               ; preds = %94, %88
  store i8 1, i8* %8, align 8
  br label %103

98:                                               ; preds = %94
  %99 = load i8*, i8** %7, align 8
  %100 = getelementptr inbounds i8, i8* %99, i64 %91
  %101 = bitcast i8* %100 to i32*
  %102 = load i32, i32* %101, align 1
  store i64 %92, i64* %5, align 8
  br label %103

103:                                              ; preds = %97, %98
  %104 = phi i32 [ 0, %97 ], [ %102, %98 ]
  %105 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %75, i64 0, i32 1
  store i32 %104, i32* %105, align 4
  %106 = load i64, i64* %5, align 8
  %107 = add i64 %106, 4
  %108 = icmp ugt i64 %106, -5
  br i1 %108, label %112, label %109

109:                                              ; preds = %103
  %110 = load i64, i64* %6, align 8
  %111 = icmp ugt i64 %107, %110
  br i1 %111, label %112, label %113

112:                                              ; preds = %109, %103
  store i8 1, i8* %8, align 8
  br label %118

113:                                              ; preds = %109
  %114 = load i8*, i8** %7, align 8
  %115 = getelementptr inbounds i8, i8* %114, i64 %106
  %116 = bitcast i8* %115 to i32*
  %117 = load i32, i32* %116, align 1
  store i64 %107, i64* %5, align 8
  br label %118

118:                                              ; preds = %112, %113
  %119 = phi i32 [ 0, %112 ], [ %117, %113 ]
  %120 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %75, i64 0, i32 2
  store i32 %119, i32* %120, align 8
  %121 = load i64, i64* %5, align 8
  %122 = add i64 %121, 4
  %123 = icmp ugt i64 %121, -5
  br i1 %123, label %127, label %124

124:                                              ; preds = %118
  %125 = load i64, i64* %6, align 8
  %126 = icmp ugt i64 %122, %125
  br i1 %126, label %127, label %128

127:                                              ; preds = %124, %118
  store i8 1, i8* %8, align 8
  br label %133

128:                                              ; preds = %124
  %129 = load i8*, i8** %7, align 8
  %130 = getelementptr inbounds i8, i8* %129, i64 %121
  %131 = bitcast i8* %130 to i32*
  %132 = load i32, i32* %131, align 1
  store i64 %122, i64* %5, align 8
  br label %133

133:                                              ; preds = %127, %128
  %134 = phi i32 [ 0, %127 ], [ %132, %128 ]
  %135 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %75, i64 0, i32 3
  store i32 %134, i32* %135, align 4
  %136 = load i64, i64* %5, align 8
  %137 = add i64 %136, 4
  %138 = icmp ugt i64 %136, -5
  br i1 %138, label %142, label %139

139:                                              ; preds = %133
  %140 = load i64, i64* %6, align 8
  %141 = icmp ugt i64 %137, %140
  br i1 %141, label %142, label %143

142:                                              ; preds = %139, %133
  store i8 1, i8* %8, align 8
  br label %148

143:                                              ; preds = %139
  %144 = load i8*, i8** %7, align 8
  %145 = getelementptr inbounds i8, i8* %144, i64 %136
  %146 = bitcast i8* %145 to i32*
  %147 = load i32, i32* %146, align 1
  store i64 %137, i64* %5, align 8
  br label %148

148:                                              ; preds = %142, %143
  %149 = phi i32 [ 0, %142 ], [ %147, %143 ]
  %150 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %75, i64 0, i32 4
  store i32 %149, i32* %150, align 8
  %151 = load i64, i64* %5, align 8
  %152 = add i64 %151, 4
  %153 = icmp ugt i64 %151, -5
  br i1 %153, label %157, label %154

154:                                              ; preds = %148
  %155 = load i64, i64* %6, align 8
  %156 = icmp ugt i64 %152, %155
  br i1 %156, label %157, label %158

157:                                              ; preds = %154, %148
  store i8 1, i8* %8, align 8
  br label %164

158:                                              ; preds = %154
  %159 = load i8*, i8** %7, align 8
  %160 = getelementptr inbounds i8, i8* %159, i64 %151
  %161 = bitcast i8* %160 to i32*
  %162 = load i32, i32* %161, align 1
  store i64 %152, i64* %5, align 8
  %163 = trunc i32 %162 to i8
  br label %164

164:                                              ; preds = %157, %158
  %165 = phi i8 [ 0, %157 ], [ %163, %158 ]
  %166 = and i8 %165, 63
  %167 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %75, i64 0, i32 5, i32 0
  store i8 %166, i8* %167, align 1
  %168 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %75, i64 0, i32 7
  call fastcc void @_ZN2rx12_GLOBAL__N_134LoadShaderInterfaceVariableXfbInfoEPN2gl17BinaryInputStreamEPNS_30ShaderInterfaceVariableXfbInfoE(%"class.gl::BinaryInputStream"* %1, %"struct.rx::ShaderInterfaceVariableXfbInfo"* %168)
  %169 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %75, i64 0, i32 8
  %170 = load i64, i64* %5, align 8
  %171 = add i64 %170, 8
  %172 = icmp ugt i64 %170, -9
  br i1 %172, label %176, label %173

173:                                              ; preds = %164
  %174 = load i64, i64* %6, align 8
  %175 = icmp ugt i64 %171, %174
  br i1 %175, label %176, label %177

176:                                              ; preds = %173, %164
  store i8 1, i8* %8, align 8
  br label %182

177:                                              ; preds = %173
  %178 = load i8*, i8** %7, align 8
  %179 = getelementptr inbounds i8, i8* %178, i64 %170
  %180 = bitcast i8* %179 to i64*
  %181 = load i64, i64* %180, align 1
  store i64 %171, i64* %5, align 8
  br label %182

182:                                              ; preds = %176, %177
  %183 = phi i64 [ 0, %176 ], [ %181, %177 ]
  %184 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %75, i64 0, i32 8, i32 0, i32 1
  %185 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = bitcast %"class.std::__1::vector.1432"* %169 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = sub i64 %186, %188
  %190 = sdiv exact i64 %189, 56
  %191 = icmp ugt i64 %183, %190
  %192 = inttoptr i64 %188 to %"struct.rx::ShaderInterfaceVariableXfbInfo"*
  br i1 %191, label %193, label %195

193:                                              ; preds = %182
  %194 = sub i64 %183, %190
  call void @_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.1432"* %169, i64 %194) #15
  br label %200

195:                                              ; preds = %182
  %196 = icmp ult i64 %183, %190
  br i1 %196, label %197, label %200

197:                                              ; preds = %195
  %198 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %192, i64 %183
  %199 = getelementptr inbounds %"class.std::__1::vector.1432", %"class.std::__1::vector.1432"* %169, i64 0, i32 0
  call void @_ZNSt3__113__vector_baseIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEE17__destruct_at_endEPS2_(%"class.std::__1::__vector_base.1433"* %199, %"struct.rx::ShaderInterfaceVariableXfbInfo"* %198) #15
  br label %200

200:                                              ; preds = %193, %195, %197
  %201 = getelementptr inbounds %"class.std::__1::vector.1432", %"class.std::__1::vector.1432"* %169, i64 0, i32 0, i32 0
  %202 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %201, align 8
  %203 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %184, align 8
  %204 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %202, %203
  br i1 %204, label %205, label %298

205:                                              ; preds = %298, %200
  %206 = load i64, i64* %5, align 8
  %207 = add i64 %206, 4
  %208 = icmp ugt i64 %206, -5
  br i1 %208, label %212, label %209

209:                                              ; preds = %205
  %210 = load i64, i64* %6, align 8
  %211 = icmp ugt i64 %207, %210
  br i1 %211, label %212, label %213

212:                                              ; preds = %209, %205
  store i8 1, i8* %8, align 8
  br label %219

213:                                              ; preds = %209
  %214 = load i8*, i8** %7, align 8
  %215 = getelementptr inbounds i8, i8* %214, i64 %206
  %216 = bitcast i8* %215 to i32*
  %217 = load i32, i32* %216, align 1
  store i64 %207, i64* %5, align 8
  %218 = icmp sgt i32 %217, 0
  br label %219

219:                                              ; preds = %212, %213
  %220 = phi i1 [ false, %212 ], [ %218, %213 ]
  %221 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %75, i64 0, i32 9
  %222 = zext i1 %220 to i8
  store i8 %222, i8* %221, align 8
  %223 = load i64, i64* %5, align 8
  %224 = add i64 %223, 4
  %225 = icmp ugt i64 %223, -5
  br i1 %225, label %229, label %226

226:                                              ; preds = %219
  %227 = load i64, i64* %6, align 8
  %228 = icmp ugt i64 %224, %227
  br i1 %228, label %229, label %230

229:                                              ; preds = %226, %219
  store i8 1, i8* %8, align 8
  br label %236

230:                                              ; preds = %226
  %231 = load i8*, i8** %7, align 8
  %232 = getelementptr inbounds i8, i8* %231, i64 %223
  %233 = bitcast i8* %232 to i32*
  %234 = load i32, i32* %233, align 1
  store i64 %224, i64* %5, align 8
  %235 = icmp sgt i32 %234, 0
  br label %236

236:                                              ; preds = %229, %230
  %237 = phi i1 [ false, %229 ], [ %235, %230 ]
  %238 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %75, i64 0, i32 10
  %239 = zext i1 %237 to i8
  store i8 %239, i8* %238, align 1
  %240 = load i64, i64* %5, align 8
  %241 = add i64 %240, 4
  %242 = icmp ugt i64 %240, -5
  br i1 %242, label %246, label %243

243:                                              ; preds = %236
  %244 = load i64, i64* %6, align 8
  %245 = icmp ugt i64 %241, %244
  br i1 %245, label %246, label %247

246:                                              ; preds = %243, %236
  store i8 1, i8* %8, align 8
  br label %253

247:                                              ; preds = %243
  %248 = load i8*, i8** %7, align 8
  %249 = getelementptr inbounds i8, i8* %248, i64 %240
  %250 = bitcast i8* %249 to i32*
  %251 = load i32, i32* %250, align 1
  store i64 %241, i64* %5, align 8
  %252 = icmp sgt i32 %251, 0
  br label %253

253:                                              ; preds = %246, %247
  %254 = phi i1 [ false, %246 ], [ %252, %247 ]
  %255 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %75, i64 0, i32 11
  %256 = zext i1 %254 to i8
  store i8 %256, i8* %255, align 2
  %257 = load i64, i64* %5, align 8
  %258 = add i64 %257, 4
  %259 = icmp ugt i64 %257, -5
  br i1 %259, label %263, label %260

260:                                              ; preds = %253
  %261 = load i64, i64* %6, align 8
  %262 = icmp ugt i64 %258, %261
  br i1 %262, label %263, label %264

263:                                              ; preds = %260, %253
  store i8 1, i8* %8, align 8
  br label %270

264:                                              ; preds = %260
  %265 = load i8*, i8** %7, align 8
  %266 = getelementptr inbounds i8, i8* %265, i64 %257
  %267 = bitcast i8* %266 to i32*
  %268 = load i32, i32* %267, align 1
  store i64 %258, i64* %5, align 8
  %269 = trunc i32 %268 to i8
  br label %270

270:                                              ; preds = %263, %264
  %271 = phi i8 [ 0, %263 ], [ %269, %264 ]
  %272 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %75, i64 0, i32 12
  store i8 %271, i8* %272, align 1
  %273 = load i64, i64* %5, align 8
  %274 = add i64 %273, 4
  %275 = icmp ugt i64 %273, -5
  br i1 %275, label %279, label %276

276:                                              ; preds = %270
  %277 = load i64, i64* %6, align 8
  %278 = icmp ugt i64 %274, %277
  br i1 %278, label %279, label %280

279:                                              ; preds = %276, %270
  store i8 1, i8* %8, align 8
  br label %286

280:                                              ; preds = %276
  %281 = load i8*, i8** %7, align 8
  %282 = getelementptr inbounds i8, i8* %281, i64 %273
  %283 = bitcast i8* %282 to i32*
  %284 = load i32, i32* %283, align 1
  store i64 %274, i64* %5, align 8
  %285 = trunc i32 %284 to i8
  br label %286

286:                                              ; preds = %279, %280
  %287 = phi i8 [ 0, %279 ], [ %285, %280 ]
  %288 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %75, i64 0, i32 13
  store i8 %287, i8* %288, align 4
  %289 = load i8, i8* %12, align 1
  %290 = icmp slt i8 %289, 0
  br i1 %290, label %291, label %293

291:                                              ; preds = %286
  %292 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %292) #20
  br label %293

293:                                              ; preds = %286, %291
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #15
  %294 = add nuw i64 %39, 1
  %295 = icmp eq i64 %294, %32
  br i1 %295, label %34, label %296

296:                                              ; preds = %293
  %297 = load i64, i64* %5, align 8, !noalias !3
  br label %37

298:                                              ; preds = %200, %298
  %299 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %300, %298 ], [ %202, %200 ]
  call fastcc void @_ZN2rx12_GLOBAL__N_134LoadShaderInterfaceVariableXfbInfoEPN2gl17BinaryInputStreamEPNS_30ShaderInterfaceVariableXfbInfoE(%"class.gl::BinaryInputStream"* %1, %"struct.rx::ShaderInterfaceVariableXfbInfo"* %299)
  %300 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %299, i64 1
  %301 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %300, %203
  br i1 %301, label %205, label %298
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx19ProgramExecutableVk20clearVariableInfoMapEv(%"class.rx::ProgramExecutableVk"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 15
  tail call void @_ZN2rx30ShaderInterfaceVariableInfoMap5clearEv(%"class.rx::ShaderInterfaceVariableInfoMap"* %2) #15
  ret void
}

declare dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx30ShaderInterfaceVariableInfoMap3addEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"*, i8 zeroext, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2rx12_GLOBAL__N_134LoadShaderInterfaceVariableXfbInfoEPN2gl17BinaryInputStreamEPNS_30ShaderInterfaceVariableXfbInfoE(%"class.gl::BinaryInputStream"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"*) unnamed_addr #3 {
  %3 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 4
  %6 = icmp ugt i64 %4, -5
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %5, %9
  br i1 %10, label %11, label %13

11:                                               ; preds = %7, %2
  %12 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 0
  store i8 1, i8* %12, align 8
  br label %19

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 2
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 %4
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 1
  store i64 %5, i64* %3, align 8
  br label %19

19:                                               ; preds = %11, %13
  %20 = phi i32 [ 0, %11 ], [ %18, %13 ]
  %21 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1, i64 0, i32 0
  store i32 %20, i32* %21, align 8
  %22 = load i64, i64* %3, align 8
  %23 = add i64 %22, 4
  %24 = icmp ugt i64 %22, -5
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = icmp ugt i64 %23, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %25, %19
  %30 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 0
  store i8 1, i8* %30, align 8
  br label %37

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 %22
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  store i64 %23, i64* %3, align 8
  br label %37

37:                                               ; preds = %29, %31
  %38 = phi i32 [ 0, %29 ], [ %36, %31 ]
  %39 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1, i64 0, i32 1
  store i32 %38, i32* %39, align 4
  %40 = load i64, i64* %3, align 8
  %41 = add i64 %40, 4
  %42 = icmp ugt i64 %40, -5
  br i1 %42, label %47, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 3
  %45 = load i64, i64* %44, align 8
  %46 = icmp ugt i64 %41, %45
  br i1 %46, label %47, label %49

47:                                               ; preds = %43, %37
  %48 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 0
  store i8 1, i8* %48, align 8
  br label %55

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 2
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %40
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %53, align 1
  store i64 %41, i64* %3, align 8
  br label %55

55:                                               ; preds = %47, %49
  %56 = phi i32 [ 0, %47 ], [ %54, %49 ]
  %57 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1, i64 0, i32 2
  store i32 %56, i32* %57, align 8
  %58 = load i64, i64* %3, align 8
  %59 = add i64 %58, 4
  %60 = icmp ugt i64 %58, -5
  br i1 %60, label %65, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 3
  %63 = load i64, i64* %62, align 8
  %64 = icmp ugt i64 %59, %63
  br i1 %64, label %65, label %67

65:                                               ; preds = %61, %55
  %66 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 0
  store i8 1, i8* %66, align 8
  br label %73

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 2
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 %58
  %71 = bitcast i8* %70 to i32*
  %72 = load i32, i32* %71, align 1
  store i64 %59, i64* %3, align 8
  br label %73

73:                                               ; preds = %65, %67
  %74 = phi i32 [ 0, %65 ], [ %72, %67 ]
  %75 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1, i64 0, i32 3
  store i32 %74, i32* %75, align 4
  %76 = load i64, i64* %3, align 8
  %77 = add i64 %76, 4
  %78 = icmp ugt i64 %76, -5
  br i1 %78, label %83, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 3
  %81 = load i64, i64* %80, align 8
  %82 = icmp ugt i64 %77, %81
  br i1 %82, label %83, label %85

83:                                               ; preds = %79, %73
  %84 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 0
  store i8 1, i8* %84, align 8
  br label %91

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 2
  %87 = load i8*, i8** %86, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 %76
  %89 = bitcast i8* %88 to i32*
  %90 = load i32, i32* %89, align 1
  store i64 %77, i64* %3, align 8
  br label %91

91:                                               ; preds = %83, %85
  %92 = phi i32 [ 0, %83 ], [ %90, %85 ]
  %93 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1, i64 0, i32 4
  store i32 %92, i32* %93, align 8
  %94 = load i64, i64* %3, align 8
  %95 = add i64 %94, 4
  %96 = icmp ugt i64 %94, -5
  br i1 %96, label %101, label %97

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 3
  %99 = load i64, i64* %98, align 8
  %100 = icmp ugt i64 %95, %99
  br i1 %100, label %101, label %103

101:                                              ; preds = %97, %91
  %102 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 0
  store i8 1, i8* %102, align 8
  br label %109

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 2
  %105 = load i8*, i8** %104, align 8
  %106 = getelementptr inbounds i8, i8* %105, i64 %94
  %107 = bitcast i8* %106 to i32*
  %108 = load i32, i32* %107, align 1
  store i64 %95, i64* %3, align 8
  br label %109

109:                                              ; preds = %101, %103
  %110 = phi i32 [ 0, %101 ], [ %108, %103 ]
  %111 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1, i64 0, i32 5
  store i32 %110, i32* %111, align 4
  %112 = load i64, i64* %3, align 8
  %113 = add i64 %112, 4
  %114 = icmp ugt i64 %112, -5
  br i1 %114, label %119, label %115

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 3
  %117 = load i64, i64* %116, align 8
  %118 = icmp ugt i64 %113, %117
  br i1 %118, label %119, label %121

119:                                              ; preds = %115, %109
  %120 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 0
  store i8 1, i8* %120, align 8
  br label %127

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 2
  %123 = load i8*, i8** %122, align 8
  %124 = getelementptr inbounds i8, i8* %123, i64 %112
  %125 = bitcast i8* %124 to i32*
  %126 = load i32, i32* %125, align 1
  store i64 %113, i64* %3, align 8
  br label %127

127:                                              ; preds = %119, %121
  %128 = phi i32 [ 0, %119 ], [ %126, %121 ]
  %129 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1, i64 0, i32 6
  store i32 %128, i32* %129, align 8
  %130 = load i64, i64* %3, align 8
  %131 = add i64 %130, 4
  %132 = icmp ugt i64 %130, -5
  br i1 %132, label %137, label %133

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 3
  %135 = load i64, i64* %134, align 8
  %136 = icmp ugt i64 %131, %135
  br i1 %136, label %137, label %139

137:                                              ; preds = %133, %127
  %138 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 0
  store i8 1, i8* %138, align 8
  br label %145

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 2
  %141 = load i8*, i8** %140, align 8
  %142 = getelementptr inbounds i8, i8* %141, i64 %130
  %143 = bitcast i8* %142 to i32*
  %144 = load i32, i32* %143, align 1
  store i64 %131, i64* %3, align 8
  br label %145

145:                                              ; preds = %137, %139
  %146 = phi i32 [ 0, %137 ], [ %144, %139 ]
  %147 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1, i64 0, i32 7
  store i32 %146, i32* %147, align 4
  %148 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1, i64 0, i32 8
  %149 = load i64, i64* %3, align 8
  %150 = add i64 %149, 8
  %151 = icmp ugt i64 %149, -9
  br i1 %151, label %156, label %152

152:                                              ; preds = %145
  %153 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 3
  %154 = load i64, i64* %153, align 8
  %155 = icmp ugt i64 %150, %154
  br i1 %155, label %156, label %158

156:                                              ; preds = %152, %145
  %157 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 0
  store i8 1, i8* %157, align 8
  br label %164

158:                                              ; preds = %152
  %159 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %0, i64 0, i32 2
  %160 = load i8*, i8** %159, align 8
  %161 = getelementptr inbounds i8, i8* %160, i64 %149
  %162 = bitcast i8* %161 to i64*
  %163 = load i64, i64* %162, align 1
  store i64 %150, i64* %3, align 8
  br label %164

164:                                              ; preds = %156, %158
  %165 = phi i64 [ 0, %156 ], [ %163, %158 ]
  %166 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1, i64 0, i32 8, i32 0, i32 1
  %167 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"class.std::__1::vector.1432"* %148 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = sub i64 %168, %170
  %172 = sdiv exact i64 %171, 56
  %173 = icmp ugt i64 %165, %172
  %174 = inttoptr i64 %170 to %"struct.rx::ShaderInterfaceVariableXfbInfo"*
  br i1 %173, label %175, label %177

175:                                              ; preds = %164
  %176 = sub i64 %165, %172
  tail call void @_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.1432"* %148, i64 %176) #15
  br label %182

177:                                              ; preds = %164
  %178 = icmp ult i64 %165, %172
  br i1 %178, label %179, label %182

179:                                              ; preds = %177
  %180 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %174, i64 %165
  %181 = getelementptr inbounds %"class.std::__1::vector.1432", %"class.std::__1::vector.1432"* %148, i64 0, i32 0
  tail call void @_ZNSt3__113__vector_baseIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEE17__destruct_at_endEPS2_(%"class.std::__1::__vector_base.1433"* %181, %"struct.rx::ShaderInterfaceVariableXfbInfo"* %180) #15
  br label %182

182:                                              ; preds = %175, %177, %179
  %183 = getelementptr inbounds %"class.std::__1::vector.1432", %"class.std::__1::vector.1432"* %148, i64 0, i32 0, i32 0
  %184 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %183, align 8
  %185 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %166, align 8
  %186 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %184, %185
  br i1 %186, label %187, label %188

187:                                              ; preds = %188, %182
  ret void

188:                                              ; preds = %182, %188
  %189 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %190, %188 ], [ %184, %182 ]
  tail call fastcc void @_ZN2rx12_GLOBAL__N_134LoadShaderInterfaceVariableXfbInfoEPN2gl17BinaryInputStreamEPNS_30ShaderInterfaceVariableXfbInfoE(%"class.gl::BinaryInputStream"* %0, %"struct.rx::ShaderInterfaceVariableXfbInfo"* %189)
  %190 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %189, i64 1
  %191 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %190, %185
  br i1 %191, label %187, label %188
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx19ProgramExecutableVk4saveEPN2gl18BinaryOutputStreamE(%"class.rx::ProgramExecutableVk"*, %"class.gl::BinaryOutputStream"*) local_unnamed_addr #9 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %"class.rx::ShaderInterfaceVariableInfoMap::Iterator", align 8
  %18 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 15
  %19 = bitcast i64* %12 to i8*
  %20 = getelementptr inbounds %"class.gl::BinaryOutputStream", %"class.gl::BinaryOutputStream"* %1, i64 0, i32 0
  %21 = getelementptr inbounds %"class.gl::BinaryOutputStream", %"class.gl::BinaryOutputStream"* %1, i64 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds i64, i64* %12, i64 1
  %23 = bitcast i64* %22 to i8*
  %24 = bitcast %"class.rx::ShaderInterfaceVariableInfoMap::Iterator"* %17 to i8*
  %25 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap::Iterator", %"class.rx::ShaderInterfaceVariableInfoMap::Iterator"* %17, i64 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap::Iterator", %"class.rx::ShaderInterfaceVariableInfoMap::Iterator"* %17, i64 0, i32 0, i32 0, i32 1, i32 0
  %27 = getelementptr inbounds %"class.rx::ShaderInterfaceVariableInfoMap::Iterator", %"class.rx::ShaderInterfaceVariableInfoMap::Iterator"* %17, i64 0, i32 1, i32 0, i32 0
  %28 = bitcast i64* %7 to i8*
  %29 = getelementptr inbounds i64, i64* %7, i64 1
  %30 = bitcast i64* %29 to i8*
  %31 = bitcast i32* %6 to i8*
  %32 = getelementptr inbounds i32, i32* %6, i64 1
  %33 = bitcast i32* %32 to i8*
  %34 = bitcast i32* %5 to i8*
  %35 = getelementptr inbounds i32, i32* %5, i64 1
  %36 = bitcast i32* %35 to i8*
  %37 = bitcast i32* %4 to i8*
  %38 = getelementptr inbounds i32, i32* %4, i64 1
  %39 = bitcast i32* %38 to i8*
  %40 = bitcast i32* %3 to i8*
  %41 = getelementptr inbounds i32, i32* %3, i64 1
  %42 = bitcast i32* %41 to i8*
  %43 = bitcast i32* %8 to i8*
  %44 = getelementptr inbounds i32, i32* %8, i64 1
  %45 = bitcast i32* %44 to i8*
  %46 = bitcast i32* %9 to i8*
  %47 = getelementptr inbounds i32, i32* %9, i64 1
  %48 = bitcast i32* %47 to i8*
  %49 = bitcast i64* %10 to i8*
  %50 = getelementptr inbounds i64, i64* %10, i64 1
  %51 = bitcast i64* %50 to i8*
  %52 = bitcast i32* %11 to i8*
  %53 = getelementptr inbounds i32, i32* %11, i64 1
  %54 = bitcast i32* %53 to i8*
  %55 = bitcast i32* %13 to i8*
  %56 = getelementptr inbounds i32, i32* %13, i64 1
  %57 = bitcast i32* %56 to i8*
  %58 = bitcast i32* %14 to i8*
  %59 = getelementptr inbounds i32, i32* %14, i64 1
  %60 = bitcast i32* %59 to i8*
  %61 = bitcast i32* %15 to i8*
  %62 = getelementptr inbounds i32, i32* %15, i64 1
  %63 = bitcast i32* %62 to i8*
  %64 = bitcast i32* %16 to i8*
  %65 = getelementptr inbounds i32, i32* %16, i64 1
  %66 = bitcast i32* %65 to i8*
  br label %68

67:                                               ; preds = %94
  ret void

68:                                               ; preds = %2, %94
  %69 = phi i64 [ 0, %2 ], [ %95, %94 ]
  %70 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i64 %69, i32 0, i32 0, i32 2
  %71 = load i64, i64* %70, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #15
  store i64 %71, i64* %12, align 8
  %72 = load i8*, i8** %21, align 8
  %73 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"* %20, i8* %72, i8* nonnull %19, i8* %23) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #15
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #15
  %74 = trunc i64 %69 to i8
  call void @_ZNK2rx30ShaderInterfaceVariableInfoMap11getIteratorEN2gl10ShaderTypeE(%"class.rx::ShaderInterfaceVariableInfoMap::Iterator"* nonnull sret %17, %"class.rx::ShaderInterfaceVariableInfoMap"* %18, i8 zeroext %74) #15
  %75 = load i8*, i8** %25, align 8
  %76 = load %"union.absl::container_internal::map_slot_type.660"*, %"union.absl::container_internal::map_slot_type.660"** %26, align 8
  %77 = load i8*, i8** %27, align 8
  %78 = icmp eq i8* %77, null
  br label %79

79:                                               ; preds = %214, %68
  %80 = phi %"union.absl::container_internal::map_slot_type.660"* [ %76, %68 ], [ %215, %214 ]
  %81 = phi i8* [ %75, %68 ], [ %219, %214 ]
  %82 = icmp eq i8* %81, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %79
  %84 = load i8, i8* %81, align 1
  %85 = icmp sgt i8 %84, -1
  br i1 %85, label %87, label %86, !prof !6

86:                                               ; preds = %83
  call void @llvm.trap() #15
  unreachable

87:                                               ; preds = %83, %79
  br i1 %78, label %92, label %88

88:                                               ; preds = %87
  %89 = load i8, i8* %77, align 1
  %90 = icmp sgt i8 %89, -1
  br i1 %90, label %92, label %91, !prof !6

91:                                               ; preds = %88
  call void @llvm.trap() #15
  unreachable

92:                                               ; preds = %87, %88
  %93 = icmp eq i8* %81, %77
  br i1 %93, label %94, label %97

94:                                               ; preds = %92
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #15
  %95 = add nuw nsw i64 %69, 1
  %96 = icmp eq i64 %95, 6
  br i1 %96, label %67, label %68

97:                                               ; preds = %92
  br i1 %82, label %101, label %98, !prof !7

98:                                               ; preds = %97
  %99 = load i8, i8* %81, align 1
  %100 = icmp sgt i8 %99, -1
  br i1 %100, label %102, label %101, !prof !6

101:                                              ; preds = %98, %97
  call void @llvm.trap() #15
  unreachable

102:                                              ; preds = %98
  %103 = bitcast %"union.absl::container_internal::map_slot_type.660"* %80 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  %107 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.660", %"union.absl::container_internal::map_slot_type.660"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %108 = load i64, i64* %107, align 8
  %109 = zext i8 %105 to i64
  %110 = select i1 %106, i64 %108, i64 %109
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  store i64 %110, i64* %7, align 8
  %111 = load i8*, i8** %21, align 8
  %112 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"* %20, i8* %111, i8* nonnull %28, i8* %30) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  %113 = load i8, i8* %104, align 1
  %114 = icmp slt i8 %113, 0
  %115 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.660", %"union.absl::container_internal::map_slot_type.660"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  %117 = load i64, i64* %107, align 8
  %118 = bitcast %"union.absl::container_internal::map_slot_type.660"* %80 to i8*
  %119 = zext i8 %113 to i64
  %120 = select i1 %114, i8* %116, i8* %118
  %121 = select i1 %114, i64 %117, i64 %119
  %122 = load i8*, i8** %21, align 8
  %123 = getelementptr inbounds i8, i8* %120, i64 %121
  %124 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"* %20, i8* %122, i8* %120, i8* %123) #15
  %125 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.660", %"union.absl::container_internal::map_slot_type.660"* %80, i64 0, i32 0, i32 1, i32 0
  %126 = load i32, i32* %125, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #15
  store i32 %126, i32* %6, align 4
  %127 = load i8*, i8** %21, align 8
  %128 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"* %20, i8* %127, i8* nonnull %31, i8* %33) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #15
  %129 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.660", %"union.absl::container_internal::map_slot_type.660"* %80, i64 0, i32 0, i32 1, i32 1
  %130 = load i32, i32* %129, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #15
  store i32 %130, i32* %5, align 4
  %131 = load i8*, i8** %21, align 8
  %132 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"* %20, i8* %131, i8* nonnull %34, i8* %36) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #15
  %133 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.660", %"union.absl::container_internal::map_slot_type.660"* %80, i64 0, i32 0, i32 1, i32 2
  %134 = load i32, i32* %133, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #15
  store i32 %134, i32* %4, align 4
  %135 = load i8*, i8** %21, align 8
  %136 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"* %20, i8* %135, i8* nonnull %37, i8* %39) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #15
  %137 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.660", %"union.absl::container_internal::map_slot_type.660"* %80, i64 0, i32 0, i32 1, i32 3
  %138 = load i32, i32* %137, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #15
  store i32 %138, i32* %3, align 4
  %139 = load i8*, i8** %21, align 8
  %140 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"* %20, i8* %139, i8* nonnull %40, i8* %42) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #15
  %141 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.660", %"union.absl::container_internal::map_slot_type.660"* %80, i64 0, i32 0, i32 1, i32 4
  %142 = load i32, i32* %141, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #15
  store i32 %142, i32* %8, align 4
  %143 = load i8*, i8** %21, align 8
  %144 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"* %20, i8* %143, i8* nonnull %43, i8* %45) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #15
  %145 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.660", %"union.absl::container_internal::map_slot_type.660"* %80, i64 0, i32 0, i32 1, i32 5, i32 0
  %146 = load i8, i8* %145, align 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #15
  %147 = zext i8 %146 to i32
  store i32 %147, i32* %9, align 4
  %148 = load i8*, i8** %21, align 8
  %149 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"* %20, i8* %148, i8* nonnull %46, i8* %48) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #15
  %150 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.660", %"union.absl::container_internal::map_slot_type.660"* %80, i64 0, i32 0, i32 1, i32 7
  call fastcc void @_ZN2rx12_GLOBAL__N_134SaveShaderInterfaceVariableXfbInfoERKNS_30ShaderInterfaceVariableXfbInfoEPN2gl18BinaryOutputStreamE(%"struct.rx::ShaderInterfaceVariableXfbInfo"* dereferenceable(56) %150, %"class.gl::BinaryOutputStream"* %1)
  %151 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.660", %"union.absl::container_internal::map_slot_type.660"* %80, i64 0, i32 0, i32 1, i32 8
  %152 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.660", %"union.absl::container_internal::map_slot_type.660"* %80, i64 0, i32 0, i32 1, i32 8, i32 0, i32 1
  %153 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.std::__1::vector.1432"* %151 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = sub i64 %154, %156
  %158 = sdiv exact i64 %157, 56
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #15
  store i64 %158, i64* %10, align 8
  %159 = load i8*, i8** %21, align 8
  %160 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"* %20, i8* %159, i8* nonnull %49, i8* %51) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #15
  %161 = getelementptr inbounds %"class.std::__1::vector.1432", %"class.std::__1::vector.1432"* %151, i64 0, i32 0, i32 0
  %162 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %161, align 8
  %163 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %152, align 8
  %164 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %162, %163
  br i1 %164, label %165, label %220

165:                                              ; preds = %220, %102
  %166 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.660", %"union.absl::container_internal::map_slot_type.660"* %80, i64 0, i32 0, i32 1, i32 9
  %167 = load i8, i8* %166, align 8, !range !2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %52) #15
  %168 = zext i8 %167 to i32
  store i32 %168, i32* %11, align 4
  %169 = load i8*, i8** %21, align 8
  %170 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"* %20, i8* %169, i8* nonnull %52, i8* %54) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52) #15
  %171 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.660", %"union.absl::container_internal::map_slot_type.660"* %80, i64 0, i32 0, i32 1, i32 10
  %172 = load i8, i8* %171, align 1, !range !2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #15
  %173 = zext i8 %172 to i32
  store i32 %173, i32* %13, align 4
  %174 = load i8*, i8** %21, align 8
  %175 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"* %20, i8* %174, i8* nonnull %55, i8* %57) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #15
  %176 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.660", %"union.absl::container_internal::map_slot_type.660"* %80, i64 0, i32 0, i32 1, i32 11
  %177 = load i8, i8* %176, align 2, !range !2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %58) #15
  %178 = zext i8 %177 to i32
  store i32 %178, i32* %14, align 4
  %179 = load i8*, i8** %21, align 8
  %180 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"* %20, i8* %179, i8* nonnull %58, i8* %60) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %58) #15
  %181 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.660", %"union.absl::container_internal::map_slot_type.660"* %80, i64 0, i32 0, i32 1, i32 12
  %182 = load i8, i8* %181, align 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61) #15
  %183 = zext i8 %182 to i32
  store i32 %183, i32* %15, align 4
  %184 = load i8*, i8** %21, align 8
  %185 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"* %20, i8* %184, i8* nonnull %61, i8* %63) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #15
  %186 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.660", %"union.absl::container_internal::map_slot_type.660"* %80, i64 0, i32 0, i32 1, i32 13
  %187 = load i8, i8* %186, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64) #15
  %188 = zext i8 %187 to i32
  store i32 %188, i32* %16, align 4
  %189 = load i8*, i8** %21, align 8
  %190 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"* %20, i8* %189, i8* nonnull %64, i8* %66) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64) #15
  %191 = load i8, i8* %81, align 1
  %192 = icmp sgt i8 %191, -1
  br i1 %192, label %194, label %193, !prof !6

193:                                              ; preds = %165
  call void @llvm.trap() #15
  unreachable

194:                                              ; preds = %165
  %195 = getelementptr inbounds i8, i8* %81, i64 1
  %196 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.660", %"union.absl::container_internal::map_slot_type.660"* %80, i64 1
  %197 = load i8, i8* %195, align 1
  %198 = icmp slt i8 %197, -1
  br i1 %198, label %199, label %214

199:                                              ; preds = %194, %199
  %200 = phi %"union.absl::container_internal::map_slot_type.660"* [ %211, %199 ], [ %196, %194 ]
  %201 = phi i8* [ %210, %199 ], [ %195, %194 ]
  %202 = bitcast i8* %201 to <16 x i8>*
  %203 = load <16 x i8>, <16 x i8>* %202, align 1
  %204 = icmp slt <16 x i8> %203, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %205 = bitcast <16 x i1> %204 to i16
  %206 = zext i16 %205 to i32
  %207 = add nuw nsw i32 %206, 1
  %208 = call i32 @llvm.cttz.i32(i32 %207, i1 true) #15, !range !8
  %209 = zext i32 %208 to i64
  %210 = getelementptr inbounds i8, i8* %201, i64 %209
  %211 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.660", %"union.absl::container_internal::map_slot_type.660"* %200, i64 %209
  %212 = load i8, i8* %210, align 1
  %213 = icmp slt i8 %212, -1
  br i1 %213, label %199, label %214

214:                                              ; preds = %199, %194
  %215 = phi %"union.absl::container_internal::map_slot_type.660"* [ %196, %194 ], [ %211, %199 ]
  %216 = phi i8* [ %195, %194 ], [ %210, %199 ]
  %217 = phi i8 [ %197, %194 ], [ %212, %199 ]
  %218 = icmp eq i8 %217, -1
  %219 = select i1 %218, i8* null, i8* %216
  br label %79

220:                                              ; preds = %102, %220
  %221 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %222, %220 ], [ %162, %102 ]
  call fastcc void @_ZN2rx12_GLOBAL__N_134SaveShaderInterfaceVariableXfbInfoERKNS_30ShaderInterfaceVariableXfbInfoEPN2gl18BinaryOutputStreamE(%"struct.rx::ShaderInterfaceVariableXfbInfo"* dereferenceable(56) %221, %"class.gl::BinaryOutputStream"* %1)
  %222 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %221, i64 1
  %223 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %222, %163
  br i1 %223, label %165, label %220
}

declare void @_ZNK2rx30ShaderInterfaceVariableInfoMap11getIteratorEN2gl10ShaderTypeE(%"class.rx::ShaderInterfaceVariableInfoMap::Iterator"* sret, %"class.rx::ShaderInterfaceVariableInfoMap"*, i8 zeroext) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2rx12_GLOBAL__N_134SaveShaderInterfaceVariableXfbInfoERKNS_30ShaderInterfaceVariableXfbInfoEPN2gl18BinaryOutputStreamE(%"struct.rx::ShaderInterfaceVariableXfbInfo"* nocapture readonly dereferenceable(56), %"class.gl::BinaryOutputStream"*) unnamed_addr #3 {
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %0, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #15
  store i32 %13, i32* %11, align 4
  %15 = getelementptr inbounds %"class.gl::BinaryOutputStream", %"class.gl::BinaryOutputStream"* %1, i64 0, i32 0
  %16 = getelementptr inbounds %"class.gl::BinaryOutputStream", %"class.gl::BinaryOutputStream"* %1, i64 0, i32 0, i32 0, i32 1
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds i32, i32* %11, i64 1
  %19 = bitcast i32* %18 to i8*
  %20 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"* %15, i8* %17, i8* nonnull %14, i8* %19) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #15
  %21 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %0, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #15
  store i32 %22, i32* %10, align 4
  %24 = load i8*, i8** %16, align 8
  %25 = getelementptr inbounds i32, i32* %10, i64 1
  %26 = bitcast i32* %25 to i8*
  %27 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"* %15, i8* %24, i8* nonnull %23, i8* %26) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #15
  %28 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %0, i64 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #15
  store i32 %29, i32* %9, align 4
  %31 = load i8*, i8** %16, align 8
  %32 = getelementptr inbounds i32, i32* %9, i64 1
  %33 = bitcast i32* %32 to i8*
  %34 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"* %15, i8* %31, i8* nonnull %30, i8* %33) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #15
  %35 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %0, i64 0, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #15
  store i32 %36, i32* %8, align 4
  %38 = load i8*, i8** %16, align 8
  %39 = getelementptr inbounds i32, i32* %8, i64 1
  %40 = bitcast i32* %39 to i8*
  %41 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"* %15, i8* %38, i8* nonnull %37, i8* %40) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #15
  %42 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %0, i64 0, i32 4
  %43 = load i32, i32* %42, align 8
  %44 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44) #15
  store i32 %43, i32* %7, align 4
  %45 = load i8*, i8** %16, align 8
  %46 = getelementptr inbounds i32, i32* %7, i64 1
  %47 = bitcast i32* %46 to i8*
  %48 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"* %15, i8* %45, i8* nonnull %44, i8* %47) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #15
  %49 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %0, i64 0, i32 5
  %50 = load i32, i32* %49, align 4
  %51 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #15
  store i32 %50, i32* %6, align 4
  %52 = load i8*, i8** %16, align 8
  %53 = getelementptr inbounds i32, i32* %6, i64 1
  %54 = bitcast i32* %53 to i8*
  %55 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"* %15, i8* %52, i8* nonnull %51, i8* %54) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #15
  %56 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %0, i64 0, i32 6
  %57 = load i32, i32* %56, align 8
  %58 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %58) #15
  store i32 %57, i32* %5, align 4
  %59 = load i8*, i8** %16, align 8
  %60 = getelementptr inbounds i32, i32* %5, i64 1
  %61 = bitcast i32* %60 to i8*
  %62 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"* %15, i8* %59, i8* nonnull %58, i8* %61) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %58) #15
  %63 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %0, i64 0, i32 7
  %64 = load i32, i32* %63, align 4
  %65 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65) #15
  store i32 %64, i32* %4, align 4
  %66 = load i8*, i8** %16, align 8
  %67 = getelementptr inbounds i32, i32* %4, i64 1
  %68 = bitcast i32* %67 to i8*
  %69 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"* %15, i8* %66, i8* nonnull %65, i8* %68) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65) #15
  %70 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %0, i64 0, i32 8
  %71 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %0, i64 0, i32 8, i32 0, i32 1
  %72 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::vector.1432"* %70 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = sub i64 %73, %75
  %77 = sdiv exact i64 %76, 56
  %78 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #15
  store i64 %77, i64* %3, align 8
  %79 = load i8*, i8** %16, align 8
  %80 = getelementptr inbounds i64, i64* %3, i64 1
  %81 = bitcast i64* %80 to i8*
  %82 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"* %15, i8* %79, i8* nonnull %78, i8* %81) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #15
  %83 = getelementptr inbounds %"class.std::__1::vector.1432", %"class.std::__1::vector.1432"* %70, i64 0, i32 0, i32 0
  %84 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %83, align 8
  %85 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %71, align 8
  %86 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %84, %85
  br i1 %86, label %87, label %88

87:                                               ; preds = %88, %2
  ret void

88:                                               ; preds = %2, %88
  %89 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %90, %88 ], [ %84, %2 ]
  call fastcc void @_ZN2rx12_GLOBAL__N_134SaveShaderInterfaceVariableXfbInfoERKNS_30ShaderInterfaceVariableXfbInfoEPN2gl18BinaryOutputStreamE(%"struct.rx::ShaderInterfaceVariableXfbInfo"* dereferenceable(56) %89, %"class.gl::BinaryOutputStream"* %1)
  %90 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %89, i64 1
  %91 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %90, %85
  br i1 %91, label %87, label %88
}

declare void @_ZN2rx30ShaderInterfaceVariableInfoMap5clearEv(%"class.rx::ShaderInterfaceVariableInfoMap"*) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.rx::ProgramVk"* @_ZNK2rx19ProgramExecutableVk16getShaderProgramERKN2gl5StateENS1_10ShaderTypeE(%"class.rx::ProgramExecutableVk"* nocapture readonly, %"class.gl::State"* nocapture readonly dereferenceable(12296), i8 zeroext) local_unnamed_addr #10 align 2 {
  %4 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 19
  %5 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %4, align 8
  %6 = icmp eq %"class.rx::ProgramVk"* %5, null
  br i1 %6, label %28, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %5, i64 0, i32 0, i32 1
  %9 = load %"class.gl::ProgramState"*, %"class.gl::ProgramState"** %8, align 8
  %10 = getelementptr inbounds %"class.gl::ProgramState", %"class.gl::ProgramState"* %9, i64 0, i32 23, i32 0
  %11 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %10, align 8
  %12 = icmp eq i8 %2, 5
  br i1 %12, label %13, label %17

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %11, i64 0, i32 3, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = and i8 %15, 32
  br label %24

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %11, i64 0, i32 2, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %2 to i32
  %21 = shl i32 1, %20
  %22 = trunc i32 %21 to i8
  %23 = and i8 %19, %22
  br label %24

24:                                               ; preds = %13, %17
  %25 = phi i8 [ %16, %13 ], [ %23, %17 ]
  %26 = icmp eq i8 %25, 0
  %27 = select i1 %26, %"class.rx::ProgramVk"* null, %"class.rx::ProgramVk"* %5
  ret %"class.rx::ProgramVk"* %27

28:                                               ; preds = %3
  %29 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 20
  %30 = load %"class.rx::ProgramPipelineVk"*, %"class.rx::ProgramPipelineVk"** %29, align 8
  %31 = icmp eq %"class.rx::ProgramPipelineVk"* %30, null
  br i1 %31, label %43, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %1, i64 0, i32 64, i32 0, i32 1
  %34 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %33, align 8
  %35 = zext i8 %2 to i64
  %36 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %34, i64 0, i32 5, i32 2, i32 0, i32 0, i64 %35
  %37 = load %"class.gl::Program"*, %"class.gl::Program"** %36, align 8
  %38 = icmp eq %"class.gl::Program"* %37, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %37, i64 0, i32 5
  %41 = bitcast %"class.rx::ProgramImpl"** %40 to %"class.rx::ProgramVk"**
  %42 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %41, align 8
  br label %43

43:                                               ; preds = %28, %39, %32
  %44 = phi %"class.rx::ProgramVk"* [ %42, %39 ], [ null, %32 ], [ null, %28 ]
  ret %"class.rx::ProgramVk"* %44
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx19ProgramExecutableVk19fillProgramStateMapEPKNS_9ContextVkEPN5angle13PackedEnumMapIN2gl10ShaderTypeEPKNS6_12ProgramStateELm6EEE(%"class.rx::ProgramExecutableVk"* nocapture readonly, %"class.rx::ContextVk"*, %"class.angle::PackedEnumMap.1447"*) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 19
  %5 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %4, align 8
  %6 = icmp eq %"class.rx::ProgramVk"* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZN2rx9ProgramVk19fillProgramStateMapEPN5angle13PackedEnumMapIN2gl10ShaderTypeEPKNS3_12ProgramStateELm6EEE(%"class.rx::ProgramVk"* nonnull %5, %"class.angle::PackedEnumMap.1447"* %2) #15
  br label %13

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 20
  %10 = load %"class.rx::ProgramPipelineVk"*, %"class.rx::ProgramPipelineVk"** %9, align 8
  %11 = icmp eq %"class.rx::ProgramPipelineVk"* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call void @_ZN2rx17ProgramPipelineVk19fillProgramStateMapEPKNS_9ContextVkEPN5angle13PackedEnumMapIN2gl10ShaderTypeEPKNS6_12ProgramStateELm6EEE(%"class.rx::ProgramPipelineVk"* nonnull %10, %"class.rx::ContextVk"* %1, %"class.angle::PackedEnumMap.1447"* %2) #15
  br label %13

13:                                               ; preds = %8, %12, %7
  ret void
}

declare void @_ZN2rx9ProgramVk19fillProgramStateMapEPN5angle13PackedEnumMapIN2gl10ShaderTypeEPKNS3_12ProgramStateELm6EEE(%"class.rx::ProgramVk"*, %"class.angle::PackedEnumMap.1447"*) local_unnamed_addr #6

declare void @_ZN2rx17ProgramPipelineVk19fillProgramStateMapEPKNS_9ContextVkEPN5angle13PackedEnumMapIN2gl10ShaderTypeEPKNS6_12ProgramStateELm6EEE(%"class.rx::ProgramPipelineVk"*, %"class.rx::ContextVk"*, %"class.angle::PackedEnumMap.1447"*) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(1728) %"class.gl::ProgramExecutable"* @_ZN2rx19ProgramExecutableVk15getGlExecutableEv(%"class.rx::ProgramExecutableVk"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 19
  %3 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %2, align 8
  %4 = icmp eq %"class.rx::ProgramVk"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %3, i64 0, i32 0, i32 1
  %7 = load %"class.gl::ProgramState"*, %"class.gl::ProgramState"** %6, align 8
  %8 = getelementptr inbounds %"class.gl::ProgramState", %"class.gl::ProgramState"* %7, i64 0, i32 23, i32 0
  br label %16

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 20
  %11 = bitcast %"class.rx::ProgramPipelineVk"** %10 to %"class.rx::ProgramPipelineImpl"**
  %12 = load %"class.rx::ProgramPipelineImpl"*, %"class.rx::ProgramPipelineImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.rx::ProgramPipelineImpl", %"class.rx::ProgramPipelineImpl"* %12, i64 0, i32 1
  %14 = load %"class.gl::ProgramPipelineState"*, %"class.gl::ProgramPipelineState"** %13, align 8
  %15 = getelementptr inbounds %"class.gl::ProgramPipelineState", %"class.gl::ProgramPipelineState"* %14, i64 0, i32 5
  br label %16

16:                                               ; preds = %9, %5
  %17 = phi %"class.gl::ProgramExecutable"** [ %8, %5 ], [ %15, %9 ]
  %18 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %17, align 8
  ret %"class.gl::ProgramExecutable"* %18
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN2rx26GetInterfaceBlockArraySizeERKNSt3__16vectorIN2gl14InterfaceBlockENS0_9allocatorIS3_EEEEj(%"class.std::__1::vector.194"* nocapture readonly dereferenceable(24), i32) local_unnamed_addr #10 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %0, i64 0, i32 0, i32 0
  %5 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %4, align 8
  %6 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %5, i64 %3, i32 3
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %30, label %9

9:                                                ; preds = %2
  %10 = ptrtoint %"struct.gl::InterfaceBlock"* %5 to i64
  %11 = add i32 %1, 1
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.gl::InterfaceBlock"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %10
  %17 = sdiv exact i64 %16, 112
  %18 = icmp ugt i64 %17, %12
  br i1 %18, label %19, label %30

19:                                               ; preds = %9, %25
  %20 = phi i64 [ %28, %25 ], [ %12, %9 ]
  %21 = phi i32 [ %26, %25 ], [ 1, %9 ]
  %22 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %5, i64 %20, i32 5
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, %21
  br i1 %24, label %25, label %30

25:                                               ; preds = %19
  %26 = add i32 %21, 1
  %27 = add i32 %26, %1
  %28 = zext i32 %27 to i64
  %29 = icmp ugt i64 %17, %28
  br i1 %29, label %19, label %30

30:                                               ; preds = %19, %25, %9, %2
  %31 = phi i32 [ 1, %2 ], [ 1, %9 ], [ %21, %19 ], [ %26, %25 ]
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx19ProgramExecutableVk31allocUniformAndXfbDescriptorSetEPNS_9ContextVkERKNS_2vk28UniformsAndXfbDescriptorDescEPb(%"class.rx::ProgramExecutableVk"*, %"class.rx::ContextVk"*, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* dereferenceable(40), i8* nocapture) local_unnamed_addr #3 align 2 {
  %5 = alloca i8, align 1
  %6 = getelementptr inbounds %"class.rx::vk::UniformsAndXfbDescriptorDesc", %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %2, i64 0, i32 1, i32 0, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 4, i32 0
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 5
  %10 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  %11 = tail call { i8*, %"union.absl::container_internal::map_slot_type.812"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE4findIS5_EENSK_8iteratorERSH_(%"class.absl::container_internal::raw_hash_set.811"* %10, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* dereferenceable(40) %2) #15
  %12 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.812"* } %11, 0
  %13 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.812"* } %11, 1
  %14 = icmp eq i8* %12, null
  br i1 %14, label %178, label %15

15:                                               ; preds = %4
  %16 = load i8, i8* %12, align 1
  %17 = icmp sgt i8 %16, -1
  br i1 %17, label %19, label %18, !prof !6

18:                                               ; preds = %15
  tail call void @llvm.trap() #15
  unreachable

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %13, i64 0, i32 0, i32 1
  %21 = bitcast %struct.VkDescriptorSet_T** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, 1
  store i64 %25, i64* %23, align 8
  store i8 0, i8* %3, align 1
  %26 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 1, i32 0, i32 0, i64 1
  %27 = bitcast %struct.VkDescriptorSet_T** %26 to i64*
  store i64 %22, i64* %27, align 8
  %28 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 10, i32 0, i32 0, i64 1, i32 0
  %29 = load %"class.rx::vk::RefCounted"*, %"class.rx::vk::RefCounted"** %28, align 8
  %30 = getelementptr inbounds %"class.rx::vk::RefCounted", %"class.rx::vk::RefCounted"* %29, i64 0, i32 1, i32 0, i32 1, i32 0
  %31 = load %"struct.rx::vk::ResourceUse"*, %"struct.rx::vk::ResourceUse"** %30, align 8
  %32 = ptrtoint %"struct.rx::vk::ResourceUse"* %31 to i64
  %33 = getelementptr inbounds %"struct.rx::vk::ResourceUse", %"struct.rx::vk::ResourceUse"* %31, i64 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = add i32 %34, 1
  store i32 %35, i32* %33, align 8
  %36 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 74, i32 1
  %37 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 74, i32 1, i32 0, i32 1
  %38 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %37, align 8
  %39 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 74, i32 1, i32 0, i32 2, i32 0, i32 0
  %40 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %39, align 8
  %41 = icmp ult %"class.rx::vk::SharedResourceUse"* %38, %40
  %42 = ptrtoint %"class.rx::vk::SharedResourceUse"* %40 to i64
  br i1 %41, label %43, label %48

43:                                               ; preds = %19
  %44 = bitcast %"class.rx::vk::SharedResourceUse"* %38 to i64*
  store i64 %32, i64* %44, align 8
  %45 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %38, i64 1
  %46 = ptrtoint %"class.rx::vk::SharedResourceUse"* %45 to i64
  %47 = bitcast %"class.rx::vk::SharedResourceUse"** %37 to i64*
  store i64 %46, i64* %47, align 8
  br label %221

48:                                               ; preds = %19
  %49 = ptrtoint %"class.rx::vk::SharedResourceUse"* %38 to i64
  %50 = bitcast %"class.rx::vk::SharedResourceUse"** %37 to i64*
  %51 = bitcast %"class.std::__1::vector.1085"* %36 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %49, %52
  %54 = ashr exact i64 %53, 3
  %55 = add nsw i64 %54, 1
  %56 = icmp ugt i64 %55, 2305843009213693951
  br i1 %56, label %57, label %59

57:                                               ; preds = %48
  %58 = bitcast %"class.std::__1::vector.1085"* %36 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %58) #21
  unreachable

59:                                               ; preds = %48
  %60 = bitcast %"class.rx::vk::SharedResourceUse"** %39 to i64*
  %61 = sub i64 %42, %52
  %62 = ashr exact i64 %61, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %72

64:                                               ; preds = %59
  %65 = ashr exact i64 %61, 2
  %66 = icmp ult i64 %65, %55
  %67 = select i1 %66, i64 %55, i64 %65
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %64
  %70 = icmp ugt i64 %67, 2305843009213693951
  br i1 %70, label %71, label %72

71:                                               ; preds = %69
  tail call void @abort() #21
  unreachable

72:                                               ; preds = %69, %59
  %73 = phi i64 [ %67, %69 ], [ 2305843009213693951, %59 ]
  %74 = shl i64 %73, 3
  %75 = tail call i8* @_Znwm(i64 %74) #20
  %76 = bitcast i8* %75 to %"class.rx::vk::SharedResourceUse"*
  br label %77

77:                                               ; preds = %72, %64
  %78 = phi i64 [ %73, %72 ], [ 0, %64 ]
  %79 = phi %"class.rx::vk::SharedResourceUse"* [ %76, %72 ], [ null, %64 ]
  %80 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %79, i64 %54
  %81 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %79, i64 %78
  %82 = ptrtoint %"class.rx::vk::SharedResourceUse"* %81 to i64
  %83 = bitcast %"class.rx::vk::SharedResourceUse"* %80 to i64*
  store i64 %32, i64* %83, align 8
  %84 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %80, i64 1
  %85 = ptrtoint %"class.rx::vk::SharedResourceUse"* %84 to i64
  %86 = getelementptr inbounds %"class.std::__1::vector.1085", %"class.std::__1::vector.1085"* %36, i64 0, i32 0, i32 0
  %87 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %86, align 8
  %88 = ptrtoint %"class.rx::vk::SharedResourceUse"* %87 to i64
  %89 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %37, align 8
  %90 = icmp eq %"class.rx::vk::SharedResourceUse"* %89, %87
  br i1 %90, label %171, label %91

91:                                               ; preds = %77
  %92 = getelementptr %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %89, i64 -1, i32 0
  %93 = ptrtoint %"struct.rx::vk::ResourceUse"** %92 to i64
  %94 = sub i64 %93, %88
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %91, %99
  %100 = phi %"class.rx::vk::SharedResourceUse"* [ %103, %99 ], [ %80, %91 ]
  %101 = phi %"class.rx::vk::SharedResourceUse"* [ %104, %99 ], [ %89, %91 ]
  %102 = phi i64 [ %109, %99 ], [ %97, %91 ]
  %103 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %100, i64 -1
  %104 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %101, i64 -1
  %105 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %104, i64 0, i32 0
  %106 = bitcast %"class.rx::vk::SharedResourceUse"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.rx::vk::SharedResourceUse"* %103 to i64*
  store i64 %107, i64* %108, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %105, align 8
  %109 = add i64 %102, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %99, !llvm.loop !9

111:                                              ; preds = %99, %91
  %112 = phi %"class.rx::vk::SharedResourceUse"* [ undef, %91 ], [ %103, %99 ]
  %113 = phi %"class.rx::vk::SharedResourceUse"* [ %80, %91 ], [ %103, %99 ]
  %114 = phi %"class.rx::vk::SharedResourceUse"* [ %89, %91 ], [ %104, %99 ]
  %115 = icmp ult i64 %94, 56
  br i1 %115, label %168, label %116

116:                                              ; preds = %111, %116
  %117 = phi %"class.rx::vk::SharedResourceUse"* [ %161, %116 ], [ %113, %111 ]
  %118 = phi %"class.rx::vk::SharedResourceUse"* [ %162, %116 ], [ %114, %111 ]
  %119 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %117, i64 -1
  %120 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %118, i64 -1
  %121 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %120, i64 0, i32 0
  %122 = bitcast %"class.rx::vk::SharedResourceUse"* %120 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.rx::vk::SharedResourceUse"* %119 to i64*
  store i64 %123, i64* %124, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %121, align 8
  %125 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %117, i64 -2
  %126 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %118, i64 -2
  %127 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %126, i64 0, i32 0
  %128 = bitcast %"class.rx::vk::SharedResourceUse"* %126 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.rx::vk::SharedResourceUse"* %125 to i64*
  store i64 %129, i64* %130, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %127, align 8
  %131 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %117, i64 -3
  %132 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %118, i64 -3
  %133 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %132, i64 0, i32 0
  %134 = bitcast %"class.rx::vk::SharedResourceUse"* %132 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.rx::vk::SharedResourceUse"* %131 to i64*
  store i64 %135, i64* %136, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %133, align 8
  %137 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %117, i64 -4
  %138 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %118, i64 -4
  %139 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %138, i64 0, i32 0
  %140 = bitcast %"class.rx::vk::SharedResourceUse"* %138 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.rx::vk::SharedResourceUse"* %137 to i64*
  store i64 %141, i64* %142, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %139, align 8
  %143 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %117, i64 -5
  %144 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %118, i64 -5
  %145 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %144, i64 0, i32 0
  %146 = bitcast %"class.rx::vk::SharedResourceUse"* %144 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %"class.rx::vk::SharedResourceUse"* %143 to i64*
  store i64 %147, i64* %148, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %145, align 8
  %149 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %117, i64 -6
  %150 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %118, i64 -6
  %151 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %150, i64 0, i32 0
  %152 = bitcast %"class.rx::vk::SharedResourceUse"* %150 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"class.rx::vk::SharedResourceUse"* %149 to i64*
  store i64 %153, i64* %154, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %151, align 8
  %155 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %117, i64 -7
  %156 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %118, i64 -7
  %157 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %156, i64 0, i32 0
  %158 = bitcast %"class.rx::vk::SharedResourceUse"* %156 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.rx::vk::SharedResourceUse"* %155 to i64*
  store i64 %159, i64* %160, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %157, align 8
  %161 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %117, i64 -8
  %162 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %118, i64 -8
  %163 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %162, i64 0, i32 0
  %164 = bitcast %"class.rx::vk::SharedResourceUse"* %162 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = bitcast %"class.rx::vk::SharedResourceUse"* %161 to i64*
  store i64 %165, i64* %166, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %163, align 8
  %167 = icmp eq %"class.rx::vk::SharedResourceUse"* %162, %87
  br i1 %167, label %168, label %116

168:                                              ; preds = %116, %111
  %169 = phi %"class.rx::vk::SharedResourceUse"* [ %112, %111 ], [ %161, %116 ]
  %170 = load i64, i64* %51, align 8
  br label %171

171:                                              ; preds = %77, %168
  %172 = phi %"class.rx::vk::SharedResourceUse"* [ %169, %168 ], [ %80, %77 ]
  %173 = phi i64 [ %170, %168 ], [ %88, %77 ]
  %174 = ptrtoint %"class.rx::vk::SharedResourceUse"* %172 to i64
  store i64 %174, i64* %51, align 8
  store i64 %85, i64* %50, align 8
  store i64 %82, i64* %60, align 8
  %175 = icmp eq i64 %173, 0
  br i1 %175, label %221, label %176

176:                                              ; preds = %171
  %177 = inttoptr i64 %173 to i8*
  tail call void @_ZdlPv(i8* %177) #20
  br label %221

178:                                              ; preds = %4
  %179 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 5, i32 0, i32 1, i32 1
  %180 = load i64, i64* %179, align 8
  %181 = add i64 %180, 1
  store i64 %181, i64* %179, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #15
  store i8 -86, i8* %5, align 1
  %182 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 11, i32 0, i32 0, i64 1
  %183 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 9, i32 0, i32 0, i64 1, i32 0
  %184 = load %"class.rx::vk::RefCounted.863"*, %"class.rx::vk::RefCounted.863"** %183, align 8
  %185 = getelementptr inbounds %"class.rx::vk::RefCounted.863", %"class.rx::vk::RefCounted.863"* %184, i64 0, i32 1, i32 0, i32 0
  %186 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 10, i32 0, i32 0, i64 1
  %187 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 1, i32 0, i32 0, i64 1
  %188 = call i32 @_ZN2rx2vk21DynamicDescriptorPool22allocateSetsAndGetInfoEPNS_9ContextVkEPKP23VkDescriptorSetLayout_TjPNS0_14BindingPointerINS0_20DescriptorPoolHelperEEEPP17VkDescriptorSet_TPb(%"class.rx::vk::DynamicDescriptorPool"* %182, %"class.rx::ContextVk"* %1, %struct.VkDescriptorSetLayout_T** %185, i32 1, %"class.rx::vk::BindingPointer.866"* %186, %struct.VkDescriptorSet_T** %187, i8* nonnull %5) #15
  %189 = icmp eq i32 %188, 1
  br i1 %189, label %219, label %190

190:                                              ; preds = %178
  %191 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 2, i32 0, i32 0, i64 1
  store %struct.VkDescriptorSet_T* null, %struct.VkDescriptorSet_T** %191, align 8
  %192 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i64 1
  %193 = load i32, i32* %192, align 4
  %194 = add i32 %193, 1
  store i32 %194, i32* %192, align 4
  %195 = load i8, i8* %5, align 1, !range !2
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %200, label %197

197:                                              ; preds = %190
  %198 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %199 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %198, align 8
  call void @_ZN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EE7destroyEPNS_10RendererVkE(%"class.rx::DescriptorSetCache"* %9, %"class.rx::RendererVk"* %199) #15
  br label %200

200:                                              ; preds = %190, %197
  %201 = bitcast %struct.VkDescriptorSet_T** %187 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE22find_or_prepare_insertIS5_EENSG_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.811"* %10, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* dereferenceable(40) %2) #15, !noalias !11
  %204 = extractvalue { i64, i8 } %203, 0
  %205 = extractvalue { i64, i8 } %203, 1
  %206 = and i8 %205, 1
  %207 = icmp eq i8 %206, 0
  br i1 %207, label %214, label %208

208:                                              ; preds = %200
  %209 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 5, i32 1, i32 0, i32 0, i32 1
  %210 = load %"union.absl::container_internal::map_slot_type.812"*, %"union.absl::container_internal::map_slot_type.812"** %209, align 8, !noalias !11
  %211 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %210, i64 %204, i32 0, i32 0
  call void @_ZN2rx2vk28UniformsAndXfbDescriptorDescC1ERKS1_(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* %211, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* dereferenceable(40) %2) #15, !noalias !11
  %212 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %210, i64 %204, i32 0, i32 1
  %213 = bitcast %struct.VkDescriptorSet_T** %212 to i64*
  store i64 %202, i64* %213, align 8, !noalias !11
  br label %214

214:                                              ; preds = %200, %208
  %215 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.811", %"class.absl::container_internal::raw_hash_set.811"* %10, i64 0, i32 0
  %216 = load i8*, i8** %215, align 8, !noalias !11
  %217 = getelementptr inbounds i8, i8* %216, i64 %204
  %218 = icmp ne i8* %217, null
  call void @llvm.assume(i1 %218) #15, !noalias !11
  store i8 1, i8* %3, align 1
  br label %219

219:                                              ; preds = %178, %214
  %220 = phi i32 [ 0, %214 ], [ 1, %178 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #15
  br label %221

221:                                              ; preds = %176, %171, %43, %219
  %222 = phi i32 [ %220, %219 ], [ 0, %43 ], [ 0, %171 ], [ 0, %176 ]
  ret i32 %222
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx19ProgramExecutableVk31allocateDescriptorSetAndGetInfoEPNS_9ContextVkENS_18DescriptorSetIndexEPb(%"class.rx::ProgramExecutableVk"*, %"class.rx::ContextVk"*, i32, i8*) local_unnamed_addr #3 align 2 {
  %5 = zext i32 %2 to i64
  %6 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 11, i32 0, i32 0, i64 %5
  %7 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 9, i32 0, i32 0, i64 %5, i32 0
  %8 = load %"class.rx::vk::RefCounted.863"*, %"class.rx::vk::RefCounted.863"** %7, align 8
  %9 = getelementptr inbounds %"class.rx::vk::RefCounted.863", %"class.rx::vk::RefCounted.863"* %8, i64 0, i32 1, i32 0, i32 0
  %10 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 10, i32 0, i32 0, i64 %5
  %11 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 1, i32 0, i32 0, i64 %5
  %12 = tail call i32 @_ZN2rx2vk21DynamicDescriptorPool22allocateSetsAndGetInfoEPNS_9ContextVkEPKP23VkDescriptorSetLayout_TjPNS0_14BindingPointerINS0_20DescriptorPoolHelperEEEPP17VkDescriptorSet_TPb(%"class.rx::vk::DynamicDescriptorPool"* %6, %"class.rx::ContextVk"* %1, %struct.VkDescriptorSetLayout_T** %9, i32 1, %"class.rx::vk::BindingPointer.866"* %10, %struct.VkDescriptorSet_T** %11, i8* %3) #15
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %19, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 2, i32 0, i32 0, i64 %5
  store %struct.VkDescriptorSet_T* null, %struct.VkDescriptorSet_T** %15, align 8
  %16 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i64 %5
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, 1
  store i32 %18, i32* %16, align 4
  br label %19

19:                                               ; preds = %4, %14
  %20 = phi i32 [ 0, %14 ], [ 1, %4 ]
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx19ProgramExecutableVk21allocateDescriptorSetEPNS_9ContextVkENS_18DescriptorSetIndexE(%"class.rx::ProgramExecutableVk"*, %"class.rx::ContextVk"*, i32) local_unnamed_addr #3 align 2 {
  %4 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #15
  store i8 -86, i8* %4, align 1
  %5 = zext i32 %2 to i64
  %6 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 11, i32 0, i32 0, i64 %5
  %7 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 9, i32 0, i32 0, i64 %5, i32 0
  %8 = load %"class.rx::vk::RefCounted.863"*, %"class.rx::vk::RefCounted.863"** %7, align 8
  %9 = getelementptr inbounds %"class.rx::vk::RefCounted.863", %"class.rx::vk::RefCounted.863"* %8, i64 0, i32 1, i32 0, i32 0
  %10 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 10, i32 0, i32 0, i64 %5
  %11 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 1, i32 0, i32 0, i64 %5
  %12 = call i32 @_ZN2rx2vk21DynamicDescriptorPool22allocateSetsAndGetInfoEPNS_9ContextVkEPKP23VkDescriptorSetLayout_TjPNS0_14BindingPointerINS0_20DescriptorPoolHelperEEEPP17VkDescriptorSet_TPb(%"class.rx::vk::DynamicDescriptorPool"* %6, %"class.rx::ContextVk"* %1, %struct.VkDescriptorSetLayout_T** %9, i32 1, %"class.rx::vk::BindingPointer.866"* %10, %struct.VkDescriptorSet_T** %11, i8* nonnull %4) #15
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %19, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 2, i32 0, i32 0, i64 %5
  store %struct.VkDescriptorSet_T* null, %struct.VkDescriptorSet_T** %15, align 8
  %16 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i64 %5
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, 1
  store i32 %18, i32* %16, align 4
  br label %19

19:                                               ; preds = %3, %14
  %20 = phi i32 [ 0, %14 ], [ 1, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #15
  ret i32 %20
}

declare i32 @_ZN2rx2vk21DynamicDescriptorPool22allocateSetsAndGetInfoEPNS_9ContextVkEPKP23VkDescriptorSetLayout_TjPNS0_14BindingPointerINS0_20DescriptorPoolHelperEEEPP17VkDescriptorSet_TPb(%"class.rx::vk::DynamicDescriptorPool"*, %"class.rx::ContextVk"*, %struct.VkDescriptorSetLayout_T**, i32, %"class.rx::vk::BindingPointer.866"*, %struct.VkDescriptorSet_T**, i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx19ProgramExecutableVk34addInterfaceBlockDescriptorSetDescERKNSt3__16vectorIN2gl14InterfaceBlockENS1_9allocatorIS4_EEEENS3_10ShaderTypeE16VkDescriptorTypePNS_2vk23DescriptorSetLayoutDescE(%"class.rx::ProgramExecutableVk"*, %"class.std::__1::vector.194"* nocapture readonly dereferenceable(24), i8 zeroext, i32, %"class.rx::vk::DescriptorSetLayoutDesc"*) local_unnamed_addr #3 align 2 {
  %6 = alloca %"struct.gl::InterfaceBlock", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %1, i64 0, i32 0, i32 1
  %9 = bitcast %"struct.gl::InterfaceBlock"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.194"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %43, label %14

14:                                               ; preds = %5
  %15 = bitcast %"struct.gl::InterfaceBlock"* %6 to i8*
  %16 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %1, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %6, i64 0, i32 0
  %18 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %6, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %6, i64 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %21 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %6, i64 0, i32 2
  %22 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %23 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %6, i64 0, i32 3
  %24 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %6, i64 0, i32 0, i32 0, i32 1, i32 0
  %25 = zext i8 %2 to i32
  %26 = shl i32 1, %25
  %27 = trunc i32 %26 to i8
  %28 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 15
  %35 = zext i8 %2 to i64
  %36 = getelementptr inbounds %"class.angle::PackedEnumMap.1453", %"class.angle::PackedEnumMap.1453"* @_ZN2rx5gl_vkL15kShaderStageMapE, i64 0, i32 0, i32 0, i64 %35
  %37 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  br label %44

43:                                               ; preds = %133, %5
  ret void

44:                                               ; preds = %14, %133
  %45 = phi i64 [ %12, %14 ], [ %136, %133 ]
  %46 = phi i64 [ 0, %14 ], [ %134, %133 ]
  %47 = phi i32 [ 0, %14 ], [ %102, %133 ]
  %48 = inttoptr i64 %45 to %"struct.gl::InterfaceBlock"*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %15) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 112, i1 false)
  %49 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %48, i64 %46, i32 0
  call void @_ZN2gl20ShaderVariableBufferC2ERKS0_(%"struct.gl::ShaderVariableBuffer"* nonnull %17, %"struct.gl::ShaderVariableBuffer"* dereferenceable(48) %49) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %50 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %48, i64 %46, i32 1
  %51 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %44
  %56 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %56, i64 24, i1 false) #15
  br label %62

57:                                               ; preds = %44
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %48, i64 %46, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %19, i8* %59, i64 %61) #15
  br label %62

62:                                               ; preds = %57, %55
  %63 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %48, i64 %46, i32 2
  %64 = bitcast %"class.std::__1::basic_string"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %62
  %69 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %69, i64 24, i1 false) #15
  br label %75

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  %73 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %48, i64 %46, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %21, i8* %72, i64 %74) #15
  br label %75

75:                                               ; preds = %68, %70
  %76 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %48, i64 %46, i32 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %76, i64 12, i1 false) #15
  %77 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %16, align 8
  %78 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %77, i64 %46, i32 3
  %79 = load i8, i8* %78, align 8, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %100, label %81

81:                                               ; preds = %75
  %82 = ptrtoint %"struct.gl::InterfaceBlock"* %77 to i64
  %83 = add i32 %47, 1
  %84 = zext i32 %83 to i64
  %85 = load i64, i64* %9, align 8
  %86 = sub i64 %85, %82
  %87 = sdiv exact i64 %86, 112
  %88 = icmp ugt i64 %87, %84
  br i1 %88, label %89, label %100

89:                                               ; preds = %81, %95
  %90 = phi i64 [ %98, %95 ], [ %84, %81 ]
  %91 = phi i32 [ %96, %95 ], [ 1, %81 ]
  %92 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %77, i64 %90, i32 5
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, %91
  br i1 %94, label %95, label %100

95:                                               ; preds = %89
  %96 = add i32 %91, 1
  %97 = add i32 %96, %47
  %98 = zext i32 %97 to i64
  %99 = icmp ugt i64 %87, %98
  br i1 %99, label %89, label %100

100:                                              ; preds = %89, %95, %75, %81
  %101 = phi i32 [ 1, %75 ], [ 1, %81 ], [ %96, %95 ], [ %91, %89 ]
  %102 = add i32 %101, %47
  %103 = load i8, i8* %24, align 8
  %104 = and i8 %103, %27
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %123, label %106

106:                                              ; preds = %100
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 24, i1 false)
  %107 = load i8, i8* %31, align 1
  %108 = icmp slt i8 %107, 0
  br i1 %108, label %110, label %109

109:                                              ; preds = %106
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 8 %22, i64 24, i1 false) #15
  br label %113

110:                                              ; preds = %106
  %111 = load i8*, i8** %32, align 8
  %112 = load i64, i64* %33, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %7, i8* %111, i64 %112) #15
  br label %113

113:                                              ; preds = %109, %110
  %114 = call dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx30ShaderInterfaceVariableInfoMap3getEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"* %34, i8 zeroext %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #15
  %115 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %114, i64 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = load i32, i32* %36, align 4
  call void @_ZN2rx2vk23DescriptorSetLayoutDesc6updateEj16VkDescriptorTypejjPKNS0_7SamplerE(%"class.rx::vk::DescriptorSetLayoutDesc"* %4, i32 %116, i32 %3, i32 %101, i32 %117, %"class.rx::vk::Sampler"* null) #15
  %118 = load i8, i8* %38, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %122

120:                                              ; preds = %113
  %121 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %121) #20
  br label %122

122:                                              ; preds = %113, %120
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #15
  br label %123

123:                                              ; preds = %100, %122
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %124 = load i8, i8* %31, align 1
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %126, label %128

126:                                              ; preds = %123
  %127 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %127) #20
  br label %128

128:                                              ; preds = %126, %123
  %129 = load i8, i8* %40, align 1
  %130 = icmp slt i8 %129, 0
  br i1 %130, label %131, label %133

131:                                              ; preds = %128
  %132 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %132) #20
  br label %133

133:                                              ; preds = %128, %131
  call void @_ZN2gl20ShaderVariableBufferD2Ev(%"struct.gl::ShaderVariableBuffer"* nonnull %17) #15
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %15) #15
  %134 = zext i32 %102 to i64
  %135 = load i64, i64* %9, align 8
  %136 = load i64, i64* %11, align 8
  %137 = sub i64 %135, %136
  %138 = sdiv exact i64 %137, 112
  %139 = icmp ugt i64 %138, %134
  br i1 %139, label %44, label %43
}

declare dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx30ShaderInterfaceVariableInfoMap3getEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"*, i8 zeroext, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #6

declare void @_ZN2rx2vk23DescriptorSetLayoutDesc6updateEj16VkDescriptorTypejjPKNS0_7SamplerE(%"class.rx::vk::DescriptorSetLayoutDesc"*, i32, i32, i32, i32, %"class.rx::vk::Sampler"*) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl14InterfaceBlockD2Ev(%"struct.gl::InterfaceBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #20
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #20
  br label %20

20:                                               ; preds = %11, %17
  %21 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %0, i64 0, i32 0
  tail call void @_ZN2gl20ShaderVariableBufferD2Ev(%"struct.gl::ShaderVariableBuffer"* %21) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx19ProgramExecutableVk39addAtomicCounterBufferDescriptorSetDescERKNSt3__16vectorIN2gl20ShaderVariableBufferENS1_9allocatorIS4_EEEENS3_10ShaderTypeEPNS_2vk23DescriptorSetLayoutDescE(%"class.rx::ProgramExecutableVk"*, %"class.std::__1::vector.202"* nocapture readonly dereferenceable(24), i8 zeroext, %"class.rx::vk::DescriptorSetLayoutDesc"*) local_unnamed_addr #3 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %1, i64 0, i32 0, i32 0
  %7 = load %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %1, i64 0, i32 0, i32 1
  %9 = load %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"** %8, align 8
  %10 = icmp eq %"struct.gl::ShaderVariableBuffer"* %7, %9
  br i1 %10, label %61, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #15
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %16 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  %17 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk24kAtomicCountersBlockNameE, i64 0, i64 0)) #15
  %18 = icmp ugt i64 %17, -17
  br i1 %18, label %19, label %21

19:                                               ; preds = %11
  %20 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %20) #21
  unreachable

21:                                               ; preds = %11
  %22 = icmp ult i64 %17, 23
  br i1 %22, label %28, label %23

23:                                               ; preds = %21
  %24 = add nuw i64 %17, 16
  %25 = and i64 %24, -16
  %26 = tail call i8* @_Znwm(i64 %25) #20
  store i8* %26, i8** %13, align 8
  %27 = or i64 %25, -9223372036854775808
  store i64 %27, i64* %15, align 8
  store i64 %17, i64* %14, align 8
  br label %33

28:                                               ; preds = %21
  %29 = trunc i64 %17 to i8
  %30 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  store i8 %29, i8* %31, align 1
  %32 = icmp eq i64 %17, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %28, %23
  %34 = phi i8* [ %26, %23 ], [ %12, %28 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk24kAtomicCountersBlockNameE, i64 0, i64 0), i64 %17, i1 false) #15
  br label %35

35:                                               ; preds = %28, %33
  %36 = phi i8* [ %12, %28 ], [ %34, %33 ]
  %37 = getelementptr inbounds i8, i8* %36, i64 %17
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 15
  %39 = call dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx30ShaderInterfaceVariableInfoMap3getEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"* %38, i8 zeroext %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #15
  %40 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %39, i64 0, i32 5, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %2 to i32
  %43 = shl i32 1, %42
  %44 = trunc i32 %43 to i8
  %45 = and i8 %41, %44
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %39, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = zext i8 %2 to i64
  %51 = getelementptr inbounds %"class.angle::PackedEnumMap.1453", %"class.angle::PackedEnumMap.1453"* @_ZN2rx5gl_vkL15kShaderStageMapE, i64 0, i32 0, i32 0, i64 %50
  %52 = load i32, i32* %51, align 4
  call void @_ZN2rx2vk23DescriptorSetLayoutDesc6updateEj16VkDescriptorTypejjPKNS0_7SamplerE(%"class.rx::vk::DescriptorSetLayoutDesc"* %3, i32 %49, i32 7, i32 8, i32 %52, %"class.rx::vk::Sampler"* null) #15
  br label %53

53:                                               ; preds = %35, %47
  %54 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  %59 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %59) #20
  br label %60

60:                                               ; preds = %53, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #15
  br label %61

61:                                               ; preds = %4, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx19ProgramExecutableVk25addImageDescriptorSetDescERKN2gl17ProgramExecutableEPNS_2vk23DescriptorSetLayoutDescE(%"class.rx::ProgramExecutableVk"*, %"class.gl::ProgramExecutable"* dereferenceable(1728), %"class.rx::vk::DescriptorSetLayoutDesc"*) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 55
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 41
  %9 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 42
  %10 = select i1 %7, %"class.std::__1::vector.216"* %9, %"class.std::__1::vector.216"* %8
  %11 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %10, i64 0, i32 0, i32 1
  %12 = bitcast %"struct.gl::ImageBinding"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.216"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %13, %15
  br i1 %16, label %27, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 30, i32 0, i32 0
  %19 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 3
  %22 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 2
  %23 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 15
  %24 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  br label %28

27:                                               ; preds = %203, %3
  ret void

28:                                               ; preds = %17, %203
  %29 = phi i64 [ %15, %17 ], [ %207, %203 ]
  %30 = phi i64 [ 0, %17 ], [ %205, %203 ]
  %31 = phi i32 [ 0, %17 ], [ %204, %203 ]
  %32 = inttoptr i64 %29 to %"struct.gl::ImageBinding"*
  %33 = call i32 @_ZNK2gl17ProgramExecutable29getUniformIndexFromImageIndexEj(%"class.gl::ProgramExecutable"* %1, i32 %31) #15
  %34 = zext i32 %33 to i64
  %35 = load %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #15
  %36 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %35, i64 %34, i32 1, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false)
  call void @_ZN2rx27GlslangGetMappedSamplerNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.std::__1::basic_string"* dereferenceable(24) %36) #15
  %37 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %32, i64 %30, i32 1
  %38 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %32, i64 %30, i32 1, i32 0, i32 1
  %39 = bitcast i32** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector"* %37 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = call zeroext i1 @_ZN2gl38SamplerNameContainsNonZeroArrayElementERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %36) #15
  br i1 %43, label %198, label %44

44:                                               ; preds = %28
  %45 = sub i64 %40, %42
  %46 = lshr exact i64 %45, 2
  %47 = trunc i64 %46 to i32
  %48 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %35, i64 %34, i32 5, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %35, i64 %34, i32 5, i32 0, i32 1
  %51 = load i32*, i32** %50, align 8
  %52 = icmp eq i32* %49, %51
  br i1 %52, label %151, label %53

53:                                               ; preds = %44
  %54 = ptrtoint i32* %49 to i64
  %55 = getelementptr i32, i32* %51, i64 -1
  %56 = ptrtoint i32* %55 to i64
  %57 = sub i64 %56, %54
  %58 = lshr i64 %57, 2
  %59 = add nuw nsw i64 %58, 1
  %60 = icmp ult i64 %59, 8
  br i1 %60, label %61, label %64

61:                                               ; preds = %141, %53
  %62 = phi i32 [ %47, %53 ], [ %149, %141 ]
  %63 = phi i32* [ %49, %53 ], [ %66, %141 ]
  br label %164

64:                                               ; preds = %53
  %65 = and i64 %59, 9223372036854775800
  %66 = getelementptr i32, i32* %49, i64 %65
  %67 = insertelement <4 x i32> <i32 undef, i32 1, i32 1, i32 1>, i32 %47, i32 0
  %68 = add nsw i64 %65, -8
  %69 = lshr exact i64 %68, 3
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = icmp ult i64 %68, 24
  br i1 %72, label %118, label %73

73:                                               ; preds = %64
  %74 = sub nsw i64 %70, %71
  br label %75

75:                                               ; preds = %75, %73
  %76 = phi i64 [ 0, %73 ], [ %115, %75 ]
  %77 = phi <4 x i32> [ %67, %73 ], [ %113, %75 ]
  %78 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %73 ], [ %114, %75 ]
  %79 = phi i64 [ %74, %73 ], [ %116, %75 ]
  %80 = getelementptr i32, i32* %49, i64 %76
  %81 = bitcast i32* %80 to <4 x i32>*
  %82 = load <4 x i32>, <4 x i32>* %81, align 4
  %83 = getelementptr i32, i32* %80, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  %85 = load <4 x i32>, <4 x i32>* %84, align 4
  %86 = mul <4 x i32> %82, %77
  %87 = mul <4 x i32> %85, %78
  %88 = or i64 %76, 8
  %89 = getelementptr i32, i32* %49, i64 %88
  %90 = bitcast i32* %89 to <4 x i32>*
  %91 = load <4 x i32>, <4 x i32>* %90, align 4
  %92 = getelementptr i32, i32* %89, i64 4
  %93 = bitcast i32* %92 to <4 x i32>*
  %94 = load <4 x i32>, <4 x i32>* %93, align 4
  %95 = mul <4 x i32> %91, %86
  %96 = mul <4 x i32> %94, %87
  %97 = or i64 %76, 16
  %98 = getelementptr i32, i32* %49, i64 %97
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4
  %101 = getelementptr i32, i32* %98, i64 4
  %102 = bitcast i32* %101 to <4 x i32>*
  %103 = load <4 x i32>, <4 x i32>* %102, align 4
  %104 = mul <4 x i32> %100, %95
  %105 = mul <4 x i32> %103, %96
  %106 = or i64 %76, 24
  %107 = getelementptr i32, i32* %49, i64 %106
  %108 = bitcast i32* %107 to <4 x i32>*
  %109 = load <4 x i32>, <4 x i32>* %108, align 4
  %110 = getelementptr i32, i32* %107, i64 4
  %111 = bitcast i32* %110 to <4 x i32>*
  %112 = load <4 x i32>, <4 x i32>* %111, align 4
  %113 = mul <4 x i32> %109, %104
  %114 = mul <4 x i32> %112, %105
  %115 = add i64 %76, 32
  %116 = add i64 %79, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %75, !llvm.loop !24

118:                                              ; preds = %75, %64
  %119 = phi <4 x i32> [ undef, %64 ], [ %113, %75 ]
  %120 = phi <4 x i32> [ undef, %64 ], [ %114, %75 ]
  %121 = phi i64 [ 0, %64 ], [ %115, %75 ]
  %122 = phi <4 x i32> [ %67, %64 ], [ %113, %75 ]
  %123 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %64 ], [ %114, %75 ]
  %124 = icmp eq i64 %71, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %118, %125
  %126 = phi i64 [ %138, %125 ], [ %121, %118 ]
  %127 = phi <4 x i32> [ %136, %125 ], [ %122, %118 ]
  %128 = phi <4 x i32> [ %137, %125 ], [ %123, %118 ]
  %129 = phi i64 [ %139, %125 ], [ %71, %118 ]
  %130 = getelementptr i32, i32* %49, i64 %126
  %131 = bitcast i32* %130 to <4 x i32>*
  %132 = load <4 x i32>, <4 x i32>* %131, align 4
  %133 = getelementptr i32, i32* %130, i64 4
  %134 = bitcast i32* %133 to <4 x i32>*
  %135 = load <4 x i32>, <4 x i32>* %134, align 4
  %136 = mul <4 x i32> %132, %127
  %137 = mul <4 x i32> %135, %128
  %138 = add i64 %126, 8
  %139 = add i64 %129, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !26

141:                                              ; preds = %125, %118
  %142 = phi <4 x i32> [ %119, %118 ], [ %136, %125 ]
  %143 = phi <4 x i32> [ %120, %118 ], [ %137, %125 ]
  %144 = mul <4 x i32> %143, %142
  %145 = shufflevector <4 x i32> %144, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %146 = mul <4 x i32> %144, %145
  %147 = shufflevector <4 x i32> %146, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %148 = mul <4 x i32> %146, %147
  %149 = extractelement <4 x i32> %148, i32 0
  %150 = icmp eq i64 %59, %65
  br i1 %150, label %151, label %61

151:                                              ; preds = %164, %141, %44
  %152 = phi i32 [ %47, %44 ], [ %149, %141 ], [ %168, %164 ]
  %153 = load i8, i8* %5, align 4, !range !2
  %154 = icmp eq i8 %153, 0
  %155 = select i1 %154, %"class.angle::BitSetT.141"* %22, %"class.angle::BitSetT.141"* %21
  %156 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %155, i64 0, i32 0
  %157 = load i8, i8* %156, align 1, !noalias !27
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %198, label %159

159:                                              ; preds = %151
  %160 = zext i8 %157 to i32
  %161 = call i32 @llvm.cttz.i32(i32 %160, i1 true) #15, !range !8
  %162 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %35, i64 %34, i32 0, i32 1, i32 0
  %163 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %32, i64 %30, i32 0
  br label %171

164:                                              ; preds = %61, %164
  %165 = phi i32 [ %168, %164 ], [ %62, %61 ]
  %166 = phi i32* [ %169, %164 ], [ %63, %61 ]
  %167 = load i32, i32* %166, align 4
  %168 = mul i32 %167, %165
  %169 = getelementptr inbounds i32, i32* %166, i64 1
  %170 = icmp eq i32* %169, %51
  br i1 %170, label %151, label %164, !llvm.loop !30

171:                                              ; preds = %195, %159
  %172 = phi i8 [ %157, %159 ], [ %193, %195 ]
  %173 = phi i32 [ %161, %159 ], [ %197, %195 ]
  %174 = load i8, i8* %162, align 1
  %175 = shl i32 1, %173
  %176 = trunc i32 %175 to i8
  %177 = and i8 %174, %176
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %191, label %179

179:                                              ; preds = %171
  %180 = zext i32 %173 to i64
  %181 = trunc i32 %173 to i8
  %182 = call zeroext i1 @_ZN2rx26GetImageNameWithoutIndicesEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull %4) #15
  %183 = call dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx30ShaderInterfaceVariableInfoMap3getEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"* %23, i8 zeroext %181, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #15
  %184 = getelementptr inbounds %"class.angle::PackedEnumMap.1453", %"class.angle::PackedEnumMap.1453"* @_ZN2rx5gl_vkL15kShaderStageMapE, i64 0, i32 0, i32 0, i64 %180
  %185 = load i32, i32* %184, align 4
  %186 = load i8, i8* %163, align 8
  %187 = icmp eq i8 %186, 10
  %188 = select i1 %187, i32 5, i32 3
  %189 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %183, i64 0, i32 1
  %190 = load i32, i32* %189, align 4
  call void @_ZN2rx2vk23DescriptorSetLayoutDesc6updateEj16VkDescriptorTypejjPKNS0_7SamplerE(%"class.rx::vk::DescriptorSetLayoutDesc"* %2, i32 %190, i32 %188, i32 %152, i32 %185, %"class.rx::vk::Sampler"* null) #15
  br label %191

191:                                              ; preds = %171, %179
  %192 = xor i8 %176, -1
  %193 = and i8 %172, %192
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %198, label %195

195:                                              ; preds = %191
  %196 = zext i8 %193 to i32
  %197 = call i32 @llvm.cttz.i32(i32 %196, i1 true) #15, !range !8
  br label %171

198:                                              ; preds = %191, %151, %28
  %199 = load i8, i8* %25, align 1
  %200 = icmp slt i8 %199, 0
  br i1 %200, label %201, label %203

201:                                              ; preds = %198
  %202 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %202) #20
  br label %203

203:                                              ; preds = %198, %201
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #15
  %204 = add i32 %31, 1
  %205 = zext i32 %204 to i64
  %206 = load i64, i64* %12, align 8
  %207 = load i64, i64* %14, align 8
  %208 = sub i64 %206, %207
  %209 = ashr exact i64 %208, 5
  %210 = icmp ugt i64 %209, %205
  br i1 %210, label %28, label %27
}

declare i32 @_ZNK2gl17ProgramExecutable29getUniformIndexFromImageIndexEj(%"class.gl::ProgramExecutable"*, i32) local_unnamed_addr #6

declare void @_ZN2rx27GlslangGetMappedSamplerNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #6

declare zeroext i1 @_ZN2gl38SamplerNameContainsNonZeroArrayElementERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #6

declare zeroext i1 @_ZN2rx26GetImageNameWithoutIndicesEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx19ProgramExecutableVk35addInputAttachmentDescriptorSetDescERKN2gl17ProgramExecutableENS1_10ShaderTypeEPNS_2vk23DescriptorSetLayoutDescE(%"class.rx::ProgramExecutableVk"*, %"class.gl::ProgramExecutable"* dereferenceable(1728), i8 zeroext, %"class.rx::vk::DescriptorSetLayoutDesc"*) local_unnamed_addr #3 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = icmp eq i8 %2, 4
  br i1 %6, label %7, label %63

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 30
  %9 = tail call zeroext i1 @_ZNK2gl17ProgramExecutable20usesFramebufferFetchEv(%"class.gl::ProgramExecutable"* %1) #15
  br i1 %9, label %10, label %63

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 39, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 30, i32 0, i32 1
  %15 = bitcast %"struct.gl::LinkedUniform"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.187"* %8 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = sdiv exact i64 %19, 280
  %21 = icmp ugt i64 %20, %13
  br i1 %21, label %24, label %22

22:                                               ; preds = %10
  %23 = bitcast %"class.std::__1::vector.187"* %8 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %23) #21
  unreachable

24:                                               ; preds = %10
  %25 = inttoptr i64 %18 to %"struct.gl::LinkedUniform"*
  %26 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #15
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %25, i64 %13, i32 1, i32 3
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false)
  %32 = load i8, i8* %30, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %24
  %35 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 8 %35, i64 24, i1 false) #15
  br label %41

36:                                               ; preds = %24
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %25, i64 %13, i32 1, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* %38, i64 %40) #15
  br label %41

41:                                               ; preds = %34, %36
  %42 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 15
  %43 = call dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx30ShaderInterfaceVariableInfoMap3getEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"* %42, i8 zeroext 4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #15
  %44 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %43, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %25, i64 %13, i32 1, i32 11
  %47 = load i32, i32* %46, align 4
  %48 = sub i32 %45, %47
  call void @_ZN2rx2vk23DescriptorSetLayoutDesc6updateEj16VkDescriptorTypejjPKNS0_7SamplerE(%"class.rx::vk::DescriptorSetLayoutDesc"* %3, i32 %48, i32 10, i32 1, i32 16, %"class.rx::vk::Sampler"* null) #15
  %49 = add i32 %48, 1
  call void @_ZN2rx2vk23DescriptorSetLayoutDesc6updateEj16VkDescriptorTypejjPKNS0_7SamplerE(%"class.rx::vk::DescriptorSetLayoutDesc"* %3, i32 %49, i32 10, i32 1, i32 16, %"class.rx::vk::Sampler"* null) #15
  %50 = add i32 %48, 2
  call void @_ZN2rx2vk23DescriptorSetLayoutDesc6updateEj16VkDescriptorTypejjPKNS0_7SamplerE(%"class.rx::vk::DescriptorSetLayoutDesc"* %3, i32 %50, i32 10, i32 1, i32 16, %"class.rx::vk::Sampler"* null) #15
  %51 = add i32 %48, 3
  call void @_ZN2rx2vk23DescriptorSetLayoutDesc6updateEj16VkDescriptorTypejjPKNS0_7SamplerE(%"class.rx::vk::DescriptorSetLayoutDesc"* %3, i32 %51, i32 10, i32 1, i32 16, %"class.rx::vk::Sampler"* null) #15
  %52 = add i32 %48, 4
  call void @_ZN2rx2vk23DescriptorSetLayoutDesc6updateEj16VkDescriptorTypejjPKNS0_7SamplerE(%"class.rx::vk::DescriptorSetLayoutDesc"* %3, i32 %52, i32 10, i32 1, i32 16, %"class.rx::vk::Sampler"* null) #15
  %53 = add i32 %48, 5
  call void @_ZN2rx2vk23DescriptorSetLayoutDesc6updateEj16VkDescriptorTypejjPKNS0_7SamplerE(%"class.rx::vk::DescriptorSetLayoutDesc"* %3, i32 %53, i32 10, i32 1, i32 16, %"class.rx::vk::Sampler"* null) #15
  %54 = add i32 %48, 6
  call void @_ZN2rx2vk23DescriptorSetLayoutDesc6updateEj16VkDescriptorTypejjPKNS0_7SamplerE(%"class.rx::vk::DescriptorSetLayoutDesc"* %3, i32 %54, i32 10, i32 1, i32 16, %"class.rx::vk::Sampler"* null) #15
  %55 = add i32 %48, 7
  call void @_ZN2rx2vk23DescriptorSetLayoutDesc6updateEj16VkDescriptorTypejjPKNS0_7SamplerE(%"class.rx::vk::DescriptorSetLayoutDesc"* %3, i32 %55, i32 10, i32 1, i32 16, %"class.rx::vk::Sampler"* null) #15
  %56 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %41
  %61 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %61) #20
  br label %62

62:                                               ; preds = %41, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #15
  br label %63

63:                                               ; preds = %62, %7, %4
  ret void
}

declare zeroext i1 @_ZNK2gl17ProgramExecutable20usesFramebufferFetchEv(%"class.gl::ProgramExecutable"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx19ProgramExecutableVk27addTextureDescriptorSetDescERKN2gl12ProgramStateEPKNSt3__15arrayINS_2vk11TextureUnitELm96EEEPNS7_23DescriptorSetLayoutDescE(%"class.rx::ProgramExecutableVk"*, %"class.gl::ProgramState"* dereferenceable(304), %"struct.std::__1::array.923"* readonly, %"class.rx::vk::DescriptorSetLayoutDesc"*) local_unnamed_addr #3 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.gl::ProgramState", %"class.gl::ProgramState"* %1, i64 0, i32 23, i32 0
  %7 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %6, align 8
  %8 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %7, i64 0, i32 40
  %9 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %7, i64 0, i32 40, i32 0, i32 1
  %10 = bitcast %"struct.gl::SamplerBinding"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.209"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %11, %13
  br i1 %14, label %24, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %7, i64 0, i32 30, i32 0, i32 0
  %17 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 15
  %20 = icmp eq %"struct.std::__1::array.923"* %2, null
  %21 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  br label %25

24:                                               ; preds = %222, %4
  ret void

25:                                               ; preds = %15, %222
  %26 = phi i64 [ %13, %15 ], [ %226, %222 ]
  %27 = phi i64 [ 0, %15 ], [ %224, %222 ]
  %28 = phi i32 [ 0, %15 ], [ %223, %222 ]
  %29 = inttoptr i64 %26 to %"struct.gl::SamplerBinding"*
  %30 = call i32 @_ZNK2gl12ProgramState31getUniformIndexFromSamplerIndexEj(%"class.gl::ProgramState"* %1, i32 %28) #15
  %31 = zext i32 %30 to i64
  %32 = load %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #15
  %33 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %32, i64 %31, i32 1, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  call void @_ZN2rx27GlslangGetMappedSamplerNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.std::__1::basic_string"* dereferenceable(24) %33) #15
  %34 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %29, i64 %27, i32 3
  %35 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %29, i64 %27, i32 3, i32 0, i32 1
  %36 = bitcast i32** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.std::__1::vector"* %34 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = call zeroext i1 @_ZN2gl38SamplerNameContainsNonZeroArrayElementERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %33) #15
  br i1 %40, label %217, label %41

41:                                               ; preds = %25
  %42 = sub i64 %37, %39
  %43 = lshr exact i64 %42, 2
  %44 = trunc i64 %43 to i32
  %45 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %32, i64 %31, i32 5, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %32, i64 %31, i32 5, i32 0, i32 1
  %48 = load i32*, i32** %47, align 8
  %49 = icmp eq i32* %46, %48
  br i1 %49, label %148, label %50

50:                                               ; preds = %41
  %51 = ptrtoint i32* %46 to i64
  %52 = getelementptr i32, i32* %48, i64 -1
  %53 = ptrtoint i32* %52 to i64
  %54 = sub i64 %53, %51
  %55 = lshr i64 %54, 2
  %56 = add nuw nsw i64 %55, 1
  %57 = icmp ult i64 %56, 8
  br i1 %57, label %58, label %61

58:                                               ; preds = %138, %50
  %59 = phi i32 [ %44, %50 ], [ %146, %138 ]
  %60 = phi i32* [ %46, %50 ], [ %63, %138 ]
  br label %166

61:                                               ; preds = %50
  %62 = and i64 %56, 9223372036854775800
  %63 = getelementptr i32, i32* %46, i64 %62
  %64 = insertelement <4 x i32> <i32 undef, i32 1, i32 1, i32 1>, i32 %44, i32 0
  %65 = add nsw i64 %62, -8
  %66 = lshr exact i64 %65, 3
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 24
  br i1 %69, label %115, label %70

70:                                               ; preds = %61
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %112, %72 ]
  %74 = phi <4 x i32> [ %64, %70 ], [ %110, %72 ]
  %75 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %70 ], [ %111, %72 ]
  %76 = phi i64 [ %71, %70 ], [ %113, %72 ]
  %77 = getelementptr i32, i32* %46, i64 %73
  %78 = bitcast i32* %77 to <4 x i32>*
  %79 = load <4 x i32>, <4 x i32>* %78, align 4
  %80 = getelementptr i32, i32* %77, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  %82 = load <4 x i32>, <4 x i32>* %81, align 4
  %83 = mul <4 x i32> %79, %74
  %84 = mul <4 x i32> %82, %75
  %85 = or i64 %73, 8
  %86 = getelementptr i32, i32* %46, i64 %85
  %87 = bitcast i32* %86 to <4 x i32>*
  %88 = load <4 x i32>, <4 x i32>* %87, align 4
  %89 = getelementptr i32, i32* %86, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  %91 = load <4 x i32>, <4 x i32>* %90, align 4
  %92 = mul <4 x i32> %88, %83
  %93 = mul <4 x i32> %91, %84
  %94 = or i64 %73, 16
  %95 = getelementptr i32, i32* %46, i64 %94
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4
  %101 = mul <4 x i32> %97, %92
  %102 = mul <4 x i32> %100, %93
  %103 = or i64 %73, 24
  %104 = getelementptr i32, i32* %46, i64 %103
  %105 = bitcast i32* %104 to <4 x i32>*
  %106 = load <4 x i32>, <4 x i32>* %105, align 4
  %107 = getelementptr i32, i32* %104, i64 4
  %108 = bitcast i32* %107 to <4 x i32>*
  %109 = load <4 x i32>, <4 x i32>* %108, align 4
  %110 = mul <4 x i32> %106, %101
  %111 = mul <4 x i32> %109, %102
  %112 = add i64 %73, 32
  %113 = add i64 %76, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %72, !llvm.loop !32

115:                                              ; preds = %72, %61
  %116 = phi <4 x i32> [ undef, %61 ], [ %110, %72 ]
  %117 = phi <4 x i32> [ undef, %61 ], [ %111, %72 ]
  %118 = phi i64 [ 0, %61 ], [ %112, %72 ]
  %119 = phi <4 x i32> [ %64, %61 ], [ %110, %72 ]
  %120 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %61 ], [ %111, %72 ]
  %121 = icmp eq i64 %68, 0
  br i1 %121, label %138, label %122

122:                                              ; preds = %115, %122
  %123 = phi i64 [ %135, %122 ], [ %118, %115 ]
  %124 = phi <4 x i32> [ %133, %122 ], [ %119, %115 ]
  %125 = phi <4 x i32> [ %134, %122 ], [ %120, %115 ]
  %126 = phi i64 [ %136, %122 ], [ %68, %115 ]
  %127 = getelementptr i32, i32* %46, i64 %123
  %128 = bitcast i32* %127 to <4 x i32>*
  %129 = load <4 x i32>, <4 x i32>* %128, align 4
  %130 = getelementptr i32, i32* %127, i64 4
  %131 = bitcast i32* %130 to <4 x i32>*
  %132 = load <4 x i32>, <4 x i32>* %131, align 4
  %133 = mul <4 x i32> %129, %124
  %134 = mul <4 x i32> %132, %125
  %135 = add i64 %123, 8
  %136 = add i64 %126, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %122, !llvm.loop !33

138:                                              ; preds = %122, %115
  %139 = phi <4 x i32> [ %116, %115 ], [ %133, %122 ]
  %140 = phi <4 x i32> [ %117, %115 ], [ %134, %122 ]
  %141 = mul <4 x i32> %140, %139
  %142 = shufflevector <4 x i32> %141, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %143 = mul <4 x i32> %141, %142
  %144 = shufflevector <4 x i32> %143, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %145 = mul <4 x i32> %143, %144
  %146 = extractelement <4 x i32> %145, i32 0
  %147 = icmp eq i64 %56, %62
  br i1 %147, label %148, label %58

148:                                              ; preds = %166, %138, %41
  %149 = phi i32 [ %44, %41 ], [ %146, %138 ], [ %170, %166 ]
  %150 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %6, align 8
  %151 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %150, i64 0, i32 55
  %152 = load i8, i8* %151, align 4, !range !2
  %153 = icmp eq i8 %152, 0
  %154 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %150, i64 0, i32 3
  %155 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %150, i64 0, i32 2
  %156 = select i1 %153, %"class.angle::BitSetT.141"* %155, %"class.angle::BitSetT.141"* %154
  %157 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %156, i64 0, i32 0
  %158 = load i8, i8* %157, align 1, !noalias !34
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %217, label %160

160:                                              ; preds = %148
  %161 = zext i8 %158 to i32
  %162 = call i32 @llvm.cttz.i32(i32 %161, i1 true) #15, !range !8
  %163 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %32, i64 %31, i32 0, i32 1, i32 0
  %164 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %34, i64 0, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %29, i64 %27, i32 0
  br label %173

166:                                              ; preds = %58, %166
  %167 = phi i32 [ %170, %166 ], [ %59, %58 ]
  %168 = phi i32* [ %171, %166 ], [ %60, %58 ]
  %169 = load i32, i32* %168, align 4
  %170 = mul i32 %169, %167
  %171 = getelementptr inbounds i32, i32* %168, i64 1
  %172 = icmp eq i32* %171, %48
  br i1 %172, label %148, label %166, !llvm.loop !37

173:                                              ; preds = %214, %160
  %174 = phi i8 [ %158, %160 ], [ %212, %214 ]
  %175 = phi i32 [ %162, %160 ], [ %216, %214 ]
  %176 = load i8, i8* %163, align 1
  %177 = shl i32 1, %175
  %178 = trunc i32 %177 to i8
  %179 = and i8 %176, %178
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %210, label %181

181:                                              ; preds = %173
  %182 = zext i32 %175 to i64
  %183 = trunc i32 %175 to i8
  %184 = call dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx30ShaderInterfaceVariableInfoMap3getEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"* %19, i8 zeroext %183, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #15
  %185 = getelementptr inbounds %"class.angle::PackedEnumMap.1453", %"class.angle::PackedEnumMap.1453"* @_ZN2rx5gl_vkL15kShaderStageMapE, i64 0, i32 0, i32 0, i64 %182
  %186 = load i32, i32* %185, align 4
  br i1 %20, label %204, label %187

187:                                              ; preds = %181
  %188 = load i32*, i32** %164, align 8
  %189 = load i32, i32* %188, align 4
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds %"struct.std::__1::array.923", %"struct.std::__1::array.923"* %2, i64 0, i32 0, i64 %190, i32 0
  %192 = load %"class.rx::TextureVk"*, %"class.rx::TextureVk"** %191, align 8
  %193 = getelementptr inbounds %"class.rx::TextureVk", %"class.rx::TextureVk"* %192, i64 0, i32 12
  %194 = load %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"** %193, align 8
  %195 = getelementptr inbounds %"class.rx::vk::ImageHelper", %"class.rx::vk::ImageHelper"* %194, i64 0, i32 21
  %196 = load i64, i64* %195, align 8
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %204, label %198

198:                                              ; preds = %187
  %199 = getelementptr inbounds %"class.rx::TextureVk", %"class.rx::TextureVk"* %192, i64 0, i32 13, i32 0
  %200 = load %"class.rx::vk::RefCounted.954"*, %"class.rx::vk::RefCounted.954"** %199, align 8
  %201 = getelementptr inbounds %"class.rx::vk::RefCounted.954", %"class.rx::vk::RefCounted.954"* %200, i64 0, i32 2, i32 1
  %202 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %184, i64 0, i32 1
  %203 = load i32, i32* %202, align 4
  call void @_ZN2rx2vk23DescriptorSetLayoutDesc6updateEj16VkDescriptorTypejjPKNS0_7SamplerE(%"class.rx::vk::DescriptorSetLayoutDesc"* %3, i32 %203, i32 1, i32 %149, i32 %186, %"class.rx::vk::Sampler"* %201) #15
  br label %210

204:                                              ; preds = %187, %181
  %205 = load i8, i8* %165, align 8
  %206 = icmp eq i8 %205, 10
  %207 = select i1 %206, i32 4, i32 1
  %208 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %184, i64 0, i32 1
  %209 = load i32, i32* %208, align 4
  call void @_ZN2rx2vk23DescriptorSetLayoutDesc6updateEj16VkDescriptorTypejjPKNS0_7SamplerE(%"class.rx::vk::DescriptorSetLayoutDesc"* %3, i32 %209, i32 %207, i32 %149, i32 %186, %"class.rx::vk::Sampler"* null) #15
  br label %210

210:                                              ; preds = %173, %198, %204
  %211 = xor i8 %178, -1
  %212 = and i8 %174, %211
  %213 = icmp eq i8 %212, 0
  br i1 %213, label %217, label %214

214:                                              ; preds = %210
  %215 = zext i8 %212 to i32
  %216 = call i32 @llvm.cttz.i32(i32 %215, i1 true) #15, !range !8
  br label %173

217:                                              ; preds = %210, %148, %25
  %218 = load i8, i8* %22, align 1
  %219 = icmp slt i8 %218, 0
  br i1 %219, label %220, label %222

220:                                              ; preds = %217
  %221 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %221) #20
  br label %222

222:                                              ; preds = %217, %220
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #15
  %223 = add i32 %28, 1
  %224 = zext i32 %223 to i64
  %225 = load i64, i64* %10, align 8
  %226 = load i64, i64* %12, align 8
  %227 = sub i64 %225, %226
  %228 = sdiv exact i64 %227, 40
  %229 = icmp ugt i64 %228, %224
  br i1 %229, label %25, label %24
}

declare i32 @_ZNK2gl12ProgramState31getUniformIndexFromSamplerIndexEj(%"class.gl::ProgramState"*, i32) local_unnamed_addr #6

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx31WriteBufferDescriptorSetBindingERKNS_2vk12BufferHelperEmmP17VkDescriptorSet_T16VkDescriptorTypejjmP22VkDescriptorBufferInfoP20VkWriteDescriptorSet(%"class.rx::vk::BufferHelper"* nocapture readonly dereferenceable(104), i64, i64, %struct.VkDescriptorSet_T*, i32, i32, i32, i64, %struct.VkDescriptorBufferInfo*, %struct.VkWriteDescriptorSet* nocapture) local_unnamed_addr #5 {
  %11 = icmp eq i64 %7, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %10
  %13 = urem i64 %1, %7
  %14 = sub i64 %1, %13
  %15 = add i64 %13, %2
  br label %16

16:                                               ; preds = %10, %12
  %17 = phi i64 [ %15, %12 ], [ %2, %10 ]
  %18 = phi i64 [ %14, %12 ], [ %1, %10 ]
  %19 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %0, i64 0, i32 1, i32 0, i32 0
  %20 = bitcast %struct.VkBuffer_T** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %struct.VkDescriptorBufferInfo* %8 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %struct.VkDescriptorBufferInfo, %struct.VkDescriptorBufferInfo* %8, i64 0, i32 1
  store i64 %18, i64* %23, align 8
  %24 = getelementptr inbounds %struct.VkDescriptorBufferInfo, %struct.VkDescriptorBufferInfo* %8, i64 0, i32 2
  store i64 %17, i64* %24, align 8
  %25 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %9, i64 0, i32 0
  store i32 35, i32* %25, align 8
  %26 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %9, i64 0, i32 1
  store i8* null, i8** %26, align 8
  %27 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %9, i64 0, i32 2
  store %struct.VkDescriptorSet_T* %3, %struct.VkDescriptorSet_T** %27, align 8
  %28 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %9, i64 0, i32 3
  store i32 %5, i32* %28, align 8
  %29 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %9, i64 0, i32 4
  store i32 %6, i32* %29, align 4
  %30 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %9, i64 0, i32 5
  store i32 1, i32* %30, align 8
  %31 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %9, i64 0, i32 6
  store i32 %4, i32* %31, align 4
  %32 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %9, i64 0, i32 7
  store %struct.VkDescriptorImageInfo* null, %struct.VkDescriptorImageInfo** %32, align 8
  %33 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %9, i64 0, i32 8
  store %struct.VkDescriptorBufferInfo* %8, %struct.VkDescriptorBufferInfo** %33, align 8
  %34 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %9, i64 0, i32 9
  store %struct.VkBufferView_T** null, %struct.VkBufferView_T*** %34, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx19ProgramExecutableVk36updateEarlyFragmentTestsOptimizationEPNS_9ContextVkE(%"class.rx::ProgramExecutableVk"* nocapture, %"class.rx::ContextVk"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 0, i32 1
  %4 = load %"class.gl::State"*, %"class.gl::State"** %3, align 8
  %5 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 18, i32 0
  %6 = load i8, i8* %5, align 8
  %7 = and i8 %6, -3
  store i8 %7, i8* %5, align 8
  %8 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %4, i64 0, i32 33
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %49, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 19
  %13 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %12, align 8
  %14 = icmp eq %"class.rx::ProgramVk"* %13, null
  br i1 %14, label %24, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %13, i64 0, i32 0, i32 1
  %17 = load %"class.gl::ProgramState"*, %"class.gl::ProgramState"** %16, align 8
  %18 = getelementptr inbounds %"class.gl::ProgramState", %"class.gl::ProgramState"* %17, i64 0, i32 23, i32 0
  %19 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %18, align 8
  %20 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %19, i64 0, i32 2, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = and i8 %21, 16
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %49, label %42

24:                                               ; preds = %11
  %25 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 20
  %26 = load %"class.rx::ProgramPipelineVk"*, %"class.rx::ProgramPipelineVk"** %25, align 8
  %27 = icmp eq %"class.rx::ProgramPipelineVk"* %26, null
  br i1 %27, label %49, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %4, i64 0, i32 64, i32 0, i32 1
  %30 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %29, align 8
  %31 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %30, i64 0, i32 5, i32 2, i32 0, i32 0, i64 4
  %32 = load %"class.gl::Program"*, %"class.gl::Program"** %31, align 8
  %33 = icmp eq %"class.gl::Program"* %32, null
  br i1 %33, label %49, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %32, i64 0, i32 5
  %36 = bitcast %"class.rx::ProgramImpl"** %35 to %"class.rx::ProgramVk"**
  %37 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %36, align 8
  %38 = icmp eq %"class.rx::ProgramVk"* %37, null
  br i1 %38, label %49, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %37, i64 0, i32 0, i32 1
  %41 = load %"class.gl::ProgramState"*, %"class.gl::ProgramState"** %40, align 8
  br label %42

42:                                               ; preds = %39, %15
  %43 = phi %"class.gl::ProgramState"* [ %41, %39 ], [ %17, %15 ]
  %44 = getelementptr inbounds %"class.gl::ProgramState", %"class.gl::ProgramState"* %43, i64 0, i32 14
  %45 = load i8, i8* %44, align 1, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %42
  %48 = or i8 %6, 2
  store i8 %48, i8* %5, align 8
  br label %49

49:                                               ; preds = %42, %15, %24, %28, %47, %34, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx19ProgramExecutableVk19getGraphicsPipelineEPNS_9ContextVkEN2gl13PrimitiveModeERKNS_2vk20GraphicsPipelineDescERKN5angle7BitSetTILm16EmmEEPPS7_PPNS5_14PipelineHelperE(%"class.rx::ProgramExecutableVk"*, %"class.rx::ContextVk"*, i8 zeroext, %"class.rx::vk::GraphicsPipelineDesc"* dereferenceable(252), %"class.angle::BitSetT.166"* dereferenceable(8), %"class.rx::vk::GraphicsPipelineDesc"**, %"class.rx::vk::PipelineHelper"**) local_unnamed_addr #9 align 2 {
  %8 = alloca %"class.rx::vk::RenderPass"*, align 8
  %9 = alloca %"class.rx::vk::PipelineCache"*, align 8
  %10 = alloca %"class.angle::BitSetT.141", align 1
  %11 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 0, i32 1
  %12 = load %"class.gl::State"*, %"class.gl::State"** %11, align 8
  %13 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %14 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %13, align 8
  %15 = bitcast %"class.rx::vk::PipelineCache"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #15
  store %"class.rx::vk::PipelineCache"* null, %"class.rx::vk::PipelineCache"** %9, align 8
  %16 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %12, i64 0, i32 65
  %17 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %16, align 8
  %18 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %14, i64 0, i32 7, i32 1, i32 4
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %7
  %22 = zext i8 %2 to i64
  %23 = getelementptr inbounds %"class.angle::PackedEnumMap.1545", %"class.angle::PackedEnumMap.1545"* @_ZN2gl4priv10gLineModesE, i64 0, i32 0, i32 0, i64 %22
  %24 = load i8, i8* %23, align 1, !range !2
  br label %25

25:                                               ; preds = %7, %21
  %26 = phi i8 [ 0, %7 ], [ %24, %21 ]
  %27 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 18, i32 0
  %28 = load i8, i8* %27, align 8
  %29 = and i8 %28, -2
  %30 = or i8 %29, %26
  store i8 %30, i8* %27, align 8
  %31 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %3, i64 0, i32 3, i32 3, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = lshr i8 %32, 2
  %34 = and i8 %33, 28
  %35 = and i8 %30, -29
  %36 = or i8 %34, %35
  store i8 %36, i8* %27, align 8
  %37 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %12, i64 0, i32 59
  %38 = load i32, i32* %37, align 4
  %39 = icmp ne i32 %38, 37727
  %40 = zext i1 %39 to i8
  %41 = shl nuw nsw i8 %40, 5
  %42 = and i8 %36, -33
  %43 = or i8 %41, %42
  store i8 %43, i8* %27, align 8
  %44 = zext i8 %43 to i64
  %45 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 %44
  %46 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %17, i64 0, i32 55
  %47 = load i8, i8* %46, align 4, !range !2
  %48 = icmp eq i8 %47, 0
  %49 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %17, i64 0, i32 3
  %50 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %17, i64 0, i32 2
  %51 = select i1 %48, %"class.angle::BitSetT.141"* %50, %"class.angle::BitSetT.141"* %49
  %52 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %51, i64 0, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %10, i64 0, i32 0
  store i8 %53, i8* %54, align 1
  %55 = call zeroext i8 @_ZN2gl23GetLastPreFragmentStageEN5angle7BitSetTILm6EhNS_10ShaderTypeEEE(%"class.angle::BitSetT.141"* nonnull %10) #15
  %56 = icmp eq i8 %53, 0
  br i1 %56, label %131, label %57

57:                                               ; preds = %25
  %58 = zext i8 %53 to i32
  %59 = call i32 @llvm.cttz.i32(i32 %58, i1 true) #15, !range !8
  %60 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 19
  %61 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 20
  %62 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %12, i64 0, i32 64, i32 0, i32 1
  %63 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 %44, i32 1
  %64 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 15
  br label %65

65:                                               ; preds = %128, %57
  %66 = phi i32 [ %59, %57 ], [ %130, %128 ]
  %67 = phi i8 [ %53, %57 ], [ %126, %128 ]
  %68 = zext i32 %66 to i64
  %69 = trunc i32 %66 to i8
  %70 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %60, align 8
  %71 = icmp eq %"class.rx::ProgramVk"* %70, null
  br i1 %71, label %91, label %72

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %70, i64 0, i32 0, i32 1
  %74 = load %"class.gl::ProgramState"*, %"class.gl::ProgramState"** %73, align 8
  %75 = getelementptr inbounds %"class.gl::ProgramState", %"class.gl::ProgramState"* %74, i64 0, i32 23, i32 0
  %76 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %75, align 8
  %77 = icmp eq i8 %69, 5
  br i1 %77, label %78, label %82

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %76, i64 0, i32 3, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = and i8 %80, 32
  br label %88

82:                                               ; preds = %72
  %83 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %76, i64 0, i32 2, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = shl i32 1, %66
  %86 = trunc i32 %85 to i8
  %87 = and i8 %84, %86
  br label %88

88:                                               ; preds = %82, %78
  %89 = phi i8 [ %81, %78 ], [ %87, %82 ]
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %122, label %104

91:                                               ; preds = %65
  %92 = load %"class.rx::ProgramPipelineVk"*, %"class.rx::ProgramPipelineVk"** %61, align 8
  %93 = icmp eq %"class.rx::ProgramPipelineVk"* %92, null
  br i1 %93, label %122, label %94

94:                                               ; preds = %91
  %95 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %62, align 8
  %96 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %95, i64 0, i32 5, i32 2, i32 0, i32 0, i64 %68
  %97 = load %"class.gl::Program"*, %"class.gl::Program"** %96, align 8
  %98 = icmp eq %"class.gl::Program"* %97, null
  br i1 %98, label %122, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %97, i64 0, i32 5
  %101 = bitcast %"class.rx::ProgramImpl"** %100 to %"class.rx::ProgramVk"**
  %102 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %101, align 8
  %103 = icmp eq %"class.rx::ProgramVk"* %102, null
  br i1 %103, label %122, label %104

104:                                              ; preds = %88, %99
  %105 = phi %"class.rx::ProgramVk"* [ %102, %99 ], [ %70, %88 ]
  %106 = load i8, i8* %27, align 8
  %107 = call zeroext i1 @_ZNK2rx2vk19ShaderProgramHelper5validEN2gl10ShaderTypeE(%"class.rx::vk::ShaderProgramHelper"* %63, i8 zeroext %69) #15
  br i1 %107, label %122, label %108

108:                                              ; preds = %104
  %109 = icmp eq i8 %55, %69
  %110 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %105, i64 0, i32 0, i32 1
  %111 = load %"class.gl::ProgramState"*, %"class.gl::ProgramState"** %110, align 8
  %112 = getelementptr inbounds %"class.gl::ProgramState", %"class.gl::ProgramState"* %111, i64 0, i32 23, i32 0
  %113 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %112, align 8
  %114 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %113, i64 0, i32 26, i32 0, i32 0
  %115 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %114, align 8
  %116 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %113, i64 0, i32 26, i32 0, i32 1
  %117 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %116, align 8
  %118 = icmp ne %"struct.gl::TransformFeedbackVarying"* %115, %117
  %119 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %105, i64 0, i32 4
  %120 = call i32 @_ZN2rx11ProgramInfo11initProgramEPNS_9ContextVkEN2gl10ShaderTypeEbbRKNS_10ShaderInfoENS_23ProgramTransformOptionsERKNS_30ShaderInterfaceVariableInfoMapE(%"class.rx::ProgramInfo"* %45, %"class.rx::ContextVk"* %1, i8 zeroext %69, i1 zeroext %109, i1 zeroext %118, %"class.rx::ShaderInfo"* dereferenceable(152) %119, i8 %106, %"class.rx::ShaderInterfaceVariableInfoMap"* dereferenceable(240) %64) #15
  %121 = icmp eq i32 %120, 1
  br i1 %121, label %297, label %122

122:                                              ; preds = %108, %104, %88, %91, %94, %99
  %123 = shl i32 1, %66
  %124 = trunc i32 %123 to i8
  %125 = xor i8 %124, -1
  %126 = and i8 %67, %125
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %131, label %128

128:                                              ; preds = %122
  %129 = zext i8 %126 to i32
  %130 = call i32 @llvm.cttz.i32(i32 %129, i1 true) #15, !range !8
  br label %65

131:                                              ; preds = %122, %25
  %132 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 %44, i32 1
  %133 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %3, i64 0, i32 7, i32 0
  %134 = load i16, i16* %133, align 2
  %135 = zext i16 %134 to i32
  call void @_ZN2rx2vk19ShaderProgramHelper25setSpecializationConstantEN2sh2vk24SpecializationConstantIdEj(%"class.rx::vk::ShaderProgramHelper"* %132, i32 2, i32 %135) #15
  %136 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %3, i64 0, i32 7, i32 1
  %137 = load i16, i16* %136, align 2
  %138 = zext i16 %137 to i32
  call void @_ZN2rx2vk19ShaderProgramHelper25setSpecializationConstantEN2sh2vk24SpecializationConstantIdEj(%"class.rx::vk::ShaderProgramHelper"* %132, i32 3, i32 %138) #15
  %139 = call i32 @_ZN2rx10RendererVk16getPipelineCacheEPPNS_2vk13PipelineCacheE(%"class.rx::RendererVk"* %14, %"class.rx::vk::PipelineCache"** nonnull %9) #15
  %140 = icmp eq i32 %139, 1
  br i1 %140, label %297, label %141

141:                                              ; preds = %131
  %142 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 52
  %143 = load %"class.rx::vk::PipelineCache"*, %"class.rx::vk::PipelineCache"** %9, align 8
  %144 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 8, i32 0
  %145 = load %"class.rx::vk::RefCounted.859"*, %"class.rx::vk::RefCounted.859"** %144, align 8
  %146 = getelementptr inbounds %"class.rx::vk::RefCounted.859", %"class.rx::vk::RefCounted.859"* %145, i64 0, i32 1
  %147 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %16, align 8
  %148 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %147, i64 0, i32 8
  %149 = bitcast %"class.rx::vk::RenderPass"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #15
  store %"class.rx::vk::RenderPass"* null, %"class.rx::vk::RenderPass"** %8, align 8
  %150 = getelementptr inbounds %"class.rx::vk::GraphicsPipelineDesc", %"class.rx::vk::GraphicsPipelineDesc"* %3, i64 0, i32 1
  %151 = getelementptr inbounds %"class.rx::RenderPassCache", %"class.rx::RenderPassCache"* %142, i64 0, i32 0, i32 0, i32 0
  %152 = call { i8*, %"union.absl::container_internal::map_slot_type.972"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEENSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE4findIS5_EENSR_8iteratorERSO_(%"class.absl::container_internal::raw_hash_set.971"* %151, %"class.rx::vk::RenderPassDesc"* dereferenceable(12) %150) #15
  %153 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.972"* } %152, 0
  %154 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.972"* } %152, 1
  %155 = icmp eq i8* %153, null
  br i1 %155, label %197, label %156

156:                                              ; preds = %141
  %157 = load i8, i8* %153, align 1
  %158 = icmp sgt i8 %157, -1
  br i1 %158, label %160, label %159, !prof !6

159:                                              ; preds = %156
  call void @llvm.trap() #15
  unreachable

160:                                              ; preds = %156
  %161 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.972", %"union.absl::container_internal::map_slot_type.972"* %154, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  %163 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.972", %"union.absl::container_internal::map_slot_type.972"* %154, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %164 = load %"union.absl::container_internal::map_slot_type.1510"*, %"union.absl::container_internal::map_slot_type.1510"** %163, align 8
  %165 = icmp ne i8* %162, null
  call void @llvm.assume(i1 %165) #15
  %166 = load i8, i8* %162, align 1
  %167 = icmp slt i8 %166, -1
  br i1 %167, label %168, label %183

168:                                              ; preds = %160, %168
  %169 = phi %"union.absl::container_internal::map_slot_type.1510"* [ %180, %168 ], [ %164, %160 ]
  %170 = phi i8* [ %179, %168 ], [ %162, %160 ]
  %171 = bitcast i8* %170 to <16 x i8>*
  %172 = load <16 x i8>, <16 x i8>* %171, align 1
  %173 = icmp slt <16 x i8> %172, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %174 = bitcast <16 x i1> %173 to i16
  %175 = zext i16 %174 to i32
  %176 = add nuw nsw i32 %175, 1
  %177 = call i32 @llvm.cttz.i32(i32 %176, i1 true) #15, !range !8
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds i8, i8* %170, i64 %178
  %180 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1510", %"union.absl::container_internal::map_slot_type.1510"* %169, i64 %178
  %181 = load i8, i8* %179, align 1
  %182 = icmp slt i8 %181, -1
  br i1 %182, label %168, label %183

183:                                              ; preds = %168, %160
  %184 = phi %"union.absl::container_internal::map_slot_type.1510"* [ %164, %160 ], [ %180, %168 ]
  %185 = phi i8* [ %162, %160 ], [ %179, %168 ]
  %186 = phi i8 [ %166, %160 ], [ %181, %168 ]
  %187 = icmp eq i8 %186, -1
  %188 = icmp eq i8* %185, null
  %189 = or i1 %188, %187
  br i1 %189, label %190, label %191, !prof !7

190:                                              ; preds = %183
  call void @llvm.trap() #15
  unreachable

191:                                              ; preds = %183
  %192 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.1510", %"union.absl::container_internal::map_slot_type.1510"* %184, i64 0, i32 0, i32 1
  %193 = call dereferenceable(8) %"class.rx::vk::RenderPass"* @_ZN2rx2vk16RenderPassHelper13getRenderPassEv(%"class.rx::vk::RenderPassHelper"* %192) #15
  store %"class.rx::vk::RenderPass"* %193, %"class.rx::vk::RenderPass"** %8, align 8
  %194 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 52, i32 1, i32 0
  %195 = load i64, i64* %194, align 8
  %196 = add i64 %195, 1
  store i64 %196, i64* %194, align 8
  br label %205

197:                                              ; preds = %141
  %198 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 52, i32 1, i32 1
  %199 = load i64, i64* %198, align 8
  %200 = add i64 %199, 1
  store i64 %200, i64* %198, align 8
  %201 = call i32 @_ZN2rx15RenderPassCache13addRenderPassEPNS_9ContextVkERKNS_2vk14RenderPassDescEPPNS3_10RenderPassE(%"class.rx::RenderPassCache"* %142, %"class.rx::ContextVk"* %1, %"class.rx::vk::RenderPassDesc"* dereferenceable(12) %150, %"class.rx::vk::RenderPass"** nonnull %8) #15
  %202 = icmp eq i32 %201, 1
  br i1 %202, label %295, label %203

203:                                              ; preds = %197
  %204 = load %"class.rx::vk::RenderPass"*, %"class.rx::vk::RenderPass"** %8, align 8
  br label %205

205:                                              ; preds = %203, %191
  %206 = phi %"class.rx::vk::RenderPass"* [ %204, %203 ], [ %193, %191 ]
  %207 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 %44, i32 1, i32 1, i32 0, i32 0, i64 0, i32 0
  %208 = load %"class.rx::vk::RefCounted.874"*, %"class.rx::vk::RefCounted.874"** %207, align 8
  %209 = getelementptr inbounds %"class.rx::vk::RefCounted.874", %"class.rx::vk::RefCounted.874"* %208, i64 0, i32 1, i32 1
  %210 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 %44, i32 1, i32 1, i32 0, i32 0, i64 4, i32 0
  %211 = load %"class.rx::vk::RefCounted.874"*, %"class.rx::vk::RefCounted.874"** %210, align 8
  %212 = icmp eq %"class.rx::vk::RefCounted.874"* %211, null
  %213 = getelementptr inbounds %"class.rx::vk::RefCounted.874", %"class.rx::vk::RefCounted.874"* %211, i64 0, i32 1, i32 1
  %214 = select i1 %212, %"class.rx::vk::ShaderModule"* null, %"class.rx::vk::ShaderModule"* %213
  %215 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 %44, i32 1, i32 1, i32 0, i32 0, i64 3, i32 0
  %216 = load %"class.rx::vk::RefCounted.874"*, %"class.rx::vk::RefCounted.874"** %215, align 8
  %217 = icmp eq %"class.rx::vk::RefCounted.874"* %216, null
  %218 = getelementptr inbounds %"class.rx::vk::RefCounted.874", %"class.rx::vk::RefCounted.874"* %216, i64 0, i32 1, i32 1
  %219 = select i1 %217, %"class.rx::vk::ShaderModule"* null, %"class.rx::vk::ShaderModule"* %218
  %220 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 %44, i32 1, i32 1, i32 0, i32 0, i64 1, i32 0
  %221 = load %"class.rx::vk::RefCounted.874"*, %"class.rx::vk::RefCounted.874"** %220, align 8
  %222 = icmp eq %"class.rx::vk::RefCounted.874"* %221, null
  %223 = getelementptr inbounds %"class.rx::vk::RefCounted.874", %"class.rx::vk::RefCounted.874"* %221, i64 0, i32 1, i32 1
  %224 = select i1 %222, %"class.rx::vk::ShaderModule"* null, %"class.rx::vk::ShaderModule"* %223
  %225 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 %44, i32 1, i32 1, i32 0, i32 0, i64 2, i32 0
  %226 = load %"class.rx::vk::RefCounted.874"*, %"class.rx::vk::RefCounted.874"** %225, align 8
  %227 = icmp eq %"class.rx::vk::RefCounted.874"* %226, null
  %228 = getelementptr inbounds %"class.rx::vk::RefCounted.874", %"class.rx::vk::RefCounted.874"* %226, i64 0, i32 1, i32 1
  %229 = select i1 %227, %"class.rx::vk::ShaderModule"* null, %"class.rx::vk::ShaderModule"* %228
  %230 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 %44, i32 1, i32 2
  %231 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 %44, i32 1, i32 4
  %232 = call i64 @_ZNK2rx2vk20GraphicsPipelineDesc4hashEv(%"class.rx::vk::GraphicsPipelineDesc"* %3) #15
  %233 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 %44, i32 1, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %234 = load i64, i64* %233, align 8
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %290, label %236

236:                                              ; preds = %205
  %237 = call i64 @llvm.ctpop.i64(i64 %234) #15, !range !38
  %238 = icmp ugt i64 %237, 1
  br i1 %238, label %242, label %239

239:                                              ; preds = %236
  %240 = add i64 %234, -1
  %241 = and i64 %240, %232
  br label %246

242:                                              ; preds = %236
  %243 = icmp ult i64 %232, %234
  br i1 %243, label %246, label %244

244:                                              ; preds = %242
  %245 = urem i64 %232, %234
  br label %246

246:                                              ; preds = %244, %242, %239
  %247 = phi i64 [ %241, %239 ], [ %245, %244 ], [ %232, %242 ]
  %248 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 %44, i32 1, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %248, align 8
  %250 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %249, i64 %247
  %251 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %250, align 8
  %252 = icmp eq %"struct.std::__1::__hash_node_base"* %251, null
  br i1 %252, label %290, label %253

253:                                              ; preds = %246
  %254 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %251, i64 0, i32 0
  %255 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %254, align 8
  %256 = icmp eq %"struct.std::__1::__hash_node_base"* %255, null
  br i1 %256, label %290, label %257

257:                                              ; preds = %253
  %258 = add i64 %234, -1
  br label %259

259:                                              ; preds = %279, %257
  %260 = phi %"struct.std::__1::__hash_node_base"* [ %255, %257 ], [ %281, %279 ]
  %261 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %260, i64 1
  %262 = bitcast %"struct.std::__1::__hash_node_base"* %261 to i64*
  %263 = load i64, i64* %262, align 8
  %264 = icmp eq i64 %263, %232
  br i1 %264, label %275, label %265

265:                                              ; preds = %259
  br i1 %238, label %268, label %266

266:                                              ; preds = %265
  %267 = and i64 %263, %258
  br label %272

268:                                              ; preds = %265
  %269 = icmp ult i64 %263, %234
  br i1 %269, label %272, label %270

270:                                              ; preds = %268
  %271 = urem i64 %263, %234
  br label %272

272:                                              ; preds = %270, %268, %266
  %273 = phi i64 [ %267, %266 ], [ %271, %270 ], [ %263, %268 ]
  %274 = icmp eq i64 %273, %247
  br i1 %274, label %279, label %290

275:                                              ; preds = %259
  %276 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %260, i64 2
  %277 = bitcast %"struct.std::__1::__hash_node_base"* %276 to %"class.rx::vk::GraphicsPipelineDesc"*
  %278 = call zeroext i1 @_ZNK2rx2vk20GraphicsPipelineDesceqERKS1_(%"class.rx::vk::GraphicsPipelineDesc"* %277, %"class.rx::vk::GraphicsPipelineDesc"* dereferenceable(252) %3) #15
  br i1 %278, label %283, label %279

279:                                              ; preds = %275, %272
  %280 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %260, i64 0, i32 0
  %281 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %280, align 8
  %282 = icmp eq %"struct.std::__1::__hash_node_base"* %281, null
  br i1 %282, label %290, label %259

283:                                              ; preds = %275
  %284 = bitcast %"class.rx::vk::GraphicsPipelineDesc"** %5 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* %276, %"struct.std::__1::__hash_node_base"** %284, align 8
  %285 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %260, i64 34
  %286 = bitcast %"class.rx::vk::PipelineHelper"** %6 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* %285, %"struct.std::__1::__hash_node_base"** %286, align 8
  %287 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 %44, i32 1, i32 2, i32 0, i32 1, i32 0
  %288 = load i64, i64* %287, align 8
  %289 = add i64 %288, 1
  store i64 %289, i64* %287, align 8
  br label %295

290:                                              ; preds = %279, %272, %253, %246, %205
  %291 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 16, i64 %44, i32 1, i32 2, i32 0, i32 1, i32 1
  %292 = load i64, i64* %291, align 8
  %293 = add i64 %292, 1
  store i64 %293, i64* %291, align 8
  %294 = call i32 @_ZN2rx21GraphicsPipelineCache14insertPipelineEPNS_9ContextVkERKNS_2vk13PipelineCacheERKNS3_10RenderPassERKNS3_14PipelineLayoutERKN5angle7BitSetTILm16EmmEERKNSE_ILm32EmmEEPKNS3_12ShaderModuleESN_SN_SN_SN_RKNS3_23SpecializationConstantsERKNS3_20GraphicsPipelineDescEPPSS_PPNS3_14PipelineHelperE(%"class.rx::GraphicsPipelineCache"* %230, %"class.rx::ContextVk"* %1, %"class.rx::vk::PipelineCache"* dereferenceable(8) %143, %"class.rx::vk::RenderPass"* dereferenceable(8) %206, %"class.rx::vk::PipelineLayout"* dereferenceable(8) %146, %"class.angle::BitSetT.166"* dereferenceable(8) %4, %"class.angle::BitSetT.148"* dereferenceable(8) %148, %"class.rx::vk::ShaderModule"* %209, %"class.rx::vk::ShaderModule"* %214, %"class.rx::vk::ShaderModule"* %219, %"class.rx::vk::ShaderModule"* %224, %"class.rx::vk::ShaderModule"* %229, %"struct.rx::vk::SpecializationConstants"* dereferenceable(16) %231, %"class.rx::vk::GraphicsPipelineDesc"* dereferenceable(252) %3, %"class.rx::vk::GraphicsPipelineDesc"** %5, %"class.rx::vk::PipelineHelper"** %6) #15
  br label %295

295:                                              ; preds = %197, %283, %290
  %296 = phi i32 [ 1, %197 ], [ 0, %283 ], [ %294, %290 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #15
  br label %297

297:                                              ; preds = %108, %131, %295
  %298 = phi i32 [ %296, %295 ], [ 1, %131 ], [ 1, %108 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #15
  ret i32 %298
}

declare zeroext i8 @_ZN2gl23GetLastPreFragmentStageEN5angle7BitSetTILm6EhNS_10ShaderTypeEEE(%"class.angle::BitSetT.141"*) local_unnamed_addr #6

declare i32 @_ZN2rx10RendererVk16getPipelineCacheEPPNS_2vk13PipelineCacheE(%"class.rx::RendererVk"*, %"class.rx::vk::PipelineCache"**) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx19ProgramExecutableVk18getComputePipelineEPNS_9ContextVkEPPNS_2vk15ObjectAndSerialINS3_8PipelineEEE(%"class.rx::ProgramExecutableVk"*, %"class.rx::ContextVk"*, %"class.rx::vk::ObjectAndSerial"**) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 0, i32 1
  %5 = load %"class.gl::State"*, %"class.gl::State"** %4, align 8
  %6 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 19
  %7 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %6, align 8
  %8 = icmp eq %"class.rx::ProgramVk"* %7, null
  br i1 %8, label %19, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %7, i64 0, i32 0, i32 1
  %11 = load %"class.gl::ProgramState"*, %"class.gl::ProgramState"** %10, align 8
  %12 = getelementptr inbounds %"class.gl::ProgramState", %"class.gl::ProgramState"* %11, i64 0, i32 23, i32 0
  %13 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %12, align 8
  %14 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %13, i64 0, i32 3, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = and i8 %15, 32
  %17 = icmp eq i8 %16, 0
  %18 = select i1 %17, %"class.rx::ProgramVk"* null, %"class.rx::ProgramVk"* %7
  br label %33

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 20
  %21 = load %"class.rx::ProgramPipelineVk"*, %"class.rx::ProgramPipelineVk"** %20, align 8
  %22 = icmp eq %"class.rx::ProgramPipelineVk"* %21, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %5, i64 0, i32 64, i32 0, i32 1
  %25 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %24, align 8
  %26 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %25, i64 0, i32 5, i32 2, i32 0, i32 0, i64 5
  %27 = load %"class.gl::Program"*, %"class.gl::Program"** %26, align 8
  %28 = icmp eq %"class.gl::Program"* %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %27, i64 0, i32 5
  %31 = bitcast %"class.rx::ProgramImpl"** %30 to %"class.rx::ProgramVk"**
  %32 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %31, align 8
  br label %33

33:                                               ; preds = %19, %23, %29, %9
  %34 = phi %"class.rx::ProgramVk"* [ %18, %9 ], [ %32, %29 ], [ null, %23 ], [ null, %19 ]
  %35 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 17, i32 1
  %36 = tail call zeroext i1 @_ZNK2rx2vk19ShaderProgramHelper5validEN2gl10ShaderTypeE(%"class.rx::vk::ShaderProgramHelper"* %35, i8 zeroext 5) #15
  br i1 %36, label %52, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 17
  %39 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 15
  %40 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %34, i64 0, i32 0, i32 1
  %41 = load %"class.gl::ProgramState"*, %"class.gl::ProgramState"** %40, align 8
  %42 = getelementptr inbounds %"class.gl::ProgramState", %"class.gl::ProgramState"* %41, i64 0, i32 23, i32 0
  %43 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %42, align 8
  %44 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %43, i64 0, i32 26, i32 0, i32 0
  %45 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %44, align 8
  %46 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %43, i64 0, i32 26, i32 0, i32 1
  %47 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %46, align 8
  %48 = icmp ne %"struct.gl::TransformFeedbackVarying"* %45, %47
  %49 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %34, i64 0, i32 4
  %50 = tail call i32 @_ZN2rx11ProgramInfo11initProgramEPNS_9ContextVkEN2gl10ShaderTypeEbbRKNS_10ShaderInfoENS_23ProgramTransformOptionsERKNS_30ShaderInterfaceVariableInfoMapE(%"class.rx::ProgramInfo"* %38, %"class.rx::ContextVk"* %1, i8 zeroext 5, i1 zeroext false, i1 zeroext %48, %"class.rx::ShaderInfo"* dereferenceable(152) %49, i8 0, %"class.rx::ShaderInterfaceVariableInfoMap"* dereferenceable(240) %39) #15
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %60, label %52

52:                                               ; preds = %33, %37
  %53 = icmp eq %"class.rx::ContextVk"* %1, null
  %54 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1
  %55 = select i1 %53, %"class.rx::vk::Context"* null, %"class.rx::vk::Context"* %54
  %56 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 8, i32 0
  %57 = load %"class.rx::vk::RefCounted.859"*, %"class.rx::vk::RefCounted.859"** %56, align 8
  %58 = getelementptr inbounds %"class.rx::vk::RefCounted.859", %"class.rx::vk::RefCounted.859"* %57, i64 0, i32 1
  %59 = tail call i32 @_ZN2rx2vk19ShaderProgramHelper18getComputePipelineEPNS0_7ContextERKNS0_14PipelineLayoutEPPNS0_15ObjectAndSerialINS0_8PipelineEEE(%"class.rx::vk::ShaderProgramHelper"* %35, %"class.rx::vk::Context"* %55, %"class.rx::vk::PipelineLayout"* dereferenceable(8) %58, %"class.rx::vk::ObjectAndSerial"** %2) #15
  br label %60

60:                                               ; preds = %37, %52
  %61 = phi i32 [ %59, %52 ], [ 1, %37 ]
  ret i32 %61
}

declare i32 @_ZN2rx2vk19ShaderProgramHelper18getComputePipelineEPNS0_7ContextERKNS0_14PipelineLayoutEPPNS0_15ObjectAndSerialINS0_8PipelineEEE(%"class.rx::vk::ShaderProgramHelper"*, %"class.rx::vk::Context"*, %"class.rx::vk::PipelineLayout"* dereferenceable(8), %"class.rx::vk::ObjectAndSerial"**) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx19ProgramExecutableVk26initDynamicDescriptorPoolsEPNS_9ContextVkERNS_2vk23DescriptorSetLayoutDescENS_18DescriptorSetIndexEP23VkDescriptorSetLayout_T(%"class.rx::ProgramExecutableVk"*, %"class.rx::ContextVk"*, %"class.rx::vk::DescriptorSetLayoutDesc"* dereferenceable(1536), i32, %struct.VkDescriptorSetLayout_T*) local_unnamed_addr #3 align 2 {
  %6 = alloca %"class.std::__1::vector.706", align 8
  %7 = alloca %"class.angle::FixedVector.1457", align 8
  %8 = alloca %"class.std::__1::vector.1459", align 8
  %9 = bitcast %"class.std::__1::vector.706"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.std::__1::vector.706", %"class.std::__1::vector.706"* %6, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector.706", %"class.std::__1::vector.706"* %6, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector.706", %"class.std::__1::vector.706"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #15
  %13 = bitcast %"class.angle::FixedVector.1457"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2312, i8* nonnull %13) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 2304, i1 false)
  %14 = getelementptr inbounds %"class.angle::FixedVector.1457", %"class.angle::FixedVector.1457"* %7, i64 0, i32 1
  store i64 0, i64* %14, align 8
  %15 = bitcast %"class.std::__1::vector.1459"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #15
  %16 = getelementptr inbounds %"class.std::__1::vector.1459", %"class.std::__1::vector.1459"* %8, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector.1459", %"class.std::__1::vector.1459"* %8, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #15
  call void @_ZNK2rx2vk23DescriptorSetLayoutDesc14unpackBindingsEPN5angle11FixedVectorI28VkDescriptorSetLayoutBindingLm96ENSt3__15arrayIS4_Lm96EEEEEPNS5_6vectorIP11VkSampler_TNS5_9allocatorISC_EEEE(%"class.rx::vk::DescriptorSetLayoutDesc"* %2, %"class.angle::FixedVector.1457"* nonnull %7, %"class.std::__1::vector.1459"* nonnull %8) #15
  %18 = load i64, i64* %14, align 8
  %19 = getelementptr inbounds %"class.angle::FixedVector.1457", %"class.angle::FixedVector.1457"* %7, i64 0, i32 0, i32 0, i64 %18
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %5
  %22 = getelementptr inbounds %"class.angle::FixedVector.1457", %"class.angle::FixedVector.1457"* %7, i64 0, i32 0, i32 0, i64 0
  %23 = bitcast %struct.VkDescriptorPoolSize** %11 to i64*
  %24 = bitcast %"class.std::__1::vector.706"* %6 to i64*
  %25 = bitcast %struct.VkDescriptorPoolSize** %12 to i64*
  br label %32

26:                                               ; preds = %100, %5
  %27 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %28 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %27, align 8
  %29 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %28, i64 0, i32 7, i32 33, i32 4
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %160, label %103

32:                                               ; preds = %21, %100
  %33 = phi %struct.VkDescriptorSetLayoutBinding* [ %22, %21 ], [ %101, %100 ]
  %34 = getelementptr inbounds %struct.VkDescriptorSetLayoutBinding, %struct.VkDescriptorSetLayoutBinding* %33, i64 0, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %100, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %struct.VkDescriptorSetLayoutBinding, %struct.VkDescriptorSetLayoutBinding* %33, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = load %struct.VkDescriptorPoolSize*, %struct.VkDescriptorPoolSize** %11, align 8
  %41 = load %struct.VkDescriptorPoolSize*, %struct.VkDescriptorPoolSize** %12, align 8
  %42 = icmp ult %struct.VkDescriptorPoolSize* %40, %41
  %43 = ptrtoint %struct.VkDescriptorPoolSize* %41 to i64
  br i1 %42, label %44, label %52

44:                                               ; preds = %37
  %45 = bitcast %struct.VkDescriptorPoolSize* %40 to i64*
  %46 = zext i32 %35 to i64
  %47 = shl nuw i64 %46, 32
  %48 = zext i32 %39 to i64
  %49 = or i64 %47, %48
  store i64 %49, i64* %45, align 4
  %50 = getelementptr inbounds %struct.VkDescriptorPoolSize, %struct.VkDescriptorPoolSize* %40, i64 1
  %51 = ptrtoint %struct.VkDescriptorPoolSize* %50 to i64
  store i64 %51, i64* %23, align 8
  br label %100

52:                                               ; preds = %37
  %53 = ptrtoint %struct.VkDescriptorPoolSize* %40 to i64
  %54 = load i64, i64* %24, align 8
  %55 = sub i64 %53, %54
  %56 = ashr exact i64 %55, 3
  %57 = add nsw i64 %56, 1
  %58 = icmp ugt i64 %57, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %52
  %60 = bitcast %"class.std::__1::vector.706"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %60) #21
  unreachable

61:                                               ; preds = %52
  %62 = sub i64 %43, %54
  %63 = ashr exact i64 %62, 3
  %64 = icmp ult i64 %63, 1152921504606846975
  br i1 %64, label %65, label %73

65:                                               ; preds = %61
  %66 = ashr exact i64 %62, 2
  %67 = icmp ult i64 %66, %57
  %68 = select i1 %67, i64 %57, i64 %66
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %78, label %70

70:                                               ; preds = %65
  %71 = icmp ugt i64 %68, 2305843009213693951
  br i1 %71, label %72, label %73

72:                                               ; preds = %70
  call void @abort() #21
  unreachable

73:                                               ; preds = %70, %61
  %74 = phi i64 [ %68, %70 ], [ 2305843009213693951, %61 ]
  %75 = shl i64 %74, 3
  %76 = call i8* @_Znwm(i64 %75) #20
  %77 = bitcast i8* %76 to %struct.VkDescriptorPoolSize*
  br label %78

78:                                               ; preds = %73, %65
  %79 = phi i64 [ %74, %73 ], [ 0, %65 ]
  %80 = phi i8* [ %76, %73 ], [ null, %65 ]
  %81 = phi %struct.VkDescriptorPoolSize* [ %77, %73 ], [ null, %65 ]
  %82 = getelementptr inbounds %struct.VkDescriptorPoolSize, %struct.VkDescriptorPoolSize* %81, i64 %56
  %83 = getelementptr inbounds %struct.VkDescriptorPoolSize, %struct.VkDescriptorPoolSize* %81, i64 %79
  %84 = ptrtoint %struct.VkDescriptorPoolSize* %83 to i64
  %85 = bitcast %struct.VkDescriptorPoolSize* %82 to i64*
  %86 = zext i32 %35 to i64
  %87 = shl nuw i64 %86, 32
  %88 = zext i32 %39 to i64
  %89 = or i64 %87, %88
  store i64 %89, i64* %85, align 4
  %90 = getelementptr inbounds %struct.VkDescriptorPoolSize, %struct.VkDescriptorPoolSize* %82, i64 1
  %91 = ptrtoint %struct.VkDescriptorPoolSize* %90 to i64
  %92 = ptrtoint %struct.VkDescriptorPoolSize* %81 to i64
  %93 = icmp sgt i64 %55, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %78
  %95 = inttoptr i64 %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* align 4 %95, i64 %55, i1 false) #15
  br label %96

96:                                               ; preds = %94, %78
  store i64 %92, i64* %24, align 8
  store i64 %91, i64* %23, align 8
  store i64 %84, i64* %25, align 8
  %97 = icmp eq i64 %54, 0
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = inttoptr i64 %54 to i8*
  call void @_ZdlPv(i8* %99) #20
  br label %100

100:                                              ; preds = %98, %96, %44, %32
  %101 = getelementptr inbounds %struct.VkDescriptorSetLayoutBinding, %struct.VkDescriptorSetLayoutBinding* %33, i64 1
  %102 = icmp eq %struct.VkDescriptorSetLayoutBinding* %101, %19
  br i1 %102, label %26, label %32

103:                                              ; preds = %26
  %104 = load %struct.VkDescriptorPoolSize*, %struct.VkDescriptorPoolSize** %10, align 8
  %105 = load %struct.VkDescriptorPoolSize*, %struct.VkDescriptorPoolSize** %11, align 8
  %106 = icmp eq %struct.VkDescriptorPoolSize* %104, %105
  %107 = ptrtoint %struct.VkDescriptorPoolSize* %104 to i64
  %108 = ptrtoint %struct.VkDescriptorPoolSize* %105 to i64
  br i1 %106, label %109, label %160

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 12
  %111 = load i32, i32* %110, align 8
  %112 = load %struct.VkDescriptorPoolSize*, %struct.VkDescriptorPoolSize** %12, align 8
  %113 = icmp ult %struct.VkDescriptorPoolSize* %104, %112
  br i1 %113, label %114, label %121

114:                                              ; preds = %109
  %115 = bitcast %struct.VkDescriptorPoolSize* %104 to i64*
  %116 = zext i32 %111 to i64
  %117 = or i64 %116, 4294967296
  store i64 %117, i64* %115, align 4
  %118 = getelementptr inbounds %struct.VkDescriptorPoolSize, %struct.VkDescriptorPoolSize* %104, i64 1
  %119 = ptrtoint %struct.VkDescriptorPoolSize* %118 to i64
  %120 = bitcast %struct.VkDescriptorPoolSize** %11 to i64*
  store i64 %119, i64* %120, align 8
  br label %160

121:                                              ; preds = %109
  %122 = ptrtoint %struct.VkDescriptorPoolSize* %112 to i64
  %123 = bitcast %struct.VkDescriptorPoolSize** %11 to i64*
  %124 = bitcast %"class.std::__1::vector.706"* %6 to i64*
  %125 = bitcast %struct.VkDescriptorPoolSize** %12 to i64*
  %126 = sub i64 %122, %107
  %127 = ashr exact i64 %126, 3
  %128 = icmp ult i64 %127, 1152921504606846975
  br i1 %128, label %129, label %135

129:                                              ; preds = %121
  %130 = ashr exact i64 %126, 2
  %131 = icmp eq i64 %126, 0
  %132 = select i1 %131, i64 1, i64 %130
  %133 = icmp ugt i64 %132, 2305843009213693951
  br i1 %133, label %134, label %135

134:                                              ; preds = %129
  call void @abort() #21
  unreachable

135:                                              ; preds = %121, %129
  %136 = phi i64 [ %132, %129 ], [ 2305843009213693951, %121 ]
  %137 = shl i64 %136, 3
  %138 = call i8* @_Znwm(i64 %137) #20
  %139 = bitcast i8* %138 to %struct.VkDescriptorPoolSize*
  %140 = getelementptr inbounds %struct.VkDescriptorPoolSize, %struct.VkDescriptorPoolSize* %139, i64 %136
  %141 = ptrtoint %struct.VkDescriptorPoolSize* %140 to i64
  %142 = bitcast i8* %138 to i64*
  %143 = zext i32 %111 to i64
  %144 = or i64 %143, 4294967296
  store i64 %144, i64* %142, align 4
  %145 = getelementptr inbounds i8, i8* %138, i64 8
  %146 = ptrtoint i8* %145 to i64
  %147 = sub i64 %108, %107
  %148 = ashr exact i64 %147, 3
  %149 = sub nsw i64 0, %148
  %150 = getelementptr inbounds %struct.VkDescriptorPoolSize, %struct.VkDescriptorPoolSize* %139, i64 %149
  %151 = ptrtoint %struct.VkDescriptorPoolSize* %150 to i64
  %152 = icmp sgt i64 %147, 0
  br i1 %152, label %153, label %156

153:                                              ; preds = %135
  %154 = bitcast %struct.VkDescriptorPoolSize* %150 to i8*
  %155 = bitcast %struct.VkDescriptorPoolSize* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %154, i8* align 4 %155, i64 %147, i1 false) #15
  br label %156

156:                                              ; preds = %153, %135
  store i64 %151, i64* %124, align 8
  store i64 %146, i64* %123, align 8
  store i64 %141, i64* %125, align 8
  %157 = icmp eq %struct.VkDescriptorPoolSize* %104, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %156
  %159 = bitcast %struct.VkDescriptorPoolSize* %104 to i8*
  call void @_ZdlPv(i8* %159) #20
  br label %160

160:                                              ; preds = %158, %156, %114, %26, %103
  %161 = load %struct.VkDescriptorPoolSize*, %struct.VkDescriptorPoolSize** %10, align 8
  %162 = load %struct.VkDescriptorPoolSize*, %struct.VkDescriptorPoolSize** %11, align 8
  %163 = icmp eq %struct.VkDescriptorPoolSize* %161, %162
  br i1 %163, label %173, label %164

164:                                              ; preds = %160
  %165 = ptrtoint %struct.VkDescriptorPoolSize* %161 to i64
  %166 = ptrtoint %struct.VkDescriptorPoolSize* %162 to i64
  %167 = zext i32 %3 to i64
  %168 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 11, i32 0, i32 0, i64 %167
  %169 = sub i64 %166, %165
  %170 = ashr exact i64 %169, 3
  %171 = call i32 @_ZN2rx2vk21DynamicDescriptorPool4initEPNS_9ContextVkEPK20VkDescriptorPoolSizemP23VkDescriptorSetLayout_T(%"class.rx::vk::DynamicDescriptorPool"* %168, %"class.rx::ContextVk"* %1, %struct.VkDescriptorPoolSize* %161, i64 %170, %struct.VkDescriptorSetLayout_T* %4) #15
  %172 = icmp eq i32 %171, 1
  br i1 %172, label %174, label %173

173:                                              ; preds = %164, %160
  br label %174

174:                                              ; preds = %164, %173
  %175 = phi i32 [ 0, %173 ], [ 1, %164 ]
  %176 = load %struct.VkSampler_T**, %struct.VkSampler_T*** %16, align 8
  %177 = icmp eq %struct.VkSampler_T** %176, null
  br i1 %177, label %182, label %178

178:                                              ; preds = %174
  %179 = ptrtoint %struct.VkSampler_T** %176 to i64
  %180 = bitcast %struct.VkSampler_T*** %17 to i64*
  store i64 %179, i64* %180, align 8
  %181 = bitcast %struct.VkSampler_T** %176 to i8*
  call void @_ZdlPv(i8* %181) #20
  br label %182

182:                                              ; preds = %174, %178
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #15
  %183 = load i64, i64* %14, align 8
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %192, label %185

185:                                              ; preds = %182, %185
  %186 = phi i64 [ %190, %185 ], [ %183, %182 ]
  %187 = add i64 %186, -1
  store i64 %187, i64* %14, align 8
  %188 = getelementptr inbounds %"class.angle::FixedVector.1457", %"class.angle::FixedVector.1457"* %7, i64 0, i32 0, i32 0, i64 %187
  %189 = bitcast %struct.VkDescriptorSetLayoutBinding* %188 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %189, i8 0, i64 24, i1 false) #15
  %190 = load i64, i64* %14, align 8
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %185

192:                                              ; preds = %185, %182
  call void @llvm.lifetime.end.p0i8(i64 2312, i8* nonnull %13) #15
  %193 = load %struct.VkDescriptorPoolSize*, %struct.VkDescriptorPoolSize** %10, align 8
  %194 = icmp eq %struct.VkDescriptorPoolSize* %193, null
  br i1 %194, label %199, label %195

195:                                              ; preds = %192
  %196 = ptrtoint %struct.VkDescriptorPoolSize* %193 to i64
  %197 = bitcast %struct.VkDescriptorPoolSize** %11 to i64*
  store i64 %196, i64* %197, align 8
  %198 = bitcast %struct.VkDescriptorPoolSize* %193 to i8*
  call void @_ZdlPv(i8* %198) #20
  br label %199

199:                                              ; preds = %192, %195
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #15
  ret i32 %175
}

declare void @_ZNK2rx2vk23DescriptorSetLayoutDesc14unpackBindingsEPN5angle11FixedVectorI28VkDescriptorSetLayoutBindingLm96ENSt3__15arrayIS4_Lm96EEEEEPNS5_6vectorIP11VkSampler_TNS5_9allocatorISC_EEEE(%"class.rx::vk::DescriptorSetLayoutDesc"*, %"class.angle::FixedVector.1457"*, %"class.std::__1::vector.1459"*) local_unnamed_addr #6

declare i32 @_ZN2rx2vk21DynamicDescriptorPool4initEPNS_9ContextVkEPK20VkDescriptorPoolSizemP23VkDescriptorSetLayout_T(%"class.rx::vk::DynamicDescriptorPool"*, %"class.rx::ContextVk"*, %struct.VkDescriptorPoolSize*, i64, %struct.VkDescriptorSetLayout_T*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx19ProgramExecutableVk20createPipelineLayoutEPKN2gl7ContextEPNSt3__15arrayINS_2vk11TextureUnitELm96EEE(%"class.rx::ProgramExecutableVk"*, %"class.gl::Context"* nocapture readonly, %"struct.std::__1::array.923"* readonly) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.angle::PackedEnumMap.1447", align 8
  %5 = alloca %"class.rx::vk::DescriptorSetLayoutDesc", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.rx::vk::DescriptorSetLayoutDesc", align 8
  %8 = alloca %"class.rx::vk::DescriptorSetLayoutDesc", align 8
  %9 = alloca %"class.rx::vk::DescriptorSetLayoutDesc", align 8
  %10 = alloca %"class.rx::vk::PipelineLayoutDesc", align 8
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %12 = bitcast %"class.rx::ContextImpl"** %11 to %"class.rx::ContextVk"**
  %13 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %12, align 8
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 86, i32 0, i32 1
  %15 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %14, align 8
  %16 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 19
  %17 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %16, align 8
  %18 = icmp eq %"class.rx::ProgramVk"* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %17, i64 0, i32 0, i32 1
  %21 = load %"class.gl::ProgramState"*, %"class.gl::ProgramState"** %20, align 8
  %22 = getelementptr inbounds %"class.gl::ProgramState", %"class.gl::ProgramState"* %21, i64 0, i32 23, i32 0
  br label %30

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 20
  %25 = bitcast %"class.rx::ProgramPipelineVk"** %24 to %"class.rx::ProgramPipelineImpl"**
  %26 = load %"class.rx::ProgramPipelineImpl"*, %"class.rx::ProgramPipelineImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.rx::ProgramPipelineImpl", %"class.rx::ProgramPipelineImpl"* %26, i64 0, i32 1
  %28 = load %"class.gl::ProgramPipelineState"*, %"class.gl::ProgramPipelineState"** %27, align 8
  %29 = getelementptr inbounds %"class.gl::ProgramPipelineState", %"class.gl::ProgramPipelineState"* %28, i64 0, i32 5
  br label %30

30:                                               ; preds = %19, %23
  %31 = phi %"class.gl::ProgramExecutable"** [ %22, %19 ], [ %29, %23 ]
  %32 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %31, align 8
  %33 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %32, i64 0, i32 55
  %34 = load i8, i8* %33, align 4, !range !2
  %35 = icmp eq i8 %34, 0
  %36 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %32, i64 0, i32 3
  %37 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %32, i64 0, i32 2
  %38 = select i1 %35, %"class.angle::BitSetT.141"* %37, %"class.angle::BitSetT.141"* %36
  %39 = bitcast %"class.angle::PackedEnumMap.1447"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %39) #15
  %40 = bitcast %"class.angle::PackedEnumMap.1447"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 48, i1 false)
  br i1 %18, label %42, label %41

41:                                               ; preds = %30
  call void @_ZN2rx9ProgramVk19fillProgramStateMapEPN5angle13PackedEnumMapIN2gl10ShaderTypeEPKNS3_12ProgramStateELm6EEE(%"class.rx::ProgramVk"* nonnull %17, %"class.angle::PackedEnumMap.1447"* nonnull %4) #15
  br label %47

42:                                               ; preds = %30
  %43 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 20
  %44 = load %"class.rx::ProgramPipelineVk"*, %"class.rx::ProgramPipelineVk"** %43, align 8
  %45 = icmp eq %"class.rx::ProgramPipelineVk"* %44, null
  br i1 %45, label %47, label %46

46:                                               ; preds = %42
  call void @_ZN2rx17ProgramPipelineVk19fillProgramStateMapEPKNS_9ContextVkEPN5angle13PackedEnumMapIN2gl10ShaderTypeEPKNS6_12ProgramStateELm6EEE(%"class.rx::ProgramPipelineVk"* nonnull %44, %"class.rx::ContextVk"* %13, %"class.angle::PackedEnumMap.1447"* nonnull %4) #15
  br label %47

47:                                               ; preds = %41, %42, %46
  call void @_ZN2rx19ProgramExecutableVk5resetEPNS_9ContextVkE(%"class.rx::ProgramExecutableVk"* %0, %"class.rx::ContextVk"* %13)
  %48 = getelementptr inbounds %"class.rx::vk::DescriptorSetLayoutDesc", %"class.rx::vk::DescriptorSetLayoutDesc"* %5, i64 0, i32 0, i32 0, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1536, i8* nonnull %48) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 1536, i1 false)
  call void @_ZN2rx2vk23DescriptorSetLayoutDescC1Ev(%"class.rx::vk::DescriptorSetLayoutDesc"* nonnull %5) #15
  %49 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 3
  store i32 0, i32* %49, align 8
  %50 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %38, i64 0, i32 0
  %51 = load i8, i8* %50, align 1, !noalias !39
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %69, label %53

53:                                               ; preds = %47
  %54 = zext i8 %51 to i32
  %55 = call i32 @llvm.cttz.i32(i32 %54, i1 true) #15, !range !8
  %56 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %60 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 15
  %63 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %64 = zext i32 %55 to i64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #15
  %65 = getelementptr inbounds %"class.angle::PackedEnumMap.1466", %"class.angle::PackedEnumMap.1466"* @_ZN2rxL20kDefaultUniformNamesE, i64 0, i32 0, i32 0, i64 %64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 24, i1 false)
  %66 = load i8*, i8** %65, align 8
  %67 = call i64 @strlen(i8* %66) #15
  %68 = icmp ugt i64 %67, -17
  br i1 %68, label %72, label %74

69:                                               ; preds = %118, %47
  %70 = call zeroext i8 @_ZNK2gl17ProgramExecutable31getLinkedTransformFeedbackStageEv(%"class.gl::ProgramExecutable"* %32) #15
  %71 = icmp eq i8 %70, 6
  br i1 %71, label %155, label %130

72:                                               ; preds = %122, %53
  %73 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %73) #21
  unreachable

74:                                               ; preds = %53, %122
  %75 = phi i64 [ %128, %122 ], [ %67, %53 ]
  %76 = phi i8* [ %127, %122 ], [ %66, %53 ]
  %77 = phi i32 [ %124, %122 ], [ %55, %53 ]
  %78 = phi i64 [ %125, %122 ], [ %64, %53 ]
  %79 = phi i8 [ %120, %122 ], [ %51, %53 ]
  %80 = trunc i32 %77 to i8
  %81 = icmp ult i64 %75, 23
  br i1 %81, label %87, label %82

82:                                               ; preds = %74
  %83 = add nuw i64 %75, 16
  %84 = and i64 %83, -16
  %85 = call i8* @_Znwm(i64 %84) #20
  store i8* %85, i8** %57, align 8
  %86 = or i64 %84, -9223372036854775808
  store i64 %86, i64* %59, align 8
  store i64 %75, i64* %58, align 8
  br label %90

87:                                               ; preds = %74
  %88 = trunc i64 %75 to i8
  store i8 %88, i8* %61, align 1
  %89 = icmp eq i64 %75, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %87, %82
  %91 = phi i8* [ %85, %82 ], [ %56, %87 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %91, i8* align 1 %76, i64 %75, i1 false) #15
  br label %92

92:                                               ; preds = %87, %90
  %93 = phi i8* [ %56, %87 ], [ %91, %90 ]
  %94 = getelementptr inbounds i8, i8* %93, i64 %75
  store i8 0, i8* %94, align 1
  %95 = call dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx30ShaderInterfaceVariableInfoMap3getEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"* %62, i8 zeroext %80, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #15
  %96 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %95, i64 0, i32 5, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = shl i32 1, %77
  %99 = trunc i32 %98 to i8
  %100 = and i8 %97, %99
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %113, label %102

102:                                              ; preds = %92
  %103 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %95, i64 0, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %"class.angle::PackedEnumMap.1453", %"class.angle::PackedEnumMap.1453"* @_ZN2rx5gl_vkL15kShaderStageMapE, i64 0, i32 0, i32 0, i64 %78
  %106 = load i32, i32* %105, align 4
  call void @_ZN2rx2vk23DescriptorSetLayoutDesc6updateEj16VkDescriptorTypejjPKNS0_7SamplerE(%"class.rx::vk::DescriptorSetLayoutDesc"* nonnull %5, i32 %104, i32 8, i32 1, i32 %106, %"class.rx::vk::Sampler"* null) #15
  %107 = load i32, i32* %49, align 8
  %108 = add i32 %107, 1
  store i32 %108, i32* %49, align 8
  %109 = load i8, i8* %61, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %118

111:                                              ; preds = %102
  %112 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %112) #20
  br label %118

113:                                              ; preds = %92
  %114 = load i8, i8* %61, align 1
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %113
  %117 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %117) #20
  br label %118

118:                                              ; preds = %116, %113, %111, %102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #15
  %119 = xor i8 %99, -1
  %120 = and i8 %79, %119
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %69, label %122

122:                                              ; preds = %118
  %123 = zext i8 %120 to i32
  %124 = call i32 @llvm.cttz.i32(i32 %123, i1 true) #15, !range !8
  %125 = zext i32 %124 to i64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #15
  %126 = getelementptr inbounds %"class.angle::PackedEnumMap.1466", %"class.angle::PackedEnumMap.1466"* @_ZN2rxL20kDefaultUniformNamesE, i64 0, i32 0, i32 0, i64 %125
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 24, i1 false)
  %127 = load i8*, i8** %126, align 8
  %128 = call i64 @strlen(i8* %127) #15
  %129 = icmp ugt i64 %128, -17
  br i1 %129, label %72, label %74

130:                                              ; preds = %69
  %131 = zext i8 %70 to i64
  %132 = getelementptr inbounds %"class.angle::PackedEnumMap.1447", %"class.angle::PackedEnumMap.1447"* %4, i64 0, i32 0, i32 0, i64 %131
  %133 = load %"class.gl::ProgramState"*, %"class.gl::ProgramState"** %132, align 8
  %134 = getelementptr inbounds %"class.gl::ProgramState", %"class.gl::ProgramState"* %133, i64 0, i32 23, i32 0
  %135 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %134, align 8
  %136 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %135, i64 0, i32 26, i32 0, i32 0
  %137 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %136, align 8
  %138 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %135, i64 0, i32 26, i32 0, i32 1
  %139 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %138, align 8
  %140 = icmp eq %"struct.gl::TransformFeedbackVarying"* %137, %139
  %141 = icmp eq %"class.gl::TransformFeedback"* %15, null
  %142 = or i1 %141, %140
  br i1 %142, label %155, label %143

143:                                              ; preds = %130
  %144 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %135, i64 0, i32 27
  %145 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %135, i64 0, i32 27, i32 0, i32 1
  %146 = bitcast i32** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %"class.std::__1::vector.180"* %144 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = sub i64 %147, %149
  %151 = ashr exact i64 %150, 2
  %152 = call %"class.rx::TransformFeedbackImpl"* @_ZNK2gl17TransformFeedback17getImplementationEv(%"class.gl::TransformFeedback"* nonnull %15) #15
  %153 = bitcast %"class.rx::TransformFeedbackImpl"* %152 to %"class.rx::TransformFeedbackVk"*
  %154 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 15
  call void @_ZNK2rx19TransformFeedbackVk25updateDescriptorSetLayoutEPNS_9ContextVkERKNS_30ShaderInterfaceVariableInfoMapEmPNS_2vk23DescriptorSetLayoutDescE(%"class.rx::TransformFeedbackVk"* %153, %"class.rx::ContextVk"* %13, %"class.rx::ShaderInterfaceVariableInfoMap"* dereferenceable(240) %154, i64 %151, %"class.rx::vk::DescriptorSetLayoutDesc"* nonnull %5) #15
  br label %155

155:                                              ; preds = %69, %130, %143
  %156 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %13, i64 0, i32 79
  %157 = load %"class.rx::ShareGroupVk"*, %"class.rx::ShareGroupVk"** %156, align 8
  %158 = getelementptr inbounds %"class.rx::ShareGroupVk", %"class.rx::ShareGroupVk"* %157, i64 0, i32 2
  %159 = icmp eq %"class.rx::ContextVk"* %13, null
  %160 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %13, i64 0, i32 1
  %161 = select i1 %159, %"class.rx::vk::Context"* null, %"class.rx::vk::Context"* %160
  %162 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 9
  %163 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 9, i32 0, i32 0, i64 1
  %164 = call i32 @_ZN2rx24DescriptorSetLayoutCache22getDescriptorSetLayoutEPNS_2vk7ContextERKNS1_23DescriptorSetLayoutDescEPNS1_14BindingPointerINS1_19DescriptorSetLayoutEEE(%"class.rx::DescriptorSetLayoutCache"* %158, %"class.rx::vk::Context"* %161, %"class.rx::vk::DescriptorSetLayoutDesc"* nonnull dereferenceable(1536) %5, %"class.rx::vk::BindingPointer.862"* %163) #15
  %165 = icmp eq i32 %164, 1
  br i1 %165, label %416, label %166

166:                                              ; preds = %155
  %167 = getelementptr inbounds %"class.rx::vk::DescriptorSetLayoutDesc", %"class.rx::vk::DescriptorSetLayoutDesc"* %7, i64 0, i32 0, i32 0, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1536, i8* nonnull %167) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %167, i8 -86, i64 1536, i1 false)
  call void @_ZN2rx2vk23DescriptorSetLayoutDescC1Ev(%"class.rx::vk::DescriptorSetLayoutDesc"* nonnull %7) #15
  %168 = load i8, i8* %50, align 1, !noalias !42
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %170, label %187

170:                                              ; preds = %210, %166
  %171 = phi i32 [ 0, %166 ], [ %211, %210 ]
  %172 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %13, i64 0, i32 1, i32 1
  %173 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %172, align 8
  %174 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %173, i64 0, i32 16, i32 7, i32 23
  %175 = load i32, i32* %174, align 8
  %176 = load i32, i32* %49, align 8
  %177 = add i32 %171, 1
  %178 = add i32 %177, %176
  %179 = icmp ugt i32 %178, %175
  %180 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 12
  %181 = select i1 %179, i32 6, i32 8
  store i32 %181, i32* %180, align 8
  %182 = load i8, i8* %50, align 1, !noalias !45
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %280, label %184

184:                                              ; preds = %170
  %185 = zext i8 %182 to i32
  %186 = call i32 @llvm.cttz.i32(i32 %185, i1 true) #15, !range !8
  br label %251

187:                                              ; preds = %166, %210
  %188 = phi i8 [ %213, %210 ], [ %168, %166 ]
  %189 = phi i32 [ %211, %210 ], [ 0, %166 ]
  %190 = zext i8 %188 to i32
  %191 = call i32 @llvm.cttz.i32(i32 %190, i1 true) #15, !range !8
  %192 = zext i32 %191 to i64
  %193 = getelementptr inbounds %"class.angle::PackedEnumMap.1447", %"class.angle::PackedEnumMap.1447"* %4, i64 0, i32 0, i32 0, i64 %192
  %194 = load %"class.gl::ProgramState"*, %"class.gl::ProgramState"** %193, align 8
  %195 = getelementptr inbounds %"class.gl::ProgramState", %"class.gl::ProgramState"* %194, i64 0, i32 23, i32 0
  %196 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %195, align 8
  %197 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %196, i64 0, i32 33
  %198 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %196, i64 0, i32 33, i32 0, i32 1
  %199 = bitcast %"struct.gl::InterfaceBlock"** %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = bitcast %"class.std::__1::vector.194"* %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, %202
  %204 = inttoptr i64 %202 to %"struct.gl::InterfaceBlock"*
  %205 = shl i32 1, %191
  %206 = trunc i32 %205 to i8
  br i1 %203, label %210, label %207

207:                                              ; preds = %187
  %208 = sub i64 %200, %202
  %209 = sdiv exact i64 %208, 112
  br label %215

210:                                              ; preds = %237, %187
  %211 = phi i32 [ %189, %187 ], [ %245, %237 ]
  %212 = xor i8 %206, -1
  %213 = and i8 %188, %212
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %170, label %187

215:                                              ; preds = %207, %237
  %216 = phi i64 [ 0, %207 ], [ %246, %237 ]
  %217 = phi i32 [ %189, %207 ], [ %245, %237 ]
  %218 = phi i32 [ 0, %207 ], [ %239, %237 ]
  %219 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %204, i64 %216, i32 3
  %220 = load i8, i8* %219, align 8, !range !2
  %221 = icmp eq i8 %220, 0
  br i1 %221, label %237, label %222

222:                                              ; preds = %215
  %223 = add i32 %218, 1
  %224 = zext i32 %223 to i64
  %225 = icmp ugt i64 %209, %224
  br i1 %225, label %226, label %237

226:                                              ; preds = %222, %232
  %227 = phi i64 [ %235, %232 ], [ %224, %222 ]
  %228 = phi i32 [ %233, %232 ], [ 1, %222 ]
  %229 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %204, i64 %227, i32 5
  %230 = load i32, i32* %229, align 4
  %231 = icmp eq i32 %230, %228
  br i1 %231, label %232, label %237

232:                                              ; preds = %226
  %233 = add i32 %228, 1
  %234 = add i32 %233, %218
  %235 = zext i32 %234 to i64
  %236 = icmp ugt i64 %209, %235
  br i1 %236, label %226, label %237

237:                                              ; preds = %226, %232, %215, %222
  %238 = phi i32 [ 1, %215 ], [ 1, %222 ], [ %233, %232 ], [ %228, %226 ]
  %239 = add i32 %238, %218
  %240 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %204, i64 %216, i32 0, i32 0, i32 1, i32 0
  %241 = load i8, i8* %240, align 1
  %242 = and i8 %241, %206
  %243 = icmp eq i8 %242, 0
  %244 = select i1 %243, i32 0, i32 %238
  %245 = add i32 %244, %217
  %246 = zext i32 %239 to i64
  %247 = icmp ugt i64 %209, %246
  br i1 %247, label %215, label %210

248:                                              ; preds = %251
  %249 = load i8, i8* %50, align 1, !noalias !48
  %250 = icmp eq i8 %249, 0
  br i1 %250, label %280, label %286

251:                                              ; preds = %276, %184
  %252 = phi i32 [ %279, %276 ], [ %181, %184 ]
  %253 = phi i8 [ %274, %276 ], [ %182, %184 ]
  %254 = phi i32 [ %278, %276 ], [ %186, %184 ]
  %255 = zext i32 %254 to i64
  %256 = trunc i32 %254 to i8
  %257 = getelementptr inbounds %"class.angle::PackedEnumMap.1447", %"class.angle::PackedEnumMap.1447"* %4, i64 0, i32 0, i32 0, i64 %255
  %258 = load %"class.gl::ProgramState"*, %"class.gl::ProgramState"** %257, align 8
  %259 = getelementptr inbounds %"class.gl::ProgramState", %"class.gl::ProgramState"* %258, i64 0, i32 23, i32 0
  %260 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %259, align 8
  %261 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %260, i64 0, i32 33
  call void @_ZN2rx19ProgramExecutableVk34addInterfaceBlockDescriptorSetDescERKNSt3__16vectorIN2gl14InterfaceBlockENS1_9allocatorIS4_EEEENS3_10ShaderTypeE16VkDescriptorTypePNS_2vk23DescriptorSetLayoutDescE(%"class.rx::ProgramExecutableVk"* %0, %"class.std::__1::vector.194"* dereferenceable(24) %261, i8 zeroext %256, i32 %252, %"class.rx::vk::DescriptorSetLayoutDesc"* nonnull %7)
  %262 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %259, align 8
  %263 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %262, i64 0, i32 55
  %264 = load i8, i8* %263, align 4, !range !2
  %265 = icmp eq i8 %264, 0
  %266 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %262, i64 0, i32 37
  %267 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %262, i64 0, i32 38
  %268 = select i1 %265, %"class.std::__1::vector.194"* %267, %"class.std::__1::vector.194"* %266
  call void @_ZN2rx19ProgramExecutableVk34addInterfaceBlockDescriptorSetDescERKNSt3__16vectorIN2gl14InterfaceBlockENS1_9allocatorIS4_EEEENS3_10ShaderTypeE16VkDescriptorTypePNS_2vk23DescriptorSetLayoutDescE(%"class.rx::ProgramExecutableVk"* %0, %"class.std::__1::vector.194"* dereferenceable(24) %268, i8 zeroext %256, i32 7, %"class.rx::vk::DescriptorSetLayoutDesc"* nonnull %7)
  %269 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %259, align 8
  %270 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %269, i64 0, i32 35
  call void @_ZN2rx19ProgramExecutableVk39addAtomicCounterBufferDescriptorSetDescERKNSt3__16vectorIN2gl20ShaderVariableBufferENS1_9allocatorIS4_EEEENS3_10ShaderTypeEPNS_2vk23DescriptorSetLayoutDescE(%"class.rx::ProgramExecutableVk"* %0, %"class.std::__1::vector.202"* dereferenceable(24) %270, i8 zeroext %256, %"class.rx::vk::DescriptorSetLayoutDesc"* nonnull %7)
  %271 = shl i32 1, %254
  %272 = trunc i32 %271 to i8
  %273 = xor i8 %272, -1
  %274 = and i8 %253, %273
  %275 = icmp eq i8 %274, 0
  br i1 %275, label %248, label %276

276:                                              ; preds = %251
  %277 = zext i8 %274 to i32
  %278 = call i32 @llvm.cttz.i32(i32 %277, i1 true) #15, !range !8
  %279 = load i32, i32* %180, align 8
  br label %251

280:                                              ; preds = %286, %170, %248
  %281 = load %"class.rx::ShareGroupVk"*, %"class.rx::ShareGroupVk"** %156, align 8
  %282 = getelementptr inbounds %"class.rx::ShareGroupVk", %"class.rx::ShareGroupVk"* %281, i64 0, i32 2
  %283 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 9, i32 0, i32 0, i64 3
  %284 = call i32 @_ZN2rx24DescriptorSetLayoutCache22getDescriptorSetLayoutEPNS_2vk7ContextERKNS1_23DescriptorSetLayoutDescEPNS1_14BindingPointerINS1_19DescriptorSetLayoutEEE(%"class.rx::DescriptorSetLayoutCache"* %282, %"class.rx::vk::Context"* %161, %"class.rx::vk::DescriptorSetLayoutDesc"* nonnull dereferenceable(1536) %7, %"class.rx::vk::BindingPointer.862"* %283) #15
  %285 = icmp eq i32 %284, 1
  br i1 %285, label %414, label %302

286:                                              ; preds = %248, %286
  %287 = phi i8 [ %300, %286 ], [ %249, %248 ]
  %288 = zext i8 %287 to i32
  %289 = call i32 @llvm.cttz.i32(i32 %288, i1 true) #15, !range !8
  %290 = zext i32 %289 to i64
  %291 = trunc i32 %289 to i8
  %292 = getelementptr inbounds %"class.angle::PackedEnumMap.1447", %"class.angle::PackedEnumMap.1447"* %4, i64 0, i32 0, i32 0, i64 %290
  %293 = load %"class.gl::ProgramState"*, %"class.gl::ProgramState"** %292, align 8
  %294 = getelementptr inbounds %"class.gl::ProgramState", %"class.gl::ProgramState"* %293, i64 0, i32 23, i32 0
  %295 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %294, align 8
  call void @_ZN2rx19ProgramExecutableVk25addImageDescriptorSetDescERKN2gl17ProgramExecutableEPNS_2vk23DescriptorSetLayoutDescE(%"class.rx::ProgramExecutableVk"* %0, %"class.gl::ProgramExecutable"* dereferenceable(1728) %295, %"class.rx::vk::DescriptorSetLayoutDesc"* nonnull %7)
  %296 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %294, align 8
  call void @_ZN2rx19ProgramExecutableVk35addInputAttachmentDescriptorSetDescERKN2gl17ProgramExecutableENS1_10ShaderTypeEPNS_2vk23DescriptorSetLayoutDescE(%"class.rx::ProgramExecutableVk"* %0, %"class.gl::ProgramExecutable"* dereferenceable(1728) %296, i8 zeroext %291, %"class.rx::vk::DescriptorSetLayoutDesc"* nonnull %7)
  %297 = shl i32 1, %289
  %298 = trunc i32 %297 to i8
  %299 = xor i8 %298, -1
  %300 = and i8 %287, %299
  %301 = icmp eq i8 %300, 0
  br i1 %301, label %280, label %286

302:                                              ; preds = %280
  %303 = getelementptr inbounds %"class.rx::vk::DescriptorSetLayoutDesc", %"class.rx::vk::DescriptorSetLayoutDesc"* %8, i64 0, i32 0, i32 0, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1536, i8* nonnull %303) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %303, i8 -86, i64 1536, i1 false)
  call void @_ZN2rx2vk23DescriptorSetLayoutDescC1Ev(%"class.rx::vk::DescriptorSetLayoutDesc"* nonnull %8) #15
  %304 = load i8, i8* %50, align 1, !noalias !51
  %305 = icmp eq i8 %304, 0
  br i1 %305, label %317, label %306

306:                                              ; preds = %302
  %307 = zext i8 %304 to i32
  %308 = call i32 @llvm.cttz.i32(i32 %307, i1 true) #15, !range !8
  %309 = zext i32 %308 to i64
  %310 = getelementptr inbounds %"class.angle::PackedEnumMap.1447", %"class.angle::PackedEnumMap.1447"* %4, i64 0, i32 0, i32 0, i64 %309
  %311 = load %"class.gl::ProgramState"*, %"class.gl::ProgramState"** %310, align 8
  call void @_ZN2rx19ProgramExecutableVk27addTextureDescriptorSetDescERKN2gl12ProgramStateEPKNSt3__15arrayINS_2vk11TextureUnitELm96EEEPNS7_23DescriptorSetLayoutDescE(%"class.rx::ProgramExecutableVk"* %0, %"class.gl::ProgramState"* dereferenceable(304) %311, %"struct.std::__1::array.923"* %2, %"class.rx::vk::DescriptorSetLayoutDesc"* nonnull %8)
  %312 = shl i32 1, %308
  %313 = trunc i32 %312 to i8
  %314 = xor i8 %313, -1
  %315 = and i8 %304, %314
  %316 = icmp eq i8 %315, 0
  br i1 %316, label %317, label %323

317:                                              ; preds = %323, %306, %302
  %318 = load %"class.rx::ShareGroupVk"*, %"class.rx::ShareGroupVk"** %156, align 8
  %319 = getelementptr inbounds %"class.rx::ShareGroupVk", %"class.rx::ShareGroupVk"* %318, i64 0, i32 2
  %320 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 9, i32 0, i32 0, i64 2
  %321 = call i32 @_ZN2rx24DescriptorSetLayoutCache22getDescriptorSetLayoutEPNS_2vk7ContextERKNS1_23DescriptorSetLayoutDescEPNS1_14BindingPointerINS1_19DescriptorSetLayoutEEE(%"class.rx::DescriptorSetLayoutCache"* %319, %"class.rx::vk::Context"* %161, %"class.rx::vk::DescriptorSetLayoutDesc"* nonnull dereferenceable(1536) %8, %"class.rx::vk::BindingPointer.862"* %320) #15
  %322 = icmp eq i32 %321, 1
  br i1 %322, label %412, label %335

323:                                              ; preds = %306, %323
  %324 = phi i8 [ %333, %323 ], [ %315, %306 ]
  %325 = zext i8 %324 to i32
  %326 = call i32 @llvm.cttz.i32(i32 %325, i1 true) #15, !range !8
  %327 = zext i32 %326 to i64
  %328 = getelementptr inbounds %"class.angle::PackedEnumMap.1447", %"class.angle::PackedEnumMap.1447"* %4, i64 0, i32 0, i32 0, i64 %327
  %329 = load %"class.gl::ProgramState"*, %"class.gl::ProgramState"** %328, align 8
  call void @_ZN2rx19ProgramExecutableVk27addTextureDescriptorSetDescERKN2gl12ProgramStateEPKNSt3__15arrayINS_2vk11TextureUnitELm96EEEPNS7_23DescriptorSetLayoutDescE(%"class.rx::ProgramExecutableVk"* %0, %"class.gl::ProgramState"* dereferenceable(304) %329, %"struct.std::__1::array.923"* %2, %"class.rx::vk::DescriptorSetLayoutDesc"* nonnull %8)
  %330 = shl i32 1, %326
  %331 = trunc i32 %330 to i8
  %332 = xor i8 %331, -1
  %333 = and i8 %324, %332
  %334 = icmp eq i8 %333, 0
  br i1 %334, label %317, label %323

335:                                              ; preds = %317
  %336 = load i8, i8* %33, align 4, !range !2
  %337 = icmp eq i8 %336, 0
  %338 = select i1 %337, i32 31, i32 32
  %339 = getelementptr inbounds %"class.rx::vk::DescriptorSetLayoutDesc", %"class.rx::vk::DescriptorSetLayoutDesc"* %9, i64 0, i32 0, i32 0, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1536, i8* nonnull %339) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %339, i8 -86, i64 1536, i1 false)
  call void @_ZNK2rx9ContextVk34getDriverUniformsDescriptorSetDescEj(%"class.rx::vk::DescriptorSetLayoutDesc"* nonnull sret %9, %"class.rx::ContextVk"* %13, i32 %338) #15
  %340 = load %"class.rx::ShareGroupVk"*, %"class.rx::ShareGroupVk"** %156, align 8
  %341 = getelementptr inbounds %"class.rx::ShareGroupVk", %"class.rx::ShareGroupVk"* %340, i64 0, i32 2
  %342 = getelementptr inbounds %"class.angle::PackedEnumMap.860", %"class.angle::PackedEnumMap.860"* %162, i64 0, i32 0, i32 0, i64 0
  %343 = call i32 @_ZN2rx24DescriptorSetLayoutCache22getDescriptorSetLayoutEPNS_2vk7ContextERKNS1_23DescriptorSetLayoutDescEPNS1_14BindingPointerINS1_19DescriptorSetLayoutEEE(%"class.rx::DescriptorSetLayoutCache"* %341, %"class.rx::vk::Context"* %161, %"class.rx::vk::DescriptorSetLayoutDesc"* nonnull dereferenceable(1536) %9, %"class.rx::vk::BindingPointer.862"* %342) #15
  %344 = icmp eq i32 %343, 1
  br i1 %344, label %410, label %345

345:                                              ; preds = %335
  %346 = getelementptr inbounds %"class.rx::vk::PipelineLayoutDesc", %"class.rx::vk::PipelineLayoutDesc"* %10, i64 0, i32 0, i32 0, i32 0, i64 0, i32 0, i32 0, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 6192, i8* nonnull %346) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %346, i8 -86, i64 6192, i1 false)
  call void @_ZN2rx2vk18PipelineLayoutDescC1Ev(%"class.rx::vk::PipelineLayoutDesc"* nonnull %10) #15
  call void @_ZN2rx2vk18PipelineLayoutDesc25updateDescriptorSetLayoutENS_18DescriptorSetIndexERKNS0_23DescriptorSetLayoutDescE(%"class.rx::vk::PipelineLayoutDesc"* nonnull %10, i32 1, %"class.rx::vk::DescriptorSetLayoutDesc"* nonnull dereferenceable(1536) %5) #15
  call void @_ZN2rx2vk18PipelineLayoutDesc25updateDescriptorSetLayoutENS_18DescriptorSetIndexERKNS0_23DescriptorSetLayoutDescE(%"class.rx::vk::PipelineLayoutDesc"* nonnull %10, i32 3, %"class.rx::vk::DescriptorSetLayoutDesc"* nonnull dereferenceable(1536) %7) #15
  call void @_ZN2rx2vk18PipelineLayoutDesc25updateDescriptorSetLayoutENS_18DescriptorSetIndexERKNS0_23DescriptorSetLayoutDescE(%"class.rx::vk::PipelineLayoutDesc"* nonnull %10, i32 2, %"class.rx::vk::DescriptorSetLayoutDesc"* nonnull dereferenceable(1536) %8) #15
  call void @_ZN2rx2vk18PipelineLayoutDesc25updateDescriptorSetLayoutENS_18DescriptorSetIndexERKNS0_23DescriptorSetLayoutDescE(%"class.rx::vk::PipelineLayoutDesc"* nonnull %10, i32 0, %"class.rx::vk::DescriptorSetLayoutDesc"* nonnull dereferenceable(1536) %9) #15
  %347 = load %"class.rx::ShareGroupVk"*, %"class.rx::ShareGroupVk"** %156, align 8
  %348 = getelementptr inbounds %"class.rx::ShareGroupVk", %"class.rx::ShareGroupVk"* %347, i64 0, i32 1
  %349 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 8
  %350 = call i32 @_ZN2rx19PipelineLayoutCache17getPipelineLayoutEPNS_2vk7ContextERKNS1_18PipelineLayoutDescERKN5angle13PackedEnumMapINS_18DescriptorSetIndexENS1_14BindingPointerINS1_19DescriptorSetLayoutEEELm4EEEPNSA_INS1_14PipelineLayoutEEE(%"class.rx::PipelineLayoutCache"* %348, %"class.rx::vk::Context"* %161, %"class.rx::vk::PipelineLayoutDesc"* nonnull dereferenceable(6192) %10, %"class.angle::PackedEnumMap.860"* dereferenceable(32) %162, %"class.rx::vk::BindingPointer.858"* %349) #15
  %351 = icmp eq i32 %350, 1
  br i1 %351, label %408, label %352

352:                                              ; preds = %345
  %353 = getelementptr inbounds %"class.rx::vk::BindingPointer.862", %"class.rx::vk::BindingPointer.862"* %163, i64 0, i32 0
  %354 = load %"class.rx::vk::RefCounted.863"*, %"class.rx::vk::RefCounted.863"** %353, align 8
  %355 = getelementptr inbounds %"class.rx::vk::RefCounted.863", %"class.rx::vk::RefCounted.863"* %354, i64 0, i32 1, i32 0, i32 0
  %356 = load %struct.VkDescriptorSetLayout_T*, %struct.VkDescriptorSetLayout_T** %355, align 8
  %357 = call i32 @_ZN2rx19ProgramExecutableVk26initDynamicDescriptorPoolsEPNS_9ContextVkERNS_2vk23DescriptorSetLayoutDescENS_18DescriptorSetIndexEP23VkDescriptorSetLayout_T(%"class.rx::ProgramExecutableVk"* %0, %"class.rx::ContextVk"* %13, %"class.rx::vk::DescriptorSetLayoutDesc"* nonnull dereferenceable(1536) %5, i32 1, %struct.VkDescriptorSetLayout_T* %356)
  %358 = icmp eq i32 %357, 1
  br i1 %358, label %408, label %359

359:                                              ; preds = %352
  %360 = getelementptr inbounds %"class.rx::vk::BindingPointer.862", %"class.rx::vk::BindingPointer.862"* %283, i64 0, i32 0
  %361 = load %"class.rx::vk::RefCounted.863"*, %"class.rx::vk::RefCounted.863"** %360, align 8
  %362 = getelementptr inbounds %"class.rx::vk::RefCounted.863", %"class.rx::vk::RefCounted.863"* %361, i64 0, i32 1, i32 0, i32 0
  %363 = load %struct.VkDescriptorSetLayout_T*, %struct.VkDescriptorSetLayout_T** %362, align 8
  %364 = call i32 @_ZN2rx19ProgramExecutableVk26initDynamicDescriptorPoolsEPNS_9ContextVkERNS_2vk23DescriptorSetLayoutDescENS_18DescriptorSetIndexEP23VkDescriptorSetLayout_T(%"class.rx::ProgramExecutableVk"* %0, %"class.rx::ContextVk"* %13, %"class.rx::vk::DescriptorSetLayoutDesc"* nonnull dereferenceable(1536) %7, i32 3, %struct.VkDescriptorSetLayout_T* %363)
  %365 = icmp eq i32 %364, 1
  br i1 %365, label %408, label %366

366:                                              ; preds = %359
  %367 = getelementptr inbounds %"class.rx::vk::BindingPointer.862", %"class.rx::vk::BindingPointer.862"* %320, i64 0, i32 0
  %368 = load %"class.rx::vk::RefCounted.863"*, %"class.rx::vk::RefCounted.863"** %367, align 8
  %369 = getelementptr inbounds %"class.rx::vk::RefCounted.863", %"class.rx::vk::RefCounted.863"* %368, i64 0, i32 1, i32 0, i32 0
  %370 = load %struct.VkDescriptorSetLayout_T*, %struct.VkDescriptorSetLayout_T** %369, align 8
  %371 = call i32 @_ZN2rx19ProgramExecutableVk26initDynamicDescriptorPoolsEPNS_9ContextVkERNS_2vk23DescriptorSetLayoutDescENS_18DescriptorSetIndexEP23VkDescriptorSetLayout_T(%"class.rx::ProgramExecutableVk"* %0, %"class.rx::ContextVk"* %13, %"class.rx::vk::DescriptorSetLayoutDesc"* nonnull dereferenceable(1536) %8, i32 2, %struct.VkDescriptorSetLayout_T* %370)
  %372 = icmp eq i32 %371, 1
  br i1 %372, label %408, label %373

373:                                              ; preds = %366
  %374 = getelementptr inbounds %"class.angle::PackedEnumMap.860", %"class.angle::PackedEnumMap.860"* %162, i64 0, i32 0, i32 0, i64 0, i32 0
  %375 = load %"class.rx::vk::RefCounted.863"*, %"class.rx::vk::RefCounted.863"** %374, align 8
  %376 = getelementptr inbounds %"class.rx::vk::RefCounted.863", %"class.rx::vk::RefCounted.863"* %375, i64 0, i32 1, i32 0, i32 0
  %377 = load %struct.VkDescriptorSetLayout_T*, %struct.VkDescriptorSetLayout_T** %376, align 8
  %378 = call i32 @_ZN2rx19ProgramExecutableVk26initDynamicDescriptorPoolsEPNS_9ContextVkERNS_2vk23DescriptorSetLayoutDescENS_18DescriptorSetIndexEP23VkDescriptorSetLayout_T(%"class.rx::ProgramExecutableVk"* %0, %"class.rx::ContextVk"* %13, %"class.rx::vk::DescriptorSetLayoutDesc"* nonnull dereferenceable(1536) %9, i32 0, %struct.VkDescriptorSetLayout_T* %377)
  %379 = icmp eq i32 %378, 1
  br i1 %379, label %408, label %380

380:                                              ; preds = %373
  %381 = load i8, i8* %33, align 4, !range !2
  %382 = icmp eq i8 %381, 0
  %383 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %32, i64 0, i32 3, i32 0
  %384 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %32, i64 0, i32 2, i32 0
  %385 = select i1 %382, i8* %384, i8* %383
  %386 = load i8, i8* %385, align 1
  %387 = zext i8 %386 to i32
  %388 = call i32 @llvm.ctpop.i32(i32 %387) #15, !range !8
  %389 = zext i32 %388 to i64
  %390 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 13, i32 1
  %391 = load i64, i64* %390, align 8
  %392 = icmp ugt i64 %391, %389
  br i1 %392, label %396, label %393

393:                                              ; preds = %396, %380
  %394 = phi i64 [ %391, %380 ], [ %400, %396 ]
  %395 = icmp ult i64 %394, %389
  br i1 %395, label %402, label %408

396:                                              ; preds = %380, %396
  %397 = phi i64 [ %400, %396 ], [ %391, %380 ]
  %398 = add i64 %397, -1
  store i64 %398, i64* %390, align 8
  %399 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 13, i32 0, i32 0, i64 %398
  store i32 0, i32* %399, align 4
  %400 = load i64, i64* %390, align 8
  %401 = icmp ugt i64 %400, %389
  br i1 %401, label %396, label %393

402:                                              ; preds = %393, %402
  %403 = phi i64 [ %406, %402 ], [ %394, %393 ]
  %404 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 13, i32 0, i32 0, i64 %403
  store i32 0, i32* %404, align 4
  %405 = load i64, i64* %390, align 8
  %406 = add i64 %405, 1
  store i64 %406, i64* %390, align 8
  %407 = icmp ult i64 %406, %389
  br i1 %407, label %402, label %408

408:                                              ; preds = %402, %373, %366, %359, %352, %345, %393
  %409 = phi i32 [ 1, %373 ], [ 1, %366 ], [ 1, %359 ], [ 1, %352 ], [ 1, %345 ], [ 0, %393 ], [ 0, %402 ]
  call void @_ZN2rx2vk18PipelineLayoutDescD1Ev(%"class.rx::vk::PipelineLayoutDesc"* nonnull %10) #15
  call void @llvm.lifetime.end.p0i8(i64 6192, i8* nonnull %346) #15
  br label %410

410:                                              ; preds = %335, %408
  %411 = phi i32 [ %409, %408 ], [ 1, %335 ]
  call void @_ZN2rx2vk23DescriptorSetLayoutDescD1Ev(%"class.rx::vk::DescriptorSetLayoutDesc"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 1536, i8* nonnull %339) #15
  br label %412

412:                                              ; preds = %317, %410
  %413 = phi i32 [ %411, %410 ], [ 1, %317 ]
  call void @_ZN2rx2vk23DescriptorSetLayoutDescD1Ev(%"class.rx::vk::DescriptorSetLayoutDesc"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 1536, i8* nonnull %303) #15
  br label %414

414:                                              ; preds = %280, %412
  %415 = phi i32 [ %413, %412 ], [ 1, %280 ]
  call void @_ZN2rx2vk23DescriptorSetLayoutDescD1Ev(%"class.rx::vk::DescriptorSetLayoutDesc"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 1536, i8* nonnull %167) #15
  br label %416

416:                                              ; preds = %155, %414
  %417 = phi i32 [ %415, %414 ], [ 1, %155 ]
  call void @_ZN2rx2vk23DescriptorSetLayoutDescD1Ev(%"class.rx::vk::DescriptorSetLayoutDesc"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 1536, i8* nonnull %48) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %39) #15
  ret i32 %417
}

declare void @_ZN2rx2vk23DescriptorSetLayoutDescC1Ev(%"class.rx::vk::DescriptorSetLayoutDesc"*) unnamed_addr #6

declare zeroext i8 @_ZNK2gl17ProgramExecutable31getLinkedTransformFeedbackStageEv(%"class.gl::ProgramExecutable"*) local_unnamed_addr #6

declare void @_ZNK2rx19TransformFeedbackVk25updateDescriptorSetLayoutEPNS_9ContextVkERKNS_30ShaderInterfaceVariableInfoMapEmPNS_2vk23DescriptorSetLayoutDescE(%"class.rx::TransformFeedbackVk"*, %"class.rx::ContextVk"*, %"class.rx::ShaderInterfaceVariableInfoMap"* dereferenceable(240), i64, %"class.rx::vk::DescriptorSetLayoutDesc"*) local_unnamed_addr #6

declare i32 @_ZN2rx24DescriptorSetLayoutCache22getDescriptorSetLayoutEPNS_2vk7ContextERKNS1_23DescriptorSetLayoutDescEPNS1_14BindingPointerINS1_19DescriptorSetLayoutEEE(%"class.rx::DescriptorSetLayoutCache"*, %"class.rx::vk::Context"*, %"class.rx::vk::DescriptorSetLayoutDesc"* dereferenceable(1536), %"class.rx::vk::BindingPointer.862"*) local_unnamed_addr #6

declare void @_ZNK2rx9ContextVk34getDriverUniformsDescriptorSetDescEj(%"class.rx::vk::DescriptorSetLayoutDesc"* sret, %"class.rx::ContextVk"*, i32) local_unnamed_addr #6

declare void @_ZN2rx2vk18PipelineLayoutDescC1Ev(%"class.rx::vk::PipelineLayoutDesc"*) unnamed_addr #6

declare void @_ZN2rx2vk18PipelineLayoutDesc25updateDescriptorSetLayoutENS_18DescriptorSetIndexERKNS0_23DescriptorSetLayoutDescE(%"class.rx::vk::PipelineLayoutDesc"*, i32, %"class.rx::vk::DescriptorSetLayoutDesc"* dereferenceable(1536)) local_unnamed_addr #6

declare i32 @_ZN2rx19PipelineLayoutCache17getPipelineLayoutEPNS_2vk7ContextERKNS1_18PipelineLayoutDescERKN5angle13PackedEnumMapINS_18DescriptorSetIndexENS1_14BindingPointerINS1_19DescriptorSetLayoutEEELm4EEEPNSA_INS1_14PipelineLayoutEEE(%"class.rx::PipelineLayoutCache"*, %"class.rx::vk::Context"*, %"class.rx::vk::PipelineLayoutDesc"* dereferenceable(6192), %"class.angle::PackedEnumMap.860"* dereferenceable(32), %"class.rx::vk::BindingPointer.858"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN2rx2vk18PipelineLayoutDescD1Ev(%"class.rx::vk::PipelineLayoutDesc"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2rx2vk23DescriptorSetLayoutDescD1Ev(%"class.rx::vk::DescriptorSetLayoutDesc"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx19ProgramExecutableVk24resolvePrecisionMismatchERKNSt3__16vectorIN2gl17ProgramVaryingRefENS1_9allocatorIS4_EEEE(%"class.rx::ProgramExecutableVk"*, %"class.std::__1::vector.1475"* nocapture readonly dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1475", %"class.std::__1::vector.1475"* %1, i64 0, i32 0, i32 0
  %4 = load %"struct.gl::ProgramVaryingRef"*, %"struct.gl::ProgramVaryingRef"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.1475", %"class.std::__1::vector.1475"* %1, i64 0, i32 0, i32 1
  %6 = load %"struct.gl::ProgramVaryingRef"*, %"struct.gl::ProgramVaryingRef"** %5, align 8
  %7 = icmp eq %"struct.gl::ProgramVaryingRef"* %4, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 15
  br label %11

10:                                               ; preds = %42, %2
  ret void

11:                                               ; preds = %8, %42
  %12 = phi %"struct.gl::ProgramVaryingRef"* [ %4, %8 ], [ %43, %42 ]
  %13 = getelementptr inbounds %"struct.gl::ProgramVaryingRef", %"struct.gl::ProgramVaryingRef"* %12, i64 0, i32 0
  %14 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %13, align 8
  %15 = icmp eq %"struct.sh::ShaderVariable"* %14, null
  br i1 %15, label %42, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.gl::ProgramVaryingRef", %"struct.gl::ProgramVaryingRef"* %12, i64 0, i32 1
  %18 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %17, align 8
  %19 = icmp eq %"struct.sh::ShaderVariable"* %18, null
  br i1 %19, label %42, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %14, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %18, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %42, label %26

26:                                               ; preds = %20
  %27 = icmp ugt i32 %22, %24
  br i1 %27, label %28, label %35

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"struct.gl::ProgramVaryingRef", %"struct.gl::ProgramVaryingRef"* %12, i64 0, i32 2
  %30 = load i8, i8* %29, align 8
  %31 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %14, i64 0, i32 3
  %32 = tail call dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx30ShaderInterfaceVariableInfoMap3getEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"* %9, i8 zeroext %30, %"class.std::__1::basic_string"* dereferenceable(24) %31) #15
  %33 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %32, i64 0, i32 11
  store i8 1, i8* %33, align 2
  %34 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %32, i64 0, i32 9
  store i8 1, i8* %34, align 8
  br label %42

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"struct.gl::ProgramVaryingRef", %"struct.gl::ProgramVaryingRef"* %12, i64 0, i32 3
  %37 = load i8, i8* %36, align 1
  %38 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %18, i64 0, i32 3
  %39 = tail call dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx30ShaderInterfaceVariableInfoMap3getEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"* %9, i8 zeroext %37, %"class.std::__1::basic_string"* dereferenceable(24) %38) #15
  %40 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %39, i64 0, i32 10
  store i8 1, i8* %40, align 1
  %41 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %39, i64 0, i32 9
  store i8 1, i8* %41, align 8
  br label %42

42:                                               ; preds = %20, %28, %35, %11, %16
  %43 = getelementptr inbounds %"struct.gl::ProgramVaryingRef", %"struct.gl::ProgramVaryingRef"* %12, i64 1
  %44 = icmp eq %"struct.gl::ProgramVaryingRef"* %43, %6
  br i1 %44, label %10, label %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx19ProgramExecutableVk34updateDefaultUniformsDescriptorSetEN2gl10ShaderTypeERKNS_19DefaultUniformBlockEPNS_2vk12BufferHelperEPNS_9ContextVkE(%"class.rx::ProgramExecutableVk"*, i8 zeroext, %"struct.rx::DefaultUniformBlock"* nocapture readonly dereferenceable(48), %"class.rx::vk::BufferHelper"* nocapture readonly, %"class.rx::ContextVk"*) local_unnamed_addr #3 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %11 = zext i8 %1 to i64
  %12 = getelementptr inbounds %"class.angle::PackedEnumMap.1466", %"class.angle::PackedEnumMap.1466"* @_ZN2rxL20kDefaultUniformNamesE, i64 0, i32 0, i32 0, i64 %11
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  %14 = load i8*, i8** %12, align 8
  %15 = tail call i64 @strlen(i8* %14) #15
  %16 = icmp ugt i64 %15, -17
  br i1 %16, label %17, label %19

17:                                               ; preds = %5
  %18 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %18) #21
  unreachable

19:                                               ; preds = %5
  %20 = icmp ult i64 %15, 23
  br i1 %20, label %26, label %21

21:                                               ; preds = %19
  %22 = add nuw i64 %15, 16
  %23 = and i64 %22, -16
  %24 = tail call i8* @_Znwm(i64 %23) #20
  store i8* %24, i8** %8, align 8
  %25 = or i64 %23, -9223372036854775808
  store i64 %25, i64* %10, align 8
  store i64 %15, i64* %9, align 8
  br label %31

26:                                               ; preds = %19
  %27 = trunc i64 %15 to i8
  %28 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 %27, i8* %29, align 1
  %30 = icmp eq i64 %15, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %26, %21
  %32 = phi i8* [ %24, %21 ], [ %7, %26 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %32, i8* align 1 %14, i64 %15, i1 false) #15
  br label %33

33:                                               ; preds = %26, %31
  %34 = phi i8* [ %7, %26 ], [ %32, %31 ]
  %35 = getelementptr inbounds i8, i8* %34, i64 %15
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 15
  %37 = call dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx30ShaderInterfaceVariableInfoMap3getEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"* %36, i8 zeroext %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #15
  %38 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %37, i64 0, i32 5, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %1 to i32
  %41 = shl i32 1, %40
  %42 = trunc i32 %41 to i8
  %43 = and i8 %39, %42
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %225, label %45

45:                                               ; preds = %33
  %46 = call %struct.VkWriteDescriptorSet* @_ZN2rx9ContextVk24allocWriteDescriptorSetsEm(%"class.rx::ContextVk"* %4, i64 1) #15
  %47 = call %struct.VkDescriptorBufferInfo* @_ZN2rx9ContextVk26allocDescriptorBufferInfosEm(%"class.rx::ContextVk"* %4, i64 1) #15
  %48 = getelementptr inbounds %"struct.rx::DefaultUniformBlock", %"struct.rx::DefaultUniformBlock"* %2, i64 0, i32 1, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %201

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %4, i64 0, i32 80
  %53 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %4, i64 0, i32 80, i32 0, i32 1, i32 0
  %54 = load %"struct.rx::vk::ResourceUse"*, %"struct.rx::vk::ResourceUse"** %53, align 8
  %55 = ptrtoint %"struct.rx::vk::ResourceUse"* %54 to i64
  %56 = getelementptr inbounds %"struct.rx::vk::ResourceUse", %"struct.rx::vk::ResourceUse"* %54, i64 0, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  %59 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %4, i64 0, i32 74, i32 1
  %60 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %4, i64 0, i32 74, i32 1, i32 0, i32 1
  %61 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %60, align 8
  %62 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %4, i64 0, i32 74, i32 1, i32 0, i32 2, i32 0, i32 0
  %63 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %62, align 8
  %64 = icmp ult %"class.rx::vk::SharedResourceUse"* %61, %63
  %65 = ptrtoint %"class.rx::vk::SharedResourceUse"* %63 to i64
  br i1 %64, label %66, label %71

66:                                               ; preds = %51
  %67 = bitcast %"class.rx::vk::SharedResourceUse"* %61 to i64*
  store i64 %55, i64* %67, align 8
  %68 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %61, i64 1
  %69 = ptrtoint %"class.rx::vk::SharedResourceUse"* %68 to i64
  %70 = bitcast %"class.rx::vk::SharedResourceUse"** %60 to i64*
  store i64 %69, i64* %70, align 8
  br label %201

71:                                               ; preds = %51
  %72 = ptrtoint %"class.rx::vk::SharedResourceUse"* %61 to i64
  %73 = bitcast %"class.rx::vk::SharedResourceUse"** %60 to i64*
  %74 = bitcast %"class.std::__1::vector.1085"* %59 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = sub i64 %72, %75
  %77 = ashr exact i64 %76, 3
  %78 = add nsw i64 %77, 1
  %79 = icmp ugt i64 %78, 2305843009213693951
  br i1 %79, label %80, label %82

80:                                               ; preds = %71
  %81 = bitcast %"class.std::__1::vector.1085"* %59 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %81) #21
  unreachable

82:                                               ; preds = %71
  %83 = bitcast %"class.rx::vk::SharedResourceUse"** %62 to i64*
  %84 = sub i64 %65, %75
  %85 = ashr exact i64 %84, 3
  %86 = icmp ult i64 %85, 1152921504606846975
  br i1 %86, label %87, label %95

87:                                               ; preds = %82
  %88 = ashr exact i64 %84, 2
  %89 = icmp ult i64 %88, %78
  %90 = select i1 %89, i64 %78, i64 %88
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %100, label %92

92:                                               ; preds = %87
  %93 = icmp ugt i64 %90, 2305843009213693951
  br i1 %93, label %94, label %95

94:                                               ; preds = %92
  call void @abort() #21
  unreachable

95:                                               ; preds = %92, %82
  %96 = phi i64 [ %90, %92 ], [ 2305843009213693951, %82 ]
  %97 = shl i64 %96, 3
  %98 = call i8* @_Znwm(i64 %97) #20
  %99 = bitcast i8* %98 to %"class.rx::vk::SharedResourceUse"*
  br label %100

100:                                              ; preds = %95, %87
  %101 = phi i64 [ %96, %95 ], [ 0, %87 ]
  %102 = phi %"class.rx::vk::SharedResourceUse"* [ %99, %95 ], [ null, %87 ]
  %103 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %102, i64 %77
  %104 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %102, i64 %101
  %105 = ptrtoint %"class.rx::vk::SharedResourceUse"* %104 to i64
  %106 = bitcast %"class.rx::vk::SharedResourceUse"* %103 to i64*
  store i64 %55, i64* %106, align 8
  %107 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %103, i64 1
  %108 = ptrtoint %"class.rx::vk::SharedResourceUse"* %107 to i64
  %109 = getelementptr inbounds %"class.std::__1::vector.1085", %"class.std::__1::vector.1085"* %59, i64 0, i32 0, i32 0
  %110 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %109, align 8
  %111 = ptrtoint %"class.rx::vk::SharedResourceUse"* %110 to i64
  %112 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %60, align 8
  %113 = icmp eq %"class.rx::vk::SharedResourceUse"* %112, %110
  br i1 %113, label %194, label %114

114:                                              ; preds = %100
  %115 = getelementptr %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %112, i64 -1, i32 0
  %116 = ptrtoint %"struct.rx::vk::ResourceUse"** %115 to i64
  %117 = sub i64 %116, %111
  %118 = lshr i64 %117, 3
  %119 = add nuw nsw i64 %118, 1
  %120 = and i64 %119, 7
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %134, label %122

122:                                              ; preds = %114, %122
  %123 = phi %"class.rx::vk::SharedResourceUse"* [ %126, %122 ], [ %103, %114 ]
  %124 = phi %"class.rx::vk::SharedResourceUse"* [ %127, %122 ], [ %112, %114 ]
  %125 = phi i64 [ %132, %122 ], [ %120, %114 ]
  %126 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %123, i64 -1
  %127 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %124, i64 -1
  %128 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %127, i64 0, i32 0
  %129 = bitcast %"class.rx::vk::SharedResourceUse"* %127 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.rx::vk::SharedResourceUse"* %126 to i64*
  store i64 %130, i64* %131, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %128, align 8
  %132 = add i64 %125, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %122, !llvm.loop !54

134:                                              ; preds = %122, %114
  %135 = phi %"class.rx::vk::SharedResourceUse"* [ undef, %114 ], [ %126, %122 ]
  %136 = phi %"class.rx::vk::SharedResourceUse"* [ %103, %114 ], [ %126, %122 ]
  %137 = phi %"class.rx::vk::SharedResourceUse"* [ %112, %114 ], [ %127, %122 ]
  %138 = icmp ult i64 %117, 56
  br i1 %138, label %191, label %139

139:                                              ; preds = %134, %139
  %140 = phi %"class.rx::vk::SharedResourceUse"* [ %184, %139 ], [ %136, %134 ]
  %141 = phi %"class.rx::vk::SharedResourceUse"* [ %185, %139 ], [ %137, %134 ]
  %142 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %140, i64 -1
  %143 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %141, i64 -1
  %144 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %143, i64 0, i32 0
  %145 = bitcast %"class.rx::vk::SharedResourceUse"* %143 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = bitcast %"class.rx::vk::SharedResourceUse"* %142 to i64*
  store i64 %146, i64* %147, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %144, align 8
  %148 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %140, i64 -2
  %149 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %141, i64 -2
  %150 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %149, i64 0, i32 0
  %151 = bitcast %"class.rx::vk::SharedResourceUse"* %149 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"class.rx::vk::SharedResourceUse"* %148 to i64*
  store i64 %152, i64* %153, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %150, align 8
  %154 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %140, i64 -3
  %155 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %141, i64 -3
  %156 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %155, i64 0, i32 0
  %157 = bitcast %"class.rx::vk::SharedResourceUse"* %155 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.rx::vk::SharedResourceUse"* %154 to i64*
  store i64 %158, i64* %159, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %156, align 8
  %160 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %140, i64 -4
  %161 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %141, i64 -4
  %162 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %161, i64 0, i32 0
  %163 = bitcast %"class.rx::vk::SharedResourceUse"* %161 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = bitcast %"class.rx::vk::SharedResourceUse"* %160 to i64*
  store i64 %164, i64* %165, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %162, align 8
  %166 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %140, i64 -5
  %167 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %141, i64 -5
  %168 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %167, i64 0, i32 0
  %169 = bitcast %"class.rx::vk::SharedResourceUse"* %167 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = bitcast %"class.rx::vk::SharedResourceUse"* %166 to i64*
  store i64 %170, i64* %171, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %168, align 8
  %172 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %140, i64 -6
  %173 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %141, i64 -6
  %174 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %173, i64 0, i32 0
  %175 = bitcast %"class.rx::vk::SharedResourceUse"* %173 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast %"class.rx::vk::SharedResourceUse"* %172 to i64*
  store i64 %176, i64* %177, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %174, align 8
  %178 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %140, i64 -7
  %179 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %141, i64 -7
  %180 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %179, i64 0, i32 0
  %181 = bitcast %"class.rx::vk::SharedResourceUse"* %179 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = bitcast %"class.rx::vk::SharedResourceUse"* %178 to i64*
  store i64 %182, i64* %183, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %180, align 8
  %184 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %140, i64 -8
  %185 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %141, i64 -8
  %186 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %185, i64 0, i32 0
  %187 = bitcast %"class.rx::vk::SharedResourceUse"* %185 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = bitcast %"class.rx::vk::SharedResourceUse"* %184 to i64*
  store i64 %188, i64* %189, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %186, align 8
  %190 = icmp eq %"class.rx::vk::SharedResourceUse"* %185, %110
  br i1 %190, label %191, label %139

191:                                              ; preds = %139, %134
  %192 = phi %"class.rx::vk::SharedResourceUse"* [ %135, %134 ], [ %184, %139 ]
  %193 = load i64, i64* %74, align 8
  br label %194

194:                                              ; preds = %100, %191
  %195 = phi %"class.rx::vk::SharedResourceUse"* [ %192, %191 ], [ %103, %100 ]
  %196 = phi i64 [ %193, %191 ], [ %111, %100 ]
  %197 = ptrtoint %"class.rx::vk::SharedResourceUse"* %195 to i64
  store i64 %197, i64* %74, align 8
  store i64 %108, i64* %73, align 8
  store i64 %105, i64* %83, align 8
  %198 = icmp eq i64 %196, 0
  br i1 %198, label %201, label %199

199:                                              ; preds = %194
  %200 = inttoptr i64 %196 to i8*
  call void @_ZdlPv(i8* %200) #20
  br label %201

201:                                              ; preds = %199, %194, %66, %45
  %202 = phi %"class.rx::vk::BufferHelper"* [ %3, %45 ], [ %52, %66 ], [ %52, %194 ], [ %52, %199 ]
  %203 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 1, i32 0, i32 0, i64 1
  %204 = bitcast %struct.VkDescriptorSet_T** %203 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %37, i64 0, i32 1
  %207 = load i32, i32* %206, align 4
  %208 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %202, i64 0, i32 1, i32 0, i32 0
  %209 = bitcast %struct.VkBuffer_T** %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = bitcast %struct.VkDescriptorBufferInfo* %47 to i64*
  store i64 %210, i64* %211, align 8
  %212 = getelementptr inbounds %struct.VkDescriptorBufferInfo, %struct.VkDescriptorBufferInfo* %47, i64 0, i32 1
  %213 = bitcast i64* %212 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %213, align 8
  %214 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %46, i64 0, i32 0
  store i32 35, i32* %214, align 8
  %215 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %46, i64 0, i32 1
  store i8* null, i8** %215, align 8
  %216 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %46, i64 0, i32 2
  %217 = bitcast %struct.VkDescriptorSet_T** %216 to i64*
  store i64 %205, i64* %217, align 8
  %218 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %46, i64 0, i32 3
  store i32 %207, i32* %218, align 8
  %219 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %46, i64 0, i32 4
  store i32 0, i32* %219, align 4
  %220 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %46, i64 0, i32 5
  store i32 1, i32* %220, align 8
  %221 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %46, i64 0, i32 6
  store i32 8, i32* %221, align 4
  %222 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %46, i64 0, i32 7
  store %struct.VkDescriptorImageInfo* null, %struct.VkDescriptorImageInfo** %222, align 8
  %223 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %46, i64 0, i32 8
  store %struct.VkDescriptorBufferInfo* %47, %struct.VkDescriptorBufferInfo** %223, align 8
  %224 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %46, i64 0, i32 9
  store %struct.VkBufferView_T** null, %struct.VkBufferView_T*** %224, align 8
  br label %225

225:                                              ; preds = %33, %201
  %226 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %227 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %226, i64 0, i32 1, i32 0
  %228 = load i8, i8* %227, align 1
  %229 = icmp slt i8 %228, 0
  br i1 %229, label %230, label %232

230:                                              ; preds = %225
  %231 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %231) #20
  br label %232

232:                                              ; preds = %225, %230
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx19ProgramExecutableVk41getOrAllocateShaderResourcesDescriptorSetEPNS_9ContextVkEPKNS_2vk27ShaderBuffersDescriptorDescEPP17VkDescriptorSet_T(%"class.rx::ProgramExecutableVk"*, %"class.rx::ContextVk"*, %"class.rx::vk::ShaderBuffersDescriptorDesc"*, %struct.VkDescriptorSet_T** nocapture) local_unnamed_addr #3 align 2 {
  %5 = alloca i8, align 1
  %6 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 1, i32 0, i32 0, i64 3
  %7 = load %struct.VkDescriptorSet_T*, %struct.VkDescriptorSet_T** %6, align 8
  %8 = icmp eq %struct.VkDescriptorSet_T* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = ptrtoint %struct.VkDescriptorSet_T* %7 to i64
  br label %58

11:                                               ; preds = %4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #15
  store i8 0, i8* %5, align 1
  %12 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 11, i32 0, i32 0, i64 3
  %13 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 9, i32 0, i32 0, i64 3, i32 0
  %14 = load %"class.rx::vk::RefCounted.863"*, %"class.rx::vk::RefCounted.863"** %13, align 8
  %15 = getelementptr inbounds %"class.rx::vk::RefCounted.863", %"class.rx::vk::RefCounted.863"* %14, i64 0, i32 1, i32 0, i32 0
  %16 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 10, i32 0, i32 0, i64 3
  %17 = call i32 @_ZN2rx2vk21DynamicDescriptorPool22allocateSetsAndGetInfoEPNS_9ContextVkEPKP23VkDescriptorSetLayout_TjPNS0_14BindingPointerINS0_20DescriptorPoolHelperEEEPP17VkDescriptorSet_TPb(%"class.rx::vk::DynamicDescriptorPool"* %12, %"class.rx::ContextVk"* %1, %struct.VkDescriptorSetLayout_T** %15, i32 1, %"class.rx::vk::BindingPointer.866"* %16, %struct.VkDescriptorSet_T** %6, i8* nonnull %5) #15
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %57, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 2, i32 0, i32 0, i64 3
  store %struct.VkDescriptorSet_T* null, %struct.VkDescriptorSet_T** %20, align 8
  %21 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i64 3
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %22, 1
  store i32 %23, i32* %21, align 4
  %24 = icmp eq %"class.rx::vk::ShaderBuffersDescriptorDesc"* %2, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %19
  %26 = bitcast %struct.VkDescriptorSet_T** %6 to i64*
  br label %54

27:                                               ; preds = %19
  %28 = load i8, i8* %5, align 1, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 7
  %32 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %33 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %32, align 8
  call void @_ZN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EE7destroyEPNS_10RendererVkE(%"class.rx::DescriptorSetCache.841"* %31, %"class.rx::RendererVk"* %33) #15
  br label %34

34:                                               ; preds = %27, %30
  %35 = bitcast %struct.VkDescriptorSet_T** %6 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 7, i32 1, i32 0, i32 0
  %38 = call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE22find_or_prepare_insertIS5_EENSG_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.845"* %37, %"class.rx::vk::ShaderBuffersDescriptorDesc"* nonnull dereferenceable(152) %2) #15, !noalias !55
  %39 = extractvalue { i64, i8 } %38, 0
  %40 = extractvalue { i64, i8 } %38, 1
  %41 = and i8 %40, 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %49, label %43

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 7, i32 1, i32 0, i32 0, i32 1
  %45 = load %"union.absl::container_internal::map_slot_type.846"*, %"union.absl::container_internal::map_slot_type.846"** %44, align 8, !noalias !55
  %46 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %45, i64 %39, i32 0, i32 0
  call void @_ZN2rx2vk27ShaderBuffersDescriptorDescC1ERKS1_(%"class.rx::vk::ShaderBuffersDescriptorDesc"* %46, %"class.rx::vk::ShaderBuffersDescriptorDesc"* nonnull dereferenceable(152) %2) #15, !noalias !55
  %47 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %45, i64 %39, i32 0, i32 1
  %48 = bitcast %struct.VkDescriptorSet_T** %47 to i64*
  store i64 %36, i64* %48, align 8, !noalias !55
  br label %49

49:                                               ; preds = %34, %43
  %50 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.845", %"class.absl::container_internal::raw_hash_set.845"* %37, i64 0, i32 0
  %51 = load i8*, i8** %50, align 8, !noalias !55
  %52 = getelementptr inbounds i8, i8* %51, i64 %39
  %53 = icmp ne i8* %52, null
  call void @llvm.assume(i1 %53) #15, !noalias !55
  br label %54

54:                                               ; preds = %25, %49
  %55 = phi i64* [ %26, %25 ], [ %35, %49 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #15
  %56 = load i64, i64* %55, align 8
  br label %58

57:                                               ; preds = %11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #15
  br label %61

58:                                               ; preds = %9, %54
  %59 = phi i64 [ %56, %54 ], [ %10, %9 ]
  %60 = bitcast %struct.VkDescriptorSet_T** %3 to i64*
  store i64 %59, i64* %60, align 8
  br label %61

61:                                               ; preds = %57, %58
  %62 = phi i32 [ 0, %58 ], [ 1, %57 ]
  ret i32 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx19ProgramExecutableVk26updateBuffersDescriptorSetEPNS_9ContextVkEN2gl10ShaderTypeERKNS_2vk27ShaderBuffersDescriptorDescERKNSt3__16vectorINS3_14InterfaceBlockENS9_9allocatorISB_EEEE16VkDescriptorTypeb(%"class.rx::ProgramExecutableVk"*, %"class.rx::ContextVk"*, i8 zeroext, %"class.rx::vk::ShaderBuffersDescriptorDesc"* dereferenceable(152), %"class.std::__1::vector.194"* nocapture readonly dereferenceable(24), i32, i1 zeroext) local_unnamed_addr #3 align 2 {
  %8 = alloca %struct.VkDescriptorSet_T*, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %4, i64 0, i32 0, i32 0
  %10 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %4, i64 0, i32 0, i32 1
  %12 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %11, align 8
  %13 = icmp eq %"struct.gl::InterfaceBlock"* %10, %12
  br i1 %13, label %193, label %14

14:                                               ; preds = %7
  %15 = xor i1 %6, true
  %16 = and i32 %5, -2
  %17 = icmp eq i32 %16, 8
  %18 = or i1 %17, %15
  br i1 %18, label %19, label %193

19:                                               ; preds = %14
  %20 = icmp eq i32 %5, 7
  %21 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 0, i32 1
  %22 = load %"class.gl::State"*, %"class.gl::State"** %21, align 8
  %23 = bitcast %"struct.gl::InterfaceBlock"** %11 to i64*
  %24 = bitcast %"class.std::__1::vector.194"* %4 to i64*
  %25 = zext i8 %2 to i32
  %26 = shl i32 1, %25
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 15
  %29 = bitcast %struct.VkDescriptorSet_T** %8 to i8*
  %30 = bitcast %struct.VkDescriptorSet_T** %8 to i64*
  %31 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 14
  %32 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 14, i32 0, i32 1
  %33 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast i32** %32 to i64*
  %35 = bitcast %"class.std::__1::vector"* %31 to i64*
  %36 = bitcast i32** %33 to i64*
  %37 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %31, i64 0, i32 0, i32 0
  br label %38

38:                                               ; preds = %19, %183
  %39 = phi %"struct.gl::InterfaceBlock"* [ %10, %19 ], [ %191, %183 ]
  %40 = phi i64 [ 0, %19 ], [ %185, %183 ]
  %41 = phi i32 [ 0, %19 ], [ %184, %183 ]
  %42 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %39, i64 %40, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = sext i32 %43 to i64
  br i1 %20, label %45, label %47

45:                                               ; preds = %38
  %46 = tail call dereferenceable(32) %"class.gl::OffsetBindingPointer"* @_ZNK2gl5State29getIndexedShaderStorageBufferEm(%"class.gl::State"* %22, i64 %44) #15
  br label %49

47:                                               ; preds = %38
  %48 = tail call dereferenceable(32) %"class.gl::OffsetBindingPointer"* @_ZNK2gl5State23getIndexedUniformBufferEm(%"class.gl::State"* %22, i64 %44) #15
  br label %49

49:                                               ; preds = %47, %45
  %50 = phi %"class.gl::OffsetBindingPointer"* [ %46, %45 ], [ %48, %47 ]
  %51 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %39, i64 %40, i32 0, i32 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = and i8 %52, %27
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %183, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %50, i64 0, i32 0, i32 0, i32 1
  %57 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %56, align 8
  %58 = icmp eq %"class.gl::Buffer"* %57, null
  br i1 %58, label %183, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %39, i64 %40, i32 2
  %61 = tail call dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx30ShaderInterfaceVariableInfoMap3getEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"* %28, i8 zeroext %2, %"class.std::__1::basic_string"* dereferenceable(24) %60) #15
  %62 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %61, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %39, i64 %40, i32 3
  %65 = load i8, i8* %64, align 8, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %39, i64 %40, i32 5
  %69 = load i32, i32* %68, align 4
  br label %70

70:                                               ; preds = %59, %67
  %71 = phi i32 [ %69, %67 ], [ 0, %59 ]
  br i1 %20, label %76, label %72

72:                                               ; preds = %70
  %73 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %39, i64 %40, i32 0, i32 2
  %74 = load i32, i32* %73, align 8
  %75 = zext i32 %74 to i64
  br label %78

76:                                               ; preds = %70
  %77 = tail call i64 @_ZN2gl27GetBoundBufferAvailableSizeERKNS_20OffsetBindingPointerINS_6BufferEEE(%"class.gl::OffsetBindingPointer"* dereferenceable(32) %50) #15
  br label %78

78:                                               ; preds = %76, %72
  %79 = phi i64 [ %77, %76 ], [ %75, %72 ]
  %80 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %56, align 8
  %81 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %80, i64 0, i32 5
  %82 = bitcast %"class.rx::BufferImpl"** %81 to %"class.rx::BufferVk"**
  %83 = load %"class.rx::BufferVk"*, %"class.rx::BufferVk"** %82, align 8
  %84 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %83, i64 0, i32 2
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %83, i64 0, i32 1
  %87 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %86, align 8
  br i1 %6, label %118, label %88

88:                                               ; preds = %78
  %89 = tail call %struct.VkDescriptorBufferInfo* @_ZN2rx9ContextVk26allocDescriptorBufferInfosEm(%"class.rx::ContextVk"* %1, i64 1) #15
  %90 = tail call %struct.VkWriteDescriptorSet* @_ZN2rx9ContextVk24allocWriteDescriptorSetsEm(%"class.rx::ContextVk"* %1, i64 1) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #15
  store %struct.VkDescriptorSet_T* inttoptr (i64 -6148914691236517206 to %struct.VkDescriptorSet_T*), %struct.VkDescriptorSet_T** %8, align 8
  %91 = call i32 @_ZN2rx19ProgramExecutableVk41getOrAllocateShaderResourcesDescriptorSetEPNS_9ContextVkEPKNS_2vk27ShaderBuffersDescriptorDescEPP17VkDescriptorSet_T(%"class.rx::ProgramExecutableVk"* %0, %"class.rx::ContextVk"* %1, %"class.rx::vk::ShaderBuffersDescriptorDesc"* %3, %struct.VkDescriptorSet_T** nonnull %8)
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %192, label %93

93:                                               ; preds = %88
  br i1 %17, label %98, label %94

94:                                               ; preds = %93
  %95 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %50, i64 0, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %96, %85
  br label %98

98:                                               ; preds = %94, %93
  %99 = phi i64 [ %97, %94 ], [ 0, %93 ]
  %100 = load i64, i64* %30, align 8
  %101 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %87, i64 0, i32 1, i32 0, i32 0
  %102 = bitcast %struct.VkBuffer_T** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %struct.VkDescriptorBufferInfo* %89 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %struct.VkDescriptorBufferInfo, %struct.VkDescriptorBufferInfo* %89, i64 0, i32 1
  store i64 %99, i64* %105, align 8
  %106 = getelementptr inbounds %struct.VkDescriptorBufferInfo, %struct.VkDescriptorBufferInfo* %89, i64 0, i32 2
  store i64 %79, i64* %106, align 8
  %107 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %90, i64 0, i32 0
  store i32 35, i32* %107, align 8
  %108 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %90, i64 0, i32 1
  store i8* null, i8** %108, align 8
  %109 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %90, i64 0, i32 2
  %110 = bitcast %struct.VkDescriptorSet_T** %109 to i64*
  store i64 %100, i64* %110, align 8
  %111 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %90, i64 0, i32 3
  store i32 %63, i32* %111, align 8
  %112 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %90, i64 0, i32 4
  store i32 %71, i32* %112, align 4
  %113 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %90, i64 0, i32 5
  store i32 1, i32* %113, align 8
  %114 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %90, i64 0, i32 6
  store i32 %5, i32* %114, align 4
  %115 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %90, i64 0, i32 7
  store %struct.VkDescriptorImageInfo* null, %struct.VkDescriptorImageInfo** %115, align 8
  %116 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %90, i64 0, i32 8
  store %struct.VkDescriptorBufferInfo* %89, %struct.VkDescriptorBufferInfo** %116, align 8
  %117 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %90, i64 0, i32 9
  store %struct.VkBufferView_T** null, %struct.VkBufferView_T*** %117, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #15
  br label %118

118:                                              ; preds = %98, %78
  br i1 %17, label %119, label %183

119:                                              ; preds = %118
  %120 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %50, i64 0, i32 1
  %121 = load i64, i64* %120, align 8
  %122 = add i64 %121, %85
  %123 = trunc i64 %122 to i32
  %124 = load i32*, i32** %32, align 8
  %125 = load i32*, i32** %33, align 8
  %126 = icmp ult i32* %124, %125
  %127 = ptrtoint i32* %125 to i64
  br i1 %126, label %128, label %131

128:                                              ; preds = %119
  store i32 %123, i32* %124, align 4
  %129 = getelementptr inbounds i32, i32* %124, i64 1
  %130 = ptrtoint i32* %129 to i64
  store i64 %130, i64* %34, align 8
  br label %183

131:                                              ; preds = %119
  %132 = ptrtoint i32* %124 to i64
  %133 = load i64, i64* %35, align 8
  %134 = sub i64 %132, %133
  %135 = ashr exact i64 %134, 2
  %136 = add nsw i64 %135, 1
  %137 = icmp ugt i64 %136, 4611686018427387903
  br i1 %137, label %138, label %140

138:                                              ; preds = %131
  %139 = bitcast %"class.std::__1::vector"* %31 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %139) #21
  unreachable

140:                                              ; preds = %131
  %141 = sub i64 %127, %133
  %142 = ashr exact i64 %141, 2
  %143 = icmp ult i64 %142, 2305843009213693951
  br i1 %143, label %144, label %152

144:                                              ; preds = %140
  %145 = ashr exact i64 %141, 1
  %146 = icmp ult i64 %145, %136
  %147 = select i1 %146, i64 %136, i64 %145
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %157, label %149

149:                                              ; preds = %144
  %150 = icmp ugt i64 %147, 4611686018427387903
  br i1 %150, label %151, label %152

151:                                              ; preds = %149
  tail call void @abort() #21
  unreachable

152:                                              ; preds = %149, %140
  %153 = phi i64 [ %147, %149 ], [ 4611686018427387903, %140 ]
  %154 = shl i64 %153, 2
  %155 = tail call i8* @_Znwm(i64 %154) #20
  %156 = bitcast i8* %155 to i32*
  br label %157

157:                                              ; preds = %152, %144
  %158 = phi i64 [ %153, %152 ], [ 0, %144 ]
  %159 = phi i32* [ %156, %152 ], [ null, %144 ]
  %160 = getelementptr inbounds i32, i32* %159, i64 %135
  %161 = getelementptr inbounds i32, i32* %159, i64 %158
  %162 = ptrtoint i32* %161 to i64
  store i32 %123, i32* %160, align 4
  %163 = getelementptr inbounds i32, i32* %160, i64 1
  %164 = ptrtoint i32* %163 to i64
  %165 = load i32*, i32** %37, align 8
  %166 = load i64, i64* %34, align 8
  %167 = ptrtoint i32* %165 to i64
  %168 = sub i64 %166, %167
  %169 = ashr exact i64 %168, 2
  %170 = sub nsw i64 0, %169
  %171 = getelementptr inbounds i32, i32* %160, i64 %170
  %172 = ptrtoint i32* %171 to i64
  %173 = icmp sgt i64 %168, 0
  br i1 %173, label %174, label %178

174:                                              ; preds = %157
  %175 = bitcast i32* %171 to i8*
  %176 = bitcast i32* %165 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %175, i8* align 4 %176, i64 %168, i1 false) #15
  %177 = load i32*, i32** %37, align 8
  br label %178

178:                                              ; preds = %174, %157
  %179 = phi i32* [ %165, %157 ], [ %177, %174 ]
  store i64 %172, i64* %35, align 8
  store i64 %164, i64* %34, align 8
  store i64 %162, i64* %36, align 8
  %180 = icmp eq i32* %179, null
  br i1 %180, label %183, label %181

181:                                              ; preds = %178
  %182 = bitcast i32* %179 to i8*
  tail call void @_ZdlPv(i8* %182) #20
  br label %183

183:                                              ; preds = %49, %55, %118, %128, %178, %181
  %184 = add i32 %41, 1
  %185 = zext i32 %184 to i64
  %186 = load i64, i64* %23, align 8
  %187 = load i64, i64* %24, align 8
  %188 = sub i64 %186, %187
  %189 = sdiv exact i64 %188, 112
  %190 = icmp ugt i64 %189, %185
  %191 = inttoptr i64 %187 to %"struct.gl::InterfaceBlock"*
  br i1 %190, label %38, label %193

192:                                              ; preds = %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #15
  br label %193

193:                                              ; preds = %183, %14, %192, %7
  %194 = phi i32 [ 0, %7 ], [ 1, %192 ], [ 0, %14 ], [ 0, %183 ]
  ret i32 %194
}

declare dereferenceable(32) %"class.gl::OffsetBindingPointer"* @_ZNK2gl5State29getIndexedShaderStorageBufferEm(%"class.gl::State"*, i64) local_unnamed_addr #6

declare dereferenceable(32) %"class.gl::OffsetBindingPointer"* @_ZNK2gl5State23getIndexedUniformBufferEm(%"class.gl::State"*, i64) local_unnamed_addr #6

declare i64 @_ZN2gl27GetBoundBufferAvailableSizeERKNS_20OffsetBindingPointerINS_6BufferEEE(%"class.gl::OffsetBindingPointer"* dereferenceable(32)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx19ProgramExecutableVk39updateAtomicCounterBuffersDescriptorSetEPNS_9ContextVkERKN2gl12ProgramStateENS3_10ShaderTypeERKNS_2vk27ShaderBuffersDescriptorDescEb(%"class.rx::ProgramExecutableVk"*, %"class.rx::ContextVk"*, %"class.gl::ProgramState"* nocapture readonly dereferenceable(304), i8 zeroext, %"class.rx::vk::ShaderBuffersDescriptorDesc"* dereferenceable(152), i1 zeroext) local_unnamed_addr #3 align 2 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %struct.VkDescriptorSet_T*, align 8
  %9 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 0, i32 1
  %10 = load %"class.gl::State"*, %"class.gl::State"** %9, align 8
  %11 = getelementptr inbounds %"class.gl::ProgramState", %"class.gl::ProgramState"* %2, i64 0, i32 23, i32 0
  %12 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %11, align 8
  %13 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %12, i64 0, i32 35
  %14 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %13, i64 0, i32 0, i32 0
  %15 = load %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"** %14, align 8
  %16 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %12, i64 0, i32 35, i32 0, i32 1
  %17 = load %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"** %16, align 8
  %18 = icmp eq %"struct.gl::ShaderVariableBuffer"* %15, %17
  %19 = or i1 %18, %5
  br i1 %19, label %344, label %20

20:                                               ; preds = %6
  %21 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #15
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %25 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  %26 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk24kAtomicCountersBlockNameE, i64 0, i64 0)) #15
  %27 = icmp ugt i64 %26, -17
  br i1 %27, label %28, label %30

28:                                               ; preds = %20
  %29 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %29) #21
  unreachable

30:                                               ; preds = %20
  %31 = icmp ult i64 %26, 23
  br i1 %31, label %37, label %32

32:                                               ; preds = %30
  %33 = add nuw i64 %26, 16
  %34 = and i64 %33, -16
  %35 = tail call i8* @_Znwm(i64 %34) #20
  store i8* %35, i8** %22, align 8
  %36 = or i64 %34, -9223372036854775808
  store i64 %36, i64* %24, align 8
  store i64 %26, i64* %23, align 8
  br label %42

37:                                               ; preds = %30
  %38 = trunc i64 %26 to i8
  %39 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  store i8 %38, i8* %40, align 1
  %41 = icmp eq i64 %26, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %37, %32
  %43 = phi i8* [ %35, %32 ], [ %21, %37 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %43, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk24kAtomicCountersBlockNameE, i64 0, i64 0), i64 %26, i1 false) #15
  br label %44

44:                                               ; preds = %37, %42
  %45 = phi i8* [ %21, %37 ], [ %43, %42 ]
  %46 = getelementptr inbounds i8, i8* %45, i64 %26
  store i8 0, i8* %46, align 1
  %47 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 15
  %48 = call dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx30ShaderInterfaceVariableInfoMap3getEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"* %47, i8 zeroext %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #15
  %49 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %48, i64 0, i32 5, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %3 to i32
  %52 = shl i32 1, %51
  %53 = trunc i32 %52 to i8
  %54 = and i8 %50, %53
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %335, label %56

56:                                               ; preds = %44
  %57 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %58 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %57, align 8
  %59 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %58, i64 0, i32 16, i32 7, i32 69
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %struct.VkDescriptorSet_T** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #15
  store %struct.VkDescriptorSet_T* inttoptr (i64 -6148914691236517206 to %struct.VkDescriptorSet_T*), %struct.VkDescriptorSet_T** %8, align 8
  %62 = call i32 @_ZN2rx19ProgramExecutableVk41getOrAllocateShaderResourcesDescriptorSetEPNS_9ContextVkEPKNS_2vk27ShaderBuffersDescriptorDescEPP17VkDescriptorSet_T(%"class.rx::ProgramExecutableVk"* %0, %"class.rx::ContextVk"* %1, %"class.rx::vk::ShaderBuffersDescriptorDesc"* %4, %struct.VkDescriptorSet_T** nonnull %8)
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %333, label %64

64:                                               ; preds = %56
  %65 = bitcast %"struct.gl::ShaderVariableBuffer"** %16 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::vector.202"* %13 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %66, %68
  br i1 %69, label %75, label %70

70:                                               ; preds = %64
  %71 = bitcast %struct.VkDescriptorSet_T** %8 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %48, i64 0, i32 1
  %74 = icmp eq i64 %60, 0
  br label %239

75:                                               ; preds = %296, %64
  %76 = phi i64 [ 0, %64 ], [ %297, %296 ]
  %77 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 80, i32 0, i32 1, i32 0
  %78 = load %"struct.rx::vk::ResourceUse"*, %"struct.rx::vk::ResourceUse"** %77, align 8
  %79 = ptrtoint %"struct.rx::vk::ResourceUse"* %78 to i64
  %80 = getelementptr inbounds %"struct.rx::vk::ResourceUse", %"struct.rx::vk::ResourceUse"* %78, i64 0, i32 0
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 1
  store i32 %82, i32* %80, align 8
  %83 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 74, i32 1
  %84 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 74, i32 1, i32 0, i32 1
  %85 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %84, align 8
  %86 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 74, i32 1, i32 0, i32 2, i32 0, i32 0
  %87 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %86, align 8
  %88 = icmp ult %"class.rx::vk::SharedResourceUse"* %85, %87
  %89 = ptrtoint %"class.rx::vk::SharedResourceUse"* %87 to i64
  br i1 %88, label %90, label %95

90:                                               ; preds = %75
  %91 = bitcast %"class.rx::vk::SharedResourceUse"* %85 to i64*
  store i64 %79, i64* %91, align 8
  %92 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %85, i64 1
  %93 = ptrtoint %"class.rx::vk::SharedResourceUse"* %92 to i64
  %94 = bitcast %"class.rx::vk::SharedResourceUse"** %84 to i64*
  store i64 %93, i64* %94, align 8
  br label %225

95:                                               ; preds = %75
  %96 = ptrtoint %"class.rx::vk::SharedResourceUse"* %85 to i64
  %97 = bitcast %"class.rx::vk::SharedResourceUse"** %84 to i64*
  %98 = bitcast %"class.std::__1::vector.1085"* %83 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = sub i64 %96, %99
  %101 = ashr exact i64 %100, 3
  %102 = add nsw i64 %101, 1
  %103 = icmp ugt i64 %102, 2305843009213693951
  br i1 %103, label %104, label %106

104:                                              ; preds = %95
  %105 = bitcast %"class.std::__1::vector.1085"* %83 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %105) #21
  unreachable

106:                                              ; preds = %95
  %107 = bitcast %"class.rx::vk::SharedResourceUse"** %86 to i64*
  %108 = sub i64 %89, %99
  %109 = ashr exact i64 %108, 3
  %110 = icmp ult i64 %109, 1152921504606846975
  br i1 %110, label %111, label %119

111:                                              ; preds = %106
  %112 = ashr exact i64 %108, 2
  %113 = icmp ult i64 %112, %102
  %114 = select i1 %113, i64 %102, i64 %112
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %124, label %116

116:                                              ; preds = %111
  %117 = icmp ugt i64 %114, 2305843009213693951
  br i1 %117, label %118, label %119

118:                                              ; preds = %116
  call void @abort() #21
  unreachable

119:                                              ; preds = %116, %106
  %120 = phi i64 [ %114, %116 ], [ 2305843009213693951, %106 ]
  %121 = shl i64 %120, 3
  %122 = call i8* @_Znwm(i64 %121) #20
  %123 = bitcast i8* %122 to %"class.rx::vk::SharedResourceUse"*
  br label %124

124:                                              ; preds = %119, %111
  %125 = phi i64 [ %120, %119 ], [ 0, %111 ]
  %126 = phi %"class.rx::vk::SharedResourceUse"* [ %123, %119 ], [ null, %111 ]
  %127 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %126, i64 %101
  %128 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %126, i64 %125
  %129 = ptrtoint %"class.rx::vk::SharedResourceUse"* %128 to i64
  %130 = bitcast %"class.rx::vk::SharedResourceUse"* %127 to i64*
  store i64 %79, i64* %130, align 8
  %131 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %127, i64 1
  %132 = ptrtoint %"class.rx::vk::SharedResourceUse"* %131 to i64
  %133 = getelementptr inbounds %"class.std::__1::vector.1085", %"class.std::__1::vector.1085"* %83, i64 0, i32 0, i32 0
  %134 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %133, align 8
  %135 = ptrtoint %"class.rx::vk::SharedResourceUse"* %134 to i64
  %136 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %84, align 8
  %137 = icmp eq %"class.rx::vk::SharedResourceUse"* %136, %134
  br i1 %137, label %218, label %138

138:                                              ; preds = %124
  %139 = getelementptr %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %136, i64 -1, i32 0
  %140 = ptrtoint %"struct.rx::vk::ResourceUse"** %139 to i64
  %141 = sub i64 %140, %135
  %142 = lshr i64 %141, 3
  %143 = add nuw nsw i64 %142, 1
  %144 = and i64 %143, 7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %158, label %146

146:                                              ; preds = %138, %146
  %147 = phi %"class.rx::vk::SharedResourceUse"* [ %150, %146 ], [ %127, %138 ]
  %148 = phi %"class.rx::vk::SharedResourceUse"* [ %151, %146 ], [ %136, %138 ]
  %149 = phi i64 [ %156, %146 ], [ %144, %138 ]
  %150 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %147, i64 -1
  %151 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %148, i64 -1
  %152 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %151, i64 0, i32 0
  %153 = bitcast %"class.rx::vk::SharedResourceUse"* %151 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.rx::vk::SharedResourceUse"* %150 to i64*
  store i64 %154, i64* %155, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %152, align 8
  %156 = add i64 %149, -1
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %146, !llvm.loop !68

158:                                              ; preds = %146, %138
  %159 = phi %"class.rx::vk::SharedResourceUse"* [ undef, %138 ], [ %150, %146 ]
  %160 = phi %"class.rx::vk::SharedResourceUse"* [ %127, %138 ], [ %150, %146 ]
  %161 = phi %"class.rx::vk::SharedResourceUse"* [ %136, %138 ], [ %151, %146 ]
  %162 = icmp ult i64 %141, 56
  br i1 %162, label %215, label %163

163:                                              ; preds = %158, %163
  %164 = phi %"class.rx::vk::SharedResourceUse"* [ %208, %163 ], [ %160, %158 ]
  %165 = phi %"class.rx::vk::SharedResourceUse"* [ %209, %163 ], [ %161, %158 ]
  %166 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %164, i64 -1
  %167 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %165, i64 -1
  %168 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %167, i64 0, i32 0
  %169 = bitcast %"class.rx::vk::SharedResourceUse"* %167 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = bitcast %"class.rx::vk::SharedResourceUse"* %166 to i64*
  store i64 %170, i64* %171, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %168, align 8
  %172 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %164, i64 -2
  %173 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %165, i64 -2
  %174 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %173, i64 0, i32 0
  %175 = bitcast %"class.rx::vk::SharedResourceUse"* %173 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast %"class.rx::vk::SharedResourceUse"* %172 to i64*
  store i64 %176, i64* %177, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %174, align 8
  %178 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %164, i64 -3
  %179 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %165, i64 -3
  %180 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %179, i64 0, i32 0
  %181 = bitcast %"class.rx::vk::SharedResourceUse"* %179 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = bitcast %"class.rx::vk::SharedResourceUse"* %178 to i64*
  store i64 %182, i64* %183, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %180, align 8
  %184 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %164, i64 -4
  %185 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %165, i64 -4
  %186 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %185, i64 0, i32 0
  %187 = bitcast %"class.rx::vk::SharedResourceUse"* %185 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = bitcast %"class.rx::vk::SharedResourceUse"* %184 to i64*
  store i64 %188, i64* %189, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %186, align 8
  %190 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %164, i64 -5
  %191 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %165, i64 -5
  %192 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %191, i64 0, i32 0
  %193 = bitcast %"class.rx::vk::SharedResourceUse"* %191 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = bitcast %"class.rx::vk::SharedResourceUse"* %190 to i64*
  store i64 %194, i64* %195, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %192, align 8
  %196 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %164, i64 -6
  %197 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %165, i64 -6
  %198 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %197, i64 0, i32 0
  %199 = bitcast %"class.rx::vk::SharedResourceUse"* %197 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = bitcast %"class.rx::vk::SharedResourceUse"* %196 to i64*
  store i64 %200, i64* %201, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %198, align 8
  %202 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %164, i64 -7
  %203 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %165, i64 -7
  %204 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %203, i64 0, i32 0
  %205 = bitcast %"class.rx::vk::SharedResourceUse"* %203 to i64*
  %206 = load i64, i64* %205, align 8
  %207 = bitcast %"class.rx::vk::SharedResourceUse"* %202 to i64*
  store i64 %206, i64* %207, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %204, align 8
  %208 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %164, i64 -8
  %209 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %165, i64 -8
  %210 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %209, i64 0, i32 0
  %211 = bitcast %"class.rx::vk::SharedResourceUse"* %209 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = bitcast %"class.rx::vk::SharedResourceUse"* %208 to i64*
  store i64 %212, i64* %213, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %210, align 8
  %214 = icmp eq %"class.rx::vk::SharedResourceUse"* %209, %134
  br i1 %214, label %215, label %163

215:                                              ; preds = %163, %158
  %216 = phi %"class.rx::vk::SharedResourceUse"* [ %159, %158 ], [ %208, %163 ]
  %217 = load i64, i64* %98, align 8
  br label %218

218:                                              ; preds = %124, %215
  %219 = phi %"class.rx::vk::SharedResourceUse"* [ %216, %215 ], [ %127, %124 ]
  %220 = phi i64 [ %217, %215 ], [ %135, %124 ]
  %221 = ptrtoint %"class.rx::vk::SharedResourceUse"* %219 to i64
  store i64 %221, i64* %98, align 8
  store i64 %132, i64* %97, align 8
  store i64 %129, i64* %107, align 8
  %222 = icmp eq i64 %220, 0
  br i1 %222, label %225, label %223

223:                                              ; preds = %218
  %224 = inttoptr i64 %220 to i8*
  call void @_ZdlPv(i8* %224) #20
  br label %225

225:                                              ; preds = %90, %218, %223
  %226 = and i64 %76, 255
  %227 = xor i64 %226, 255
  %228 = call i64 @llvm.ctpop.i64(i64 %227) #15, !range !38
  %229 = call %struct.VkDescriptorBufferInfo* @_ZN2rx9ContextVk26allocDescriptorBufferInfosEm(%"class.rx::ContextVk"* %1, i64 %228) #15
  %230 = call %struct.VkWriteDescriptorSet* @_ZN2rx9ContextVk24allocWriteDescriptorSetsEm(%"class.rx::ContextVk"* %1, i64 %228) #15
  %231 = icmp eq i64 %227, 0
  br i1 %231, label %333, label %232

232:                                              ; preds = %225
  %233 = call i64 @llvm.cttz.i64(i64 %227, i1 true) #15, !range !38
  %234 = bitcast %struct.VkDescriptorSet_T** %8 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %48, i64 0, i32 1
  %237 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 80, i32 1, i32 0, i32 0
  %238 = bitcast %struct.VkBuffer_T** %237 to i64*
  br label %305

239:                                              ; preds = %70, %296
  %240 = phi i64 [ %68, %70 ], [ %301, %296 ]
  %241 = phi i64 [ 0, %70 ], [ %299, %296 ]
  %242 = phi i32 [ 0, %70 ], [ %298, %296 ]
  %243 = phi i64 [ 0, %70 ], [ %297, %296 ]
  %244 = inttoptr i64 %240 to %"struct.gl::ShaderVariableBuffer"*
  %245 = getelementptr inbounds %"struct.gl::ShaderVariableBuffer", %"struct.gl::ShaderVariableBuffer"* %244, i64 %241, i32 1
  %246 = load i32, i32* %245, align 4
  %247 = zext i32 %246 to i64
  %248 = call dereferenceable(32) %"class.gl::OffsetBindingPointer"* @_ZNK2gl5State29getIndexedAtomicCounterBufferEm(%"class.gl::State"* %10, i64 %247) #15
  %249 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %248, i64 0, i32 0, i32 0, i32 1
  %250 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %249, align 8
  %251 = icmp eq %"class.gl::Buffer"* %250, null
  br i1 %251, label %296, label %252

252:                                              ; preds = %239
  %253 = call %struct.VkDescriptorBufferInfo* @_ZN2rx9ContextVk26allocDescriptorBufferInfosEm(%"class.rx::ContextVk"* %1, i64 1) #15
  %254 = call %struct.VkWriteDescriptorSet* @_ZN2rx9ContextVk24allocWriteDescriptorSetsEm(%"class.rx::ContextVk"* %1, i64 1) #15
  %255 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %249, align 8
  %256 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %255, i64 0, i32 5
  %257 = bitcast %"class.rx::BufferImpl"** %256 to %"class.rx::BufferVk"**
  %258 = load %"class.rx::BufferVk"*, %"class.rx::BufferVk"** %257, align 8
  %259 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %258, i64 0, i32 2
  %260 = load i64, i64* %259, align 8
  %261 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %258, i64 0, i32 1
  %262 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %261, align 8
  %263 = call i64 @_ZN2gl27GetBoundBufferAvailableSizeERKNS_20OffsetBindingPointerINS_6BufferEEE(%"class.gl::OffsetBindingPointer"* dereferenceable(32) %248) #15
  %264 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %248, i64 0, i32 1
  %265 = load i64, i64* %264, align 8
  %266 = add i64 %265, %260
  %267 = and i64 %266, 4294967295
  %268 = load i32, i32* %73, align 4
  br i1 %74, label %273, label %269

269:                                              ; preds = %252
  %270 = urem i64 %267, %60
  %271 = sub nsw i64 %267, %270
  %272 = add i64 %270, %263
  br label %273

273:                                              ; preds = %252, %269
  %274 = phi i64 [ %272, %269 ], [ %263, %252 ]
  %275 = phi i64 [ %271, %269 ], [ %267, %252 ]
  %276 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %262, i64 0, i32 1, i32 0, i32 0
  %277 = bitcast %struct.VkBuffer_T** %276 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = bitcast %struct.VkDescriptorBufferInfo* %253 to i64*
  store i64 %278, i64* %279, align 8
  %280 = getelementptr inbounds %struct.VkDescriptorBufferInfo, %struct.VkDescriptorBufferInfo* %253, i64 0, i32 1
  store i64 %275, i64* %280, align 8
  %281 = getelementptr inbounds %struct.VkDescriptorBufferInfo, %struct.VkDescriptorBufferInfo* %253, i64 0, i32 2
  store i64 %274, i64* %281, align 8
  %282 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %254, i64 0, i32 0
  store i32 35, i32* %282, align 8
  %283 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %254, i64 0, i32 1
  store i8* null, i8** %283, align 8
  %284 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %254, i64 0, i32 2
  %285 = bitcast %struct.VkDescriptorSet_T** %284 to i64*
  store i64 %72, i64* %285, align 8
  %286 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %254, i64 0, i32 3
  store i32 %268, i32* %286, align 8
  %287 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %254, i64 0, i32 4
  store i32 %246, i32* %287, align 4
  %288 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %254, i64 0, i32 5
  store i32 1, i32* %288, align 8
  %289 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %254, i64 0, i32 6
  store i32 7, i32* %289, align 4
  %290 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %254, i64 0, i32 7
  store %struct.VkDescriptorImageInfo* null, %struct.VkDescriptorImageInfo** %290, align 8
  %291 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %254, i64 0, i32 8
  store %struct.VkDescriptorBufferInfo* %253, %struct.VkDescriptorBufferInfo** %291, align 8
  %292 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %254, i64 0, i32 9
  store %struct.VkBufferView_T** null, %struct.VkBufferView_T*** %292, align 8
  %293 = shl i64 1, %247
  %294 = and i64 %293, 255
  %295 = or i64 %294, %243
  br label %296

296:                                              ; preds = %239, %273
  %297 = phi i64 [ %243, %239 ], [ %295, %273 ]
  %298 = add i32 %242, 1
  %299 = zext i32 %298 to i64
  %300 = load i64, i64* %65, align 8
  %301 = load i64, i64* %67, align 8
  %302 = sub i64 %300, %301
  %303 = sdiv exact i64 %302, 48
  %304 = icmp ugt i64 %303, %299
  br i1 %304, label %239, label %75

305:                                              ; preds = %232, %305
  %306 = phi i64 [ 0, %232 ], [ %327, %305 ]
  %307 = phi i64 [ %227, %232 ], [ %330, %305 ]
  %308 = phi i64 [ %233, %232 ], [ %332, %305 ]
  %309 = load i32, i32* %236, align 4
  %310 = trunc i64 %308 to i32
  %311 = getelementptr inbounds %struct.VkDescriptorBufferInfo, %struct.VkDescriptorBufferInfo* %229, i64 %306
  %312 = load i64, i64* %238, align 8
  %313 = bitcast %struct.VkDescriptorBufferInfo* %311 to i64*
  store i64 %312, i64* %313, align 8
  %314 = getelementptr inbounds %struct.VkDescriptorBufferInfo, %struct.VkDescriptorBufferInfo* %229, i64 %306, i32 1
  %315 = bitcast i64* %314 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %315, align 8
  %316 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %230, i64 %306, i32 0
  store i32 35, i32* %316, align 8
  %317 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %230, i64 %306, i32 1
  store i8* null, i8** %317, align 8
  %318 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %230, i64 %306, i32 2
  %319 = bitcast %struct.VkDescriptorSet_T** %318 to i64*
  store i64 %235, i64* %319, align 8
  %320 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %230, i64 %306, i32 3
  store i32 %309, i32* %320, align 8
  %321 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %230, i64 %306, i32 4
  store i32 %310, i32* %321, align 4
  %322 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %230, i64 %306, i32 5
  store i32 1, i32* %322, align 8
  %323 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %230, i64 %306, i32 6
  store i32 7, i32* %323, align 4
  %324 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %230, i64 %306, i32 7
  store %struct.VkDescriptorImageInfo* null, %struct.VkDescriptorImageInfo** %324, align 8
  %325 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %230, i64 %306, i32 8
  store %struct.VkDescriptorBufferInfo* %311, %struct.VkDescriptorBufferInfo** %325, align 8
  %326 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %230, i64 %306, i32 9
  store %struct.VkBufferView_T** null, %struct.VkBufferView_T*** %326, align 8
  %327 = add i64 %306, 1
  %328 = shl i64 1, %308
  %329 = xor i64 %328, -1
  %330 = and i64 %307, %329
  %331 = icmp eq i64 %330, 0
  %332 = call i64 @llvm.cttz.i64(i64 %330, i1 true) #15, !range !38
  br i1 %331, label %333, label %305

333:                                              ; preds = %305, %225, %56
  %334 = phi i32 [ 1, %56 ], [ 0, %225 ], [ 0, %305 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #15
  br label %335

335:                                              ; preds = %44, %333
  %336 = phi i32 [ %334, %333 ], [ 0, %44 ]
  %337 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %338 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %337, i64 0, i32 1, i32 0
  %339 = load i8, i8* %338, align 1
  %340 = icmp slt i8 %339, 0
  br i1 %340, label %341, label %343

341:                                              ; preds = %335
  %342 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %342) #20
  br label %343

343:                                              ; preds = %335, %341
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #15
  br label %344

344:                                              ; preds = %6, %343
  %345 = phi i32 [ %336, %343 ], [ 0, %6 ]
  ret i32 %345
}

declare dereferenceable(32) %"class.gl::OffsetBindingPointer"* @_ZNK2gl5State29getIndexedAtomicCounterBufferEm(%"class.gl::State"*, i64) local_unnamed_addr #6

declare %struct.VkDescriptorBufferInfo* @_ZN2rx9ContextVk26allocDescriptorBufferInfosEm(%"class.rx::ContextVk"*, i64) local_unnamed_addr #6

declare %struct.VkWriteDescriptorSet* @_ZN2rx9ContextVk24allocWriteDescriptorSetsEm(%"class.rx::ContextVk"*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx19ProgramExecutableVk25updateImagesDescriptorSetEPNS_9ContextVkERKN2gl17ProgramExecutableENS3_10ShaderTypeE(%"class.rx::ProgramExecutableVk"*, %"class.rx::ContextVk"*, %"class.gl::ProgramExecutable"* dereferenceable(1728), i8 zeroext) local_unnamed_addr #3 align 2 {
  %5 = alloca i8, align 1
  %6 = alloca %"class.absl::flat_hash_map.226", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.rx::vk::BufferView"*, align 8
  %9 = alloca %"class.rx::vk::ImageView"*, align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %12 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %11, align 8
  %13 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %2, i64 0, i32 55
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = icmp eq i8 %14, 0
  %16 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %2, i64 0, i32 41
  %17 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %2, i64 0, i32 42
  %18 = select i1 %15, %"class.std::__1::vector.216"* %17, %"class.std::__1::vector.216"* %16
  %19 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %18, i64 0, i32 0, i32 0
  %20 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %18, i64 0, i32 0, i32 1
  %22 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %21, align 8
  %23 = icmp eq %"struct.gl::ImageBinding"* %20, %22
  br i1 %23, label %314, label %24

24:                                               ; preds = %4
  %25 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 0, i32 1
  %26 = load %"class.gl::State"*, %"class.gl::State"** %25, align 8
  %27 = bitcast %"class.absl::flat_hash_map.226"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %27) #15
  %28 = getelementptr inbounds %"class.absl::flat_hash_map.226", %"class.absl::flat_hash_map.226"* %6, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.absl::flat_hash_map.226", %"class.absl::flat_hash_map.226"* %6, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.absl::flat_hash_map.226", %"class.absl::flat_hash_map.226"* %6, i64 0, i32 0, i32 0, i32 3
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %28, align 8
  %31 = bitcast %"union.absl::container_internal::map_slot_type.229"** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 32, i1 false) #15
  %32 = bitcast %"struct.gl::ImageBinding"** %21 to i64*
  %33 = bitcast %"class.std::__1::vector.216"* %18 to i64*
  %34 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %2, i64 0, i32 30, i32 0, i32 0
  %35 = zext i8 %3 to i32
  %36 = shl i32 1, %35
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 1, i32 0, i32 0, i64 3
  %39 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 11, i32 0, i32 0, i64 3
  %40 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 9, i32 0, i32 0, i64 3, i32 0
  %41 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 10, i32 0, i32 0, i64 3
  %42 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 2, i32 0, i32 0, i64 3
  %43 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i64 3
  %44 = bitcast %struct.VkDescriptorSet_T** %38 to i64*
  %45 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.absl::flat_hash_map.226", %"class.absl::flat_hash_map.226"* %6, i64 0, i32 0, i32 0
  %49 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %26, i64 0, i32 77, i32 0, i32 0
  %52 = bitcast %"class.rx::vk::ImageView"** %9 to i8*
  %53 = bitcast %"class.rx::vk::ImageView"** %9 to i64**
  %54 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 15
  %57 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = bitcast %"class.rx::vk::BufferView"** %8 to i8*
  %60 = bitcast %"class.rx::vk::BufferView"** %8 to %"class.rx::vk::WrappedObject.1490"**
  %61 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %62 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  br label %63

63:                                               ; preds = %24, %276
  %64 = phi %"struct.gl::ImageBinding"* [ %20, %24 ], [ %284, %276 ]
  %65 = phi i64 [ 0, %24 ], [ %278, %276 ]
  %66 = phi i32 [ 0, %24 ], [ %277, %276 ]
  %67 = call i32 @_ZNK2gl17ProgramExecutable29getUniformIndexFromImageIndexEj(%"class.gl::ProgramExecutable"* %2, i32 %66) #15
  %68 = zext i32 %67 to i64
  %69 = load %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"** %34, align 8
  %70 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %69, i64 %68, i32 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = and i8 %71, %37
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %276, label %74

74:                                               ; preds = %63
  %75 = load %struct.VkDescriptorSet_T*, %struct.VkDescriptorSet_T** %38, align 8
  %76 = icmp eq %struct.VkDescriptorSet_T* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = ptrtoint %struct.VkDescriptorSet_T* %75 to i64
  br label %88

79:                                               ; preds = %74
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #15
  store i8 0, i8* %5, align 1
  %80 = load %"class.rx::vk::RefCounted.863"*, %"class.rx::vk::RefCounted.863"** %40, align 8
  %81 = getelementptr inbounds %"class.rx::vk::RefCounted.863", %"class.rx::vk::RefCounted.863"* %80, i64 0, i32 1, i32 0, i32 0
  %82 = call i32 @_ZN2rx2vk21DynamicDescriptorPool22allocateSetsAndGetInfoEPNS_9ContextVkEPKP23VkDescriptorSetLayout_TjPNS0_14BindingPointerINS0_20DescriptorPoolHelperEEEPP17VkDescriptorSet_TPb(%"class.rx::vk::DynamicDescriptorPool"* %39, %"class.rx::ContextVk"* %1, %struct.VkDescriptorSetLayout_T** %81, i32 1, %"class.rx::vk::BindingPointer.866"* %41, %struct.VkDescriptorSet_T** %38, i8* nonnull %5) #15
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %274, label %84

84:                                               ; preds = %79
  store %struct.VkDescriptorSet_T* null, %struct.VkDescriptorSet_T** %42, align 8
  %85 = load i32, i32* %43, align 4
  %86 = add i32 %85, 1
  store i32 %86, i32* %43, align 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #15
  %87 = load i64, i64* %44, align 8
  br label %88

88:                                               ; preds = %84, %77
  %89 = phi i64 [ %78, %77 ], [ %87, %84 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #15
  %90 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %69, i64 %68, i32 1, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 24, i1 false)
  call void @_ZN2rx27GlslangGetMappedSamplerNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %7, %"class.std::__1::basic_string"* dereferenceable(24) %90) #15
  %91 = call zeroext i1 @_ZN2rx26GetImageNameWithoutIndicesEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull %7) #15
  %92 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %64, i64 %65, i32 1
  %93 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %64, i64 %65, i32 1, i32 0, i32 1
  %94 = bitcast i32** %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.std::__1::vector"* %92 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = sub i64 %95, %97
  %99 = ashr exact i64 %98, 2
  %100 = trunc i64 %99 to i32
  %101 = call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE22find_or_prepare_insertIS9_EENSE_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.228"* nonnull %48, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #15, !noalias !69
  %102 = extractvalue { i64, i8 } %101, 0
  %103 = extractvalue { i64, i8 } %101, 1
  %104 = and i8 %103, 1
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %120, label %106

106:                                              ; preds = %88
  %107 = load %"union.absl::container_internal::map_slot_type.229"*, %"union.absl::container_internal::map_slot_type.229"** %29, align 8, !noalias !69
  %108 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %107, i64 %102
  %109 = load i8, i8* %50, align 1, !noalias !69
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %113, label %111

111:                                              ; preds = %106
  %112 = bitcast %"union.absl::container_internal::map_slot_type.229"* %108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* nonnull align 8 %45, i64 24, i1 false) #15, !noalias !69
  br label %117

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %108, i64 0, i32 0
  %115 = load i8*, i8** %46, align 8, !noalias !69
  %116 = load i64, i64* %47, align 8, !noalias !69
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %114, i8* %115, i64 %116) #15, !noalias !69
  br label %117

117:                                              ; preds = %113, %111
  %118 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %107, i64 %102, i32 1
  %119 = bitcast [8 x i8]* %118 to i32*
  store i32 0, i32* %119, align 8, !noalias !69
  br label %120

120:                                              ; preds = %117, %88
  %121 = load i8*, i8** %28, align 8, !noalias !69
  %122 = getelementptr inbounds i8, i8* %121, i64 %102
  %123 = load %"union.absl::container_internal::map_slot_type.229"*, %"union.absl::container_internal::map_slot_type.229"** %29, align 8, !noalias !69
  %124 = icmp ne i8* %122, null
  call void @llvm.assume(i1 %124) #15, !noalias !69
  %125 = load i8, i8* %122, align 1
  %126 = icmp sgt i8 %125, -1
  br i1 %126, label %128, label %127, !prof !6

127:                                              ; preds = %120
  call void @llvm.trap() #15
  unreachable

128:                                              ; preds = %120
  %129 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %123, i64 %102, i32 1
  %130 = bitcast [8 x i8]* %129 to i32*
  %131 = load i32, i32* %130, align 4
  %132 = call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE22find_or_prepare_insertIS9_EENSE_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.228"* nonnull %48, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #15, !noalias !74
  %133 = extractvalue { i64, i8 } %132, 0
  %134 = extractvalue { i64, i8 } %132, 1
  %135 = and i8 %134, 1
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %151, label %137

137:                                              ; preds = %128
  %138 = load %"union.absl::container_internal::map_slot_type.229"*, %"union.absl::container_internal::map_slot_type.229"** %29, align 8, !noalias !74
  %139 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %138, i64 %133
  %140 = load i8, i8* %50, align 1, !noalias !74
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %144, label %142

142:                                              ; preds = %137
  %143 = bitcast %"union.absl::container_internal::map_slot_type.229"* %139 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* nonnull align 8 %45, i64 24, i1 false) #15, !noalias !74
  br label %148

144:                                              ; preds = %137
  %145 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %139, i64 0, i32 0
  %146 = load i8*, i8** %46, align 8, !noalias !74
  %147 = load i64, i64* %47, align 8, !noalias !74
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %145, i8* %146, i64 %147) #15, !noalias !74
  br label %148

148:                                              ; preds = %144, %142
  %149 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %138, i64 %133, i32 1
  %150 = bitcast [8 x i8]* %149 to i32*
  store i32 0, i32* %150, align 8, !noalias !74
  br label %151

151:                                              ; preds = %148, %128
  %152 = load i8*, i8** %28, align 8, !noalias !74
  %153 = getelementptr inbounds i8, i8* %152, i64 %133
  %154 = load %"union.absl::container_internal::map_slot_type.229"*, %"union.absl::container_internal::map_slot_type.229"** %29, align 8, !noalias !74
  %155 = icmp ne i8* %153, null
  call void @llvm.assume(i1 %155) #15, !noalias !74
  %156 = load i8, i8* %153, align 1
  %157 = icmp sgt i8 %156, -1
  br i1 %157, label %159, label %158, !prof !6

158:                                              ; preds = %151
  call void @llvm.trap() #15
  unreachable

159:                                              ; preds = %151
  %160 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %154, i64 %133, i32 1
  %161 = bitcast [8 x i8]* %160 to i32*
  %162 = load i32, i32* %161, align 4
  %163 = add i32 %162, %100
  store i32 %163, i32* %161, align 4
  %164 = and i64 %99, 4294967295
  %165 = call %struct.VkWriteDescriptorSet* @_ZN2rx9ContextVk24allocWriteDescriptorSetsEm(%"class.rx::ContextVk"* %1, i64 %164) #15
  %166 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %64, i64 %65, i32 0
  %167 = load i8, i8* %166, align 8
  %168 = icmp eq i8 %167, 10
  br i1 %168, label %169, label %215

169:                                              ; preds = %159
  %170 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %69, i64 %68, i32 1, i32 14
  %171 = load i32, i32* %170, align 8
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %177, label %173

173:                                              ; preds = %169
  %174 = call i32 @_ZN5angle6Format18InternalFormatToIDEj(i32 %171) #15
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %12, i64 0, i32 49, i32 1, i32 0, i64 %175
  br label %177

177:                                              ; preds = %169, %173
  %178 = phi %"struct.rx::vk::Format"* [ %176, %173 ], [ null, %169 ]
  %179 = icmp eq i32 %100, 0
  br i1 %179, label %268, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %92, i64 0, i32 0, i32 0
  %182 = and i64 %99, 4294967295
  br label %183

183:                                              ; preds = %193, %180
  %184 = phi i64 [ 0, %180 ], [ %212, %193 ]
  %185 = load i32*, i32** %181, align 8
  %186 = getelementptr inbounds i32, i32* %185, i64 %184
  %187 = load i32, i32* %186, align 4
  %188 = zext i32 %187 to i64
  %189 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 47, i32 0, i64 %188
  %190 = load %"class.rx::TextureVk"*, %"class.rx::TextureVk"** %189, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #15
  store %"class.rx::vk::BufferView"* null, %"class.rx::vk::BufferView"** %8, align 8
  %191 = call i32 @_ZN2rx9TextureVk25getBufferViewAndRecordUseEPNS_9ContextVkEPKNS_2vk6FormatEbPPKNS3_10BufferViewE(%"class.rx::TextureVk"* %190, %"class.rx::ContextVk"* %1, %"struct.rx::vk::Format"* %178, i1 zeroext true, %"class.rx::vk::BufferView"** nonnull %8) #15
  %192 = icmp eq i32 %191, 1
  br i1 %192, label %214, label %193

193:                                              ; preds = %183
  %194 = call dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx30ShaderInterfaceVariableInfoMap3getEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"* %56, i8 zeroext %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #15
  %195 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %165, i64 %184, i32 0
  store i32 35, i32* %195, align 8
  %196 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %165, i64 %184, i32 1
  store i8* null, i8** %196, align 8
  %197 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %165, i64 %184, i32 2
  %198 = bitcast %struct.VkDescriptorSet_T** %197 to i64*
  store i64 %89, i64* %198, align 8
  %199 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %194, i64 0, i32 1
  %200 = load i32, i32* %199, align 4
  %201 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %165, i64 %184, i32 3
  store i32 %200, i32* %201, align 8
  %202 = trunc i64 %184 to i32
  %203 = add i32 %131, %202
  %204 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %165, i64 %184, i32 4
  store i32 %203, i32* %204, align 4
  %205 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %165, i64 %184, i32 5
  store i32 1, i32* %205, align 8
  %206 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %165, i64 %184, i32 6
  store i32 5, i32* %206, align 4
  %207 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %165, i64 %184, i32 7
  %208 = bitcast %struct.VkDescriptorImageInfo** %207 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %208, i8 0, i64 16, i1 false)
  %209 = load %"class.rx::vk::WrappedObject.1490"*, %"class.rx::vk::WrappedObject.1490"** %60, align 8
  %210 = getelementptr inbounds %"class.rx::vk::WrappedObject.1490", %"class.rx::vk::WrappedObject.1490"* %209, i64 0, i32 0
  %211 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %165, i64 %184, i32 9
  store %struct.VkBufferView_T** %210, %struct.VkBufferView_T*** %211, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #15
  %212 = add nuw nsw i64 %184, 1
  %213 = icmp eq i64 %212, %182
  br i1 %213, label %268, label %183

214:                                              ; preds = %183
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #15
  br label %268

215:                                              ; preds = %159
  %216 = call %struct.VkDescriptorImageInfo* @_ZN2rx9ContextVk25allocDescriptorImageInfosEm(%"class.rx::ContextVk"* %1, i64 %164) #15
  %217 = icmp eq i32 %100, 0
  br i1 %217, label %268, label %218

218:                                              ; preds = %215
  %219 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %92, i64 0, i32 0, i32 0
  %220 = and i64 %99, 4294967295
  br label %221

221:                                              ; preds = %264, %218
  %222 = phi i64 [ 0, %218 ], [ %265, %264 ]
  %223 = load i32*, i32** %219, align 8
  %224 = getelementptr inbounds i32, i32* %223, i64 %222
  %225 = load i32, i32* %224, align 4
  %226 = zext i32 %225 to i64
  %227 = load %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"** %51, align 8
  %228 = getelementptr inbounds %"struct.gl::ImageUnit", %"struct.gl::ImageUnit"* %227, i64 %226
  %229 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 47, i32 0, i64 %226
  %230 = load %"class.rx::TextureVk"*, %"class.rx::TextureVk"** %229, align 8
  %231 = getelementptr inbounds %"class.rx::TextureVk", %"class.rx::TextureVk"* %230, i64 0, i32 12
  %232 = load %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"** %231, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #15
  store %"class.rx::vk::ImageView"* null, %"class.rx::vk::ImageView"** %9, align 8
  %233 = call i32 @_ZN2rx9TextureVk19getStorageImageViewEPNS_9ContextVkERKN2gl9ImageUnitEPPKNS_2vk9ImageViewE(%"class.rx::TextureVk"* %230, %"class.rx::ContextVk"* %1, %"struct.gl::ImageUnit"* dereferenceable(40) %228, %"class.rx::vk::ImageView"** nonnull %9) #15
  %234 = icmp eq i32 %233, 1
  br i1 %234, label %267, label %235

235:                                              ; preds = %221
  %236 = getelementptr inbounds %struct.VkDescriptorImageInfo, %struct.VkDescriptorImageInfo* %216, i64 %222
  %237 = getelementptr inbounds %struct.VkDescriptorImageInfo, %struct.VkDescriptorImageInfo* %236, i64 0, i32 0
  store %struct.VkSampler_T* null, %struct.VkSampler_T** %237, align 8
  %238 = load i64*, i64** %53, align 8
  %239 = load i64, i64* %238, align 8
  %240 = getelementptr inbounds %struct.VkDescriptorImageInfo, %struct.VkDescriptorImageInfo* %216, i64 %222, i32 1
  %241 = bitcast %struct.VkImageView_T** %240 to i64*
  store i64 %239, i64* %241, align 8
  %242 = call i32 @_ZNK2rx2vk11ImageHelper16getCurrentLayoutEv(%"class.rx::vk::ImageHelper"* %232) #15
  %243 = getelementptr inbounds %struct.VkDescriptorImageInfo, %struct.VkDescriptorImageInfo* %216, i64 %222, i32 2
  store i32 %242, i32* %243, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 24, i1 false)
  call void @_ZN2rx27GlslangGetMappedSamplerNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %10, %"class.std::__1::basic_string"* dereferenceable(24) %90) #15
  %244 = call dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx30ShaderInterfaceVariableInfoMap3getEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"* %56, i8 zeroext %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10) #15
  %245 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %165, i64 %222, i32 0
  store i32 35, i32* %245, align 8
  %246 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %165, i64 %222, i32 1
  store i8* null, i8** %246, align 8
  %247 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %165, i64 %222, i32 2
  %248 = bitcast %struct.VkDescriptorSet_T** %247 to i64*
  store i64 %89, i64* %248, align 8
  %249 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %244, i64 0, i32 1
  %250 = load i32, i32* %249, align 4
  %251 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %165, i64 %222, i32 3
  store i32 %250, i32* %251, align 8
  %252 = trunc i64 %222 to i32
  %253 = add i32 %131, %252
  %254 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %165, i64 %222, i32 4
  store i32 %253, i32* %254, align 4
  %255 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %165, i64 %222, i32 5
  store i32 1, i32* %255, align 8
  %256 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %165, i64 %222, i32 6
  store i32 3, i32* %256, align 4
  %257 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %165, i64 %222, i32 7
  store %struct.VkDescriptorImageInfo* %236, %struct.VkDescriptorImageInfo** %257, align 8
  %258 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %165, i64 %222, i32 8
  %259 = bitcast %struct.VkDescriptorBufferInfo** %258 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %259, i8 0, i64 16, i1 false)
  %260 = load i8, i8* %58, align 1
  %261 = icmp slt i8 %260, 0
  br i1 %261, label %262, label %264

262:                                              ; preds = %235
  %263 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %263) #20
  br label %264

264:                                              ; preds = %262, %235
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #15
  %265 = add nuw nsw i64 %222, 1
  %266 = icmp eq i64 %265, %220
  br i1 %266, label %268, label %221

267:                                              ; preds = %221
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #15
  br label %268

268:                                              ; preds = %264, %193, %177, %215, %267, %214
  %269 = phi i32 [ 1, %214 ], [ 1, %267 ], [ 4, %177 ], [ 0, %215 ], [ 4, %193 ], [ 0, %264 ]
  %270 = load i8, i8* %50, align 1
  %271 = icmp slt i8 %270, 0
  br i1 %271, label %272, label %275

272:                                              ; preds = %268
  %273 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %273) #20
  br label %275

274:                                              ; preds = %79
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #15
  br label %285

275:                                              ; preds = %272, %268
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #15
  switch i32 %269, label %285 [
    i32 0, label %276
    i32 4, label %276
  ]

276:                                              ; preds = %63, %275, %275
  %277 = add i32 %66, 1
  %278 = zext i32 %277 to i64
  %279 = load i64, i64* %32, align 8
  %280 = load i64, i64* %33, align 8
  %281 = sub i64 %279, %280
  %282 = ashr exact i64 %281, 5
  %283 = icmp ugt i64 %282, %278
  %284 = inttoptr i64 %280 to %"struct.gl::ImageBinding"*
  br i1 %283, label %63, label %285

285:                                              ; preds = %276, %275, %274
  %286 = phi i32 [ 1, %274 ], [ 0, %276 ], [ 1, %275 ]
  %287 = load i64, i64* %30, align 8
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %313, label %291

289:                                              ; preds = %309
  %290 = load i8*, i8** %28, align 8
  call void @_ZdlPv(i8* %290) #20
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %28, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 32, i1 false) #15
  br label %313

291:                                              ; preds = %285, %309
  %292 = phi i64 [ %310, %309 ], [ %287, %285 ]
  %293 = phi i64 [ %311, %309 ], [ 0, %285 ]
  %294 = load i8*, i8** %28, align 8
  %295 = getelementptr inbounds i8, i8* %294, i64 %293
  %296 = load i8, i8* %295, align 1
  %297 = icmp sgt i8 %296, -1
  br i1 %297, label %298, label %309

298:                                              ; preds = %291
  %299 = load %"union.absl::container_internal::map_slot_type.229"*, %"union.absl::container_internal::map_slot_type.229"** %29, align 8
  %300 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %299, i64 %293
  %301 = bitcast %"union.absl::container_internal::map_slot_type.229"* %300 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %302 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %301, i64 0, i32 1, i32 0
  %303 = load i8, i8* %302, align 1
  %304 = icmp slt i8 %303, 0
  br i1 %304, label %305, label %309

305:                                              ; preds = %298
  %306 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %300, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %307 = load i8*, i8** %306, align 8
  call void @_ZdlPv(i8* %307) #20
  %308 = load i64, i64* %30, align 8
  br label %309

309:                                              ; preds = %305, %298, %291
  %310 = phi i64 [ %308, %305 ], [ %292, %298 ], [ %292, %291 ]
  %311 = add i64 %293, 1
  %312 = icmp eq i64 %311, %310
  br i1 %312, label %289, label %291

313:                                              ; preds = %285, %289
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %27) #15
  br label %314

314:                                              ; preds = %4, %313
  %315 = phi i32 [ %286, %313 ], [ 0, %4 ]
  ret i32 %315
}

declare i32 @_ZN2rx9TextureVk25getBufferViewAndRecordUseEPNS_9ContextVkEPKNS_2vk6FormatEbPPKNS3_10BufferViewE(%"class.rx::TextureVk"*, %"class.rx::ContextVk"*, %"struct.rx::vk::Format"*, i1 zeroext, %"class.rx::vk::BufferView"**) local_unnamed_addr #6

declare %struct.VkDescriptorImageInfo* @_ZN2rx9ContextVk25allocDescriptorImageInfosEm(%"class.rx::ContextVk"*, i64) local_unnamed_addr #6

declare i32 @_ZN2rx9TextureVk19getStorageImageViewEPNS_9ContextVkERKN2gl9ImageUnitEPPKNS_2vk9ImageViewE(%"class.rx::TextureVk"*, %"class.rx::ContextVk"*, %"struct.gl::ImageUnit"* dereferenceable(40), %"class.rx::vk::ImageView"**) local_unnamed_addr #6

declare i32 @_ZNK2rx2vk11ImageHelper16getCurrentLayoutEv(%"class.rx::vk::ImageHelper"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx19ProgramExecutableVk34updateShaderResourcesDescriptorSetEPNS_9ContextVkEPNS_13FramebufferVkERKNS_2vk27ShaderBuffersDescriptorDescEPNS5_19CommandBufferHelperE(%"class.rx::ProgramExecutableVk"*, %"class.rx::ContextVk"*, %"class.rx::FramebufferVk"*, %"class.rx::vk::ShaderBuffersDescriptorDesc"* dereferenceable(152), %"class.rx::vk::CommandBufferHelper"* nocapture readnone) local_unnamed_addr #3 align 2 {
  %6 = alloca %"class.angle::PackedEnumMap.1447", align 8
  %7 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 0, i32 1
  %8 = load %"class.gl::State"*, %"class.gl::State"** %7, align 8
  %9 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %8, i64 0, i32 65
  %10 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %9, align 8
  %11 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 1, i32 0, i32 0, i64 3
  store %struct.VkDescriptorSet_T* null, %struct.VkDescriptorSet_T** %11, align 8
  %12 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 2, i32 0, i32 0, i64 3
  store %struct.VkDescriptorSet_T* null, %struct.VkDescriptorSet_T** %12, align 8
  %13 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 14
  %14 = bitcast %"class.std::__1::vector"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 14, i32 0, i32 1
  %17 = bitcast i32** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = tail call zeroext i1 @_ZNK2gl17ProgramExecutable9hasImagesEv(%"class.gl::ProgramExecutable"* %10) #15
  br i1 %18, label %193, label %19

19:                                               ; preds = %5
  %20 = tail call zeroext i1 @_ZNK2gl17ProgramExecutable20usesFramebufferFetchEv(%"class.gl::ProgramExecutable"* %10) #15
  br i1 %20, label %193, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 7, i32 1, i32 0, i32 0
  %23 = tail call { i8*, %"union.absl::container_internal::map_slot_type.846"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE4findIS5_EENSK_8iteratorERSH_(%"class.absl::container_internal::raw_hash_set.845"* %22, %"class.rx::vk::ShaderBuffersDescriptorDesc"* dereferenceable(152) %3) #15
  %24 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.846"* } %23, 0
  %25 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.846"* } %23, 1
  %26 = icmp eq i8* %24, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %21
  %28 = load i8, i8* %24, align 1
  %29 = icmp sgt i8 %28, -1
  br i1 %29, label %35, label %30, !prof !6

30:                                               ; preds = %27
  tail call void @llvm.trap() #15
  unreachable

31:                                               ; preds = %21
  %32 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 7, i32 0, i32 1, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %32, align 8
  br label %193

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %25, i64 0, i32 0, i32 1
  %37 = bitcast %struct.VkDescriptorSet_T** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 7, i32 0, i32 1, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, 1
  store i64 %41, i64* %39, align 8
  %42 = bitcast %struct.VkDescriptorSet_T** %11 to i64*
  store i64 %38, i64* %42, align 8
  %43 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 10, i32 0, i32 0, i64 3, i32 0
  %44 = load %"class.rx::vk::RefCounted"*, %"class.rx::vk::RefCounted"** %43, align 8
  %45 = getelementptr inbounds %"class.rx::vk::RefCounted", %"class.rx::vk::RefCounted"* %44, i64 0, i32 1, i32 0, i32 1, i32 0
  %46 = load %"struct.rx::vk::ResourceUse"*, %"struct.rx::vk::ResourceUse"** %45, align 8
  %47 = ptrtoint %"struct.rx::vk::ResourceUse"* %46 to i64
  %48 = getelementptr inbounds %"struct.rx::vk::ResourceUse", %"struct.rx::vk::ResourceUse"* %46, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = add i32 %49, 1
  store i32 %50, i32* %48, align 8
  %51 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 74, i32 1
  %52 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 74, i32 1, i32 0, i32 1
  %53 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %52, align 8
  %54 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 74, i32 1, i32 0, i32 2, i32 0, i32 0
  %55 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %54, align 8
  %56 = icmp ult %"class.rx::vk::SharedResourceUse"* %53, %55
  %57 = ptrtoint %"class.rx::vk::SharedResourceUse"* %55 to i64
  br i1 %56, label %58, label %63

58:                                               ; preds = %35
  %59 = bitcast %"class.rx::vk::SharedResourceUse"* %53 to i64*
  store i64 %47, i64* %59, align 8
  %60 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %53, i64 1
  %61 = ptrtoint %"class.rx::vk::SharedResourceUse"* %60 to i64
  %62 = bitcast %"class.rx::vk::SharedResourceUse"** %52 to i64*
  store i64 %61, i64* %62, align 8
  br label %193

63:                                               ; preds = %35
  %64 = ptrtoint %"class.rx::vk::SharedResourceUse"* %53 to i64
  %65 = bitcast %"class.rx::vk::SharedResourceUse"** %52 to i64*
  %66 = bitcast %"class.std::__1::vector.1085"* %51 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = sub i64 %64, %67
  %69 = ashr exact i64 %68, 3
  %70 = add nsw i64 %69, 1
  %71 = icmp ugt i64 %70, 2305843009213693951
  br i1 %71, label %72, label %74

72:                                               ; preds = %63
  %73 = bitcast %"class.std::__1::vector.1085"* %51 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %73) #21
  unreachable

74:                                               ; preds = %63
  %75 = bitcast %"class.rx::vk::SharedResourceUse"** %54 to i64*
  %76 = sub i64 %57, %67
  %77 = ashr exact i64 %76, 3
  %78 = icmp ult i64 %77, 1152921504606846975
  br i1 %78, label %79, label %87

79:                                               ; preds = %74
  %80 = ashr exact i64 %76, 2
  %81 = icmp ult i64 %80, %70
  %82 = select i1 %81, i64 %70, i64 %80
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %92, label %84

84:                                               ; preds = %79
  %85 = icmp ugt i64 %82, 2305843009213693951
  br i1 %85, label %86, label %87

86:                                               ; preds = %84
  tail call void @abort() #21
  unreachable

87:                                               ; preds = %84, %74
  %88 = phi i64 [ %82, %84 ], [ 2305843009213693951, %74 ]
  %89 = shl i64 %88, 3
  %90 = tail call i8* @_Znwm(i64 %89) #20
  %91 = bitcast i8* %90 to %"class.rx::vk::SharedResourceUse"*
  br label %92

92:                                               ; preds = %87, %79
  %93 = phi i64 [ %88, %87 ], [ 0, %79 ]
  %94 = phi %"class.rx::vk::SharedResourceUse"* [ %91, %87 ], [ null, %79 ]
  %95 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %94, i64 %69
  %96 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %94, i64 %93
  %97 = ptrtoint %"class.rx::vk::SharedResourceUse"* %96 to i64
  %98 = bitcast %"class.rx::vk::SharedResourceUse"* %95 to i64*
  store i64 %47, i64* %98, align 8
  %99 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %95, i64 1
  %100 = ptrtoint %"class.rx::vk::SharedResourceUse"* %99 to i64
  %101 = getelementptr inbounds %"class.std::__1::vector.1085", %"class.std::__1::vector.1085"* %51, i64 0, i32 0, i32 0
  %102 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %101, align 8
  %103 = ptrtoint %"class.rx::vk::SharedResourceUse"* %102 to i64
  %104 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %52, align 8
  %105 = icmp eq %"class.rx::vk::SharedResourceUse"* %104, %102
  br i1 %105, label %186, label %106

106:                                              ; preds = %92
  %107 = getelementptr %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %104, i64 -1, i32 0
  %108 = ptrtoint %"struct.rx::vk::ResourceUse"** %107 to i64
  %109 = sub i64 %108, %103
  %110 = lshr i64 %109, 3
  %111 = add nuw nsw i64 %110, 1
  %112 = and i64 %111, 7
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %126, label %114

114:                                              ; preds = %106, %114
  %115 = phi %"class.rx::vk::SharedResourceUse"* [ %118, %114 ], [ %95, %106 ]
  %116 = phi %"class.rx::vk::SharedResourceUse"* [ %119, %114 ], [ %104, %106 ]
  %117 = phi i64 [ %124, %114 ], [ %112, %106 ]
  %118 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %115, i64 -1
  %119 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %116, i64 -1
  %120 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %119, i64 0, i32 0
  %121 = bitcast %"class.rx::vk::SharedResourceUse"* %119 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %"class.rx::vk::SharedResourceUse"* %118 to i64*
  store i64 %122, i64* %123, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %120, align 8
  %124 = add i64 %117, -1
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %114, !llvm.loop !79

126:                                              ; preds = %114, %106
  %127 = phi %"class.rx::vk::SharedResourceUse"* [ undef, %106 ], [ %118, %114 ]
  %128 = phi %"class.rx::vk::SharedResourceUse"* [ %95, %106 ], [ %118, %114 ]
  %129 = phi %"class.rx::vk::SharedResourceUse"* [ %104, %106 ], [ %119, %114 ]
  %130 = icmp ult i64 %109, 56
  br i1 %130, label %183, label %131

131:                                              ; preds = %126, %131
  %132 = phi %"class.rx::vk::SharedResourceUse"* [ %176, %131 ], [ %128, %126 ]
  %133 = phi %"class.rx::vk::SharedResourceUse"* [ %177, %131 ], [ %129, %126 ]
  %134 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %132, i64 -1
  %135 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %133, i64 -1
  %136 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %135, i64 0, i32 0
  %137 = bitcast %"class.rx::vk::SharedResourceUse"* %135 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.rx::vk::SharedResourceUse"* %134 to i64*
  store i64 %138, i64* %139, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %136, align 8
  %140 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %132, i64 -2
  %141 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %133, i64 -2
  %142 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %141, i64 0, i32 0
  %143 = bitcast %"class.rx::vk::SharedResourceUse"* %141 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.rx::vk::SharedResourceUse"* %140 to i64*
  store i64 %144, i64* %145, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %142, align 8
  %146 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %132, i64 -3
  %147 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %133, i64 -3
  %148 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %147, i64 0, i32 0
  %149 = bitcast %"class.rx::vk::SharedResourceUse"* %147 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.rx::vk::SharedResourceUse"* %146 to i64*
  store i64 %150, i64* %151, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %148, align 8
  %152 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %132, i64 -4
  %153 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %133, i64 -4
  %154 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %153, i64 0, i32 0
  %155 = bitcast %"class.rx::vk::SharedResourceUse"* %153 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.rx::vk::SharedResourceUse"* %152 to i64*
  store i64 %156, i64* %157, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %154, align 8
  %158 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %132, i64 -5
  %159 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %133, i64 -5
  %160 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %159, i64 0, i32 0
  %161 = bitcast %"class.rx::vk::SharedResourceUse"* %159 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = bitcast %"class.rx::vk::SharedResourceUse"* %158 to i64*
  store i64 %162, i64* %163, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %160, align 8
  %164 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %132, i64 -6
  %165 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %133, i64 -6
  %166 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %165, i64 0, i32 0
  %167 = bitcast %"class.rx::vk::SharedResourceUse"* %165 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"class.rx::vk::SharedResourceUse"* %164 to i64*
  store i64 %168, i64* %169, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %166, align 8
  %170 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %132, i64 -7
  %171 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %133, i64 -7
  %172 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %171, i64 0, i32 0
  %173 = bitcast %"class.rx::vk::SharedResourceUse"* %171 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.rx::vk::SharedResourceUse"* %170 to i64*
  store i64 %174, i64* %175, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %172, align 8
  %176 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %132, i64 -8
  %177 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %133, i64 -8
  %178 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %177, i64 0, i32 0
  %179 = bitcast %"class.rx::vk::SharedResourceUse"* %177 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = bitcast %"class.rx::vk::SharedResourceUse"* %176 to i64*
  store i64 %180, i64* %181, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %178, align 8
  %182 = icmp eq %"class.rx::vk::SharedResourceUse"* %177, %102
  br i1 %182, label %183, label %131

183:                                              ; preds = %131, %126
  %184 = phi %"class.rx::vk::SharedResourceUse"* [ %127, %126 ], [ %176, %131 ]
  %185 = load i64, i64* %66, align 8
  br label %186

186:                                              ; preds = %92, %183
  %187 = phi %"class.rx::vk::SharedResourceUse"* [ %184, %183 ], [ %95, %92 ]
  %188 = phi i64 [ %185, %183 ], [ %103, %92 ]
  %189 = ptrtoint %"class.rx::vk::SharedResourceUse"* %187 to i64
  store i64 %189, i64* %66, align 8
  store i64 %100, i64* %65, align 8
  store i64 %97, i64* %75, align 8
  %190 = icmp eq i64 %188, 0
  br i1 %190, label %193, label %191

191:                                              ; preds = %186
  %192 = inttoptr i64 %188 to i8*
  tail call void @_ZdlPv(i8* %192) #20
  br label %193

193:                                              ; preds = %31, %58, %186, %191, %19, %5
  %194 = load %struct.VkDescriptorSet_T*, %struct.VkDescriptorSet_T** %11, align 8
  %195 = icmp ne %struct.VkDescriptorSet_T* %194, null
  %196 = bitcast %"class.angle::PackedEnumMap.1447"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %196) #15
  %197 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 19
  %198 = bitcast %"class.angle::PackedEnumMap.1447"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %198, i8 -86, i64 48, i1 false)
  %199 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %197, align 8
  %200 = icmp eq %"class.rx::ProgramVk"* %199, null
  br i1 %200, label %202, label %201

201:                                              ; preds = %193
  call void @_ZN2rx9ProgramVk19fillProgramStateMapEPN5angle13PackedEnumMapIN2gl10ShaderTypeEPKNS3_12ProgramStateELm6EEE(%"class.rx::ProgramVk"* nonnull %199, %"class.angle::PackedEnumMap.1447"* nonnull %6) #15
  br label %207

202:                                              ; preds = %193
  %203 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 20
  %204 = load %"class.rx::ProgramPipelineVk"*, %"class.rx::ProgramPipelineVk"** %203, align 8
  %205 = icmp eq %"class.rx::ProgramPipelineVk"* %204, null
  br i1 %205, label %207, label %206

206:                                              ; preds = %202
  call void @_ZN2rx17ProgramPipelineVk19fillProgramStateMapEPKNS_9ContextVkEPN5angle13PackedEnumMapIN2gl10ShaderTypeEPKNS6_12ProgramStateELm6EEE(%"class.rx::ProgramPipelineVk"* nonnull %204, %"class.rx::ContextVk"* %1, %"class.angle::PackedEnumMap.1447"* nonnull %6) #15
  br label %207

207:                                              ; preds = %201, %202, %206
  %208 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %10, i64 0, i32 55
  %209 = load i8, i8* %208, align 4, !range !2
  %210 = icmp eq i8 %209, 0
  %211 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %10, i64 0, i32 3
  %212 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %10, i64 0, i32 2
  %213 = select i1 %210, %"class.angle::BitSetT.141"* %212, %"class.angle::BitSetT.141"* %211
  %214 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %213, i64 0, i32 0
  %215 = load i8, i8* %214, align 1, !noalias !80
  %216 = icmp eq i8 %215, 0
  br i1 %216, label %276, label %217

217:                                              ; preds = %207
  %218 = zext i8 %215 to i32
  %219 = call i32 @llvm.cttz.i32(i32 %218, i1 true) #15, !range !8
  %220 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 12
  %221 = zext i32 %219 to i64
  %222 = trunc i32 %219 to i8
  %223 = getelementptr inbounds %"class.angle::PackedEnumMap.1447", %"class.angle::PackedEnumMap.1447"* %6, i64 0, i32 0, i32 0, i64 %221
  %224 = load %"class.gl::ProgramState"*, %"class.gl::ProgramState"** %223, align 8
  %225 = getelementptr inbounds %"class.gl::ProgramState", %"class.gl::ProgramState"* %224, i64 0, i32 23, i32 0
  %226 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %225, align 8
  %227 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %226, i64 0, i32 33
  %228 = load i32, i32* %220, align 8
  %229 = call i32 @_ZN2rx19ProgramExecutableVk26updateBuffersDescriptorSetEPNS_9ContextVkEN2gl10ShaderTypeERKNS_2vk27ShaderBuffersDescriptorDescERKNSt3__16vectorINS3_14InterfaceBlockENS9_9allocatorISB_EEEE16VkDescriptorTypeb(%"class.rx::ProgramExecutableVk"* %0, %"class.rx::ContextVk"* %1, i8 zeroext %222, %"class.rx::vk::ShaderBuffersDescriptorDesc"* dereferenceable(152) %3, %"class.std::__1::vector.194"* dereferenceable(24) %227, i32 %228, i1 zeroext %195)
  %230 = icmp eq i32 %229, 1
  br i1 %230, label %276, label %231

231:                                              ; preds = %217, %263
  %232 = phi %"class.gl::ProgramExecutable"** [ %270, %263 ], [ %225, %217 ]
  %233 = phi %"class.gl::ProgramState"* [ %269, %263 ], [ %224, %217 ]
  %234 = phi i8 [ %267, %263 ], [ %222, %217 ]
  %235 = phi i32 [ %265, %263 ], [ %219, %217 ]
  %236 = phi i8 [ %261, %263 ], [ %215, %217 ]
  %237 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %232, align 8
  %238 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %237, i64 0, i32 55
  %239 = load i8, i8* %238, align 4, !range !2
  %240 = icmp eq i8 %239, 0
  %241 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %237, i64 0, i32 37
  %242 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %237, i64 0, i32 38
  %243 = select i1 %240, %"class.std::__1::vector.194"* %242, %"class.std::__1::vector.194"* %241
  %244 = call i32 @_ZN2rx19ProgramExecutableVk26updateBuffersDescriptorSetEPNS_9ContextVkEN2gl10ShaderTypeERKNS_2vk27ShaderBuffersDescriptorDescERKNSt3__16vectorINS3_14InterfaceBlockENS9_9allocatorISB_EEEE16VkDescriptorTypeb(%"class.rx::ProgramExecutableVk"* %0, %"class.rx::ContextVk"* %1, i8 zeroext %234, %"class.rx::vk::ShaderBuffersDescriptorDesc"* dereferenceable(152) %3, %"class.std::__1::vector.194"* dereferenceable(24) %243, i32 7, i1 zeroext %195)
  %245 = icmp eq i32 %244, 1
  br i1 %245, label %276, label %246

246:                                              ; preds = %231
  %247 = call i32 @_ZN2rx19ProgramExecutableVk39updateAtomicCounterBuffersDescriptorSetEPNS_9ContextVkERKN2gl12ProgramStateENS3_10ShaderTypeERKNS_2vk27ShaderBuffersDescriptorDescEb(%"class.rx::ProgramExecutableVk"* %0, %"class.rx::ContextVk"* %1, %"class.gl::ProgramState"* dereferenceable(304) %233, i8 zeroext %234, %"class.rx::vk::ShaderBuffersDescriptorDesc"* dereferenceable(152) %3, i1 zeroext %195)
  %248 = icmp eq i32 %247, 1
  br i1 %248, label %276, label %249

249:                                              ; preds = %246
  %250 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %232, align 8
  %251 = call i32 @_ZN2rx19ProgramExecutableVk25updateImagesDescriptorSetEPNS_9ContextVkERKN2gl17ProgramExecutableENS3_10ShaderTypeE(%"class.rx::ProgramExecutableVk"* %0, %"class.rx::ContextVk"* %1, %"class.gl::ProgramExecutable"* dereferenceable(1728) %250, i8 zeroext %234)
  %252 = icmp eq i32 %251, 1
  br i1 %252, label %276, label %253

253:                                              ; preds = %249
  %254 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %232, align 8
  %255 = call i32 @_ZN2rx19ProgramExecutableVk34updateInputAttachmentDescriptorSetERKN2gl17ProgramExecutableENS1_10ShaderTypeEPNS_9ContextVkEPNS_13FramebufferVkE(%"class.rx::ProgramExecutableVk"* %0, %"class.gl::ProgramExecutable"* dereferenceable(1728) %254, i8 zeroext %234, %"class.rx::ContextVk"* %1, %"class.rx::FramebufferVk"* %2)
  %256 = icmp eq i32 %255, 1
  br i1 %256, label %276, label %257

257:                                              ; preds = %253
  %258 = shl i32 1, %235
  %259 = trunc i32 %258 to i8
  %260 = xor i8 %259, -1
  %261 = and i8 %236, %260
  %262 = icmp eq i8 %261, 0
  br i1 %262, label %276, label %263

263:                                              ; preds = %257
  %264 = zext i8 %261 to i32
  %265 = call i32 @llvm.cttz.i32(i32 %264, i1 true) #15, !range !8
  %266 = zext i32 %265 to i64
  %267 = trunc i32 %265 to i8
  %268 = getelementptr inbounds %"class.angle::PackedEnumMap.1447", %"class.angle::PackedEnumMap.1447"* %6, i64 0, i32 0, i32 0, i64 %266
  %269 = load %"class.gl::ProgramState"*, %"class.gl::ProgramState"** %268, align 8
  %270 = getelementptr inbounds %"class.gl::ProgramState", %"class.gl::ProgramState"* %269, i64 0, i32 23, i32 0
  %271 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %270, align 8
  %272 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %271, i64 0, i32 33
  %273 = load i32, i32* %220, align 8
  %274 = call i32 @_ZN2rx19ProgramExecutableVk26updateBuffersDescriptorSetEPNS_9ContextVkEN2gl10ShaderTypeERKNS_2vk27ShaderBuffersDescriptorDescERKNSt3__16vectorINS3_14InterfaceBlockENS9_9allocatorISB_EEEE16VkDescriptorTypeb(%"class.rx::ProgramExecutableVk"* %0, %"class.rx::ContextVk"* %1, i8 zeroext %267, %"class.rx::vk::ShaderBuffersDescriptorDesc"* dereferenceable(152) %3, %"class.std::__1::vector.194"* dereferenceable(24) %272, i32 %273, i1 zeroext %195)
  %275 = icmp eq i32 %274, 1
  br i1 %275, label %276, label %231

276:                                              ; preds = %263, %231, %246, %249, %253, %257, %217, %207
  %277 = phi i32 [ 0, %207 ], [ 1, %217 ], [ 0, %257 ], [ 1, %253 ], [ 1, %249 ], [ 1, %246 ], [ 1, %231 ], [ 1, %263 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %196) #15
  ret i32 %277
}

declare zeroext i1 @_ZNK2gl17ProgramExecutable9hasImagesEv(%"class.gl::ProgramExecutable"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx19ProgramExecutableVk34updateInputAttachmentDescriptorSetERKN2gl17ProgramExecutableENS1_10ShaderTypeEPNS_9ContextVkEPNS_13FramebufferVkE(%"class.rx::ProgramExecutableVk"*, %"class.gl::ProgramExecutable"* dereferenceable(1728), i8 zeroext, %"class.rx::ContextVk"*, %"class.rx::FramebufferVk"*) local_unnamed_addr #3 align 2 {
  %6 = alloca i8, align 1
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.rx::vk::ImageView"*, align 8
  %9 = icmp eq i8 %2, 4
  br i1 %9, label %10, label %131

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 30
  %12 = tail call zeroext i1 @_ZNK2gl17ProgramExecutable20usesFramebufferFetchEv(%"class.gl::ProgramExecutable"* %1) #15
  br i1 %12, label %13, label %131

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 39, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 30, i32 0, i32 1
  %18 = bitcast %"struct.gl::LinkedUniform"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.187"* %11 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = sdiv exact i64 %22, 280
  %24 = icmp ugt i64 %23, %16
  br i1 %24, label %27, label %25

25:                                               ; preds = %13
  %26 = bitcast %"class.std::__1::vector.187"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %26) #21
  unreachable

27:                                               ; preds = %13
  %28 = inttoptr i64 %21 to %"struct.gl::LinkedUniform"*
  %29 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #15
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %28, i64 %16, i32 1, i32 3
  %32 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  %35 = load i8, i8* %33, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %27
  %38 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 8 %38, i64 24, i1 false) #15
  br label %44

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %28, i64 %16, i32 1, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %7, i8* %41, i64 %43) #15
  br label %44

44:                                               ; preds = %37, %39
  %45 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 15
  %46 = call dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx30ShaderInterfaceVariableInfoMap3getEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"* %45, i8 zeroext 4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #15
  %47 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %46, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %28, i64 %16, i32 1, i32 11
  %50 = load i32, i32* %49, align 4
  %51 = sub i32 %48, %50
  %52 = getelementptr inbounds %"class.rx::FramebufferVk", %"class.rx::FramebufferVk"* %4, i64 0, i32 0, i32 1
  %53 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %52, align 8
  %54 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %53, i64 0, i32 6, i32 0
  %55 = load i8, i8* %54, align 1, !noalias !83
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %122, label %57

57:                                               ; preds = %44
  %58 = zext i8 %55 to i32
  %59 = call i32 @llvm.cttz.i32(i32 %58, i1 true) #15, !range !8
  %60 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 1, i32 0, i32 0, i64 3
  %61 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 11, i32 0, i32 0, i64 3
  %62 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 9, i32 0, i32 0, i64 3, i32 0
  %63 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 10, i32 0, i32 0, i64 3
  %64 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 2, i32 0, i32 0, i64 3
  %65 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i64 3
  %66 = bitcast %struct.VkDescriptorSet_T** %60 to i64*
  %67 = bitcast %"class.rx::vk::ImageView"** %8 to i8*
  %68 = bitcast %"class.rx::vk::ImageView"** %8 to i64**
  br label %69

69:                                               ; preds = %119, %57
  %70 = phi i32 [ %59, %57 ], [ %121, %119 ]
  %71 = phi i8 [ %55, %57 ], [ %117, %119 ]
  %72 = zext i32 %70 to i64
  %73 = load %struct.VkDescriptorSet_T*, %struct.VkDescriptorSet_T** %60, align 8
  %74 = icmp eq %struct.VkDescriptorSet_T* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %69
  %76 = ptrtoint %struct.VkDescriptorSet_T* %73 to i64
  br label %86

77:                                               ; preds = %69
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #15
  store i8 0, i8* %6, align 1
  %78 = load %"class.rx::vk::RefCounted.863"*, %"class.rx::vk::RefCounted.863"** %62, align 8
  %79 = getelementptr inbounds %"class.rx::vk::RefCounted.863", %"class.rx::vk::RefCounted.863"* %78, i64 0, i32 1, i32 0, i32 0
  %80 = call i32 @_ZN2rx2vk21DynamicDescriptorPool22allocateSetsAndGetInfoEPNS_9ContextVkEPKP23VkDescriptorSetLayout_TjPNS0_14BindingPointerINS0_20DescriptorPoolHelperEEEPP17VkDescriptorSet_TPb(%"class.rx::vk::DynamicDescriptorPool"* %61, %"class.rx::ContextVk"* %3, %struct.VkDescriptorSetLayout_T** %79, i32 1, %"class.rx::vk::BindingPointer.866"* %63, %struct.VkDescriptorSet_T** %60, i8* nonnull %6) #15
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %93, label %82

82:                                               ; preds = %77
  store %struct.VkDescriptorSet_T* null, %struct.VkDescriptorSet_T** %64, align 8
  %83 = load i32, i32* %65, align 4
  %84 = add i32 %83, 1
  store i32 %84, i32* %65, align 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #15
  %85 = load i64, i64* %66, align 8
  br label %86

86:                                               ; preds = %82, %75
  %87 = phi i64 [ %76, %75 ], [ %85, %82 ]
  %88 = call %struct.VkWriteDescriptorSet* @_ZN2rx9ContextVk24allocWriteDescriptorSetsEm(%"class.rx::ContextVk"* %3, i64 1) #15
  %89 = call %struct.VkDescriptorImageInfo* @_ZN2rx9ContextVk25allocDescriptorImageInfosEm(%"class.rx::ContextVk"* %3, i64 1) #15
  %90 = call %"class.rx::RenderTargetVk"* @_ZNK2rx13FramebufferVk24getColorDrawRenderTargetEm(%"class.rx::FramebufferVk"* %4, i64 %72) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #15
  store %"class.rx::vk::ImageView"* null, %"class.rx::vk::ImageView"** %8, align 8
  %91 = call i32 @_ZNK2rx14RenderTargetVk12getImageViewEPNS_9ContextVkEPPKNS_2vk9ImageViewE(%"class.rx::RenderTargetVk"* %90, %"class.rx::ContextVk"* %3, %"class.rx::vk::ImageView"** nonnull %8) #15
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %94, label %95

93:                                               ; preds = %77
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #15
  br label %122

94:                                               ; preds = %86
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #15
  br label %122

95:                                               ; preds = %86
  %96 = getelementptr inbounds %struct.VkDescriptorImageInfo, %struct.VkDescriptorImageInfo* %89, i64 0, i32 0
  store %struct.VkSampler_T* null, %struct.VkSampler_T** %96, align 8
  %97 = load i64*, i64** %68, align 8
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %struct.VkDescriptorImageInfo, %struct.VkDescriptorImageInfo* %89, i64 0, i32 1
  %100 = bitcast %struct.VkImageView_T** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = getelementptr inbounds %struct.VkDescriptorImageInfo, %struct.VkDescriptorImageInfo* %89, i64 0, i32 2
  store i32 1, i32* %101, align 8
  %102 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %88, i64 0, i32 0
  store i32 35, i32* %102, align 8
  %103 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %88, i64 0, i32 1
  store i8* null, i8** %103, align 8
  %104 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %88, i64 0, i32 2
  %105 = bitcast %struct.VkDescriptorSet_T** %104 to i64*
  store i64 %87, i64* %105, align 8
  %106 = add i32 %51, %70
  %107 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %88, i64 0, i32 3
  store i32 %106, i32* %107, align 8
  %108 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %88, i64 0, i32 4
  store i32 0, i32* %108, align 4
  %109 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %88, i64 0, i32 5
  store i32 1, i32* %109, align 8
  %110 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %88, i64 0, i32 6
  store i32 10, i32* %110, align 4
  %111 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %88, i64 0, i32 7
  store %struct.VkDescriptorImageInfo* %89, %struct.VkDescriptorImageInfo** %111, align 8
  %112 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %88, i64 0, i32 8
  %113 = bitcast %struct.VkDescriptorBufferInfo** %112 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #15
  %114 = shl i32 1, %70
  %115 = trunc i32 %114 to i8
  %116 = xor i8 %115, -1
  %117 = and i8 %71, %116
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %122, label %119

119:                                              ; preds = %95
  %120 = zext i8 %117 to i32
  %121 = call i32 @llvm.cttz.i32(i32 %120, i1 true) #15, !range !8
  br label %69

122:                                              ; preds = %95, %44, %93, %94
  %123 = phi i32 [ 1, %93 ], [ 1, %94 ], [ 0, %44 ], [ 0, %95 ]
  %124 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %130

128:                                              ; preds = %122
  %129 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %129) #20
  br label %130

130:                                              ; preds = %122, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #15
  br label %131

131:                                              ; preds = %130, %10, %5
  %132 = phi i32 [ 0, %5 ], [ %123, %130 ], [ 0, %10 ]
  ret i32 %132
}

declare %"class.rx::RenderTargetVk"* @_ZNK2rx13FramebufferVk24getColorDrawRenderTargetEm(%"class.rx::FramebufferVk"*, i64) local_unnamed_addr #6

declare i32 @_ZNK2rx14RenderTargetVk12getImageViewEPNS_9ContextVkEPPKNS_2vk9ImageViewE(%"class.rx::RenderTargetVk"*, %"class.rx::ContextVk"*, %"class.rx::vk::ImageView"**) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx19ProgramExecutableVk36updateTransformFeedbackDescriptorSetERKN2gl12ProgramStateERN5angle13PackedEnumMapINS1_10ShaderTypeENS_19DefaultUniformBlockELm6EEEPNS_2vk12BufferHelperEPNS_9ContextVkERKNSB_28UniformsAndXfbDescriptorDescE(%"class.rx::ProgramExecutableVk"*, %"class.gl::ProgramState"* dereferenceable(304), %"class.angle::PackedEnumMap.805"* nocapture readonly dereferenceable(288), %"class.rx::vk::BufferHelper"* nocapture readonly, %"class.rx::ContextVk"*, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* dereferenceable(40)) local_unnamed_addr #3 align 2 {
  %7 = alloca i8, align 1
  %8 = getelementptr inbounds %"class.gl::ProgramState", %"class.gl::ProgramState"* %1, i64 0, i32 23, i32 0
  %9 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %8, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #15
  store i8 -86, i8* %7, align 1
  %10 = call i32 @_ZN2rx19ProgramExecutableVk31allocUniformAndXfbDescriptorSetEPNS_9ContextVkERKNS_2vk28UniformsAndXfbDescriptorDescEPb(%"class.rx::ProgramExecutableVk"* %0, %"class.rx::ContextVk"* %4, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* dereferenceable(40) %5, i8* nonnull %7)
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %49, label %12

12:                                               ; preds = %6
  %13 = load i8, i8* %7, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %49, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %9, i64 0, i32 55
  %17 = load i8, i8* %16, align 4, !range !2
  %18 = icmp eq i8 %17, 0
  %19 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %9, i64 0, i32 3
  %20 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %9, i64 0, i32 2
  %21 = select i1 %18, %"class.angle::BitSetT.141"* %20, %"class.angle::BitSetT.141"* %19
  %22 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %21, i64 0, i32 0
  %23 = load i8, i8* %22, align 1, !noalias !86
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %36, label %25

25:                                               ; preds = %15
  %26 = zext i8 %23 to i32
  %27 = tail call i32 @llvm.cttz.i32(i32 %26, i1 true) #15, !range !8
  %28 = zext i32 %27 to i64
  %29 = trunc i32 %27 to i8
  %30 = getelementptr inbounds %"class.angle::PackedEnumMap.805", %"class.angle::PackedEnumMap.805"* %2, i64 0, i32 0, i32 0, i64 %28
  tail call void @_ZN2rx19ProgramExecutableVk34updateDefaultUniformsDescriptorSetEN2gl10ShaderTypeERKNS_19DefaultUniformBlockEPNS_2vk12BufferHelperEPNS_9ContextVkE(%"class.rx::ProgramExecutableVk"* %0, i8 zeroext %29, %"struct.rx::DefaultUniformBlock"* dereferenceable(48) %30, %"class.rx::vk::BufferHelper"* %3, %"class.rx::ContextVk"* %4)
  %31 = shl i32 1, %27
  %32 = trunc i32 %31 to i8
  %33 = xor i8 %32, -1
  %34 = and i8 %23, %33
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %37, %25, %15
  tail call void @_ZN2rx19ProgramExecutableVk40updateTransformFeedbackDescriptorSetImplERKN2gl12ProgramStateEPNS_9ContextVkE(%"class.rx::ProgramExecutableVk"* %0, %"class.gl::ProgramState"* dereferenceable(304) %1, %"class.rx::ContextVk"* %4)
  br label %49

37:                                               ; preds = %25, %37
  %38 = phi i8 [ %47, %37 ], [ %34, %25 ]
  %39 = zext i8 %38 to i32
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 true) #15, !range !8
  %41 = zext i32 %40 to i64
  %42 = trunc i32 %40 to i8
  %43 = getelementptr inbounds %"class.angle::PackedEnumMap.805", %"class.angle::PackedEnumMap.805"* %2, i64 0, i32 0, i32 0, i64 %41
  tail call void @_ZN2rx19ProgramExecutableVk34updateDefaultUniformsDescriptorSetEN2gl10ShaderTypeERKNS_19DefaultUniformBlockEPNS_2vk12BufferHelperEPNS_9ContextVkE(%"class.rx::ProgramExecutableVk"* %0, i8 zeroext %42, %"struct.rx::DefaultUniformBlock"* dereferenceable(48) %43, %"class.rx::vk::BufferHelper"* %3, %"class.rx::ContextVk"* %4)
  %44 = shl i32 1, %40
  %45 = trunc i32 %44 to i8
  %46 = xor i8 %45, -1
  %47 = and i8 %38, %46
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %36, label %37

49:                                               ; preds = %6, %36, %12
  %50 = phi i32 [ 1, %6 ], [ 0, %12 ], [ 0, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #15
  ret i32 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx19ProgramExecutableVk40updateTransformFeedbackDescriptorSetImplERKN2gl12ProgramStateEPNS_9ContextVkE(%"class.rx::ProgramExecutableVk"*, %"class.gl::ProgramState"* dereferenceable(304), %"class.rx::ContextVk"*) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %2, i64 0, i32 0, i32 1
  %5 = load %"class.gl::State"*, %"class.gl::State"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %5, i64 0, i32 86, i32 0, i32 1
  %7 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %6, align 8
  %8 = getelementptr inbounds %"class.gl::ProgramState", %"class.gl::ProgramState"* %1, i64 0, i32 23, i32 0
  %9 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %8, align 8
  %10 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %9, i64 0, i32 26, i32 0, i32 0
  %11 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %10, align 8
  %12 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %9, i64 0, i32 26, i32 0, i32 1
  %13 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %12, align 8
  %14 = icmp eq %"struct.gl::TransformFeedbackVarying"* %11, %13
  %15 = icmp eq %"class.gl::TransformFeedback"* %7, null
  %16 = or i1 %15, %14
  br i1 %16, label %44, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.gl::TransformFeedback", %"class.gl::TransformFeedback"* %7, i64 0, i32 2, i32 1
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = tail call zeroext i1 @_ZNK2gl17TransformFeedback8isPausedEv(%"class.gl::TransformFeedback"* nonnull %7) #15
  br i1 %22, label %23, label %37

23:                                               ; preds = %21, %17
  %24 = tail call %"class.rx::TransformFeedbackImpl"* @_ZNK2gl17TransformFeedback17getImplementationEv(%"class.gl::TransformFeedback"* nonnull %7) #15
  %25 = bitcast %"class.rx::TransformFeedbackImpl"* %24 to %"class.rx::TransformFeedbackVk"*
  %26 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 15
  %27 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %9, i64 0, i32 27
  %28 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %9, i64 0, i32 27, i32 0, i32 1
  %29 = bitcast i32** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::vector.180"* %27 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %30, %32
  %34 = ashr exact i64 %33, 2
  %35 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 1, i32 0, i32 0, i64 1
  %36 = load %struct.VkDescriptorSet_T*, %struct.VkDescriptorSet_T** %35, align 8
  tail call void @_ZNK2rx19TransformFeedbackVk17initDescriptorSetEPNS_9ContextVkERKNS_30ShaderInterfaceVariableInfoMapEmP17VkDescriptorSet_T(%"class.rx::TransformFeedbackVk"* %25, %"class.rx::ContextVk"* %2, %"class.rx::ShaderInterfaceVariableInfoMap"* dereferenceable(240) %26, i64 %34, %struct.VkDescriptorSet_T* %36) #15
  br label %44

37:                                               ; preds = %21
  %38 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %6, align 8
  %39 = tail call %"class.rx::TransformFeedbackImpl"* @_ZNK2gl17TransformFeedback17getImplementationEv(%"class.gl::TransformFeedback"* %38) #15
  %40 = bitcast %"class.rx::TransformFeedbackImpl"* %39 to %"class.rx::TransformFeedbackVk"*
  %41 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 15
  %42 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 1, i32 0, i32 0, i64 1
  %43 = load %struct.VkDescriptorSet_T*, %struct.VkDescriptorSet_T** %42, align 8
  tail call void @_ZNK2rx19TransformFeedbackVk19updateDescriptorSetEPNS_9ContextVkERKN2gl12ProgramStateERKNS_30ShaderInterfaceVariableInfoMapEP17VkDescriptorSet_T(%"class.rx::TransformFeedbackVk"* %40, %"class.rx::ContextVk"* %2, %"class.gl::ProgramState"* dereferenceable(304) %1, %"class.rx::ShaderInterfaceVariableInfoMap"* dereferenceable(240) %41, %struct.VkDescriptorSet_T* %43) #15
  br label %44

44:                                               ; preds = %3, %23, %37
  ret void
}

declare void @_ZNK2rx19TransformFeedbackVk17initDescriptorSetEPNS_9ContextVkERKNS_30ShaderInterfaceVariableInfoMapEmP17VkDescriptorSet_T(%"class.rx::TransformFeedbackVk"*, %"class.rx::ContextVk"*, %"class.rx::ShaderInterfaceVariableInfoMap"* dereferenceable(240), i64, %struct.VkDescriptorSet_T*) local_unnamed_addr #6

declare void @_ZNK2rx19TransformFeedbackVk19updateDescriptorSetEPNS_9ContextVkERKN2gl12ProgramStateERKNS_30ShaderInterfaceVariableInfoMapEP17VkDescriptorSet_T(%"class.rx::TransformFeedbackVk"*, %"class.rx::ContextVk"*, %"class.gl::ProgramState"* dereferenceable(304), %"class.rx::ShaderInterfaceVariableInfoMap"* dereferenceable(240), %struct.VkDescriptorSet_T*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx19ProgramExecutableVk27updateTexturesDescriptorSetEPNS_9ContextVkERKNS_2vk21TextureDescriptorDescE(%"class.rx::ProgramExecutableVk"*, %"class.rx::ContextVk"*, %"class.rx::vk::TextureDescriptorDesc"* dereferenceable(1156)) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.angle::PackedEnumMap.1447", align 8
  %5 = alloca %"class.absl::flat_hash_map.226", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.rx::vk::BufferView"*, align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 0, i32 1
  %12 = load %"class.gl::State"*, %"class.gl::State"** %11, align 8
  %13 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %12, i64 0, i32 65
  %14 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %13, align 8
  %15 = tail call zeroext i1 @_ZNK2gl17ProgramExecutable11hasTexturesEv(%"class.gl::ProgramExecutable"* %14) #15
  br i1 %15, label %16, label %579

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 6
  %18 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %19 = tail call { i8*, %"union.absl::container_internal::map_slot_type.829"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE4findIS5_EENSK_8iteratorERSH_(%"class.absl::container_internal::raw_hash_set.828"* %18, %"class.rx::vk::TextureDescriptorDesc"* dereferenceable(1156) %2) #15
  %20 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.829"* } %19, 0
  %21 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.829"* } %19, 1
  %22 = icmp eq i8* %20, null
  br i1 %22, label %186, label %23

23:                                               ; preds = %16
  %24 = load i8, i8* %20, align 1
  %25 = icmp sgt i8 %24, -1
  br i1 %25, label %27, label %26, !prof !6

26:                                               ; preds = %23
  tail call void @llvm.trap() #15
  unreachable

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %21, i64 0, i32 0, i32 1
  %29 = bitcast %struct.VkDescriptorSet_T** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 6, i32 0, i32 1, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, 1
  store i64 %33, i64* %31, align 8
  %34 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 1, i32 0, i32 0, i64 2
  %35 = bitcast %struct.VkDescriptorSet_T** %34 to i64*
  store i64 %30, i64* %35, align 8
  %36 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 10, i32 0, i32 0, i64 2, i32 0
  %37 = load %"class.rx::vk::RefCounted"*, %"class.rx::vk::RefCounted"** %36, align 8
  %38 = getelementptr inbounds %"class.rx::vk::RefCounted", %"class.rx::vk::RefCounted"* %37, i64 0, i32 1, i32 0, i32 1, i32 0
  %39 = load %"struct.rx::vk::ResourceUse"*, %"struct.rx::vk::ResourceUse"** %38, align 8
  %40 = ptrtoint %"struct.rx::vk::ResourceUse"* %39 to i64
  %41 = getelementptr inbounds %"struct.rx::vk::ResourceUse", %"struct.rx::vk::ResourceUse"* %39, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = add i32 %42, 1
  store i32 %43, i32* %41, align 8
  %44 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 74, i32 1
  %45 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 74, i32 1, i32 0, i32 1
  %46 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %45, align 8
  %47 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 74, i32 1, i32 0, i32 2, i32 0, i32 0
  %48 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %47, align 8
  %49 = icmp ult %"class.rx::vk::SharedResourceUse"* %46, %48
  %50 = ptrtoint %"class.rx::vk::SharedResourceUse"* %48 to i64
  br i1 %49, label %51, label %56

51:                                               ; preds = %27
  %52 = bitcast %"class.rx::vk::SharedResourceUse"* %46 to i64*
  store i64 %40, i64* %52, align 8
  %53 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %46, i64 1
  %54 = ptrtoint %"class.rx::vk::SharedResourceUse"* %53 to i64
  %55 = bitcast %"class.rx::vk::SharedResourceUse"** %45 to i64*
  store i64 %54, i64* %55, align 8
  br label %579

56:                                               ; preds = %27
  %57 = ptrtoint %"class.rx::vk::SharedResourceUse"* %46 to i64
  %58 = bitcast %"class.rx::vk::SharedResourceUse"** %45 to i64*
  %59 = bitcast %"class.std::__1::vector.1085"* %44 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = sub i64 %57, %60
  %62 = ashr exact i64 %61, 3
  %63 = add nsw i64 %62, 1
  %64 = icmp ugt i64 %63, 2305843009213693951
  br i1 %64, label %65, label %67

65:                                               ; preds = %56
  %66 = bitcast %"class.std::__1::vector.1085"* %44 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %66) #21
  unreachable

67:                                               ; preds = %56
  %68 = bitcast %"class.rx::vk::SharedResourceUse"** %47 to i64*
  %69 = sub i64 %50, %60
  %70 = ashr exact i64 %69, 3
  %71 = icmp ult i64 %70, 1152921504606846975
  br i1 %71, label %72, label %80

72:                                               ; preds = %67
  %73 = ashr exact i64 %69, 2
  %74 = icmp ult i64 %73, %63
  %75 = select i1 %74, i64 %63, i64 %73
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %85, label %77

77:                                               ; preds = %72
  %78 = icmp ugt i64 %75, 2305843009213693951
  br i1 %78, label %79, label %80

79:                                               ; preds = %77
  tail call void @abort() #21
  unreachable

80:                                               ; preds = %77, %67
  %81 = phi i64 [ %75, %77 ], [ 2305843009213693951, %67 ]
  %82 = shl i64 %81, 3
  %83 = tail call i8* @_Znwm(i64 %82) #20
  %84 = bitcast i8* %83 to %"class.rx::vk::SharedResourceUse"*
  br label %85

85:                                               ; preds = %80, %72
  %86 = phi i64 [ %81, %80 ], [ 0, %72 ]
  %87 = phi %"class.rx::vk::SharedResourceUse"* [ %84, %80 ], [ null, %72 ]
  %88 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %87, i64 %62
  %89 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %87, i64 %86
  %90 = ptrtoint %"class.rx::vk::SharedResourceUse"* %89 to i64
  %91 = bitcast %"class.rx::vk::SharedResourceUse"* %88 to i64*
  store i64 %40, i64* %91, align 8
  %92 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %88, i64 1
  %93 = ptrtoint %"class.rx::vk::SharedResourceUse"* %92 to i64
  %94 = getelementptr inbounds %"class.std::__1::vector.1085", %"class.std::__1::vector.1085"* %44, i64 0, i32 0, i32 0
  %95 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %94, align 8
  %96 = ptrtoint %"class.rx::vk::SharedResourceUse"* %95 to i64
  %97 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %45, align 8
  %98 = icmp eq %"class.rx::vk::SharedResourceUse"* %97, %95
  br i1 %98, label %179, label %99

99:                                               ; preds = %85
  %100 = getelementptr %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %97, i64 -1, i32 0
  %101 = ptrtoint %"struct.rx::vk::ResourceUse"** %100 to i64
  %102 = sub i64 %101, %96
  %103 = lshr i64 %102, 3
  %104 = add nuw nsw i64 %103, 1
  %105 = and i64 %104, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %119, label %107

107:                                              ; preds = %99, %107
  %108 = phi %"class.rx::vk::SharedResourceUse"* [ %111, %107 ], [ %88, %99 ]
  %109 = phi %"class.rx::vk::SharedResourceUse"* [ %112, %107 ], [ %97, %99 ]
  %110 = phi i64 [ %117, %107 ], [ %105, %99 ]
  %111 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %108, i64 -1
  %112 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %109, i64 -1
  %113 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %112, i64 0, i32 0
  %114 = bitcast %"class.rx::vk::SharedResourceUse"* %112 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.rx::vk::SharedResourceUse"* %111 to i64*
  store i64 %115, i64* %116, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %113, align 8
  %117 = add i64 %110, -1
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %107, !llvm.loop !89

119:                                              ; preds = %107, %99
  %120 = phi %"class.rx::vk::SharedResourceUse"* [ undef, %99 ], [ %111, %107 ]
  %121 = phi %"class.rx::vk::SharedResourceUse"* [ %88, %99 ], [ %111, %107 ]
  %122 = phi %"class.rx::vk::SharedResourceUse"* [ %97, %99 ], [ %112, %107 ]
  %123 = icmp ult i64 %102, 56
  br i1 %123, label %176, label %124

124:                                              ; preds = %119, %124
  %125 = phi %"class.rx::vk::SharedResourceUse"* [ %169, %124 ], [ %121, %119 ]
  %126 = phi %"class.rx::vk::SharedResourceUse"* [ %170, %124 ], [ %122, %119 ]
  %127 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %125, i64 -1
  %128 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %126, i64 -1
  %129 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %128, i64 0, i32 0
  %130 = bitcast %"class.rx::vk::SharedResourceUse"* %128 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.rx::vk::SharedResourceUse"* %127 to i64*
  store i64 %131, i64* %132, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %129, align 8
  %133 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %125, i64 -2
  %134 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %126, i64 -2
  %135 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %134, i64 0, i32 0
  %136 = bitcast %"class.rx::vk::SharedResourceUse"* %134 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.rx::vk::SharedResourceUse"* %133 to i64*
  store i64 %137, i64* %138, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %135, align 8
  %139 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %125, i64 -3
  %140 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %126, i64 -3
  %141 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %140, i64 0, i32 0
  %142 = bitcast %"class.rx::vk::SharedResourceUse"* %140 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.rx::vk::SharedResourceUse"* %139 to i64*
  store i64 %143, i64* %144, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %141, align 8
  %145 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %125, i64 -4
  %146 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %126, i64 -4
  %147 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %146, i64 0, i32 0
  %148 = bitcast %"class.rx::vk::SharedResourceUse"* %146 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.rx::vk::SharedResourceUse"* %145 to i64*
  store i64 %149, i64* %150, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %147, align 8
  %151 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %125, i64 -5
  %152 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %126, i64 -5
  %153 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %152, i64 0, i32 0
  %154 = bitcast %"class.rx::vk::SharedResourceUse"* %152 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"class.rx::vk::SharedResourceUse"* %151 to i64*
  store i64 %155, i64* %156, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %153, align 8
  %157 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %125, i64 -6
  %158 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %126, i64 -6
  %159 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %158, i64 0, i32 0
  %160 = bitcast %"class.rx::vk::SharedResourceUse"* %158 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast %"class.rx::vk::SharedResourceUse"* %157 to i64*
  store i64 %161, i64* %162, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %159, align 8
  %163 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %125, i64 -7
  %164 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %126, i64 -7
  %165 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %164, i64 0, i32 0
  %166 = bitcast %"class.rx::vk::SharedResourceUse"* %164 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = bitcast %"class.rx::vk::SharedResourceUse"* %163 to i64*
  store i64 %167, i64* %168, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %165, align 8
  %169 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %125, i64 -8
  %170 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %126, i64 -8
  %171 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %170, i64 0, i32 0
  %172 = bitcast %"class.rx::vk::SharedResourceUse"* %170 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.rx::vk::SharedResourceUse"* %169 to i64*
  store i64 %173, i64* %174, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %171, align 8
  %175 = icmp eq %"class.rx::vk::SharedResourceUse"* %170, %95
  br i1 %175, label %176, label %124

176:                                              ; preds = %124, %119
  %177 = phi %"class.rx::vk::SharedResourceUse"* [ %120, %119 ], [ %169, %124 ]
  %178 = load i64, i64* %59, align 8
  br label %179

179:                                              ; preds = %85, %176
  %180 = phi %"class.rx::vk::SharedResourceUse"* [ %177, %176 ], [ %88, %85 ]
  %181 = phi i64 [ %178, %176 ], [ %96, %85 ]
  %182 = ptrtoint %"class.rx::vk::SharedResourceUse"* %180 to i64
  store i64 %182, i64* %59, align 8
  store i64 %93, i64* %58, align 8
  store i64 %90, i64* %68, align 8
  %183 = icmp eq i64 %181, 0
  br i1 %183, label %579, label %184

184:                                              ; preds = %179
  %185 = inttoptr i64 %181 to i8*
  tail call void @_ZdlPv(i8* %185) #20
  br label %579

186:                                              ; preds = %16
  %187 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 6, i32 0, i32 1, i32 1
  %188 = load i64, i64* %187, align 8
  %189 = add i64 %188, 1
  store i64 %189, i64* %187, align 8
  %190 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 42
  %191 = load i8, i8* %190, align 4, !range !2
  %192 = icmp eq i8 %191, 0
  %193 = bitcast %"class.angle::PackedEnumMap.1447"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %193) #15
  %194 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 19
  %195 = bitcast %"class.angle::PackedEnumMap.1447"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %195, i8 -86, i64 48, i1 false)
  %196 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %194, align 8
  %197 = icmp eq %"class.rx::ProgramVk"* %196, null
  br i1 %197, label %199, label %198

198:                                              ; preds = %186
  call void @_ZN2rx9ProgramVk19fillProgramStateMapEPN5angle13PackedEnumMapIN2gl10ShaderTypeEPKNS3_12ProgramStateELm6EEE(%"class.rx::ProgramVk"* nonnull %196, %"class.angle::PackedEnumMap.1447"* nonnull %4) #15
  br label %204

199:                                              ; preds = %186
  %200 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 20
  %201 = load %"class.rx::ProgramPipelineVk"*, %"class.rx::ProgramPipelineVk"** %200, align 8
  %202 = icmp eq %"class.rx::ProgramPipelineVk"* %201, null
  br i1 %202, label %204, label %203

203:                                              ; preds = %199
  call void @_ZN2rx17ProgramPipelineVk19fillProgramStateMapEPKNS_9ContextVkEPN5angle13PackedEnumMapIN2gl10ShaderTypeEPKNS6_12ProgramStateELm6EEE(%"class.rx::ProgramPipelineVk"* nonnull %201, %"class.rx::ContextVk"* %1, %"class.angle::PackedEnumMap.1447"* nonnull %4) #15
  br label %204

204:                                              ; preds = %198, %199, %203
  %205 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %14, i64 0, i32 55
  %206 = load i8, i8* %205, align 4, !range !2
  %207 = icmp eq i8 %206, 0
  %208 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %14, i64 0, i32 3
  %209 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %14, i64 0, i32 2
  %210 = select i1 %207, %"class.angle::BitSetT.141"* %209, %"class.angle::BitSetT.141"* %208
  %211 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %210, i64 0, i32 0
  %212 = load i8, i8* %211, align 1, !noalias !90
  %213 = icmp eq i8 %212, 0
  br i1 %213, label %577, label %214

214:                                              ; preds = %204
  %215 = zext i8 %212 to i32
  %216 = call i32 @llvm.cttz.i32(i32 %215, i1 true) #15, !range !8
  %217 = bitcast %"class.absl::flat_hash_map.226"* %5 to i8*
  %218 = getelementptr inbounds %"class.absl::flat_hash_map.226", %"class.absl::flat_hash_map.226"* %5, i64 0, i32 0, i32 0, i32 0
  %219 = getelementptr inbounds %"class.absl::flat_hash_map.226", %"class.absl::flat_hash_map.226"* %5, i64 0, i32 0, i32 0, i32 1
  %220 = getelementptr inbounds %"class.absl::flat_hash_map.226", %"class.absl::flat_hash_map.226"* %5, i64 0, i32 0, i32 0, i32 3
  %221 = bitcast %"union.absl::container_internal::map_slot_type.229"** %219 to i8*
  %222 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %223 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %225 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 11, i32 0, i32 0, i64 2
  %226 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 9, i32 0, i32 0, i64 2, i32 0
  %227 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 10, i32 0, i32 0, i64 2
  %228 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 1, i32 0, i32 0, i64 2
  %229 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 2, i32 0, i32 0, i64 2
  %230 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i64 2
  %231 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %232 = bitcast %struct.VkDescriptorSet_T** %228 to i64*
  %233 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 6, i32 1, i32 0, i32 0, i32 1
  %234 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.828", %"class.absl::container_internal::raw_hash_set.828"* %18, i64 0, i32 0
  %235 = getelementptr inbounds %"class.absl::flat_hash_map.226", %"class.absl::flat_hash_map.226"* %5, i64 0, i32 0, i32 0
  %236 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %237 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %236, i64 0, i32 1, i32 0
  %238 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %239 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 15
  %241 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %241, i64 0, i32 1, i32 0
  %243 = bitcast %"class.rx::vk::BufferView"** %8 to i8*
  %244 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %245 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = bitcast %"class.rx::vk::BufferView"** %8 to %"class.rx::vk::WrappedObject.1490"**
  %247 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %248 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %247, i64 0, i32 1, i32 0
  %249 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %250 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %251 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  br label %252

252:                                              ; preds = %574, %214
  %253 = phi i64 [ 0, %214 ], [ %568, %574 ]
  %254 = phi i8 [ %212, %214 ], [ %572, %574 ]
  %255 = phi i32 [ %216, %214 ], [ %576, %574 ]
  %256 = zext i32 %255 to i64
  %257 = trunc i32 %255 to i8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %217) #15
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %218, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %221, i8 0, i64 32, i1 false) #15
  %258 = getelementptr inbounds %"class.angle::PackedEnumMap.1447", %"class.angle::PackedEnumMap.1447"* %4, i64 0, i32 0, i32 0, i64 %256
  %259 = load %"class.gl::ProgramState"*, %"class.gl::ProgramState"** %258, align 8
  %260 = getelementptr inbounds %"class.gl::ProgramState", %"class.gl::ProgramState"* %259, i64 0, i32 23, i32 0
  %261 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %260, align 8
  %262 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %261, i64 0, i32 40
  %263 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %261, i64 0, i32 40, i32 0, i32 1
  %264 = bitcast %"struct.gl::SamplerBinding"** %263 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = bitcast %"class.std::__1::vector.209"* %262 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = icmp eq i64 %265, %267
  br i1 %268, label %269, label %270

269:                                              ; preds = %252
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %217) #15
  br label %567

270:                                              ; preds = %252
  %271 = shl i32 1, %255
  %272 = trunc i32 %271 to i8
  br label %273

273:                                              ; preds = %270, %524
  %274 = phi %"class.gl::ProgramExecutable"* [ %261, %270 ], [ %527, %524 ]
  %275 = phi i64 [ 0, %270 ], [ %526, %524 ]
  %276 = phi i32 [ 0, %270 ], [ %525, %524 ]
  %277 = phi i64 [ %253, %270 ], [ %517, %524 ]
  %278 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %274, i64 0, i32 40, i32 0, i32 0
  %279 = load %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"** %278, align 8
  %280 = call i32 @_ZNK2gl12ProgramState31getUniformIndexFromSamplerIndexEj(%"class.gl::ProgramState"* %259, i32 %276) #15
  %281 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %260, align 8
  %282 = zext i32 %280 to i64
  %283 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %281, i64 0, i32 30, i32 0, i32 0
  %284 = load %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"** %283, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %222) #15
  %285 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %284, i64 %282, i32 1, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %249, i8 -86, i64 24, i1 false)
  call void @_ZN2rx27GlslangGetMappedSamplerNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.std::__1::basic_string"* dereferenceable(24) %285) #15
  %286 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %284, i64 %282, i32 0, i32 1, i32 0
  %287 = load i8, i8* %286, align 1
  %288 = and i8 %287, %272
  %289 = icmp eq i8 %288, 0
  br i1 %289, label %516, label %290

290:                                              ; preds = %273
  %291 = icmp eq i64 %277, 0
  br i1 %291, label %292, label %321

292:                                              ; preds = %290
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #15
  store i8 -86, i8* %7, align 1
  %293 = load %"class.rx::vk::RefCounted.863"*, %"class.rx::vk::RefCounted.863"** %226, align 8
  %294 = getelementptr inbounds %"class.rx::vk::RefCounted.863", %"class.rx::vk::RefCounted.863"* %293, i64 0, i32 1, i32 0, i32 0
  %295 = call i32 @_ZN2rx2vk21DynamicDescriptorPool22allocateSetsAndGetInfoEPNS_9ContextVkEPKP23VkDescriptorSetLayout_TjPNS0_14BindingPointerINS0_20DescriptorPoolHelperEEEPP17VkDescriptorSet_TPb(%"class.rx::vk::DynamicDescriptorPool"* %225, %"class.rx::ContextVk"* %1, %struct.VkDescriptorSetLayout_T** %294, i32 1, %"class.rx::vk::BindingPointer.866"* %227, %struct.VkDescriptorSet_T** %228, i8* nonnull %7) #15
  %296 = icmp eq i32 %295, 1
  br i1 %296, label %320, label %297

297:                                              ; preds = %292
  store %struct.VkDescriptorSet_T* null, %struct.VkDescriptorSet_T** %229, align 8
  %298 = load i32, i32* %230, align 4
  %299 = add i32 %298, 1
  store i32 %299, i32* %230, align 4
  %300 = load i8, i8* %7, align 1, !range !2
  %301 = icmp eq i8 %300, 0
  br i1 %301, label %304, label %302

302:                                              ; preds = %297
  %303 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %231, align 8
  call void @_ZN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EE7destroyEPNS_10RendererVkE(%"class.rx::DescriptorSetCache.824"* %17, %"class.rx::RendererVk"* %303) #15
  br label %304

304:                                              ; preds = %297, %302
  %305 = load i64, i64* %232, align 8
  %306 = call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE22find_or_prepare_insertIS5_EENSG_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.828"* %18, %"class.rx::vk::TextureDescriptorDesc"* dereferenceable(1156) %2) #15, !noalias !93
  %307 = extractvalue { i64, i8 } %306, 0
  %308 = extractvalue { i64, i8 } %306, 1
  %309 = and i8 %308, 1
  %310 = icmp eq i8 %309, 0
  br i1 %310, label %316, label %311

311:                                              ; preds = %304
  %312 = load %"union.absl::container_internal::map_slot_type.829"*, %"union.absl::container_internal::map_slot_type.829"** %233, align 8, !noalias !93
  %313 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %312, i64 %307, i32 0, i32 0
  call void @_ZN2rx2vk21TextureDescriptorDescC1ERKS1_(%"class.rx::vk::TextureDescriptorDesc"* %313, %"class.rx::vk::TextureDescriptorDesc"* dereferenceable(1156) %2) #15, !noalias !93
  %314 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %312, i64 %307, i32 0, i32 1
  %315 = bitcast %struct.VkDescriptorSet_T** %314 to i64*
  store i64 %305, i64* %315, align 8, !noalias !93
  br label %316

316:                                              ; preds = %304, %311
  %317 = load i8*, i8** %234, align 8, !noalias !93
  %318 = getelementptr inbounds i8, i8* %317, i64 %307
  %319 = icmp ne i8* %318, null
  call void @llvm.assume(i1 %319) #15, !noalias !93
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #15
  br label %321

320:                                              ; preds = %292
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #15
  br label %516

321:                                              ; preds = %316, %290
  %322 = phi i64 [ %277, %290 ], [ %305, %316 ]
  %323 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %279, i64 %275, i32 3
  %324 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %279, i64 %275, i32 3, i32 0, i32 1
  %325 = bitcast i32** %324 to i64*
  %326 = load i64, i64* %325, align 8
  %327 = bitcast %"class.std::__1::vector"* %323 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = sub i64 %326, %328
  %330 = ashr exact i64 %329, 2
  %331 = trunc i64 %330 to i32
  %332 = call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE22find_or_prepare_insertIS9_EENSE_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.228"* nonnull %235, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #15, !noalias !106
  %333 = extractvalue { i64, i8 } %332, 0
  %334 = extractvalue { i64, i8 } %332, 1
  %335 = and i8 %334, 1
  %336 = icmp eq i8 %335, 0
  br i1 %336, label %351, label %337

337:                                              ; preds = %321
  %338 = load %"union.absl::container_internal::map_slot_type.229"*, %"union.absl::container_internal::map_slot_type.229"** %219, align 8, !noalias !106
  %339 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %338, i64 %333
  %340 = load i8, i8* %237, align 1, !noalias !106
  %341 = icmp slt i8 %340, 0
  br i1 %341, label %344, label %342

342:                                              ; preds = %337
  %343 = bitcast %"union.absl::container_internal::map_slot_type.229"* %339 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %343, i8* nonnull align 8 %222, i64 24, i1 false) #15, !noalias !106
  br label %348

344:                                              ; preds = %337
  %345 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %339, i64 0, i32 0
  %346 = load i8*, i8** %223, align 8, !noalias !106
  %347 = load i64, i64* %224, align 8, !noalias !106
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %345, i8* %346, i64 %347) #15, !noalias !106
  br label %348

348:                                              ; preds = %344, %342
  %349 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %338, i64 %333, i32 1
  %350 = bitcast [8 x i8]* %349 to i32*
  store i32 0, i32* %350, align 8, !noalias !106
  br label %351

351:                                              ; preds = %348, %321
  %352 = load i8*, i8** %218, align 8, !noalias !106
  %353 = getelementptr inbounds i8, i8* %352, i64 %333
  %354 = load %"union.absl::container_internal::map_slot_type.229"*, %"union.absl::container_internal::map_slot_type.229"** %219, align 8, !noalias !106
  %355 = icmp ne i8* %353, null
  call void @llvm.assume(i1 %355) #15, !noalias !106
  %356 = load i8, i8* %353, align 1
  %357 = icmp sgt i8 %356, -1
  br i1 %357, label %359, label %358, !prof !6

358:                                              ; preds = %351
  call void @llvm.trap() #15
  unreachable

359:                                              ; preds = %351
  %360 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %354, i64 %333, i32 1
  %361 = bitcast [8 x i8]* %360 to i32*
  %362 = load i32, i32* %361, align 4
  %363 = call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE22find_or_prepare_insertIS9_EENSE_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.228"* nonnull %235, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #15, !noalias !111
  %364 = extractvalue { i64, i8 } %363, 0
  %365 = extractvalue { i64, i8 } %363, 1
  %366 = and i8 %365, 1
  %367 = icmp eq i8 %366, 0
  br i1 %367, label %382, label %368

368:                                              ; preds = %359
  %369 = load %"union.absl::container_internal::map_slot_type.229"*, %"union.absl::container_internal::map_slot_type.229"** %219, align 8, !noalias !111
  %370 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %369, i64 %364
  %371 = load i8, i8* %237, align 1, !noalias !111
  %372 = icmp slt i8 %371, 0
  br i1 %372, label %375, label %373

373:                                              ; preds = %368
  %374 = bitcast %"union.absl::container_internal::map_slot_type.229"* %370 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %374, i8* nonnull align 8 %222, i64 24, i1 false) #15, !noalias !111
  br label %379

375:                                              ; preds = %368
  %376 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %370, i64 0, i32 0
  %377 = load i8*, i8** %223, align 8, !noalias !111
  %378 = load i64, i64* %224, align 8, !noalias !111
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %376, i8* %377, i64 %378) #15, !noalias !111
  br label %379

379:                                              ; preds = %375, %373
  %380 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %369, i64 %364, i32 1
  %381 = bitcast [8 x i8]* %380 to i32*
  store i32 0, i32* %381, align 8, !noalias !111
  br label %382

382:                                              ; preds = %379, %359
  %383 = load i8*, i8** %218, align 8, !noalias !111
  %384 = getelementptr inbounds i8, i8* %383, i64 %364
  %385 = load %"union.absl::container_internal::map_slot_type.229"*, %"union.absl::container_internal::map_slot_type.229"** %219, align 8, !noalias !111
  %386 = icmp ne i8* %384, null
  call void @llvm.assume(i1 %386) #15, !noalias !111
  %387 = load i8, i8* %384, align 1
  %388 = icmp sgt i8 %387, -1
  br i1 %388, label %390, label %389, !prof !6

389:                                              ; preds = %382
  call void @llvm.trap() #15
  unreachable

390:                                              ; preds = %382
  %391 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %385, i64 %364, i32 1
  %392 = bitcast [8 x i8]* %391 to i32*
  %393 = load i32, i32* %392, align 4
  %394 = add i32 %393, %331
  store i32 %394, i32* %392, align 4
  %395 = and i64 %330, 4294967295
  %396 = call %struct.VkWriteDescriptorSet* @_ZN2rx9ContextVk24allocWriteDescriptorSetsEm(%"class.rx::ContextVk"* %1, i64 %395) #15
  %397 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %279, i64 %275, i32 0
  %398 = load i8, i8* %397, align 8
  %399 = icmp eq i8 %398, 10
  br i1 %399, label %400, label %442

400:                                              ; preds = %390
  %401 = icmp eq i32 %331, 0
  br i1 %401, label %516, label %402

402:                                              ; preds = %400
  %403 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %323, i64 0, i32 0, i32 0
  %404 = and i64 %330, 4294967295
  br label %405

405:                                              ; preds = %438, %402
  %406 = phi i64 [ 0, %402 ], [ %439, %438 ]
  %407 = load i32*, i32** %403, align 8
  %408 = getelementptr inbounds i32, i32* %407, i64 %406
  %409 = load i32, i32* %408, align 4
  %410 = zext i32 %409 to i64
  %411 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 44, i32 0, i64 %410, i32 0
  %412 = load %"class.rx::TextureVk"*, %"class.rx::TextureVk"** %411, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %243) #15
  store %"class.rx::vk::BufferView"* null, %"class.rx::vk::BufferView"** %8, align 8
  %413 = call i32 @_ZN2rx9TextureVk25getBufferViewAndRecordUseEPNS_9ContextVkEPKNS_2vk6FormatEbPPKNS3_10BufferViewE(%"class.rx::TextureVk"* %412, %"class.rx::ContextVk"* %1, %"struct.rx::vk::Format"* null, i1 zeroext false, %"class.rx::vk::BufferView"** nonnull %8) #15
  %414 = icmp eq i32 %413, 1
  br i1 %414, label %441, label %415

415:                                              ; preds = %405
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %244) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %251, i8 -86, i64 24, i1 false)
  call void @_ZN2rx27GlslangGetMappedSamplerNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %9, %"class.std::__1::basic_string"* dereferenceable(24) %285) #15
  %416 = call dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx30ShaderInterfaceVariableInfoMap3getEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"* %240, i8 zeroext %257, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #15
  %417 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %396, i64 %406, i32 0
  store i32 35, i32* %417, align 8
  %418 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %396, i64 %406, i32 1
  store i8* null, i8** %418, align 8
  %419 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %396, i64 %406, i32 2
  %420 = bitcast %struct.VkDescriptorSet_T** %419 to i64*
  store i64 %322, i64* %420, align 8
  %421 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %416, i64 0, i32 1
  %422 = load i32, i32* %421, align 4
  %423 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %396, i64 %406, i32 3
  store i32 %422, i32* %423, align 8
  %424 = trunc i64 %406 to i32
  %425 = add i32 %362, %424
  %426 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %396, i64 %406, i32 4
  store i32 %425, i32* %426, align 4
  %427 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %396, i64 %406, i32 5
  store i32 1, i32* %427, align 8
  %428 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %396, i64 %406, i32 6
  store i32 4, i32* %428, align 4
  %429 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %396, i64 %406, i32 7
  %430 = bitcast %struct.VkDescriptorImageInfo** %429 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %430, i8 0, i64 16, i1 false)
  %431 = load %"class.rx::vk::WrappedObject.1490"*, %"class.rx::vk::WrappedObject.1490"** %246, align 8
  %432 = getelementptr inbounds %"class.rx::vk::WrappedObject.1490", %"class.rx::vk::WrappedObject.1490"* %431, i64 0, i32 0
  %433 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %396, i64 %406, i32 9
  store %struct.VkBufferView_T** %432, %struct.VkBufferView_T*** %433, align 8
  %434 = load i8, i8* %248, align 1
  %435 = icmp slt i8 %434, 0
  br i1 %435, label %436, label %438

436:                                              ; preds = %415
  %437 = load i8*, i8** %245, align 8
  call void @_ZdlPv(i8* %437) #20
  br label %438

438:                                              ; preds = %436, %415
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %244) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %243) #15
  %439 = add nuw nsw i64 %406, 1
  %440 = icmp eq i64 %439, %404
  br i1 %440, label %516, label %405

441:                                              ; preds = %405
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %243) #15
  br label %516

442:                                              ; preds = %390
  %443 = call %struct.VkDescriptorImageInfo* @_ZN2rx9ContextVk25allocDescriptorImageInfosEm(%"class.rx::ContextVk"* %1, i64 %395) #15
  %444 = icmp eq i32 %331, 0
  br i1 %444, label %516, label %445

445:                                              ; preds = %442
  %446 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %323, i64 0, i32 0, i32 0
  %447 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %284, i64 %282, i32 1, i32 25
  %448 = and i64 %330, 4294967295
  br label %449

449:                                              ; preds = %513, %445
  %450 = phi i64 [ 0, %445 ], [ %514, %513 ]
  %451 = load i32*, i32** %446, align 8
  %452 = getelementptr inbounds i32, i32* %451, i64 %450
  %453 = load i32, i32* %452, align 4
  %454 = zext i32 %453 to i64
  %455 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 44, i32 0, i64 %454, i32 0
  %456 = load %"class.rx::TextureVk"*, %"class.rx::TextureVk"** %455, align 8
  %457 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 44, i32 0, i64 %454, i32 1
  %458 = load %"class.rx::vk::SamplerHelper"*, %"class.rx::vk::SamplerHelper"** %457, align 8
  %459 = getelementptr inbounds %"class.rx::TextureVk", %"class.rx::TextureVk"* %456, i64 0, i32 12
  %460 = load %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"** %459, align 8
  %461 = getelementptr inbounds %"class.rx::vk::SamplerHelper", %"class.rx::vk::SamplerHelper"* %458, i64 0, i32 1, i32 0, i32 0
  %462 = bitcast %struct.VkSampler_T** %461 to i64*
  %463 = load i64, i64* %462, align 8
  %464 = getelementptr inbounds %struct.VkDescriptorImageInfo, %struct.VkDescriptorImageInfo* %443, i64 %450
  %465 = bitcast %struct.VkDescriptorImageInfo* %464 to i64*
  store i64 %463, i64* %465, align 8
  %466 = call i32 @_ZNK2rx2vk11ImageHelper16getCurrentLayoutEv(%"class.rx::vk::ImageHelper"* %460) #15
  %467 = getelementptr inbounds %struct.VkDescriptorImageInfo, %struct.VkDescriptorImageInfo* %443, i64 %450, i32 2
  store i32 %466, i32* %467, align 8
  %468 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 44, i32 0, i64 %454, i32 2
  %469 = load i32, i32* %468, align 8
  %470 = load i8, i8* %447, align 1, !range !2
  %471 = icmp ne i8 %470, 0
  br i1 %192, label %474, label %472

472:                                              ; preds = %449
  %473 = call dereferenceable(8) %"class.rx::vk::ImageView"* @_ZNK2rx9TextureVk29getFetchImageViewAndRecordUseEPNS_9ContextVkEjb(%"class.rx::TextureVk"* %456, %"class.rx::ContextVk"* %1, i32 %469, i1 zeroext %471) #15
  br label %476

474:                                              ; preds = %449
  %475 = call dereferenceable(8) %"class.rx::vk::ImageView"* @_ZNK2rx9TextureVk28getReadImageViewAndRecordUseEPNS_9ContextVkEjb(%"class.rx::TextureVk"* %456, %"class.rx::ContextVk"* %1, i32 %469, i1 zeroext %471) #15
  br label %476

476:                                              ; preds = %474, %472
  %477 = phi %"class.rx::vk::ImageView"* [ %475, %474 ], [ %473, %472 ]
  %478 = bitcast %"class.rx::vk::ImageView"* %477 to i64*
  %479 = load i64, i64* %478, align 8
  %480 = getelementptr inbounds %struct.VkDescriptorImageInfo, %struct.VkDescriptorImageInfo* %443, i64 %450, i32 1
  %481 = bitcast %struct.VkImageView_T** %480 to i64*
  store i64 %479, i64* %481, align 8
  %482 = load %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"** %459, align 8
  %483 = getelementptr inbounds %"class.rx::vk::ImageHelper", %"class.rx::vk::ImageHelper"* %482, i64 0, i32 21
  %484 = load i64, i64* %483, align 8
  %485 = icmp eq i64 %484, 0
  br i1 %485, label %492, label %486

486:                                              ; preds = %476
  %487 = getelementptr inbounds %"class.rx::TextureVk", %"class.rx::TextureVk"* %456, i64 0, i32 13, i32 0
  %488 = load %"class.rx::vk::RefCounted.954"*, %"class.rx::vk::RefCounted.954"** %487, align 8
  %489 = getelementptr inbounds %"class.rx::vk::RefCounted.954", %"class.rx::vk::RefCounted.954"* %488, i64 0, i32 2, i32 1, i32 0, i32 0
  %490 = bitcast %struct.VkSampler_T** %489 to i64*
  %491 = load i64, i64* %490, align 8
  store i64 %491, i64* %465, align 8
  br label %492

492:                                              ; preds = %476, %486
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %238) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %250, i8 -86, i64 24, i1 false)
  call void @_ZN2rx27GlslangGetMappedSamplerNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %10, %"class.std::__1::basic_string"* dereferenceable(24) %285) #15
  %493 = call dereferenceable(112) %"struct.rx::ShaderInterfaceVariableInfo"* @_ZN2rx30ShaderInterfaceVariableInfoMap3getEN2gl10ShaderTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.rx::ShaderInterfaceVariableInfoMap"* %240, i8 zeroext %257, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10) #15
  %494 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %396, i64 %450, i32 0
  store i32 35, i32* %494, align 8
  %495 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %396, i64 %450, i32 1
  store i8* null, i8** %495, align 8
  %496 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %396, i64 %450, i32 2
  %497 = bitcast %struct.VkDescriptorSet_T** %496 to i64*
  store i64 %322, i64* %497, align 8
  %498 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableInfo", %"struct.rx::ShaderInterfaceVariableInfo"* %493, i64 0, i32 1
  %499 = load i32, i32* %498, align 4
  %500 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %396, i64 %450, i32 3
  store i32 %499, i32* %500, align 8
  %501 = trunc i64 %450 to i32
  %502 = add i32 %362, %501
  %503 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %396, i64 %450, i32 4
  store i32 %502, i32* %503, align 4
  %504 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %396, i64 %450, i32 5
  store i32 1, i32* %504, align 8
  %505 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %396, i64 %450, i32 6
  store i32 1, i32* %505, align 4
  %506 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %396, i64 %450, i32 7
  store %struct.VkDescriptorImageInfo* %464, %struct.VkDescriptorImageInfo** %506, align 8
  %507 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %396, i64 %450, i32 8
  %508 = bitcast %struct.VkDescriptorBufferInfo** %507 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %508, i8 0, i64 16, i1 false)
  %509 = load i8, i8* %242, align 1
  %510 = icmp slt i8 %509, 0
  br i1 %510, label %511, label %513

511:                                              ; preds = %492
  %512 = load i8*, i8** %239, align 8
  call void @_ZdlPv(i8* %512) #20
  br label %513

513:                                              ; preds = %492, %511
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %238) #15
  %514 = add nuw nsw i64 %450, 1
  %515 = icmp eq i64 %514, %448
  br i1 %515, label %516, label %449

516:                                              ; preds = %513, %438, %400, %442, %273, %441, %320
  %517 = phi i64 [ 0, %320 ], [ %277, %273 ], [ %322, %441 ], [ %322, %400 ], [ %322, %442 ], [ %322, %438 ], [ %322, %513 ]
  %518 = phi i32 [ 1, %320 ], [ 6, %273 ], [ 1, %441 ], [ 6, %400 ], [ 0, %442 ], [ 6, %438 ], [ 0, %513 ]
  %519 = load i8, i8* %237, align 1
  %520 = icmp slt i8 %519, 0
  br i1 %520, label %521, label %523

521:                                              ; preds = %516
  %522 = load i8*, i8** %223, align 8
  call void @_ZdlPv(i8* %522) #20
  br label %523

523:                                              ; preds = %516, %521
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %222) #15
  switch i32 %518, label %537 [
    i32 0, label %524
    i32 6, label %524
  ]

524:                                              ; preds = %523, %523
  %525 = add i32 %276, 1
  %526 = zext i32 %525 to i64
  %527 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %260, align 8
  %528 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %527, i64 0, i32 40
  %529 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %527, i64 0, i32 40, i32 0, i32 1
  %530 = bitcast %"struct.gl::SamplerBinding"** %529 to i64*
  %531 = load i64, i64* %530, align 8
  %532 = bitcast %"class.std::__1::vector.209"* %528 to i64*
  %533 = load i64, i64* %532, align 8
  %534 = sub i64 %531, %533
  %535 = sdiv exact i64 %534, 40
  %536 = icmp ugt i64 %535, %526
  br i1 %536, label %273, label %537

537:                                              ; preds = %523, %524
  %538 = phi i32 [ %518, %523 ], [ 0, %524 ]
  %539 = load i64, i64* %220, align 8
  %540 = icmp eq i64 %539, 0
  br i1 %540, label %565, label %543

541:                                              ; preds = %561
  %542 = load i8*, i8** %218, align 8
  call void @_ZdlPv(i8* %542) #20
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %218, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %221, i8 0, i64 32, i1 false) #15
  br label %565

543:                                              ; preds = %537, %561
  %544 = phi i64 [ %562, %561 ], [ %539, %537 ]
  %545 = phi i64 [ %563, %561 ], [ 0, %537 ]
  %546 = load i8*, i8** %218, align 8
  %547 = getelementptr inbounds i8, i8* %546, i64 %545
  %548 = load i8, i8* %547, align 1
  %549 = icmp sgt i8 %548, -1
  br i1 %549, label %550, label %561

550:                                              ; preds = %543
  %551 = load %"union.absl::container_internal::map_slot_type.229"*, %"union.absl::container_internal::map_slot_type.229"** %219, align 8
  %552 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %551, i64 %545
  %553 = bitcast %"union.absl::container_internal::map_slot_type.229"* %552 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %554 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %553, i64 0, i32 1, i32 0
  %555 = load i8, i8* %554, align 1
  %556 = icmp slt i8 %555, 0
  br i1 %556, label %557, label %561

557:                                              ; preds = %550
  %558 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %552, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %559 = load i8*, i8** %558, align 8
  call void @_ZdlPv(i8* %559) #20
  %560 = load i64, i64* %220, align 8
  br label %561

561:                                              ; preds = %557, %550, %543
  %562 = phi i64 [ %560, %557 ], [ %544, %550 ], [ %544, %543 ]
  %563 = add i64 %545, 1
  %564 = icmp eq i64 %563, %562
  br i1 %564, label %541, label %543

565:                                              ; preds = %537, %541
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %217) #15
  %566 = icmp eq i32 %538, 0
  br i1 %566, label %567, label %577

567:                                              ; preds = %269, %565
  %568 = phi i64 [ %253, %269 ], [ %517, %565 ]
  %569 = shl i32 1, %255
  %570 = trunc i32 %569 to i8
  %571 = xor i8 %570, -1
  %572 = and i8 %254, %571
  %573 = icmp eq i8 %572, 0
  br i1 %573, label %577, label %574

574:                                              ; preds = %567
  %575 = zext i8 %572 to i32
  %576 = call i32 @llvm.cttz.i32(i32 %575, i1 true) #15, !range !8
  br label %252

577:                                              ; preds = %567, %565, %204
  %578 = phi i32 [ 0, %204 ], [ 0, %567 ], [ 1, %565 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %193) #15
  br label %579

579:                                              ; preds = %577, %51, %179, %184, %3
  %580 = phi i32 [ 0, %3 ], [ %578, %577 ], [ 0, %51 ], [ 0, %179 ], [ 0, %184 ]
  ret i32 %580
}

declare zeroext i1 @_ZNK2gl17ProgramExecutable11hasTexturesEv(%"class.gl::ProgramExecutable"*) local_unnamed_addr #6

declare dereferenceable(8) %"class.rx::vk::ImageView"* @_ZNK2rx9TextureVk29getFetchImageViewAndRecordUseEPNS_9ContextVkEjb(%"class.rx::TextureVk"*, %"class.rx::ContextVk"*, i32, i1 zeroext) local_unnamed_addr #6

declare dereferenceable(8) %"class.rx::vk::ImageView"* @_ZNK2rx9TextureVk28getReadImageViewAndRecordUseEPNS_9ContextVkEjb(%"class.rx::TextureVk"*, %"class.rx::ContextVk"*, i32, i1 zeroext) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx19ProgramExecutableVk20updateDescriptorSetsEPNS_9ContextVkEPNS_2vk4priv22SecondaryCommandBufferE(%"class.rx::ProgramExecutableVk"*, %"class.rx::ContextVk"*, %"class.rx::vk::priv::SecondaryCommandBuffer"*) local_unnamed_addr #3 align 2 {
  %4 = alloca i8, align 1
  br label %5

5:                                                ; preds = %42, %3
  %6 = phi i64 [ %44, %42 ], [ 0, %3 ]
  %7 = phi i32 [ %43, %42 ], [ 4, %3 ]
  %8 = trunc i64 %6 to i32
  switch i32 %8, label %37 [
    i32 4, label %9
    i32 0, label %42
  ]

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 0, i32 1
  %11 = load %"class.gl::State"*, %"class.gl::State"** %10, align 8
  %12 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %11, i64 0, i32 65
  %13 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %12, align 8
  %14 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %13, i64 0, i32 55
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = zext i8 %15 to i32
  %17 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %18 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 8, i32 0
  %19 = getelementptr inbounds %"class.rx::vk::priv::SecondaryCommandBuffer", %"class.rx::vk::priv::SecondaryCommandBuffer"* %2, i64 0, i32 4
  %20 = getelementptr inbounds %"class.rx::vk::priv::SecondaryCommandBuffer", %"class.rx::vk::priv::SecondaryCommandBuffer"* %2, i64 0, i32 2
  %21 = getelementptr inbounds %"class.rx::vk::priv::SecondaryCommandBuffer", %"class.rx::vk::priv::SecondaryCommandBuffer"* %2, i64 0, i32 3
  %22 = getelementptr inbounds %"class.rx::vk::priv::SecondaryCommandBuffer", %"class.rx::vk::priv::SecondaryCommandBuffer"* %2, i64 0, i32 1
  %23 = getelementptr inbounds %"class.rx::vk::priv::SecondaryCommandBuffer", %"class.rx::vk::priv::SecondaryCommandBuffer"* %2, i64 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.rx::vk::priv::SecondaryCommandBuffer", %"class.rx::vk::priv::SecondaryCommandBuffer"* %2, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"struct.rx::vk::priv::CommandHeader"*** %23 to i64*
  %26 = bitcast %"class.std::__1::vector.668"* %22 to i64*
  %27 = bitcast %"struct.rx::vk::priv::CommandHeader"*** %24 to i64*
  %28 = getelementptr inbounds %"class.std::__1::vector.668", %"class.std::__1::vector.668"* %22, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 14
  %30 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 14, i32 0, i32 1
  %31 = bitcast i32** %30 to i64*
  %32 = bitcast %"class.std::__1::vector"* %29 to i64*
  %33 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 13, i32 1
  %34 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 13, i32 0, i32 0, i64 0
  %35 = bitcast i32* %34 to i8*
  %36 = zext i32 %7 to i64
  br label %45

37:                                               ; preds = %5
  %38 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 1, i32 0, i32 0, i64 %6
  %39 = load %struct.VkDescriptorSet_T*, %struct.VkDescriptorSet_T** %38, align 8
  %40 = icmp eq %struct.VkDescriptorSet_T* %39, null
  %41 = select i1 %40, i32 %7, i32 %8
  br label %42

42:                                               ; preds = %5, %37
  %43 = phi i32 [ %41, %37 ], [ %7, %5 ]
  %44 = add nuw nsw i64 %6, 1
  br label %5

45:                                               ; preds = %597, %9
  %46 = phi i64 [ %598, %597 ], [ 0, %9 ]
  %47 = trunc i64 %46 to i32
  switch i32 %47, label %48 [
    i32 4, label %599
    i32 0, label %597
  ]

48:                                               ; preds = %45
  %49 = icmp ugt i64 %46, %36
  br i1 %49, label %597, label %50

50:                                               ; preds = %48
  %51 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 1, i32 0, i32 0, i64 %46
  %52 = load %struct.VkDescriptorSet_T*, %struct.VkDescriptorSet_T** %51, align 8
  %53 = ptrtoint %struct.VkDescriptorSet_T* %52 to i64
  %54 = icmp eq %struct.VkDescriptorSet_T* %52, null
  br i1 %54, label %55, label %80

55:                                               ; preds = %50
  %56 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %17, align 8
  %57 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %56, i64 0, i32 7, i32 33, i32 4
  %58 = load i8, i8* %57, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %597, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 2, i32 0, i32 0, i64 %46
  %62 = load %struct.VkDescriptorSet_T*, %struct.VkDescriptorSet_T** %61, align 8
  %63 = icmp eq %struct.VkDescriptorSet_T* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %60
  %65 = ptrtoint %struct.VkDescriptorSet_T* %62 to i64
  br label %80

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 9, i32 0, i32 0, i64 %46, i32 0
  %68 = load %"class.rx::vk::RefCounted.863"*, %"class.rx::vk::RefCounted.863"** %67, align 8
  %69 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 11, i32 0, i32 0, i64 %46
  %70 = getelementptr inbounds %"class.rx::vk::RefCounted.863", %"class.rx::vk::RefCounted.863"* %68, i64 0, i32 1, i32 0, i32 0
  %71 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 10, i32 0, i32 0, i64 %46
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #15
  store i8 -86, i8* %4, align 1
  %72 = call i32 @_ZN2rx2vk21DynamicDescriptorPool22allocateSetsAndGetInfoEPNS_9ContextVkEPKP23VkDescriptorSetLayout_TjPNS0_14BindingPointerINS0_20DescriptorPoolHelperEEEPP17VkDescriptorSet_TPb(%"class.rx::vk::DynamicDescriptorPool"* %69, %"class.rx::ContextVk"* %1, %struct.VkDescriptorSetLayout_T** %70, i32 1, %"class.rx::vk::BindingPointer.866"* %71, %struct.VkDescriptorSet_T** %61, i8* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #15
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %599, label %74

74:                                               ; preds = %66
  %75 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i64 %46
  %76 = load i32, i32* %75, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %75, align 4
  %78 = bitcast %struct.VkDescriptorSet_T** %61 to i64*
  %79 = load i64, i64* %78, align 8
  br label %80

80:                                               ; preds = %74, %64, %50
  %81 = phi i64 [ %53, %50 ], [ %65, %64 ], [ %79, %74 ]
  %82 = icmp eq i64 %46, 1
  br i1 %82, label %83, label %284

83:                                               ; preds = %80
  %84 = load %"class.rx::vk::RefCounted.859"*, %"class.rx::vk::RefCounted.859"** %18, align 8
  %85 = getelementptr inbounds %"class.rx::vk::RefCounted.859", %"class.rx::vk::RefCounted.859"* %84, i64 0, i32 1
  %86 = load i64, i64* %33, align 8
  %87 = trunc i64 %86 to i32
  %88 = shl i64 %86, 2
  %89 = and i64 %88, 17179869180
  %90 = add nuw nsw i64 %89, 36
  %91 = add nuw nsw i64 %89, 40
  %92 = load i64, i64* %19, align 8
  %93 = icmp ult i64 %92, %91
  br i1 %93, label %94, label %258

94:                                               ; preds = %83
  %95 = icmp ult i64 %91, 1365
  br i1 %95, label %96, label %176

96:                                               ; preds = %94
  %97 = load %"class.angle::PoolAllocator"*, %"class.angle::PoolAllocator"** %20, align 8
  %98 = getelementptr inbounds %"class.angle::PoolAllocator", %"class.angle::PoolAllocator"* %97, i64 0, i32 2
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds %"class.angle::PoolAllocator", %"class.angle::PoolAllocator"* %97, i64 0, i32 4
  %101 = load i64, i64* %100, align 8
  %102 = sub i64 %99, %101
  %103 = icmp ult i64 %102, 1364
  br i1 %103, label %110, label %104

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.angle::PoolAllocator", %"class.angle::PoolAllocator"* %97, i64 0, i32 6
  %106 = bitcast %"struct.angle::PoolAllocator::Header"** %105 to i8**
  %107 = load i8*, i8** %106, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 %101
  %109 = add i64 %101, 1364
  store i64 %109, i64* %100, align 8
  br label %112

110:                                              ; preds = %96
  %111 = call i8* @_ZN5angle13PoolAllocator15allocateNewPageEmm(%"class.angle::PoolAllocator"* %97, i64 1364, i64 1364) #15
  br label %112

112:                                              ; preds = %110, %104
  %113 = phi i8* [ %108, %104 ], [ %111, %110 ]
  store i8* %113, i8** %21, align 8
  store i64 1364, i64* %19, align 8
  %114 = ptrtoint i8* %113 to i64
  %115 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %23, align 8
  %116 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %24, align 8
  %117 = icmp ult %"struct.rx::vk::priv::CommandHeader"** %115, %116
  %118 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %116 to i64
  br i1 %117, label %119, label %123

119:                                              ; preds = %112
  %120 = bitcast %"struct.rx::vk::priv::CommandHeader"** %115 to i64*
  store i64 %114, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %115, i64 1
  %122 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %121 to i64
  store i64 %122, i64* %25, align 8
  br label %258

123:                                              ; preds = %112
  %124 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %115 to i64
  %125 = load i64, i64* %26, align 8
  %126 = sub i64 %124, %125
  %127 = ashr exact i64 %126, 3
  %128 = add nsw i64 %127, 1
  %129 = icmp ugt i64 %128, 2305843009213693951
  br i1 %129, label %130, label %132

130:                                              ; preds = %123
  %131 = bitcast %"class.std::__1::vector.668"* %22 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %131) #21
  unreachable

132:                                              ; preds = %123
  %133 = sub i64 %118, %125
  %134 = ashr exact i64 %133, 3
  %135 = icmp ult i64 %134, 1152921504606846975
  br i1 %135, label %136, label %144

136:                                              ; preds = %132
  %137 = ashr exact i64 %133, 2
  %138 = icmp ult i64 %137, %128
  %139 = select i1 %138, i64 %128, i64 %137
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %149, label %141

141:                                              ; preds = %136
  %142 = icmp ugt i64 %139, 2305843009213693951
  br i1 %142, label %143, label %144

143:                                              ; preds = %141
  call void @abort() #21
  unreachable

144:                                              ; preds = %141, %132
  %145 = phi i64 [ %139, %141 ], [ 2305843009213693951, %132 ]
  %146 = shl i64 %145, 3
  %147 = call i8* @_Znwm(i64 %146) #20
  %148 = bitcast i8* %147 to %"struct.rx::vk::priv::CommandHeader"**
  br label %149

149:                                              ; preds = %144, %136
  %150 = phi i64 [ %145, %144 ], [ 0, %136 ]
  %151 = phi %"struct.rx::vk::priv::CommandHeader"** [ %148, %144 ], [ null, %136 ]
  %152 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %151, i64 %127
  %153 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %151, i64 %150
  %154 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %153 to i64
  %155 = bitcast %"struct.rx::vk::priv::CommandHeader"** %152 to i64*
  store i64 %114, i64* %155, align 8
  %156 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %152, i64 1
  %157 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %156 to i64
  %158 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %28, align 8
  %159 = load i64, i64* %25, align 8
  %160 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %158 to i64
  %161 = sub i64 %159, %160
  %162 = ashr exact i64 %161, 3
  %163 = sub nsw i64 0, %162
  %164 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %152, i64 %163
  %165 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %164 to i64
  %166 = icmp sgt i64 %161, 0
  br i1 %166, label %167, label %171

167:                                              ; preds = %149
  %168 = bitcast %"struct.rx::vk::priv::CommandHeader"** %164 to i8*
  %169 = bitcast %"struct.rx::vk::priv::CommandHeader"** %158 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %168, i8* align 8 %169, i64 %161, i1 false) #15
  %170 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %28, align 8
  br label %171

171:                                              ; preds = %167, %149
  %172 = phi %"struct.rx::vk::priv::CommandHeader"** [ %158, %149 ], [ %170, %167 ]
  store i64 %165, i64* %26, align 8
  store i64 %157, i64* %25, align 8
  store i64 %154, i64* %27, align 8
  %173 = icmp eq %"struct.rx::vk::priv::CommandHeader"** %172, null
  br i1 %173, label %258, label %174

174:                                              ; preds = %171
  %175 = bitcast %"struct.rx::vk::priv::CommandHeader"** %172 to i8*
  call void @_ZdlPv(i8* %175) #20
  br label %258

176:                                              ; preds = %94
  %177 = add nuw nsw i64 %89, 43
  %178 = and i64 %177, 34359738364
  %179 = load %"class.angle::PoolAllocator"*, %"class.angle::PoolAllocator"** %20, align 8
  %180 = getelementptr inbounds %"class.angle::PoolAllocator", %"class.angle::PoolAllocator"* %179, i64 0, i32 2
  %181 = load i64, i64* %180, align 8
  %182 = getelementptr inbounds %"class.angle::PoolAllocator", %"class.angle::PoolAllocator"* %179, i64 0, i32 4
  %183 = load i64, i64* %182, align 8
  %184 = sub i64 %181, %183
  %185 = icmp ult i64 %184, %178
  br i1 %185, label %192, label %186

186:                                              ; preds = %176
  %187 = getelementptr inbounds %"class.angle::PoolAllocator", %"class.angle::PoolAllocator"* %179, i64 0, i32 6
  %188 = bitcast %"struct.angle::PoolAllocator::Header"** %187 to i8**
  %189 = load i8*, i8** %188, align 8
  %190 = getelementptr inbounds i8, i8* %189, i64 %183
  %191 = add i64 %183, %178
  store i64 %191, i64* %182, align 8
  br label %194

192:                                              ; preds = %176
  %193 = call i8* @_ZN5angle13PoolAllocator15allocateNewPageEmm(%"class.angle::PoolAllocator"* %179, i64 %178, i64 %178) #15
  br label %194

194:                                              ; preds = %192, %186
  %195 = phi i8* [ %190, %186 ], [ %193, %192 ]
  store i8* %195, i8** %21, align 8
  store i64 %178, i64* %19, align 8
  %196 = ptrtoint i8* %195 to i64
  %197 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %23, align 8
  %198 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %24, align 8
  %199 = icmp ult %"struct.rx::vk::priv::CommandHeader"** %197, %198
  %200 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %198 to i64
  br i1 %199, label %201, label %205

201:                                              ; preds = %194
  %202 = bitcast %"struct.rx::vk::priv::CommandHeader"** %197 to i64*
  store i64 %196, i64* %202, align 8
  %203 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %197, i64 1
  %204 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %203 to i64
  store i64 %204, i64* %25, align 8
  br label %258

205:                                              ; preds = %194
  %206 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %197 to i64
  %207 = load i64, i64* %26, align 8
  %208 = sub i64 %206, %207
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = icmp ugt i64 %210, 2305843009213693951
  br i1 %211, label %212, label %214

212:                                              ; preds = %205
  %213 = bitcast %"class.std::__1::vector.668"* %22 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %213) #21
  unreachable

214:                                              ; preds = %205
  %215 = sub i64 %200, %207
  %216 = ashr exact i64 %215, 3
  %217 = icmp ult i64 %216, 1152921504606846975
  br i1 %217, label %218, label %226

218:                                              ; preds = %214
  %219 = ashr exact i64 %215, 2
  %220 = icmp ult i64 %219, %210
  %221 = select i1 %220, i64 %210, i64 %219
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %231, label %223

223:                                              ; preds = %218
  %224 = icmp ugt i64 %221, 2305843009213693951
  br i1 %224, label %225, label %226

225:                                              ; preds = %223
  call void @abort() #21
  unreachable

226:                                              ; preds = %223, %214
  %227 = phi i64 [ %221, %223 ], [ 2305843009213693951, %214 ]
  %228 = shl i64 %227, 3
  %229 = call i8* @_Znwm(i64 %228) #20
  %230 = bitcast i8* %229 to %"struct.rx::vk::priv::CommandHeader"**
  br label %231

231:                                              ; preds = %226, %218
  %232 = phi i64 [ %227, %226 ], [ 0, %218 ]
  %233 = phi %"struct.rx::vk::priv::CommandHeader"** [ %230, %226 ], [ null, %218 ]
  %234 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %233, i64 %209
  %235 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %233, i64 %232
  %236 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %235 to i64
  %237 = bitcast %"struct.rx::vk::priv::CommandHeader"** %234 to i64*
  store i64 %196, i64* %237, align 8
  %238 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %234, i64 1
  %239 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %238 to i64
  %240 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %28, align 8
  %241 = load i64, i64* %25, align 8
  %242 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %240 to i64
  %243 = sub i64 %241, %242
  %244 = ashr exact i64 %243, 3
  %245 = sub nsw i64 0, %244
  %246 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %234, i64 %245
  %247 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %246 to i64
  %248 = icmp sgt i64 %243, 0
  br i1 %248, label %249, label %253

249:                                              ; preds = %231
  %250 = bitcast %"struct.rx::vk::priv::CommandHeader"** %246 to i8*
  %251 = bitcast %"struct.rx::vk::priv::CommandHeader"** %240 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %250, i8* align 8 %251, i64 %243, i1 false) #15
  %252 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %28, align 8
  br label %253

253:                                              ; preds = %249, %231
  %254 = phi %"struct.rx::vk::priv::CommandHeader"** [ %240, %231 ], [ %252, %249 ]
  store i64 %247, i64* %26, align 8
  store i64 %239, i64* %25, align 8
  store i64 %236, i64* %27, align 8
  %255 = icmp eq %"struct.rx::vk::priv::CommandHeader"** %254, null
  br i1 %255, label %258, label %256

256:                                              ; preds = %253
  %257 = bitcast %"struct.rx::vk::priv::CommandHeader"** %254 to i8*
  call void @_ZdlPv(i8* %257) #20
  br label %258

258:                                              ; preds = %83, %119, %171, %174, %201, %253, %256
  %259 = load i8*, i8** %21, align 8
  %260 = getelementptr inbounds i8, i8* %259, i64 28
  %261 = load i64, i64* %19, align 8
  %262 = sub i64 %261, %90
  store i64 %262, i64* %19, align 8
  %263 = bitcast i8* %259 to i16*
  store i16 5, i16* %263, align 2
  %264 = trunc i64 %90 to i16
  %265 = getelementptr inbounds i8, i8* %259, i64 2
  %266 = bitcast i8* %265 to i16*
  store i16 %264, i16* %266, align 2
  %267 = load i8*, i8** %21, align 8
  %268 = getelementptr inbounds i8, i8* %267, i64 %90
  store i8* %268, i8** %21, align 8
  %269 = bitcast i8* %268 to i16*
  store i16 0, i16* %269, align 2
  %270 = getelementptr inbounds i8, i8* %259, i64 4
  %271 = bitcast %"class.rx::vk::PipelineLayout"* %85 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = bitcast i8* %270 to i64*
  store i64 %272, i64* %273, align 8
  %274 = getelementptr inbounds i8, i8* %259, i64 12
  %275 = bitcast i8* %274 to i32*
  store i32 %16, i32* %275, align 8
  %276 = getelementptr inbounds i8, i8* %259, i64 16
  %277 = bitcast i8* %276 to i32*
  store i32 1, i32* %277, align 4
  %278 = getelementptr inbounds i8, i8* %259, i64 20
  %279 = bitcast i8* %278 to i32*
  store i32 1, i32* %279, align 8
  %280 = getelementptr inbounds i8, i8* %259, i64 24
  %281 = bitcast i8* %280 to i32*
  store i32 %87, i32* %281, align 4
  %282 = bitcast i8* %260 to i64*
  store i64 %81, i64* %282, align 1
  %283 = getelementptr inbounds i8, i8* %259, i64 36
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %283, i8* align 4 %35, i64 %89, i1 false) #15
  br label %597

284:                                              ; preds = %80
  %285 = icmp eq i64 %46, 3
  %286 = load %"class.rx::vk::RefCounted.859"*, %"class.rx::vk::RefCounted.859"** %18, align 8
  %287 = getelementptr inbounds %"class.rx::vk::RefCounted.859", %"class.rx::vk::RefCounted.859"* %286, i64 0, i32 1
  br i1 %285, label %288, label %490

288:                                              ; preds = %284
  %289 = load i64, i64* %31, align 8
  %290 = load i64, i64* %32, align 8
  %291 = sub i64 %289, %290
  %292 = lshr exact i64 %291, 2
  %293 = trunc i64 %292 to i32
  %294 = inttoptr i64 %290 to i8*
  %295 = and i64 %291, 17179869180
  %296 = add nuw nsw i64 %295, 36
  %297 = add nuw nsw i64 %295, 40
  %298 = load i64, i64* %19, align 8
  %299 = icmp ult i64 %298, %297
  br i1 %299, label %300, label %464

300:                                              ; preds = %288
  %301 = icmp ult i64 %297, 1365
  br i1 %301, label %302, label %382

302:                                              ; preds = %300
  %303 = load %"class.angle::PoolAllocator"*, %"class.angle::PoolAllocator"** %20, align 8
  %304 = getelementptr inbounds %"class.angle::PoolAllocator", %"class.angle::PoolAllocator"* %303, i64 0, i32 2
  %305 = load i64, i64* %304, align 8
  %306 = getelementptr inbounds %"class.angle::PoolAllocator", %"class.angle::PoolAllocator"* %303, i64 0, i32 4
  %307 = load i64, i64* %306, align 8
  %308 = sub i64 %305, %307
  %309 = icmp ult i64 %308, 1364
  br i1 %309, label %316, label %310

310:                                              ; preds = %302
  %311 = getelementptr inbounds %"class.angle::PoolAllocator", %"class.angle::PoolAllocator"* %303, i64 0, i32 6
  %312 = bitcast %"struct.angle::PoolAllocator::Header"** %311 to i8**
  %313 = load i8*, i8** %312, align 8
  %314 = getelementptr inbounds i8, i8* %313, i64 %307
  %315 = add i64 %307, 1364
  store i64 %315, i64* %306, align 8
  br label %318

316:                                              ; preds = %302
  %317 = call i8* @_ZN5angle13PoolAllocator15allocateNewPageEmm(%"class.angle::PoolAllocator"* %303, i64 1364, i64 1364) #15
  br label %318

318:                                              ; preds = %316, %310
  %319 = phi i8* [ %314, %310 ], [ %317, %316 ]
  store i8* %319, i8** %21, align 8
  store i64 1364, i64* %19, align 8
  %320 = ptrtoint i8* %319 to i64
  %321 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %23, align 8
  %322 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %24, align 8
  %323 = icmp ult %"struct.rx::vk::priv::CommandHeader"** %321, %322
  %324 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %322 to i64
  br i1 %323, label %325, label %329

325:                                              ; preds = %318
  %326 = bitcast %"struct.rx::vk::priv::CommandHeader"** %321 to i64*
  store i64 %320, i64* %326, align 8
  %327 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %321, i64 1
  %328 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %327 to i64
  store i64 %328, i64* %25, align 8
  br label %464

329:                                              ; preds = %318
  %330 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %321 to i64
  %331 = load i64, i64* %26, align 8
  %332 = sub i64 %330, %331
  %333 = ashr exact i64 %332, 3
  %334 = add nsw i64 %333, 1
  %335 = icmp ugt i64 %334, 2305843009213693951
  br i1 %335, label %336, label %338

336:                                              ; preds = %329
  %337 = bitcast %"class.std::__1::vector.668"* %22 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %337) #21
  unreachable

338:                                              ; preds = %329
  %339 = sub i64 %324, %331
  %340 = ashr exact i64 %339, 3
  %341 = icmp ult i64 %340, 1152921504606846975
  br i1 %341, label %342, label %350

342:                                              ; preds = %338
  %343 = ashr exact i64 %339, 2
  %344 = icmp ult i64 %343, %334
  %345 = select i1 %344, i64 %334, i64 %343
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %355, label %347

347:                                              ; preds = %342
  %348 = icmp ugt i64 %345, 2305843009213693951
  br i1 %348, label %349, label %350

349:                                              ; preds = %347
  call void @abort() #21
  unreachable

350:                                              ; preds = %347, %338
  %351 = phi i64 [ %345, %347 ], [ 2305843009213693951, %338 ]
  %352 = shl i64 %351, 3
  %353 = call i8* @_Znwm(i64 %352) #20
  %354 = bitcast i8* %353 to %"struct.rx::vk::priv::CommandHeader"**
  br label %355

355:                                              ; preds = %350, %342
  %356 = phi i64 [ %351, %350 ], [ 0, %342 ]
  %357 = phi %"struct.rx::vk::priv::CommandHeader"** [ %354, %350 ], [ null, %342 ]
  %358 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %357, i64 %333
  %359 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %357, i64 %356
  %360 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %359 to i64
  %361 = bitcast %"struct.rx::vk::priv::CommandHeader"** %358 to i64*
  store i64 %320, i64* %361, align 8
  %362 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %358, i64 1
  %363 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %362 to i64
  %364 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %28, align 8
  %365 = load i64, i64* %25, align 8
  %366 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %364 to i64
  %367 = sub i64 %365, %366
  %368 = ashr exact i64 %367, 3
  %369 = sub nsw i64 0, %368
  %370 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %358, i64 %369
  %371 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %370 to i64
  %372 = icmp sgt i64 %367, 0
  br i1 %372, label %373, label %377

373:                                              ; preds = %355
  %374 = bitcast %"struct.rx::vk::priv::CommandHeader"** %370 to i8*
  %375 = bitcast %"struct.rx::vk::priv::CommandHeader"** %364 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %374, i8* align 8 %375, i64 %367, i1 false) #15
  %376 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %28, align 8
  br label %377

377:                                              ; preds = %373, %355
  %378 = phi %"struct.rx::vk::priv::CommandHeader"** [ %364, %355 ], [ %376, %373 ]
  store i64 %371, i64* %26, align 8
  store i64 %363, i64* %25, align 8
  store i64 %360, i64* %27, align 8
  %379 = icmp eq %"struct.rx::vk::priv::CommandHeader"** %378, null
  br i1 %379, label %464, label %380

380:                                              ; preds = %377
  %381 = bitcast %"struct.rx::vk::priv::CommandHeader"** %378 to i8*
  call void @_ZdlPv(i8* %381) #20
  br label %464

382:                                              ; preds = %300
  %383 = add nuw nsw i64 %295, 43
  %384 = and i64 %383, 34359738364
  %385 = load %"class.angle::PoolAllocator"*, %"class.angle::PoolAllocator"** %20, align 8
  %386 = getelementptr inbounds %"class.angle::PoolAllocator", %"class.angle::PoolAllocator"* %385, i64 0, i32 2
  %387 = load i64, i64* %386, align 8
  %388 = getelementptr inbounds %"class.angle::PoolAllocator", %"class.angle::PoolAllocator"* %385, i64 0, i32 4
  %389 = load i64, i64* %388, align 8
  %390 = sub i64 %387, %389
  %391 = icmp ult i64 %390, %384
  br i1 %391, label %398, label %392

392:                                              ; preds = %382
  %393 = getelementptr inbounds %"class.angle::PoolAllocator", %"class.angle::PoolAllocator"* %385, i64 0, i32 6
  %394 = bitcast %"struct.angle::PoolAllocator::Header"** %393 to i8**
  %395 = load i8*, i8** %394, align 8
  %396 = getelementptr inbounds i8, i8* %395, i64 %389
  %397 = add i64 %389, %384
  store i64 %397, i64* %388, align 8
  br label %400

398:                                              ; preds = %382
  %399 = call i8* @_ZN5angle13PoolAllocator15allocateNewPageEmm(%"class.angle::PoolAllocator"* %385, i64 %384, i64 %384) #15
  br label %400

400:                                              ; preds = %398, %392
  %401 = phi i8* [ %396, %392 ], [ %399, %398 ]
  store i8* %401, i8** %21, align 8
  store i64 %384, i64* %19, align 8
  %402 = ptrtoint i8* %401 to i64
  %403 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %23, align 8
  %404 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %24, align 8
  %405 = icmp ult %"struct.rx::vk::priv::CommandHeader"** %403, %404
  %406 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %404 to i64
  br i1 %405, label %407, label %411

407:                                              ; preds = %400
  %408 = bitcast %"struct.rx::vk::priv::CommandHeader"** %403 to i64*
  store i64 %402, i64* %408, align 8
  %409 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %403, i64 1
  %410 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %409 to i64
  store i64 %410, i64* %25, align 8
  br label %464

411:                                              ; preds = %400
  %412 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %403 to i64
  %413 = load i64, i64* %26, align 8
  %414 = sub i64 %412, %413
  %415 = ashr exact i64 %414, 3
  %416 = add nsw i64 %415, 1
  %417 = icmp ugt i64 %416, 2305843009213693951
  br i1 %417, label %418, label %420

418:                                              ; preds = %411
  %419 = bitcast %"class.std::__1::vector.668"* %22 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %419) #21
  unreachable

420:                                              ; preds = %411
  %421 = sub i64 %406, %413
  %422 = ashr exact i64 %421, 3
  %423 = icmp ult i64 %422, 1152921504606846975
  br i1 %423, label %424, label %432

424:                                              ; preds = %420
  %425 = ashr exact i64 %421, 2
  %426 = icmp ult i64 %425, %416
  %427 = select i1 %426, i64 %416, i64 %425
  %428 = icmp eq i64 %427, 0
  br i1 %428, label %437, label %429

429:                                              ; preds = %424
  %430 = icmp ugt i64 %427, 2305843009213693951
  br i1 %430, label %431, label %432

431:                                              ; preds = %429
  call void @abort() #21
  unreachable

432:                                              ; preds = %429, %420
  %433 = phi i64 [ %427, %429 ], [ 2305843009213693951, %420 ]
  %434 = shl i64 %433, 3
  %435 = call i8* @_Znwm(i64 %434) #20
  %436 = bitcast i8* %435 to %"struct.rx::vk::priv::CommandHeader"**
  br label %437

437:                                              ; preds = %432, %424
  %438 = phi i64 [ %433, %432 ], [ 0, %424 ]
  %439 = phi %"struct.rx::vk::priv::CommandHeader"** [ %436, %432 ], [ null, %424 ]
  %440 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %439, i64 %415
  %441 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %439, i64 %438
  %442 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %441 to i64
  %443 = bitcast %"struct.rx::vk::priv::CommandHeader"** %440 to i64*
  store i64 %402, i64* %443, align 8
  %444 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %440, i64 1
  %445 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %444 to i64
  %446 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %28, align 8
  %447 = load i64, i64* %25, align 8
  %448 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %446 to i64
  %449 = sub i64 %447, %448
  %450 = ashr exact i64 %449, 3
  %451 = sub nsw i64 0, %450
  %452 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %440, i64 %451
  %453 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %452 to i64
  %454 = icmp sgt i64 %449, 0
  br i1 %454, label %455, label %459

455:                                              ; preds = %437
  %456 = bitcast %"struct.rx::vk::priv::CommandHeader"** %452 to i8*
  %457 = bitcast %"struct.rx::vk::priv::CommandHeader"** %446 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %456, i8* align 8 %457, i64 %449, i1 false) #15
  %458 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %28, align 8
  br label %459

459:                                              ; preds = %455, %437
  %460 = phi %"struct.rx::vk::priv::CommandHeader"** [ %446, %437 ], [ %458, %455 ]
  store i64 %453, i64* %26, align 8
  store i64 %445, i64* %25, align 8
  store i64 %442, i64* %27, align 8
  %461 = icmp eq %"struct.rx::vk::priv::CommandHeader"** %460, null
  br i1 %461, label %464, label %462

462:                                              ; preds = %459
  %463 = bitcast %"struct.rx::vk::priv::CommandHeader"** %460 to i8*
  call void @_ZdlPv(i8* %463) #20
  br label %464

464:                                              ; preds = %288, %325, %377, %380, %407, %459, %462
  %465 = load i8*, i8** %21, align 8
  %466 = getelementptr inbounds i8, i8* %465, i64 28
  %467 = load i64, i64* %19, align 8
  %468 = sub i64 %467, %296
  store i64 %468, i64* %19, align 8
  %469 = bitcast i8* %465 to i16*
  store i16 5, i16* %469, align 2
  %470 = trunc i64 %296 to i16
  %471 = getelementptr inbounds i8, i8* %465, i64 2
  %472 = bitcast i8* %471 to i16*
  store i16 %470, i16* %472, align 2
  %473 = load i8*, i8** %21, align 8
  %474 = getelementptr inbounds i8, i8* %473, i64 %296
  store i8* %474, i8** %21, align 8
  %475 = bitcast i8* %474 to i16*
  store i16 0, i16* %475, align 2
  %476 = getelementptr inbounds i8, i8* %465, i64 4
  %477 = bitcast %"class.rx::vk::PipelineLayout"* %287 to i64*
  %478 = load i64, i64* %477, align 8
  %479 = bitcast i8* %476 to i64*
  store i64 %478, i64* %479, align 8
  %480 = getelementptr inbounds i8, i8* %465, i64 12
  %481 = bitcast i8* %480 to i32*
  store i32 %16, i32* %481, align 8
  %482 = getelementptr inbounds i8, i8* %465, i64 16
  %483 = bitcast i8* %482 to i32*
  store i32 3, i32* %483, align 4
  %484 = getelementptr inbounds i8, i8* %465, i64 20
  %485 = bitcast i8* %484 to i32*
  store i32 1, i32* %485, align 8
  %486 = getelementptr inbounds i8, i8* %465, i64 24
  %487 = bitcast i8* %486 to i32*
  store i32 %293, i32* %487, align 4
  %488 = bitcast i8* %466 to i64*
  store i64 %81, i64* %488, align 1
  %489 = getelementptr inbounds i8, i8* %465, i64 36
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %489, i8* align 4 %294, i64 %295, i1 false) #15
  br label %597

490:                                              ; preds = %284
  %491 = load i64, i64* %19, align 8
  %492 = icmp ult i64 %491, 40
  br i1 %492, label %493, label %573

493:                                              ; preds = %490
  %494 = load %"class.angle::PoolAllocator"*, %"class.angle::PoolAllocator"** %20, align 8
  %495 = getelementptr inbounds %"class.angle::PoolAllocator", %"class.angle::PoolAllocator"* %494, i64 0, i32 2
  %496 = load i64, i64* %495, align 8
  %497 = getelementptr inbounds %"class.angle::PoolAllocator", %"class.angle::PoolAllocator"* %494, i64 0, i32 4
  %498 = load i64, i64* %497, align 8
  %499 = sub i64 %496, %498
  %500 = icmp ult i64 %499, 1364
  br i1 %500, label %507, label %501

501:                                              ; preds = %493
  %502 = getelementptr inbounds %"class.angle::PoolAllocator", %"class.angle::PoolAllocator"* %494, i64 0, i32 6
  %503 = bitcast %"struct.angle::PoolAllocator::Header"** %502 to i8**
  %504 = load i8*, i8** %503, align 8
  %505 = getelementptr inbounds i8, i8* %504, i64 %498
  %506 = add i64 %498, 1364
  store i64 %506, i64* %497, align 8
  br label %509

507:                                              ; preds = %493
  %508 = call i8* @_ZN5angle13PoolAllocator15allocateNewPageEmm(%"class.angle::PoolAllocator"* %494, i64 1364, i64 1364) #15
  br label %509

509:                                              ; preds = %507, %501
  %510 = phi i8* [ %505, %501 ], [ %508, %507 ]
  store i8* %510, i8** %21, align 8
  store i64 1364, i64* %19, align 8
  %511 = ptrtoint i8* %510 to i64
  %512 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %23, align 8
  %513 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %24, align 8
  %514 = icmp ult %"struct.rx::vk::priv::CommandHeader"** %512, %513
  %515 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %513 to i64
  br i1 %514, label %516, label %520

516:                                              ; preds = %509
  %517 = bitcast %"struct.rx::vk::priv::CommandHeader"** %512 to i64*
  store i64 %511, i64* %517, align 8
  %518 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %512, i64 1
  %519 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %518 to i64
  store i64 %519, i64* %25, align 8
  br label %573

520:                                              ; preds = %509
  %521 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %512 to i64
  %522 = load i64, i64* %26, align 8
  %523 = sub i64 %521, %522
  %524 = ashr exact i64 %523, 3
  %525 = add nsw i64 %524, 1
  %526 = icmp ugt i64 %525, 2305843009213693951
  br i1 %526, label %527, label %529

527:                                              ; preds = %520
  %528 = bitcast %"class.std::__1::vector.668"* %22 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %528) #21
  unreachable

529:                                              ; preds = %520
  %530 = sub i64 %515, %522
  %531 = ashr exact i64 %530, 3
  %532 = icmp ult i64 %531, 1152921504606846975
  br i1 %532, label %533, label %541

533:                                              ; preds = %529
  %534 = ashr exact i64 %530, 2
  %535 = icmp ult i64 %534, %525
  %536 = select i1 %535, i64 %525, i64 %534
  %537 = icmp eq i64 %536, 0
  br i1 %537, label %546, label %538

538:                                              ; preds = %533
  %539 = icmp ugt i64 %536, 2305843009213693951
  br i1 %539, label %540, label %541

540:                                              ; preds = %538
  call void @abort() #21
  unreachable

541:                                              ; preds = %538, %529
  %542 = phi i64 [ %536, %538 ], [ 2305843009213693951, %529 ]
  %543 = shl i64 %542, 3
  %544 = call i8* @_Znwm(i64 %543) #20
  %545 = bitcast i8* %544 to %"struct.rx::vk::priv::CommandHeader"**
  br label %546

546:                                              ; preds = %541, %533
  %547 = phi i64 [ %542, %541 ], [ 0, %533 ]
  %548 = phi %"struct.rx::vk::priv::CommandHeader"** [ %545, %541 ], [ null, %533 ]
  %549 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %548, i64 %524
  %550 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %548, i64 %547
  %551 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %550 to i64
  %552 = bitcast %"struct.rx::vk::priv::CommandHeader"** %549 to i64*
  store i64 %511, i64* %552, align 8
  %553 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %549, i64 1
  %554 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %553 to i64
  %555 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %28, align 8
  %556 = load i64, i64* %25, align 8
  %557 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %555 to i64
  %558 = sub i64 %556, %557
  %559 = ashr exact i64 %558, 3
  %560 = sub nsw i64 0, %559
  %561 = getelementptr inbounds %"struct.rx::vk::priv::CommandHeader"*, %"struct.rx::vk::priv::CommandHeader"** %549, i64 %560
  %562 = ptrtoint %"struct.rx::vk::priv::CommandHeader"** %561 to i64
  %563 = icmp sgt i64 %558, 0
  br i1 %563, label %564, label %568

564:                                              ; preds = %546
  %565 = bitcast %"struct.rx::vk::priv::CommandHeader"** %561 to i8*
  %566 = bitcast %"struct.rx::vk::priv::CommandHeader"** %555 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %565, i8* align 8 %566, i64 %558, i1 false) #15
  %567 = load %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"*** %28, align 8
  br label %568

568:                                              ; preds = %564, %546
  %569 = phi %"struct.rx::vk::priv::CommandHeader"** [ %555, %546 ], [ %567, %564 ]
  store i64 %562, i64* %26, align 8
  store i64 %554, i64* %25, align 8
  store i64 %551, i64* %27, align 8
  %570 = icmp eq %"struct.rx::vk::priv::CommandHeader"** %569, null
  br i1 %570, label %573, label %571

571:                                              ; preds = %568
  %572 = bitcast %"struct.rx::vk::priv::CommandHeader"** %569 to i8*
  call void @_ZdlPv(i8* %572) #20
  br label %573

573:                                              ; preds = %490, %516, %568, %571
  %574 = load i8*, i8** %21, align 8
  %575 = getelementptr inbounds i8, i8* %574, i64 28
  %576 = load i64, i64* %19, align 8
  %577 = add i64 %576, -36
  store i64 %577, i64* %19, align 8
  %578 = bitcast i8* %574 to i16*
  store i16 5, i16* %578, align 2
  %579 = getelementptr inbounds i8, i8* %574, i64 2
  %580 = bitcast i8* %579 to i16*
  store i16 36, i16* %580, align 2
  %581 = load i8*, i8** %21, align 8
  %582 = getelementptr inbounds i8, i8* %581, i64 36
  store i8* %582, i8** %21, align 8
  %583 = bitcast i8* %582 to i16*
  store i16 0, i16* %583, align 2
  %584 = getelementptr inbounds i8, i8* %574, i64 4
  %585 = bitcast %"class.rx::vk::PipelineLayout"* %287 to i64*
  %586 = load i64, i64* %585, align 8
  %587 = bitcast i8* %584 to i64*
  store i64 %586, i64* %587, align 8
  %588 = getelementptr inbounds i8, i8* %574, i64 12
  %589 = bitcast i8* %588 to i32*
  store i32 %16, i32* %589, align 8
  %590 = getelementptr inbounds i8, i8* %574, i64 16
  %591 = bitcast i8* %590 to i32*
  store i32 %47, i32* %591, align 4
  %592 = getelementptr inbounds i8, i8* %574, i64 20
  %593 = bitcast i8* %592 to i32*
  store i32 1, i32* %593, align 8
  %594 = getelementptr inbounds i8, i8* %574, i64 24
  %595 = bitcast i8* %594 to i32*
  store i32 0, i32* %595, align 4
  %596 = bitcast i8* %575 to i64*
  store i64 %81, i64* %596, align 1
  br label %597

597:                                              ; preds = %45, %258, %573, %464, %55, %48
  %598 = add nuw nsw i64 %46, 1
  br label %45

599:                                              ; preds = %66, %45
  %600 = phi i32 [ 0, %45 ], [ 1, %66 ]
  ret i32 %600
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx19ProgramExecutableVk29getAndResetObjectPerfCountersEv(%"struct.rx::ProgramExecutablePerfCounters"* noalias nocapture sret, %"class.rx::ProgramExecutableVk"* nocapture) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %1, i64 0, i32 5, i32 0, i32 1
  %4 = getelementptr inbounds %"class.rx::CacheStats", %"class.rx::CacheStats"* %3, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = trunc i64 %5 to i32
  %7 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %1, i64 0, i32 21, i32 1, i32 0, i32 0, i64 1
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %6
  store i32 %9, i32* %7, align 4
  %10 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %1, i64 0, i32 5, i32 0, i32 1, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %1, i64 0, i32 21, i32 2, i32 0, i32 0, i64 1
  %14 = load i32, i32* %13, align 4
  %15 = add i32 %14, %12
  store i32 %15, i32* %13, align 4
  %16 = bitcast %"class.rx::CacheStats"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #15
  %17 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %1, i64 0, i32 6, i32 0, i32 1
  %18 = getelementptr inbounds %"class.rx::CacheStats", %"class.rx::CacheStats"* %17, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  %21 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %1, i64 0, i32 21, i32 1, i32 0, i32 0, i64 2
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %22, %20
  store i32 %23, i32* %21, align 4
  %24 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %1, i64 0, i32 6, i32 0, i32 1, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = trunc i64 %25 to i32
  %27 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %1, i64 0, i32 21, i32 2, i32 0, i32 0, i64 2
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %28, %26
  store i32 %29, i32* %27, align 4
  %30 = bitcast %"class.rx::CacheStats"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #15
  %31 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %1, i64 0, i32 7, i32 0, i32 1
  %32 = getelementptr inbounds %"class.rx::CacheStats", %"class.rx::CacheStats"* %31, i64 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  %35 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %1, i64 0, i32 21, i32 1, i32 0, i32 0, i64 3
  %36 = load i32, i32* %35, align 4
  %37 = add i32 %36, %34
  store i32 %37, i32* %35, align 4
  %38 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %1, i64 0, i32 7, i32 0, i32 1, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = trunc i64 %39 to i32
  %41 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %1, i64 0, i32 21, i32 2, i32 0, i32 0, i64 3
  %42 = load i32, i32* %41, align 4
  %43 = add i32 %42, %40
  store i32 %43, i32* %41, align 4
  %44 = bitcast %"class.rx::CacheStats"* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false) #15
  %45 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %1, i64 0, i32 21
  %46 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %1, i64 0, i32 22, i32 0, i32 0, i32 0, i64 0
  %47 = bitcast %"struct.rx::ProgramExecutablePerfCounters"* %45 to <4 x i32>*
  %48 = load <4 x i32>, <4 x i32>* %47, align 4
  %49 = bitcast i32* %46 to <4 x i32>*
  %50 = load <4 x i32>, <4 x i32>* %49, align 4
  %51 = add <4 x i32> %50, %48
  %52 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> %51, <4 x i32>* %52, align 4
  %53 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %1, i64 0, i32 21, i32 1
  %54 = getelementptr inbounds %"class.angle::PackedEnumMap.900", %"class.angle::PackedEnumMap.900"* %53, i64 0, i32 0, i32 0, i64 0
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %1, i64 0, i32 22, i32 1, i32 0, i32 0, i64 0
  %57 = bitcast i32* %56 to <4 x i32>*
  %58 = load <4 x i32>, <4 x i32>* %57, align 4
  %59 = insertelement <4 x i32> undef, i32 %55, i32 0
  %60 = insertelement <4 x i32> %59, i32 %9, i32 1
  %61 = insertelement <4 x i32> %60, i32 %23, i32 2
  %62 = insertelement <4 x i32> %61, i32 %37, i32 3
  %63 = add <4 x i32> %58, %62
  %64 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> %63, <4 x i32>* %64, align 4
  %65 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %1, i64 0, i32 21, i32 2
  %66 = getelementptr inbounds %"class.angle::PackedEnumMap.900", %"class.angle::PackedEnumMap.900"* %65, i64 0, i32 0, i32 0, i64 0
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %1, i64 0, i32 22, i32 2, i32 0, i32 0, i64 0
  %69 = load i32, i32* %68, align 4
  %70 = add i32 %69, %67
  store i32 %70, i32* %68, align 4
  %71 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %1, i64 0, i32 22, i32 2, i32 0, i32 0, i64 1
  %72 = load i32, i32* %71, align 4
  %73 = add i32 %72, %15
  store i32 %73, i32* %71, align 4
  %74 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %1, i64 0, i32 22, i32 2, i32 0, i32 0, i64 2
  %75 = load i32, i32* %74, align 4
  %76 = add i32 %75, %29
  store i32 %76, i32* %74, align 4
  %77 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %1, i64 0, i32 22, i32 2, i32 0, i32 0, i64 3
  %78 = load i32, i32* %77, align 4
  %79 = add i32 %78, %43
  store i32 %79, i32* %77, align 4
  %80 = bitcast %"struct.rx::ProgramExecutablePerfCounters"* %0 to i8*
  %81 = bitcast %"struct.rx::ProgramExecutablePerfCounters"* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* align 8 %81, i64 48, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 16, i1 false)
  %82 = bitcast %"class.angle::PackedEnumMap.900"* %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 16, i1 false)
  %83 = bitcast %"class.angle::PackedEnumMap.900"* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2rx19ProgramExecutableVk20accumulateCacheStatsENS_15VulkanCacheTypeERKNS_10CacheStatsE(%"class.rx::ProgramExecutableVk"* nocapture, i32, %"class.rx::CacheStats"* nocapture readonly dereferenceable(16)) local_unnamed_addr #5 align 2 {
  %4 = add i32 %1, -7
  %5 = icmp ult i32 %4, 4
  br i1 %5, label %6, label %10

6:                                                ; preds = %3
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds [4 x i64], [4 x i64]* @switch.table._ZN2rx19ProgramExecutableVk20accumulateCacheStatsENS_15VulkanCacheTypeERKNS_10CacheStatsE, i64 0, i64 %7
  %9 = load i64, i64* %8, align 8
  br label %10

10:                                               ; preds = %3, %6
  %11 = phi i64 [ %9, %6 ], [ 4, %3 ]
  %12 = getelementptr inbounds %"class.rx::CacheStats", %"class.rx::CacheStats"* %2, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 21, i32 1, i32 0, i32 0, i64 %11
  %16 = load i32, i32* %15, align 4
  %17 = add i32 %16, %14
  store i32 %17, i32* %15, align 4
  %18 = getelementptr inbounds %"class.rx::CacheStats", %"class.rx::CacheStats"* %2, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  %21 = getelementptr inbounds %"class.rx::ProgramExecutableVk", %"class.rx::ProgramExecutableVk"* %0, i64 0, i32 21, i32 2, i32 0, i32 0, i64 %11
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %22, %20
  store i32 %23, i32* %21, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2rx13LinkEventDoneD0Ev(%"class.rx::LinkEventDone"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.rx::LinkEventDone"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #20
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2rx13LinkEventDone9isLinkingEv(%"class.rx::LinkEventDone"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EED0Ev(%"class.rx::DescriptorSetCache"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx18DescriptorSetCacheINS_2vk28UniformsAndXfbDescriptorDescELNS_15VulkanCacheTypeE9EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  br label %11

9:                                                ; preds = %22
  %10 = load i8*, i8** %7, align 8
  tail call void @_ZdlPv(i8* %10) #20
  br label %26

11:                                               ; preds = %22, %6
  %12 = phi i64 [ %4, %6 ], [ %23, %22 ]
  %13 = phi i64 [ 0, %6 ], [ %24, %22 ]
  %14 = load i8*, i8** %7, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %13
  %16 = load i8, i8* %15, align 1
  %17 = icmp sgt i8 %16, -1
  br i1 %17, label %18, label %22

18:                                               ; preds = %11
  %19 = load %"union.absl::container_internal::map_slot_type.812"*, %"union.absl::container_internal::map_slot_type.812"** %8, align 8
  %20 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %19, i64 %13, i32 0, i32 0
  tail call void @_ZN2rx2vk28UniformsAndXfbDescriptorDescD1Ev(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* %20) #15
  %21 = load i64, i64* %3, align 8
  br label %22

22:                                               ; preds = %18, %11
  %23 = phi i64 [ %12, %11 ], [ %21, %18 ]
  %24 = add i64 %13, 1
  %25 = icmp eq i64 %24, %23
  br i1 %25, label %9, label %11

26:                                               ; preds = %1, %9
  %27 = bitcast %"class.rx::DescriptorSetCache"* %0 to i8*
  tail call void @_ZdlPv(i8* %27) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EED0Ev(%"class.rx::DescriptorSetCache.824"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.rx::DescriptorSetCache.824", %"class.rx::DescriptorSetCache.824"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx18DescriptorSetCacheINS_2vk21TextureDescriptorDescELNS_15VulkanCacheTypeE8EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::DescriptorSetCache.824", %"class.rx::DescriptorSetCache.824"* %0, i64 0, i32 1, i32 0, i32 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.rx::DescriptorSetCache.824", %"class.rx::DescriptorSetCache.824"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.rx::DescriptorSetCache.824", %"class.rx::DescriptorSetCache.824"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  br label %11

9:                                                ; preds = %22
  %10 = load i8*, i8** %7, align 8
  tail call void @_ZdlPv(i8* %10) #20
  br label %26

11:                                               ; preds = %22, %6
  %12 = phi i64 [ %4, %6 ], [ %23, %22 ]
  %13 = phi i64 [ 0, %6 ], [ %24, %22 ]
  %14 = load i8*, i8** %7, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %13
  %16 = load i8, i8* %15, align 1
  %17 = icmp sgt i8 %16, -1
  br i1 %17, label %18, label %22

18:                                               ; preds = %11
  %19 = load %"union.absl::container_internal::map_slot_type.829"*, %"union.absl::container_internal::map_slot_type.829"** %8, align 8
  %20 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %19, i64 %13, i32 0, i32 0
  tail call void @_ZN2rx2vk21TextureDescriptorDescD1Ev(%"class.rx::vk::TextureDescriptorDesc"* %20) #15
  %21 = load i64, i64* %3, align 8
  br label %22

22:                                               ; preds = %18, %11
  %23 = phi i64 [ %12, %11 ], [ %21, %18 ]
  %24 = add i64 %13, 1
  %25 = icmp eq i64 %24, %23
  br i1 %25, label %9, label %11

26:                                               ; preds = %1, %9
  %27 = bitcast %"class.rx::DescriptorSetCache.824"* %0 to i8*
  tail call void @_ZdlPv(i8* %27) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EED0Ev(%"class.rx::DescriptorSetCache.841"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.rx::DescriptorSetCache.841", %"class.rx::DescriptorSetCache.841"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx18DescriptorSetCacheINS_2vk27ShaderBuffersDescriptorDescELNS_15VulkanCacheTypeE10EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::DescriptorSetCache.841", %"class.rx::DescriptorSetCache.841"* %0, i64 0, i32 1, i32 0, i32 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.rx::DescriptorSetCache.841", %"class.rx::DescriptorSetCache.841"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.rx::DescriptorSetCache.841", %"class.rx::DescriptorSetCache.841"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  br label %11

9:                                                ; preds = %22
  %10 = load i8*, i8** %7, align 8
  tail call void @_ZdlPv(i8* %10) #20
  br label %26

11:                                               ; preds = %22, %6
  %12 = phi i64 [ %4, %6 ], [ %23, %22 ]
  %13 = phi i64 [ 0, %6 ], [ %24, %22 ]
  %14 = load i8*, i8** %7, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %13
  %16 = load i8, i8* %15, align 1
  %17 = icmp sgt i8 %16, -1
  br i1 %17, label %18, label %22

18:                                               ; preds = %11
  %19 = load %"union.absl::container_internal::map_slot_type.846"*, %"union.absl::container_internal::map_slot_type.846"** %8, align 8
  %20 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %19, i64 %13, i32 0, i32 0
  tail call void @_ZN2rx2vk27ShaderBuffersDescriptorDescD1Ev(%"class.rx::vk::ShaderBuffersDescriptorDesc"* %20) #15
  %21 = load i64, i64* %3, align 8
  br label %22

22:                                               ; preds = %18, %11
  %23 = phi i64 [ %12, %11 ], [ %21, %18 ]
  %24 = add i64 %13, 1
  %25 = icmp eq i64 %24, %23
  br i1 %25, label %9, label %11

26:                                               ; preds = %1, %9
  %27 = bitcast %"class.rx::DescriptorSetCache.841"* %0 to i8*
  tail call void @_ZdlPv(i8* %27) #20
  ret void
}

declare void @_ZN2rx2vk21DynamicDescriptorPoolC1Ev(%"class.rx::vk::DynamicDescriptorPool"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN2rx2vk21DynamicDescriptorPoolD1Ev(%"class.rx::vk::DynamicDescriptorPool"*) unnamed_addr #4

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #11

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.1419"*, i8*, i8*, i8*) local_unnamed_addr #3 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = ptrtoint i8* %2 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.1419", %"class.std::__1::vector.1419"* %0, i64 0, i32 0, i32 0
  %8 = ptrtoint i8* %3 to i64
  %9 = sub i64 %8, %6
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %618

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::vector.1419", %"class.std::__1::vector.1419"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.1419", %"class.std::__1::vector.1419"* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %9, %18
  %20 = bitcast i8** %15 to i64*
  br i1 %19, label %368, label %21

21:                                               ; preds = %11
  %22 = sub i64 %17, %5
  %23 = icmp sgt i64 %9, %22
  br i1 %23, label %24, label %141

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %2, i64 %22
  %26 = icmp eq i8* %25, %3
  br i1 %26, label %136, label %27

27:                                               ; preds = %24
  %28 = sub i64 %5, %6
  %29 = sub i64 %28, %17
  %30 = getelementptr i8, i8* %3, i64 %29
  %31 = ptrtoint i8* %30 to i64
  %32 = icmp ult i8* %30, inttoptr (i64 32 to i8*)
  br i1 %32, label %123, label %33

33:                                               ; preds = %27
  %34 = sub i64 %5, %6
  %35 = sub i64 %34, %17
  %36 = getelementptr i8, i8* %3, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = getelementptr i8, i8* %16, i64 %37
  %39 = icmp ult i8* %16, %3
  %40 = icmp ult i8* %25, %38
  %41 = and i1 %39, %40
  br i1 %41, label %123, label %42

42:                                               ; preds = %33
  %43 = and i64 %31, -32
  %44 = getelementptr i8, i8* %16, i64 %43
  %45 = getelementptr i8, i8* %25, i64 %43
  %46 = add i64 %43, -32
  %47 = lshr exact i64 %46, 5
  %48 = add nuw nsw i64 %47, 1
  %49 = and i64 %48, 3
  %50 = icmp ult i64 %46, 96
  br i1 %50, label %102, label %51

51:                                               ; preds = %42
  %52 = sub nsw i64 %48, %49
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 0, %51 ], [ %99, %53 ]
  %55 = phi i64 [ %52, %51 ], [ %100, %53 ]
  %56 = getelementptr i8, i8* %16, i64 %54
  %57 = getelementptr i8, i8* %25, i64 %54
  %58 = bitcast i8* %57 to <16 x i8>*
  %59 = load <16 x i8>, <16 x i8>* %58, align 1, !alias.scope !116
  %60 = getelementptr i8, i8* %57, i64 16
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1, !alias.scope !116
  %63 = bitcast i8* %56 to <16 x i8>*
  store <16 x i8> %59, <16 x i8>* %63, align 1, !alias.scope !119, !noalias !116
  %64 = getelementptr i8, i8* %56, i64 16
  %65 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %62, <16 x i8>* %65, align 1, !alias.scope !119, !noalias !116
  %66 = or i64 %54, 32
  %67 = getelementptr i8, i8* %16, i64 %66
  %68 = getelementptr i8, i8* %25, i64 %66
  %69 = bitcast i8* %68 to <16 x i8>*
  %70 = load <16 x i8>, <16 x i8>* %69, align 1, !alias.scope !116
  %71 = getelementptr i8, i8* %68, i64 16
  %72 = bitcast i8* %71 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1, !alias.scope !116
  %74 = bitcast i8* %67 to <16 x i8>*
  store <16 x i8> %70, <16 x i8>* %74, align 1, !alias.scope !119, !noalias !116
  %75 = getelementptr i8, i8* %67, i64 16
  %76 = bitcast i8* %75 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %76, align 1, !alias.scope !119, !noalias !116
  %77 = or i64 %54, 64
  %78 = getelementptr i8, i8* %16, i64 %77
  %79 = getelementptr i8, i8* %25, i64 %77
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1, !alias.scope !116
  %82 = getelementptr i8, i8* %79, i64 16
  %83 = bitcast i8* %82 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 1, !alias.scope !116
  %85 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %81, <16 x i8>* %85, align 1, !alias.scope !119, !noalias !116
  %86 = getelementptr i8, i8* %78, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %87, align 1, !alias.scope !119, !noalias !116
  %88 = or i64 %54, 96
  %89 = getelementptr i8, i8* %16, i64 %88
  %90 = getelementptr i8, i8* %25, i64 %88
  %91 = bitcast i8* %90 to <16 x i8>*
  %92 = load <16 x i8>, <16 x i8>* %91, align 1, !alias.scope !116
  %93 = getelementptr i8, i8* %90, i64 16
  %94 = bitcast i8* %93 to <16 x i8>*
  %95 = load <16 x i8>, <16 x i8>* %94, align 1, !alias.scope !116
  %96 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %92, <16 x i8>* %96, align 1, !alias.scope !119, !noalias !116
  %97 = getelementptr i8, i8* %89, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  store <16 x i8> %95, <16 x i8>* %98, align 1, !alias.scope !119, !noalias !116
  %99 = add i64 %54, 128
  %100 = add i64 %55, -4
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %53, !llvm.loop !121

102:                                              ; preds = %53, %42
  %103 = phi i64 [ 0, %42 ], [ %99, %53 ]
  %104 = icmp eq i64 %49, 0
  br i1 %104, label %121, label %105

105:                                              ; preds = %102, %105
  %106 = phi i64 [ %118, %105 ], [ %103, %102 ]
  %107 = phi i64 [ %119, %105 ], [ %49, %102 ]
  %108 = getelementptr i8, i8* %16, i64 %106
  %109 = getelementptr i8, i8* %25, i64 %106
  %110 = bitcast i8* %109 to <16 x i8>*
  %111 = load <16 x i8>, <16 x i8>* %110, align 1, !alias.scope !116
  %112 = getelementptr i8, i8* %109, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  %114 = load <16 x i8>, <16 x i8>* %113, align 1, !alias.scope !116
  %115 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %111, <16 x i8>* %115, align 1, !alias.scope !119, !noalias !116
  %116 = getelementptr i8, i8* %108, i64 16
  %117 = bitcast i8* %116 to <16 x i8>*
  store <16 x i8> %114, <16 x i8>* %117, align 1, !alias.scope !119, !noalias !116
  %118 = add i64 %106, 32
  %119 = add i64 %107, -1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %105, !llvm.loop !122

121:                                              ; preds = %105, %102
  %122 = icmp eq i64 %43, %31
  br i1 %122, label %133, label %123

123:                                              ; preds = %121, %33, %27
  %124 = phi i8* [ %16, %33 ], [ %16, %27 ], [ %44, %121 ]
  %125 = phi i8* [ %25, %33 ], [ %25, %27 ], [ %45, %121 ]
  br label %126

126:                                              ; preds = %123, %126
  %127 = phi i8* [ %131, %126 ], [ %124, %123 ]
  %128 = phi i8* [ %130, %126 ], [ %125, %123 ]
  %129 = load i8, i8* %128, align 1
  store i8 %129, i8* %127, align 1
  %130 = getelementptr inbounds i8, i8* %128, i64 1
  %131 = getelementptr inbounds i8, i8* %127, i64 1
  %132 = icmp eq i8* %130, %3
  br i1 %132, label %133, label %126, !llvm.loop !123

133:                                              ; preds = %126, %121
  %134 = phi i8* [ %44, %121 ], [ %131, %126 ]
  %135 = ptrtoint i8* %134 to i64
  br label %136

136:                                              ; preds = %133, %24
  %137 = phi i64 [ %17, %24 ], [ %135, %133 ]
  store i64 %137, i64* %20, align 8
  %138 = icmp sgt i64 %22, 0
  br i1 %138, label %139, label %618

139:                                              ; preds = %136
  %140 = inttoptr i64 %137 to i8*
  br label %141

141:                                              ; preds = %139, %21
  %142 = phi i64 [ %137, %139 ], [ %17, %21 ]
  %143 = phi i8* [ %140, %139 ], [ %16, %21 ]
  %144 = phi i8* [ %25, %139 ], [ %3, %21 ]
  %145 = getelementptr inbounds i8, i8* %1, i64 %9
  %146 = ptrtoint i8* %145 to i64
  %147 = sub i64 %142, %146
  %148 = getelementptr inbounds i8, i8* %1, i64 %147
  %149 = icmp ult i8* %148, %16
  br i1 %149, label %150, label %250

150:                                              ; preds = %141
  %151 = sub i64 %9, %142
  %152 = getelementptr i8, i8* %16, i64 %151
  %153 = ptrtoint i8* %152 to i64
  %154 = icmp ult i8* %152, inttoptr (i64 32 to i8*)
  br i1 %154, label %155, label %158

155:                                              ; preds = %245, %158, %150
  %156 = phi i8* [ %148, %158 ], [ %148, %150 ], [ %168, %245 ]
  %157 = phi i8* [ %143, %158 ], [ %143, %150 ], [ %169, %245 ]
  br label %256

158:                                              ; preds = %150
  %159 = sub i64 %9, %142
  %160 = getelementptr i8, i8* %16, i64 %159
  %161 = ptrtoint i8* %160 to i64
  %162 = getelementptr i8, i8* %143, i64 %161
  %163 = icmp ult i8* %143, %16
  %164 = icmp ult i8* %148, %162
  %165 = and i1 %163, %164
  br i1 %165, label %155, label %166

166:                                              ; preds = %158
  %167 = and i64 %153, -32
  %168 = getelementptr i8, i8* %148, i64 %167
  %169 = getelementptr i8, i8* %143, i64 %167
  %170 = add i64 %167, -32
  %171 = lshr exact i64 %170, 5
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 3
  %174 = icmp ult i64 %170, 96
  br i1 %174, label %226, label %175

175:                                              ; preds = %166
  %176 = sub nsw i64 %172, %173
  br label %177

177:                                              ; preds = %177, %175
  %178 = phi i64 [ 0, %175 ], [ %223, %177 ]
  %179 = phi i64 [ %176, %175 ], [ %224, %177 ]
  %180 = getelementptr i8, i8* %148, i64 %178
  %181 = getelementptr i8, i8* %143, i64 %178
  %182 = bitcast i8* %180 to <16 x i8>*
  %183 = load <16 x i8>, <16 x i8>* %182, align 1, !alias.scope !124
  %184 = getelementptr i8, i8* %180, i64 16
  %185 = bitcast i8* %184 to <16 x i8>*
  %186 = load <16 x i8>, <16 x i8>* %185, align 1, !alias.scope !124
  %187 = bitcast i8* %181 to <16 x i8>*
  store <16 x i8> %183, <16 x i8>* %187, align 1, !alias.scope !127, !noalias !124
  %188 = getelementptr i8, i8* %181, i64 16
  %189 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %186, <16 x i8>* %189, align 1, !alias.scope !127, !noalias !124
  %190 = or i64 %178, 32
  %191 = getelementptr i8, i8* %148, i64 %190
  %192 = getelementptr i8, i8* %143, i64 %190
  %193 = bitcast i8* %191 to <16 x i8>*
  %194 = load <16 x i8>, <16 x i8>* %193, align 1, !alias.scope !124
  %195 = getelementptr i8, i8* %191, i64 16
  %196 = bitcast i8* %195 to <16 x i8>*
  %197 = load <16 x i8>, <16 x i8>* %196, align 1, !alias.scope !124
  %198 = bitcast i8* %192 to <16 x i8>*
  store <16 x i8> %194, <16 x i8>* %198, align 1, !alias.scope !127, !noalias !124
  %199 = getelementptr i8, i8* %192, i64 16
  %200 = bitcast i8* %199 to <16 x i8>*
  store <16 x i8> %197, <16 x i8>* %200, align 1, !alias.scope !127, !noalias !124
  %201 = or i64 %178, 64
  %202 = getelementptr i8, i8* %148, i64 %201
  %203 = getelementptr i8, i8* %143, i64 %201
  %204 = bitcast i8* %202 to <16 x i8>*
  %205 = load <16 x i8>, <16 x i8>* %204, align 1, !alias.scope !124
  %206 = getelementptr i8, i8* %202, i64 16
  %207 = bitcast i8* %206 to <16 x i8>*
  %208 = load <16 x i8>, <16 x i8>* %207, align 1, !alias.scope !124
  %209 = bitcast i8* %203 to <16 x i8>*
  store <16 x i8> %205, <16 x i8>* %209, align 1, !alias.scope !127, !noalias !124
  %210 = getelementptr i8, i8* %203, i64 16
  %211 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %208, <16 x i8>* %211, align 1, !alias.scope !127, !noalias !124
  %212 = or i64 %178, 96
  %213 = getelementptr i8, i8* %148, i64 %212
  %214 = getelementptr i8, i8* %143, i64 %212
  %215 = bitcast i8* %213 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !124
  %217 = getelementptr i8, i8* %213, i64 16
  %218 = bitcast i8* %217 to <16 x i8>*
  %219 = load <16 x i8>, <16 x i8>* %218, align 1, !alias.scope !124
  %220 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !127, !noalias !124
  %221 = getelementptr i8, i8* %214, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %219, <16 x i8>* %222, align 1, !alias.scope !127, !noalias !124
  %223 = add i64 %178, 128
  %224 = add i64 %179, -4
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %177, !llvm.loop !129

226:                                              ; preds = %177, %166
  %227 = phi i64 [ 0, %166 ], [ %223, %177 ]
  %228 = icmp eq i64 %173, 0
  br i1 %228, label %245, label %229

229:                                              ; preds = %226, %229
  %230 = phi i64 [ %242, %229 ], [ %227, %226 ]
  %231 = phi i64 [ %243, %229 ], [ %173, %226 ]
  %232 = getelementptr i8, i8* %148, i64 %230
  %233 = getelementptr i8, i8* %143, i64 %230
  %234 = bitcast i8* %232 to <16 x i8>*
  %235 = load <16 x i8>, <16 x i8>* %234, align 1, !alias.scope !124
  %236 = getelementptr i8, i8* %232, i64 16
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !124
  %239 = bitcast i8* %233 to <16 x i8>*
  store <16 x i8> %235, <16 x i8>* %239, align 1, !alias.scope !127, !noalias !124
  %240 = getelementptr i8, i8* %233, i64 16
  %241 = bitcast i8* %240 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %241, align 1, !alias.scope !127, !noalias !124
  %242 = add i64 %230, 32
  %243 = add i64 %231, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %229, !llvm.loop !130

245:                                              ; preds = %229, %226
  %246 = icmp eq i64 %167, %153
  br i1 %246, label %247, label %155

247:                                              ; preds = %256, %245
  %248 = phi i8* [ %169, %245 ], [ %261, %256 ]
  %249 = ptrtoint i8* %248 to i64
  br label %250

250:                                              ; preds = %247, %141
  %251 = phi i64 [ %249, %247 ], [ %142, %141 ]
  store i64 %251, i64* %20, align 8
  %252 = icmp eq i64 %147, 0
  br i1 %252, label %263, label %253

253:                                              ; preds = %250
  %254 = sub i64 0, %147
  %255 = getelementptr inbounds i8, i8* %143, i64 %254
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %255, i8* align 1 %1, i64 %147, i1 false) #15
  br label %263

256:                                              ; preds = %155, %256
  %257 = phi i8* [ %260, %256 ], [ %156, %155 ]
  %258 = phi i8* [ %261, %256 ], [ %157, %155 ]
  %259 = load i8, i8* %257, align 1
  store i8 %259, i8* %258, align 1
  %260 = getelementptr inbounds i8, i8* %257, i64 1
  %261 = getelementptr inbounds i8, i8* %258, i64 1
  %262 = icmp eq i8* %260, %16
  br i1 %262, label %247, label %256, !llvm.loop !131

263:                                              ; preds = %250, %253
  %264 = icmp eq i8* %144, %2
  br i1 %264, label %618, label %265

265:                                              ; preds = %263
  %266 = sub i64 0, %6
  %267 = getelementptr i8, i8* %144, i64 %266
  %268 = ptrtoint i8* %267 to i64
  %269 = icmp ult i8* %267, inttoptr (i64 32 to i8*)
  br i1 %269, label %358, label %270

270:                                              ; preds = %265
  %271 = ptrtoint i8* %1 to i64
  %272 = sub i64 %271, %6
  %273 = getelementptr i8, i8* %144, i64 %272
  %274 = icmp ugt i8* %144, %1
  %275 = icmp ugt i8* %273, %2
  %276 = and i1 %274, %275
  br i1 %276, label %358, label %277

277:                                              ; preds = %270
  %278 = and i64 %268, -32
  %279 = getelementptr i8, i8* %1, i64 %278
  %280 = getelementptr i8, i8* %2, i64 %278
  %281 = add i64 %278, -32
  %282 = lshr exact i64 %281, 5
  %283 = add nuw nsw i64 %282, 1
  %284 = and i64 %283, 3
  %285 = icmp ult i64 %281, 96
  br i1 %285, label %337, label %286

286:                                              ; preds = %277
  %287 = sub nsw i64 %283, %284
  br label %288

288:                                              ; preds = %288, %286
  %289 = phi i64 [ 0, %286 ], [ %334, %288 ]
  %290 = phi i64 [ %287, %286 ], [ %335, %288 ]
  %291 = getelementptr i8, i8* %1, i64 %289
  %292 = getelementptr i8, i8* %2, i64 %289
  %293 = bitcast i8* %292 to <16 x i8>*
  %294 = load <16 x i8>, <16 x i8>* %293, align 1, !alias.scope !132
  %295 = getelementptr i8, i8* %292, i64 16
  %296 = bitcast i8* %295 to <16 x i8>*
  %297 = load <16 x i8>, <16 x i8>* %296, align 1, !alias.scope !132
  %298 = bitcast i8* %291 to <16 x i8>*
  store <16 x i8> %294, <16 x i8>* %298, align 1, !alias.scope !135, !noalias !132
  %299 = getelementptr i8, i8* %291, i64 16
  %300 = bitcast i8* %299 to <16 x i8>*
  store <16 x i8> %297, <16 x i8>* %300, align 1, !alias.scope !135, !noalias !132
  %301 = or i64 %289, 32
  %302 = getelementptr i8, i8* %1, i64 %301
  %303 = getelementptr i8, i8* %2, i64 %301
  %304 = bitcast i8* %303 to <16 x i8>*
  %305 = load <16 x i8>, <16 x i8>* %304, align 1, !alias.scope !132
  %306 = getelementptr i8, i8* %303, i64 16
  %307 = bitcast i8* %306 to <16 x i8>*
  %308 = load <16 x i8>, <16 x i8>* %307, align 1, !alias.scope !132
  %309 = bitcast i8* %302 to <16 x i8>*
  store <16 x i8> %305, <16 x i8>* %309, align 1, !alias.scope !135, !noalias !132
  %310 = getelementptr i8, i8* %302, i64 16
  %311 = bitcast i8* %310 to <16 x i8>*
  store <16 x i8> %308, <16 x i8>* %311, align 1, !alias.scope !135, !noalias !132
  %312 = or i64 %289, 64
  %313 = getelementptr i8, i8* %1, i64 %312
  %314 = getelementptr i8, i8* %2, i64 %312
  %315 = bitcast i8* %314 to <16 x i8>*
  %316 = load <16 x i8>, <16 x i8>* %315, align 1, !alias.scope !132
  %317 = getelementptr i8, i8* %314, i64 16
  %318 = bitcast i8* %317 to <16 x i8>*
  %319 = load <16 x i8>, <16 x i8>* %318, align 1, !alias.scope !132
  %320 = bitcast i8* %313 to <16 x i8>*
  store <16 x i8> %316, <16 x i8>* %320, align 1, !alias.scope !135, !noalias !132
  %321 = getelementptr i8, i8* %313, i64 16
  %322 = bitcast i8* %321 to <16 x i8>*
  store <16 x i8> %319, <16 x i8>* %322, align 1, !alias.scope !135, !noalias !132
  %323 = or i64 %289, 96
  %324 = getelementptr i8, i8* %1, i64 %323
  %325 = getelementptr i8, i8* %2, i64 %323
  %326 = bitcast i8* %325 to <16 x i8>*
  %327 = load <16 x i8>, <16 x i8>* %326, align 1, !alias.scope !132
  %328 = getelementptr i8, i8* %325, i64 16
  %329 = bitcast i8* %328 to <16 x i8>*
  %330 = load <16 x i8>, <16 x i8>* %329, align 1, !alias.scope !132
  %331 = bitcast i8* %324 to <16 x i8>*
  store <16 x i8> %327, <16 x i8>* %331, align 1, !alias.scope !135, !noalias !132
  %332 = getelementptr i8, i8* %324, i64 16
  %333 = bitcast i8* %332 to <16 x i8>*
  store <16 x i8> %330, <16 x i8>* %333, align 1, !alias.scope !135, !noalias !132
  %334 = add i64 %289, 128
  %335 = add i64 %290, -4
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %288, !llvm.loop !137

337:                                              ; preds = %288, %277
  %338 = phi i64 [ 0, %277 ], [ %334, %288 ]
  %339 = icmp eq i64 %284, 0
  br i1 %339, label %356, label %340

340:                                              ; preds = %337, %340
  %341 = phi i64 [ %353, %340 ], [ %338, %337 ]
  %342 = phi i64 [ %354, %340 ], [ %284, %337 ]
  %343 = getelementptr i8, i8* %1, i64 %341
  %344 = getelementptr i8, i8* %2, i64 %341
  %345 = bitcast i8* %344 to <16 x i8>*
  %346 = load <16 x i8>, <16 x i8>* %345, align 1, !alias.scope !132
  %347 = getelementptr i8, i8* %344, i64 16
  %348 = bitcast i8* %347 to <16 x i8>*
  %349 = load <16 x i8>, <16 x i8>* %348, align 1, !alias.scope !132
  %350 = bitcast i8* %343 to <16 x i8>*
  store <16 x i8> %346, <16 x i8>* %350, align 1, !alias.scope !135, !noalias !132
  %351 = getelementptr i8, i8* %343, i64 16
  %352 = bitcast i8* %351 to <16 x i8>*
  store <16 x i8> %349, <16 x i8>* %352, align 1, !alias.scope !135, !noalias !132
  %353 = add i64 %341, 32
  %354 = add i64 %342, -1
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %340, !llvm.loop !138

356:                                              ; preds = %340, %337
  %357 = icmp eq i64 %278, %268
  br i1 %357, label %618, label %358

358:                                              ; preds = %356, %270, %265
  %359 = phi i8* [ %1, %270 ], [ %1, %265 ], [ %279, %356 ]
  %360 = phi i8* [ %2, %270 ], [ %2, %265 ], [ %280, %356 ]
  br label %361

361:                                              ; preds = %358, %361
  %362 = phi i8* [ %366, %361 ], [ %359, %358 ]
  %363 = phi i8* [ %365, %361 ], [ %360, %358 ]
  %364 = load i8, i8* %363, align 1
  store i8 %364, i8* %362, align 1
  %365 = getelementptr inbounds i8, i8* %363, i64 1
  %366 = getelementptr inbounds i8, i8* %362, i64 1
  %367 = icmp eq i8* %365, %144
  br i1 %367, label %618, label %361, !llvm.loop !139

368:                                              ; preds = %11
  %369 = bitcast %"class.std::__1::vector.1419"* %0 to i64*
  %370 = load i64, i64* %369, align 8
  %371 = sub i64 %17, %370
  %372 = add i64 %371, %9
  %373 = icmp slt i64 %372, 0
  br i1 %373, label %374, label %376

374:                                              ; preds = %368
  %375 = bitcast %"class.std::__1::vector.1419"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %375) #21
  unreachable

376:                                              ; preds = %368
  %377 = sub i64 %14, %370
  %378 = icmp ult i64 %377, 4611686018427387903
  br i1 %378, label %381, label %379

379:                                              ; preds = %376
  %380 = sub i64 %5, %370
  br label %387

381:                                              ; preds = %376
  %382 = shl i64 %377, 1
  %383 = icmp ult i64 %382, %372
  %384 = select i1 %383, i64 %372, i64 %382
  %385 = sub i64 %5, %370
  %386 = icmp eq i64 %384, 0
  br i1 %386, label %391, label %387

387:                                              ; preds = %379, %381
  %388 = phi i64 [ %380, %379 ], [ %385, %381 ]
  %389 = phi i64 [ 9223372036854775807, %379 ], [ %384, %381 ]
  %390 = tail call i8* @_Znwm(i64 %389) #20
  br label %391

391:                                              ; preds = %381, %387
  %392 = phi i64 [ %388, %387 ], [ %385, %381 ]
  %393 = phi i64 [ %389, %387 ], [ 0, %381 ]
  %394 = phi i8* [ %390, %387 ], [ null, %381 ]
  %395 = getelementptr inbounds i8, i8* %394, i64 %392
  %396 = getelementptr inbounds i8, i8* %394, i64 %393
  %397 = getelementptr inbounds i8, i8* %395, i64 %9
  %398 = icmp ult i64 %9, 32
  br i1 %398, label %484, label %399

399:                                              ; preds = %391
  %400 = icmp ult i8* %395, %3
  %401 = icmp ugt i8* %397, %2
  %402 = and i1 %400, %401
  br i1 %402, label %484, label %403

403:                                              ; preds = %399
  %404 = and i64 %9, -32
  %405 = getelementptr i8, i8* %395, i64 %404
  %406 = getelementptr i8, i8* %2, i64 %404
  %407 = add i64 %404, -32
  %408 = lshr exact i64 %407, 5
  %409 = add nuw nsw i64 %408, 1
  %410 = and i64 %409, 3
  %411 = icmp ult i64 %407, 96
  br i1 %411, label %463, label %412

412:                                              ; preds = %403
  %413 = sub nsw i64 %409, %410
  br label %414

414:                                              ; preds = %414, %412
  %415 = phi i64 [ 0, %412 ], [ %460, %414 ]
  %416 = phi i64 [ %413, %412 ], [ %461, %414 ]
  %417 = getelementptr i8, i8* %395, i64 %415
  %418 = getelementptr i8, i8* %2, i64 %415
  %419 = bitcast i8* %418 to <16 x i8>*
  %420 = load <16 x i8>, <16 x i8>* %419, align 1, !alias.scope !140
  %421 = getelementptr i8, i8* %418, i64 16
  %422 = bitcast i8* %421 to <16 x i8>*
  %423 = load <16 x i8>, <16 x i8>* %422, align 1, !alias.scope !140
  %424 = bitcast i8* %417 to <16 x i8>*
  store <16 x i8> %420, <16 x i8>* %424, align 1, !alias.scope !143, !noalias !140
  %425 = getelementptr i8, i8* %417, i64 16
  %426 = bitcast i8* %425 to <16 x i8>*
  store <16 x i8> %423, <16 x i8>* %426, align 1, !alias.scope !143, !noalias !140
  %427 = or i64 %415, 32
  %428 = getelementptr i8, i8* %395, i64 %427
  %429 = getelementptr i8, i8* %2, i64 %427
  %430 = bitcast i8* %429 to <16 x i8>*
  %431 = load <16 x i8>, <16 x i8>* %430, align 1, !alias.scope !140
  %432 = getelementptr i8, i8* %429, i64 16
  %433 = bitcast i8* %432 to <16 x i8>*
  %434 = load <16 x i8>, <16 x i8>* %433, align 1, !alias.scope !140
  %435 = bitcast i8* %428 to <16 x i8>*
  store <16 x i8> %431, <16 x i8>* %435, align 1, !alias.scope !143, !noalias !140
  %436 = getelementptr i8, i8* %428, i64 16
  %437 = bitcast i8* %436 to <16 x i8>*
  store <16 x i8> %434, <16 x i8>* %437, align 1, !alias.scope !143, !noalias !140
  %438 = or i64 %415, 64
  %439 = getelementptr i8, i8* %395, i64 %438
  %440 = getelementptr i8, i8* %2, i64 %438
  %441 = bitcast i8* %440 to <16 x i8>*
  %442 = load <16 x i8>, <16 x i8>* %441, align 1, !alias.scope !140
  %443 = getelementptr i8, i8* %440, i64 16
  %444 = bitcast i8* %443 to <16 x i8>*
  %445 = load <16 x i8>, <16 x i8>* %444, align 1, !alias.scope !140
  %446 = bitcast i8* %439 to <16 x i8>*
  store <16 x i8> %442, <16 x i8>* %446, align 1, !alias.scope !143, !noalias !140
  %447 = getelementptr i8, i8* %439, i64 16
  %448 = bitcast i8* %447 to <16 x i8>*
  store <16 x i8> %445, <16 x i8>* %448, align 1, !alias.scope !143, !noalias !140
  %449 = or i64 %415, 96
  %450 = getelementptr i8, i8* %395, i64 %449
  %451 = getelementptr i8, i8* %2, i64 %449
  %452 = bitcast i8* %451 to <16 x i8>*
  %453 = load <16 x i8>, <16 x i8>* %452, align 1, !alias.scope !140
  %454 = getelementptr i8, i8* %451, i64 16
  %455 = bitcast i8* %454 to <16 x i8>*
  %456 = load <16 x i8>, <16 x i8>* %455, align 1, !alias.scope !140
  %457 = bitcast i8* %450 to <16 x i8>*
  store <16 x i8> %453, <16 x i8>* %457, align 1, !alias.scope !143, !noalias !140
  %458 = getelementptr i8, i8* %450, i64 16
  %459 = bitcast i8* %458 to <16 x i8>*
  store <16 x i8> %456, <16 x i8>* %459, align 1, !alias.scope !143, !noalias !140
  %460 = add i64 %415, 128
  %461 = add i64 %416, -4
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %463, label %414, !llvm.loop !145

463:                                              ; preds = %414, %403
  %464 = phi i64 [ 0, %403 ], [ %460, %414 ]
  %465 = icmp eq i64 %410, 0
  br i1 %465, label %482, label %466

466:                                              ; preds = %463, %466
  %467 = phi i64 [ %479, %466 ], [ %464, %463 ]
  %468 = phi i64 [ %480, %466 ], [ %410, %463 ]
  %469 = getelementptr i8, i8* %395, i64 %467
  %470 = getelementptr i8, i8* %2, i64 %467
  %471 = bitcast i8* %470 to <16 x i8>*
  %472 = load <16 x i8>, <16 x i8>* %471, align 1, !alias.scope !140
  %473 = getelementptr i8, i8* %470, i64 16
  %474 = bitcast i8* %473 to <16 x i8>*
  %475 = load <16 x i8>, <16 x i8>* %474, align 1, !alias.scope !140
  %476 = bitcast i8* %469 to <16 x i8>*
  store <16 x i8> %472, <16 x i8>* %476, align 1, !alias.scope !143, !noalias !140
  %477 = getelementptr i8, i8* %469, i64 16
  %478 = bitcast i8* %477 to <16 x i8>*
  store <16 x i8> %475, <16 x i8>* %478, align 1, !alias.scope !143, !noalias !140
  %479 = add i64 %467, 32
  %480 = add i64 %468, -1
  %481 = icmp eq i64 %480, 0
  br i1 %481, label %482, label %466, !llvm.loop !146

482:                                              ; preds = %466, %463
  %483 = icmp eq i64 %9, %404
  br i1 %483, label %494, label %484

484:                                              ; preds = %482, %399, %391
  %485 = phi i8* [ %395, %399 ], [ %395, %391 ], [ %405, %482 ]
  %486 = phi i8* [ %2, %399 ], [ %2, %391 ], [ %406, %482 ]
  br label %487

487:                                              ; preds = %484, %487
  %488 = phi i8* [ %491, %487 ], [ %485, %484 ]
  %489 = phi i8* [ %492, %487 ], [ %486, %484 ]
  %490 = load i8, i8* %489, align 1
  store i8 %490, i8* %488, align 1
  %491 = getelementptr inbounds i8, i8* %488, i64 1
  %492 = getelementptr inbounds i8, i8* %489, i64 1
  %493 = icmp eq i8* %397, %491
  br i1 %493, label %494, label %487, !llvm.loop !147

494:                                              ; preds = %487, %482
  %495 = ptrtoint i8* %396 to i64
  %496 = load i8*, i8** %7, align 8
  %497 = ptrtoint i8* %496 to i64
  %498 = sub i64 %5, %497
  %499 = sub i64 0, %498
  %500 = getelementptr inbounds i8, i8* %395, i64 %499
  %501 = ptrtoint i8* %500 to i64
  %502 = icmp sgt i64 %498, 0
  br i1 %502, label %503, label %504

503:                                              ; preds = %494
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %500, i8* align 1 %496, i64 %498, i1 false) #15
  br label %504

504:                                              ; preds = %503, %494
  %505 = load i8*, i8** %15, align 8
  %506 = icmp eq i8* %505, %1
  br i1 %506, label %612, label %507

507:                                              ; preds = %504
  %508 = ptrtoint i8* %505 to i64
  %509 = sub i64 %508, %5
  %510 = icmp ult i64 %509, 32
  br i1 %510, label %602, label %511

511:                                              ; preds = %507
  %512 = add i64 %392, %8
  %513 = sub i64 %512, %5
  %514 = sub i64 %513, %6
  %515 = getelementptr i8, i8* %505, i64 %514
  %516 = ptrtoint i8* %515 to i64
  %517 = getelementptr i8, i8* %394, i64 %516
  %518 = icmp ult i8* %397, %505
  %519 = icmp ugt i8* %517, %1
  %520 = and i1 %518, %519
  br i1 %520, label %602, label %521

521:                                              ; preds = %511
  %522 = and i64 %509, -32
  %523 = getelementptr i8, i8* %397, i64 %522
  %524 = getelementptr i8, i8* %1, i64 %522
  %525 = add i64 %522, -32
  %526 = lshr exact i64 %525, 5
  %527 = add nuw nsw i64 %526, 1
  %528 = and i64 %527, 3
  %529 = icmp ult i64 %525, 96
  br i1 %529, label %581, label %530

530:                                              ; preds = %521
  %531 = sub nsw i64 %527, %528
  br label %532

532:                                              ; preds = %532, %530
  %533 = phi i64 [ 0, %530 ], [ %578, %532 ]
  %534 = phi i64 [ %531, %530 ], [ %579, %532 ]
  %535 = getelementptr i8, i8* %397, i64 %533
  %536 = getelementptr i8, i8* %1, i64 %533
  %537 = bitcast i8* %536 to <16 x i8>*
  %538 = load <16 x i8>, <16 x i8>* %537, align 1, !alias.scope !148
  %539 = getelementptr i8, i8* %536, i64 16
  %540 = bitcast i8* %539 to <16 x i8>*
  %541 = load <16 x i8>, <16 x i8>* %540, align 1, !alias.scope !148
  %542 = bitcast i8* %535 to <16 x i8>*
  store <16 x i8> %538, <16 x i8>* %542, align 1, !alias.scope !151, !noalias !148
  %543 = getelementptr i8, i8* %535, i64 16
  %544 = bitcast i8* %543 to <16 x i8>*
  store <16 x i8> %541, <16 x i8>* %544, align 1, !alias.scope !151, !noalias !148
  %545 = or i64 %533, 32
  %546 = getelementptr i8, i8* %397, i64 %545
  %547 = getelementptr i8, i8* %1, i64 %545
  %548 = bitcast i8* %547 to <16 x i8>*
  %549 = load <16 x i8>, <16 x i8>* %548, align 1, !alias.scope !148
  %550 = getelementptr i8, i8* %547, i64 16
  %551 = bitcast i8* %550 to <16 x i8>*
  %552 = load <16 x i8>, <16 x i8>* %551, align 1, !alias.scope !148
  %553 = bitcast i8* %546 to <16 x i8>*
  store <16 x i8> %549, <16 x i8>* %553, align 1, !alias.scope !151, !noalias !148
  %554 = getelementptr i8, i8* %546, i64 16
  %555 = bitcast i8* %554 to <16 x i8>*
  store <16 x i8> %552, <16 x i8>* %555, align 1, !alias.scope !151, !noalias !148
  %556 = or i64 %533, 64
  %557 = getelementptr i8, i8* %397, i64 %556
  %558 = getelementptr i8, i8* %1, i64 %556
  %559 = bitcast i8* %558 to <16 x i8>*
  %560 = load <16 x i8>, <16 x i8>* %559, align 1, !alias.scope !148
  %561 = getelementptr i8, i8* %558, i64 16
  %562 = bitcast i8* %561 to <16 x i8>*
  %563 = load <16 x i8>, <16 x i8>* %562, align 1, !alias.scope !148
  %564 = bitcast i8* %557 to <16 x i8>*
  store <16 x i8> %560, <16 x i8>* %564, align 1, !alias.scope !151, !noalias !148
  %565 = getelementptr i8, i8* %557, i64 16
  %566 = bitcast i8* %565 to <16 x i8>*
  store <16 x i8> %563, <16 x i8>* %566, align 1, !alias.scope !151, !noalias !148
  %567 = or i64 %533, 96
  %568 = getelementptr i8, i8* %397, i64 %567
  %569 = getelementptr i8, i8* %1, i64 %567
  %570 = bitcast i8* %569 to <16 x i8>*
  %571 = load <16 x i8>, <16 x i8>* %570, align 1, !alias.scope !148
  %572 = getelementptr i8, i8* %569, i64 16
  %573 = bitcast i8* %572 to <16 x i8>*
  %574 = load <16 x i8>, <16 x i8>* %573, align 1, !alias.scope !148
  %575 = bitcast i8* %568 to <16 x i8>*
  store <16 x i8> %571, <16 x i8>* %575, align 1, !alias.scope !151, !noalias !148
  %576 = getelementptr i8, i8* %568, i64 16
  %577 = bitcast i8* %576 to <16 x i8>*
  store <16 x i8> %574, <16 x i8>* %577, align 1, !alias.scope !151, !noalias !148
  %578 = add i64 %533, 128
  %579 = add i64 %534, -4
  %580 = icmp eq i64 %579, 0
  br i1 %580, label %581, label %532, !llvm.loop !153

581:                                              ; preds = %532, %521
  %582 = phi i64 [ 0, %521 ], [ %578, %532 ]
  %583 = icmp eq i64 %528, 0
  br i1 %583, label %600, label %584

584:                                              ; preds = %581, %584
  %585 = phi i64 [ %597, %584 ], [ %582, %581 ]
  %586 = phi i64 [ %598, %584 ], [ %528, %581 ]
  %587 = getelementptr i8, i8* %397, i64 %585
  %588 = getelementptr i8, i8* %1, i64 %585
  %589 = bitcast i8* %588 to <16 x i8>*
  %590 = load <16 x i8>, <16 x i8>* %589, align 1, !alias.scope !148
  %591 = getelementptr i8, i8* %588, i64 16
  %592 = bitcast i8* %591 to <16 x i8>*
  %593 = load <16 x i8>, <16 x i8>* %592, align 1, !alias.scope !148
  %594 = bitcast i8* %587 to <16 x i8>*
  store <16 x i8> %590, <16 x i8>* %594, align 1, !alias.scope !151, !noalias !148
  %595 = getelementptr i8, i8* %587, i64 16
  %596 = bitcast i8* %595 to <16 x i8>*
  store <16 x i8> %593, <16 x i8>* %596, align 1, !alias.scope !151, !noalias !148
  %597 = add i64 %585, 32
  %598 = add i64 %586, -1
  %599 = icmp eq i64 %598, 0
  br i1 %599, label %600, label %584, !llvm.loop !154

600:                                              ; preds = %584, %581
  %601 = icmp eq i64 %509, %522
  br i1 %601, label %612, label %602

602:                                              ; preds = %600, %511, %507
  %603 = phi i8* [ %397, %511 ], [ %397, %507 ], [ %523, %600 ]
  %604 = phi i8* [ %1, %511 ], [ %1, %507 ], [ %524, %600 ]
  br label %605

605:                                              ; preds = %602, %605
  %606 = phi i8* [ %610, %605 ], [ %603, %602 ]
  %607 = phi i8* [ %609, %605 ], [ %604, %602 ]
  %608 = load i8, i8* %607, align 1
  store i8 %608, i8* %606, align 1
  %609 = getelementptr inbounds i8, i8* %607, i64 1
  %610 = getelementptr inbounds i8, i8* %606, i64 1
  %611 = icmp eq i8* %609, %505
  br i1 %611, label %612, label %605, !llvm.loop !155

612:                                              ; preds = %605, %600, %504
  %613 = phi i8* [ %397, %504 ], [ %523, %600 ], [ %610, %605 ]
  %614 = ptrtoint i8* %613 to i64
  %615 = load i8*, i8** %7, align 8
  store i64 %501, i64* %369, align 8
  store i64 %614, i64* %20, align 8
  store i64 %495, i64* %13, align 8
  %616 = icmp eq i8* %615, null
  br i1 %616, label %618, label %617

617:                                              ; preds = %612
  tail call void @_ZdlPv(i8* nonnull %615) #20
  br label %618

618:                                              ; preds = %361, %356, %617, %612, %136, %263, %4
  %619 = phi i8* [ %1, %4 ], [ %1, %263 ], [ %1, %136 ], [ %395, %612 ], [ %395, %617 ], [ %1, %356 ], [ %1, %361 ]
  ret i8* %619
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #13

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #14

declare void @_ZN2gl20ShaderVariableBufferC2ERKS0_(%"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"* dereferenceable(48)) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl14InterfaceBlockD0Ev(%"struct.gl::InterfaceBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #20
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #20
  br label %20

20:                                               ; preds = %11, %17
  %21 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %0, i64 0, i32 0
  tail call void @_ZN2gl20ShaderVariableBufferD2Ev(%"struct.gl::ShaderVariableBuffer"* %21) #15
  %22 = bitcast %"struct.gl::InterfaceBlock"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #20
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2gl20ShaderVariableBufferD2Ev(%"struct.gl::ShaderVariableBuffer"*) unnamed_addr #4

declare zeroext i1 @_ZNK2rx2vk19ShaderProgramHelper5validEN2gl10ShaderTypeE(%"class.rx::vk::ShaderProgramHelper"*, i8 zeroext) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, %"union.absl::container_internal::map_slot_type.972"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk14RenderPassDescENS_13flat_hash_mapINS4_18AttachmentOpsArrayENS4_16RenderPassHelperENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSC_9allocatorINSC_4pairIKS7_S8_EEEEEEEENSA_IS5_EENSD_IS5_EENSF_INSG_IKS5_SK_EEEEE4findIS5_EENSR_8iteratorERSO_(%"class.absl::container_internal::raw_hash_set.971"*, %"class.rx::vk::RenderPassDesc"* dereferenceable(12)) local_unnamed_addr #9 comdat align 2 {
  %3 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %4 = tail call i64 @_ZNK2rx2vk14RenderPassDesc4hashEv(%"class.rx::vk::RenderPassDesc"* %1) #15
  %5 = add i64 %4, %3
  %6 = zext i64 %5 to i128
  %7 = mul nuw i128 %6, 11376068507788127593
  %8 = lshr i128 %7, 64
  %9 = xor i128 %8, %7
  %10 = trunc i128 %9 to i64
  %11 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.971", %"class.absl::container_internal::raw_hash_set.971"* %0, i64 0, i32 0
  %12 = bitcast %"class.absl::container_internal::raw_hash_set.971"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.971", %"class.absl::container_internal::raw_hash_set.971"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %10, 7
  %17 = lshr i64 %13, 12
  %18 = xor i64 %16, %17
  %19 = trunc i128 %9 to i8
  %20 = and i8 %19, 127
  %21 = insertelement <16 x i8> undef, i8 %20, i32 0
  %22 = shufflevector <16 x i8> %21, <16 x i8> undef, <16 x i32> zeroinitializer
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.971", %"class.absl::container_internal::raw_hash_set.971"* %0, i64 0, i32 1
  %24 = inttoptr i64 %13 to i8*
  br label %25

25:                                               ; preds = %61, %2
  %26 = phi i8* [ %24, %2 ], [ %64, %61 ]
  %27 = phi i64 [ %18, %2 ], [ %63, %61 ]
  %28 = phi i64 [ 0, %2 ], [ %62, %61 ]
  %29 = and i64 %27, %15
  %30 = getelementptr inbounds i8, i8* %26, i64 %29
  %31 = bitcast i8* %30 to <16 x i8>*
  %32 = load <16 x i8>, <16 x i8>* %31, align 1
  %33 = icmp eq <16 x i8> %22, %32
  %34 = bitcast <16 x i1> %33 to i16
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %57, label %36

36:                                               ; preds = %25
  %37 = zext i16 %34 to i32
  br label %38

38:                                               ; preds = %47, %36
  %39 = phi i32 [ %49, %47 ], [ %37, %36 ]
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 false) #15, !range !8
  %41 = load %"union.absl::container_internal::map_slot_type.972"*, %"union.absl::container_internal::map_slot_type.972"** %23, align 8
  %42 = zext i32 %40 to i64
  %43 = add i64 %29, %42
  %44 = and i64 %43, %15
  %45 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.972", %"union.absl::container_internal::map_slot_type.972"* %41, i64 %44, i32 0, i32 0
  %46 = tail call zeroext i1 @_ZN2rx2vkeqERKNS0_14RenderPassDescES3_(%"class.rx::vk::RenderPassDesc"* dereferenceable(12) %45, %"class.rx::vk::RenderPassDesc"* dereferenceable(12) %1) #15
  br i1 %46, label %51, label %47, !prof !6

47:                                               ; preds = %38
  %48 = add i32 %39, -1
  %49 = and i32 %48, %39
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %57, label %38

51:                                               ; preds = %38
  %52 = load i8*, i8** %11, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %44
  %54 = load %"union.absl::container_internal::map_slot_type.972"*, %"union.absl::container_internal::map_slot_type.972"** %23, align 8
  %55 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.972", %"union.absl::container_internal::map_slot_type.972"* %54, i64 %44
  %56 = icmp ne i8* %53, null
  tail call void @llvm.assume(i1 %56) #15
  br label %65

57:                                               ; preds = %47, %25
  %58 = icmp eq <16 x i8> %32, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %59 = bitcast <16 x i1> %58 to i16
  %60 = icmp eq i16 %59, 0
  br i1 %60, label %61, label %65, !prof !7

61:                                               ; preds = %57
  %62 = add i64 %28, 16
  %63 = add i64 %62, %29
  %64 = load i8*, i8** %11, align 8
  br label %25

65:                                               ; preds = %57, %51
  %66 = phi %"union.absl::container_internal::map_slot_type.972"* [ %55, %51 ], [ undef, %57 ]
  %67 = phi i8* [ %53, %51 ], [ null, %57 ]
  %68 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type.972"* } undef, i8* %67, 0
  %69 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type.972"* } %68, %"union.absl::container_internal::map_slot_type.972"* %66, 1
  ret { i8*, %"union.absl::container_internal::map_slot_type.972"* } %69
}

declare dereferenceable(8) %"class.rx::vk::RenderPass"* @_ZN2rx2vk16RenderPassHelper13getRenderPassEv(%"class.rx::vk::RenderPassHelper"*) local_unnamed_addr #6

declare i32 @_ZN2rx15RenderPassCache13addRenderPassEPNS_9ContextVkERKNS_2vk14RenderPassDescEPPNS3_10RenderPassE(%"class.rx::RenderPassCache"*, %"class.rx::ContextVk"*, %"class.rx::vk::RenderPassDesc"* dereferenceable(12), %"class.rx::vk::RenderPass"**) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @llvm.assume(i1) #15

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #16

declare zeroext i1 @_ZN2rx2vkeqERKNS0_14RenderPassDescES3_(%"class.rx::vk::RenderPassDesc"* dereferenceable(12), %"class.rx::vk::RenderPassDesc"* dereferenceable(12)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64, i8*, i64) local_unnamed_addr #3 comdat align 2 {
  %4 = icmp ugt i64 %2, 16
  br i1 %4, label %5, label %11

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, 1024
  br i1 %6, label %7, label %9, !prof !7

7:                                                ; preds = %5
  %8 = tail call i64 @_ZN4absl13hash_internal15MixingHashState28CombineLargeContiguousImpl64EmPKhm(i64 %0, i8* %1, i64 %2) #15
  br label %75

9:                                                ; preds = %5
  %10 = tail call i64 @_ZN4absl13hash_internal15MixingHashState10WyhashImplEPKhm(i8* %1, i64 %2) #15
  br label %66

11:                                               ; preds = %3
  %12 = icmp ugt i64 %2, 8
  br i1 %12, label %13, label %29

13:                                               ; preds = %11
  %14 = bitcast i8* %1 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = shl i64 %2, 3
  %21 = sub nuw nsw i64 128, %20
  %22 = lshr i64 %19, %21
  %23 = add i64 %15, %0
  %24 = zext i64 %23 to i128
  %25 = mul nuw i128 %24, 11376068507788127593
  %26 = lshr i128 %25, 64
  %27 = xor i128 %26, %25
  %28 = trunc i128 %27 to i64
  br label %66

29:                                               ; preds = %11
  %30 = icmp ugt i64 %2, 3
  br i1 %30, label %31, label %44

31:                                               ; preds = %29
  %32 = bitcast i8* %1 to i32*
  %33 = load i32, i32* %32, align 1
  %34 = getelementptr inbounds i8, i8* %1, i64 %2
  %35 = getelementptr inbounds i8, i8* %34, i64 -4
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 1
  %38 = zext i32 %37 to i64
  %39 = shl i64 %2, 3
  %40 = add nsw i64 %39, -32
  %41 = shl i64 %38, %40
  %42 = zext i32 %33 to i64
  %43 = or i64 %41, %42
  br label %66

44:                                               ; preds = %29
  %45 = icmp eq i64 %2, 0
  br i1 %45, label %75, label %46

46:                                               ; preds = %44
  %47 = load i8, i8* %1, align 1
  %48 = lshr i64 %2, 1
  %49 = getelementptr inbounds i8, i8* %1, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = add nsw i64 %2, -1
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %47 to i32
  %55 = zext i8 %50 to i32
  %56 = shl i64 %48, 3
  %57 = trunc i64 %56 to i32
  %58 = shl i32 %55, %57
  %59 = or i32 %58, %54
  %60 = zext i8 %53 to i32
  %61 = trunc i64 %51 to i32
  %62 = shl i32 %61, 3
  %63 = shl i32 %60, %62
  %64 = or i32 %59, %63
  %65 = zext i32 %64 to i64
  br label %66

66:                                               ; preds = %46, %31, %13, %9
  %67 = phi i64 [ %10, %9 ], [ %22, %13 ], [ %43, %31 ], [ %65, %46 ]
  %68 = phi i64 [ %0, %9 ], [ %28, %13 ], [ %0, %31 ], [ %0, %46 ]
  %69 = add i64 %68, %67
  %70 = zext i64 %69 to i128
  %71 = mul nuw i128 %70, 11376068507788127593
  %72 = lshr i128 %71, 64
  %73 = xor i128 %72, %71
  %74 = trunc i128 %73 to i64
  br label %75

75:                                               ; preds = %7, %44, %66
  %76 = phi i64 [ %8, %7 ], [ %74, %66 ], [ %0, %44 ]
  ret i64 %76
}

declare i64 @_ZN4absl13hash_internal15MixingHashState28CombineLargeContiguousImpl64EmPKhm(i64, i8*, i64) local_unnamed_addr #6

declare i64 @_ZN4absl13hash_internal15MixingHashState10WyhashImplEPKhm(i8*, i64) local_unnamed_addr #6

declare i64 @_ZNK2rx2vk14RenderPassDesc4hashEv(%"class.rx::vk::RenderPassDesc"*) local_unnamed_addr #6

declare i32 @_ZN2rx21GraphicsPipelineCache14insertPipelineEPNS_9ContextVkERKNS_2vk13PipelineCacheERKNS3_10RenderPassERKNS3_14PipelineLayoutERKN5angle7BitSetTILm16EmmEERKNSE_ILm32EmmEEPKNS3_12ShaderModuleESN_SN_SN_SN_RKNS3_23SpecializationConstantsERKNS3_20GraphicsPipelineDescEPPSS_PPNS3_14PipelineHelperE(%"class.rx::GraphicsPipelineCache"*, %"class.rx::ContextVk"*, %"class.rx::vk::PipelineCache"* dereferenceable(8), %"class.rx::vk::RenderPass"* dereferenceable(8), %"class.rx::vk::PipelineLayout"* dereferenceable(8), %"class.angle::BitSetT.166"* dereferenceable(8), %"class.angle::BitSetT.148"* dereferenceable(8), %"class.rx::vk::ShaderModule"*, %"class.rx::vk::ShaderModule"*, %"class.rx::vk::ShaderModule"*, %"class.rx::vk::ShaderModule"*, %"class.rx::vk::ShaderModule"*, %"struct.rx::vk::SpecializationConstants"* dereferenceable(16), %"class.rx::vk::GraphicsPipelineDesc"* dereferenceable(252), %"class.rx::vk::GraphicsPipelineDesc"**, %"class.rx::vk::PipelineHelper"**) local_unnamed_addr #6

declare i64 @_ZNK2rx2vk20GraphicsPipelineDesc4hashEv(%"class.rx::vk::GraphicsPipelineDesc"*) local_unnamed_addr #6

declare zeroext i1 @_ZNK2rx2vk20GraphicsPipelineDesceqERKS1_(%"class.rx::vk::GraphicsPipelineDesc"*, %"class.rx::vk::GraphicsPipelineDesc"* dereferenceable(252)) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctpop.i32(i32) #16

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #16

declare i32 @_ZN5angle6Format18InternalFormatToIDEj(i32) local_unnamed_addr #6

declare zeroext i1 @_ZNK2gl17TransformFeedback8isPausedEv(%"class.gl::TransformFeedback"*) local_unnamed_addr #6

declare i8* @_ZN5angle13PoolAllocator15allocateNewPageEmm(%"class.angle::PoolAllocator"*, i64, i64) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #12

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #17

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.1432"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1432", %"class.std::__1::vector.1432"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.1432", %"class.std::__1::vector.1432"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 56
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %28, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.rx::ShaderInterfaceVariableXfbInfo"*
  %14 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %26, label %18

16:                                               ; preds = %18
  %17 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %14 to i64
  br label %26

18:                                               ; preds = %12, %18
  %19 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %24, %18 ], [ %13, %12 ]
  %20 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %19 to i8*
  %21 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %19, i64 0, i32 7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 -1, i64 28, i1 false) #15
  store i32 5126, i32* %21, align 4
  %22 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %19, i64 0, i32 8
  %23 = bitcast %"class.std::__1::vector.1432"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #15
  %24 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %19, i64 1
  %25 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %24, %14
  br i1 %25, label %16, label %18

26:                                               ; preds = %12, %16
  %27 = phi i64 [ %17, %16 ], [ %8, %12 ]
  store i64 %27, i64* %7, align 8
  br label %128

28:                                               ; preds = %2
  %29 = bitcast %"class.std::__1::vector.1432"* %0 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %8, %30
  %32 = sdiv exact i64 %31, 56
  %33 = add i64 %32, %1
  %34 = icmp ugt i64 %33, 329406144173384850
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = bitcast %"class.std::__1::vector.1432"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #21
  unreachable

37:                                               ; preds = %28
  %38 = sub i64 %5, %30
  %39 = sdiv exact i64 %38, 56
  %40 = icmp ult i64 %39, 164703072086692425
  br i1 %40, label %41, label %46

41:                                               ; preds = %37
  %42 = shl nsw i64 %39, 1
  %43 = icmp ult i64 %42, %33
  %44 = select i1 %43, i64 %33, i64 %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %37, %41
  %47 = phi i64 [ %44, %41 ], [ 329406144173384850, %37 ]
  %48 = mul i64 %47, 56
  %49 = tail call i8* @_Znwm(i64 %48) #20
  %50 = bitcast i8* %49 to %"struct.rx::ShaderInterfaceVariableXfbInfo"*
  br label %51

51:                                               ; preds = %41, %46
  %52 = phi i64 [ %47, %46 ], [ 0, %41 ]
  %53 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %50, %46 ], [ null, %41 ]
  %54 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %53, i64 %32
  %55 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %54 to i64
  %56 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %53, i64 %52
  %57 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %54, i64 %1
  br label %58

58:                                               ; preds = %51, %58
  %59 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %65, %58 ], [ %54, %51 ]
  %60 = phi i64 [ %66, %58 ], [ %55, %51 ]
  %61 = inttoptr i64 %60 to i8*
  %62 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %59, i64 0, i32 7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 -1, i64 28, i1 false) #15
  store i32 5126, i32* %62, align 4
  %63 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %59, i64 0, i32 8
  %64 = bitcast %"class.std::__1::vector.1432"* %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #15
  %65 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %59, i64 1
  %66 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %65 to i64
  %67 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %57, %65
  br i1 %67, label %68, label %58

68:                                               ; preds = %58
  %69 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %56 to i64
  %70 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %57 to i64
  %71 = getelementptr inbounds %"class.std::__1::vector.1432", %"class.std::__1::vector.1432"* %0, i64 0, i32 0, i32 0
  %72 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %71, align 8
  %73 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %6, align 8
  %74 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %73, %72
  br i1 %74, label %75, label %77

75:                                               ; preds = %68
  %76 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %72 to i64
  br label %106

77:                                               ; preds = %68, %77
  %78 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %80, %77 ], [ %54, %68 ]
  %79 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %81, %77 ], [ %73, %68 ]
  %80 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %78, i64 -1
  %81 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %79, i64 -1
  %82 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %80 to i8*
  %83 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 32, i1 false) #15
  %84 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %78, i64 -1, i32 8
  %85 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %79, i64 -1, i32 8
  %86 = bitcast %"class.std::__1::vector.1432"* %84 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 24, i1 false) #15
  %87 = bitcast %"class.std::__1::vector.1432"* %85 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"class.std::__1::vector.1432"* %84 to i64*
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %79, i64 -1, i32 8, i32 0, i32 1
  %91 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %78, i64 -1, i32 8, i32 0, i32 1
  %94 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %93 to i64*
  store i64 %92, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %79, i64 -1, i32 8, i32 0, i32 2, i32 0, i32 0
  %96 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %78, i64 -1, i32 8, i32 0, i32 2, i32 0, i32 0
  %99 = bitcast %"struct.rx::ShaderInterfaceVariableXfbInfo"** %98 to i64*
  store i64 %97, i64* %99, align 8
  %100 = bitcast %"class.std::__1::vector.1432"* %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 24, i1 false) #15
  %101 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %81, %72
  br i1 %101, label %102, label %77

102:                                              ; preds = %77
  %103 = ptrtoint %"struct.rx::ShaderInterfaceVariableXfbInfo"* %80 to i64
  %104 = load i64, i64* %29, align 8
  %105 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %6, align 8
  br label %106

106:                                              ; preds = %75, %102
  %107 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %72, %75 ], [ %105, %102 ]
  %108 = phi i64 [ %55, %75 ], [ %103, %102 ]
  %109 = phi i64 [ %76, %75 ], [ %104, %102 ]
  store i64 %108, i64* %29, align 8
  store i64 %70, i64* %7, align 8
  store i64 %69, i64* %4, align 8
  %110 = inttoptr i64 %109 to %"struct.rx::ShaderInterfaceVariableXfbInfo"*
  %111 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %107, %110
  br i1 %111, label %124, label %112

112:                                              ; preds = %106, %122
  %113 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %114, %122 ], [ %107, %106 ]
  %114 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %113, i64 -1
  %115 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %113, i64 -1, i32 8, i32 0
  %116 = getelementptr inbounds %"class.std::__1::__vector_base.1433", %"class.std::__1::__vector_base.1433"* %115, i64 0, i32 0
  %117 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %116, align 8
  %118 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %112
  tail call void @_ZNSt3__113__vector_baseIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEE17__destruct_at_endEPS2_(%"class.std::__1::__vector_base.1433"* %115, %"struct.rx::ShaderInterfaceVariableXfbInfo"* nonnull %117) #15
  %120 = bitcast %"class.std::__1::__vector_base.1433"* %115 to i8**
  %121 = load i8*, i8** %120, align 8
  tail call void @_ZdlPv(i8* %121) #20
  br label %122

122:                                              ; preds = %119, %112
  %123 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %114, %110
  br i1 %123, label %124, label %112

124:                                              ; preds = %122, %106
  %125 = icmp eq i64 %109, 0
  br i1 %125, label %128, label %126

126:                                              ; preds = %124
  %127 = inttoptr i64 %109 to i8*
  tail call void @_ZdlPv(i8* %127) #20
  br label %128

128:                                              ; preds = %126, %124, %26
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__vector_baseIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEE17__destruct_at_endEPS2_(%"class.std::__1::__vector_base.1433"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__vector_base.1433", %"class.std::__1::__vector_base.1433"* %0, i64 0, i32 1
  %4 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %3, align 8
  %5 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %4, %1
  br i1 %5, label %18, label %6

6:                                                ; preds = %2, %16
  %7 = phi %"struct.rx::ShaderInterfaceVariableXfbInfo"* [ %8, %16 ], [ %4, %2 ]
  %8 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %7, i64 -1
  %9 = getelementptr inbounds %"struct.rx::ShaderInterfaceVariableXfbInfo", %"struct.rx::ShaderInterfaceVariableXfbInfo"* %7, i64 -1, i32 8, i32 0
  %10 = getelementptr inbounds %"class.std::__1::__vector_base.1433", %"class.std::__1::__vector_base.1433"* %9, i64 0, i32 0
  %11 = load %"struct.rx::ShaderInterfaceVariableXfbInfo"*, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %10, align 8
  %12 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %6
  tail call void @_ZNSt3__113__vector_baseIN2rx30ShaderInterfaceVariableXfbInfoENS_9allocatorIS2_EEE17__destruct_at_endEPS2_(%"class.std::__1::__vector_base.1433"* %9, %"struct.rx::ShaderInterfaceVariableXfbInfo"* nonnull %11) #15
  %14 = bitcast %"class.std::__1::__vector_base.1433"* %9 to i8**
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #20
  br label %16

16:                                               ; preds = %6, %13
  %17 = icmp eq %"struct.rx::ShaderInterfaceVariableXfbInfo"* %8, %1
  br i1 %17, label %18, label %6

18:                                               ; preds = %16, %2
  store %"struct.rx::ShaderInterfaceVariableXfbInfo"* %1, %"struct.rx::ShaderInterfaceVariableXfbInfo"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"*, i32*, i32*) local_unnamed_addr #3 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #15
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #15
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #20
  %55 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #15
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #21
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #21
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #20
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #15
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2rx2vk28UniformsAndXfbDescriptorDescD1Ev(%"class.rx::vk::UniformsAndXfbDescriptorDesc"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2rx2vk21TextureDescriptorDescD1Ev(%"class.rx::vk::TextureDescriptorDesc"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2rx2vk27ShaderBuffersDescriptorDescD1Ev(%"class.rx::vk::ShaderBuffersDescriptorDesc"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2rx9LinkEventD2Ev(%"class.rx::LinkEvent"*) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, %"union.absl::container_internal::map_slot_type.812"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE4findIS5_EENSK_8iteratorERSH_(%"class.absl::container_internal::raw_hash_set.811"*, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* dereferenceable(40)) local_unnamed_addr #9 comdat align 2 {
  %3 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %4 = tail call i64 @_ZNK2rx2vk28UniformsAndXfbDescriptorDesc4hashEv(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* %1) #15
  %5 = add i64 %4, %3
  %6 = zext i64 %5 to i128
  %7 = mul nuw i128 %6, 11376068507788127593
  %8 = lshr i128 %7, 64
  %9 = xor i128 %8, %7
  %10 = trunc i128 %9 to i64
  %11 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.811", %"class.absl::container_internal::raw_hash_set.811"* %0, i64 0, i32 0
  %12 = bitcast %"class.absl::container_internal::raw_hash_set.811"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.811", %"class.absl::container_internal::raw_hash_set.811"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %10, 7
  %17 = lshr i64 %13, 12
  %18 = xor i64 %16, %17
  %19 = trunc i128 %9 to i8
  %20 = and i8 %19, 127
  %21 = insertelement <16 x i8> undef, i8 %20, i32 0
  %22 = shufflevector <16 x i8> %21, <16 x i8> undef, <16 x i32> zeroinitializer
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.811", %"class.absl::container_internal::raw_hash_set.811"* %0, i64 0, i32 1
  %24 = inttoptr i64 %13 to i8*
  br label %25

25:                                               ; preds = %61, %2
  %26 = phi i8* [ %24, %2 ], [ %64, %61 ]
  %27 = phi i64 [ %18, %2 ], [ %63, %61 ]
  %28 = phi i64 [ 0, %2 ], [ %62, %61 ]
  %29 = and i64 %27, %15
  %30 = getelementptr inbounds i8, i8* %26, i64 %29
  %31 = bitcast i8* %30 to <16 x i8>*
  %32 = load <16 x i8>, <16 x i8>* %31, align 1
  %33 = icmp eq <16 x i8> %22, %32
  %34 = bitcast <16 x i1> %33 to i16
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %57, label %36

36:                                               ; preds = %25
  %37 = zext i16 %34 to i32
  br label %38

38:                                               ; preds = %47, %36
  %39 = phi i32 [ %49, %47 ], [ %37, %36 ]
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 false) #15, !range !8
  %41 = load %"union.absl::container_internal::map_slot_type.812"*, %"union.absl::container_internal::map_slot_type.812"** %23, align 8
  %42 = zext i32 %40 to i64
  %43 = add i64 %29, %42
  %44 = and i64 %43, %15
  %45 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %41, i64 %44, i32 0, i32 0
  %46 = tail call zeroext i1 @_ZNK2rx2vk28UniformsAndXfbDescriptorDesceqERKS1_(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* %45, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* dereferenceable(40) %1) #15
  br i1 %46, label %51, label %47, !prof !6

47:                                               ; preds = %38
  %48 = add i32 %39, -1
  %49 = and i32 %48, %39
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %57, label %38

51:                                               ; preds = %38
  %52 = load i8*, i8** %11, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %44
  %54 = load %"union.absl::container_internal::map_slot_type.812"*, %"union.absl::container_internal::map_slot_type.812"** %23, align 8
  %55 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %54, i64 %44
  %56 = icmp ne i8* %53, null
  tail call void @llvm.assume(i1 %56) #15
  br label %65

57:                                               ; preds = %47, %25
  %58 = icmp eq <16 x i8> %32, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %59 = bitcast <16 x i1> %58 to i16
  %60 = icmp eq i16 %59, 0
  br i1 %60, label %61, label %65, !prof !7

61:                                               ; preds = %57
  %62 = add i64 %28, 16
  %63 = add i64 %62, %29
  %64 = load i8*, i8** %11, align 8
  br label %25

65:                                               ; preds = %57, %51
  %66 = phi %"union.absl::container_internal::map_slot_type.812"* [ %55, %51 ], [ undef, %57 ]
  %67 = phi i8* [ %53, %51 ], [ null, %57 ]
  %68 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type.812"* } undef, i8* %67, 0
  %69 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type.812"* } %68, %"union.absl::container_internal::map_slot_type.812"* %66, 1
  ret { i8*, %"union.absl::container_internal::map_slot_type.812"* } %69
}

declare zeroext i1 @_ZNK2rx2vk28UniformsAndXfbDescriptorDesceqERKS1_(%"class.rx::vk::UniformsAndXfbDescriptorDesc"*, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* dereferenceable(40)) local_unnamed_addr #6

declare i64 @_ZNK2rx2vk28UniformsAndXfbDescriptorDesc4hashEv(%"class.rx::vk::UniformsAndXfbDescriptorDesc"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE22find_or_prepare_insertIS5_EENSG_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.811"*, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* dereferenceable(40)) local_unnamed_addr #9 comdat align 2 {
  %3 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %4 = tail call i64 @_ZNK2rx2vk28UniformsAndXfbDescriptorDesc4hashEv(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* %1) #15
  %5 = add i64 %4, %3
  %6 = zext i64 %5 to i128
  %7 = mul nuw i128 %6, 11376068507788127593
  %8 = lshr i128 %7, 64
  %9 = xor i128 %8, %7
  %10 = trunc i128 %9 to i64
  %11 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.811", %"class.absl::container_internal::raw_hash_set.811"* %0, i64 0, i32 0
  %12 = bitcast %"class.absl::container_internal::raw_hash_set.811"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.811", %"class.absl::container_internal::raw_hash_set.811"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %10, 7
  %17 = lshr i64 %13, 12
  %18 = xor i64 %16, %17
  %19 = trunc i128 %9 to i8
  %20 = and i8 %19, 127
  %21 = insertelement <16 x i8> undef, i8 %20, i32 0
  %22 = shufflevector <16 x i8> %21, <16 x i8> undef, <16 x i32> zeroinitializer
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.811", %"class.absl::container_internal::raw_hash_set.811"* %0, i64 0, i32 1
  %24 = inttoptr i64 %13 to i8*
  br label %25

25:                                               ; preds = %55, %2
  %26 = phi i8* [ %24, %2 ], [ %58, %55 ]
  %27 = phi i64 [ %18, %2 ], [ %57, %55 ]
  %28 = phi i64 [ 0, %2 ], [ %56, %55 ]
  %29 = and i64 %27, %15
  %30 = getelementptr inbounds i8, i8* %26, i64 %29
  %31 = bitcast i8* %30 to <16 x i8>*
  %32 = load <16 x i8>, <16 x i8>* %31, align 1
  %33 = icmp eq <16 x i8> %22, %32
  %34 = bitcast <16 x i1> %33 to i16
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %51, label %36

36:                                               ; preds = %25
  %37 = zext i16 %34 to i32
  br label %38

38:                                               ; preds = %36, %47
  %39 = phi i32 [ %49, %47 ], [ %37, %36 ]
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 false) #15, !range !8
  %41 = load %"union.absl::container_internal::map_slot_type.812"*, %"union.absl::container_internal::map_slot_type.812"** %23, align 8
  %42 = zext i32 %40 to i64
  %43 = add i64 %29, %42
  %44 = and i64 %43, %15
  %45 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %41, i64 %44, i32 0, i32 0
  %46 = tail call zeroext i1 @_ZNK2rx2vk28UniformsAndXfbDescriptorDesceqERKS1_(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* %45, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* dereferenceable(40) %1) #15
  br i1 %46, label %61, label %47, !prof !6

47:                                               ; preds = %38
  %48 = add i32 %39, -1
  %49 = and i32 %48, %39
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %38

51:                                               ; preds = %47, %25
  %52 = icmp eq <16 x i8> %32, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %53 = bitcast <16 x i1> %52 to i16
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %55, label %59, !prof !7

55:                                               ; preds = %51
  %56 = add i64 %28, 16
  %57 = add i64 %56, %29
  %58 = load i8*, i8** %11, align 8
  br label %25

59:                                               ; preds = %51
  %60 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.811"* %0, i64 %10)
  br label %61

61:                                               ; preds = %38, %59
  %62 = phi i64 [ %60, %59 ], [ %44, %38 ]
  %63 = phi i8 [ 1, %59 ], [ 0, %38 ]
  %64 = insertvalue { i64, i8 } undef, i64 %62, 0
  %65 = insertvalue { i64, i8 } %64, i8 %63, 1
  ret { i64, i8 } %65
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.811"*, i64) local_unnamed_addr #18 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.811", %"class.absl::container_internal::raw_hash_set.811"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.811", %"class.absl::container_internal::raw_hash_set.811"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #15, !range !8
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.811", %"class.absl::container_internal::raw_hash_set.811"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !6

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.811"* %0, i64 1) #15
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.811", %"class.absl::container_internal::raw_hash_set.811"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.811"* %0) #15
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.811"* %0, i64 %58) #15
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #15, !range !8
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.811", %"class.absl::container_internal::raw_hash_set.811"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.811"*, i64) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.811", %"class.absl::container_internal::raw_hash_set.811"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.811", %"class.absl::container_internal::raw_hash_set.811"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.812"*, %"union.absl::container_internal::map_slot_type.812"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.811", %"class.absl::container_internal::raw_hash_set.811"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = mul i64 %1, 48
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #20
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.812"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #15
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.811", %"class.absl::container_internal::raw_hash_set.811"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.811", %"class.absl::container_internal::raw_hash_set.811"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %96, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %92
  br i1 %24, label %96, label %95

28:                                               ; preds = %25, %92
  %29 = phi i64 [ 0, %25 ], [ %93, %92 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %92

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %6, i64 %29, i32 0, i32 0
  %35 = tail call i64 @_ZNK2rx2vk28UniformsAndXfbDescriptorDesc4hashEv(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* %34) #15
  %36 = add i64 %35, %26
  %37 = zext i64 %36 to i128
  %38 = mul nuw i128 %37, 11376068507788127593
  %39 = lshr i128 %38, 64
  %40 = xor i128 %39, %38
  %41 = trunc i128 %40 to i64
  %42 = load i8*, i8** %3, align 8
  %43 = load i64, i64* %7, align 8
  %44 = lshr i64 %41, 7
  %45 = ptrtoint i8* %42 to i64
  %46 = lshr i64 %45, 12
  %47 = xor i64 %44, %46
  %48 = and i64 %47, %43
  %49 = getelementptr inbounds i8, i8* %42, i64 %48
  %50 = bitcast i8* %49 to <16 x i8>*
  %51 = load <16 x i8>, <16 x i8>* %50, align 1
  %52 = icmp slt <16 x i8> %51, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %53 = bitcast <16 x i1> %52 to i16
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %33, %55
  %56 = phi i64 [ %60, %55 ], [ %48, %33 ]
  %57 = phi i64 [ %58, %55 ], [ 0, %33 ]
  %58 = add i64 %57, 16
  %59 = add i64 %58, %56
  %60 = and i64 %59, %43
  %61 = getelementptr inbounds i8, i8* %42, i64 %60
  %62 = bitcast i8* %61 to <16 x i8>*
  %63 = load <16 x i8>, <16 x i8>* %62, align 1
  %64 = icmp slt <16 x i8> %63, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %55, label %67

67:                                               ; preds = %55, %33
  %68 = phi i64 [ %48, %33 ], [ %60, %55 ]
  %69 = phi i16 [ %53, %33 ], [ %65, %55 ]
  %70 = zext i16 %69 to i32
  %71 = tail call i32 @llvm.cttz.i32(i32 %70, i1 false) #15, !range !8
  %72 = zext i32 %71 to i64
  %73 = add i64 %68, %72
  %74 = and i64 %73, %43
  %75 = trunc i128 %40 to i8
  %76 = and i8 %75, 127
  %77 = getelementptr inbounds i8, i8* %42, i64 %74
  store i8 %76, i8* %77, align 1
  %78 = load i8*, i8** %3, align 8
  %79 = add i64 %74, -15
  %80 = load i64, i64* %7, align 8
  %81 = and i64 %79, %80
  %82 = and i64 %80, 15
  %83 = add i64 %81, %82
  %84 = getelementptr inbounds i8, i8* %78, i64 %83
  store i8 %76, i8* %84, align 1
  %85 = load %"union.absl::container_internal::map_slot_type.812"*, %"union.absl::container_internal::map_slot_type.812"** %5, align 8
  %86 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %85, i64 %74, i32 0, i32 0
  tail call void @_ZN2rx2vk28UniformsAndXfbDescriptorDescC1ERKS1_(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* %86, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* dereferenceable(40) %34) #15
  %87 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %85, i64 %74, i32 0, i32 1
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %6, i64 %29, i32 0, i32 1
  %89 = bitcast %struct.VkDescriptorSet_T** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %struct.VkDescriptorSet_T** %87 to i64*
  store i64 %90, i64* %91, align 8
  tail call void @_ZN2rx2vk28UniformsAndXfbDescriptorDescD1Ev(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* %34) #15
  br label %92

92:                                               ; preds = %28, %67
  %93 = add nuw i64 %29, 1
  %94 = icmp eq i64 %93, %8
  br i1 %94, label %27, label %28

95:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #20
  br label %96

96:                                               ; preds = %2, %27, %95
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.811"*) local_unnamed_addr #18 comdat align 2 {
  %2 = alloca %"union.absl::container_internal::map_slot_type.812", align 8
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.811", %"class.absl::container_internal::raw_hash_set.811"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.811", %"class.absl::container_internal::raw_hash_set.811"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %4, i64 %6) #15
  %7 = bitcast %"union.absl::container_internal::map_slot_type.812"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  %8 = load i64, i64* %5, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.811", %"class.absl::container_internal::raw_hash_set.811"* %0, i64 0, i32 1
  %12 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %13 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %2, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %2, i64 0, i32 0, i32 1
  %15 = bitcast %struct.VkDescriptorSet_T** %14 to i64*
  br label %24

16:                                               ; preds = %139, %1
  %17 = phi i64 [ 0, %1 ], [ %141, %139 ]
  %18 = lshr i64 %17, 3
  %19 = sub i64 %17, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.811", %"class.absl::container_internal::raw_hash_set.811"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.811", %"class.absl::container_internal::raw_hash_set.811"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #15
  ret void

24:                                               ; preds = %10, %139
  %25 = phi i64 [ 0, %10 ], [ %141, %139 ]
  %26 = load i8*, i8** %3, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 %25
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, -2
  br i1 %29, label %30, label %139

30:                                               ; preds = %24
  %31 = load %"union.absl::container_internal::map_slot_type.812"*, %"union.absl::container_internal::map_slot_type.812"** %11, align 8
  %32 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %31, i64 %25, i32 0, i32 0
  %33 = call i64 @_ZNK2rx2vk28UniformsAndXfbDescriptorDesc4hashEv(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* %32) #15
  %34 = add i64 %33, %12
  %35 = zext i64 %34 to i128
  %36 = mul nuw i128 %35, 11376068507788127593
  %37 = lshr i128 %36, 64
  %38 = xor i128 %37, %36
  %39 = trunc i128 %38 to i64
  %40 = load i8*, i8** %3, align 8
  %41 = load i64, i64* %5, align 8
  %42 = lshr i64 %39, 7
  %43 = ptrtoint i8* %40 to i64
  %44 = lshr i64 %43, 12
  %45 = xor i64 %42, %44
  %46 = and i64 %45, %41
  %47 = getelementptr inbounds i8, i8* %40, i64 %46
  %48 = bitcast i8* %47 to <16 x i8>*
  %49 = load <16 x i8>, <16 x i8>* %48, align 1
  %50 = icmp slt <16 x i8> %49, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %51 = bitcast <16 x i1> %50 to i16
  %52 = icmp eq i16 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %30, %53
  %54 = phi i64 [ %58, %53 ], [ %46, %30 ]
  %55 = phi i64 [ %56, %53 ], [ 0, %30 ]
  %56 = add i64 %55, 16
  %57 = add i64 %56, %54
  %58 = and i64 %57, %41
  %59 = getelementptr inbounds i8, i8* %40, i64 %58
  %60 = bitcast i8* %59 to <16 x i8>*
  %61 = load <16 x i8>, <16 x i8>* %60, align 1
  %62 = icmp slt <16 x i8> %61, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %63 = bitcast <16 x i1> %62 to i16
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %53, label %65

65:                                               ; preds = %53, %30
  %66 = phi i64 [ %46, %30 ], [ %58, %53 ]
  %67 = phi i16 [ %51, %30 ], [ %63, %53 ]
  %68 = zext i16 %67 to i32
  %69 = call i32 @llvm.cttz.i32(i32 %68, i1 false) #15, !range !8
  %70 = zext i32 %69 to i64
  %71 = add i64 %66, %70
  %72 = and i64 %71, %41
  %73 = sub i64 %72, %46
  %74 = sub i64 %25, %46
  %75 = xor i64 %73, %74
  %76 = and i64 %75, %41
  %77 = icmp ult i64 %76, 16
  br i1 %77, label %78, label %89, !prof !6

78:                                               ; preds = %65
  %79 = trunc i128 %38 to i8
  %80 = and i8 %79, 127
  %81 = getelementptr inbounds i8, i8* %40, i64 %25
  store i8 %80, i8* %81, align 1
  %82 = load i8*, i8** %3, align 8
  %83 = add i64 %25, -15
  %84 = load i64, i64* %5, align 8
  %85 = and i64 %84, %83
  %86 = and i64 %84, 15
  %87 = add i64 %85, %86
  %88 = getelementptr inbounds i8, i8* %82, i64 %87
  store i8 %80, i8* %88, align 1
  br label %139

89:                                               ; preds = %65
  %90 = getelementptr inbounds i8, i8* %40, i64 %72
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, -128
  %93 = trunc i128 %38 to i8
  %94 = and i8 %93, 127
  store i8 %94, i8* %90, align 1
  %95 = load i8*, i8** %3, align 8
  %96 = add i64 %72, -15
  %97 = load i64, i64* %5, align 8
  %98 = and i64 %97, %96
  %99 = and i64 %97, 15
  %100 = add i64 %98, %99
  %101 = getelementptr inbounds i8, i8* %95, i64 %100
  store i8 %94, i8* %101, align 1
  %102 = load %"union.absl::container_internal::map_slot_type.812"*, %"union.absl::container_internal::map_slot_type.812"** %11, align 8
  br i1 %92, label %103, label %120

103:                                              ; preds = %89
  %104 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %102, i64 %72, i32 0, i32 0
  %105 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %102, i64 %25, i32 0, i32 0
  call void @_ZN2rx2vk28UniformsAndXfbDescriptorDescC1ERKS1_(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* %104, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* dereferenceable(40) %105) #15
  %106 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %102, i64 %72, i32 0, i32 1
  %107 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %102, i64 %25, i32 0, i32 1
  %108 = bitcast %struct.VkDescriptorSet_T** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %struct.VkDescriptorSet_T** %106 to i64*
  store i64 %109, i64* %110, align 8
  call void @_ZN2rx2vk28UniformsAndXfbDescriptorDescD1Ev(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* %105) #15
  %111 = load i8*, i8** %3, align 8
  %112 = getelementptr inbounds i8, i8* %111, i64 %25
  store i8 -128, i8* %112, align 1
  %113 = load i8*, i8** %3, align 8
  %114 = add i64 %25, -15
  %115 = load i64, i64* %5, align 8
  %116 = and i64 %115, %114
  %117 = and i64 %115, 15
  %118 = add i64 %116, %117
  %119 = getelementptr inbounds i8, i8* %113, i64 %118
  store i8 -128, i8* %119, align 1
  br label %139

120:                                              ; preds = %89
  %121 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %102, i64 %25, i32 0, i32 0
  call void @_ZN2rx2vk28UniformsAndXfbDescriptorDescC1ERKS1_(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* nonnull %13, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* dereferenceable(40) %121) #15
  %122 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %102, i64 %25, i32 0, i32 1
  %123 = bitcast %struct.VkDescriptorSet_T** %122 to i64*
  %124 = load i64, i64* %123, align 8
  store i64 %124, i64* %15, align 8
  call void @_ZN2rx2vk28UniformsAndXfbDescriptorDescD1Ev(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* %121) #15
  %125 = load %"union.absl::container_internal::map_slot_type.812"*, %"union.absl::container_internal::map_slot_type.812"** %11, align 8
  %126 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %125, i64 %25, i32 0, i32 0
  %127 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %125, i64 %72, i32 0, i32 0
  call void @_ZN2rx2vk28UniformsAndXfbDescriptorDescC1ERKS1_(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* %126, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* dereferenceable(40) %127) #15
  %128 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %125, i64 %25, i32 0, i32 1
  %129 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %125, i64 %72, i32 0, i32 1
  %130 = bitcast %struct.VkDescriptorSet_T** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %struct.VkDescriptorSet_T** %128 to i64*
  store i64 %131, i64* %132, align 8
  call void @_ZN2rx2vk28UniformsAndXfbDescriptorDescD1Ev(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* %127) #15
  %133 = load %"union.absl::container_internal::map_slot_type.812"*, %"union.absl::container_internal::map_slot_type.812"** %11, align 8
  %134 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %133, i64 %72, i32 0, i32 0
  call void @_ZN2rx2vk28UniformsAndXfbDescriptorDescC1ERKS1_(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* %134, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* nonnull dereferenceable(40) %13) #15
  %135 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.812", %"union.absl::container_internal::map_slot_type.812"* %133, i64 %72, i32 0, i32 1
  %136 = load i64, i64* %15, align 8
  %137 = bitcast %struct.VkDescriptorSet_T** %135 to i64*
  store i64 %136, i64* %137, align 8
  call void @_ZN2rx2vk28UniformsAndXfbDescriptorDescD1Ev(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* nonnull %13) #15
  %138 = add i64 %25, -1
  br label %139

139:                                              ; preds = %78, %120, %103, %24
  %140 = phi i64 [ %25, %24 ], [ %25, %78 ], [ %25, %103 ], [ %138, %120 ]
  %141 = add i64 %140, 1
  %142 = load i64, i64* %5, align 8
  %143 = icmp eq i64 %141, %142
  br i1 %143, label %16, label %24
}

declare void @_ZN2rx2vk28UniformsAndXfbDescriptorDescC1ERKS1_(%"class.rx::vk::UniformsAndXfbDescriptorDesc"*, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* dereferenceable(40)) unnamed_addr #6

declare void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8*, i64) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

declare %"class.rx::TransformFeedbackImpl"* @_ZNK2gl17TransformFeedback17getImplementationEv(%"class.gl::TransformFeedback"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE22find_or_prepare_insertIS5_EENSG_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.845"*, %"class.rx::vk::ShaderBuffersDescriptorDesc"* dereferenceable(152)) local_unnamed_addr #9 comdat align 2 {
  %3 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %4 = tail call i64 @_ZNK2rx2vk27ShaderBuffersDescriptorDesc4hashEv(%"class.rx::vk::ShaderBuffersDescriptorDesc"* %1) #15
  %5 = add i64 %4, %3
  %6 = zext i64 %5 to i128
  %7 = mul nuw i128 %6, 11376068507788127593
  %8 = lshr i128 %7, 64
  %9 = xor i128 %8, %7
  %10 = trunc i128 %9 to i64
  %11 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.845", %"class.absl::container_internal::raw_hash_set.845"* %0, i64 0, i32 0
  %12 = bitcast %"class.absl::container_internal::raw_hash_set.845"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.845", %"class.absl::container_internal::raw_hash_set.845"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %10, 7
  %17 = lshr i64 %13, 12
  %18 = xor i64 %16, %17
  %19 = trunc i128 %9 to i8
  %20 = and i8 %19, 127
  %21 = insertelement <16 x i8> undef, i8 %20, i32 0
  %22 = shufflevector <16 x i8> %21, <16 x i8> undef, <16 x i32> zeroinitializer
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.845", %"class.absl::container_internal::raw_hash_set.845"* %0, i64 0, i32 1
  %24 = inttoptr i64 %13 to i8*
  br label %25

25:                                               ; preds = %55, %2
  %26 = phi i8* [ %24, %2 ], [ %58, %55 ]
  %27 = phi i64 [ %18, %2 ], [ %57, %55 ]
  %28 = phi i64 [ 0, %2 ], [ %56, %55 ]
  %29 = and i64 %27, %15
  %30 = getelementptr inbounds i8, i8* %26, i64 %29
  %31 = bitcast i8* %30 to <16 x i8>*
  %32 = load <16 x i8>, <16 x i8>* %31, align 1
  %33 = icmp eq <16 x i8> %22, %32
  %34 = bitcast <16 x i1> %33 to i16
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %51, label %36

36:                                               ; preds = %25
  %37 = zext i16 %34 to i32
  br label %38

38:                                               ; preds = %36, %47
  %39 = phi i32 [ %49, %47 ], [ %37, %36 ]
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 false) #15, !range !8
  %41 = load %"union.absl::container_internal::map_slot_type.846"*, %"union.absl::container_internal::map_slot_type.846"** %23, align 8
  %42 = zext i32 %40 to i64
  %43 = add i64 %29, %42
  %44 = and i64 %43, %15
  %45 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %41, i64 %44, i32 0, i32 0
  %46 = tail call zeroext i1 @_ZNK2rx2vk27ShaderBuffersDescriptorDesceqERKS1_(%"class.rx::vk::ShaderBuffersDescriptorDesc"* %45, %"class.rx::vk::ShaderBuffersDescriptorDesc"* dereferenceable(152) %1) #15
  br i1 %46, label %61, label %47, !prof !6

47:                                               ; preds = %38
  %48 = add i32 %39, -1
  %49 = and i32 %48, %39
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %38

51:                                               ; preds = %47, %25
  %52 = icmp eq <16 x i8> %32, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %53 = bitcast <16 x i1> %52 to i16
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %55, label %59, !prof !7

55:                                               ; preds = %51
  %56 = add i64 %28, 16
  %57 = add i64 %56, %29
  %58 = load i8*, i8** %11, align 8
  br label %25

59:                                               ; preds = %51
  %60 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.845"* %0, i64 %10)
  br label %61

61:                                               ; preds = %38, %59
  %62 = phi i64 [ %60, %59 ], [ %44, %38 ]
  %63 = phi i8 [ 1, %59 ], [ 0, %38 ]
  %64 = insertvalue { i64, i8 } undef, i64 %62, 0
  %65 = insertvalue { i64, i8 } %64, i8 %63, 1
  ret { i64, i8 } %65
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.845"*, i64) local_unnamed_addr #18 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.845", %"class.absl::container_internal::raw_hash_set.845"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.845", %"class.absl::container_internal::raw_hash_set.845"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #15, !range !8
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.845", %"class.absl::container_internal::raw_hash_set.845"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !6

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.845"* %0, i64 1) #15
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.845", %"class.absl::container_internal::raw_hash_set.845"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.845"* %0) #15
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.845"* %0, i64 %58) #15
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #15, !range !8
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.845", %"class.absl::container_internal::raw_hash_set.845"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

declare i64 @_ZNK2rx2vk27ShaderBuffersDescriptorDesc4hashEv(%"class.rx::vk::ShaderBuffersDescriptorDesc"*) local_unnamed_addr #6

declare zeroext i1 @_ZNK2rx2vk27ShaderBuffersDescriptorDesceqERKS1_(%"class.rx::vk::ShaderBuffersDescriptorDesc"*, %"class.rx::vk::ShaderBuffersDescriptorDesc"* dereferenceable(152)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.845"*, i64) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.845", %"class.absl::container_internal::raw_hash_set.845"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.845", %"class.absl::container_internal::raw_hash_set.845"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.846"*, %"union.absl::container_internal::map_slot_type.846"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.845", %"class.absl::container_internal::raw_hash_set.845"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = mul i64 %1, 160
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #20
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.846"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #15
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.845", %"class.absl::container_internal::raw_hash_set.845"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.845", %"class.absl::container_internal::raw_hash_set.845"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %96, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %92
  br i1 %24, label %96, label %95

28:                                               ; preds = %25, %92
  %29 = phi i64 [ 0, %25 ], [ %93, %92 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %92

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %6, i64 %29, i32 0, i32 0
  %35 = tail call i64 @_ZNK2rx2vk27ShaderBuffersDescriptorDesc4hashEv(%"class.rx::vk::ShaderBuffersDescriptorDesc"* %34) #15
  %36 = add i64 %35, %26
  %37 = zext i64 %36 to i128
  %38 = mul nuw i128 %37, 11376068507788127593
  %39 = lshr i128 %38, 64
  %40 = xor i128 %39, %38
  %41 = trunc i128 %40 to i64
  %42 = load i8*, i8** %3, align 8
  %43 = load i64, i64* %7, align 8
  %44 = lshr i64 %41, 7
  %45 = ptrtoint i8* %42 to i64
  %46 = lshr i64 %45, 12
  %47 = xor i64 %44, %46
  %48 = and i64 %47, %43
  %49 = getelementptr inbounds i8, i8* %42, i64 %48
  %50 = bitcast i8* %49 to <16 x i8>*
  %51 = load <16 x i8>, <16 x i8>* %50, align 1
  %52 = icmp slt <16 x i8> %51, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %53 = bitcast <16 x i1> %52 to i16
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %33, %55
  %56 = phi i64 [ %60, %55 ], [ %48, %33 ]
  %57 = phi i64 [ %58, %55 ], [ 0, %33 ]
  %58 = add i64 %57, 16
  %59 = add i64 %58, %56
  %60 = and i64 %59, %43
  %61 = getelementptr inbounds i8, i8* %42, i64 %60
  %62 = bitcast i8* %61 to <16 x i8>*
  %63 = load <16 x i8>, <16 x i8>* %62, align 1
  %64 = icmp slt <16 x i8> %63, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %55, label %67

67:                                               ; preds = %55, %33
  %68 = phi i64 [ %48, %33 ], [ %60, %55 ]
  %69 = phi i16 [ %53, %33 ], [ %65, %55 ]
  %70 = zext i16 %69 to i32
  %71 = tail call i32 @llvm.cttz.i32(i32 %70, i1 false) #15, !range !8
  %72 = zext i32 %71 to i64
  %73 = add i64 %68, %72
  %74 = and i64 %73, %43
  %75 = trunc i128 %40 to i8
  %76 = and i8 %75, 127
  %77 = getelementptr inbounds i8, i8* %42, i64 %74
  store i8 %76, i8* %77, align 1
  %78 = load i8*, i8** %3, align 8
  %79 = add i64 %74, -15
  %80 = load i64, i64* %7, align 8
  %81 = and i64 %79, %80
  %82 = and i64 %80, 15
  %83 = add i64 %81, %82
  %84 = getelementptr inbounds i8, i8* %78, i64 %83
  store i8 %76, i8* %84, align 1
  %85 = load %"union.absl::container_internal::map_slot_type.846"*, %"union.absl::container_internal::map_slot_type.846"** %5, align 8
  %86 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %85, i64 %74, i32 0, i32 0
  tail call void @_ZN2rx2vk27ShaderBuffersDescriptorDescC1ERKS1_(%"class.rx::vk::ShaderBuffersDescriptorDesc"* %86, %"class.rx::vk::ShaderBuffersDescriptorDesc"* dereferenceable(152) %34) #15
  %87 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %85, i64 %74, i32 0, i32 1
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %6, i64 %29, i32 0, i32 1
  %89 = bitcast %struct.VkDescriptorSet_T** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %struct.VkDescriptorSet_T** %87 to i64*
  store i64 %90, i64* %91, align 8
  tail call void @_ZN2rx2vk27ShaderBuffersDescriptorDescD1Ev(%"class.rx::vk::ShaderBuffersDescriptorDesc"* %34) #15
  br label %92

92:                                               ; preds = %28, %67
  %93 = add nuw i64 %29, 1
  %94 = icmp eq i64 %93, %8
  br i1 %94, label %27, label %28

95:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #20
  br label %96

96:                                               ; preds = %2, %27, %95
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.845"*) local_unnamed_addr #18 comdat align 2 {
  %2 = alloca %"union.absl::container_internal::map_slot_type.846", align 8
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.845", %"class.absl::container_internal::raw_hash_set.845"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.845", %"class.absl::container_internal::raw_hash_set.845"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %4, i64 %6) #15
  %7 = bitcast %"union.absl::container_internal::map_slot_type.846"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %7) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 160, i1 false)
  %8 = load i64, i64* %5, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.845", %"class.absl::container_internal::raw_hash_set.845"* %0, i64 0, i32 1
  %12 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %13 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %2, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %2, i64 0, i32 0, i32 1
  %15 = bitcast %struct.VkDescriptorSet_T** %14 to i64*
  br label %24

16:                                               ; preds = %139, %1
  %17 = phi i64 [ 0, %1 ], [ %141, %139 ]
  %18 = lshr i64 %17, 3
  %19 = sub i64 %17, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.845", %"class.absl::container_internal::raw_hash_set.845"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.845", %"class.absl::container_internal::raw_hash_set.845"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %7) #15
  ret void

24:                                               ; preds = %10, %139
  %25 = phi i64 [ 0, %10 ], [ %141, %139 ]
  %26 = load i8*, i8** %3, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 %25
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, -2
  br i1 %29, label %30, label %139

30:                                               ; preds = %24
  %31 = load %"union.absl::container_internal::map_slot_type.846"*, %"union.absl::container_internal::map_slot_type.846"** %11, align 8
  %32 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %31, i64 %25, i32 0, i32 0
  %33 = call i64 @_ZNK2rx2vk27ShaderBuffersDescriptorDesc4hashEv(%"class.rx::vk::ShaderBuffersDescriptorDesc"* %32) #15
  %34 = add i64 %33, %12
  %35 = zext i64 %34 to i128
  %36 = mul nuw i128 %35, 11376068507788127593
  %37 = lshr i128 %36, 64
  %38 = xor i128 %37, %36
  %39 = trunc i128 %38 to i64
  %40 = load i8*, i8** %3, align 8
  %41 = load i64, i64* %5, align 8
  %42 = lshr i64 %39, 7
  %43 = ptrtoint i8* %40 to i64
  %44 = lshr i64 %43, 12
  %45 = xor i64 %42, %44
  %46 = and i64 %45, %41
  %47 = getelementptr inbounds i8, i8* %40, i64 %46
  %48 = bitcast i8* %47 to <16 x i8>*
  %49 = load <16 x i8>, <16 x i8>* %48, align 1
  %50 = icmp slt <16 x i8> %49, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %51 = bitcast <16 x i1> %50 to i16
  %52 = icmp eq i16 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %30, %53
  %54 = phi i64 [ %58, %53 ], [ %46, %30 ]
  %55 = phi i64 [ %56, %53 ], [ 0, %30 ]
  %56 = add i64 %55, 16
  %57 = add i64 %56, %54
  %58 = and i64 %57, %41
  %59 = getelementptr inbounds i8, i8* %40, i64 %58
  %60 = bitcast i8* %59 to <16 x i8>*
  %61 = load <16 x i8>, <16 x i8>* %60, align 1
  %62 = icmp slt <16 x i8> %61, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %63 = bitcast <16 x i1> %62 to i16
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %53, label %65

65:                                               ; preds = %53, %30
  %66 = phi i64 [ %46, %30 ], [ %58, %53 ]
  %67 = phi i16 [ %51, %30 ], [ %63, %53 ]
  %68 = zext i16 %67 to i32
  %69 = call i32 @llvm.cttz.i32(i32 %68, i1 false) #15, !range !8
  %70 = zext i32 %69 to i64
  %71 = add i64 %66, %70
  %72 = and i64 %71, %41
  %73 = sub i64 %72, %46
  %74 = sub i64 %25, %46
  %75 = xor i64 %73, %74
  %76 = and i64 %75, %41
  %77 = icmp ult i64 %76, 16
  br i1 %77, label %78, label %89, !prof !6

78:                                               ; preds = %65
  %79 = trunc i128 %38 to i8
  %80 = and i8 %79, 127
  %81 = getelementptr inbounds i8, i8* %40, i64 %25
  store i8 %80, i8* %81, align 1
  %82 = load i8*, i8** %3, align 8
  %83 = add i64 %25, -15
  %84 = load i64, i64* %5, align 8
  %85 = and i64 %84, %83
  %86 = and i64 %84, 15
  %87 = add i64 %85, %86
  %88 = getelementptr inbounds i8, i8* %82, i64 %87
  store i8 %80, i8* %88, align 1
  br label %139

89:                                               ; preds = %65
  %90 = getelementptr inbounds i8, i8* %40, i64 %72
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, -128
  %93 = trunc i128 %38 to i8
  %94 = and i8 %93, 127
  store i8 %94, i8* %90, align 1
  %95 = load i8*, i8** %3, align 8
  %96 = add i64 %72, -15
  %97 = load i64, i64* %5, align 8
  %98 = and i64 %97, %96
  %99 = and i64 %97, 15
  %100 = add i64 %98, %99
  %101 = getelementptr inbounds i8, i8* %95, i64 %100
  store i8 %94, i8* %101, align 1
  %102 = load %"union.absl::container_internal::map_slot_type.846"*, %"union.absl::container_internal::map_slot_type.846"** %11, align 8
  br i1 %92, label %103, label %120

103:                                              ; preds = %89
  %104 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %102, i64 %72, i32 0, i32 0
  %105 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %102, i64 %25, i32 0, i32 0
  call void @_ZN2rx2vk27ShaderBuffersDescriptorDescC1ERKS1_(%"class.rx::vk::ShaderBuffersDescriptorDesc"* %104, %"class.rx::vk::ShaderBuffersDescriptorDesc"* dereferenceable(152) %105) #15
  %106 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %102, i64 %72, i32 0, i32 1
  %107 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %102, i64 %25, i32 0, i32 1
  %108 = bitcast %struct.VkDescriptorSet_T** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %struct.VkDescriptorSet_T** %106 to i64*
  store i64 %109, i64* %110, align 8
  call void @_ZN2rx2vk27ShaderBuffersDescriptorDescD1Ev(%"class.rx::vk::ShaderBuffersDescriptorDesc"* %105) #15
  %111 = load i8*, i8** %3, align 8
  %112 = getelementptr inbounds i8, i8* %111, i64 %25
  store i8 -128, i8* %112, align 1
  %113 = load i8*, i8** %3, align 8
  %114 = add i64 %25, -15
  %115 = load i64, i64* %5, align 8
  %116 = and i64 %115, %114
  %117 = and i64 %115, 15
  %118 = add i64 %116, %117
  %119 = getelementptr inbounds i8, i8* %113, i64 %118
  store i8 -128, i8* %119, align 1
  br label %139

120:                                              ; preds = %89
  %121 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %102, i64 %25, i32 0, i32 0
  call void @_ZN2rx2vk27ShaderBuffersDescriptorDescC1ERKS1_(%"class.rx::vk::ShaderBuffersDescriptorDesc"* nonnull %13, %"class.rx::vk::ShaderBuffersDescriptorDesc"* dereferenceable(152) %121) #15
  %122 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %102, i64 %25, i32 0, i32 1
  %123 = bitcast %struct.VkDescriptorSet_T** %122 to i64*
  %124 = load i64, i64* %123, align 8
  store i64 %124, i64* %15, align 8
  call void @_ZN2rx2vk27ShaderBuffersDescriptorDescD1Ev(%"class.rx::vk::ShaderBuffersDescriptorDesc"* %121) #15
  %125 = load %"union.absl::container_internal::map_slot_type.846"*, %"union.absl::container_internal::map_slot_type.846"** %11, align 8
  %126 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %125, i64 %25, i32 0, i32 0
  %127 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %125, i64 %72, i32 0, i32 0
  call void @_ZN2rx2vk27ShaderBuffersDescriptorDescC1ERKS1_(%"class.rx::vk::ShaderBuffersDescriptorDesc"* %126, %"class.rx::vk::ShaderBuffersDescriptorDesc"* dereferenceable(152) %127) #15
  %128 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %125, i64 %25, i32 0, i32 1
  %129 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %125, i64 %72, i32 0, i32 1
  %130 = bitcast %struct.VkDescriptorSet_T** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %struct.VkDescriptorSet_T** %128 to i64*
  store i64 %131, i64* %132, align 8
  call void @_ZN2rx2vk27ShaderBuffersDescriptorDescD1Ev(%"class.rx::vk::ShaderBuffersDescriptorDesc"* %127) #15
  %133 = load %"union.absl::container_internal::map_slot_type.846"*, %"union.absl::container_internal::map_slot_type.846"** %11, align 8
  %134 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %133, i64 %72, i32 0, i32 0
  call void @_ZN2rx2vk27ShaderBuffersDescriptorDescC1ERKS1_(%"class.rx::vk::ShaderBuffersDescriptorDesc"* %134, %"class.rx::vk::ShaderBuffersDescriptorDesc"* nonnull dereferenceable(152) %13) #15
  %135 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %133, i64 %72, i32 0, i32 1
  %136 = load i64, i64* %15, align 8
  %137 = bitcast %struct.VkDescriptorSet_T** %135 to i64*
  store i64 %136, i64* %137, align 8
  call void @_ZN2rx2vk27ShaderBuffersDescriptorDescD1Ev(%"class.rx::vk::ShaderBuffersDescriptorDesc"* nonnull %13) #15
  %138 = add i64 %25, -1
  br label %139

139:                                              ; preds = %78, %120, %103, %24
  %140 = phi i64 [ %25, %24 ], [ %25, %78 ], [ %25, %103 ], [ %138, %120 ]
  %141 = add i64 %140, 1
  %142 = load i64, i64* %5, align 8
  %143 = icmp eq i64 %141, %142
  br i1 %143, label %16, label %24
}

declare void @_ZN2rx2vk27ShaderBuffersDescriptorDescC1ERKS1_(%"class.rx::vk::ShaderBuffersDescriptorDesc"*, %"class.rx::vk::ShaderBuffersDescriptorDesc"* dereferenceable(152)) unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.cttz.i64(i64, i1 immarg) #16

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE22find_or_prepare_insertIS9_EENSE_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.228"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #9 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = zext i8 %5 to i64
  %9 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  br label %20

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, -1
  br i1 %15, label %16, label %19, !prof !6

16:                                               ; preds = %11
  %17 = load i64, i64* %12, align 8
  %18 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  br label %20

19:                                               ; preds = %11
  tail call void @llvm.trap() #15
  unreachable

20:                                               ; preds = %16, %7
  %21 = phi i64 [ %18, %16 ], [ %9, %7 ]
  %22 = phi i64* [ %12, %16 ], [ %10, %7 ]
  %23 = phi i64 [ %17, %16 ], [ %9, %7 ]
  %24 = phi i64 [ %14, %16 ], [ %8, %7 ]
  %25 = inttoptr i64 %23 to i8*
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %27 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %26, i8* %25, i64 %24) #15
  %28 = add i64 %27, %24
  %29 = zext i64 %28 to i128
  %30 = mul nuw i128 %29, 11376068507788127593
  %31 = lshr i128 %30, 64
  %32 = xor i128 %31, %30
  %33 = trunc i128 %32 to i64
  %34 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.228", %"class.absl::container_internal::raw_hash_set.228"* %0, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.228", %"class.absl::container_internal::raw_hash_set.228"* %0, i64 0, i32 3
  %37 = load i64, i64* %36, align 8
  %38 = lshr i64 %33, 7
  %39 = ptrtoint i8* %35 to i64
  %40 = lshr i64 %39, 12
  %41 = xor i64 %38, %40
  %42 = trunc i128 %32 to i8
  %43 = and i8 %42, 127
  %44 = insertelement <16 x i8> undef, i8 %43, i32 0
  %45 = shufflevector <16 x i8> %44, <16 x i8> undef, <16 x i32> zeroinitializer
  %46 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.228", %"class.absl::container_internal::raw_hash_set.228"* %0, i64 0, i32 1
  %47 = load i8, i8* %4, align 1
  %48 = icmp sgt i8 %47, -1
  %49 = zext i8 %47 to i64
  %50 = load i64, i64* %22, align 8
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp sgt i64 %52, -1
  %54 = or i1 %48, %53
  %55 = select i1 %48, i64 %49, i64 %52
  %56 = select i1 %48, i64 %21, i64 %50
  %57 = inttoptr i64 %56 to i8*
  br label %58

58:                                               ; preds = %112, %20
  %59 = phi i64 [ %41, %20 ], [ %114, %112 ]
  %60 = phi i64 [ 0, %20 ], [ %113, %112 ]
  %61 = and i64 %59, %37
  %62 = getelementptr inbounds i8, i8* %35, i64 %61
  %63 = bitcast i8* %62 to <16 x i8>*
  %64 = load <16 x i8>, <16 x i8>* %63, align 1
  %65 = icmp eq <16 x i8> %45, %64
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %108, label %68

68:                                               ; preds = %58
  %69 = zext i16 %66 to i32
  %70 = load %"union.absl::container_internal::map_slot_type.229"*, %"union.absl::container_internal::map_slot_type.229"** %46, align 8
  br label %71

71:                                               ; preds = %68, %104
  %72 = phi i32 [ %69, %68 ], [ %106, %104 ]
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #15, !range !8
  %74 = zext i32 %73 to i64
  %75 = add i64 %61, %74
  %76 = and i64 %75, %37
  %77 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %70, i64 %76
  %78 = bitcast %"union.absl::container_internal::map_slot_type.229"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %71
  %83 = zext i8 %80 to i64
  %84 = ptrtoint %"union.absl::container_internal::map_slot_type.229"* %77 to i64
  br label %92

85:                                               ; preds = %71
  %86 = bitcast %"union.absl::container_internal::map_slot_type.229"* %77 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %70, i64 %76, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = icmp sgt i64 %89, -1
  br i1 %90, label %92, label %91, !prof !6

91:                                               ; preds = %85
  tail call void @llvm.trap() #15
  unreachable

92:                                               ; preds = %85, %82
  %93 = phi i64 [ %87, %85 ], [ %84, %82 ]
  %94 = phi i64 [ %89, %85 ], [ %83, %82 ]
  br i1 %54, label %96, label %95, !prof !156

95:                                               ; preds = %92
  tail call void @llvm.trap() #15
  unreachable

96:                                               ; preds = %92
  %97 = inttoptr i64 %93 to i8*
  %98 = icmp eq i64 %94, %55
  br i1 %98, label %99, label %104, !prof !157

99:                                               ; preds = %96
  %100 = icmp eq i64 %94, 0
  br i1 %100, label %117, label %101

101:                                              ; preds = %99
  %102 = tail call i32 @bcmp(i8* %97, i8* %57, i64 %94) #15
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %117, label %104, !prof !6

104:                                              ; preds = %96, %101
  %105 = add i32 %72, -1
  %106 = and i32 %105, %72
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %71

108:                                              ; preds = %104, %58
  %109 = icmp eq <16 x i8> %64, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %110 = bitcast <16 x i1> %109 to i16
  %111 = icmp eq i16 %110, 0
  br i1 %111, label %112, label %115, !prof !7

112:                                              ; preds = %108
  %113 = add i64 %60, 16
  %114 = add i64 %113, %61
  br label %58

115:                                              ; preds = %108
  %116 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.228"* %0, i64 %33)
  br label %117

117:                                              ; preds = %101, %99, %115
  %118 = phi i64 [ %116, %115 ], [ %76, %99 ], [ %76, %101 ]
  %119 = phi i8 [ 1, %115 ], [ 0, %99 ], [ 0, %101 ]
  %120 = insertvalue { i64, i8 } undef, i64 %118, 0
  %121 = insertvalue { i64, i8 } %120, i8 %119, 1
  ret { i64, i8 } %121
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.228"*, i64) local_unnamed_addr #18 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.228", %"class.absl::container_internal::raw_hash_set.228"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.228", %"class.absl::container_internal::raw_hash_set.228"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #15, !range !8
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.228", %"class.absl::container_internal::raw_hash_set.228"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !6

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.228"* %0, i64 1) #15
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.228", %"class.absl::container_internal::raw_hash_set.228"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.228"* %0) #15
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.228"* %0, i64 %58) #15
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #15, !range !8
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.228", %"class.absl::container_internal::raw_hash_set.228"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.228"*, i64) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.228", %"class.absl::container_internal::raw_hash_set.228"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.228", %"class.absl::container_internal::raw_hash_set.228"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.229"*, %"union.absl::container_internal::map_slot_type.229"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.228", %"class.absl::container_internal::raw_hash_set.228"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 5
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #20
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.229"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #15
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.228", %"class.absl::container_internal::raw_hash_set.228"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.228", %"class.absl::container_internal::raw_hash_set.228"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %121, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %117
  br i1 %24, label %121, label %120

28:                                               ; preds = %25, %117
  %29 = phi i64 [ 0, %25 ], [ %118, %117 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %117

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %6, i64 %29
  %35 = bitcast %"union.absl::container_internal::map_slot_type.229"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = zext i8 %37 to i64
  %41 = ptrtoint %"union.absl::container_internal::map_slot_type.229"* %34 to i64
  br label %49

42:                                               ; preds = %33
  %43 = bitcast %"union.absl::container_internal::map_slot_type.229"* %34 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %6, i64 %29, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = icmp sgt i64 %46, -1
  br i1 %47, label %49, label %48, !prof !6

48:                                               ; preds = %42
  tail call void @llvm.trap() #15
  unreachable

49:                                               ; preds = %39, %42
  %50 = phi i64 [ %44, %42 ], [ %41, %39 ]
  %51 = phi i64 [ %46, %42 ], [ %40, %39 ]
  %52 = inttoptr i64 %50 to i8*
  %53 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %26, i8* %52, i64 %51) #15
  %54 = add i64 %53, %51
  %55 = zext i64 %54 to i128
  %56 = mul nuw i128 %55, 11376068507788127593
  %57 = lshr i128 %56, 64
  %58 = xor i128 %57, %56
  %59 = trunc i128 %58 to i64
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %7, align 8
  %62 = lshr i64 %59, 7
  %63 = ptrtoint i8* %60 to i64
  %64 = lshr i64 %63, 12
  %65 = xor i64 %62, %64
  %66 = and i64 %65, %61
  %67 = getelementptr inbounds i8, i8* %60, i64 %66
  %68 = bitcast i8* %67 to <16 x i8>*
  %69 = load <16 x i8>, <16 x i8>* %68, align 1
  %70 = icmp slt <16 x i8> %69, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %71 = bitcast <16 x i1> %70 to i16
  %72 = icmp eq i16 %71, 0
  br i1 %72, label %73, label %85

73:                                               ; preds = %49, %73
  %74 = phi i64 [ %78, %73 ], [ %66, %49 ]
  %75 = phi i64 [ %76, %73 ], [ 0, %49 ]
  %76 = add i64 %75, 16
  %77 = add i64 %76, %74
  %78 = and i64 %77, %61
  %79 = getelementptr inbounds i8, i8* %60, i64 %78
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1
  %82 = icmp slt <16 x i8> %81, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %83 = bitcast <16 x i1> %82 to i16
  %84 = icmp eq i16 %83, 0
  br i1 %84, label %73, label %85

85:                                               ; preds = %73, %49
  %86 = phi i64 [ %66, %49 ], [ %78, %73 ]
  %87 = phi i16 [ %71, %49 ], [ %83, %73 ]
  %88 = zext i16 %87 to i32
  %89 = tail call i32 @llvm.cttz.i32(i32 %88, i1 false) #15, !range !8
  %90 = zext i32 %89 to i64
  %91 = add i64 %86, %90
  %92 = and i64 %91, %61
  %93 = trunc i128 %58 to i8
  %94 = and i8 %93, 127
  %95 = getelementptr inbounds i8, i8* %60, i64 %92
  store i8 %94, i8* %95, align 1
  %96 = load i8*, i8** %3, align 8
  %97 = add i64 %92, -15
  %98 = load i64, i64* %7, align 8
  %99 = and i64 %97, %98
  %100 = and i64 %98, 15
  %101 = add i64 %99, %100
  %102 = getelementptr inbounds i8, i8* %96, i64 %101
  store i8 %94, i8* %102, align 1
  %103 = load %"union.absl::container_internal::map_slot_type.229"*, %"union.absl::container_internal::map_slot_type.229"** %5, align 8
  %104 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %103, i64 %92
  %105 = bitcast %"union.absl::container_internal::map_slot_type.229"* %104 to i8*
  %106 = bitcast %"union.absl::container_internal::map_slot_type.229"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 24, i1 false) #15
  %107 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %103, i64 %92, i32 1
  %108 = bitcast [8 x i8]* %107 to i32*
  %109 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %6, i64 %29, i32 1
  %110 = bitcast [8 x i8]* %109 to i32*
  %111 = load i32, i32* %110, align 8
  store i32 %111, i32* %108, align 8
  %112 = load i8, i8* %36, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %85
  %115 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  tail call void @_ZdlPv(i8* %116) #20
  br label %117

117:                                              ; preds = %114, %85, %28
  %118 = add nuw i64 %29, 1
  %119 = icmp eq i64 %118, %8
  br i1 %119, label %27, label %28

120:                                              ; preds = %27
  tail call void @_ZdlPv(i8* %4) #20
  br label %121

121:                                              ; preds = %2, %27, %120
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.228"*) local_unnamed_addr #18 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.228", %"class.absl::container_internal::raw_hash_set.228"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.228", %"class.absl::container_internal::raw_hash_set.228"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #15
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.228", %"class.absl::container_internal::raw_hash_set.228"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %212, %1
  %12 = phi i64 [ 0, %1 ], [ %214, %212 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.228", %"class.absl::container_internal::raw_hash_set.228"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.228", %"class.absl::container_internal::raw_hash_set.228"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %212
  %20 = phi i64 [ 0, %8 ], [ %214, %212 ]
  %21 = load i8*, i8** %2, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 %20
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, -2
  br i1 %24, label %25, label %212

25:                                               ; preds = %19
  %26 = load %"union.absl::container_internal::map_slot_type.229"*, %"union.absl::container_internal::map_slot_type.229"** %9, align 8
  %27 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %26, i64 %20
  %28 = bitcast %"union.absl::container_internal::map_slot_type.229"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %25
  %33 = zext i8 %30 to i64
  %34 = ptrtoint %"union.absl::container_internal::map_slot_type.229"* %27 to i64
  br label %42

35:                                               ; preds = %25
  %36 = bitcast %"union.absl::container_internal::map_slot_type.229"* %27 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %26, i64 %20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = icmp sgt i64 %39, -1
  br i1 %40, label %42, label %41, !prof !6

41:                                               ; preds = %35
  tail call void @llvm.trap() #15
  unreachable

42:                                               ; preds = %32, %35
  %43 = phi i64 [ %37, %35 ], [ %34, %32 ]
  %44 = phi i64 [ %39, %35 ], [ %33, %32 ]
  %45 = inttoptr i64 %43 to i8*
  %46 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %10, i8* %45, i64 %44) #15
  %47 = add i64 %46, %44
  %48 = zext i64 %47 to i128
  %49 = mul nuw i128 %48, 11376068507788127593
  %50 = lshr i128 %49, 64
  %51 = xor i128 %50, %49
  %52 = trunc i128 %51 to i64
  %53 = load i8*, i8** %2, align 8
  %54 = load i64, i64* %4, align 8
  %55 = lshr i64 %52, 7
  %56 = ptrtoint i8* %53 to i64
  %57 = lshr i64 %56, 12
  %58 = xor i64 %55, %57
  %59 = and i64 %58, %54
  %60 = getelementptr inbounds i8, i8* %53, i64 %59
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1
  %63 = icmp slt <16 x i8> %62, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %64 = bitcast <16 x i1> %63 to i16
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %66, label %78

66:                                               ; preds = %42, %66
  %67 = phi i64 [ %71, %66 ], [ %59, %42 ]
  %68 = phi i64 [ %69, %66 ], [ 0, %42 ]
  %69 = add i64 %68, 16
  %70 = add i64 %69, %67
  %71 = and i64 %70, %54
  %72 = getelementptr inbounds i8, i8* %53, i64 %71
  %73 = bitcast i8* %72 to <16 x i8>*
  %74 = load <16 x i8>, <16 x i8>* %73, align 1
  %75 = icmp slt <16 x i8> %74, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %76 = bitcast <16 x i1> %75 to i16
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %66, label %78

78:                                               ; preds = %66, %42
  %79 = phi i64 [ %59, %42 ], [ %71, %66 ]
  %80 = phi i16 [ %64, %42 ], [ %76, %66 ]
  %81 = zext i16 %80 to i32
  %82 = tail call i32 @llvm.cttz.i32(i32 %81, i1 false) #15, !range !8
  %83 = zext i32 %82 to i64
  %84 = add i64 %79, %83
  %85 = and i64 %84, %54
  %86 = sub i64 %85, %59
  %87 = sub i64 %20, %59
  %88 = xor i64 %86, %87
  %89 = and i64 %88, %54
  %90 = icmp ult i64 %89, 16
  br i1 %90, label %91, label %102, !prof !6

91:                                               ; preds = %78
  %92 = trunc i128 %51 to i8
  %93 = and i8 %92, 127
  %94 = getelementptr inbounds i8, i8* %53, i64 %20
  store i8 %93, i8* %94, align 1
  %95 = load i8*, i8** %2, align 8
  %96 = add i64 %20, -15
  %97 = load i64, i64* %4, align 8
  %98 = and i64 %97, %96
  %99 = and i64 %97, 15
  %100 = add i64 %98, %99
  %101 = getelementptr inbounds i8, i8* %95, i64 %100
  store i8 %93, i8* %101, align 1
  br label %212

102:                                              ; preds = %78
  %103 = getelementptr inbounds i8, i8* %53, i64 %85
  %104 = load i8, i8* %103, align 1
  %105 = icmp eq i8 %104, -128
  %106 = trunc i128 %51 to i8
  %107 = and i8 %106, 127
  store i8 %107, i8* %103, align 1
  %108 = load i8*, i8** %2, align 8
  %109 = add i64 %85, -15
  %110 = load i64, i64* %4, align 8
  %111 = and i64 %110, %109
  %112 = and i64 %110, 15
  %113 = add i64 %111, %112
  %114 = getelementptr inbounds i8, i8* %108, i64 %113
  store i8 %107, i8* %114, align 1
  %115 = load %"union.absl::container_internal::map_slot_type.229"*, %"union.absl::container_internal::map_slot_type.229"** %9, align 8
  br i1 %105, label %116, label %135

116:                                              ; preds = %102
  %117 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %115, i64 %85
  %118 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %115, i64 %20
  %119 = bitcast %"union.absl::container_internal::map_slot_type.229"* %117 to i8*
  %120 = bitcast %"union.absl::container_internal::map_slot_type.229"* %118 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 24, i1 false) #15
  %121 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %115, i64 %85, i32 1
  %122 = bitcast [8 x i8]* %121 to i32*
  %123 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %115, i64 %20, i32 1
  %124 = bitcast [8 x i8]* %123 to i32*
  %125 = load i32, i32* %124, align 8
  store i32 %125, i32* %122, align 8
  %126 = load i8*, i8** %2, align 8
  %127 = getelementptr inbounds i8, i8* %126, i64 %20
  store i8 -128, i8* %127, align 1
  %128 = load i8*, i8** %2, align 8
  %129 = add i64 %20, -15
  %130 = load i64, i64* %4, align 8
  %131 = and i64 %130, %129
  %132 = and i64 %130, 15
  %133 = add i64 %131, %132
  %134 = getelementptr inbounds i8, i8* %128, i64 %133
  store i8 -128, i8* %134, align 1
  br label %212

135:                                              ; preds = %102
  %136 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %115, i64 %20
  %137 = bitcast %"union.absl::container_internal::map_slot_type.229"* %136 to i8*
  %138 = bitcast %"union.absl::container_internal::map_slot_type.229"* %136 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %115, i64 %20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %141 = bitcast i64* %140 to i8*
  %142 = load i8, i8* %141, align 8
  %143 = getelementptr inbounds i8, i8* %137, i64 9
  %144 = load i8, i8* %143, align 1
  %145 = getelementptr inbounds i8, i8* %137, i64 10
  %146 = load i8, i8* %145, align 2
  %147 = getelementptr inbounds i8, i8* %137, i64 11
  %148 = load i8, i8* %147, align 1
  %149 = getelementptr inbounds i8, i8* %137, i64 12
  %150 = load i8, i8* %149, align 4
  %151 = getelementptr inbounds i8, i8* %137, i64 13
  %152 = load i8, i8* %151, align 1
  %153 = getelementptr inbounds i8, i8* %137, i64 14
  %154 = load i8, i8* %153, align 2
  %155 = getelementptr inbounds i8, i8* %137, i64 15
  %156 = load i8, i8* %155, align 1
  %157 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %115, i64 %20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %158 = bitcast i64* %157 to i8*
  %159 = load i8, i8* %158, align 8
  %160 = getelementptr inbounds i8, i8* %137, i64 17
  %161 = load i8, i8* %160, align 1
  %162 = getelementptr inbounds i8, i8* %137, i64 18
  %163 = load i8, i8* %162, align 2
  %164 = getelementptr inbounds i8, i8* %137, i64 19
  %165 = load i8, i8* %164, align 1
  %166 = getelementptr inbounds i8, i8* %137, i64 20
  %167 = load i8, i8* %166, align 4
  %168 = getelementptr inbounds i8, i8* %137, i64 21
  %169 = load i8, i8* %168, align 1
  %170 = getelementptr inbounds i8, i8* %137, i64 22
  %171 = load i8, i8* %170, align 2
  %172 = getelementptr inbounds i8, i8* %137, i64 23
  %173 = load i8, i8* %172, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %137, i8 0, i64 24, i1 false) #15
  %174 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %115, i64 %20, i32 1
  %175 = bitcast [8 x i8]* %174 to i32*
  %176 = load i32, i32* %175, align 8
  %177 = load %"union.absl::container_internal::map_slot_type.229"*, %"union.absl::container_internal::map_slot_type.229"** %9, align 8
  %178 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %177, i64 %85, i32 1
  %179 = bitcast [8 x i8]* %178 to i32*
  %180 = load i32, i32* %179, align 8
  %181 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %177, i64 %20
  %182 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %177, i64 %85
  %183 = bitcast %"union.absl::container_internal::map_slot_type.229"* %181 to i8*
  %184 = bitcast %"union.absl::container_internal::map_slot_type.229"* %182 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %183, i8* align 8 %184, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %184, i8 0, i64 24, i1 false) #15
  %185 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %177, i64 %20, i32 1
  %186 = bitcast [8 x i8]* %185 to i32*
  store i32 %180, i32* %186, align 8
  %187 = load %"union.absl::container_internal::map_slot_type.229"*, %"union.absl::container_internal::map_slot_type.229"** %9, align 8
  %188 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %187, i64 %85
  %189 = bitcast %"union.absl::container_internal::map_slot_type.229"* %188 to i64*
  store i64 %139, i64* %189, align 8
  %190 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %187, i64 %85, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %191 = bitcast i64* %190 to i8*
  store i8 %142, i8* %191, align 8
  %192 = bitcast %"union.absl::container_internal::map_slot_type.229"* %188 to i8*
  %193 = getelementptr inbounds i8, i8* %192, i64 9
  store i8 %144, i8* %193, align 1
  %194 = getelementptr inbounds i8, i8* %192, i64 10
  store i8 %146, i8* %194, align 2
  %195 = getelementptr inbounds i8, i8* %192, i64 11
  store i8 %148, i8* %195, align 1
  %196 = getelementptr inbounds i8, i8* %192, i64 12
  store i8 %150, i8* %196, align 4
  %197 = getelementptr inbounds i8, i8* %192, i64 13
  store i8 %152, i8* %197, align 1
  %198 = getelementptr inbounds i8, i8* %192, i64 14
  store i8 %154, i8* %198, align 2
  %199 = getelementptr inbounds i8, i8* %192, i64 15
  store i8 %156, i8* %199, align 1
  %200 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %187, i64 %85, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %201 = bitcast i64* %200 to i8*
  store i8 %159, i8* %201, align 8
  %202 = getelementptr inbounds i8, i8* %192, i64 17
  store i8 %161, i8* %202, align 1
  %203 = getelementptr inbounds i8, i8* %192, i64 18
  store i8 %163, i8* %203, align 2
  %204 = getelementptr inbounds i8, i8* %192, i64 19
  store i8 %165, i8* %204, align 1
  %205 = getelementptr inbounds i8, i8* %192, i64 20
  store i8 %167, i8* %205, align 4
  %206 = getelementptr inbounds i8, i8* %192, i64 21
  store i8 %169, i8* %206, align 1
  %207 = getelementptr inbounds i8, i8* %192, i64 22
  store i8 %171, i8* %207, align 2
  %208 = getelementptr inbounds i8, i8* %192, i64 23
  store i8 %173, i8* %208, align 1
  %209 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.229", %"union.absl::container_internal::map_slot_type.229"* %187, i64 %85, i32 1
  %210 = bitcast [8 x i8]* %209 to i32*
  store i32 %176, i32* %210, align 8
  %211 = add i64 %20, -1
  br label %212

212:                                              ; preds = %91, %135, %116, %19
  %213 = phi i64 [ %20, %19 ], [ %20, %91 ], [ %20, %116 ], [ %211, %135 ]
  %214 = add i64 %213, 1
  %215 = load i64, i64* %4, align 8
  %216 = icmp eq i64 %214, %215
  br i1 %216, label %11, label %19
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, %"union.absl::container_internal::map_slot_type.846"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE4findIS5_EENSK_8iteratorERSH_(%"class.absl::container_internal::raw_hash_set.845"*, %"class.rx::vk::ShaderBuffersDescriptorDesc"* dereferenceable(152)) local_unnamed_addr #9 comdat align 2 {
  %3 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %4 = tail call i64 @_ZNK2rx2vk27ShaderBuffersDescriptorDesc4hashEv(%"class.rx::vk::ShaderBuffersDescriptorDesc"* %1) #15
  %5 = add i64 %4, %3
  %6 = zext i64 %5 to i128
  %7 = mul nuw i128 %6, 11376068507788127593
  %8 = lshr i128 %7, 64
  %9 = xor i128 %8, %7
  %10 = trunc i128 %9 to i64
  %11 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.845", %"class.absl::container_internal::raw_hash_set.845"* %0, i64 0, i32 0
  %12 = bitcast %"class.absl::container_internal::raw_hash_set.845"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.845", %"class.absl::container_internal::raw_hash_set.845"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %10, 7
  %17 = lshr i64 %13, 12
  %18 = xor i64 %16, %17
  %19 = trunc i128 %9 to i8
  %20 = and i8 %19, 127
  %21 = insertelement <16 x i8> undef, i8 %20, i32 0
  %22 = shufflevector <16 x i8> %21, <16 x i8> undef, <16 x i32> zeroinitializer
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.845", %"class.absl::container_internal::raw_hash_set.845"* %0, i64 0, i32 1
  %24 = inttoptr i64 %13 to i8*
  br label %25

25:                                               ; preds = %61, %2
  %26 = phi i8* [ %24, %2 ], [ %64, %61 ]
  %27 = phi i64 [ %18, %2 ], [ %63, %61 ]
  %28 = phi i64 [ 0, %2 ], [ %62, %61 ]
  %29 = and i64 %27, %15
  %30 = getelementptr inbounds i8, i8* %26, i64 %29
  %31 = bitcast i8* %30 to <16 x i8>*
  %32 = load <16 x i8>, <16 x i8>* %31, align 1
  %33 = icmp eq <16 x i8> %22, %32
  %34 = bitcast <16 x i1> %33 to i16
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %57, label %36

36:                                               ; preds = %25
  %37 = zext i16 %34 to i32
  br label %38

38:                                               ; preds = %47, %36
  %39 = phi i32 [ %49, %47 ], [ %37, %36 ]
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 false) #15, !range !8
  %41 = load %"union.absl::container_internal::map_slot_type.846"*, %"union.absl::container_internal::map_slot_type.846"** %23, align 8
  %42 = zext i32 %40 to i64
  %43 = add i64 %29, %42
  %44 = and i64 %43, %15
  %45 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %41, i64 %44, i32 0, i32 0
  %46 = tail call zeroext i1 @_ZNK2rx2vk27ShaderBuffersDescriptorDesceqERKS1_(%"class.rx::vk::ShaderBuffersDescriptorDesc"* %45, %"class.rx::vk::ShaderBuffersDescriptorDesc"* dereferenceable(152) %1) #15
  br i1 %46, label %51, label %47, !prof !6

47:                                               ; preds = %38
  %48 = add i32 %39, -1
  %49 = and i32 %48, %39
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %57, label %38

51:                                               ; preds = %38
  %52 = load i8*, i8** %11, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %44
  %54 = load %"union.absl::container_internal::map_slot_type.846"*, %"union.absl::container_internal::map_slot_type.846"** %23, align 8
  %55 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.846", %"union.absl::container_internal::map_slot_type.846"* %54, i64 %44
  %56 = icmp ne i8* %53, null
  tail call void @llvm.assume(i1 %56) #15
  br label %65

57:                                               ; preds = %47, %25
  %58 = icmp eq <16 x i8> %32, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %59 = bitcast <16 x i1> %58 to i16
  %60 = icmp eq i16 %59, 0
  br i1 %60, label %61, label %65, !prof !7

61:                                               ; preds = %57
  %62 = add i64 %28, 16
  %63 = add i64 %62, %29
  %64 = load i8*, i8** %11, align 8
  br label %25

65:                                               ; preds = %57, %51
  %66 = phi %"union.absl::container_internal::map_slot_type.846"* [ %55, %51 ], [ undef, %57 ]
  %67 = phi i8* [ %53, %51 ], [ null, %57 ]
  %68 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type.846"* } undef, i8* %67, 0
  %69 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type.846"* } %68, %"union.absl::container_internal::map_slot_type.846"* %66, 1
  ret { i8*, %"union.absl::container_internal::map_slot_type.846"* } %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, %"union.absl::container_internal::map_slot_type.829"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE4findIS5_EENSK_8iteratorERSH_(%"class.absl::container_internal::raw_hash_set.828"*, %"class.rx::vk::TextureDescriptorDesc"* dereferenceable(1156)) local_unnamed_addr #9 comdat align 2 {
  %3 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %4 = tail call i64 @_ZNK2rx2vk21TextureDescriptorDesc4hashEv(%"class.rx::vk::TextureDescriptorDesc"* %1) #15
  %5 = add i64 %4, %3
  %6 = zext i64 %5 to i128
  %7 = mul nuw i128 %6, 11376068507788127593
  %8 = lshr i128 %7, 64
  %9 = xor i128 %8, %7
  %10 = trunc i128 %9 to i64
  %11 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.828", %"class.absl::container_internal::raw_hash_set.828"* %0, i64 0, i32 0
  %12 = bitcast %"class.absl::container_internal::raw_hash_set.828"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.828", %"class.absl::container_internal::raw_hash_set.828"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %10, 7
  %17 = lshr i64 %13, 12
  %18 = xor i64 %16, %17
  %19 = trunc i128 %9 to i8
  %20 = and i8 %19, 127
  %21 = insertelement <16 x i8> undef, i8 %20, i32 0
  %22 = shufflevector <16 x i8> %21, <16 x i8> undef, <16 x i32> zeroinitializer
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.828", %"class.absl::container_internal::raw_hash_set.828"* %0, i64 0, i32 1
  %24 = inttoptr i64 %13 to i8*
  br label %25

25:                                               ; preds = %61, %2
  %26 = phi i8* [ %24, %2 ], [ %64, %61 ]
  %27 = phi i64 [ %18, %2 ], [ %63, %61 ]
  %28 = phi i64 [ 0, %2 ], [ %62, %61 ]
  %29 = and i64 %27, %15
  %30 = getelementptr inbounds i8, i8* %26, i64 %29
  %31 = bitcast i8* %30 to <16 x i8>*
  %32 = load <16 x i8>, <16 x i8>* %31, align 1
  %33 = icmp eq <16 x i8> %22, %32
  %34 = bitcast <16 x i1> %33 to i16
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %57, label %36

36:                                               ; preds = %25
  %37 = zext i16 %34 to i32
  br label %38

38:                                               ; preds = %47, %36
  %39 = phi i32 [ %49, %47 ], [ %37, %36 ]
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 false) #15, !range !8
  %41 = load %"union.absl::container_internal::map_slot_type.829"*, %"union.absl::container_internal::map_slot_type.829"** %23, align 8
  %42 = zext i32 %40 to i64
  %43 = add i64 %29, %42
  %44 = and i64 %43, %15
  %45 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %41, i64 %44, i32 0, i32 0
  %46 = tail call zeroext i1 @_ZNK2rx2vk21TextureDescriptorDesceqERKS1_(%"class.rx::vk::TextureDescriptorDesc"* %45, %"class.rx::vk::TextureDescriptorDesc"* dereferenceable(1156) %1) #15
  br i1 %46, label %51, label %47, !prof !6

47:                                               ; preds = %38
  %48 = add i32 %39, -1
  %49 = and i32 %48, %39
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %57, label %38

51:                                               ; preds = %38
  %52 = load i8*, i8** %11, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %44
  %54 = load %"union.absl::container_internal::map_slot_type.829"*, %"union.absl::container_internal::map_slot_type.829"** %23, align 8
  %55 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %54, i64 %44
  %56 = icmp ne i8* %53, null
  tail call void @llvm.assume(i1 %56) #15
  br label %65

57:                                               ; preds = %47, %25
  %58 = icmp eq <16 x i8> %32, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %59 = bitcast <16 x i1> %58 to i16
  %60 = icmp eq i16 %59, 0
  br i1 %60, label %61, label %65, !prof !7

61:                                               ; preds = %57
  %62 = add i64 %28, 16
  %63 = add i64 %62, %29
  %64 = load i8*, i8** %11, align 8
  br label %25

65:                                               ; preds = %57, %51
  %66 = phi %"union.absl::container_internal::map_slot_type.829"* [ %55, %51 ], [ undef, %57 ]
  %67 = phi i8* [ %53, %51 ], [ null, %57 ]
  %68 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type.829"* } undef, i8* %67, 0
  %69 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type.829"* } %68, %"union.absl::container_internal::map_slot_type.829"* %66, 1
  ret { i8*, %"union.absl::container_internal::map_slot_type.829"* } %69
}

declare zeroext i1 @_ZNK2rx2vk21TextureDescriptorDesceqERKS1_(%"class.rx::vk::TextureDescriptorDesc"*, %"class.rx::vk::TextureDescriptorDesc"* dereferenceable(1156)) local_unnamed_addr #6

declare i64 @_ZNK2rx2vk21TextureDescriptorDesc4hashEv(%"class.rx::vk::TextureDescriptorDesc"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE22find_or_prepare_insertIS5_EENSG_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.828"*, %"class.rx::vk::TextureDescriptorDesc"* dereferenceable(1156)) local_unnamed_addr #9 comdat align 2 {
  %3 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %4 = tail call i64 @_ZNK2rx2vk21TextureDescriptorDesc4hashEv(%"class.rx::vk::TextureDescriptorDesc"* %1) #15
  %5 = add i64 %4, %3
  %6 = zext i64 %5 to i128
  %7 = mul nuw i128 %6, 11376068507788127593
  %8 = lshr i128 %7, 64
  %9 = xor i128 %8, %7
  %10 = trunc i128 %9 to i64
  %11 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.828", %"class.absl::container_internal::raw_hash_set.828"* %0, i64 0, i32 0
  %12 = bitcast %"class.absl::container_internal::raw_hash_set.828"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.828", %"class.absl::container_internal::raw_hash_set.828"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %10, 7
  %17 = lshr i64 %13, 12
  %18 = xor i64 %16, %17
  %19 = trunc i128 %9 to i8
  %20 = and i8 %19, 127
  %21 = insertelement <16 x i8> undef, i8 %20, i32 0
  %22 = shufflevector <16 x i8> %21, <16 x i8> undef, <16 x i32> zeroinitializer
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.828", %"class.absl::container_internal::raw_hash_set.828"* %0, i64 0, i32 1
  %24 = inttoptr i64 %13 to i8*
  br label %25

25:                                               ; preds = %55, %2
  %26 = phi i8* [ %24, %2 ], [ %58, %55 ]
  %27 = phi i64 [ %18, %2 ], [ %57, %55 ]
  %28 = phi i64 [ 0, %2 ], [ %56, %55 ]
  %29 = and i64 %27, %15
  %30 = getelementptr inbounds i8, i8* %26, i64 %29
  %31 = bitcast i8* %30 to <16 x i8>*
  %32 = load <16 x i8>, <16 x i8>* %31, align 1
  %33 = icmp eq <16 x i8> %22, %32
  %34 = bitcast <16 x i1> %33 to i16
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %51, label %36

36:                                               ; preds = %25
  %37 = zext i16 %34 to i32
  br label %38

38:                                               ; preds = %36, %47
  %39 = phi i32 [ %49, %47 ], [ %37, %36 ]
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 false) #15, !range !8
  %41 = load %"union.absl::container_internal::map_slot_type.829"*, %"union.absl::container_internal::map_slot_type.829"** %23, align 8
  %42 = zext i32 %40 to i64
  %43 = add i64 %29, %42
  %44 = and i64 %43, %15
  %45 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %41, i64 %44, i32 0, i32 0
  %46 = tail call zeroext i1 @_ZNK2rx2vk21TextureDescriptorDesceqERKS1_(%"class.rx::vk::TextureDescriptorDesc"* %45, %"class.rx::vk::TextureDescriptorDesc"* dereferenceable(1156) %1) #15
  br i1 %46, label %61, label %47, !prof !6

47:                                               ; preds = %38
  %48 = add i32 %39, -1
  %49 = and i32 %48, %39
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %38

51:                                               ; preds = %47, %25
  %52 = icmp eq <16 x i8> %32, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %53 = bitcast <16 x i1> %52 to i16
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %55, label %59, !prof !7

55:                                               ; preds = %51
  %56 = add i64 %28, 16
  %57 = add i64 %56, %29
  %58 = load i8*, i8** %11, align 8
  br label %25

59:                                               ; preds = %51
  %60 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.828"* %0, i64 %10)
  br label %61

61:                                               ; preds = %38, %59
  %62 = phi i64 [ %60, %59 ], [ %44, %38 ]
  %63 = phi i8 [ 1, %59 ], [ 0, %38 ]
  %64 = insertvalue { i64, i8 } undef, i64 %62, 0
  %65 = insertvalue { i64, i8 } %64, i8 %63, 1
  ret { i64, i8 } %65
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.828"*, i64) local_unnamed_addr #18 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.828", %"class.absl::container_internal::raw_hash_set.828"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.828", %"class.absl::container_internal::raw_hash_set.828"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #15, !range !8
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.828", %"class.absl::container_internal::raw_hash_set.828"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !6

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.828"* %0, i64 1) #15
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.828", %"class.absl::container_internal::raw_hash_set.828"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.828"* %0) #15
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.828"* %0, i64 %58) #15
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #15, !range !8
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.828", %"class.absl::container_internal::raw_hash_set.828"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.828"*, i64) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.828", %"class.absl::container_internal::raw_hash_set.828"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.828", %"class.absl::container_internal::raw_hash_set.828"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.829"*, %"union.absl::container_internal::map_slot_type.829"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.828", %"class.absl::container_internal::raw_hash_set.828"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = mul i64 %1, 1168
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #20
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.829"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #15
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.828", %"class.absl::container_internal::raw_hash_set.828"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.828", %"class.absl::container_internal::raw_hash_set.828"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %96, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %92
  br i1 %24, label %96, label %95

28:                                               ; preds = %25, %92
  %29 = phi i64 [ 0, %25 ], [ %93, %92 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %92

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %6, i64 %29, i32 0, i32 0
  %35 = tail call i64 @_ZNK2rx2vk21TextureDescriptorDesc4hashEv(%"class.rx::vk::TextureDescriptorDesc"* %34) #15
  %36 = add i64 %35, %26
  %37 = zext i64 %36 to i128
  %38 = mul nuw i128 %37, 11376068507788127593
  %39 = lshr i128 %38, 64
  %40 = xor i128 %39, %38
  %41 = trunc i128 %40 to i64
  %42 = load i8*, i8** %3, align 8
  %43 = load i64, i64* %7, align 8
  %44 = lshr i64 %41, 7
  %45 = ptrtoint i8* %42 to i64
  %46 = lshr i64 %45, 12
  %47 = xor i64 %44, %46
  %48 = and i64 %47, %43
  %49 = getelementptr inbounds i8, i8* %42, i64 %48
  %50 = bitcast i8* %49 to <16 x i8>*
  %51 = load <16 x i8>, <16 x i8>* %50, align 1
  %52 = icmp slt <16 x i8> %51, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %53 = bitcast <16 x i1> %52 to i16
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %33, %55
  %56 = phi i64 [ %60, %55 ], [ %48, %33 ]
  %57 = phi i64 [ %58, %55 ], [ 0, %33 ]
  %58 = add i64 %57, 16
  %59 = add i64 %58, %56
  %60 = and i64 %59, %43
  %61 = getelementptr inbounds i8, i8* %42, i64 %60
  %62 = bitcast i8* %61 to <16 x i8>*
  %63 = load <16 x i8>, <16 x i8>* %62, align 1
  %64 = icmp slt <16 x i8> %63, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %55, label %67

67:                                               ; preds = %55, %33
  %68 = phi i64 [ %48, %33 ], [ %60, %55 ]
  %69 = phi i16 [ %53, %33 ], [ %65, %55 ]
  %70 = zext i16 %69 to i32
  %71 = tail call i32 @llvm.cttz.i32(i32 %70, i1 false) #15, !range !8
  %72 = zext i32 %71 to i64
  %73 = add i64 %68, %72
  %74 = and i64 %73, %43
  %75 = trunc i128 %40 to i8
  %76 = and i8 %75, 127
  %77 = getelementptr inbounds i8, i8* %42, i64 %74
  store i8 %76, i8* %77, align 1
  %78 = load i8*, i8** %3, align 8
  %79 = add i64 %74, -15
  %80 = load i64, i64* %7, align 8
  %81 = and i64 %79, %80
  %82 = and i64 %80, 15
  %83 = add i64 %81, %82
  %84 = getelementptr inbounds i8, i8* %78, i64 %83
  store i8 %76, i8* %84, align 1
  %85 = load %"union.absl::container_internal::map_slot_type.829"*, %"union.absl::container_internal::map_slot_type.829"** %5, align 8
  %86 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %85, i64 %74, i32 0, i32 0
  tail call void @_ZN2rx2vk21TextureDescriptorDescC1ERKS1_(%"class.rx::vk::TextureDescriptorDesc"* %86, %"class.rx::vk::TextureDescriptorDesc"* dereferenceable(1156) %34) #15
  %87 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %85, i64 %74, i32 0, i32 1
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %6, i64 %29, i32 0, i32 1
  %89 = bitcast %struct.VkDescriptorSet_T** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %struct.VkDescriptorSet_T** %87 to i64*
  store i64 %90, i64* %91, align 8
  tail call void @_ZN2rx2vk21TextureDescriptorDescD1Ev(%"class.rx::vk::TextureDescriptorDesc"* %34) #15
  br label %92

92:                                               ; preds = %28, %67
  %93 = add nuw i64 %29, 1
  %94 = icmp eq i64 %93, %8
  br i1 %94, label %27, label %28

95:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #20
  br label %96

96:                                               ; preds = %2, %27, %95
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.828"*) local_unnamed_addr #18 comdat align 2 {
  %2 = alloca %"union.absl::container_internal::map_slot_type.829", align 8
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.828", %"class.absl::container_internal::raw_hash_set.828"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.828", %"class.absl::container_internal::raw_hash_set.828"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %4, i64 %6) #15
  %7 = bitcast %"union.absl::container_internal::map_slot_type.829"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1168, i8* nonnull %7) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 1168, i1 false)
  %8 = load i64, i64* %5, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.828", %"class.absl::container_internal::raw_hash_set.828"* %0, i64 0, i32 1
  %12 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %13 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %2, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %2, i64 0, i32 0, i32 1
  %15 = bitcast %struct.VkDescriptorSet_T** %14 to i64*
  br label %24

16:                                               ; preds = %139, %1
  %17 = phi i64 [ 0, %1 ], [ %141, %139 ]
  %18 = lshr i64 %17, 3
  %19 = sub i64 %17, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.828", %"class.absl::container_internal::raw_hash_set.828"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.828", %"class.absl::container_internal::raw_hash_set.828"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 1168, i8* nonnull %7) #15
  ret void

24:                                               ; preds = %10, %139
  %25 = phi i64 [ 0, %10 ], [ %141, %139 ]
  %26 = load i8*, i8** %3, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 %25
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, -2
  br i1 %29, label %30, label %139

30:                                               ; preds = %24
  %31 = load %"union.absl::container_internal::map_slot_type.829"*, %"union.absl::container_internal::map_slot_type.829"** %11, align 8
  %32 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %31, i64 %25, i32 0, i32 0
  %33 = call i64 @_ZNK2rx2vk21TextureDescriptorDesc4hashEv(%"class.rx::vk::TextureDescriptorDesc"* %32) #15
  %34 = add i64 %33, %12
  %35 = zext i64 %34 to i128
  %36 = mul nuw i128 %35, 11376068507788127593
  %37 = lshr i128 %36, 64
  %38 = xor i128 %37, %36
  %39 = trunc i128 %38 to i64
  %40 = load i8*, i8** %3, align 8
  %41 = load i64, i64* %5, align 8
  %42 = lshr i64 %39, 7
  %43 = ptrtoint i8* %40 to i64
  %44 = lshr i64 %43, 12
  %45 = xor i64 %42, %44
  %46 = and i64 %45, %41
  %47 = getelementptr inbounds i8, i8* %40, i64 %46
  %48 = bitcast i8* %47 to <16 x i8>*
  %49 = load <16 x i8>, <16 x i8>* %48, align 1
  %50 = icmp slt <16 x i8> %49, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %51 = bitcast <16 x i1> %50 to i16
  %52 = icmp eq i16 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %30, %53
  %54 = phi i64 [ %58, %53 ], [ %46, %30 ]
  %55 = phi i64 [ %56, %53 ], [ 0, %30 ]
  %56 = add i64 %55, 16
  %57 = add i64 %56, %54
  %58 = and i64 %57, %41
  %59 = getelementptr inbounds i8, i8* %40, i64 %58
  %60 = bitcast i8* %59 to <16 x i8>*
  %61 = load <16 x i8>, <16 x i8>* %60, align 1
  %62 = icmp slt <16 x i8> %61, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %63 = bitcast <16 x i1> %62 to i16
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %53, label %65

65:                                               ; preds = %53, %30
  %66 = phi i64 [ %46, %30 ], [ %58, %53 ]
  %67 = phi i16 [ %51, %30 ], [ %63, %53 ]
  %68 = zext i16 %67 to i32
  %69 = call i32 @llvm.cttz.i32(i32 %68, i1 false) #15, !range !8
  %70 = zext i32 %69 to i64
  %71 = add i64 %66, %70
  %72 = and i64 %71, %41
  %73 = sub i64 %72, %46
  %74 = sub i64 %25, %46
  %75 = xor i64 %73, %74
  %76 = and i64 %75, %41
  %77 = icmp ult i64 %76, 16
  br i1 %77, label %78, label %89, !prof !6

78:                                               ; preds = %65
  %79 = trunc i128 %38 to i8
  %80 = and i8 %79, 127
  %81 = getelementptr inbounds i8, i8* %40, i64 %25
  store i8 %80, i8* %81, align 1
  %82 = load i8*, i8** %3, align 8
  %83 = add i64 %25, -15
  %84 = load i64, i64* %5, align 8
  %85 = and i64 %84, %83
  %86 = and i64 %84, 15
  %87 = add i64 %85, %86
  %88 = getelementptr inbounds i8, i8* %82, i64 %87
  store i8 %80, i8* %88, align 1
  br label %139

89:                                               ; preds = %65
  %90 = getelementptr inbounds i8, i8* %40, i64 %72
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, -128
  %93 = trunc i128 %38 to i8
  %94 = and i8 %93, 127
  store i8 %94, i8* %90, align 1
  %95 = load i8*, i8** %3, align 8
  %96 = add i64 %72, -15
  %97 = load i64, i64* %5, align 8
  %98 = and i64 %97, %96
  %99 = and i64 %97, 15
  %100 = add i64 %98, %99
  %101 = getelementptr inbounds i8, i8* %95, i64 %100
  store i8 %94, i8* %101, align 1
  %102 = load %"union.absl::container_internal::map_slot_type.829"*, %"union.absl::container_internal::map_slot_type.829"** %11, align 8
  br i1 %92, label %103, label %120

103:                                              ; preds = %89
  %104 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %102, i64 %72, i32 0, i32 0
  %105 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %102, i64 %25, i32 0, i32 0
  call void @_ZN2rx2vk21TextureDescriptorDescC1ERKS1_(%"class.rx::vk::TextureDescriptorDesc"* %104, %"class.rx::vk::TextureDescriptorDesc"* dereferenceable(1156) %105) #15
  %106 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %102, i64 %72, i32 0, i32 1
  %107 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %102, i64 %25, i32 0, i32 1
  %108 = bitcast %struct.VkDescriptorSet_T** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %struct.VkDescriptorSet_T** %106 to i64*
  store i64 %109, i64* %110, align 8
  call void @_ZN2rx2vk21TextureDescriptorDescD1Ev(%"class.rx::vk::TextureDescriptorDesc"* %105) #15
  %111 = load i8*, i8** %3, align 8
  %112 = getelementptr inbounds i8, i8* %111, i64 %25
  store i8 -128, i8* %112, align 1
  %113 = load i8*, i8** %3, align 8
  %114 = add i64 %25, -15
  %115 = load i64, i64* %5, align 8
  %116 = and i64 %115, %114
  %117 = and i64 %115, 15
  %118 = add i64 %116, %117
  %119 = getelementptr inbounds i8, i8* %113, i64 %118
  store i8 -128, i8* %119, align 1
  br label %139

120:                                              ; preds = %89
  %121 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %102, i64 %25, i32 0, i32 0
  call void @_ZN2rx2vk21TextureDescriptorDescC1ERKS1_(%"class.rx::vk::TextureDescriptorDesc"* nonnull %13, %"class.rx::vk::TextureDescriptorDesc"* dereferenceable(1156) %121) #15
  %122 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %102, i64 %25, i32 0, i32 1
  %123 = bitcast %struct.VkDescriptorSet_T** %122 to i64*
  %124 = load i64, i64* %123, align 8
  store i64 %124, i64* %15, align 8
  call void @_ZN2rx2vk21TextureDescriptorDescD1Ev(%"class.rx::vk::TextureDescriptorDesc"* %121) #15
  %125 = load %"union.absl::container_internal::map_slot_type.829"*, %"union.absl::container_internal::map_slot_type.829"** %11, align 8
  %126 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %125, i64 %25, i32 0, i32 0
  %127 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %125, i64 %72, i32 0, i32 0
  call void @_ZN2rx2vk21TextureDescriptorDescC1ERKS1_(%"class.rx::vk::TextureDescriptorDesc"* %126, %"class.rx::vk::TextureDescriptorDesc"* dereferenceable(1156) %127) #15
  %128 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %125, i64 %25, i32 0, i32 1
  %129 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %125, i64 %72, i32 0, i32 1
  %130 = bitcast %struct.VkDescriptorSet_T** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %struct.VkDescriptorSet_T** %128 to i64*
  store i64 %131, i64* %132, align 8
  call void @_ZN2rx2vk21TextureDescriptorDescD1Ev(%"class.rx::vk::TextureDescriptorDesc"* %127) #15
  %133 = load %"union.absl::container_internal::map_slot_type.829"*, %"union.absl::container_internal::map_slot_type.829"** %11, align 8
  %134 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %133, i64 %72, i32 0, i32 0
  call void @_ZN2rx2vk21TextureDescriptorDescC1ERKS1_(%"class.rx::vk::TextureDescriptorDesc"* %134, %"class.rx::vk::TextureDescriptorDesc"* nonnull dereferenceable(1156) %13) #15
  %135 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.829", %"union.absl::container_internal::map_slot_type.829"* %133, i64 %72, i32 0, i32 1
  %136 = load i64, i64* %15, align 8
  %137 = bitcast %struct.VkDescriptorSet_T** %135 to i64*
  store i64 %136, i64* %137, align 8
  call void @_ZN2rx2vk21TextureDescriptorDescD1Ev(%"class.rx::vk::TextureDescriptorDesc"* nonnull %13) #15
  %138 = add i64 %25, -1
  br label %139

139:                                              ; preds = %78, %120, %103, %24
  %140 = phi i64 [ %25, %24 ], [ %25, %78 ], [ %25, %103 ], [ %138, %120 ]
  %141 = add i64 %140, 1
  %142 = load i64, i64* %5, align 8
  %143 = icmp eq i64 %141, %142
  br i1 %143, label %16, label %24
}

declare void @_ZN2rx2vk21TextureDescriptorDescC1ERKS1_(%"class.rx::vk::TextureDescriptorDesc"*, %"class.rx::vk::TextureDescriptorDesc"* dereferenceable(1156)) unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #19

attributes #0 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { cold noreturn nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { nounwind readnone speculatable }
attributes #17 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #19 = { nofree nounwind readonly }
attributes #20 = { builtin nounwind }
attributes #21 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN2gl17BinaryInputStream10readStringEv: argument 0"}
!5 = distinct !{!5, !"_ZN2gl17BinaryInputStream10readStringEv"}
!6 = !{!"branch_weights", i32 2000, i32 1}
!7 = !{!"branch_weights", i32 1, i32 2000}
!8 = !{i32 0, i32 33}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = !{!12, !14, !16, !18, !20, !22}
!12 = distinct !{!12, !13, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE19EmplaceDecomposableclIS5_JRKNSC_21piecewise_construct_tENSC_5tupleIJRSH_EEENSQ_IJRS7_EEEEEENSG_INSK_8iteratorEbEERKT_DpOT0_: argument 0"}
!13 = distinct !{!13, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE19EmplaceDecomposableclIS5_JRKNSC_21piecewise_construct_tENSC_5tupleIJRSH_EEENSQ_IJRS7_EEEEEENSG_INSK_8iteratorEbEERKT_DpOT0_"}
!14 = distinct !{!14, !15, !"_ZN4absl18container_internal15memory_internal17DecomposePairImplINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSE_9allocatorINSE_4pairIKS7_S9_EEEEE19EmplaceDecomposableERSJ_NSE_5tupleIJRS9_EEEEEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEL_ZNSE_L19piecewise_constructEEclsr3stdE7declvalINSP_IJST_EEEEEclsr3stdE7declvalIT1_EEEEOSS_NSI_ISW_SX_EE: argument 0"}
!15 = distinct !{!15, !"_ZN4absl18container_internal15memory_internal17DecomposePairImplINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSE_9allocatorINSE_4pairIKS7_S9_EEEEE19EmplaceDecomposableERSJ_NSE_5tupleIJRS9_EEEEEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEL_ZNSE_L19piecewise_constructEEclsr3stdE7declvalINSP_IJST_EEEEEclsr3stdE7declvalIT1_EEEEOSS_NSI_ISW_SX_EE"}
!16 = distinct !{!16, !17, !"_ZN4absl18container_internal13DecomposePairINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS6_EENSt3__18equal_toIS6_EENSD_9allocatorINSD_4pairIKS6_S8_EEEEE19EmplaceDecomposableEJRSI_RS8_EEEDTclsr15memory_internalE17DecomposePairImplclsr3stdE7forwardIT_Efp_Ecl8PairArgsspclsr3stdE7forwardIT0_Efp0_EEEEOSP_DpOSQ_: argument 0"}
!17 = distinct !{!17, !"_ZN4absl18container_internal13DecomposePairINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS6_EENSt3__18equal_toIS6_EENSD_9allocatorINSD_4pairIKS6_S8_EEEEE19EmplaceDecomposableEJRSI_RS8_EEEDTclsr15memory_internalE17DecomposePairImplclsr3stdE7forwardIT_Efp_Ecl8PairArgsspclsr3stdE7forwardIT0_Efp0_EEEEOSP_DpOSQ_"}
!18 = distinct !{!18, !19, !"_ZN4absl18container_internal17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TE5applyINS0_12raw_hash_setIS7_NS_13hash_internal4HashIS4_EENSt3__18equal_toIS4_EENSD_9allocatorINSD_4pairIKS4_S6_EEEEE19EmplaceDecomposableEJRSI_RS6_EEEDTclsr4absl18container_internalE13DecomposePairclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSP_DpOSQ_: argument 0"}
!19 = distinct !{!19, !"_ZN4absl18container_internal17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TE5applyINS0_12raw_hash_setIS7_NS_13hash_internal4HashIS4_EENSt3__18equal_toIS4_EENSD_9allocatorINSD_4pairIKS4_S6_EEEEE19EmplaceDecomposableEJRSI_RS6_EEEDTclsr4absl18container_internalE13DecomposePairclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSP_DpOSQ_"}
!20 = distinct !{!20, !21, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEEvE5applyINS0_12raw_hash_setIS8_NS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSF_9allocatorINSF_4pairIKS5_S7_EEEEE19EmplaceDecomposableEJRSK_RS7_ES8_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSS_DpOST_: argument 0"}
!21 = distinct !{!21, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEEvE5applyINS0_12raw_hash_setIS8_NS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSF_9allocatorINSF_4pairIKS5_S7_EEEEE19EmplaceDecomposableEJRSK_RS7_ES8_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSS_DpOST_"}
!22 = distinct !{!22, !23, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE7emplaceIJRSH_RS7_ELi0EEENSG_INSK_8iteratorEbEEDpOT_: argument 0"}
!23 = distinct !{!23, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk28UniformsAndXfbDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE7emplaceIJRSH_RS7_ELi0EEENSG_INSK_8iteratorEbEEDpOT_"}
!24 = distinct !{!24, !25}
!25 = !{!"llvm.loop.isvectorized", i32 1}
!26 = distinct !{!26, !10}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!29 = distinct !{!29, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!30 = distinct !{!30, !31, !25}
!31 = !{!"llvm.loop.unroll.runtime.disable"}
!32 = distinct !{!32, !25}
!33 = distinct !{!33, !10}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!36 = distinct !{!36, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!37 = distinct !{!37, !31, !25}
!38 = !{i64 0, i64 65}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!41 = distinct !{!41, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!44 = distinct !{!44, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!47 = distinct !{!47, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!50 = distinct !{!50, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!53 = distinct !{!53, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!54 = distinct !{!54, !10}
!55 = !{!56, !58, !60, !62, !64, !66}
!56 = distinct !{!56, !57, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE19EmplaceDecomposableclIS5_JRKNSC_21piecewise_construct_tENSC_5tupleIJRSH_EEENSQ_IJRS7_EEEEEENSG_INSK_8iteratorEbEERKT_DpOT0_: argument 0"}
!57 = distinct !{!57, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE19EmplaceDecomposableclIS5_JRKNSC_21piecewise_construct_tENSC_5tupleIJRSH_EEENSQ_IJRS7_EEEEEENSG_INSK_8iteratorEbEERKT_DpOT0_"}
!58 = distinct !{!58, !59, !"_ZN4absl18container_internal15memory_internal17DecomposePairImplINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSE_9allocatorINSE_4pairIKS7_S9_EEEEE19EmplaceDecomposableERSJ_NSE_5tupleIJRS9_EEEEEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEL_ZNSE_L19piecewise_constructEEclsr3stdE7declvalINSP_IJST_EEEEEclsr3stdE7declvalIT1_EEEEOSS_NSI_ISW_SX_EE: argument 0"}
!59 = distinct !{!59, !"_ZN4absl18container_internal15memory_internal17DecomposePairImplINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSE_9allocatorINSE_4pairIKS7_S9_EEEEE19EmplaceDecomposableERSJ_NSE_5tupleIJRS9_EEEEEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEL_ZNSE_L19piecewise_constructEEclsr3stdE7declvalINSP_IJST_EEEEEclsr3stdE7declvalIT1_EEEEOSS_NSI_ISW_SX_EE"}
!60 = distinct !{!60, !61, !"_ZN4absl18container_internal13DecomposePairINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS6_EENSt3__18equal_toIS6_EENSD_9allocatorINSD_4pairIKS6_S8_EEEEE19EmplaceDecomposableEJRSI_RS8_EEEDTclsr15memory_internalE17DecomposePairImplclsr3stdE7forwardIT_Efp_Ecl8PairArgsspclsr3stdE7forwardIT0_Efp0_EEEEOSP_DpOSQ_: argument 0"}
!61 = distinct !{!61, !"_ZN4absl18container_internal13DecomposePairINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS6_EENSt3__18equal_toIS6_EENSD_9allocatorINSD_4pairIKS6_S8_EEEEE19EmplaceDecomposableEJRSI_RS8_EEEDTclsr15memory_internalE17DecomposePairImplclsr3stdE7forwardIT_Efp_Ecl8PairArgsspclsr3stdE7forwardIT0_Efp0_EEEEOSP_DpOSQ_"}
!62 = distinct !{!62, !63, !"_ZN4absl18container_internal17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TE5applyINS0_12raw_hash_setIS7_NS_13hash_internal4HashIS4_EENSt3__18equal_toIS4_EENSD_9allocatorINSD_4pairIKS4_S6_EEEEE19EmplaceDecomposableEJRSI_RS6_EEEDTclsr4absl18container_internalE13DecomposePairclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSP_DpOSQ_: argument 0"}
!63 = distinct !{!63, !"_ZN4absl18container_internal17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TE5applyINS0_12raw_hash_setIS7_NS_13hash_internal4HashIS4_EENSt3__18equal_toIS4_EENSD_9allocatorINSD_4pairIKS4_S6_EEEEE19EmplaceDecomposableEJRSI_RS6_EEEDTclsr4absl18container_internalE13DecomposePairclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSP_DpOSQ_"}
!64 = distinct !{!64, !65, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEEvE5applyINS0_12raw_hash_setIS8_NS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSF_9allocatorINSF_4pairIKS5_S7_EEEEE19EmplaceDecomposableEJRSK_RS7_ES8_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSS_DpOST_: argument 0"}
!65 = distinct !{!65, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEEvE5applyINS0_12raw_hash_setIS8_NS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSF_9allocatorINSF_4pairIKS5_S7_EEEEE19EmplaceDecomposableEJRSK_RS7_ES8_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSS_DpOST_"}
!66 = distinct !{!66, !67, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE7emplaceIJRSH_RS7_ELi0EEENSG_INSK_8iteratorEbEEDpOT_: argument 0"}
!67 = distinct !{!67, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk27ShaderBuffersDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE7emplaceIJRSH_RS7_ELi0EEENSG_INSK_8iteratorEbEEDpOT_"}
!68 = distinct !{!68, !10}
!69 = !{!70, !72}
!70 = distinct !{!70, !71, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setISA_SB_SD_SH_E8iteratorEbEEOT_DpOT0_: argument 0"}
!71 = distinct !{!71, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setISA_SB_SD_SH_E8iteratorEbEEOT_DpOT0_"}
!72 = distinct !{!72, !73, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE11try_emplaceIS9_JELi0EEENSE_INS0_12raw_hash_setISA_SB_SD_SH_E8iteratorEbEERKT_DpOT0_: argument 0"}
!73 = distinct !{!73, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE11try_emplaceIS9_JELi0EEENSE_INS0_12raw_hash_setISA_SB_SD_SH_E8iteratorEbEERKT_DpOT0_"}
!74 = !{!75, !77}
!75 = distinct !{!75, !76, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setISA_SB_SD_SH_E8iteratorEbEEOT_DpOT0_: argument 0"}
!76 = distinct !{!76, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setISA_SB_SD_SH_E8iteratorEbEEOT_DpOT0_"}
!77 = distinct !{!77, !78, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE11try_emplaceIS9_JELi0EEENSE_INS0_12raw_hash_setISA_SB_SD_SH_E8iteratorEbEERKT_DpOT0_: argument 0"}
!78 = distinct !{!78, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE11try_emplaceIS9_JELi0EEENSE_INS0_12raw_hash_setISA_SB_SD_SH_E8iteratorEbEERKT_DpOT0_"}
!79 = distinct !{!79, !10}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!82 = distinct !{!82, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZNK2gl16FramebufferState23getColorAttachmentsMaskEv: argument 0"}
!85 = distinct !{!85, !"_ZNK2gl16FramebufferState23getColorAttachmentsMaskEv"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!88 = distinct !{!88, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!89 = distinct !{!89, !10}
!90 = !{!91}
!91 = distinct !{!91, !92, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!92 = distinct !{!92, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!93 = !{!94, !96, !98, !100, !102, !104}
!94 = distinct !{!94, !95, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE19EmplaceDecomposableclIS5_JRKNSC_21piecewise_construct_tENSC_5tupleIJRSH_EEENSQ_IJRS7_EEEEEENSG_INSK_8iteratorEbEERKT_DpOT0_: argument 0"}
!95 = distinct !{!95, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE19EmplaceDecomposableclIS5_JRKNSC_21piecewise_construct_tENSC_5tupleIJRSH_EEENSQ_IJRS7_EEEEEENSG_INSK_8iteratorEbEERKT_DpOT0_"}
!96 = distinct !{!96, !97, !"_ZN4absl18container_internal15memory_internal17DecomposePairImplINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSE_9allocatorINSE_4pairIKS7_S9_EEEEE19EmplaceDecomposableERSJ_NSE_5tupleIJRS9_EEEEEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEL_ZNSE_L19piecewise_constructEEclsr3stdE7declvalINSP_IJST_EEEEEclsr3stdE7declvalIT1_EEEEOSS_NSI_ISW_SX_EE: argument 0"}
!97 = distinct !{!97, !"_ZN4absl18container_internal15memory_internal17DecomposePairImplINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS7_EENSt3__18equal_toIS7_EENSE_9allocatorINSE_4pairIKS7_S9_EEEEE19EmplaceDecomposableERSJ_NSE_5tupleIJRS9_EEEEEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEL_ZNSE_L19piecewise_constructEEclsr3stdE7declvalINSP_IJST_EEEEEclsr3stdE7declvalIT1_EEEEOSS_NSI_ISW_SX_EE"}
!98 = distinct !{!98, !99, !"_ZN4absl18container_internal13DecomposePairINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS6_EENSt3__18equal_toIS6_EENSD_9allocatorINSD_4pairIKS6_S8_EEEEE19EmplaceDecomposableEJRSI_RS8_EEEDTclsr15memory_internalE17DecomposePairImplclsr3stdE7forwardIT_Efp_Ecl8PairArgsspclsr3stdE7forwardIT0_Efp0_EEEEOSP_DpOSQ_: argument 0"}
!99 = distinct !{!99, !"_ZN4absl18container_internal13DecomposePairINS0_12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS6_EENSt3__18equal_toIS6_EENSD_9allocatorINSD_4pairIKS6_S8_EEEEE19EmplaceDecomposableEJRSI_RS8_EEEDTclsr15memory_internalE17DecomposePairImplclsr3stdE7forwardIT_Efp_Ecl8PairArgsspclsr3stdE7forwardIT0_Efp0_EEEEOSP_DpOSQ_"}
!100 = distinct !{!100, !101, !"_ZN4absl18container_internal17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TE5applyINS0_12raw_hash_setIS7_NS_13hash_internal4HashIS4_EENSt3__18equal_toIS4_EENSD_9allocatorINSD_4pairIKS4_S6_EEEEE19EmplaceDecomposableEJRSI_RS6_EEEDTclsr4absl18container_internalE13DecomposePairclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSP_DpOSQ_: argument 0"}
!101 = distinct !{!101, !"_ZN4absl18container_internal17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TE5applyINS0_12raw_hash_setIS7_NS_13hash_internal4HashIS4_EENSt3__18equal_toIS4_EENSD_9allocatorINSD_4pairIKS4_S6_EEEEE19EmplaceDecomposableEJRSI_RS6_EEEDTclsr4absl18container_internalE13DecomposePairclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSP_DpOSQ_"}
!102 = distinct !{!102, !103, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEEvE5applyINS0_12raw_hash_setIS8_NS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSF_9allocatorINSF_4pairIKS5_S7_EEEEE19EmplaceDecomposableEJRSK_RS7_ES8_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSS_DpOST_: argument 0"}
!103 = distinct !{!103, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEEvE5applyINS0_12raw_hash_setIS8_NS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSF_9allocatorINSF_4pairIKS5_S7_EEEEE19EmplaceDecomposableEJRSK_RS7_ES8_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSS_DpOST_"}
!104 = distinct !{!104, !105, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE7emplaceIJRSH_RS7_ELi0EEENSG_INSK_8iteratorEbEEDpOT_: argument 0"}
!105 = distinct !{!105, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIN2rx2vk21TextureDescriptorDescEP17VkDescriptorSet_TEENS_13hash_internal4HashIS5_EENSt3__18equal_toIS5_EENSC_9allocatorINSC_4pairIKS5_S7_EEEEE7emplaceIJRSH_RS7_ELi0EEENSG_INSK_8iteratorEbEEDpOT_"}
!106 = !{!107, !109}
!107 = distinct !{!107, !108, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setISA_SB_SD_SH_E8iteratorEbEEOT_DpOT0_: argument 0"}
!108 = distinct !{!108, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setISA_SB_SD_SH_E8iteratorEbEEOT_DpOT0_"}
!109 = distinct !{!109, !110, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE11try_emplaceIS9_JELi0EEENSE_INS0_12raw_hash_setISA_SB_SD_SH_E8iteratorEbEERKT_DpOT0_: argument 0"}
!110 = distinct !{!110, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE11try_emplaceIS9_JELi0EEENSE_INS0_12raw_hash_setISA_SB_SD_SH_E8iteratorEbEERKT_DpOT0_"}
!111 = !{!112, !114}
!112 = distinct !{!112, !113, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setISA_SB_SD_SH_E8iteratorEbEEOT_DpOT0_: argument 0"}
!113 = distinct !{!113, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setISA_SB_SD_SH_E8iteratorEbEEOT_DpOT0_"}
!114 = distinct !{!114, !115, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE11try_emplaceIS9_JELi0EEENSE_INS0_12raw_hash_setISA_SB_SD_SH_E8iteratorEbEERKT_DpOT0_: argument 0"}
!115 = distinct !{!115, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEjEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_jEEEEE11try_emplaceIS9_JELi0EEENSE_INS0_12raw_hash_setISA_SB_SD_SH_E8iteratorEbEERKT_DpOT0_"}
!116 = !{!117}
!117 = distinct !{!117, !118}
!118 = distinct !{!118, !"LVerDomain"}
!119 = !{!120}
!120 = distinct !{!120, !118}
!121 = distinct !{!121, !25}
!122 = distinct !{!122, !10}
!123 = distinct !{!123, !25}
!124 = !{!125}
!125 = distinct !{!125, !126}
!126 = distinct !{!126, !"LVerDomain"}
!127 = !{!128}
!128 = distinct !{!128, !126}
!129 = distinct !{!129, !25}
!130 = distinct !{!130, !10}
!131 = distinct !{!131, !25}
!132 = !{!133}
!133 = distinct !{!133, !134}
!134 = distinct !{!134, !"LVerDomain"}
!135 = !{!136}
!136 = distinct !{!136, !134}
!137 = distinct !{!137, !25}
!138 = distinct !{!138, !10}
!139 = distinct !{!139, !25}
!140 = !{!141}
!141 = distinct !{!141, !142}
!142 = distinct !{!142, !"LVerDomain"}
!143 = !{!144}
!144 = distinct !{!144, !142}
!145 = distinct !{!145, !25}
!146 = distinct !{!146, !10}
!147 = distinct !{!147, !25}
!148 = !{!149}
!149 = distinct !{!149, !150}
!150 = distinct !{!150, !"LVerDomain"}
!151 = !{!152}
!152 = distinct !{!152, !150}
!153 = distinct !{!153, !25}
!154 = distinct !{!154, !10}
!155 = distinct !{!155, !25}
!156 = !{!"branch_weights", i32 4001, i32 1}
!157 = !{!"branch_weights", i32 2146410443, i32 1073205}
