; ModuleID = '../../third_party/protobuf/src/google/protobuf/util/internal/json_escaping.cc'
source_filename = "../../third_party/protobuf/src/google/protobuf/util/internal/json_escaping.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.google::protobuf::strings::ByteSource" = type { i32 (...)** }
%"class.google::protobuf::strings::ByteSink" = type { i32 (...)** }
%"class.google::protobuf::strings::ArrayByteSource" = type { %"class.google::protobuf::strings::ByteSource", %"class.google::protobuf::StringPiece" }
%"class.google::protobuf::StringPiece" = type { i8*, i64 }

@__const._ZN6google8protobuf4util9converter12JsonEscaping6EscapeEPNS0_7strings10ByteSourceEPNS4_8ByteSinkE.buffer = private unnamed_addr constant [12 x i8] c"\5Cudead\5Cubee\00", align 1
@_ZN6google8protobuf4util9converter12_GLOBAL__N_114kCommonEscapesE = internal constant [160 x [7 x i8]] [[7 x i8] c"\5Cu0000\00", [7 x i8] c"\5Cu0001\00", [7 x i8] c"\5Cu0002\00", [7 x i8] c"\5Cu0003\00", [7 x i8] c"\5Cu0004\00", [7 x i8] c"\5Cu0005\00", [7 x i8] c"\5Cu0006\00", [7 x i8] c"\5Cu0007\00", [7 x i8] c"\5Cb\00\00\00\00\00", [7 x i8] c"\5Ct\00\00\00\00\00", [7 x i8] c"\5Cn\00\00\00\00\00", [7 x i8] c"\5Cu000b\00", [7 x i8] c"\5Cf\00\00\00\00\00", [7 x i8] c"\5Cr\00\00\00\00\00", [7 x i8] c"\5Cu000e\00", [7 x i8] c"\5Cu000f\00", [7 x i8] c"\5Cu0010\00", [7 x i8] c"\5Cu0011\00", [7 x i8] c"\5Cu0012\00", [7 x i8] c"\5Cu0013\00", [7 x i8] c"\5Cu0014\00", [7 x i8] c"\5Cu0015\00", [7 x i8] c"\5Cu0016\00", [7 x i8] c"\5Cu0017\00", [7 x i8] c"\5Cu0018\00", [7 x i8] c"\5Cu0019\00", [7 x i8] c"\5Cu001a\00", [7 x i8] c"\5Cu001b\00", [7 x i8] c"\5Cu001c\00", [7 x i8] c"\5Cu001d\00", [7 x i8] c"\5Cu001e\00", [7 x i8] c"\5Cu001f\00", [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] c"\5C\22\00\00\00\00\00", [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] c"\5Cu003c\00", [7 x i8] zeroinitializer, [7 x i8] c"\5Cu003e\00", [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] c"\5C\5C\00\00\00\00\00", [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] zeroinitializer, [7 x i8] c"\5Cu007f\00", [7 x i8] c"\5Cu0080\00", [7 x i8] c"\5Cu0081\00", [7 x i8] c"\5Cu0082\00", [7 x i8] c"\5Cu0083\00", [7 x i8] c"\5Cu0084\00", [7 x i8] c"\5Cu0085\00", [7 x i8] c"\5Cu0086\00", [7 x i8] c"\5Cu0087\00", [7 x i8] c"\5Cu0088\00", [7 x i8] c"\5Cu0089\00", [7 x i8] c"\5Cu008a\00", [7 x i8] c"\5Cu008b\00", [7 x i8] c"\5Cu008c\00", [7 x i8] c"\5Cu008d\00", [7 x i8] c"\5Cu008e\00", [7 x i8] c"\5Cu008f\00", [7 x i8] c"\5Cu0090\00", [7 x i8] c"\5Cu0091\00", [7 x i8] c"\5Cu0092\00", [7 x i8] c"\5Cu0093\00", [7 x i8] c"\5Cu0094\00", [7 x i8] c"\5Cu0095\00", [7 x i8] c"\5Cu0096\00", [7 x i8] c"\5Cu0097\00", [7 x i8] c"\5Cu0098\00", [7 x i8] c"\5Cu0099\00", [7 x i8] c"\5Cu009a\00", [7 x i8] c"\5Cu009b\00", [7 x i8] c"\5Cu009c\00", [7 x i8] c"\5Cu009d\00", [7 x i8] c"\5Cu009e\00", [7 x i8] c"\5Cu009f\00"], align 16
@_ZN6google8protobuf4util9converter12_GLOBAL__N_14kHexE = internal unnamed_addr constant [17 x i8] c"0123456789abcdef\00", align 16
@_ZTVN6google8protobuf7strings15ArrayByteSourceE = external unnamed_addr constant { [8 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf4util9converter12JsonEscaping6EscapeEPNS0_7strings10ByteSourceEPNS4_8ByteSinkE(%"class.google::protobuf::strings::ByteSource"*, %"class.google::protobuf::strings::ByteSink"*) local_unnamed_addr #0 align 2 {
  %3 = alloca [12 x i8], align 1
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %4, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @__const._ZN6google8protobuf4util9converter12JsonEscaping6EscapeEPNS0_7strings10ByteSourceEPNS4_8ByteSinkE.buffer, i64 0, i64 0), i64 12, i1 false)
  %5 = bitcast %"class.google::protobuf::strings::ByteSource"* %0 to i64 (%"class.google::protobuf::strings::ByteSource"*)***
  %6 = load i64 (%"class.google::protobuf::strings::ByteSource"*)**, i64 (%"class.google::protobuf::strings::ByteSource"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.google::protobuf::strings::ByteSource"*)*, i64 (%"class.google::protobuf::strings::ByteSource"*)** %6, i64 2
  %8 = load i64 (%"class.google::protobuf::strings::ByteSource"*)*, i64 (%"class.google::protobuf::strings::ByteSource"*)** %7, align 8
  %9 = call i64 %8(%"class.google::protobuf::strings::ByteSource"* %0) #3
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %269, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.google::protobuf::strings::ByteSource"* %0 to { i8*, i64 } (%"class.google::protobuf::strings::ByteSource"*)***
  %13 = getelementptr inbounds [12 x i8], [12 x i8]* %3, i64 0, i64 5
  %14 = getelementptr inbounds [12 x i8], [12 x i8]* %3, i64 0, i64 4
  %15 = getelementptr inbounds [12 x i8], [12 x i8]* %3, i64 0, i64 3
  %16 = getelementptr inbounds [12 x i8], [12 x i8]* %3, i64 0, i64 2
  %17 = getelementptr inbounds [12 x i8], [12 x i8]* %3, i64 0, i64 11
  %18 = getelementptr inbounds [12 x i8], [12 x i8]* %3, i64 0, i64 10
  %19 = getelementptr inbounds [12 x i8], [12 x i8]* %3, i64 0, i64 9
  %20 = getelementptr inbounds [12 x i8], [12 x i8]* %3, i64 0, i64 8
  %21 = bitcast %"class.google::protobuf::strings::ByteSource"* %0 to void (%"class.google::protobuf::strings::ByteSource"*, %"class.google::protobuf::strings::ByteSink"*, i64)***
  %22 = bitcast %"class.google::protobuf::strings::ByteSource"* %0 to void (%"class.google::protobuf::strings::ByteSource"*, i64)***
  %23 = bitcast %"class.google::protobuf::strings::ByteSink"* %1 to void (%"class.google::protobuf::strings::ByteSink"*, i8*, i64)***
  br label %24

24:                                               ; preds = %11, %262
  %25 = phi i32 [ 0, %11 ], [ %263, %262 ]
  %26 = phi i32 [ 0, %11 ], [ %235, %262 ]
  %27 = load { i8*, i64 } (%"class.google::protobuf::strings::ByteSource"*)**, { i8*, i64 } (%"class.google::protobuf::strings::ByteSource"*)*** %12, align 8
  %28 = getelementptr inbounds { i8*, i64 } (%"class.google::protobuf::strings::ByteSource"*)*, { i8*, i64 } (%"class.google::protobuf::strings::ByteSource"*)** %27, i64 3
  %29 = load { i8*, i64 } (%"class.google::protobuf::strings::ByteSource"*)*, { i8*, i64 } (%"class.google::protobuf::strings::ByteSource"*)** %28, align 8
  %30 = call { i8*, i64 } %29(%"class.google::protobuf::strings::ByteSource"* %0) #3
  %31 = extractvalue { i8*, i64 } %30, 0
  %32 = extractvalue { i8*, i64 } %30, 1
  %33 = icmp sgt i32 %25, 0
  br label %34

34:                                               ; preds = %224, %24
  %35 = phi i32 [ %26, %24 ], [ %94, %224 ]
  %36 = phi i32 [ %25, %24 ], [ %95, %224 ]
  %37 = phi i8* [ null, %24 ], [ %195, %224 ]
  %38 = phi i32 [ 0, %24 ], [ %225, %224 ]
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %40, label %61

40:                                               ; preds = %34
  %41 = add nsw i32 %38, 1
  %42 = sext i32 %38 to i64
  %43 = getelementptr inbounds i8, i8* %31, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = icmp sgt i8 %44, -1
  br i1 %46, label %93, label %47

47:                                               ; preds = %40
  %48 = icmp ult i8 %44, -64
  br i1 %48, label %228, label %49

49:                                               ; preds = %47
  %50 = icmp ult i8 %44, -32
  br i1 %50, label %51, label %53

51:                                               ; preds = %49
  %52 = and i32 %45, 31
  br label %61

53:                                               ; preds = %49
  %54 = icmp ult i8 %44, -16
  br i1 %54, label %55, label %57

55:                                               ; preds = %53
  %56 = and i32 %45, 15
  br label %61

57:                                               ; preds = %53
  %58 = icmp ult i8 %44, -8
  br i1 %58, label %59, label %230

59:                                               ; preds = %57
  %60 = and i32 %45, 7
  br label %61

61:                                               ; preds = %34, %59, %55, %51
  %62 = phi i32 [ %52, %51 ], [ %56, %55 ], [ %60, %59 ], [ %35, %34 ]
  %63 = phi i32 [ 1, %51 ], [ 2, %55 ], [ 3, %59 ], [ %36, %34 ]
  %64 = phi i32 [ 1, %51 ], [ 1, %55 ], [ 1, %59 ], [ 0, %34 ]
  %65 = phi i32 [ %41, %51 ], [ %41, %55 ], [ %41, %59 ], [ %38, %34 ]
  %66 = sext i32 %65 to i64
  br label %67

67:                                               ; preds = %75, %61
  %68 = phi i32 [ %62, %61 ], [ %84, %75 ]
  %69 = phi i32 [ %63, %61 ], [ %79, %75 ]
  %70 = phi i32 [ %64, %61 ], [ %80, %75 ]
  %71 = phi i64 [ %66, %61 ], [ %76, %75 ]
  %72 = icmp sgt i32 %69, 0
  br i1 %72, label %73, label %88

73:                                               ; preds = %67
  %74 = icmp slt i64 %71, %32
  br i1 %74, label %75, label %232

75:                                               ; preds = %73
  %76 = add nsw i64 %71, 1
  %77 = getelementptr inbounds i8, i8* %31, i64 %71
  %78 = load i8, i8* %77, align 1
  %79 = add nsw i32 %69, -1
  %80 = add nuw nsw i32 %70, 1
  %81 = shl i32 %68, 6
  %82 = and i8 %78, 63
  %83 = zext i8 %82 to i32
  %84 = or i32 %81, %83
  %85 = icmp slt i8 %78, 0
  %86 = icmp ult i8 %78, -64
  %87 = and i1 %85, %86
  br i1 %87, label %67, label %232

88:                                               ; preds = %67
  %89 = and i32 %68, -2048
  %90 = icmp ne i32 %89, 55296
  %91 = icmp ult i32 %68, 1114112
  %92 = and i1 %91, %90
  br label %93

93:                                               ; preds = %40, %88
  %94 = phi i32 [ %68, %88 ], [ %45, %40 ]
  %95 = phi i32 [ %69, %88 ], [ 0, %40 ]
  %96 = phi i32 [ %70, %88 ], [ 1, %40 ]
  %97 = phi i1 [ %92, %88 ], [ true, %40 ]
  %98 = icmp sgt i32 %95, 0
  %99 = xor i1 %97, true
  %100 = or i1 %98, %99
  br i1 %100, label %232, label %101

101:                                              ; preds = %93
  %102 = icmp ult i32 %94, 160
  br i1 %102, label %103, label %107

103:                                              ; preds = %101
  %104 = zext i32 %94 to i64
  %105 = getelementptr inbounds [160 x [7 x i8]], [160 x [7 x i8]]* @_ZN6google8protobuf4util9converter12_GLOBAL__N_114kCommonEscapesE, i64 0, i64 %104, i64 0
  %106 = call i64 @strlen(i8* nonnull %105) #4
  br label %194

107:                                              ; preds = %101
  switch i32 %94, label %128 [
    i32 65279, label %108
    i32 65529, label %108
    i32 65530, label %108
    i32 65531, label %108
    i32 173, label %108
    i32 1757, label %108
    i32 1807, label %108
    i32 6068, label %108
    i32 6069, label %108
  ]

108:                                              ; preds = %107, %107, %107, %107, %107, %107, %107, %107, %107
  %109 = trunc i32 %94 to i16
  %110 = and i16 %109, 15
  %111 = zext i16 %110 to i64
  %112 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZN6google8protobuf4util9converter12_GLOBAL__N_14kHexE, i64 0, i64 %111
  %113 = load i8, i8* %112, align 1
  store i8 %113, i8* %13, align 1
  %114 = lshr i16 %109, 4
  %115 = and i16 %114, 15
  %116 = zext i16 %115 to i64
  %117 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZN6google8protobuf4util9converter12_GLOBAL__N_14kHexE, i64 0, i64 %116
  %118 = load i8, i8* %117, align 1
  store i8 %118, i8* %14, align 1
  %119 = lshr i16 %109, 8
  %120 = and i16 %119, 15
  %121 = zext i16 %120 to i64
  %122 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZN6google8protobuf4util9converter12_GLOBAL__N_14kHexE, i64 0, i64 %121
  %123 = load i8, i8* %122, align 1
  store i8 %123, i8* %15, align 1
  %124 = lshr i16 %109, 12
  %125 = zext i16 %124 to i64
  %126 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZN6google8protobuf4util9converter12_GLOBAL__N_14kHexE, i64 0, i64 %125
  %127 = load i8, i8* %126, align 1
  store i8 %127, i8* %16, align 1
  br label %232

128:                                              ; preds = %107
  %129 = and i32 %94, -4
  %130 = icmp eq i32 %129, 1536
  br i1 %130, label %132, label %131

131:                                              ; preds = %128
  switch i32 %94, label %152 [
    i32 8303, label %132
    i32 8302, label %132
    i32 8301, label %132
    i32 8300, label %132
    i32 8299, label %132
    i32 8298, label %132
    i32 8292, label %132
    i32 8291, label %132
    i32 8290, label %132
    i32 8289, label %132
    i32 8288, label %132
    i32 8238, label %132
    i32 8237, label %132
    i32 8236, label %132
    i32 8235, label %132
    i32 8234, label %132
    i32 8233, label %132
    i32 8232, label %132
    i32 8207, label %132
    i32 8206, label %132
    i32 8205, label %132
    i32 8204, label %132
    i32 8203, label %132
  ]

132:                                              ; preds = %131, %131, %131, %131, %131, %131, %131, %131, %131, %131, %131, %131, %131, %131, %131, %131, %131, %131, %131, %131, %131, %131, %131, %128
  %133 = trunc i32 %94 to i16
  %134 = and i16 %133, 15
  %135 = zext i16 %134 to i64
  %136 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZN6google8protobuf4util9converter12_GLOBAL__N_14kHexE, i64 0, i64 %135
  %137 = load i8, i8* %136, align 1
  store i8 %137, i8* %13, align 1
  %138 = lshr i16 %133, 4
  %139 = and i16 %138, 15
  %140 = zext i16 %139 to i64
  %141 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZN6google8protobuf4util9converter12_GLOBAL__N_14kHexE, i64 0, i64 %140
  %142 = load i8, i8* %141, align 1
  store i8 %142, i8* %14, align 1
  %143 = lshr i16 %133, 8
  %144 = and i16 %143, 15
  %145 = zext i16 %144 to i64
  %146 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZN6google8protobuf4util9converter12_GLOBAL__N_14kHexE, i64 0, i64 %145
  %147 = load i8, i8* %146, align 1
  store i8 %147, i8* %15, align 1
  %148 = lshr i16 %133, 12
  %149 = zext i16 %148 to i64
  %150 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZN6google8protobuf4util9converter12_GLOBAL__N_14kHexE, i64 0, i64 %149
  %151 = load i8, i8* %150, align 1
  store i8 %151, i8* %16, align 1
  br label %232

152:                                              ; preds = %131
  %153 = add i32 %94, -917536
  %154 = icmp ult i32 %153, 96
  br i1 %154, label %156, label %155

155:                                              ; preds = %152
  switch i32 %94, label %194 [
    i32 917505, label %156
    i32 119162, label %156
    i32 119161, label %156
    i32 119160, label %156
    i32 119159, label %156
    i32 119158, label %156
    i32 119157, label %156
    i32 119156, label %156
    i32 119155, label %156
  ]

156:                                              ; preds = %155, %155, %155, %155, %155, %155, %155, %155, %155, %152
  %157 = trunc i32 %94 to i16
  %158 = lshr i32 %94, 10
  %159 = trunc i32 %158 to i16
  %160 = add nuw nsw i16 %159, -10304
  %161 = and i16 %157, 15
  %162 = zext i16 %161 to i64
  %163 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZN6google8protobuf4util9converter12_GLOBAL__N_14kHexE, i64 0, i64 %162
  %164 = load i8, i8* %163, align 1
  store i8 %164, i8* %17, align 1
  %165 = lshr i16 %157, 4
  %166 = and i16 %165, 15
  %167 = zext i16 %166 to i64
  %168 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZN6google8protobuf4util9converter12_GLOBAL__N_14kHexE, i64 0, i64 %167
  %169 = load i8, i8* %168, align 1
  store i8 %169, i8* %18, align 1
  %170 = lshr i16 %157, 8
  %171 = and i16 %170, 3
  %172 = or i16 %171, 12
  %173 = zext i16 %172 to i64
  %174 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZN6google8protobuf4util9converter12_GLOBAL__N_14kHexE, i64 0, i64 %173
  %175 = load i8, i8* %174, align 1
  store i8 %175, i8* %19, align 1
  store i8 100, i8* %20, align 1
  %176 = and i16 %160, 15
  %177 = zext i16 %176 to i64
  %178 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZN6google8protobuf4util9converter12_GLOBAL__N_14kHexE, i64 0, i64 %177
  %179 = load i8, i8* %178, align 1
  store i8 %179, i8* %13, align 1
  %180 = lshr i16 %160, 4
  %181 = and i16 %180, 15
  %182 = zext i16 %181 to i64
  %183 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZN6google8protobuf4util9converter12_GLOBAL__N_14kHexE, i64 0, i64 %182
  %184 = load i8, i8* %183, align 1
  store i8 %184, i8* %14, align 1
  %185 = lshr i16 %160, 8
  %186 = and i16 %185, 15
  %187 = zext i16 %186 to i64
  %188 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZN6google8protobuf4util9converter12_GLOBAL__N_14kHexE, i64 0, i64 %187
  %189 = load i8, i8* %188, align 1
  store i8 %189, i8* %15, align 1
  %190 = lshr i16 %160, 12
  %191 = zext i16 %190 to i64
  %192 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZN6google8protobuf4util9converter12_GLOBAL__N_14kHexE, i64 0, i64 %191
  %193 = load i8, i8* %192, align 1
  store i8 %193, i8* %16, align 1
  br label %232

194:                                              ; preds = %155, %103
  %195 = phi i8* [ %105, %103 ], [ null, %155 ]
  %196 = phi i64 [ %106, %103 ], [ 0, %155 ]
  %197 = icmp eq i64 %196, 0
  %198 = and i1 %33, %197
  br i1 %198, label %199, label %223

199:                                              ; preds = %194
  %200 = trunc i32 %94 to i8
  %201 = and i8 %200, 63
  %202 = or i8 %201, -128
  store i8 %202, i8* %13, align 1
  %203 = lshr i32 %94, 6
  %204 = icmp ult i32 %94, 2048
  %205 = trunc i32 %203 to i8
  br i1 %204, label %206, label %208

206:                                              ; preds = %199
  %207 = or i8 %205, -64
  store i8 %207, i8* %14, align 1
  br label %232

208:                                              ; preds = %199
  %209 = and i8 %205, 63
  %210 = or i8 %209, -128
  store i8 %210, i8* %14, align 1
  %211 = lshr i32 %94, 12
  %212 = icmp ult i32 %94, 65536
  %213 = trunc i32 %211 to i8
  br i1 %212, label %214, label %216

214:                                              ; preds = %208
  %215 = or i8 %213, -32
  store i8 %215, i8* %15, align 1
  br label %232

216:                                              ; preds = %208
  %217 = and i8 %213, 63
  %218 = or i8 %217, -128
  store i8 %218, i8* %15, align 1
  %219 = lshr i32 %94, 18
  %220 = trunc i32 %219 to i8
  %221 = and i8 %220, 7
  %222 = or i8 %221, -16
  store i8 %222, i8* %16, align 1
  br label %232

223:                                              ; preds = %194
  br i1 %197, label %224, label %232

224:                                              ; preds = %223
  %225 = add nsw i32 %96, %38
  %226 = sext i32 %225 to i64
  %227 = icmp sgt i64 %32, %226
  br i1 %227, label %34, label %232

228:                                              ; preds = %47
  %229 = zext i8 %44 to i32
  br label %232

230:                                              ; preds = %57
  %231 = zext i8 %44 to i32
  br label %232

232:                                              ; preds = %93, %223, %224, %75, %73, %228, %230, %108, %156, %132, %216, %214, %206
  %233 = phi i1 [ %97, %206 ], [ %97, %214 ], [ %97, %216 ], [ %97, %132 ], [ %97, %156 ], [ %97, %108 ], [ false, %228 ], [ false, %230 ], [ true, %73 ], [ false, %75 ], [ %97, %224 ], [ %97, %223 ], [ %97, %93 ]
  %234 = phi i32 [ %95, %206 ], [ %95, %214 ], [ %95, %216 ], [ %95, %132 ], [ %95, %156 ], [ %95, %108 ], [ 0, %228 ], [ 0, %230 ], [ %69, %73 ], [ %79, %75 ], [ %95, %224 ], [ %95, %223 ], [ %95, %93 ]
  %235 = phi i32 [ %94, %206 ], [ %94, %214 ], [ %94, %216 ], [ %94, %132 ], [ %94, %156 ], [ %94, %108 ], [ %229, %228 ], [ %231, %230 ], [ %68, %73 ], [ %84, %75 ], [ %94, %224 ], [ %94, %223 ], [ %94, %93 ]
  %236 = phi i8* [ %14, %206 ], [ %15, %214 ], [ %16, %216 ], [ %4, %132 ], [ %4, %156 ], [ %4, %108 ], [ %37, %228 ], [ %37, %230 ], [ %37, %73 ], [ %37, %75 ], [ %37, %93 ], [ %195, %223 ], [ %195, %224 ]
  %237 = phi i64 [ 2, %206 ], [ 3, %214 ], [ 4, %216 ], [ 6, %132 ], [ 12, %156 ], [ 6, %108 ], [ 0, %228 ], [ 0, %230 ], [ 0, %73 ], [ 0, %75 ], [ 0, %93 ], [ %196, %223 ], [ 0, %224 ]
  %238 = phi i32 [ %96, %206 ], [ %96, %214 ], [ %96, %216 ], [ %96, %132 ], [ %96, %156 ], [ %96, %108 ], [ 1, %228 ], [ 1, %230 ], [ %70, %73 ], [ %80, %75 ], [ %96, %93 ], [ %96, %223 ], [ 0, %224 ]
  %239 = phi i32 [ %38, %206 ], [ %38, %214 ], [ %38, %216 ], [ %38, %132 ], [ %38, %156 ], [ %38, %108 ], [ %38, %228 ], [ %38, %230 ], [ %38, %73 ], [ %38, %75 ], [ %38, %93 ], [ %38, %223 ], [ %225, %224 ]
  %240 = icmp sgt i32 %239, 0
  br i1 %240, label %241, label %246

241:                                              ; preds = %232
  %242 = sext i32 %239 to i64
  %243 = load void (%"class.google::protobuf::strings::ByteSource"*, %"class.google::protobuf::strings::ByteSink"*, i64)**, void (%"class.google::protobuf::strings::ByteSource"*, %"class.google::protobuf::strings::ByteSink"*, i64)*** %21, align 8
  %244 = getelementptr inbounds void (%"class.google::protobuf::strings::ByteSource"*, %"class.google::protobuf::strings::ByteSink"*, i64)*, void (%"class.google::protobuf::strings::ByteSource"*, %"class.google::protobuf::strings::ByteSink"*, i64)** %243, i64 5
  %245 = load void (%"class.google::protobuf::strings::ByteSource"*, %"class.google::protobuf::strings::ByteSink"*, i64)*, void (%"class.google::protobuf::strings::ByteSource"*, %"class.google::protobuf::strings::ByteSink"*, i64)** %244, align 8
  call void %245(%"class.google::protobuf::strings::ByteSource"* %0, %"class.google::protobuf::strings::ByteSink"* %1, i64 %242) #3
  br label %246

246:                                              ; preds = %241, %232
  %247 = icmp sgt i32 %238, 0
  br i1 %247, label %248, label %253

248:                                              ; preds = %246
  %249 = sext i32 %238 to i64
  %250 = load void (%"class.google::protobuf::strings::ByteSource"*, i64)**, void (%"class.google::protobuf::strings::ByteSource"*, i64)*** %22, align 8
  %251 = getelementptr inbounds void (%"class.google::protobuf::strings::ByteSource"*, i64)*, void (%"class.google::protobuf::strings::ByteSource"*, i64)** %250, i64 4
  %252 = load void (%"class.google::protobuf::strings::ByteSource"*, i64)*, void (%"class.google::protobuf::strings::ByteSource"*, i64)** %251, align 8
  call void %252(%"class.google::protobuf::strings::ByteSource"* %0, i64 %249) #3
  br label %253

253:                                              ; preds = %248, %246
  br i1 %233, label %254, label %262

254:                                              ; preds = %253
  %255 = icmp eq i32 %234, 0
  br i1 %255, label %256, label %262

256:                                              ; preds = %254
  %257 = icmp eq i64 %237, 0
  br i1 %257, label %262, label %258

258:                                              ; preds = %256
  %259 = load void (%"class.google::protobuf::strings::ByteSink"*, i8*, i64)**, void (%"class.google::protobuf::strings::ByteSink"*, i8*, i64)*** %23, align 8
  %260 = getelementptr inbounds void (%"class.google::protobuf::strings::ByteSink"*, i8*, i64)*, void (%"class.google::protobuf::strings::ByteSink"*, i8*, i64)** %259, i64 2
  %261 = load void (%"class.google::protobuf::strings::ByteSink"*, i8*, i64)*, void (%"class.google::protobuf::strings::ByteSink"*, i8*, i64)** %260, align 8
  call void %261(%"class.google::protobuf::strings::ByteSink"* %1, i8* %236, i64 %237) #3
  br label %262

262:                                              ; preds = %253, %254, %256, %258
  %263 = phi i32 [ 0, %256 ], [ 0, %258 ], [ %234, %254 ], [ 0, %253 ]
  %264 = load i64 (%"class.google::protobuf::strings::ByteSource"*)**, i64 (%"class.google::protobuf::strings::ByteSource"*)*** %5, align 8
  %265 = getelementptr inbounds i64 (%"class.google::protobuf::strings::ByteSource"*)*, i64 (%"class.google::protobuf::strings::ByteSource"*)** %264, i64 2
  %266 = load i64 (%"class.google::protobuf::strings::ByteSource"*)*, i64 (%"class.google::protobuf::strings::ByteSource"*)** %265, align 8
  %267 = call i64 %266(%"class.google::protobuf::strings::ByteSource"* %0) #3
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %269, label %24

269:                                              ; preds = %262, %2
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf4util9converter12JsonEscaping6EscapeENS0_11StringPieceEPNS0_7strings8ByteSinkE(i8*, i64, %"class.google::protobuf::strings::ByteSink"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.google::protobuf::strings::ArrayByteSource", align 8
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %31, label %6

6:                                                ; preds = %3, %25
  %7 = phi i64 [ %26, %25 ], [ 0, %3 ]
  %8 = phi i8 [ %23, %25 ], [ 1, %3 ]
  %9 = getelementptr inbounds i8, i8* %0, i64 %7
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 32
  %12 = or i8 %10, 2
  %13 = insertelement <2 x i8> undef, i8 %10, i32 0
  %14 = insertelement <2 x i8> %13, i8 %12, i32 1
  %15 = shufflevector <2 x i8> %14, <2 x i8> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  %16 = icmp eq <4 x i8> %15, <i8 92, i8 62, i8 34, i8 127>
  %17 = shufflevector <4 x i1> %16, <4 x i1> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %18 = or <4 x i1> %16, %17
  %19 = shufflevector <4 x i1> %18, <4 x i1> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %20 = or <4 x i1> %18, %19
  %21 = extractelement <4 x i1> %20, i32 0
  %22 = or i1 %21, %11
  %23 = select i1 %22, i8 0, i8 %8
  br i1 %11, label %28, label %24

24:                                               ; preds = %6
  switch i8 %10, label %25 [
    i8 127, label %28
    i8 92, label %28
    i8 62, label %28
    i8 60, label %28
    i8 34, label %28
  ]

25:                                               ; preds = %24
  %26 = add nuw i64 %7, 1
  %27 = icmp eq i64 %26, %1
  br i1 %27, label %28, label %6

28:                                               ; preds = %6, %24, %24, %24, %24, %24, %25
  %29 = and i8 %23, 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %3, %28
  %32 = bitcast %"class.google::protobuf::strings::ByteSink"* %2 to void (%"class.google::protobuf::strings::ByteSink"*, i8*, i64)***
  %33 = load void (%"class.google::protobuf::strings::ByteSink"*, i8*, i64)**, void (%"class.google::protobuf::strings::ByteSink"*, i8*, i64)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.google::protobuf::strings::ByteSink"*, i8*, i64)*, void (%"class.google::protobuf::strings::ByteSink"*, i8*, i64)** %33, i64 2
  %35 = load void (%"class.google::protobuf::strings::ByteSink"*, i8*, i64)*, void (%"class.google::protobuf::strings::ByteSink"*, i8*, i64)** %34, align 8
  tail call void %35(%"class.google::protobuf::strings::ByteSink"* %2, i8* %0, i64 %1) #3
  br label %42

36:                                               ; preds = %28
  %37 = bitcast %"class.google::protobuf::strings::ArrayByteSource"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #3
  %38 = getelementptr inbounds %"class.google::protobuf::strings::ArrayByteSource", %"class.google::protobuf::strings::ArrayByteSource"* %4, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.google::protobuf::strings::ArrayByteSource", %"class.google::protobuf::strings::ArrayByteSource"* %4, i64 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.google::protobuf::strings::ArrayByteSource", %"class.google::protobuf::strings::ArrayByteSource"* %4, i64 0, i32 1, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN6google8protobuf7strings15ArrayByteSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  store i8* %0, i8** %39, align 8
  store i64 %1, i64* %40, align 8
  %41 = getelementptr inbounds %"class.google::protobuf::strings::ArrayByteSource", %"class.google::protobuf::strings::ArrayByteSource"* %4, i64 0, i32 0
  call void @_ZN6google8protobuf4util9converter12JsonEscaping6EscapeEPNS0_7strings10ByteSourceEPNS4_8ByteSinkE(%"class.google::protobuf::strings::ByteSource"* nonnull %41, %"class.google::protobuf::strings::ByteSink"* %2)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #3
  br label %42

42:                                               ; preds = %36, %31
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
