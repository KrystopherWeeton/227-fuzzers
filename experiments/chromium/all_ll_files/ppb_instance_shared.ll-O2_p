; ModuleID = '../../ppapi/shared_impl/ppb_instance_shared.cc'
source_filename = "../../ppapi/shared_impl/ppb_instance_shared.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ppapi::PPB_Instance_Shared" = type { %"class.ppapi::thunk::PPB_Instance_API" }
%"class.ppapi::thunk::PPB_Instance_API" = type { i32 (...)** }
%struct.PP_Var = type { i32, i32, %union.PP_VarValue }
%union.PP_VarValue = type { double }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.ppapi::PpapiGlobals" = type { i32 (...)**, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.PP_Point = type { i32, i32 }
%"class.ppapi::thunk::EnterResourceNoLock" = type { %"class.ppapi::thunk::EnterResource" }
%"class.ppapi::thunk::EnterResource" = type { %"class.ppapi::thunk::subtle::EnterBase.base", %"class.ppapi::thunk::PPB_ImageData_API"* }
%"class.ppapi::thunk::subtle::EnterBase.base" = type <{ i32 (...)**, %"class.ppapi::Resource"*, %class.scoped_refptr.3, i32 }>
%"class.ppapi::Resource" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.2", i32, %"class.ppapi::HostResource" }
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.ppapi::HostResource" = type { i32, i32 }
%class.scoped_refptr.3 = type { %"class.ppapi::TrackedCallback"* }
%"class.ppapi::TrackedCallback" = type { %"class.base::RefCountedThreadSafe.4", %"class.base::Lock", i8, %class.scoped_refptr.5, i32, i8, i8, %struct.PP_CompletionCallback, %"class.base::OnceCallback", %class.scoped_refptr.8, i32, %"class.std::__1::unique_ptr" }
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%class.scoped_refptr.5 = type { %"class.ppapi::CallbackTracker"* }
%"class.ppapi::CallbackTracker" = type opaque
%struct.PP_CompletionCallback = type { void (i8*, i32)*, i8*, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.7", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.7" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.8 = type { %"class.ppapi::MessageLoopShared"* }
%"class.ppapi::MessageLoopShared" = type { %"class.ppapi::Resource", %"class.ppapi::thunk::PPB_MessageLoop_API" }
%"class.ppapi::thunk::PPB_MessageLoop_API" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.base::ConditionVariable"* }
%"class.base::ConditionVariable" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t*, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.11, %union.anon.13, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.11 = type { i64 }
%union.anon.13 = type { i64 }
%"class.ppapi::thunk::PPB_ImageData_API" = type { i32 (...)** }
%struct.PP_ImageDataDesc = type { i32, %struct.PP_Size, i32 }
%struct.PP_Size = type { i32, i32 }
%"class.ppapi::thunk::subtle::EnterBase" = type <{ i32 (...)**, %"class.ppapi::Resource"*, %class.scoped_refptr.3, i32, [4 x i8] }>

$_ZN5ppapi5thunk19EnterResourceNoLockINS0_17PPB_ImageData_APIEED0Ev = comdat any

$_ZN5ppapi5thunk13EnterResourceINS0_17PPB_ImageData_APIELb0EED0Ev = comdat any

$_ZTVN5ppapi5thunk19EnterResourceNoLockINS0_17PPB_ImageData_APIEEE = comdat any

$_ZTVN5ppapi5thunk13EnterResourceINS0_17PPB_ImageData_APIELb0EEE = comdat any

@_ZN5ppapi19PPB_Instance_Shared23kExtraCharsForTextInputE = hidden local_unnamed_addr constant i32 100, align 4
@_ZTVN5ppapi19PPB_Instance_SharedE = hidden unnamed_addr constant { [43 x i8*] } { [43 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ppapi::PPB_Instance_Shared"*)* @_ZN5ppapi19PPB_Instance_SharedD2Ev to i8*), i8* bitcast (void (%"class.ppapi::PPB_Instance_Shared"*)* @_ZN5ppapi19PPB_Instance_SharedD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.ppapi::PPB_Instance_Shared"*, i32, i32, i64, i64)* @_ZN5ppapi19PPB_Instance_Shared3LogEi11PP_LogLevel6PP_Var to i8*), i8* bitcast (void (%"class.ppapi::PPB_Instance_Shared"*, i32, i32, i64, i64, %struct.PP_Var*)* @_ZN5ppapi19PPB_Instance_Shared13LogWithSourceEi11PP_LogLevel6PP_VarS2_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5ppapi5thunk19EnterResourceNoLockINS0_17PPB_ImageData_APIEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ppapi::thunk::subtle::EnterBase"*)* @_ZN5ppapi5thunk6subtle9EnterBaseD2Ev to i8*), i8* bitcast (void (%"class.ppapi::thunk::EnterResourceNoLock"*)* @_ZN5ppapi5thunk19EnterResourceNoLockINS0_17PPB_ImageData_APIEED0Ev to i8*)] }, comdat, align 8
@_ZTVN5ppapi5thunk13EnterResourceINS0_17PPB_ImageData_APIELb0EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ppapi::thunk::subtle::EnterBase"*)* @_ZN5ppapi5thunk6subtle9EnterBaseD2Ev to i8*), i8* bitcast (void (%"class.ppapi::thunk::EnterResource"*)* @_ZN5ppapi5thunk13EnterResourceINS0_17PPB_ImageData_APIELb0EED0Ev to i8*)] }, comdat, align 8

@_ZN5ppapi19PPB_Instance_SharedD1Ev = hidden unnamed_addr alias void (%"class.ppapi::PPB_Instance_Shared"*), void (%"class.ppapi::PPB_Instance_Shared"*)* @_ZN5ppapi19PPB_Instance_SharedD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5ppapi19PPB_Instance_SharedD2Ev(%"class.ppapi::PPB_Instance_Shared"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5ppapi19PPB_Instance_SharedD0Ev(%"class.ppapi::PPB_Instance_Shared"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi19PPB_Instance_Shared3LogEi11PP_LogLevel6PP_Var(%"class.ppapi::PPB_Instance_Shared"*, i32, i32, i64, i64) unnamed_addr #3 align 2 {
  %6 = alloca %struct.PP_Var, align 8
  %7 = bitcast %struct.PP_Var* %6 to i64*
  store i64 %3, i64* %7, align 8
  %8 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %6, i64 0, i32 2
  %9 = bitcast %union.PP_VarValue* %8 to i64*
  store i64 %4, i64* %9, align 8
  %10 = bitcast %"class.ppapi::PPB_Instance_Shared"* %0 to void (%"class.ppapi::PPB_Instance_Shared"*, i32, i32, i64, i64, %struct.PP_Var*)***
  %11 = load void (%"class.ppapi::PPB_Instance_Shared"*, i32, i32, i64, i64, %struct.PP_Var*)**, void (%"class.ppapi::PPB_Instance_Shared"*, i32, i32, i64, i64, %struct.PP_Var*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.ppapi::PPB_Instance_Shared"*, i32, i32, i64, i64, %struct.PP_Var*)*, void (%"class.ppapi::PPB_Instance_Shared"*, i32, i32, i64, i64, %struct.PP_Var*)** %11, i64 12
  %13 = load void (%"class.ppapi::PPB_Instance_Shared"*, i32, i32, i64, i64, %struct.PP_Var*)*, void (%"class.ppapi::PPB_Instance_Shared"*, i32, i32, i64, i64, %struct.PP_Var*)** %12, align 8
  tail call void %13(%"class.ppapi::PPB_Instance_Shared"* %0, i32 %1, i32 %2, i64 0, i64 -6148914694099828736, %struct.PP_Var* nonnull byval(%struct.PP_Var) align 8 %6) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi19PPB_Instance_Shared13LogWithSourceEi11PP_LogLevel6PP_VarS2_(%"class.ppapi::PPB_Instance_Shared"* nocapture readnone, i32, i32, i64, i64, %struct.PP_Var* nocapture readonly byval(%struct.PP_Var) align 8) unnamed_addr #3 align 2 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = trunc i64 %3 to i32
  %11 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #10
  %13 = icmp eq i32 %10, 5
  br i1 %13, label %14, label %25

14:                                               ; preds = %6
  %15 = and i64 %3, -4294967296
  %16 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #10
  %17 = or i64 %15, 5
  call void @_ZN5ppapi3Var16PPVarToLogStringE6PP_Var(%"class.std::__1::basic_string"* nonnull sret %8, i64 %17, i64 %4) #10
  %18 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %14
  %23 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %23) #11
  br label %24

24:                                               ; preds = %22, %14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* nonnull align 8 %16, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #10
  br label %25

25:                                               ; preds = %24, %6
  %26 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #10
  %27 = bitcast %struct.PP_Var* %5 to i64*
  %28 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  %29 = load i64, i64* %27, align 8
  %30 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %5, i64 0, i32 2
  %31 = bitcast %union.PP_VarValue* %30 to i64*
  %32 = load i64, i64* %31, align 8
  call void @_ZN5ppapi3Var16PPVarToLogStringE6PP_Var(%"class.std::__1::basic_string"* nonnull sret %9, i64 %29, i64 %32) #10
  %33 = call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #10
  %34 = bitcast %"class.ppapi::PpapiGlobals"* %33 to void (%"class.ppapi::PpapiGlobals"*, i32, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)***
  %35 = load void (%"class.ppapi::PpapiGlobals"*, i32, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)**, void (%"class.ppapi::PpapiGlobals"*, i32, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.ppapi::PpapiGlobals"*, i32, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, void (%"class.ppapi::PpapiGlobals"*, i32, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %35, i64 5
  %37 = load void (%"class.ppapi::PpapiGlobals"*, i32, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, void (%"class.ppapi::PpapiGlobals"*, i32, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %36, align 8
  call void %37(%"class.ppapi::PpapiGlobals"* %33, i32 %1, i32 %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #10
  %38 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %25
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #11
  br label %45

45:                                               ; preds = %25, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #10
  %46 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %45
  %51 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %51) #11
  br label %52

52:                                               ; preds = %45, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN5ppapi3Var16PPVarToLogStringE6PP_Var(%"class.std::__1::basic_string"* sret, i64, i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5ppapi19PPB_Instance_Shared26ValidateRequestInputEventsEbj(%"class.ppapi::PPB_Instance_Shared"* nocapture readnone, i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp ugt i32 %2, 31
  %5 = select i1 %4, i32 -12, i32 0
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5ppapi19PPB_Instance_Shared23ValidateSetCursorParamsE19PP_MouseCursor_TypeiPK8PP_Point(%"class.ppapi::PPB_Instance_Shared"* nocapture readnone, i32, i32, %struct.PP_Point* readonly) local_unnamed_addr #3 align 2 {
  %5 = alloca %"class.ppapi::thunk::EnterResourceNoLock", align 8
  %6 = alloca %struct.PP_ImageDataDesc, align 4
  %7 = add i32 %1, 1
  %8 = icmp ugt i32 %7, 43
  br i1 %8, label %78, label %9

9:                                                ; preds = %4
  %10 = icmp eq i32 %1, -1
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  %12 = icmp eq i32 %2, 0
  br label %78

13:                                               ; preds = %9
  %14 = icmp eq %struct.PP_Point* %3, null
  br i1 %14, label %78, label %15

15:                                               ; preds = %13
  %16 = bitcast %"class.ppapi::thunk::EnterResourceNoLock"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false)
  %17 = bitcast %"class.ppapi::thunk::EnterResourceNoLock"* %5 to %"class.ppapi::thunk::subtle::EnterBase"*
  call void @_ZN5ppapi5thunk6subtle9EnterBaseC2Ei(%"class.ppapi::thunk::subtle::EnterBase"* nonnull %17, i32 %2) #10
  %18 = getelementptr inbounds %"class.ppapi::thunk::EnterResourceNoLock", %"class.ppapi::thunk::EnterResourceNoLock"* %5, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5ppapi5thunk13EnterResourceINS0_17PPB_ImageData_APIELb0EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds %"class.ppapi::thunk::EnterResourceNoLock", %"class.ppapi::thunk::EnterResourceNoLock"* %5, i64 0, i32 0, i32 0, i32 1
  %20 = load %"class.ppapi::Resource"*, %"class.ppapi::Resource"** %19, align 8
  %21 = icmp eq %"class.ppapi::Resource"* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %15
  %23 = bitcast %"class.ppapi::Resource"* %20 to %"class.ppapi::thunk::PPB_ImageData_API"* (%"class.ppapi::Resource"*)***
  %24 = load %"class.ppapi::thunk::PPB_ImageData_API"* (%"class.ppapi::Resource"*)**, %"class.ppapi::thunk::PPB_ImageData_API"* (%"class.ppapi::Resource"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.ppapi::thunk::PPB_ImageData_API"* (%"class.ppapi::Resource"*)*, %"class.ppapi::thunk::PPB_ImageData_API"* (%"class.ppapi::Resource"*)** %24, i64 29
  %26 = load %"class.ppapi::thunk::PPB_ImageData_API"* (%"class.ppapi::Resource"*)*, %"class.ppapi::thunk::PPB_ImageData_API"* (%"class.ppapi::Resource"*)** %25, align 8
  %27 = call %"class.ppapi::thunk::PPB_ImageData_API"* %26(%"class.ppapi::Resource"* nonnull %20) #10
  %28 = load %"class.ppapi::Resource"*, %"class.ppapi::Resource"** %19, align 8
  br label %29

29:                                               ; preds = %15, %22
  %30 = phi %"class.ppapi::Resource"* [ %28, %22 ], [ null, %15 ]
  %31 = phi %"class.ppapi::thunk::PPB_ImageData_API"* [ %27, %22 ], [ null, %15 ]
  %32 = getelementptr inbounds %"class.ppapi::thunk::EnterResourceNoLock", %"class.ppapi::thunk::EnterResourceNoLock"* %5, i64 0, i32 0, i32 1
  store %"class.ppapi::thunk::PPB_ImageData_API"* %31, %"class.ppapi::thunk::PPB_ImageData_API"** %32, align 8
  %33 = bitcast %"class.ppapi::thunk::PPB_ImageData_API"* %31 to i8*
  call void @_ZN5ppapi5thunk6subtle9EnterBase24SetStateForResourceErrorEiPNS_8ResourceEPvb(%"class.ppapi::thunk::subtle::EnterBase"* nonnull %17, i32 %2, %"class.ppapi::Resource"* %30, i8* %33, i1 zeroext true) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5ppapi5thunk19EnterResourceNoLockINS0_17PPB_ImageData_APIEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %34 = getelementptr inbounds %"class.ppapi::thunk::EnterResourceNoLock", %"class.ppapi::thunk::EnterResourceNoLock"* %5, i64 0, i32 0, i32 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %76

37:                                               ; preds = %29
  %38 = bitcast %struct.PP_ImageDataDesc* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #10
  %39 = getelementptr inbounds %struct.PP_ImageDataDesc, %struct.PP_ImageDataDesc* %6, i64 0, i32 0
  %40 = getelementptr inbounds %struct.PP_ImageDataDesc, %struct.PP_ImageDataDesc* %6, i64 0, i32 1, i32 0
  %41 = getelementptr inbounds %struct.PP_ImageDataDesc, %struct.PP_ImageDataDesc* %6, i64 0, i32 1, i32 1
  %42 = bitcast %struct.PP_ImageDataDesc* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %42, i8 -86, i64 16, i1 false)
  %43 = load %"class.ppapi::thunk::PPB_ImageData_API"*, %"class.ppapi::thunk::PPB_ImageData_API"** %32, align 8
  %44 = bitcast %"class.ppapi::thunk::PPB_ImageData_API"* %43 to i32 (%"class.ppapi::thunk::PPB_ImageData_API"*, %struct.PP_ImageDataDesc*)***
  %45 = load i32 (%"class.ppapi::thunk::PPB_ImageData_API"*, %struct.PP_ImageDataDesc*)**, i32 (%"class.ppapi::thunk::PPB_ImageData_API"*, %struct.PP_ImageDataDesc*)*** %44, align 8
  %46 = getelementptr inbounds i32 (%"class.ppapi::thunk::PPB_ImageData_API"*, %struct.PP_ImageDataDesc*)*, i32 (%"class.ppapi::thunk::PPB_ImageData_API"*, %struct.PP_ImageDataDesc*)** %45, i64 2
  %47 = load i32 (%"class.ppapi::thunk::PPB_ImageData_API"*, %struct.PP_ImageDataDesc*)*, i32 (%"class.ppapi::thunk::PPB_ImageData_API"*, %struct.PP_ImageDataDesc*)** %46, align 8
  %48 = call i32 %47(%"class.ppapi::thunk::PPB_ImageData_API"* %43, %struct.PP_ImageDataDesc* nonnull %6) #10
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %74, label %50

50:                                               ; preds = %37
  %51 = load i32, i32* %40, align 4
  %52 = icmp sgt i32 %51, 32
  %53 = load i32, i32* %41, align 4
  %54 = icmp sgt i32 %53, 32
  %55 = or i1 %52, %54
  br i1 %55, label %74, label %56

56:                                               ; preds = %50
  %57 = load i32, i32* %39, align 4
  %58 = call i32 @_ZN5ppapi20PPB_ImageData_Shared24GetNativeImageDataFormatEv() #10
  %59 = icmp eq i32 %57, %58
  br i1 %59, label %60, label %74

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.PP_Point, %struct.PP_Point* %3, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp sgt i32 %62, -1
  %64 = load i32, i32* %40, align 4
  %65 = icmp slt i32 %62, %64
  %66 = and i1 %63, %65
  br i1 %66, label %67, label %74

67:                                               ; preds = %60
  %68 = getelementptr inbounds %struct.PP_Point, %struct.PP_Point* %3, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = icmp sgt i32 %69, -1
  %71 = load i32, i32* %41, align 4
  %72 = icmp slt i32 %69, %71
  %73 = and i1 %70, %72
  br label %74

74:                                               ; preds = %37, %67, %60, %56, %50
  %75 = phi i1 [ false, %37 ], [ false, %50 ], [ false, %56 ], [ false, %60 ], [ %73, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #10
  br label %76

76:                                               ; preds = %29, %74
  %77 = phi i1 [ %75, %74 ], [ false, %29 ]
  call void @_ZN5ppapi5thunk6subtle9EnterBaseD2Ev(%"class.ppapi::thunk::subtle::EnterBase"* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #10
  br label %78

78:                                               ; preds = %13, %4, %76, %11
  %79 = phi i1 [ %12, %11 ], [ %77, %76 ], [ false, %4 ], [ false, %13 ]
  ret i1 %79
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare i32 @_ZN5ppapi20PPB_ImageData_Shared24GetNativeImageDataFormatEv() local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5ppapi5thunk6subtle9EnterBaseD2Ev(%"class.ppapi::thunk::subtle::EnterBase"*) unnamed_addr #6

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5ppapi5thunk19EnterResourceNoLockINS0_17PPB_ImageData_APIEED0Ev(%"class.ppapi::thunk::EnterResourceNoLock"*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %"class.ppapi::thunk::EnterResourceNoLock"* %0 to %"class.ppapi::thunk::subtle::EnterBase"*
  tail call void @_ZN5ppapi5thunk6subtle9EnterBaseD2Ev(%"class.ppapi::thunk::subtle::EnterBase"* %2) #10
  %3 = bitcast %"class.ppapi::thunk::EnterResourceNoLock"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

declare void @_ZN5ppapi5thunk6subtle9EnterBaseC2Ei(%"class.ppapi::thunk::subtle::EnterBase"*, i32) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5ppapi5thunk13EnterResourceINS0_17PPB_ImageData_APIELb0EED0Ev(%"class.ppapi::thunk::EnterResource"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.ppapi::thunk::EnterResource"* %0 to %"class.ppapi::thunk::subtle::EnterBase"*
  tail call void @_ZN5ppapi5thunk6subtle9EnterBaseD2Ev(%"class.ppapi::thunk::subtle::EnterBase"* %2) #10
  %3 = bitcast %"class.ppapi::thunk::EnterResource"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

declare void @_ZN5ppapi5thunk6subtle9EnterBase24SetStateForResourceErrorEiPNS_8ResourceEPvb(%"class.ppapi::thunk::subtle::EnterBase"*, i32, %"class.ppapi::Resource"*, i8*, i1 zeroext) local_unnamed_addr #5

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
