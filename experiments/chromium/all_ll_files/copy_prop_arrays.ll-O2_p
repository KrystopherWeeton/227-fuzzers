; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/copy_prop_arrays.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/copy_prop_arrays.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.spv_position_t = type { i64, i64, i64 }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.spvtools::opt::CopyPropagateArrays" = type { %"class.spvtools::opt::MemPass" }
%"class.spvtools::opt::MemPass" = type { %"class.spvtools::opt::Pass.base", [7 x i8], %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_map.249" }
%"class.spvtools::opt::Pass.base" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8 }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.std::__1::unordered_set.910" = type { %"class.std::__1::__hash_table.911" }
%"class.std::__1::__hash_table.911" = type <{ %"class.std::__1::unique_ptr.912", %"class.std::__1::__compressed_pair.922", %"class.std::__1::__compressed_pair.927", %"class.std::__1::__compressed_pair.929", [4 x i8] }>
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914", %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"struct.std::__1::__hash_node_base.915"** }
%"struct.std::__1::__hash_node_base.915" = type { %"struct.std::__1::__hash_node_base.915"* }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.std::__1::__bucket_list_deallocator.917" }
%"class.std::__1::__bucket_list_deallocator.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"struct.std::__1::__hash_node_base.915" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::opt::CopyPropagateArrays::MemoryObject" = type { %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.3" }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"class.spvtools::opt::analysis::Pointer" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Type.base" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32 }>
%"class.std::__1::function.940" = type { %"class.std::__1::__function::__policy_func.944" }
%"class.std::__1::__function::__policy_func.944" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.945", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.945" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"struct.std::__1::default_delete.120" = type { i8 }
%"class.std::__1::function.981" = type { %"class.std::__1::__function::__policy_func.985" }
%"class.std::__1::__function::__policy_func.985" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.986", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.986" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, i32)* }
%"class.spvtools::opt::analysis::RuntimeArray" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Struct" = type { %"class.spvtools::opt::analysis::Type.base", %"class.std::__1::vector.965", %"class.std::__1::map.972" }
%"class.std::__1::vector.965" = type { %"class.std::__1::__vector_base.966" }
%"class.std::__1::__vector_base.966" = type { %"class.spvtools::opt::analysis::Type"**, %"class.spvtools::opt::analysis::Type"**, %"class.std::__1::__compressed_pair.967" }
%"class.std::__1::__compressed_pair.967" = type { %"struct.std::__1::__compressed_pair_elem.968" }
%"struct.std::__1::__compressed_pair_elem.968" = type { %"class.spvtools::opt::analysis::Type"** }
%"class.std::__1::map.972" = type { %"class.std::__1::__tree.973" }
%"class.std::__1::__tree.973" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.974", %"class.std::__1::__compressed_pair.978" }
%"class.std::__1::__compressed_pair.974" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::analysis::Array" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, %"struct.spvtools::opt::analysis::Array::LengthInfo" }
%"struct.spvtools::opt::analysis::Array::LengthInfo" = type { i32, %"class.std::__1::vector.3" }
%"class.spvtools::opt::DominatorAnalysis" = type { %"class.spvtools::opt::DominatorAnalysisBase" }
%"class.spvtools::opt::DominatorAnalysisBase" = type { %"class.spvtools::opt::DominatorTree" }
%"class.spvtools::opt::DominatorTree" = type <{ %"class.std::__1::vector.947", %"class.std::__1::map.954", i8, [7 x i8] }>
%"class.std::__1::vector.947" = type { %"class.std::__1::__vector_base.948" }
%"class.std::__1::__vector_base.948" = type { %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"**, %"class.std::__1::__compressed_pair.949" }
%"struct.spvtools::opt::DominatorTreeNode" = type { %"class.spvtools::opt::BasicBlock"*, %"struct.spvtools::opt::DominatorTreeNode"*, %"class.std::__1::vector.947", i32, i32 }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.950" }
%"struct.std::__1::__compressed_pair_elem.950" = type { %"struct.spvtools::opt::DominatorTreeNode"** }
%"class.std::__1::map.954" = type { %"class.std::__1::__tree.955" }
%"class.std::__1::__tree.955" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.956", %"class.std::__1::__compressed_pair.960" }
%"class.std::__1::__compressed_pair.956" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::InstructionBuilder" = type <{ %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::InstructionList::iterator", i32, [4 x i8] }>
%"class.spvtools::opt::InstructionList::iterator" = type { %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" }
%"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" = type { %"class.spvtools::opt::Instruction"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.988" = type { %"class.std::__1::__vector_base.989" }
%"class.std::__1::__vector_base.989" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.990" }
%"struct.std::__1::pair" = type <{ %"class.spvtools::opt::Instruction"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.991" }
%"struct.std::__1::__compressed_pair_elem.991" = type { %"struct.std::__1::pair"* }
%"class.std::__1::function.995" = type { %"class.std::__1::__function::__policy_func.999" }
%"class.std::__1::__function::__policy_func.999" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1000", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1000" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, i32)* }
%"class.spvtools::opt::Pass" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8, [7 x i8] }>
%"class.spvtools::opt::analysis::Integer" = type <{ %"class.spvtools::opt::analysis::Type.base", i32, i8, [7 x i8] }>
%"class.spvtools::opt::analysis::Vector" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Matrix" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.spvtools::opt::Instruction"** }
%"class.std::__1::tuple.1013" = type { i8 }
%"class.std::__1::function.1023" = type { %"class.std::__1::__function::__policy_func.1027" }
%"class.std::__1::__function::__policy_func.1027" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1028", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1028" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.1038" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::pair.1038" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::__tree_node.1043" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.1044" }
%"struct.std::__1::pair.1044" = type <{ %"class.spvtools::opt::analysis::Constant"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Void" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Bool" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Float" = type { %"class.spvtools::opt::analysis::Type.base", i32 }
%"class.spvtools::opt::analysis::Image" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, i32, i32, i8, i8, i32, i32, i32 }
%"class.spvtools::opt::analysis::Sampler" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::SampledImage" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Opaque" = type { %"class.spvtools::opt::analysis::Type.base", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1006" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.1007" }
%"struct.std::__1::__compressed_pair_elem.1007" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.spvtools::opt::analysis::Function" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::vector.965" }
%"class.spvtools::opt::analysis::Event" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::DeviceEvent" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::ReserveId" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Queue" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Pipe" = type { %"class.spvtools::opt::analysis::Type.base", i32 }
%"class.spvtools::opt::analysis::ForwardPointer" = type { %"class.spvtools::opt::analysis::Type.base", i32, i32, %"class.spvtools::opt::analysis::Pointer"* }
%"class.spvtools::opt::analysis::PipeStorage" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::NamedBarrier" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::AccelerationStructureNV" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::CooperativeMatrixNV" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, i32, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::RayQueryKHR" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"struct.std::__1::__hash_node_base.1068" = type { %"struct.std::__1::__hash_node_base.1068"* }
%"class.std::__1::__function::__default_alloc_func.1101" = type { %class.anon.963 }
%class.anon.963 = type { %"class.spvtools::opt::CopyPropagateArrays"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::DominatorAnalysis"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::__function::__default_alloc_func.1103" = type { %class.anon.987 }
%class.anon.987 = type { %"class.spvtools::opt::CopyPropagateArrays"*, %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::Type"* }

$_ZNK8spvtools3opt19CopyPropagateArrays12MemoryObject16GetPointerTypeIdEPKS1_ = comdat any

$_ZN8spvtools3opt18InstructionBuilder14AddAccessChainEjjNSt3__16vectorIjNS2_9allocatorIjEEEE = comdat any

$_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6insertINS_11__wrap_iterIPKjEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPjEEE4typeES8_SA_SA_ = comdat any

$_ZN8spvtools3opt7MemPassD2Ev = comdat any

$_ZN8spvtools3opt19CopyPropagateArraysD0Ev = comdat any

$_ZNK8spvtools3opt19CopyPropagateArrays4nameEv = comdat any

$_ZN8spvtools3opt19CopyPropagateArrays20GetPreservedAnalysesEv = comdat any

$_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_ = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN8spvtools3opt8analysis15ConstantManagerD2Ev = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZN8spvtools3opt8analysis4TypeD0Ev = comdat any

$_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv = comdat any

$_ZN8spvtools3opt8analysis4Type6AsVoidEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsVoidEv = comdat any

$_ZN8spvtools3opt8analysis4Type6AsBoolEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsBoolEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsIntegerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsIntegerEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsFloatEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsFloatEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsVectorEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsVectorEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsMatrixEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsMatrixEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsImageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsImageEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsSamplerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsSamplerEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsSampledImageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsArrayEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsArrayEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsStructEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsStructEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsOpaqueEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsPointerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsPointerEv = comdat any

$_ZN8spvtools3opt8analysis4Type10AsFunctionEv = comdat any

$_ZNK8spvtools3opt8analysis4Type10AsFunctionEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsEventEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsEventEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv = comdat any

$_ZN8spvtools3opt8analysis4Type11AsReserveIdEv = comdat any

$_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsQueueEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsQueueEv = comdat any

$_ZN8spvtools3opt8analysis4Type6AsPipeEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsPipeEv = comdat any

$_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv = comdat any

$_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv = comdat any

$_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv = comdat any

$_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv = comdat any

$_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv = comdat any

$_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv = comdat any

$_ZN8spvtools3opt8analysis11TypeManagerD2Ev = comdat any

$_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev = comdat any

$_ZN8spvtools3opt7MemPassD0Ev = comdat any

$_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv = comdat any

$_ZN8spvtools3opt4PassD2Ev = comdat any

$_ZN8spvtools3opt4PassD0Ev = comdat any

$_ZN8spvtools3opt8analysis4TypeD2Ev = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN8spvtools3opt8analysis4TypeE = comdat any

$_ZTVN8spvtools3opt7MemPassE = comdat any

$_ZTVN8spvtools3opt4PassE = comdat any

@_ZTVN8spvtools3opt19CopyPropagateArraysE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::MemPass"*)* @_ZN8spvtools3opt7MemPassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::CopyPropagateArrays"*)* @_ZN8spvtools3opt19CopyPropagateArraysD0Ev to i8*), i8* bitcast (i8* (%"class.spvtools::opt::CopyPropagateArrays"*)* @_ZNK8spvtools3opt19CopyPropagateArrays4nameEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::CopyPropagateArrays"*)* @_ZN8spvtools3opt19CopyPropagateArrays20GetPreservedAnalysesEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::CopyPropagateArrays"*)* @_ZN8spvtools3opt19CopyPropagateArrays7ProcessEv to i8*)] }, align 8
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@.str.1 = private unnamed_addr constant [38 x i8] c"ID overflow. Try running compact-ids.\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.ref.tmp.3 = private constant %struct.spv_position_t zeroinitializer, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZTVN8spvtools3opt8analysis7IntegerE = external unnamed_addr constant { [61 x i8*] }, align 8
@_ZTVN8spvtools3opt8analysis4TypeE = linkonce_odr hidden unnamed_addr constant { [61 x i8*] } { [61 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4TypeD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4TypeD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt7MemPassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::MemPass"*)* @_ZN8spvtools3opt7MemPassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::MemPass"*)* @_ZN8spvtools3opt7MemPassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt4PassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.4 = private unnamed_addr constant [22 x i8] c"copy-propagate-arrays\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt19CopyPropagateArrays20FindStoreInstructionEPKNS5_11InstructionEE3$_0FbPS7_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt19CopyPropagateArrays11HasNoStoresEPNS5_11InstructionEE3$_1FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt19CopyPropagateArrays22HasValidReferencesOnlyEPNS5_11InstructionES8_E3$_2FbS8_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt19CopyPropagateArrays22HasValidReferencesOnlyEPNS5_11InstructionES8_E3$_2FbS8_EEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt19CopyPropagateArrays22HasValidReferencesOnlyEPNS5_11InstructionES8_E3$_2FbS8_EEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt19CopyPropagateArrays13CanUpdateUsesEPNS5_11InstructionEjE3$_3FbS8_jEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt19CopyPropagateArrays13CanUpdateUsesEPNS5_11InstructionEjE3$_3FbS8_jEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt19CopyPropagateArrays13CanUpdateUsesEPNS5_11InstructionEjE3$_3FbS8_jEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt19CopyPropagateArrays10UpdateUsesEPNS5_11InstructionES8_E3$_4FvS8_jEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt19CopyPropagateArrays7ProcessEv(%"class.spvtools::opt::CopyPropagateArrays"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays", %"class.spvtools::opt::CopyPropagateArrays"* %0, i64 0, i32 0, i32 0, i32 2
  %3 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %5, i64 0, i32 15, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %5, i64 0, i32 15, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.28"* %7, %9
  br i1 %10, label %11, label %16

11:                                               ; preds = %32, %1
  %12 = phi i8 [ 0, %1 ], [ %33, %32 ]
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  %15 = select i1 %14, i32 17, i32 16
  ret i32 %15

16:                                               ; preds = %1, %32
  %17 = phi i8 [ %33, %32 ], [ 0, %1 ]
  %18 = phi %"class.std::__1::unique_ptr.28"* [ %34, %32 ], [ %7, %1 ]
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %19, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %20, i64 0, i32 3, i32 0, i32 0
  %22 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %23, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %24, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %26 = bitcast %"class.spvtools::opt::Instruction"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = inttoptr i64 %27 to %"class.spvtools::opt::Instruction"*
  %29 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 59
  br i1 %31, label %36, label %32

32:                                               ; preds = %72, %16
  %33 = phi i8 [ %17, %16 ], [ %73, %72 ]
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %18, i64 1
  %35 = icmp eq %"class.std::__1::unique_ptr.28"* %34, %9
  br i1 %35, label %11, label %16

36:                                               ; preds = %16, %72
  %37 = phi %"class.spvtools::opt::Instruction"* [ %78, %72 ], [ %28, %16 ]
  %38 = phi i64 [ %77, %72 ], [ %27, %16 ]
  %39 = phi i8 [ %73, %72 ], [ %17, %16 ]
  %40 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %37, i64 0, i32 3
  %41 = load i8, i8* %40, align 4, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %36
  %44 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %37, i32 0) #11
  br label %45

45:                                               ; preds = %36, %43
  %46 = phi i32 [ %44, %43 ], [ 0, %36 ]
  %47 = tail call zeroext i1 @_ZN8spvtools3opt19CopyPropagateArrays20IsPointerToArrayTypeEj(%"class.spvtools::opt::CopyPropagateArrays"* %0, i32 %46)
  br i1 %47, label %48, label %72

48:                                               ; preds = %45
  %49 = tail call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt19CopyPropagateArrays20FindStoreInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::CopyPropagateArrays"* %0, %"class.spvtools::opt::Instruction"* %37)
  %50 = icmp eq %"class.spvtools::opt::Instruction"* %49, null
  br i1 %50, label %72, label %51

51:                                               ; preds = %48
  %52 = tail call %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* @_ZN8spvtools3opt19CopyPropagateArrays26FindSourceObjectIfPossibleEPNS0_11InstructionES3_(%"class.spvtools::opt::CopyPropagateArrays"* %0, %"class.spvtools::opt::Instruction"* %37, %"class.spvtools::opt::Instruction"* nonnull %49)
  %53 = icmp eq %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %52, null
  br i1 %53, label %72, label %54

54:                                               ; preds = %51
  %55 = tail call i32 @_ZNK8spvtools3opt19CopyPropagateArrays12MemoryObject16GetPointerTypeIdEPKS1_(%"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* nonnull %52, %"class.spvtools::opt::CopyPropagateArrays"* %0)
  %56 = tail call zeroext i1 @_ZN8spvtools3opt19CopyPropagateArrays13CanUpdateUsesEPNS0_11InstructionEj(%"class.spvtools::opt::CopyPropagateArrays"* %0, %"class.spvtools::opt::Instruction"* %37, i32 %55)
  br i1 %56, label %57, label %60

57:                                               ; preds = %54
  %58 = tail call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt19CopyPropagateArrays19BuildNewAccessChainEPNS0_11InstructionEPNS1_12MemoryObjectE(%"class.spvtools::opt::CopyPropagateArrays"* %0, %"class.spvtools::opt::Instruction"* nonnull %49, %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* nonnull %52) #11
  %59 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %2, align 8
  tail call void @_ZN8spvtools3opt9IRContext21KillNamesAndDecoratesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %59, %"class.spvtools::opt::Instruction"* %37) #11
  tail call void @_ZN8spvtools3opt19CopyPropagateArrays10UpdateUsesEPNS0_11InstructionES3_(%"class.spvtools::opt::CopyPropagateArrays"* %0, %"class.spvtools::opt::Instruction"* %37, %"class.spvtools::opt::Instruction"* %58) #11
  br label %60

60:                                               ; preds = %54, %57
  %61 = phi i8 [ %39, %54 ], [ 1, %57 ]
  %62 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %52, i64 0, i32 1, i32 0, i32 0
  %63 = load i32*, i32** %62, align 8
  %64 = icmp eq i32* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %60
  %66 = ptrtoint i32* %63 to i64
  %67 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %52, i64 0, i32 1, i32 0, i32 1
  %68 = bitcast i32** %67 to i64*
  store i64 %66, i64* %68, align 8
  %69 = bitcast i32* %63 to i8*
  tail call void @_ZdlPv(i8* %69) #12
  br label %70

70:                                               ; preds = %65, %60
  %71 = bitcast %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %52 to i8*
  tail call void @_ZdlPv(i8* %71) #12
  br label %72

72:                                               ; preds = %51, %70, %48, %45
  %73 = phi i8 [ %39, %45 ], [ %39, %48 ], [ %61, %70 ], [ %39, %51 ]
  %74 = inttoptr i64 %38 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %75 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %74, i64 0, i32 1
  %76 = bitcast %"class.spvtools::opt::Instruction"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = inttoptr i64 %77 to %"class.spvtools::opt::Instruction"*
  %79 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %78, i64 0, i32 2
  %80 = load i32, i32* %79, align 8
  %81 = icmp eq i32 %80, 59
  br i1 %81, label %36, label %32
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt19CopyPropagateArrays20IsPointerToArrayTypeEj(%"class.spvtools::opt::CopyPropagateArrays"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays", %"class.spvtools::opt::CopyPropagateArrays"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 11
  %6 = load i32, i32* %5, align 8
  %7 = trunc i32 %6 to i16
  %8 = icmp slt i16 %7, 0
  br i1 %8, label %24, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 5
  %11 = tail call i8* @_Znwm(i64 240) #12
  %12 = bitcast i8* %11 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %12, %"class.std::__1::function"* dereferenceable(32) %10, %"class.spvtools::opt::IRContext"* %4) #11
  %13 = ptrtoint i8* %11 to i64
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 20
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %15, align 8
  %17 = bitcast %"class.std::__1::unique_ptr.480"* %14 to i64*
  store i64 %13, i64* %17, align 8
  %18 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %16, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %9
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %16) #11
  %20 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %16 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %19, %9
  %22 = load i32, i32* %5, align 8
  %23 = or i32 %22, 32768
  store i32 %23, i32* %5, align 8
  br label %24

24:                                               ; preds = %2, %21
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 20, i32 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %25, align 8
  %27 = tail call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %26, i32 %1) #11
  %28 = bitcast %"class.spvtools::opt::analysis::Type"* %27 to %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)***
  %29 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %29, i64 32
  %31 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %30, align 8
  %32 = tail call %"class.spvtools::opt::analysis::Pointer"* %31(%"class.spvtools::opt::analysis::Type"* %27) #11
  %33 = icmp eq %"class.spvtools::opt::analysis::Pointer"* %32, null
  br i1 %33, label %42, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::Pointer", %"class.spvtools::opt::analysis::Pointer"* %32, i64 0, i32 2
  %36 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %35, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %36, i64 0, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 9
  %40 = icmp eq i32 %38, 6
  %41 = or i1 %39, %40
  ret i1 %41

42:                                               ; preds = %24
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt19CopyPropagateArrays20FindStoreInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::CopyPropagateArrays"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %4 = alloca %"class.std::__1::function.940", align 8
  %5 = bitcast %"class.spvtools::opt::Instruction"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %3, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays", %"class.spvtools::opt::CopyPropagateArrays"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 11
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %36

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %13, align 8
  %15 = tail call i8* @_Znwm(i64 104) #12
  %16 = bitcast i8* %15 to %"class.spvtools::opt::analysis::DefUseManager"*
  %17 = getelementptr inbounds i8, i8* %15, i64 32
  %18 = bitcast i8* %17 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %15, i64 48
  %20 = getelementptr inbounds i8, i8* %15, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #11
  %21 = bitcast i8* %20 to i8**
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds i8, i8* %15, i64 64
  %23 = getelementptr inbounds i8, i8* %15, i64 96
  %24 = bitcast i8* %23 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %24, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %16, %"class.spvtools::opt::Module"* %14) #11
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 6
  %26 = ptrtoint i8* %15 to i64
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %25, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %27, align 8
  %29 = bitcast %"class.std::__1::unique_ptr.62"* %25 to i64*
  store i64 %26, i64* %29, align 8
  %30 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %28, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %12
  %32 = bitcast %"class.std::__1::unique_ptr.62"* %25 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %32, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %28) #11
  br label %33

33:                                               ; preds = %31, %12
  %34 = load i32, i32* %8, align 8
  %35 = or i32 %34, 1
  store i32 %35, i32* %8, align 8
  br label %36

36:                                               ; preds = %2, %33
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 6, i32 0, i32 0, i32 0
  %38 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %37, align 8
  %39 = bitcast %"class.std::__1::function.940"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %4, i64 0, i32 0, i32 1, i32 0
  %41 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %4, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNKS3_19CopyPropagateArrays20FindStoreInstructionEPKS4_E3$_0S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %40, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt19CopyPropagateArrays20FindStoreInstructionEPKNS5_11InstructionEE3$_0FbPS7_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %41, align 8
  %42 = bitcast %"class.std::__1::function.940"* %4 to %"class.spvtools::opt::Instruction"***
  store %"class.spvtools::opt::Instruction"** %3, %"class.spvtools::opt::Instruction"*** %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %4, i64 0, i32 0, i32 0, i32 1
  %44 = bitcast [8 x i8]* %43 to %"class.spvtools::opt::Instruction"**
  store %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::Instruction"** %44, align 8
  %45 = call zeroext i1 @_ZNK8spvtools3opt8analysis13DefUseManager13WhileEachUserEPKNS0_11InstructionERKNSt3__18functionIFbPS3_EEE(%"class.spvtools::opt::analysis::DefUseManager"* %38, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::function.940"* nonnull dereferenceable(32) %4) #11
  %46 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %41, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %46, i64 0, i32 1
  %48 = load void (i8*)*, void (i8*)** %47, align 8
  %49 = icmp eq void (i8*)* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %36
  %51 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %4, i64 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void %48(i8* %52) #11
  br label %53

53:                                               ; preds = %36, %50
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #11
  %54 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  ret %"class.spvtools::opt::Instruction"* %54
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* @_ZN8spvtools3opt19CopyPropagateArrays26FindSourceObjectIfPossibleEPNS0_11InstructionES3_(%"class.spvtools::opt::CopyPropagateArrays"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.spvtools::opt::Instruction"* %2, null
  br i1 %4, label %38, label %5

5:                                                ; preds = %3
  %6 = tail call zeroext i1 @_ZN8spvtools3opt19CopyPropagateArrays22HasValidReferencesOnlyEPNS0_11InstructionES3_(%"class.spvtools::opt::CopyPropagateArrays"* %0, %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::Instruction"* nonnull %2)
  br i1 %6, label %7, label %38

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 3
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  %14 = select i1 %13, i32 1, i32 2
  %15 = xor i1 %13, true
  %16 = zext i1 %15 to i32
  %17 = select i1 %10, i32 %16, i32 %14
  %18 = add nuw nsw i32 %17, 1
  %19 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %2, i32 %18) #11
  %20 = tail call %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* @_ZN8spvtools3opt19CopyPropagateArrays20GetSourceObjectIfAnyEj(%"class.spvtools::opt::CopyPropagateArrays"* %0, i32 %19)
  %21 = icmp eq %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %20, null
  br i1 %21, label %38, label %22

22:                                               ; preds = %7
  %23 = ptrtoint %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %20 to i64
  %24 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %20, i64 0, i32 0
  %25 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %24, align 8
  %26 = tail call zeroext i1 @_ZN8spvtools3opt19CopyPropagateArrays11HasNoStoresEPNS0_11InstructionE(%"class.spvtools::opt::CopyPropagateArrays"* %0, %"class.spvtools::opt::Instruction"* %25)
  br i1 %26, label %38, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %20, i64 0, i32 1, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = icmp eq i32* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = ptrtoint i32* %29 to i64
  %33 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %20, i64 0, i32 1, i32 0, i32 1
  %34 = bitcast i32** %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = bitcast i32* %29 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  br label %36

36:                                               ; preds = %31, %27
  %37 = bitcast %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %20 to i8*
  tail call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %7, %22, %36, %5, %3
  %39 = phi i64 [ 0, %3 ], [ 0, %5 ], [ 0, %36 ], [ %23, %22 ], [ 0, %7 ]
  %40 = inttoptr i64 %39 to %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"*
  ret %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %40
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt19CopyPropagateArrays13CanUpdateUsesEPNS0_11InstructionEj(%"class.spvtools::opt::CopyPropagateArrays"*, %"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::function.981", align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays", %"class.spvtools::opt::CopyPropagateArrays"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 11
  %8 = load i32, i32* %7, align 8
  %9 = trunc i32 %8 to i16
  %10 = icmp slt i16 %9, 0
  br i1 %10, label %29, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 5
  %13 = tail call i8* @_Znwm(i64 240) #12
  %14 = bitcast i8* %13 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %14, %"class.std::__1::function"* dereferenceable(32) %12, %"class.spvtools::opt::IRContext"* %6) #11
  %15 = ptrtoint i8* %13 to i64
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 20
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %17, align 8
  %19 = bitcast %"class.std::__1::unique_ptr.480"* %16 to i64*
  store i64 %15, i64* %19, align 8
  %20 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %11
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %18) #11
  %22 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %18 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %21, %11
  %24 = load i32, i32* %7, align 8
  %25 = or i32 %24, 32768
  store i32 %25, i32* %7, align 8
  %26 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %26, i64 0, i32 11
  %28 = load i32, i32* %27, align 8
  br label %29

29:                                               ; preds = %3, %23
  %30 = phi i32 [ %8, %3 ], [ %28, %23 ]
  %31 = phi %"class.spvtools::opt::IRContext"* [ %6, %3 ], [ %26, %23 ]
  %32 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 20, i32 0, i32 0, i32 0
  %33 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %32, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %31, i64 0, i32 11
  %35 = and i32 %30, 16384
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %54

37:                                               ; preds = %29
  %38 = tail call i8* @_Znwm(i64 136) #12
  %39 = bitcast i8* %38 to %"class.spvtools::opt::analysis::ConstantManager"*
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %39, %"class.spvtools::opt::IRContext"* %31) #11
  %40 = ptrtoint i8* %38 to i64
  %41 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %31, i64 0, i32 19
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %42, align 8
  %44 = bitcast %"class.std::__1::unique_ptr.400"* %41 to i64*
  store i64 %40, i64* %44, align 8
  %45 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %43, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %37
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %43) #11
  %47 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %43 to i8*
  tail call void @_ZdlPv(i8* %47) #12
  br label %48

48:                                               ; preds = %46, %37
  %49 = load i32, i32* %34, align 8
  %50 = or i32 %49, 16384
  store i32 %50, i32* %34, align 8
  %51 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %52 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %51, i64 0, i32 11
  %53 = load i32, i32* %52, align 8
  br label %54

54:                                               ; preds = %29, %48
  %55 = phi i32 [ %30, %29 ], [ %53, %48 ]
  %56 = phi %"class.spvtools::opt::IRContext"* [ %31, %29 ], [ %51, %48 ]
  %57 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %31, i64 0, i32 19, i32 0, i32 0, i32 0
  %58 = bitcast %"class.spvtools::opt::analysis::ConstantManager"** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %56, i64 0, i32 11
  %61 = and i32 %55, 1
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %87

63:                                               ; preds = %54
  %64 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %56, i64 0, i32 4, i32 0, i32 0, i32 0
  %65 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %64, align 8
  %66 = tail call i8* @_Znwm(i64 104) #12
  %67 = bitcast i8* %66 to %"class.spvtools::opt::analysis::DefUseManager"*
  %68 = getelementptr inbounds i8, i8* %66, i64 32
  %69 = bitcast i8* %68 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %69, align 4
  %70 = getelementptr inbounds i8, i8* %66, i64 48
  %71 = getelementptr inbounds i8, i8* %66, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false) #11
  %72 = bitcast i8* %71 to i8**
  store i8* %70, i8** %72, align 8
  %73 = getelementptr inbounds i8, i8* %66, i64 64
  %74 = getelementptr inbounds i8, i8* %66, i64 96
  %75 = bitcast i8* %74 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %75, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %67, %"class.spvtools::opt::Module"* %65) #11
  %76 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %56, i64 0, i32 6
  %77 = ptrtoint i8* %66 to i64
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %76, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %78, align 8
  %80 = bitcast %"class.std::__1::unique_ptr.62"* %76 to i64*
  store i64 %77, i64* %80, align 8
  %81 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %79, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %63
  %83 = bitcast %"class.std::__1::unique_ptr.62"* %76 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %83, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %79) #11
  br label %84

84:                                               ; preds = %82, %63
  %85 = load i32, i32* %60, align 8
  %86 = or i32 %85, 1
  store i32 %86, i32* %60, align 8
  br label %87

87:                                               ; preds = %54, %84
  %88 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %56, i64 0, i32 6, i32 0, i32 0, i32 0
  %89 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %88, align 8
  %90 = tail call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %33, i32 %2) #11
  %91 = bitcast %"class.spvtools::opt::analysis::Type"* %90 to %"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)***
  %92 = load %"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)*** %91, align 8
  %93 = getelementptr inbounds %"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)** %92, i64 26
  %94 = load %"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)** %93, align 8
  %95 = tail call %"class.spvtools::opt::analysis::RuntimeArray"* %94(%"class.spvtools::opt::analysis::Type"* %90) #11
  %96 = icmp eq %"class.spvtools::opt::analysis::RuntimeArray"* %95, null
  br i1 %96, label %97, label %139

97:                                               ; preds = %87
  %98 = bitcast %"class.spvtools::opt::analysis::Type"* %90 to %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)***
  %99 = load %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)*** %98, align 8
  %100 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)** %99, i64 28
  %101 = load %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)** %100, align 8
  %102 = tail call %"class.spvtools::opt::analysis::Struct"* %101(%"class.spvtools::opt::analysis::Type"* %90) #11
  %103 = icmp eq %"class.spvtools::opt::analysis::Struct"* %102, null
  br i1 %103, label %104, label %118

104:                                              ; preds = %97
  %105 = bitcast %"class.spvtools::opt::analysis::Type"* %90 to %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)***
  %106 = load %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)*** %105, align 8
  %107 = getelementptr inbounds %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)** %106, i64 24
  %108 = load %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)** %107, align 8
  %109 = tail call %"class.spvtools::opt::analysis::Array"* %108(%"class.spvtools::opt::analysis::Type"* %90) #11
  %110 = icmp eq %"class.spvtools::opt::analysis::Array"* %109, null
  br i1 %110, label %111, label %118

111:                                              ; preds = %104
  %112 = bitcast %"class.spvtools::opt::analysis::Type"* %90 to %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)***
  %113 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*** %112, align 8
  %114 = getelementptr inbounds %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %113, i64 32
  %115 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %114, align 8
  %116 = tail call %"class.spvtools::opt::analysis::Pointer"* %115(%"class.spvtools::opt::analysis::Type"* %90) #11
  %117 = icmp eq %"class.spvtools::opt::analysis::Pointer"* %116, null
  br i1 %117, label %139, label %118

118:                                              ; preds = %111, %104, %97
  %119 = bitcast %"class.std::__1::function.981"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %119) #11
  %120 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %4, i64 0, i32 0, i32 1, i32 0
  %121 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %4, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEjEE11__call_implINS0_20__default_alloc_funcIZNS3_19CopyPropagateArrays13CanUpdateUsesES5_jE3$_3S6_EEEEbPKNS0_16__policy_storageES5_j", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, i32)** %120, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt19CopyPropagateArrays13CanUpdateUsesEPNS5_11InstructionEjE3$_3FbS8_jEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %121, align 8
  %122 = tail call i8* @_Znwm(i64 32) #12, !noalias !3
  %123 = bitcast i8* %122 to %"class.spvtools::opt::CopyPropagateArrays"**
  store %"class.spvtools::opt::CopyPropagateArrays"* %0, %"class.spvtools::opt::CopyPropagateArrays"** %123, align 8
  %124 = getelementptr inbounds i8, i8* %122, i64 8
  %125 = bitcast i8* %124 to %"class.spvtools::opt::analysis::TypeManager"**
  store %"class.spvtools::opt::analysis::TypeManager"* %33, %"class.spvtools::opt::analysis::TypeManager"** %125, align 8
  %126 = getelementptr inbounds i8, i8* %122, i64 16
  %127 = bitcast i8* %126 to i64*
  store i64 %59, i64* %127, align 8
  %128 = getelementptr inbounds i8, i8* %122, i64 24
  %129 = bitcast i8* %128 to %"class.spvtools::opt::analysis::Type"**
  store %"class.spvtools::opt::analysis::Type"* %90, %"class.spvtools::opt::analysis::Type"** %129, align 8
  %130 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %4, i64 0, i32 0, i32 0, i32 0
  store i8* %122, i8** %130, align 8
  %131 = call zeroext i1 @_ZNK8spvtools3opt8analysis13DefUseManager12WhileEachUseEPKNS0_11InstructionERKNSt3__18functionIFbPS3_jEEE(%"class.spvtools::opt::analysis::DefUseManager"* %89, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::function.981"* nonnull dereferenceable(32) %4) #11
  %132 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %121, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %132, i64 0, i32 1
  %134 = load void (i8*)*, void (i8*)** %133, align 8
  %135 = icmp eq void (i8*)* %134, null
  br i1 %135, label %138, label %136

136:                                              ; preds = %118
  %137 = load i8*, i8** %130, align 8
  call void %134(i8* %137) #11
  br label %138

138:                                              ; preds = %118, %136
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %119) #11
  br label %139

139:                                              ; preds = %111, %87, %138
  %140 = phi i1 [ %131, %138 ], [ false, %87 ], [ true, %111 ]
  ret i1 %140
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK8spvtools3opt19CopyPropagateArrays12MemoryObject16GetPointerTypeIdEPKS1_(%"class.spvtools::opt::CopyPropagateArrays::MemoryObject"*, %"class.spvtools::opt::CopyPropagateArrays"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.3", align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %0, i64 0, i32 0
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %5, i64 0, i32 1
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 11
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %41

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %13, align 8
  %15 = tail call i8* @_Znwm(i64 104) #12
  %16 = bitcast i8* %15 to %"class.spvtools::opt::analysis::DefUseManager"*
  %17 = getelementptr inbounds i8, i8* %15, i64 32
  %18 = bitcast i8* %17 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %15, i64 48
  %20 = getelementptr inbounds i8, i8* %15, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #11
  %21 = bitcast i8* %20 to i8**
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds i8, i8* %15, i64 64
  %23 = getelementptr inbounds i8, i8* %15, i64 96
  %24 = bitcast i8* %23 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %24, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %16, %"class.spvtools::opt::Module"* %14) #11
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 6
  %26 = ptrtoint i8* %15 to i64
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %25, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %27, align 8
  %29 = bitcast %"class.std::__1::unique_ptr.62"* %25 to i64*
  store i64 %26, i64* %29, align 8
  %30 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %28, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %12
  %32 = bitcast %"class.std::__1::unique_ptr.62"* %25 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %32, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %28) #11
  br label %33

33:                                               ; preds = %31, %12
  %34 = load i32, i32* %8, align 8
  %35 = or i32 %34, 1
  store i32 %35, i32* %8, align 8
  %36 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %36, i64 0, i32 1
  %38 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %37, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %38, i64 0, i32 11
  %40 = load i32, i32* %39, align 8
  br label %41

41:                                               ; preds = %2, %33
  %42 = phi i32 [ %9, %2 ], [ %40, %33 ]
  %43 = phi %"class.spvtools::opt::IRContext"* [ %7, %2 ], [ %38, %33 ]
  %44 = phi %"class.spvtools::opt::Instruction"* [ %5, %2 ], [ %36, %33 ]
  %45 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 6, i32 0, i32 0, i32 0
  %46 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %45, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %43, i64 0, i32 11
  %48 = trunc i32 %42 to i16
  %49 = icmp slt i16 %48, 0
  br i1 %49, label %66, label %50

50:                                               ; preds = %41
  %51 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %43, i64 0, i32 5
  %52 = tail call i8* @_Znwm(i64 240) #12
  %53 = bitcast i8* %52 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %53, %"class.std::__1::function"* dereferenceable(32) %51, %"class.spvtools::opt::IRContext"* %43) #11
  %54 = ptrtoint i8* %52 to i64
  %55 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %43, i64 0, i32 20
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %56, align 8
  %58 = bitcast %"class.std::__1::unique_ptr.480"* %55 to i64*
  store i64 %54, i64* %58, align 8
  %59 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %57, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %50
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %57) #11
  %61 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %57 to i8*
  tail call void @_ZdlPv(i8* %61) #12
  br label %62

62:                                               ; preds = %60, %50
  %63 = load i32, i32* %47, align 8
  %64 = or i32 %63, 32768
  store i32 %64, i32* %47, align 8
  %65 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  br label %66

66:                                               ; preds = %41, %62
  %67 = phi %"class.spvtools::opt::Instruction"* [ %44, %41 ], [ %65, %62 ]
  %68 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %43, i64 0, i32 20, i32 0, i32 0, i32 0
  %69 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %68, align 8
  %70 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %67, i64 0, i32 3
  %71 = load i8, i8* %70, align 4, !range !2
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %66
  %74 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %67, i32 0) #11
  br label %75

75:                                               ; preds = %66, %73
  %76 = phi i32 [ %74, %73 ], [ 0, %66 ]
  %77 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %46, i32 %76) #11
  %78 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %77, i64 0, i32 3
  %79 = load i8, i8* %78, align 4, !range !2
  %80 = icmp eq i8 %79, 0
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %77, i64 0, i32 4
  %82 = load i8, i8* %81, align 1, !range !2
  %83 = icmp eq i8 %82, 0
  %84 = select i1 %83, i32 1, i32 2
  %85 = xor i1 %83, true
  %86 = zext i1 %85 to i32
  %87 = select i1 %80, i32 %86, i32 %84
  %88 = add nuw nsw i32 %87, 1
  %89 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %77, i32 %88) #11
  %90 = bitcast %"class.std::__1::vector.3"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #11
  call void @_ZNK8spvtools3opt19CopyPropagateArrays12MemoryObject12GetAccessIdsEv(%"class.std::__1::vector.3"* nonnull sret %3, %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %0)
  %91 = call i32 @_ZNK8spvtools3opt19CopyPropagateArrays15GetMemberTypeIdEjRKNSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.spvtools::opt::CopyPropagateArrays"* %1, i32 %89, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %3)
  %92 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 0
  %93 = load i32*, i32** %92, align 8
  %94 = icmp eq i32* %93, null
  br i1 %94, label %100, label %95

95:                                               ; preds = %75
  %96 = ptrtoint i32* %93 to i64
  %97 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 1
  %98 = bitcast i32** %97 to i64*
  store i64 %96, i64* %98, align 8
  %99 = bitcast i32* %93 to i8*
  call void @_ZdlPv(i8* %99) #12
  br label %100

100:                                              ; preds = %75, %95
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #11
  %101 = load i8, i8* %78, align 4, !range !2
  %102 = icmp eq i8 %101, 0
  %103 = load i8, i8* %81, align 1, !range !2
  %104 = icmp eq i8 %103, 0
  %105 = select i1 %104, i32 1, i32 2
  %106 = xor i1 %104, true
  %107 = zext i1 %106 to i32
  %108 = select i1 %102, i32 %107, i32 %105
  %109 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %77, i32 %108) #11
  %110 = call i32 @_ZN8spvtools3opt8analysis11TypeManager17FindPointerToTypeEj16SpvStorageClass_(%"class.spvtools::opt::analysis::TypeManager"* %69, i32 %91, i32 %109) #11
  ret i32 %110
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt19CopyPropagateArrays15PropagateObjectEPNS0_11InstructionEPNS1_12MemoryObjectES3_(%"class.spvtools::opt::CopyPropagateArrays"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %5 = tail call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt19CopyPropagateArrays19BuildNewAccessChainEPNS0_11InstructionEPNS1_12MemoryObjectE(%"class.spvtools::opt::CopyPropagateArrays"* %0, %"class.spvtools::opt::Instruction"* %3, %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %2)
  %6 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays", %"class.spvtools::opt::CopyPropagateArrays"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  tail call void @_ZN8spvtools3opt9IRContext21KillNamesAndDecoratesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %7, %"class.spvtools::opt::Instruction"* %1) #11
  tail call void @_ZN8spvtools3opt19CopyPropagateArrays10UpdateUsesEPNS0_11InstructionES3_(%"class.spvtools::opt::CopyPropagateArrays"* %0, %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::Instruction"* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt19CopyPropagateArrays22HasValidReferencesOnlyEPNS0_11InstructionES3_(%"class.spvtools::opt::CopyPropagateArrays"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::function.940", align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays", %"class.spvtools::opt::CopyPropagateArrays"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %6, %"class.spvtools::opt::Instruction"* %2)
  %8 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %7, i64 0, i32 0
  %10 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %9, align 8
  %11 = tail call %"class.spvtools::opt::DominatorAnalysis"* @_ZN8spvtools3opt9IRContext20GetDominatorAnalysisEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %8, %"class.spvtools::opt::Function"* %10) #11
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 11
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %41

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 4, i32 0, i32 0, i32 0
  %19 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %18, align 8
  %20 = tail call i8* @_Znwm(i64 104) #12
  %21 = bitcast i8* %20 to %"class.spvtools::opt::analysis::DefUseManager"*
  %22 = getelementptr inbounds i8, i8* %20, i64 32
  %23 = bitcast i8* %22 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %20, i64 48
  %25 = getelementptr inbounds i8, i8* %20, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #11
  %26 = bitcast i8* %25 to i8**
  store i8* %24, i8** %26, align 8
  %27 = getelementptr inbounds i8, i8* %20, i64 64
  %28 = getelementptr inbounds i8, i8* %20, i64 96
  %29 = bitcast i8* %28 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %29, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %21, %"class.spvtools::opt::Module"* %19) #11
  %30 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 6
  %31 = ptrtoint i8* %20 to i64
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %30, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %32, align 8
  %34 = bitcast %"class.std::__1::unique_ptr.62"* %30 to i64*
  store i64 %31, i64* %34, align 8
  %35 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %33, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %17
  %37 = bitcast %"class.std::__1::unique_ptr.62"* %30 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %37, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %33) #11
  br label %38

38:                                               ; preds = %36, %17
  %39 = load i32, i32* %13, align 8
  %40 = or i32 %39, 1
  store i32 %40, i32* %13, align 8
  br label %41

41:                                               ; preds = %3, %38
  %42 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 6, i32 0, i32 0, i32 0
  %43 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %42, align 8
  %44 = bitcast %"class.std::__1::function.940"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #11
  %45 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %4, i64 0, i32 0, i32 1, i32 0
  %46 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %4, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_19CopyPropagateArrays22HasValidReferencesOnlyES5_S5_E3$_2S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %45, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt19CopyPropagateArrays22HasValidReferencesOnlyEPNS5_11InstructionES8_E3$_2FbS8_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %46, align 8
  %47 = tail call i8* @_Znwm(i64 32) #12, !noalias !8
  %48 = bitcast i8* %47 to %"class.spvtools::opt::CopyPropagateArrays"**
  store %"class.spvtools::opt::CopyPropagateArrays"* %0, %"class.spvtools::opt::CopyPropagateArrays"** %48, align 8
  %49 = getelementptr inbounds i8, i8* %47, i64 8
  %50 = bitcast i8* %49 to %"class.spvtools::opt::Instruction"**
  store %"class.spvtools::opt::Instruction"* %2, %"class.spvtools::opt::Instruction"** %50, align 8
  %51 = getelementptr inbounds i8, i8* %47, i64 16
  %52 = bitcast i8* %51 to %"class.spvtools::opt::DominatorAnalysis"**
  store %"class.spvtools::opt::DominatorAnalysis"* %11, %"class.spvtools::opt::DominatorAnalysis"** %52, align 8
  %53 = getelementptr inbounds i8, i8* %47, i64 24
  %54 = bitcast i8* %53 to %"class.spvtools::opt::Instruction"**
  store %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::Instruction"** %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %4, i64 0, i32 0, i32 0, i32 0
  store i8* %47, i8** %55, align 8
  %56 = call zeroext i1 @_ZNK8spvtools3opt8analysis13DefUseManager13WhileEachUserEPKNS0_11InstructionERKNSt3__18functionIFbPS3_EEE(%"class.spvtools::opt::analysis::DefUseManager"* %43, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::function.940"* nonnull dereferenceable(32) %4) #11
  %57 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %46, align 8
  %58 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %57, i64 0, i32 1
  %59 = load void (i8*)*, void (i8*)** %58, align 8
  %60 = icmp eq void (i8*)* %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %41
  %62 = load i8*, i8** %55, align 8
  call void %59(i8* %62) #11
  br label %63

63:                                               ; preds = %41, %61
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #11
  ret i1 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* @_ZN8spvtools3opt19CopyPropagateArrays20GetSourceObjectIfAnyEj(%"class.spvtools::opt::CopyPropagateArrays"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays", %"class.spvtools::opt::CopyPropagateArrays"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 11
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %33

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %10, align 8
  %12 = tail call i8* @_Znwm(i64 104) #12
  %13 = bitcast i8* %12 to %"class.spvtools::opt::analysis::DefUseManager"*
  %14 = getelementptr inbounds i8, i8* %12, i64 32
  %15 = bitcast i8* %14 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = getelementptr inbounds i8, i8* %12, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #11
  %18 = bitcast i8* %17 to i8**
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %12, i64 64
  %20 = getelementptr inbounds i8, i8* %12, i64 96
  %21 = bitcast i8* %20 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %21, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %13, %"class.spvtools::opt::Module"* %11) #11
  %22 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 6
  %23 = ptrtoint i8* %12 to i64
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %22, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %24, align 8
  %26 = bitcast %"class.std::__1::unique_ptr.62"* %22 to i64*
  store i64 %23, i64* %26, align 8
  %27 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %25, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %9
  %29 = bitcast %"class.std::__1::unique_ptr.62"* %22 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %29, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %25) #11
  br label %30

30:                                               ; preds = %28, %9
  %31 = load i32, i32* %5, align 8
  %32 = or i32 %31, 1
  store i32 %32, i32* %5, align 8
  br label %33

33:                                               ; preds = %2, %30
  %34 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 6, i32 0, i32 0, i32 0
  %35 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %34, align 8
  %36 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %35, i32 %1) #11
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %36, i64 0, i32 2
  %38 = load i32, i32* %37, align 8
  switch i32 %38, label %65 [
    i32 61, label %39
    i32 81, label %42
    i32 80, label %45
    i32 83, label %48
    i32 82, label %62
  ]

39:                                               ; preds = %33
  %40 = tail call %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* @_ZN8spvtools3opt19CopyPropagateArrays25BuildMemoryObjectFromLoadEPNS0_11InstructionE(%"class.spvtools::opt::CopyPropagateArrays"* %0, %"class.spvtools::opt::Instruction"* %36)
  %41 = ptrtoint %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %40 to i64
  br label %65

42:                                               ; preds = %33
  %43 = tail call %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* @_ZN8spvtools3opt19CopyPropagateArrays28BuildMemoryObjectFromExtractEPNS0_11InstructionE(%"class.spvtools::opt::CopyPropagateArrays"* %0, %"class.spvtools::opt::Instruction"* %36)
  %44 = ptrtoint %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %43 to i64
  br label %65

45:                                               ; preds = %33
  %46 = tail call %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* @_ZN8spvtools3opt19CopyPropagateArrays39BuildMemoryObjectFromCompositeConstructEPNS0_11InstructionE(%"class.spvtools::opt::CopyPropagateArrays"* %0, %"class.spvtools::opt::Instruction"* %36)
  %47 = ptrtoint %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %46 to i64
  br label %65

48:                                               ; preds = %33
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %36, i64 0, i32 3
  %50 = load i8, i8* %49, align 4, !range !2
  %51 = icmp eq i8 %50, 0
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %36, i64 0, i32 4
  %53 = load i8, i8* %52, align 1, !range !2
  %54 = icmp eq i8 %53, 0
  %55 = select i1 %54, i32 1, i32 2
  %56 = xor i1 %54, true
  %57 = zext i1 %56 to i32
  %58 = select i1 %51, i32 %57, i32 %55
  %59 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %36, i32 %58) #11
  %60 = tail call %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* @_ZN8spvtools3opt19CopyPropagateArrays20GetSourceObjectIfAnyEj(%"class.spvtools::opt::CopyPropagateArrays"* %0, i32 %59)
  %61 = ptrtoint %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %60 to i64
  br label %65

62:                                               ; preds = %33
  %63 = tail call %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* @_ZN8spvtools3opt19CopyPropagateArrays27BuildMemoryObjectFromInsertEPNS0_11InstructionE(%"class.spvtools::opt::CopyPropagateArrays"* %0, %"class.spvtools::opt::Instruction"* %36)
  %64 = ptrtoint %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %63 to i64
  br label %65

65:                                               ; preds = %33, %62, %48, %45, %42, %39
  %66 = phi i64 [ %64, %62 ], [ %61, %48 ], [ %47, %45 ], [ %44, %42 ], [ %41, %39 ], [ 0, %33 ]
  %67 = inttoptr i64 %66 to %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"*
  ret %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %67
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt19CopyPropagateArrays11HasNoStoresEPNS0_11InstructionE(%"class.spvtools::opt::CopyPropagateArrays"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::function.940", align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays", %"class.spvtools::opt::CopyPropagateArrays"* %0, i64 0, i32 0, i32 0, i32 2
  %5 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 11
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %34

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %11, align 8
  %13 = tail call i8* @_Znwm(i64 104) #12
  %14 = bitcast i8* %13 to %"class.spvtools::opt::analysis::DefUseManager"*
  %15 = getelementptr inbounds i8, i8* %13, i64 32
  %16 = bitcast i8* %15 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = getelementptr inbounds i8, i8* %13, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #11
  %19 = bitcast i8* %18 to i8**
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %13, i64 64
  %21 = getelementptr inbounds i8, i8* %13, i64 96
  %22 = bitcast i8* %21 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %22, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %14, %"class.spvtools::opt::Module"* %12) #11
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 6
  %24 = ptrtoint i8* %13 to i64
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %23, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %25, align 8
  %27 = bitcast %"class.std::__1::unique_ptr.62"* %23 to i64*
  store i64 %24, i64* %27, align 8
  %28 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %26, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %10
  %30 = bitcast %"class.std::__1::unique_ptr.62"* %23 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %30, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %26) #11
  br label %31

31:                                               ; preds = %29, %10
  %32 = load i32, i32* %6, align 8
  %33 = or i32 %32, 1
  store i32 %33, i32* %6, align 8
  br label %34

34:                                               ; preds = %2, %31
  %35 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 6, i32 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %35, align 8
  %37 = bitcast %"class.std::__1::function.940"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #11
  %38 = ptrtoint %"class.spvtools::opt::CopyPropagateArrays"* %0 to i64
  %39 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %3, i64 0, i32 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_19CopyPropagateArrays11HasNoStoresES5_E3$_1S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %39, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt19CopyPropagateArrays11HasNoStoresEPNS5_11InstructionEE3$_1FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %40, align 8
  %41 = bitcast %"class.std::__1::function.940"* %3 to i64*
  store i64 %38, i64* %41, align 8
  %42 = call zeroext i1 @_ZNK8spvtools3opt8analysis13DefUseManager13WhileEachUserEPKNS0_11InstructionERKNSt3__18functionIFbPS3_EEE(%"class.spvtools::opt::analysis::DefUseManager"* %36, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::function.940"* nonnull dereferenceable(32) %3) #11
  %43 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %40, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %43, i64 0, i32 1
  %45 = load void (i8*)*, void (i8*)** %44, align 8
  %46 = icmp eq void (i8*)* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %3, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void %45(i8* %49) #11
  br label %50

50:                                               ; preds = %34, %47
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #11
  ret i1 %42
}

declare zeroext i1 @_ZNK8spvtools3opt8analysis13DefUseManager13WhileEachUserEPKNS0_11InstructionERKNSt3__18functionIFbPS3_EEE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::function.940"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt19CopyPropagateArrays19BuildNewAccessChainEPNS0_11InstructionEPNS1_12MemoryObjectE(%"class.spvtools::opt::CopyPropagateArrays"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %5 = alloca %"class.std::__1::vector.3", align 8
  %6 = bitcast %"class.spvtools::opt::InstructionBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %4, i64 0, i32 1
  %9 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %4, i64 0, i32 3
  %10 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays", %"class.spvtools::opt::CopyPropagateArrays"* %0, i64 0, i32 0, i32 0, i32 2
  %11 = bitcast %"class.spvtools::opt::InstructionBuilder"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %13 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %12, %"class.spvtools::opt::Instruction"* %1) #11
  %14 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  store %"class.spvtools::opt::IRContext"* %12, %"class.spvtools::opt::IRContext"** %7, align 8
  store %"class.spvtools::opt::BasicBlock"* %13, %"class.spvtools::opt::BasicBlock"** %8, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %4, i64 0, i32 2
  %16 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %15 to i64*
  store i64 %14, i64* %16, align 8
  store i32 3, i32* %9, align 8
  %17 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %2, i64 0, i32 1
  %18 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %2, i64 0, i32 1, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector.3"* %17 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %20, %22
  br i1 %23, label %24, label %27

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %2, i64 0, i32 0
  %26 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %25, align 8
  br label %79

27:                                               ; preds = %3
  %28 = tail call i32 @_ZNK8spvtools3opt19CopyPropagateArrays12MemoryObject16GetPointerTypeIdEPKS1_(%"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %2, %"class.spvtools::opt::CopyPropagateArrays"* %0)
  %29 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %2, i64 0, i32 0
  %30 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %29, align 8
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %30, i64 0, i32 4
  %32 = load i8, i8* %31, align 1, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %30, i64 0, i32 3
  %36 = load i8, i8* %35, align 4, !range !2
  %37 = zext i8 %36 to i32
  %38 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %30, i32 %37) #11
  br label %39

39:                                               ; preds = %27, %34
  %40 = phi i32 [ %38, %34 ], [ 0, %27 ]
  %41 = bitcast %"class.std::__1::vector.3"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 24, i1 false) #11
  %42 = load i64, i64* %19, align 8
  %43 = load i64, i64* %21, align 8
  %44 = sub i64 %42, %43
  %45 = ashr exact i64 %44, 2
  %46 = icmp eq i64 %44, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %51

49:                                               ; preds = %47
  %50 = bitcast %"class.std::__1::vector.3"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %50) #13
  unreachable

51:                                               ; preds = %47
  %52 = tail call i8* @_Znwm(i64 %44) #12
  %53 = bitcast i8* %52 to i32*
  %54 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 1
  %55 = bitcast i32** %54 to i8**
  store i8* %52, i8** %55, align 8
  %56 = bitcast %"class.std::__1::vector.3"* %5 to i8**
  store i8* %52, i8** %56, align 8
  %57 = getelementptr inbounds i32, i32* %53, i64 %45
  %58 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %57, i32** %58, align 8
  %59 = bitcast i32** %54 to i64*
  %60 = ptrtoint i8* %52 to i64
  %61 = icmp sgt i64 %44, 0
  br i1 %61, label %62, label %67

62:                                               ; preds = %51
  %63 = lshr exact i64 %44, 2
  %64 = inttoptr i64 %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %52, i8* align 4 %64, i64 %44, i1 false) #11
  %65 = getelementptr inbounds i32, i32* %53, i64 %63
  %66 = ptrtoint i32* %65 to i64
  br label %67

67:                                               ; preds = %62, %51
  %68 = phi i64 [ %66, %62 ], [ %60, %51 ]
  store i64 %68, i64* %59, align 8
  br label %69

69:                                               ; preds = %39, %67
  %70 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddAccessChainEjjNSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.spvtools::opt::InstructionBuilder"* nonnull %4, i32 %28, i32 %40, %"class.std::__1::vector.3"* nonnull %5)
  %71 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 0
  %72 = load i32*, i32** %71, align 8
  %73 = icmp eq i32* %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %69
  %75 = ptrtoint i32* %72 to i64
  %76 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i64*
  store i64 %75, i64* %77, align 8
  %78 = bitcast i32* %72 to i8*
  call void @_ZdlPv(i8* %78) #12
  br label %79

79:                                               ; preds = %74, %69, %24
  %80 = phi %"class.spvtools::opt::Instruction"* [ %26, %24 ], [ %70, %69 ], [ %70, %74 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  ret %"class.spvtools::opt::Instruction"* %80
}

declare void @_ZN8spvtools3opt9IRContext21KillNamesAndDecoratesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt19CopyPropagateArrays10UpdateUsesEPNS0_11InstructionES3_(%"class.spvtools::opt::CopyPropagateArrays"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.spvtools::utils::SmallVector", align 8
  %5 = alloca %"class.spvtools::utils::SmallVector", align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = alloca %"class.std::__1::vector.988", align 8
  %8 = alloca %"class.std::__1::function.995", align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = alloca %"class.spvtools::utils::SmallVector", align 8
  %11 = alloca %"class.spvtools::utils::SmallVector", align 8
  %12 = alloca %"class.spvtools::utils::SmallVector", align 8
  %13 = alloca %"class.spvtools::utils::SmallVector", align 8
  %14 = alloca %"class.spvtools::utils::SmallVector", align 8
  %15 = alloca %"class.spvtools::utils::SmallVector", align 8
  %16 = alloca %"class.std::__1::vector.3", align 8
  %17 = alloca %"class.spvtools::utils::SmallVector", align 8
  %18 = alloca %"class.std::__1::vector.3", align 8
  %19 = alloca %"class.spvtools::utils::SmallVector", align 8
  %20 = alloca %"class.spvtools::utils::SmallVector", align 8
  %21 = bitcast %"class.spvtools::opt::CopyPropagateArrays"* %0 to %"class.spvtools::opt::Pass"*
  %22 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays", %"class.spvtools::opt::CopyPropagateArrays"* %0, i64 0, i32 0, i32 0, i32 2
  %23 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %23, i64 0, i32 11
  %25 = load i32, i32* %24, align 8
  %26 = trunc i32 %25 to i16
  %27 = icmp slt i16 %26, 0
  br i1 %27, label %46, label %28

28:                                               ; preds = %3
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %23, i64 0, i32 5
  %30 = tail call i8* @_Znwm(i64 240) #12
  %31 = bitcast i8* %30 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %31, %"class.std::__1::function"* dereferenceable(32) %29, %"class.spvtools::opt::IRContext"* %23) #11
  %32 = ptrtoint i8* %30 to i64
  %33 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %23, i64 0, i32 20
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %34, align 8
  %36 = bitcast %"class.std::__1::unique_ptr.480"* %33 to i64*
  store i64 %32, i64* %36, align 8
  %37 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %35, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %28
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %35) #11
  %39 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %35 to i8*
  tail call void @_ZdlPv(i8* %39) #12
  br label %40

40:                                               ; preds = %38, %28
  %41 = load i32, i32* %24, align 8
  %42 = or i32 %41, 32768
  store i32 %42, i32* %24, align 8
  %43 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %22, align 8
  %44 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %43, i64 0, i32 11
  %45 = load i32, i32* %44, align 8
  br label %46

46:                                               ; preds = %3, %40
  %47 = phi i32 [ %25, %3 ], [ %45, %40 ]
  %48 = phi %"class.spvtools::opt::IRContext"* [ %23, %3 ], [ %43, %40 ]
  %49 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %23, i64 0, i32 20, i32 0, i32 0, i32 0
  %50 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %49, align 8
  %51 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %48, i64 0, i32 11
  %52 = and i32 %47, 16384
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %71

54:                                               ; preds = %46
  %55 = tail call i8* @_Znwm(i64 136) #12
  %56 = bitcast i8* %55 to %"class.spvtools::opt::analysis::ConstantManager"*
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %56, %"class.spvtools::opt::IRContext"* %48) #11
  %57 = ptrtoint i8* %55 to i64
  %58 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %48, i64 0, i32 19
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %59, align 8
  %61 = bitcast %"class.std::__1::unique_ptr.400"* %58 to i64*
  store i64 %57, i64* %61, align 8
  %62 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %60, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %54
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %60) #11
  %64 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %60 to i8*
  tail call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %63, %54
  %66 = load i32, i32* %51, align 8
  %67 = or i32 %66, 16384
  store i32 %67, i32* %51, align 8
  %68 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %22, align 8
  %69 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %68, i64 0, i32 11
  %70 = load i32, i32* %69, align 8
  br label %71

71:                                               ; preds = %46, %65
  %72 = phi i32 [ %47, %46 ], [ %70, %65 ]
  %73 = phi %"class.spvtools::opt::IRContext"* [ %48, %46 ], [ %68, %65 ]
  %74 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %48, i64 0, i32 19, i32 0, i32 0, i32 0
  %75 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %74, align 8
  %76 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %73, i64 0, i32 11
  %77 = and i32 %72, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %103

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %73, i64 0, i32 4, i32 0, i32 0, i32 0
  %81 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %80, align 8
  %82 = tail call i8* @_Znwm(i64 104) #12
  %83 = bitcast i8* %82 to %"class.spvtools::opt::analysis::DefUseManager"*
  %84 = getelementptr inbounds i8, i8* %82, i64 32
  %85 = bitcast i8* %84 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %85, align 4
  %86 = getelementptr inbounds i8, i8* %82, i64 48
  %87 = getelementptr inbounds i8, i8* %82, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 16, i1 false) #11
  %88 = bitcast i8* %87 to i8**
  store i8* %86, i8** %88, align 8
  %89 = getelementptr inbounds i8, i8* %82, i64 64
  %90 = getelementptr inbounds i8, i8* %82, i64 96
  %91 = bitcast i8* %90 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %91, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %83, %"class.spvtools::opt::Module"* %81) #11
  %92 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %73, i64 0, i32 6
  %93 = ptrtoint i8* %82 to i64
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %92, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %94, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.62"* %92 to i64*
  store i64 %93, i64* %96, align 8
  %97 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %95, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %79
  %99 = bitcast %"class.std::__1::unique_ptr.62"* %92 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %99, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %95) #11
  br label %100

100:                                              ; preds = %98, %79
  %101 = load i32, i32* %76, align 8
  %102 = or i32 %101, 1
  store i32 %102, i32* %76, align 8
  br label %103

103:                                              ; preds = %71, %100
  %104 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %73, i64 0, i32 6, i32 0, i32 0, i32 0
  %105 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %104, align 8
  %106 = bitcast %"class.std::__1::vector.988"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #11
  %107 = getelementptr inbounds %"class.std::__1::vector.988", %"class.std::__1::vector.988"* %7, i64 0, i32 0, i32 0
  %108 = getelementptr inbounds %"class.std::__1::vector.988", %"class.std::__1::vector.988"* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 0, i64 24, i1 false) #11
  %109 = bitcast %"class.std::__1::function.995"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %109) #11
  %110 = ptrtoint %"class.std::__1::vector.988"* %7 to i64
  %111 = getelementptr inbounds %"class.std::__1::function.995", %"class.std::__1::function.995"* %8, i64 0, i32 0, i32 1, i32 0
  %112 = getelementptr inbounds %"class.std::__1::function.995", %"class.std::__1::function.995"* %8, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEjEE11__call_implINS0_20__default_alloc_funcIZNS3_19CopyPropagateArrays10UpdateUsesES5_S5_E3$_4S6_EEEEvPKNS0_16__policy_storageES5_j", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, i32)** %111, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt19CopyPropagateArrays10UpdateUsesEPNS5_11InstructionES8_E3$_4FvS8_jEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %112, align 8
  %113 = bitcast %"class.std::__1::function.995"* %8 to i64*
  store i64 %110, i64* %113, align 8
  call void @_ZNK8spvtools3opt8analysis13DefUseManager10ForEachUseEPKNS0_11InstructionERKNSt3__18functionIFvPS3_jEEE(%"class.spvtools::opt::analysis::DefUseManager"* %105, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::function.995"* nonnull dereferenceable(32) %8) #11
  %114 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %112, align 8
  %115 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %114, i64 0, i32 1
  %116 = load void (i8*)*, void (i8*)** %115, align 8
  %117 = icmp eq void (i8*)* %116, null
  br i1 %117, label %121, label %118

118:                                              ; preds = %103
  %119 = getelementptr inbounds %"class.std::__1::function.995", %"class.std::__1::function.995"* %8, i64 0, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  call void %116(i8* %120) #11
  br label %121

121:                                              ; preds = %103, %118
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %109) #11
  %122 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %107, align 8
  %123 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %108, align 8
  %124 = icmp eq %"struct.std::__1::pair"* %122, %123
  br i1 %124, label %277, label %125

125:                                              ; preds = %121
  %126 = bitcast %"class.spvtools::utils::SmallVector"* %13 to i8*
  %127 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 4
  %128 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 3
  %129 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %13, i64 0, i32 0
  %130 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %13, i64 0, i32 1
  %131 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %13, i64 0, i32 2
  %132 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %13, i64 0, i32 3, i64 0
  %133 = bitcast i32** %131 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %134 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %13, i64 0, i32 4
  %135 = bitcast %"class.std::__1::unique_ptr.0"* %134 to i64*
  %136 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %132 to i32*
  %137 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %13, i64 0, i32 4, i32 0, i32 0, i32 0
  %138 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 2
  %139 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  %140 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  %141 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 1
  %142 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 2
  %143 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 3, i64 0
  %144 = bitcast i32** %142 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %145 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4
  %146 = bitcast %"class.std::__1::unique_ptr.0"* %145 to i64*
  %147 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %143 to i32*
  %148 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %149 = bitcast %"class.spvtools::utils::SmallVector"* %10 to i8*
  %150 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 0
  %151 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 1
  %152 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 2
  %153 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 3, i64 0
  %154 = bitcast i32** %152 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %155 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4
  %156 = bitcast %"class.std::__1::unique_ptr.0"* %155 to i64*
  %157 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %153 to i32*
  %158 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %159 = bitcast %"class.spvtools::utils::SmallVector"* %11 to i8*
  %160 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 0
  %161 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 1
  %162 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 2
  %163 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 3, i64 0
  %164 = bitcast i32** %162 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %165 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4
  %166 = bitcast %"class.std::__1::unique_ptr.0"* %165 to i64*
  %167 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %163 to i32*
  %168 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %169 = bitcast %"class.spvtools::utils::SmallVector"* %12 to i8*
  %170 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 0
  %171 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 1
  %172 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 2
  %173 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 3, i64 0
  %174 = bitcast i32** %172 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %175 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 4
  %176 = bitcast %"class.std::__1::unique_ptr.0"* %175 to i64*
  %177 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %173 to i32*
  %178 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 4, i32 0, i32 0, i32 0
  %179 = bitcast %"class.spvtools::utils::SmallVector"* %20 to i8*
  %180 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 0
  %181 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 1
  %182 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 2
  %183 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 3, i64 0
  %184 = bitcast i32** %182 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %185 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 4
  %186 = bitcast %"class.std::__1::unique_ptr.0"* %185 to i64*
  %187 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %183 to i32*
  %188 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 4, i32 0, i32 0, i32 0
  %189 = bitcast %"class.spvtools::utils::SmallVector"* %19 to i8*
  %190 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %19, i64 0, i32 0
  %191 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %19, i64 0, i32 1
  %192 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %19, i64 0, i32 2
  %193 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %19, i64 0, i32 3, i64 0
  %194 = bitcast i32** %192 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %195 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %19, i64 0, i32 4
  %196 = bitcast %"class.std::__1::unique_ptr.0"* %195 to i64*
  %197 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %193 to i32*
  %198 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %19, i64 0, i32 4, i32 0, i32 0, i32 0
  %199 = bitcast %"class.spvtools::utils::SmallVector"* %17 to i8*
  %200 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %17, i64 0, i32 0
  %201 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %17, i64 0, i32 1
  %202 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %17, i64 0, i32 2
  %203 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %17, i64 0, i32 3, i64 0
  %204 = bitcast i32** %202 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %205 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %17, i64 0, i32 4
  %206 = bitcast %"class.std::__1::unique_ptr.0"* %205 to i64*
  %207 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %203 to i32*
  %208 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %17, i64 0, i32 4, i32 0, i32 0, i32 0
  %209 = bitcast %"class.std::__1::vector.3"* %18 to i8*
  %210 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %18, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %18, i64 0, i32 0, i32 1
  %212 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %18, i64 0, i32 0, i32 2, i32 0, i32 0
  %213 = bitcast i32** %211 to i64*
  %214 = bitcast %"class.std::__1::vector.3"* %18 to i64*
  %215 = bitcast i32** %212 to i64*
  %216 = bitcast %"class.spvtools::utils::SmallVector"* %4 to i8*
  %217 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 0
  %218 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 1
  %219 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 2
  %220 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 3, i64 0
  %221 = bitcast i32** %219 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %222 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4
  %223 = bitcast %"class.std::__1::unique_ptr.0"* %222 to i64*
  %224 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %220 to i32*
  %225 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %226 = bitcast %"class.spvtools::utils::SmallVector"* %15 to i8*
  %227 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %15, i64 0, i32 0
  %228 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %15, i64 0, i32 1
  %229 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %15, i64 0, i32 2
  %230 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %15, i64 0, i32 3, i64 0
  %231 = bitcast i32** %229 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %232 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %15, i64 0, i32 4
  %233 = bitcast %"class.std::__1::unique_ptr.0"* %232 to i64*
  %234 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %230 to i32*
  %235 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %15, i64 0, i32 4, i32 0, i32 0, i32 0
  %236 = bitcast %"class.std::__1::vector.3"* %16 to i8*
  %237 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %16, i64 0, i32 0, i32 0
  %238 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %16, i64 0, i32 0, i32 1
  %239 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %16, i64 0, i32 0, i32 2, i32 0, i32 0
  %240 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %75, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %241 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %75, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = bitcast i32** %238 to i64*
  %243 = bitcast %"class.std::__1::vector.3"* %16 to i64*
  %244 = bitcast i32** %239 to i64*
  %245 = bitcast %"class.spvtools::utils::SmallVector"* %5 to i8*
  %246 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 0
  %247 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 1
  %248 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 2
  %249 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 3, i64 0
  %250 = bitcast i32** %248 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %251 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4
  %252 = bitcast %"class.std::__1::unique_ptr.0"* %251 to i64*
  %253 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %249 to i32*
  %254 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %255 = bitcast %"class.spvtools::utils::SmallVector"* %14 to i8*
  %256 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 0
  %257 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 1
  %258 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 2
  %259 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 3, i64 0
  %260 = bitcast i32** %258 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %261 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 4
  %262 = bitcast %"class.std::__1::unique_ptr.0"* %261 to i64*
  %263 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %259 to i32*
  %264 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 4, i32 0, i32 0, i32 0
  %265 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  %266 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  %267 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %268 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %269 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %270 = bitcast i32** %268 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %271 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %272 = bitcast %"class.std::__1::unique_ptr.0"* %271 to i64*
  %273 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %269 to i32*
  %274 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %285

275:                                              ; preds = %1099
  %276 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %107, align 8
  br label %277

277:                                              ; preds = %275, %121
  %278 = phi %"struct.std::__1::pair"* [ %276, %275 ], [ %122, %121 ]
  %279 = icmp eq %"struct.std::__1::pair"* %278, null
  br i1 %279, label %284, label %280

280:                                              ; preds = %277
  %281 = ptrtoint %"struct.std::__1::pair"* %278 to i64
  %282 = bitcast %"struct.std::__1::pair"** %108 to i64*
  store i64 %281, i64* %282, align 8
  %283 = bitcast %"struct.std::__1::pair"* %278 to i8*
  call void @_ZdlPv(i8* %283) #12
  br label %284

284:                                              ; preds = %277, %280
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #11
  ret void

285:                                              ; preds = %125, %1099
  %286 = phi %"struct.std::__1::pair"* [ %122, %125 ], [ %1100, %1099 ]
  %287 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %286, i64 0, i32 0
  %288 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %287, align 8
  %289 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %286, i64 0, i32 1
  %290 = load i32, i32* %289, align 8
  %291 = call i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"* %288) #11
  %292 = icmp eq i32 %291, 134217727
  br i1 %292, label %461, label %293

293:                                              ; preds = %285
  %294 = call i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"* %288) #11
  switch i32 %294, label %1099 [
    i32 28, label %295
    i32 29, label %431
  ]

295:                                              ; preds = %293
  %296 = load i32, i32* %138, align 8
  switch i32 %296, label %327 [
    i32 59, label %297
    i32 55, label %297
  ]

297:                                              ; preds = %295, %295
  %298 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %22, align 8
  call void @_ZN8spvtools3opt9IRContext10ForgetUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %298, %"class.spvtools::opt::Instruction"* %288) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %139) #11
  %299 = load i8, i8* %127, align 1, !range !2
  %300 = icmp eq i8 %299, 0
  br i1 %300, label %305, label %301

301:                                              ; preds = %297
  %302 = load i8, i8* %128, align 4, !range !2
  %303 = zext i8 %302 to i32
  %304 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2, i32 %303) #11
  br label %305

305:                                              ; preds = %297, %301
  %306 = phi i32 [ %304, %301 ], [ 0, %297 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %140, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %143, %"struct.std::__1::aligned_storage<4, 4>::type"** %144, align 8
  store i64 0, i64* %146, align 8
  store i64 1, i64* %141, align 8
  store i32 %306, i32* %147, align 8
  %307 = zext i32 %290 to i64
  %308 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %288, i64 0, i32 6, i32 0, i32 0
  %309 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %308, align 8
  %310 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %309, i64 %307, i32 1
  %311 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %310, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %140, align 8
  %312 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %148, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %148, align 8
  %313 = icmp eq %"class.std::__1::vector.3"* %312, null
  br i1 %313, label %325, label %314

314:                                              ; preds = %305
  %315 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %312, i64 0, i32 0, i32 0
  %316 = load i32*, i32** %315, align 8
  %317 = icmp eq i32* %316, null
  br i1 %317, label %323, label %318

318:                                              ; preds = %314
  %319 = ptrtoint i32* %316 to i64
  %320 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %312, i64 0, i32 0, i32 1
  %321 = bitcast i32** %320 to i64*
  store i64 %319, i64* %321, align 8
  %322 = bitcast i32* %316 to i8*
  call void @_ZdlPv(i8* %322) #12
  br label %323

323:                                              ; preds = %318, %314
  %324 = bitcast %"class.std::__1::vector.3"* %312 to i8*
  call void @_ZdlPv(i8* %324) #12
  br label %325

325:                                              ; preds = %305, %323
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %139) #11
  %326 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %22, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %326, %"class.spvtools::opt::Instruction"* %288) #11
  br label %1099

327:                                              ; preds = %295
  %328 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %22, align 8
  call void @_ZN8spvtools3opt9IRContext10ForgetUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %328, %"class.spvtools::opt::Instruction"* %288) #11
  %329 = add i32 %290, -2
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %149) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %150, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %153, %"struct.std::__1::aligned_storage<4, 4>::type"** %154, align 8
  store i64 0, i64* %156, align 8
  store i64 1, i64* %151, align 8
  store i32 29, i32* %157, align 8
  %330 = zext i32 %329 to i64
  %331 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %288, i64 0, i32 6, i32 0, i32 0
  %332 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %331, align 8
  %333 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %332, i64 %330, i32 1
  %334 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %333, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %10) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %150, align 8
  %335 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %158, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %158, align 8
  %336 = icmp eq %"class.std::__1::vector.3"* %335, null
  br i1 %336, label %348, label %337

337:                                              ; preds = %327
  %338 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %335, i64 0, i32 0, i32 0
  %339 = load i32*, i32** %338, align 8
  %340 = icmp eq i32* %339, null
  br i1 %340, label %346, label %341

341:                                              ; preds = %337
  %342 = ptrtoint i32* %339 to i64
  %343 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %335, i64 0, i32 0, i32 1
  %344 = bitcast i32** %343 to i64*
  store i64 %342, i64* %344, align 8
  %345 = bitcast i32* %339 to i8*
  call void @_ZdlPv(i8* %345) #12
  br label %346

346:                                              ; preds = %341, %337
  %347 = bitcast %"class.std::__1::vector.3"* %335 to i8*
  call void @_ZdlPv(i8* %347) #12
  br label %348

348:                                              ; preds = %327, %346
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %149) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %159) #11
  %349 = load i8, i8* %127, align 1, !range !2
  %350 = icmp eq i8 %349, 0
  br i1 %350, label %355, label %351

351:                                              ; preds = %348
  %352 = load i8, i8* %128, align 4, !range !2
  %353 = zext i8 %352 to i32
  %354 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2, i32 %353) #11
  br label %355

355:                                              ; preds = %348, %351
  %356 = phi i32 [ %354, %351 ], [ 0, %348 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %160, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %163, %"struct.std::__1::aligned_storage<4, 4>::type"** %164, align 8
  store i64 0, i64* %166, align 8
  store i64 1, i64* %161, align 8
  store i32 %356, i32* %167, align 8
  %357 = zext i32 %290 to i64
  %358 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %331, align 8
  %359 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %358, i64 %357, i32 1
  %360 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %359, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %11) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %160, align 8
  %361 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %168, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %168, align 8
  %362 = icmp eq %"class.std::__1::vector.3"* %361, null
  br i1 %362, label %374, label %363

363:                                              ; preds = %355
  %364 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %361, i64 0, i32 0, i32 0
  %365 = load i32*, i32** %364, align 8
  %366 = icmp eq i32* %365, null
  br i1 %366, label %372, label %367

367:                                              ; preds = %363
  %368 = ptrtoint i32* %365 to i64
  %369 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %361, i64 0, i32 0, i32 1
  %370 = bitcast i32** %369 to i64*
  store i64 %368, i64* %370, align 8
  %371 = bitcast i32* %365 to i8*
  call void @_ZdlPv(i8* %371) #12
  br label %372

372:                                              ; preds = %367, %363
  %373 = bitcast %"class.std::__1::vector.3"* %361 to i8*
  call void @_ZdlPv(i8* %373) #12
  br label %374

374:                                              ; preds = %355, %372
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %159) #11
  %375 = add i32 %290, 1
  %376 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %288, i32 %375) #11
  %377 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %105, i32 %376) #11
  %378 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %22, align 8
  %379 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %378, i64 0, i32 11
  %380 = load i32, i32* %379, align 8
  %381 = and i32 %380, 65536
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %383, label %397

383:                                              ; preds = %374
  %384 = call i8* @_Znwm(i64 232) #12
  %385 = bitcast i8* %384 to %"class.spvtools::opt::analysis::DebugInfoManager"*
  call void @_ZN8spvtools3opt8analysis16DebugInfoManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %385, %"class.spvtools::opt::IRContext"* %378) #11
  %386 = ptrtoint i8* %384 to i64
  %387 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %378, i64 0, i32 21
  %388 = getelementptr inbounds %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.593"* %387, i64 0, i32 0, i32 0, i32 0
  %389 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %388, align 8
  %390 = bitcast %"class.std::__1::unique_ptr.593"* %387 to i64*
  store i64 %386, i64* %390, align 8
  %391 = icmp eq %"class.spvtools::opt::analysis::DebugInfoManager"* %389, null
  br i1 %391, label %394, label %392

392:                                              ; preds = %383
  call void @_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %389) #11
  %393 = bitcast %"class.spvtools::opt::analysis::DebugInfoManager"* %389 to i8*
  call void @_ZdlPv(i8* %393) #12
  br label %394

394:                                              ; preds = %392, %383
  %395 = load i32, i32* %379, align 8
  %396 = or i32 %395, 65536
  store i32 %396, i32* %379, align 8
  br label %397

397:                                              ; preds = %374, %394
  %398 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %378, i64 0, i32 21, i32 0, i32 0, i32 0
  %399 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %398, align 8
  %400 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis16DebugInfoManager20DerefDebugExpressionEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DebugInfoManager"* %399, %"class.spvtools::opt::Instruction"* %377) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %169) #11
  %401 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %400, i64 0, i32 4
  %402 = load i8, i8* %401, align 1, !range !2
  %403 = icmp eq i8 %402, 0
  br i1 %403, label %409, label %404

404:                                              ; preds = %397
  %405 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %400, i64 0, i32 3
  %406 = load i8, i8* %405, align 4, !range !2
  %407 = zext i8 %406 to i32
  %408 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %400, i32 %407) #11
  br label %409

409:                                              ; preds = %397, %404
  %410 = phi i32 [ %408, %404 ], [ 0, %397 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %170, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %173, %"struct.std::__1::aligned_storage<4, 4>::type"** %174, align 8
  store i64 0, i64* %176, align 8
  store i64 1, i64* %171, align 8
  store i32 %410, i32* %177, align 8
  %411 = zext i32 %375 to i64
  %412 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %331, align 8
  %413 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %412, i64 %411, i32 1
  %414 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %413, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %12) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %170, align 8
  %415 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %178, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %178, align 8
  %416 = icmp eq %"class.std::__1::vector.3"* %415, null
  br i1 %416, label %428, label %417

417:                                              ; preds = %409
  %418 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %415, i64 0, i32 0, i32 0
  %419 = load i32*, i32** %418, align 8
  %420 = icmp eq i32* %419, null
  br i1 %420, label %426, label %421

421:                                              ; preds = %417
  %422 = ptrtoint i32* %419 to i64
  %423 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %415, i64 0, i32 0, i32 1
  %424 = bitcast i32** %423 to i64*
  store i64 %422, i64* %424, align 8
  %425 = bitcast i32* %419 to i8*
  call void @_ZdlPv(i8* %425) #12
  br label %426

426:                                              ; preds = %421, %417
  %427 = bitcast %"class.std::__1::vector.3"* %415 to i8*
  call void @_ZdlPv(i8* %427) #12
  br label %428

428:                                              ; preds = %409, %426
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %169) #11
  %429 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %22, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %429, %"class.spvtools::opt::Instruction"* %400) #11
  %430 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %22, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %430, %"class.spvtools::opt::Instruction"* %288) #11
  br label %1099

431:                                              ; preds = %293
  %432 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %22, align 8
  call void @_ZN8spvtools3opt9IRContext10ForgetUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %432, %"class.spvtools::opt::Instruction"* %288) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %126) #11
  %433 = load i8, i8* %127, align 1, !range !2
  %434 = icmp eq i8 %433, 0
  br i1 %434, label %439, label %435

435:                                              ; preds = %431
  %436 = load i8, i8* %128, align 4, !range !2
  %437 = zext i8 %436 to i32
  %438 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2, i32 %437) #11
  br label %439

439:                                              ; preds = %431, %435
  %440 = phi i32 [ %438, %435 ], [ 0, %431 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %129, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %132, %"struct.std::__1::aligned_storage<4, 4>::type"** %133, align 8
  store i64 0, i64* %135, align 8
  store i64 1, i64* %130, align 8
  store i32 %440, i32* %136, align 8
  %441 = zext i32 %290 to i64
  %442 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %288, i64 0, i32 6, i32 0, i32 0
  %443 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %442, align 8
  %444 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %443, i64 %441, i32 1
  %445 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %444, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %13) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %129, align 8
  %446 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %137, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %137, align 8
  %447 = icmp eq %"class.std::__1::vector.3"* %446, null
  br i1 %447, label %459, label %448

448:                                              ; preds = %439
  %449 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %446, i64 0, i32 0, i32 0
  %450 = load i32*, i32** %449, align 8
  %451 = icmp eq i32* %450, null
  br i1 %451, label %457, label %452

452:                                              ; preds = %448
  %453 = ptrtoint i32* %450 to i64
  %454 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %446, i64 0, i32 0, i32 1
  %455 = bitcast i32** %454 to i64*
  store i64 %453, i64* %455, align 8
  %456 = bitcast i32* %450 to i8*
  call void @_ZdlPv(i8* %456) #12
  br label %457

457:                                              ; preds = %452, %448
  %458 = bitcast %"class.std::__1::vector.3"* %446 to i8*
  call void @_ZdlPv(i8* %458) #12
  br label %459

459:                                              ; preds = %439, %457
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %126) #11
  %460 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %22, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %460, %"class.spvtools::opt::Instruction"* %288) #11
  br label %1099

461:                                              ; preds = %285
  %462 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %288, i64 0, i32 2
  %463 = load i32, i32* %462, align 8
  switch i32 %463, label %1099 [
    i32 61, label %464
    i32 65, label %541
    i32 81, label %854
    i32 62, label %1004
    i32 60, label %1069
  ]

464:                                              ; preds = %461
  %465 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %22, align 8
  call void @_ZN8spvtools3opt9IRContext10ForgetUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %465, %"class.spvtools::opt::Instruction"* %288) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %255) #11
  %466 = load i8, i8* %127, align 1, !range !2
  %467 = icmp eq i8 %466, 0
  br i1 %467, label %472, label %468

468:                                              ; preds = %464
  %469 = load i8, i8* %128, align 4, !range !2
  %470 = zext i8 %469 to i32
  %471 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2, i32 %470) #11
  br label %472

472:                                              ; preds = %464, %468
  %473 = phi i32 [ %471, %468 ], [ 0, %464 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %256, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %259, %"struct.std::__1::aligned_storage<4, 4>::type"** %260, align 8
  store i64 0, i64* %262, align 8
  store i64 1, i64* %257, align 8
  store i32 %473, i32* %263, align 8
  %474 = zext i32 %290 to i64
  %475 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %288, i64 0, i32 6, i32 0, i32 0
  %476 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %475, align 8
  %477 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %476, i64 %474, i32 1
  %478 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %477, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %14) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %256, align 8
  %479 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %264, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %264, align 8
  %480 = icmp eq %"class.std::__1::vector.3"* %479, null
  br i1 %480, label %492, label %481

481:                                              ; preds = %472
  %482 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %479, i64 0, i32 0, i32 0
  %483 = load i32*, i32** %482, align 8
  %484 = icmp eq i32* %483, null
  br i1 %484, label %490, label %485

485:                                              ; preds = %481
  %486 = ptrtoint i32* %483 to i64
  %487 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %479, i64 0, i32 0, i32 1
  %488 = bitcast i32** %487 to i64*
  store i64 %486, i64* %488, align 8
  %489 = bitcast i32* %483 to i8*
  call void @_ZdlPv(i8* %489) #12
  br label %490

490:                                              ; preds = %485, %481
  %491 = bitcast %"class.std::__1::vector.3"* %479 to i8*
  call void @_ZdlPv(i8* %491) #12
  br label %492

492:                                              ; preds = %472, %490
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %255) #11
  %493 = load i8, i8* %128, align 4, !range !2
  %494 = icmp eq i8 %493, 0
  br i1 %494, label %497, label %495

495:                                              ; preds = %492
  %496 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2, i32 0) #11
  br label %497

497:                                              ; preds = %492, %495
  %498 = phi i32 [ %496, %495 ], [ 0, %492 ]
  %499 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %105, i32 %498) #11
  %500 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %499, i64 0, i32 3
  %501 = load i8, i8* %500, align 4, !range !2
  %502 = icmp eq i8 %501, 0
  %503 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %499, i64 0, i32 4
  %504 = load i8, i8* %503, align 1, !range !2
  %505 = icmp eq i8 %504, 0
  %506 = select i1 %505, i32 1, i32 2
  %507 = xor i1 %505, true
  %508 = zext i1 %507 to i32
  %509 = select i1 %502, i32 %508, i32 %506
  %510 = add nuw nsw i32 %509, 1
  %511 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %499, i32 %510) #11
  %512 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %288, i64 0, i32 3
  %513 = load i8, i8* %512, align 4, !range !2
  %514 = icmp eq i8 %513, 0
  br i1 %514, label %517, label %515

515:                                              ; preds = %497
  %516 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %288, i32 0) #11
  br label %517

517:                                              ; preds = %497, %515
  %518 = phi i32 [ %516, %515 ], [ 0, %497 ]
  %519 = icmp eq i32 %511, %518
  br i1 %519, label %539, label %520

520:                                              ; preds = %517
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %265) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %266, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %269, %"struct.std::__1::aligned_storage<4, 4>::type"** %270, align 8
  store i64 0, i64* %272, align 8
  store i64 1, i64* %267, align 8
  store i32 %511, i32* %273, align 8
  %521 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %475, align 8
  %522 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %521, i64 0, i32 1
  %523 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %522, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %266, align 8
  %524 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %274, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %274, align 8
  %525 = icmp eq %"class.std::__1::vector.3"* %524, null
  br i1 %525, label %537, label %526

526:                                              ; preds = %520
  %527 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %524, i64 0, i32 0, i32 0
  %528 = load i32*, i32** %527, align 8
  %529 = icmp eq i32* %528, null
  br i1 %529, label %535, label %530

530:                                              ; preds = %526
  %531 = ptrtoint i32* %528 to i64
  %532 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %524, i64 0, i32 0, i32 1
  %533 = bitcast i32** %532 to i64*
  store i64 %531, i64* %533, align 8
  %534 = bitcast i32* %528 to i8*
  call void @_ZdlPv(i8* %534) #12
  br label %535

535:                                              ; preds = %530, %526
  %536 = bitcast %"class.std::__1::vector.3"* %524 to i8*
  call void @_ZdlPv(i8* %536) #12
  br label %537

537:                                              ; preds = %520, %535
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %265) #11
  %538 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %22, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %538, %"class.spvtools::opt::Instruction"* %288) #11
  call void @_ZN8spvtools3opt19CopyPropagateArrays10UpdateUsesEPNS0_11InstructionES3_(%"class.spvtools::opt::CopyPropagateArrays"* %0, %"class.spvtools::opt::Instruction"* %288, %"class.spvtools::opt::Instruction"* %288)
  br label %1099

539:                                              ; preds = %517
  %540 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %22, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %540, %"class.spvtools::opt::Instruction"* %288) #11
  br label %1099

541:                                              ; preds = %461
  %542 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %22, align 8
  call void @_ZN8spvtools3opt9IRContext10ForgetUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %542, %"class.spvtools::opt::Instruction"* %288) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %226) #11
  %543 = load i8, i8* %127, align 1, !range !2
  %544 = icmp eq i8 %543, 0
  br i1 %544, label %549, label %545

545:                                              ; preds = %541
  %546 = load i8, i8* %128, align 4, !range !2
  %547 = zext i8 %546 to i32
  %548 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2, i32 %547) #11
  br label %549

549:                                              ; preds = %541, %545
  %550 = phi i32 [ %548, %545 ], [ 0, %541 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %227, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %230, %"struct.std::__1::aligned_storage<4, 4>::type"** %231, align 8
  store i64 0, i64* %233, align 8
  store i64 1, i64* %228, align 8
  store i32 %550, i32* %234, align 8
  %551 = zext i32 %290 to i64
  %552 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %288, i64 0, i32 6, i32 0, i32 0
  %553 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %552, align 8
  %554 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %553, i64 %551, i32 1
  %555 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %554, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %15) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %227, align 8
  %556 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %235, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %235, align 8
  %557 = icmp eq %"class.std::__1::vector.3"* %556, null
  br i1 %557, label %569, label %558

558:                                              ; preds = %549
  %559 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %556, i64 0, i32 0, i32 0
  %560 = load i32*, i32** %559, align 8
  %561 = icmp eq i32* %560, null
  br i1 %561, label %567, label %562

562:                                              ; preds = %558
  %563 = ptrtoint i32* %560 to i64
  %564 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %556, i64 0, i32 0, i32 1
  %565 = bitcast i32** %564 to i64*
  store i64 %563, i64* %565, align 8
  %566 = bitcast i32* %560 to i8*
  call void @_ZdlPv(i8* %566) #12
  br label %567

567:                                              ; preds = %562, %558
  %568 = bitcast %"class.std::__1::vector.3"* %556 to i8*
  call void @_ZdlPv(i8* %568) #12
  br label %569

569:                                              ; preds = %549, %567
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %226) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %236) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %236, i8 0, i64 24, i1 false) #11
  %570 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %288, i64 0, i32 6
  %571 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %288, i64 0, i32 6, i32 0, i32 1
  %572 = bitcast %"struct.spvtools::opt::Operand"** %571 to i64*
  %573 = bitcast %"class.std::__1::vector"* %570 to i64*
  %574 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %288, i64 0, i32 3
  %575 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %288, i64 0, i32 4
  br label %576

576:                                              ; preds = %824, %569
  %577 = phi i32 [ 1, %569 ], [ %825, %824 ]
  %578 = load i64, i64* %572, align 8
  %579 = load i64, i64* %573, align 8
  %580 = sub i64 %578, %579
  %581 = sdiv exact i64 %580, 48
  %582 = load i8, i8* %574, align 4, !range !2
  %583 = icmp eq i8 %582, 0
  %584 = load i8, i8* %575, align 1, !range !2
  %585 = icmp eq i8 %584, 0
  %586 = select i1 %585, i32 1, i32 2
  %587 = xor i1 %585, true
  %588 = zext i1 %587 to i32
  %589 = select i1 %583, i32 %588, i32 %586
  %590 = trunc i64 %581 to i32
  %591 = sub i32 %590, %589
  %592 = icmp ult i32 %577, %591
  br i1 %592, label %663, label %593

593:                                              ; preds = %576
  %594 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %22, align 8
  %595 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %594, i64 0, i32 11
  %596 = load i32, i32* %595, align 8
  %597 = and i32 %596, 1
  %598 = icmp eq i32 %597, 0
  br i1 %598, label %599, label %623

599:                                              ; preds = %593
  %600 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %594, i64 0, i32 4, i32 0, i32 0, i32 0
  %601 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %600, align 8
  %602 = call i8* @_Znwm(i64 104) #12
  %603 = bitcast i8* %602 to %"class.spvtools::opt::analysis::DefUseManager"*
  %604 = getelementptr inbounds i8, i8* %602, i64 32
  %605 = bitcast i8* %604 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %602, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %605, align 4
  %606 = getelementptr inbounds i8, i8* %602, i64 48
  %607 = getelementptr inbounds i8, i8* %602, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %606, i8 0, i64 16, i1 false) #11
  %608 = bitcast i8* %607 to i8**
  store i8* %606, i8** %608, align 8
  %609 = getelementptr inbounds i8, i8* %602, i64 64
  %610 = getelementptr inbounds i8, i8* %602, i64 96
  %611 = bitcast i8* %610 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %609, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %611, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %603, %"class.spvtools::opt::Module"* %601) #11
  %612 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %594, i64 0, i32 6
  %613 = ptrtoint i8* %602 to i64
  %614 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %612, i64 0, i32 0, i32 0, i32 0
  %615 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %614, align 8
  %616 = bitcast %"class.std::__1::unique_ptr.62"* %612 to i64*
  store i64 %613, i64* %616, align 8
  %617 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %615, null
  br i1 %617, label %620, label %618

618:                                              ; preds = %599
  %619 = bitcast %"class.std::__1::unique_ptr.62"* %612 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %619, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %615) #11
  br label %620

620:                                              ; preds = %618, %599
  %621 = load i32, i32* %595, align 8
  %622 = or i32 %621, 1
  store i32 %622, i32* %595, align 8
  br label %623

623:                                              ; preds = %593, %620
  %624 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %594, i64 0, i32 6, i32 0, i32 0, i32 0
  %625 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %624, align 8
  %626 = load i8, i8* %128, align 4, !range !2
  %627 = icmp eq i8 %626, 0
  br i1 %627, label %630, label %628

628:                                              ; preds = %623
  %629 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2, i32 0) #11
  br label %630

630:                                              ; preds = %623, %628
  %631 = phi i32 [ %629, %628 ], [ 0, %623 ]
  %632 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %625, i32 %631) #11
  %633 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %632, i64 0, i32 3
  %634 = load i8, i8* %633, align 4, !range !2
  %635 = icmp eq i8 %634, 0
  %636 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %632, i64 0, i32 4
  %637 = load i8, i8* %636, align 1, !range !2
  %638 = icmp eq i8 %637, 0
  %639 = select i1 %638, i32 1, i32 2
  %640 = xor i1 %638, true
  %641 = zext i1 %640 to i32
  %642 = select i1 %635, i32 %641, i32 %639
  %643 = add nuw nsw i32 %642, 1
  %644 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %632, i32 %643) #11
  %645 = call i32 @_ZNK8spvtools3opt19CopyPropagateArrays15GetMemberTypeIdEjRKNSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.spvtools::opt::CopyPropagateArrays"* %0, i32 %644, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %16)
  %646 = load i8, i8* %633, align 4, !range !2
  %647 = icmp eq i8 %646, 0
  %648 = load i8, i8* %636, align 1, !range !2
  %649 = icmp eq i8 %648, 0
  %650 = select i1 %649, i32 1, i32 2
  %651 = xor i1 %649, true
  %652 = zext i1 %651 to i32
  %653 = select i1 %647, i32 %652, i32 %650
  %654 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %632, i32 %653) #11
  %655 = call i32 @_ZN8spvtools3opt8analysis11TypeManager17FindPointerToTypeEj16SpvStorageClass_(%"class.spvtools::opt::analysis::TypeManager"* %50, i32 %645, i32 %654) #11
  %656 = load i8, i8* %574, align 4, !range !2
  %657 = icmp eq i8 %656, 0
  br i1 %657, label %660, label %658

658:                                              ; preds = %630
  %659 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %288, i32 0) #11
  br label %660

660:                                              ; preds = %630, %658
  %661 = phi i32 [ %659, %658 ], [ 0, %630 ]
  %662 = icmp eq i32 %655, %661
  br i1 %662, label %845, label %826

663:                                              ; preds = %576
  %664 = add i32 %589, %577
  %665 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %288, i32 %664) #11
  %666 = zext i32 %665 to i64
  %667 = load i64, i64* %240, align 8
  %668 = icmp eq i64 %667, 0
  br i1 %668, label %773, label %669

669:                                              ; preds = %663
  %670 = call i64 @llvm.ctpop.i64(i64 %667) #11, !range !13
  %671 = icmp ugt i64 %670, 1
  br i1 %671, label %675, label %672

672:                                              ; preds = %669
  %673 = add i64 %667, 4294967295
  %674 = and i64 %673, %666
  br label %679

675:                                              ; preds = %669
  %676 = icmp ugt i64 %667, %666
  br i1 %676, label %679, label %677

677:                                              ; preds = %675
  %678 = urem i64 %666, %667
  br label %679

679:                                              ; preds = %677, %675, %672
  %680 = phi i64 [ %674, %672 ], [ %678, %677 ], [ %666, %675 ]
  %681 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %241, align 8
  %682 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %681, i64 %680
  %683 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %682, align 8
  %684 = icmp eq %"struct.std::__1::__hash_node_base.408"* %683, null
  br i1 %684, label %773, label %685

685:                                              ; preds = %679
  %686 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %683, i64 0, i32 0
  %687 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %686, align 8
  %688 = icmp eq %"struct.std::__1::__hash_node_base.408"* %687, null
  br i1 %688, label %773, label %689

689:                                              ; preds = %685
  %690 = add i64 %667, -1
  br label %691

691:                                              ; preds = %712, %689
  %692 = phi %"struct.std::__1::__hash_node_base.408"* [ %687, %689 ], [ %714, %712 ]
  %693 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %692, i64 1
  %694 = bitcast %"struct.std::__1::__hash_node_base.408"* %693 to i64*
  %695 = load i64, i64* %694, align 8
  %696 = icmp eq i64 %695, %666
  br i1 %696, label %707, label %697

697:                                              ; preds = %691
  br i1 %671, label %700, label %698

698:                                              ; preds = %697
  %699 = and i64 %695, %690
  br label %704

700:                                              ; preds = %697
  %701 = icmp ult i64 %695, %667
  br i1 %701, label %704, label %702

702:                                              ; preds = %700
  %703 = urem i64 %695, %667
  br label %704

704:                                              ; preds = %702, %700, %698
  %705 = phi i64 [ %699, %698 ], [ %703, %702 ], [ %695, %700 ]
  %706 = icmp eq i64 %705, %680
  br i1 %706, label %712, label %773

707:                                              ; preds = %691
  %708 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %692, i64 2
  %709 = bitcast %"struct.std::__1::__hash_node_base.408"* %708 to i32*
  %710 = load i32, i32* %709, align 4
  %711 = icmp eq i32 %710, %665
  br i1 %711, label %716, label %712

712:                                              ; preds = %707, %704
  %713 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %692, i64 0, i32 0
  %714 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %713, align 8
  %715 = icmp eq %"struct.std::__1::__hash_node_base.408"* %714, null
  br i1 %715, label %773, label %691

716:                                              ; preds = %707
  %717 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %692, i64 3
  %718 = bitcast %"struct.std::__1::__hash_node_base.408"* %717 to %"class.spvtools::opt::analysis::Constant"**
  %719 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %718, align 8
  %720 = icmp eq %"class.spvtools::opt::analysis::Constant"* %719, null
  br i1 %720, label %773, label %721

721:                                              ; preds = %716
  %722 = call i32 @_ZNK8spvtools3opt8analysis8Constant6GetU32Ev(%"class.spvtools::opt::analysis::Constant"* nonnull %719) #11
  %723 = load i32*, i32** %238, align 8
  %724 = load i32*, i32** %239, align 8
  %725 = icmp ult i32* %723, %724
  %726 = ptrtoint i32* %724 to i64
  br i1 %725, label %727, label %730

727:                                              ; preds = %721
  store i32 %722, i32* %723, align 4
  %728 = getelementptr inbounds i32, i32* %723, i64 1
  %729 = ptrtoint i32* %728 to i64
  store i64 %729, i64* %242, align 8
  br label %824

730:                                              ; preds = %721
  %731 = ptrtoint i32* %723 to i64
  %732 = load i64, i64* %243, align 8
  %733 = sub i64 %731, %732
  %734 = ashr exact i64 %733, 2
  %735 = add nsw i64 %734, 1
  %736 = icmp ugt i64 %735, 4611686018427387903
  br i1 %736, label %737, label %739

737:                                              ; preds = %730
  %738 = bitcast %"class.std::__1::vector.3"* %16 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %738) #13
  unreachable

739:                                              ; preds = %730
  %740 = sub i64 %726, %732
  %741 = ashr exact i64 %740, 2
  %742 = icmp ult i64 %741, 2305843009213693951
  br i1 %742, label %743, label %751

743:                                              ; preds = %739
  %744 = ashr exact i64 %740, 1
  %745 = icmp ult i64 %744, %735
  %746 = select i1 %745, i64 %735, i64 %744
  %747 = icmp eq i64 %746, 0
  br i1 %747, label %756, label %748

748:                                              ; preds = %743
  %749 = icmp ugt i64 %746, 4611686018427387903
  br i1 %749, label %750, label %751

750:                                              ; preds = %748
  call void @abort() #13
  unreachable

751:                                              ; preds = %748, %739
  %752 = phi i64 [ %746, %748 ], [ 4611686018427387903, %739 ]
  %753 = shl i64 %752, 2
  %754 = call i8* @_Znwm(i64 %753) #12
  %755 = bitcast i8* %754 to i32*
  br label %756

756:                                              ; preds = %751, %743
  %757 = phi i64 [ %752, %751 ], [ 0, %743 ]
  %758 = phi i8* [ %754, %751 ], [ null, %743 ]
  %759 = phi i32* [ %755, %751 ], [ null, %743 ]
  %760 = getelementptr inbounds i32, i32* %759, i64 %734
  %761 = getelementptr inbounds i32, i32* %759, i64 %757
  %762 = ptrtoint i32* %761 to i64
  store i32 %722, i32* %760, align 4
  %763 = getelementptr inbounds i32, i32* %760, i64 1
  %764 = ptrtoint i32* %763 to i64
  %765 = ptrtoint i32* %759 to i64
  %766 = icmp sgt i64 %733, 0
  br i1 %766, label %767, label %769

767:                                              ; preds = %756
  %768 = inttoptr i64 %732 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %758, i8* align 4 %768, i64 %733, i1 false) #11
  br label %769

769:                                              ; preds = %767, %756
  store i64 %765, i64* %243, align 8
  store i64 %764, i64* %242, align 8
  store i64 %762, i64* %244, align 8
  %770 = icmp eq i64 %732, 0
  br i1 %770, label %824, label %771

771:                                              ; preds = %769
  %772 = inttoptr i64 %732 to i8*
  call void @_ZdlPv(i8* %772) #12
  br label %824

773:                                              ; preds = %712, %704, %685, %663, %679, %716
  %774 = load i32*, i32** %238, align 8
  %775 = load i32*, i32** %239, align 8
  %776 = icmp ult i32* %774, %775
  %777 = ptrtoint i32* %775 to i64
  br i1 %776, label %778, label %781

778:                                              ; preds = %773
  store i32 0, i32* %774, align 4
  %779 = getelementptr inbounds i32, i32* %774, i64 1
  %780 = ptrtoint i32* %779 to i64
  store i64 %780, i64* %242, align 8
  br label %824

781:                                              ; preds = %773
  %782 = ptrtoint i32* %774 to i64
  %783 = load i64, i64* %243, align 8
  %784 = sub i64 %782, %783
  %785 = ashr exact i64 %784, 2
  %786 = add nsw i64 %785, 1
  %787 = icmp ugt i64 %786, 4611686018427387903
  br i1 %787, label %788, label %790

788:                                              ; preds = %781
  %789 = bitcast %"class.std::__1::vector.3"* %16 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %789) #13
  unreachable

790:                                              ; preds = %781
  %791 = sub i64 %777, %783
  %792 = ashr exact i64 %791, 2
  %793 = icmp ult i64 %792, 2305843009213693951
  br i1 %793, label %794, label %802

794:                                              ; preds = %790
  %795 = ashr exact i64 %791, 1
  %796 = icmp ult i64 %795, %786
  %797 = select i1 %796, i64 %786, i64 %795
  %798 = icmp eq i64 %797, 0
  br i1 %798, label %807, label %799

799:                                              ; preds = %794
  %800 = icmp ugt i64 %797, 4611686018427387903
  br i1 %800, label %801, label %802

801:                                              ; preds = %799
  call void @abort() #13
  unreachable

802:                                              ; preds = %799, %790
  %803 = phi i64 [ %797, %799 ], [ 4611686018427387903, %790 ]
  %804 = shl i64 %803, 2
  %805 = call i8* @_Znwm(i64 %804) #12
  %806 = bitcast i8* %805 to i32*
  br label %807

807:                                              ; preds = %802, %794
  %808 = phi i64 [ %803, %802 ], [ 0, %794 ]
  %809 = phi i8* [ %805, %802 ], [ null, %794 ]
  %810 = phi i32* [ %806, %802 ], [ null, %794 ]
  %811 = getelementptr inbounds i32, i32* %810, i64 %785
  %812 = getelementptr inbounds i32, i32* %810, i64 %808
  %813 = ptrtoint i32* %812 to i64
  store i32 0, i32* %811, align 4
  %814 = getelementptr inbounds i32, i32* %811, i64 1
  %815 = ptrtoint i32* %814 to i64
  %816 = ptrtoint i32* %810 to i64
  %817 = icmp sgt i64 %784, 0
  br i1 %817, label %818, label %820

818:                                              ; preds = %807
  %819 = inttoptr i64 %783 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %809, i8* align 4 %819, i64 %784, i1 false) #11
  br label %820

820:                                              ; preds = %818, %807
  store i64 %816, i64* %243, align 8
  store i64 %815, i64* %242, align 8
  store i64 %813, i64* %244, align 8
  %821 = icmp eq i64 %783, 0
  br i1 %821, label %824, label %822

822:                                              ; preds = %820
  %823 = inttoptr i64 %783 to i8*
  call void @_ZdlPv(i8* %823) #12
  br label %824

824:                                              ; preds = %822, %820, %778, %771, %769, %727
  %825 = add i32 %577, 1
  br label %576

826:                                              ; preds = %660
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %245) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %246, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %249, %"struct.std::__1::aligned_storage<4, 4>::type"** %250, align 8
  store i64 0, i64* %252, align 8
  store i64 1, i64* %247, align 8
  store i32 %655, i32* %253, align 8
  %827 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %552, align 8
  %828 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %827, i64 0, i32 1
  %829 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %828, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %5) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %246, align 8
  %830 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %254, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %254, align 8
  %831 = icmp eq %"class.std::__1::vector.3"* %830, null
  br i1 %831, label %843, label %832

832:                                              ; preds = %826
  %833 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %830, i64 0, i32 0, i32 0
  %834 = load i32*, i32** %833, align 8
  %835 = icmp eq i32* %834, null
  br i1 %835, label %841, label %836

836:                                              ; preds = %832
  %837 = ptrtoint i32* %834 to i64
  %838 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %830, i64 0, i32 0, i32 1
  %839 = bitcast i32** %838 to i64*
  store i64 %837, i64* %839, align 8
  %840 = bitcast i32* %834 to i8*
  call void @_ZdlPv(i8* %840) #12
  br label %841

841:                                              ; preds = %836, %832
  %842 = bitcast %"class.std::__1::vector.3"* %830 to i8*
  call void @_ZdlPv(i8* %842) #12
  br label %843

843:                                              ; preds = %826, %841
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %245) #11
  %844 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %22, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %844, %"class.spvtools::opt::Instruction"* %288) #11
  call void @_ZN8spvtools3opt19CopyPropagateArrays10UpdateUsesEPNS0_11InstructionES3_(%"class.spvtools::opt::CopyPropagateArrays"* %0, %"class.spvtools::opt::Instruction"* %288, %"class.spvtools::opt::Instruction"* %288)
  br label %847

845:                                              ; preds = %660
  %846 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %22, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %846, %"class.spvtools::opt::Instruction"* %288) #11
  br label %847

847:                                              ; preds = %845, %843
  %848 = load i32*, i32** %237, align 8
  %849 = icmp eq i32* %848, null
  br i1 %849, label %853, label %850

850:                                              ; preds = %847
  %851 = ptrtoint i32* %848 to i64
  store i64 %851, i64* %242, align 8
  %852 = bitcast i32* %848 to i8*
  call void @_ZdlPv(i8* %852) #12
  br label %853

853:                                              ; preds = %847, %850
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %236) #11
  br label %1099

854:                                              ; preds = %461
  %855 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %22, align 8
  call void @_ZN8spvtools3opt9IRContext10ForgetUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %855, %"class.spvtools::opt::Instruction"* %288) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %199) #11
  %856 = load i8, i8* %127, align 1, !range !2
  %857 = icmp eq i8 %856, 0
  br i1 %857, label %862, label %858

858:                                              ; preds = %854
  %859 = load i8, i8* %128, align 4, !range !2
  %860 = zext i8 %859 to i32
  %861 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2, i32 %860) #11
  br label %862

862:                                              ; preds = %854, %858
  %863 = phi i32 [ %861, %858 ], [ 0, %854 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %200, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %203, %"struct.std::__1::aligned_storage<4, 4>::type"** %204, align 8
  store i64 0, i64* %206, align 8
  store i64 1, i64* %201, align 8
  store i32 %863, i32* %207, align 8
  %864 = zext i32 %290 to i64
  %865 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %288, i64 0, i32 6, i32 0, i32 0
  %866 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %865, align 8
  %867 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %866, i64 %864, i32 1
  %868 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %867, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %17) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %200, align 8
  %869 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %208, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %208, align 8
  %870 = icmp eq %"class.std::__1::vector.3"* %869, null
  br i1 %870, label %882, label %871

871:                                              ; preds = %862
  %872 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %869, i64 0, i32 0, i32 0
  %873 = load i32*, i32** %872, align 8
  %874 = icmp eq i32* %873, null
  br i1 %874, label %880, label %875

875:                                              ; preds = %871
  %876 = ptrtoint i32* %873 to i64
  %877 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %869, i64 0, i32 0, i32 1
  %878 = bitcast i32** %877 to i64*
  store i64 %876, i64* %878, align 8
  %879 = bitcast i32* %873 to i8*
  call void @_ZdlPv(i8* %879) #12
  br label %880

880:                                              ; preds = %875, %871
  %881 = bitcast %"class.std::__1::vector.3"* %869 to i8*
  call void @_ZdlPv(i8* %881) #12
  br label %882

882:                                              ; preds = %862, %880
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %199) #11
  %883 = load i8, i8* %128, align 4, !range !2
  %884 = icmp eq i8 %883, 0
  br i1 %884, label %887, label %885

885:                                              ; preds = %882
  %886 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2, i32 0) #11
  br label %887

887:                                              ; preds = %882, %885
  %888 = phi i32 [ %886, %885 ], [ 0, %882 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %209) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %209, i8 0, i64 24, i1 false) #11
  %889 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %288, i64 0, i32 6
  %890 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %288, i64 0, i32 6, i32 0, i32 1
  %891 = bitcast %"struct.spvtools::opt::Operand"** %890 to i64*
  %892 = bitcast %"class.std::__1::vector"* %889 to i64*
  %893 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %288, i64 0, i32 3
  %894 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %288, i64 0, i32 4
  br label %895

895:                                              ; preds = %974, %887
  %896 = phi i32 [ 1, %887 ], [ %975, %974 ]
  %897 = load i64, i64* %891, align 8
  %898 = load i64, i64* %892, align 8
  %899 = sub i64 %897, %898
  %900 = sdiv exact i64 %899, 48
  %901 = load i8, i8* %893, align 4, !range !2
  %902 = icmp eq i8 %901, 0
  %903 = load i8, i8* %894, align 1, !range !2
  %904 = icmp eq i8 %903, 0
  %905 = select i1 %904, i32 1, i32 2
  %906 = xor i1 %904, true
  %907 = zext i1 %906 to i32
  %908 = select i1 %902, i32 %907, i32 %905
  %909 = trunc i64 %900 to i32
  %910 = sub i32 %909, %908
  %911 = icmp ult i32 %896, %910
  br i1 %911, label %921, label %912

912:                                              ; preds = %895
  %913 = call i32 @_ZNK8spvtools3opt19CopyPropagateArrays15GetMemberTypeIdEjRKNSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.spvtools::opt::CopyPropagateArrays"* %0, i32 %888, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %18)
  %914 = load i8, i8* %893, align 4, !range !2
  %915 = icmp eq i8 %914, 0
  br i1 %915, label %918, label %916

916:                                              ; preds = %912
  %917 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %288, i32 0) #11
  br label %918

918:                                              ; preds = %912, %916
  %919 = phi i32 [ %917, %916 ], [ 0, %912 ]
  %920 = icmp eq i32 %913, %919
  br i1 %920, label %995, label %976

921:                                              ; preds = %895
  %922 = add i32 %908, %896
  %923 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %288, i32 %922) #11
  %924 = load i32*, i32** %211, align 8
  %925 = load i32*, i32** %212, align 8
  %926 = icmp ult i32* %924, %925
  %927 = ptrtoint i32* %925 to i64
  br i1 %926, label %928, label %931

928:                                              ; preds = %921
  store i32 %923, i32* %924, align 4
  %929 = getelementptr inbounds i32, i32* %924, i64 1
  %930 = ptrtoint i32* %929 to i64
  store i64 %930, i64* %213, align 8
  br label %974

931:                                              ; preds = %921
  %932 = ptrtoint i32* %924 to i64
  %933 = load i64, i64* %214, align 8
  %934 = sub i64 %932, %933
  %935 = ashr exact i64 %934, 2
  %936 = add nsw i64 %935, 1
  %937 = icmp ugt i64 %936, 4611686018427387903
  br i1 %937, label %938, label %940

938:                                              ; preds = %931
  %939 = bitcast %"class.std::__1::vector.3"* %18 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %939) #13
  unreachable

940:                                              ; preds = %931
  %941 = sub i64 %927, %933
  %942 = ashr exact i64 %941, 2
  %943 = icmp ult i64 %942, 2305843009213693951
  br i1 %943, label %944, label %952

944:                                              ; preds = %940
  %945 = ashr exact i64 %941, 1
  %946 = icmp ult i64 %945, %936
  %947 = select i1 %946, i64 %936, i64 %945
  %948 = icmp eq i64 %947, 0
  br i1 %948, label %957, label %949

949:                                              ; preds = %944
  %950 = icmp ugt i64 %947, 4611686018427387903
  br i1 %950, label %951, label %952

951:                                              ; preds = %949
  call void @abort() #13
  unreachable

952:                                              ; preds = %949, %940
  %953 = phi i64 [ %947, %949 ], [ 4611686018427387903, %940 ]
  %954 = shl i64 %953, 2
  %955 = call i8* @_Znwm(i64 %954) #12
  %956 = bitcast i8* %955 to i32*
  br label %957

957:                                              ; preds = %952, %944
  %958 = phi i64 [ %953, %952 ], [ 0, %944 ]
  %959 = phi i8* [ %955, %952 ], [ null, %944 ]
  %960 = phi i32* [ %956, %952 ], [ null, %944 ]
  %961 = getelementptr inbounds i32, i32* %960, i64 %935
  %962 = getelementptr inbounds i32, i32* %960, i64 %958
  %963 = ptrtoint i32* %962 to i64
  store i32 %923, i32* %961, align 4
  %964 = getelementptr inbounds i32, i32* %961, i64 1
  %965 = ptrtoint i32* %964 to i64
  %966 = ptrtoint i32* %960 to i64
  %967 = icmp sgt i64 %934, 0
  br i1 %967, label %968, label %970

968:                                              ; preds = %957
  %969 = inttoptr i64 %933 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %959, i8* align 4 %969, i64 %934, i1 false) #11
  br label %970

970:                                              ; preds = %968, %957
  store i64 %966, i64* %214, align 8
  store i64 %965, i64* %213, align 8
  store i64 %963, i64* %215, align 8
  %971 = icmp eq i64 %933, 0
  br i1 %971, label %974, label %972

972:                                              ; preds = %970
  %973 = inttoptr i64 %933 to i8*
  call void @_ZdlPv(i8* %973) #12
  br label %974

974:                                              ; preds = %928, %970, %972
  %975 = add nuw i32 %896, 1
  br label %895

976:                                              ; preds = %918
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %216) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %217, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %220, %"struct.std::__1::aligned_storage<4, 4>::type"** %221, align 8
  store i64 0, i64* %223, align 8
  store i64 1, i64* %218, align 8
  store i32 %913, i32* %224, align 8
  %977 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %865, align 8
  %978 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %977, i64 0, i32 1
  %979 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %978, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %4) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %217, align 8
  %980 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %225, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %225, align 8
  %981 = icmp eq %"class.std::__1::vector.3"* %980, null
  br i1 %981, label %993, label %982

982:                                              ; preds = %976
  %983 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %980, i64 0, i32 0, i32 0
  %984 = load i32*, i32** %983, align 8
  %985 = icmp eq i32* %984, null
  br i1 %985, label %991, label %986

986:                                              ; preds = %982
  %987 = ptrtoint i32* %984 to i64
  %988 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %980, i64 0, i32 0, i32 1
  %989 = bitcast i32** %988 to i64*
  store i64 %987, i64* %989, align 8
  %990 = bitcast i32* %984 to i8*
  call void @_ZdlPv(i8* %990) #12
  br label %991

991:                                              ; preds = %986, %982
  %992 = bitcast %"class.std::__1::vector.3"* %980 to i8*
  call void @_ZdlPv(i8* %992) #12
  br label %993

993:                                              ; preds = %976, %991
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %216) #11
  %994 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %22, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %994, %"class.spvtools::opt::Instruction"* %288) #11
  call void @_ZN8spvtools3opt19CopyPropagateArrays10UpdateUsesEPNS0_11InstructionES3_(%"class.spvtools::opt::CopyPropagateArrays"* %0, %"class.spvtools::opt::Instruction"* %288, %"class.spvtools::opt::Instruction"* %288)
  br label %997

995:                                              ; preds = %918
  %996 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %22, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %996, %"class.spvtools::opt::Instruction"* %288) #11
  br label %997

997:                                              ; preds = %995, %993
  %998 = load i32*, i32** %210, align 8
  %999 = icmp eq i32* %998, null
  br i1 %999, label %1003, label %1000

1000:                                             ; preds = %997
  %1001 = ptrtoint i32* %998 to i64
  store i64 %1001, i64* %213, align 8
  %1002 = bitcast i32* %998 to i8*
  call void @_ZdlPv(i8* %1002) #12
  br label %1003

1003:                                             ; preds = %997, %1000
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %209) #11
  br label %1099

1004:                                             ; preds = %461
  %1005 = icmp eq i32 %290, 1
  br i1 %1005, label %1006, label %1099

1006:                                             ; preds = %1004
  %1007 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %288, i64 0, i32 3
  %1008 = load i8, i8* %1007, align 4, !range !2
  %1009 = icmp eq i8 %1008, 0
  %1010 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %288, i64 0, i32 4
  %1011 = load i8, i8* %1010, align 1, !range !2
  %1012 = icmp eq i8 %1011, 0
  %1013 = select i1 %1012, i32 1, i32 2
  %1014 = xor i1 %1012, true
  %1015 = zext i1 %1014 to i32
  %1016 = select i1 %1009, i32 %1015, i32 %1013
  %1017 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %288, i32 %1016) #11
  %1018 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %105, i32 %1017) #11
  %1019 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1018, i64 0, i32 3
  %1020 = load i8, i8* %1019, align 4, !range !2
  %1021 = icmp eq i8 %1020, 0
  br i1 %1021, label %1024, label %1022

1022:                                             ; preds = %1006
  %1023 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1018, i32 0) #11
  br label %1024

1024:                                             ; preds = %1006, %1022
  %1025 = phi i32 [ %1023, %1022 ], [ 0, %1006 ]
  %1026 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %105, i32 %1025) #11
  %1027 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1026, i64 0, i32 3
  %1028 = load i8, i8* %1027, align 4, !range !2
  %1029 = icmp eq i8 %1028, 0
  %1030 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1026, i64 0, i32 4
  %1031 = load i8, i8* %1030, align 1, !range !2
  %1032 = icmp eq i8 %1031, 0
  %1033 = select i1 %1032, i32 1, i32 2
  %1034 = xor i1 %1032, true
  %1035 = zext i1 %1034 to i32
  %1036 = select i1 %1029, i32 %1035, i32 %1033
  %1037 = add nuw nsw i32 %1036, 1
  %1038 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1026, i32 %1037) #11
  %1039 = call i32 @_ZN8spvtools3opt4Pass12GenerateCopyEPNS0_11InstructionEjS3_(%"class.spvtools::opt::Pass"* %21, %"class.spvtools::opt::Instruction"* %1, i32 %1038, %"class.spvtools::opt::Instruction"* %288) #11
  %1040 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %22, align 8
  call void @_ZN8spvtools3opt9IRContext10ForgetUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %1040, %"class.spvtools::opt::Instruction"* %288) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %189) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %190, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %193, %"struct.std::__1::aligned_storage<4, 4>::type"** %194, align 8
  store i64 0, i64* %196, align 8
  store i64 1, i64* %191, align 8
  store i32 %1039, i32* %197, align 8
  %1041 = load i8, i8* %1007, align 4, !range !2
  %1042 = icmp eq i8 %1041, 0
  %1043 = load i8, i8* %1010, align 1, !range !2
  %1044 = icmp eq i8 %1043, 0
  %1045 = select i1 %1044, i64 1, i64 2
  %1046 = xor i1 %1044, true
  %1047 = zext i1 %1046 to i64
  %1048 = select i1 %1042, i64 %1047, i64 %1045
  %1049 = add nuw nsw i64 %1048, 1
  %1050 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %288, i64 0, i32 6, i32 0, i32 0
  %1051 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %1050, align 8
  %1052 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1051, i64 %1049, i32 1
  %1053 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %1052, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %19) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %190, align 8
  %1054 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %198, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %198, align 8
  %1055 = icmp eq %"class.std::__1::vector.3"* %1054, null
  br i1 %1055, label %1067, label %1056

1056:                                             ; preds = %1024
  %1057 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1054, i64 0, i32 0, i32 0
  %1058 = load i32*, i32** %1057, align 8
  %1059 = icmp eq i32* %1058, null
  br i1 %1059, label %1065, label %1060

1060:                                             ; preds = %1056
  %1061 = ptrtoint i32* %1058 to i64
  %1062 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1054, i64 0, i32 0, i32 1
  %1063 = bitcast i32** %1062 to i64*
  store i64 %1061, i64* %1063, align 8
  %1064 = bitcast i32* %1058 to i8*
  call void @_ZdlPv(i8* %1064) #12
  br label %1065

1065:                                             ; preds = %1060, %1056
  %1066 = bitcast %"class.std::__1::vector.3"* %1054 to i8*
  call void @_ZdlPv(i8* %1066) #12
  br label %1067

1067:                                             ; preds = %1024, %1065
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %189) #11
  %1068 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %22, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %1068, %"class.spvtools::opt::Instruction"* %288) #11
  br label %1099

1069:                                             ; preds = %461
  %1070 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %22, align 8
  call void @_ZN8spvtools3opt9IRContext10ForgetUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %1070, %"class.spvtools::opt::Instruction"* %288) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %179) #11
  %1071 = load i8, i8* %127, align 1, !range !2
  %1072 = icmp eq i8 %1071, 0
  br i1 %1072, label %1077, label %1073

1073:                                             ; preds = %1069
  %1074 = load i8, i8* %128, align 4, !range !2
  %1075 = zext i8 %1074 to i32
  %1076 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2, i32 %1075) #11
  br label %1077

1077:                                             ; preds = %1069, %1073
  %1078 = phi i32 [ %1076, %1073 ], [ 0, %1069 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %180, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %183, %"struct.std::__1::aligned_storage<4, 4>::type"** %184, align 8
  store i64 0, i64* %186, align 8
  store i64 1, i64* %181, align 8
  store i32 %1078, i32* %187, align 8
  %1079 = zext i32 %290 to i64
  %1080 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %288, i64 0, i32 6, i32 0, i32 0
  %1081 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %1080, align 8
  %1082 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1081, i64 %1079, i32 1
  %1083 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %1082, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %20) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %180, align 8
  %1084 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %188, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %188, align 8
  %1085 = icmp eq %"class.std::__1::vector.3"* %1084, null
  br i1 %1085, label %1097, label %1086

1086:                                             ; preds = %1077
  %1087 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1084, i64 0, i32 0, i32 0
  %1088 = load i32*, i32** %1087, align 8
  %1089 = icmp eq i32* %1088, null
  br i1 %1089, label %1095, label %1090

1090:                                             ; preds = %1086
  %1091 = ptrtoint i32* %1088 to i64
  %1092 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1084, i64 0, i32 0, i32 1
  %1093 = bitcast i32** %1092 to i64*
  store i64 %1091, i64* %1093, align 8
  %1094 = bitcast i32* %1088 to i8*
  call void @_ZdlPv(i8* %1094) #12
  br label %1095

1095:                                             ; preds = %1090, %1086
  %1096 = bitcast %"class.std::__1::vector.3"* %1084 to i8*
  call void @_ZdlPv(i8* %1096) #12
  br label %1097

1097:                                             ; preds = %1077, %1095
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %179) #11
  %1098 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %22, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %1098, %"class.spvtools::opt::Instruction"* %288) #11
  br label %1099

1099:                                             ; preds = %293, %853, %1003, %1097, %1067, %1004, %461, %539, %537, %459, %428, %325
  %1100 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %286, i64 1
  %1101 = icmp eq %"struct.std::__1::pair"* %1100, %123
  br i1 %1101, label %275, label %285
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddAccessChainEjjNSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.spvtools::opt::InstructionBuilder"*, i32, i32, %"class.std::__1::vector.3"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"struct.spvtools::opt::Operand", align 8
  %7 = alloca %"class.spvtools::utils::SmallVector", align 8
  %8 = alloca %"struct.spvtools::opt::Operand", align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = alloca %"class.std::__1::unique_ptr.21", align 8
  %11 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #11
  %15 = bitcast %"struct.spvtools::opt::Operand"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %15) #11
  %16 = bitcast %"class.spvtools::utils::SmallVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 1
  %19 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 2
  %20 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 3, i64 0
  %21 = bitcast i32** %19 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %20, %"struct.std::__1::aligned_storage<4, 4>::type"** %21, align 8
  %22 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4
  %23 = bitcast %"class.std::__1::unique_ptr.0"* %22 to i64*
  store i64 0, i64* %23, align 8
  %24 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %20 to i32*
  store i64 1, i64* %18, align 8
  store i32 %2, i32* %24, align 8
  %25 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 0
  store i32 1, i32* %25, align 8
  %26 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1
  %27 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %26, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 1
  store i64 0, i64* %28, align 8
  %29 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 2
  %30 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 3, i64 0
  %31 = bitcast i32** %29 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %30, %"struct.std::__1::aligned_storage<4, 4>::type"** %31, align 8
  %32 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 4
  %33 = bitcast %"class.std::__1::unique_ptr.0"* %32 to i64*
  store i64 0, i64* %33, align 8
  %34 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %26, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %7) #11
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* nonnull %5, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %6) #11
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %36 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %35, align 8
  %37 = bitcast %"class.std::__1::vector.3"* %36 to i8*
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %39, align 8
  %40 = icmp eq %"class.std::__1::vector.3"* %36, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %4
  %42 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %36, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint i32* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %36, i64 0, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast i32* %43 to i8*
  call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %45, %41
  call void @_ZdlPv(i8* %37) #12
  br label %51

51:                                               ; preds = %4, %50
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %53 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %52, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %52, align 8
  %54 = icmp eq %"class.std::__1::vector.3"* %53, null
  br i1 %54, label %66, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %53, i64 0, i32 0, i32 0
  %57 = load i32*, i32** %56, align 8
  %58 = icmp eq i32* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = ptrtoint i32* %57 to i64
  %61 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %53, i64 0, i32 0, i32 1
  %62 = bitcast i32** %61 to i64*
  store i64 %60, i64* %62, align 8
  %63 = bitcast i32* %57 to i8*
  call void @_ZdlPv(i8* %63) #12
  br label %64

64:                                               ; preds = %59, %55
  %65 = bitcast %"class.std::__1::vector.3"* %53 to i8*
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %51, %64
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %15) #11
  %67 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 0
  %68 = load i32*, i32** %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 1
  %70 = load i32*, i32** %69, align 8
  %71 = icmp eq i32* %68, %70
  br i1 %71, label %96, label %72

72:                                               ; preds = %66
  %73 = bitcast %"struct.spvtools::opt::Operand"* %8 to i8*
  %74 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  %75 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  %76 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 1
  %77 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 2
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 3, i64 0
  %79 = bitcast i32** %77 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %80 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4
  %81 = bitcast %"class.std::__1::unique_ptr.0"* %80 to i64*
  %82 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %78 to i32*
  %83 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 0
  %84 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1
  %85 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %84, i64 0, i32 0
  %86 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 1
  %87 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 2
  %88 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 3, i64 0
  %89 = bitcast i32** %87 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 4
  %91 = bitcast %"class.std::__1::unique_ptr.0"* %90 to i64*
  %92 = bitcast %"struct.spvtools::opt::Operand"** %13 to i64*
  %93 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 0
  %94 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %95 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %163

96:                                               ; preds = %213, %66
  %97 = bitcast %"class.std::__1::unique_ptr.21"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #11
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %98, align 8
  %99 = call i8* @_Znwm(i64 112) #12
  %100 = bitcast i8* %99 to %"class.spvtools::opt::Instruction"*
  %101 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %102 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %101, align 8
  %103 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %102, i64 0, i32 4, i32 0, i32 0, i32 0
  %104 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %103, align 8
  %105 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %104) #11
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %119

107:                                              ; preds = %96
  %108 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %102, i64 0, i32 5, i32 0, i32 2
  %109 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %108, align 8
  %110 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %109, i64 0, i32 2
  %111 = load i8, i8* %110, align 8, !range !2
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %113, label %119

113:                                              ; preds = %107
  %114 = call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %114, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i64 37, i1 false) #11
  %115 = getelementptr inbounds i8, i8* %114, i64 37
  store i8 0, i8* %115, align 1
  %116 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %102, i64 0, i32 5, i32 0, i32 1, i32 0
  %117 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %116, align 8
  %118 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %102, i64 0, i32 5, i32 0, i32 0
  call void %117(%"union.std::__1::__function::__policy_storage"* %118, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.3, i8* nonnull %114) #11
  call void @_ZdlPv(i8* nonnull %114) #12
  br label %119

119:                                              ; preds = %96, %107, %113
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %100, %"class.spvtools::opt::IRContext"* %102, i32 65, i32 %1, i32 %105, %"class.std::__1::vector"* nonnull dereferenceable(24) %5) #11
  %120 = ptrtoint i8* %99 to i64
  %121 = bitcast %"class.std::__1::unique_ptr.21"* %10 to i64*
  store i64 %120, i64* %121, align 8
  %122 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %10)
  %123 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %98, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %98, align 8
  %124 = icmp eq %"class.spvtools::opt::Instruction"* %123, null
  br i1 %124, label %130, label %125

125:                                              ; preds = %119
  %126 = bitcast %"class.spvtools::opt::Instruction"* %123 to void (%"class.spvtools::opt::Instruction"*)***
  %127 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %127, i64 1
  %129 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %128, align 8
  call void %129(%"class.spvtools::opt::Instruction"* nonnull %123) #11
  br label %130

130:                                              ; preds = %119, %125
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #11
  %131 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %12, align 8
  %132 = icmp eq %"struct.spvtools::opt::Operand"* %131, null
  br i1 %132, label %162, label %133

133:                                              ; preds = %130
  %134 = bitcast %"struct.spvtools::opt::Operand"* %131 to i8*
  %135 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %13, align 8
  %136 = icmp eq %"struct.spvtools::opt::Operand"* %135, %131
  br i1 %136, label %160, label %137

137:                                              ; preds = %133, %155
  %138 = phi %"struct.spvtools::opt::Operand"* [ %139, %155 ], [ %135, %133 ]
  %139 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %138, i64 -1
  %140 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %138, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %140, align 8
  %141 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %138, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %142 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %141, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %141, align 8
  %143 = icmp eq %"class.std::__1::vector.3"* %142, null
  br i1 %143, label %155, label %144

144:                                              ; preds = %137
  %145 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %142, i64 0, i32 0, i32 0
  %146 = load i32*, i32** %145, align 8
  %147 = icmp eq i32* %146, null
  br i1 %147, label %153, label %148

148:                                              ; preds = %144
  %149 = ptrtoint i32* %146 to i64
  %150 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %142, i64 0, i32 0, i32 1
  %151 = bitcast i32** %150 to i64*
  store i64 %149, i64* %151, align 8
  %152 = bitcast i32* %146 to i8*
  call void @_ZdlPv(i8* %152) #12
  br label %153

153:                                              ; preds = %148, %144
  %154 = bitcast %"class.std::__1::vector.3"* %142 to i8*
  call void @_ZdlPv(i8* %154) #12
  br label %155

155:                                              ; preds = %153, %137
  %156 = icmp eq %"struct.spvtools::opt::Operand"* %139, %131
  br i1 %156, label %157, label %137

157:                                              ; preds = %155
  %158 = bitcast %"class.std::__1::vector"* %5 to i8**
  %159 = load i8*, i8** %158, align 8
  br label %160

160:                                              ; preds = %157, %133
  %161 = phi i8* [ %159, %157 ], [ %134, %133 ]
  store %"struct.spvtools::opt::Operand"* %131, %"struct.spvtools::opt::Operand"** %13, align 8
  call void @_ZdlPv(i8* %161) #12
  br label %162

162:                                              ; preds = %130, %160
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  ret %"class.spvtools::opt::Instruction"* %122

163:                                              ; preds = %72, %213
  %164 = phi i32* [ %68, %72 ], [ %214, %213 ]
  %165 = load i32, i32* %164, align 4
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %73) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %74) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %75, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %78, %"struct.std::__1::aligned_storage<4, 4>::type"** %79, align 8
  store i64 0, i64* %81, align 8
  store i64 1, i64* %76, align 8
  store i32 %165, i32* %82, align 8
  store i32 1, i32* %83, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %85, align 8
  store i64 0, i64* %86, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %88, %"struct.std::__1::aligned_storage<4, 4>::type"** %89, align 8
  store i64 0, i64* %91, align 8
  %166 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %84, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9) #11
  %167 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %13, align 8
  %168 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %14, align 8
  %169 = icmp ult %"struct.spvtools::opt::Operand"* %167, %168
  br i1 %169, label %170, label %184

170:                                              ; preds = %163
  %171 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %167, i64 0, i32 0
  %172 = load i32, i32* %83, align 8
  store i32 %172, i32* %171, align 8
  %173 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %167, i64 0, i32 1
  %174 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %173, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %174, align 8
  %175 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %167, i64 0, i32 1, i32 1
  store i64 0, i64* %175, align 8
  %176 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %167, i64 0, i32 1, i32 2
  %177 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %167, i64 0, i32 1, i32 3, i64 0
  %178 = bitcast i32** %176 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %177, %"struct.std::__1::aligned_storage<4, 4>::type"** %178, align 8
  %179 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %167, i64 0, i32 1, i32 4
  %180 = bitcast %"class.std::__1::unique_ptr.0"* %179 to i64*
  store i64 0, i64* %180, align 8
  %181 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %173, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %84) #11
  %182 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %167, i64 1
  %183 = ptrtoint %"struct.spvtools::opt::Operand"* %182 to i64
  store i64 %183, i64* %92, align 8
  br label %185

184:                                              ; preds = %163
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* nonnull %5, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %8) #11
  br label %185

185:                                              ; preds = %170, %184
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %93, align 8
  %186 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %94, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %94, align 8
  %187 = icmp eq %"class.std::__1::vector.3"* %186, null
  br i1 %187, label %199, label %188

188:                                              ; preds = %185
  %189 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %186, i64 0, i32 0, i32 0
  %190 = load i32*, i32** %189, align 8
  %191 = icmp eq i32* %190, null
  br i1 %191, label %197, label %192

192:                                              ; preds = %188
  %193 = ptrtoint i32* %190 to i64
  %194 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %186, i64 0, i32 0, i32 1
  %195 = bitcast i32** %194 to i64*
  store i64 %193, i64* %195, align 8
  %196 = bitcast i32* %190 to i8*
  call void @_ZdlPv(i8* %196) #12
  br label %197

197:                                              ; preds = %192, %188
  %198 = bitcast %"class.std::__1::vector.3"* %186 to i8*
  call void @_ZdlPv(i8* %198) #12
  br label %199

199:                                              ; preds = %185, %197
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %75, align 8
  %200 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %95, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %95, align 8
  %201 = icmp eq %"class.std::__1::vector.3"* %200, null
  br i1 %201, label %213, label %202

202:                                              ; preds = %199
  %203 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %200, i64 0, i32 0, i32 0
  %204 = load i32*, i32** %203, align 8
  %205 = icmp eq i32* %204, null
  br i1 %205, label %211, label %206

206:                                              ; preds = %202
  %207 = ptrtoint i32* %204 to i64
  %208 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %200, i64 0, i32 0, i32 1
  %209 = bitcast i32** %208 to i64*
  store i64 %207, i64* %209, align 8
  %210 = bitcast i32* %204 to i8*
  call void @_ZdlPv(i8* %210) #12
  br label %211

211:                                              ; preds = %206, %202
  %212 = bitcast %"class.std::__1::vector.3"* %200 to i8*
  call void @_ZdlPv(i8* %212) #12
  br label %213

213:                                              ; preds = %199, %211
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %74) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %73) #11
  %214 = getelementptr inbounds i32, i32* %164, i64 1
  %215 = icmp eq i32* %214, %70
  br i1 %215, label %96, label %163
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"* %0)
  br label %9

9:                                                ; preds = %2, %8
  %10 = lshr i64 %3, 32
  %11 = shl i64 %3, 3
  %12 = and i64 %11, 4294967288
  %13 = add nuw nsw i64 %12, 8
  %14 = xor i64 %13, %10
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %15, %10
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, -7070675565921424023
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %78, label %26

26:                                               ; preds = %9
  %27 = tail call i64 @llvm.ctpop.i64(i64 %24) #11, !range !13
  %28 = icmp ugt i64 %27, 1
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = add i64 %24, -1
  %31 = and i64 %30, %22
  br label %36

32:                                               ; preds = %26
  %33 = icmp ult i64 %22, %24
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = urem i64 %22, %24
  br label %36

36:                                               ; preds = %34, %32, %29
  %37 = phi i64 [ %31, %29 ], [ %35, %34 ], [ %22, %32 ]
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, i64 %37
  %41 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.178"* %41, null
  br i1 %42, label %78, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %41, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.178"* %45, null
  br i1 %46, label %78, label %47

47:                                               ; preds = %43
  %48 = add i64 %24, -1
  br label %49

49:                                               ; preds = %70, %47
  %50 = phi %"struct.std::__1::__hash_node_base.178"* [ %45, %47 ], [ %72, %70 ]
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 1
  %52 = bitcast %"struct.std::__1::__hash_node_base.178"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, %22
  br i1 %54, label %65, label %55

55:                                               ; preds = %49
  br i1 %28, label %58, label %56

56:                                               ; preds = %55
  %57 = and i64 %53, %48
  br label %62

58:                                               ; preds = %55
  %59 = icmp ult i64 %53, %24
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %53, %24
  br label %62

62:                                               ; preds = %60, %58, %56
  %63 = phi i64 [ %57, %56 ], [ %61, %60 ], [ %53, %58 ]
  %64 = icmp eq i64 %63, %37
  br i1 %64, label %70, label %78

65:                                               ; preds = %49
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base.178"* %66 to %"class.spvtools::opt::Instruction"**
  %68 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, align 8
  %69 = icmp eq %"class.spvtools::opt::Instruction"* %68, %1
  br i1 %69, label %74, label %70

70:                                               ; preds = %65, %62
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.178"* %72, null
  br i1 %73, label %78, label %49

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base.178"* %75 to %"class.spvtools::opt::BasicBlock"**
  %77 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %76, align 8
  br label %78

78:                                               ; preds = %70, %62, %43, %9, %36, %74
  %79 = phi %"class.spvtools::opt::BasicBlock"* [ %77, %74 ], [ null, %36 ], [ null, %9 ], [ null, %43 ], [ null, %62 ], [ null, %70 ]
  ret %"class.spvtools::opt::BasicBlock"* %79
}

declare %"class.spvtools::opt::DominatorAnalysis"* @_ZN8spvtools3opt9IRContext20GetDominatorAnalysisEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* @_ZN8spvtools3opt19CopyPropagateArrays25BuildMemoryObjectFromLoadEPNS0_11InstructionE(%"class.spvtools::opt::CopyPropagateArrays"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.3", align 8
  %4 = bitcast %"class.std::__1::vector.3"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #11
  %8 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays", %"class.spvtools::opt::CopyPropagateArrays"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 11
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %38

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %16 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %15, align 8
  %17 = tail call i8* @_Znwm(i64 104) #12
  %18 = bitcast i8* %17 to %"class.spvtools::opt::analysis::DefUseManager"*
  %19 = getelementptr inbounds i8, i8* %17, i64 32
  %20 = bitcast i8* %19 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %17, i64 48
  %22 = getelementptr inbounds i8, i8* %17, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #11
  %23 = bitcast i8* %22 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds i8, i8* %17, i64 64
  %25 = getelementptr inbounds i8, i8* %17, i64 96
  %26 = bitcast i8* %25 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %26, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %18, %"class.spvtools::opt::Module"* %16) #11
  %27 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 6
  %28 = ptrtoint i8* %17 to i64
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %27, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %29, align 8
  %31 = bitcast %"class.std::__1::unique_ptr.62"* %27 to i64*
  store i64 %28, i64* %31, align 8
  %32 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %30, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %14
  %34 = bitcast %"class.std::__1::unique_ptr.62"* %27 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %34, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %30) #11
  br label %35

35:                                               ; preds = %33, %14
  %36 = load i32, i32* %10, align 8
  %37 = or i32 %36, 1
  store i32 %37, i32* %10, align 8
  br label %38

38:                                               ; preds = %2, %35
  %39 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 6, i32 0, i32 0, i32 0
  %40 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %39, align 8
  %41 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %42 = load i8, i8* %41, align 4, !range !2
  %43 = icmp eq i8 %42, 0
  %44 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %45 = load i8, i8* %44, align 1, !range !2
  %46 = icmp eq i8 %45, 0
  %47 = select i1 %46, i32 1, i32 2
  %48 = xor i1 %46, true
  %49 = zext i1 %48 to i32
  %50 = select i1 %43, i32 %49, i32 %47
  %51 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %50) #11
  %52 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %40, i32 %51) #11
  %53 = bitcast i32** %6 to i64*
  %54 = bitcast %"class.std::__1::vector.3"* %3 to i64*
  %55 = bitcast i32** %7 to i64*
  br label %56

56:                                               ; preds = %86, %38
  %57 = phi i64 [ 0, %38 ], [ %87, %86 ]
  %58 = phi i32* [ null, %38 ], [ %88, %86 ]
  %59 = phi i32* [ null, %38 ], [ %89, %86 ]
  %60 = phi %"class.spvtools::opt::Instruction"* [ %52, %38 ], [ %92, %86 ]
  %61 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %60, i64 0, i32 2
  %62 = load i32, i32* %61, align 8
  switch i32 %62, label %343 [
    i32 65, label %63
    i32 59, label %163
  ]

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %60, i64 0, i32 6
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %60, i64 0, i32 6, i32 0, i32 1
  %66 = bitcast %"struct.spvtools::opt::Operand"** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.std::__1::vector"* %64 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %67, %69
  %71 = sdiv exact i64 %70, 48
  %72 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %60, i64 0, i32 3
  %73 = load i8, i8* %72, align 4, !range !2
  %74 = icmp eq i8 %73, 0
  %75 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %60, i64 0, i32 4
  %76 = load i8, i8* %75, align 1, !range !2
  %77 = icmp eq i8 %76, 0
  %78 = select i1 %77, i32 1, i32 2
  %79 = xor i1 %77, true
  %80 = zext i1 %79 to i32
  %81 = select i1 %74, i32 %80, i32 %78
  %82 = trunc i64 %71 to i32
  %83 = xor i32 %81, -1
  %84 = add i32 %83, %82
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %93

86:                                               ; preds = %150, %63
  %87 = phi i64 [ %57, %63 ], [ %151, %150 ]
  %88 = phi i32* [ %58, %63 ], [ %152, %150 ]
  %89 = phi i32* [ %59, %63 ], [ %152, %150 ]
  %90 = phi i32 [ %81, %63 ], [ %162, %150 ]
  %91 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %60, i32 %90) #11
  %92 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %40, i32 %91) #11
  br label %56

93:                                               ; preds = %63, %150
  %94 = phi i64 [ %151, %150 ], [ %57, %63 ]
  %95 = phi i32* [ %152, %150 ], [ %58, %63 ]
  %96 = phi i32 [ %162, %150 ], [ %81, %63 ]
  %97 = phi i32 [ %153, %150 ], [ %84, %63 ]
  %98 = add i32 %96, %97
  %99 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %60, i32 %98) #11
  %100 = load i32*, i32** %7, align 8
  %101 = icmp eq i32* %95, %100
  br i1 %101, label %105, label %102

102:                                              ; preds = %93
  store i32 %99, i32* %95, align 4
  %103 = getelementptr inbounds i32, i32* %95, i64 1
  %104 = ptrtoint i32* %103 to i64
  store i64 %104, i64* %53, align 8
  br label %150

105:                                              ; preds = %93
  %106 = ptrtoint i32* %100 to i64
  %107 = load i64, i64* %54, align 8
  %108 = sub i64 %106, %107
  %109 = ashr exact i64 %108, 2
  %110 = add nsw i64 %109, 1
  %111 = icmp ugt i64 %110, 4611686018427387903
  br i1 %111, label %112, label %114

112:                                              ; preds = %105
  %113 = bitcast %"class.std::__1::vector.3"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %113) #13
  unreachable

114:                                              ; preds = %105
  %115 = icmp ult i64 %109, 2305843009213693951
  br i1 %115, label %116, label %124

116:                                              ; preds = %114
  %117 = ashr exact i64 %108, 1
  %118 = icmp ult i64 %117, %110
  %119 = select i1 %118, i64 %110, i64 %117
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %129, label %121

121:                                              ; preds = %116
  %122 = icmp ugt i64 %119, 4611686018427387903
  br i1 %122, label %123, label %124

123:                                              ; preds = %121
  tail call void @abort() #13
  unreachable

124:                                              ; preds = %121, %114
  %125 = phi i64 [ %119, %121 ], [ 4611686018427387903, %114 ]
  %126 = shl i64 %125, 2
  %127 = tail call i8* @_Znwm(i64 %126) #12
  %128 = bitcast i8* %127 to i32*
  br label %129

129:                                              ; preds = %124, %116
  %130 = phi i64 [ %125, %124 ], [ 0, %116 ]
  %131 = phi i32* [ %128, %124 ], [ null, %116 ]
  %132 = getelementptr inbounds i32, i32* %131, i64 %109
  %133 = getelementptr inbounds i32, i32* %131, i64 %130
  %134 = ptrtoint i32* %133 to i64
  store i32 %99, i32* %132, align 4
  %135 = getelementptr inbounds i32, i32* %132, i64 1
  %136 = ptrtoint i32* %135 to i64
  %137 = sub i64 %94, %107
  %138 = ashr exact i64 %137, 2
  %139 = sub nsw i64 0, %138
  %140 = getelementptr inbounds i32, i32* %132, i64 %139
  %141 = ptrtoint i32* %140 to i64
  %142 = icmp sgt i64 %137, 0
  br i1 %142, label %143, label %146

143:                                              ; preds = %129
  %144 = bitcast i32* %140 to i8*
  %145 = inttoptr i64 %107 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %144, i8* align 4 %145, i64 %137, i1 false) #11
  br label %146

146:                                              ; preds = %143, %129
  store i64 %141, i64* %54, align 8
  store i64 %136, i64* %53, align 8
  store i64 %134, i64* %55, align 8
  %147 = icmp eq i64 %107, 0
  br i1 %147, label %150, label %148

148:                                              ; preds = %146
  %149 = inttoptr i64 %107 to i8*
  tail call void @_ZdlPv(i8* %149) #12
  br label %150

150:                                              ; preds = %102, %146, %148
  %151 = phi i64 [ %104, %102 ], [ %136, %146 ], [ %136, %148 ]
  %152 = phi i32* [ %103, %102 ], [ %135, %146 ], [ %135, %148 ]
  %153 = add i32 %97, -1
  %154 = icmp eq i32 %153, 0
  %155 = load i8, i8* %72, align 4, !range !2
  %156 = icmp eq i8 %155, 0
  %157 = load i8, i8* %75, align 1, !range !2
  %158 = icmp eq i8 %157, 0
  %159 = select i1 %158, i32 1, i32 2
  %160 = xor i1 %158, true
  %161 = zext i1 %160 to i32
  %162 = select i1 %156, i32 %161, i32 %159
  br i1 %154, label %86, label %93

163:                                              ; preds = %56
  %164 = bitcast i32* %59 to i8*
  %165 = tail call i8* @_Znwm(i64 32) #12
  %166 = load i32*, i32** %5, align 8
  %167 = ptrtoint i32* %166 to i64
  %168 = bitcast i8* %165 to %"class.spvtools::opt::Instruction"**
  store %"class.spvtools::opt::Instruction"* %60, %"class.spvtools::opt::Instruction"** %168, align 8
  %169 = getelementptr inbounds i8, i8* %165, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %169, i8 0, i64 24, i1 false) #11
  %170 = ptrtoint i32* %59 to i64
  %171 = sub i64 %170, %167
  %172 = ashr exact i64 %171, 2
  %173 = icmp eq i64 %171, 0
  br i1 %173, label %341, label %174

174:                                              ; preds = %163
  %175 = icmp ugt i64 %172, 4611686018427387903
  br i1 %175, label %176, label %178

176:                                              ; preds = %174
  %177 = bitcast i8* %169 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %177) #13
  unreachable

178:                                              ; preds = %174
  %179 = tail call i8* @_Znwm(i64 %171) #12
  %180 = bitcast i8* %179 to i32*
  %181 = getelementptr inbounds i8, i8* %165, i64 16
  %182 = bitcast i8* %181 to i8**
  store i8* %179, i8** %182, align 8
  %183 = bitcast i8* %169 to i8**
  store i8* %179, i8** %183, align 8
  %184 = getelementptr inbounds i32, i32* %180, i64 %172
  %185 = getelementptr inbounds i8, i8* %165, i64 24
  %186 = bitcast i8* %185 to i32**
  store i32* %184, i32** %186, align 8
  %187 = bitcast i8* %181 to i64*
  %188 = ptrtoint i8* %179 to i64
  %189 = icmp eq i32* %59, %166
  br i1 %189, label %339, label %190

190:                                              ; preds = %178
  %191 = getelementptr i32, i32* %59, i64 -1
  %192 = ptrtoint i32* %191 to i64
  %193 = sub i64 %192, %167
  %194 = lshr i64 %193, 2
  %195 = add nuw nsw i64 %194, 1
  %196 = icmp ult i64 %195, 8
  br i1 %196, label %284, label %197

197:                                              ; preds = %190
  %198 = getelementptr i32, i32* %59, i64 -1
  %199 = ptrtoint i32* %198 to i64
  %200 = sub i64 %199, %167
  %201 = lshr i64 %200, 2
  %202 = add i64 %200, 4
  %203 = and i64 %202, -4
  %204 = getelementptr i8, i8* %179, i64 %203
  %205 = xor i64 %201, -1
  %206 = getelementptr i32, i32* %59, i64 %205
  %207 = bitcast i32* %206 to i8*
  %208 = icmp ult i8* %179, %164
  %209 = icmp ugt i8* %204, %207
  %210 = and i1 %208, %209
  br i1 %210, label %284, label %211

211:                                              ; preds = %197
  %212 = and i64 %195, 9223372036854775800
  %213 = getelementptr i32, i32* %180, i64 %212
  %214 = sub nsw i64 0, %212
  %215 = getelementptr i32, i32* %59, i64 %214
  %216 = add nsw i64 %212, -8
  %217 = lshr exact i64 %216, 3
  %218 = add nuw nsw i64 %217, 1
  %219 = and i64 %218, 1
  %220 = icmp eq i64 %216, 0
  br i1 %220, label %262, label %221

221:                                              ; preds = %211
  %222 = sub nuw nsw i64 %218, %219
  %223 = getelementptr i32, i32* %59, i64 -1
  %224 = getelementptr i32, i32* %59, i64 -1
  br label %225

225:                                              ; preds = %225, %221
  %226 = phi i64 [ 0, %221 ], [ %259, %225 ]
  %227 = phi i64 [ %222, %221 ], [ %260, %225 ]
  %228 = getelementptr i32, i32* %180, i64 %226
  %229 = sub i64 0, %226
  %230 = getelementptr inbounds i32, i32* %223, i64 %229
  %231 = getelementptr inbounds i32, i32* %230, i64 -3
  %232 = bitcast i32* %231 to <4 x i32>*
  %233 = load <4 x i32>, <4 x i32>* %232, align 4, !alias.scope !14
  %234 = shufflevector <4 x i32> %233, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %235 = getelementptr inbounds i32, i32* %230, i64 -4
  %236 = getelementptr inbounds i32, i32* %235, i64 -3
  %237 = bitcast i32* %236 to <4 x i32>*
  %238 = load <4 x i32>, <4 x i32>* %237, align 4, !alias.scope !14
  %239 = shufflevector <4 x i32> %238, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %240 = bitcast i32* %228 to <4 x i32>*
  store <4 x i32> %234, <4 x i32>* %240, align 4, !alias.scope !17, !noalias !14
  %241 = getelementptr i32, i32* %228, i64 4
  %242 = bitcast i32* %241 to <4 x i32>*
  store <4 x i32> %239, <4 x i32>* %242, align 4, !alias.scope !17, !noalias !14
  %243 = or i64 %226, 8
  %244 = getelementptr i32, i32* %180, i64 %243
  %245 = sub nuw nsw i64 -8, %226
  %246 = getelementptr inbounds i32, i32* %224, i64 %245
  %247 = getelementptr inbounds i32, i32* %246, i64 -3
  %248 = bitcast i32* %247 to <4 x i32>*
  %249 = load <4 x i32>, <4 x i32>* %248, align 4, !alias.scope !14
  %250 = shufflevector <4 x i32> %249, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %251 = getelementptr inbounds i32, i32* %246, i64 -4
  %252 = getelementptr inbounds i32, i32* %251, i64 -3
  %253 = bitcast i32* %252 to <4 x i32>*
  %254 = load <4 x i32>, <4 x i32>* %253, align 4, !alias.scope !14
  %255 = shufflevector <4 x i32> %254, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %256 = bitcast i32* %244 to <4 x i32>*
  store <4 x i32> %250, <4 x i32>* %256, align 4, !alias.scope !17, !noalias !14
  %257 = getelementptr i32, i32* %244, i64 4
  %258 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> %255, <4 x i32>* %258, align 4, !alias.scope !17, !noalias !14
  %259 = add i64 %226, 16
  %260 = add i64 %227, -2
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %262, label %225, !llvm.loop !19

262:                                              ; preds = %225, %211
  %263 = phi i64 [ 0, %211 ], [ %259, %225 ]
  %264 = icmp eq i64 %219, 0
  br i1 %264, label %282, label %265

265:                                              ; preds = %262
  %266 = getelementptr i32, i32* %180, i64 %263
  %267 = sub i64 0, %263
  %268 = getelementptr i32, i32* %59, i64 -1
  %269 = getelementptr inbounds i32, i32* %268, i64 %267
  %270 = getelementptr inbounds i32, i32* %269, i64 -3
  %271 = bitcast i32* %270 to <4 x i32>*
  %272 = load <4 x i32>, <4 x i32>* %271, align 4, !alias.scope !14
  %273 = shufflevector <4 x i32> %272, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %274 = getelementptr inbounds i32, i32* %269, i64 -4
  %275 = getelementptr inbounds i32, i32* %274, i64 -3
  %276 = bitcast i32* %275 to <4 x i32>*
  %277 = load <4 x i32>, <4 x i32>* %276, align 4, !alias.scope !14
  %278 = shufflevector <4 x i32> %277, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %279 = bitcast i32* %266 to <4 x i32>*
  store <4 x i32> %273, <4 x i32>* %279, align 4, !alias.scope !17, !noalias !14
  %280 = getelementptr i32, i32* %266, i64 4
  %281 = bitcast i32* %280 to <4 x i32>*
  store <4 x i32> %278, <4 x i32>* %281, align 4, !alias.scope !17, !noalias !14
  br label %282

282:                                              ; preds = %262, %265
  %283 = icmp eq i64 %195, %212
  br i1 %283, label %336, label %284

284:                                              ; preds = %282, %197, %190
  %285 = phi i32* [ %180, %197 ], [ %180, %190 ], [ %213, %282 ]
  %286 = phi i32* [ %59, %197 ], [ %59, %190 ], [ %215, %282 ]
  %287 = getelementptr i32, i32* %286, i64 -1
  %288 = ptrtoint i32* %287 to i64
  %289 = sub i64 %288, %167
  %290 = lshr i64 %289, 2
  %291 = add nuw nsw i64 %290, 1
  %292 = and i64 %291, 7
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %303, label %294

294:                                              ; preds = %284, %294
  %295 = phi i32* [ %300, %294 ], [ %285, %284 ]
  %296 = phi i32* [ %298, %294 ], [ %286, %284 ]
  %297 = phi i64 [ %301, %294 ], [ %292, %284 ]
  %298 = getelementptr inbounds i32, i32* %296, i64 -1
  %299 = load i32, i32* %298, align 4
  store i32 %299, i32* %295, align 4
  %300 = getelementptr inbounds i32, i32* %295, i64 1
  %301 = add i64 %297, -1
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %294, !llvm.loop !21

303:                                              ; preds = %294, %284
  %304 = phi i32* [ undef, %284 ], [ %300, %294 ]
  %305 = phi i32* [ %285, %284 ], [ %300, %294 ]
  %306 = phi i32* [ %286, %284 ], [ %298, %294 ]
  %307 = icmp ult i64 %289, 28
  br i1 %307, label %336, label %308

308:                                              ; preds = %303, %308
  %309 = phi i32* [ %334, %308 ], [ %305, %303 ]
  %310 = phi i32* [ %332, %308 ], [ %306, %303 ]
  %311 = getelementptr inbounds i32, i32* %310, i64 -1
  %312 = load i32, i32* %311, align 4
  store i32 %312, i32* %309, align 4
  %313 = getelementptr inbounds i32, i32* %309, i64 1
  %314 = getelementptr inbounds i32, i32* %310, i64 -2
  %315 = load i32, i32* %314, align 4
  store i32 %315, i32* %313, align 4
  %316 = getelementptr inbounds i32, i32* %309, i64 2
  %317 = getelementptr inbounds i32, i32* %310, i64 -3
  %318 = load i32, i32* %317, align 4
  store i32 %318, i32* %316, align 4
  %319 = getelementptr inbounds i32, i32* %309, i64 3
  %320 = getelementptr inbounds i32, i32* %310, i64 -4
  %321 = load i32, i32* %320, align 4
  store i32 %321, i32* %319, align 4
  %322 = getelementptr inbounds i32, i32* %309, i64 4
  %323 = getelementptr inbounds i32, i32* %310, i64 -5
  %324 = load i32, i32* %323, align 4
  store i32 %324, i32* %322, align 4
  %325 = getelementptr inbounds i32, i32* %309, i64 5
  %326 = getelementptr inbounds i32, i32* %310, i64 -6
  %327 = load i32, i32* %326, align 4
  store i32 %327, i32* %325, align 4
  %328 = getelementptr inbounds i32, i32* %309, i64 6
  %329 = getelementptr inbounds i32, i32* %310, i64 -7
  %330 = load i32, i32* %329, align 4
  store i32 %330, i32* %328, align 4
  %331 = getelementptr inbounds i32, i32* %309, i64 7
  %332 = getelementptr inbounds i32, i32* %310, i64 -8
  %333 = load i32, i32* %332, align 4
  store i32 %333, i32* %331, align 4
  %334 = getelementptr inbounds i32, i32* %309, i64 8
  %335 = icmp eq i32* %332, %166
  br i1 %335, label %336, label %308, !llvm.loop !23

336:                                              ; preds = %303, %308, %282
  %337 = phi i32* [ %213, %282 ], [ %304, %303 ], [ %334, %308 ]
  %338 = ptrtoint i32* %337 to i64
  br label %339

339:                                              ; preds = %336, %178
  %340 = phi i64 [ %188, %178 ], [ %338, %336 ]
  store i64 %340, i64* %187, align 8
  br label %341

341:                                              ; preds = %163, %339
  %342 = bitcast i8* %165 to %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"*
  br label %343

343:                                              ; preds = %56, %341
  %344 = phi %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* [ %342, %341 ], [ null, %56 ]
  %345 = load i32*, i32** %5, align 8
  %346 = icmp eq i32* %345, null
  br i1 %346, label %350, label %347

347:                                              ; preds = %343
  %348 = ptrtoint i32* %345 to i64
  store i64 %348, i64* %53, align 8
  %349 = bitcast i32* %345 to i8*
  tail call void @_ZdlPv(i8* %349) #12
  br label %350

350:                                              ; preds = %343, %347
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #11
  ret %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %344
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* @_ZN8spvtools3opt19CopyPropagateArrays28BuildMemoryObjectFromExtractEPNS0_11InstructionE(%"class.spvtools::opt::CopyPropagateArrays"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.spvtools::opt::analysis::Integer", align 8
  %4 = alloca %"class.std::__1::vector.3", align 8
  %5 = alloca %"class.std::__1::vector.3", align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays", %"class.spvtools::opt::CopyPropagateArrays"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 11
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 16384
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %26

12:                                               ; preds = %2
  %13 = tail call i8* @_Znwm(i64 136) #12
  %14 = bitcast i8* %13 to %"class.spvtools::opt::analysis::ConstantManager"*
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %14, %"class.spvtools::opt::IRContext"* %7) #11
  %15 = ptrtoint i8* %13 to i64
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 19
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %17, align 8
  %19 = bitcast %"class.std::__1::unique_ptr.400"* %16 to i64*
  store i64 %15, i64* %19, align 8
  %20 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %12
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %18) #11
  %22 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %18 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %21, %12
  %24 = load i32, i32* %8, align 8
  %25 = or i32 %24, 16384
  store i32 %25, i32* %8, align 8
  br label %26

26:                                               ; preds = %2, %23
  %27 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 19, i32 0, i32 0, i32 0
  %28 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %27, align 8
  %29 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %30 = load i8, i8* %29, align 4, !range !2
  %31 = icmp eq i8 %30, 0
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %33 = load i8, i8* %32, align 1, !range !2
  %34 = icmp eq i8 %33, 0
  %35 = select i1 %34, i32 1, i32 2
  %36 = xor i1 %34, true
  %37 = zext i1 %36 to i32
  %38 = select i1 %31, i32 %37, i32 %35
  %39 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %38) #11
  %40 = tail call %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* @_ZN8spvtools3opt19CopyPropagateArrays20GetSourceObjectIfAnyEj(%"class.spvtools::opt::CopyPropagateArrays"* %0, i32 %39)
  %41 = icmp eq %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %40, null
  br i1 %41, label %227, label %42

42:                                               ; preds = %26
  %43 = bitcast %"class.spvtools::opt::analysis::Integer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %43) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 48, i1 false)
  %44 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 0, i32 1
  %46 = bitcast %"class.std::__1::vector.463"* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #11
  %47 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 0, i32 2
  store i32 2, i32* %47, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis7IntegerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %48 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 1
  store i32 32, i32* %48, align 4
  %49 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 2
  store i8 0, i8* %49, align 8
  %50 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %51 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 11
  %52 = load i32, i32* %51, align 8
  %53 = trunc i32 %52 to i16
  %54 = icmp slt i16 %53, 0
  br i1 %54, label %70, label %55

55:                                               ; preds = %42
  %56 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 5
  %57 = tail call i8* @_Znwm(i64 240) #12
  %58 = bitcast i8* %57 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %58, %"class.std::__1::function"* dereferenceable(32) %56, %"class.spvtools::opt::IRContext"* %50) #11
  %59 = ptrtoint i8* %57 to i64
  %60 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 20
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %61, align 8
  %63 = bitcast %"class.std::__1::unique_ptr.480"* %60 to i64*
  store i64 %59, i64* %63, align 8
  %64 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %62, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %55
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %62) #11
  %66 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %62 to i8*
  tail call void @_ZdlPv(i8* %66) #12
  br label %67

67:                                               ; preds = %65, %55
  %68 = load i32, i32* %51, align 8
  %69 = or i32 %68, 32768
  store i32 %69, i32* %51, align 8
  br label %70

70:                                               ; preds = %42, %67
  %71 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 20, i32 0, i32 0, i32 0
  %72 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %71, align 8
  %73 = bitcast %"class.spvtools::opt::analysis::Integer"* %3 to %"class.spvtools::opt::analysis::Type"*
  %74 = call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager17GetRegisteredTypeEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %72, %"class.spvtools::opt::analysis::Type"* nonnull %73) #11
  %75 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #11
  %76 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %78 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 24, i1 false) #11
  %79 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %80 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %81 = bitcast %"struct.spvtools::opt::Operand"** %80 to i64*
  %82 = bitcast %"class.std::__1::vector"* %79 to i64*
  %83 = bitcast %"class.std::__1::vector.3"* %5 to i8*
  %84 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 1
  %85 = bitcast %"class.std::__1::vector.3"* %5 to i8**
  %86 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %87 = bitcast i32** %86 to i8**
  %88 = bitcast i32** %84 to i64*
  %89 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 0
  %90 = bitcast i32** %77 to i64*
  %91 = bitcast %"class.std::__1::vector.3"* %4 to i64*
  %92 = bitcast i32** %78 to i64*
  br label %93

93:                                               ; preds = %225, %70
  %94 = phi i32 [ 1, %70 ], [ %226, %225 ]
  %95 = load i64, i64* %81, align 8
  %96 = load i64, i64* %82, align 8
  %97 = sub i64 %95, %96
  %98 = sdiv exact i64 %97, 48
  %99 = load i8, i8* %29, align 4, !range !2
  %100 = icmp eq i8 %99, 0
  %101 = load i8, i8* %32, align 1, !range !2
  %102 = icmp eq i8 %101, 0
  %103 = select i1 %102, i32 1, i32 2
  %104 = xor i1 %102, true
  %105 = zext i1 %104 to i32
  %106 = select i1 %100, i32 %105, i32 %103
  %107 = trunc i64 %98 to i32
  %108 = sub i32 %107, %106
  %109 = icmp ult i32 %94, %108
  br i1 %109, label %150, label %110

110:                                              ; preds = %93
  %111 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %40, i64 0, i32 1
  %112 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %40, i64 0, i32 1, i32 0, i32 1
  %113 = load i32*, i32** %112, align 8
  %114 = load i32*, i32** %76, align 8
  %115 = load i32*, i32** %77, align 8
  %116 = call i32* @_ZNSt3__16vectorIjNS_9allocatorIjEEE6insertINS_11__wrap_iterIPKjEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPjEEE4typeES8_SA_SA_(%"class.std::__1::vector.3"* %111, i32* %113, i32* %114, i32* %115) #11
  %117 = load i32*, i32** %76, align 8
  %118 = icmp eq i32* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %110
  %120 = ptrtoint i32* %117 to i64
  store i64 %120, i64* %90, align 8
  %121 = bitcast i32* %117 to i8*
  call void @_ZdlPv(i8* %121) #12
  br label %122

122:                                              ; preds = %110, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %123 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %45, i64 0, i32 0, i32 0
  %124 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %123, align 8
  %125 = icmp eq %"class.std::__1::vector.3"* %124, null
  br i1 %125, label %149, label %126

126:                                              ; preds = %122
  %127 = bitcast %"class.std::__1::vector.3"* %124 to i8*
  %128 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %129 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %128, align 8
  %130 = icmp eq %"class.std::__1::vector.3"* %129, %124
  br i1 %130, label %147, label %131

131:                                              ; preds = %126, %142
  %132 = phi %"class.std::__1::vector.3"* [ %133, %142 ], [ %129, %126 ]
  %133 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %132, i64 -1
  %134 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %133, i64 0, i32 0, i32 0
  %135 = load i32*, i32** %134, align 8
  %136 = icmp eq i32* %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %131
  %138 = ptrtoint i32* %135 to i64
  %139 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %132, i64 -1, i32 0, i32 1
  %140 = bitcast i32** %139 to i64*
  store i64 %138, i64* %140, align 8
  %141 = bitcast i32* %135 to i8*
  call void @_ZdlPv(i8* %141) #12
  br label %142

142:                                              ; preds = %137, %131
  %143 = icmp eq %"class.std::__1::vector.3"* %133, %124
  br i1 %143, label %144, label %131

144:                                              ; preds = %142
  %145 = bitcast %"class.std::__1::vector.463"* %45 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %144, %126
  %148 = phi i8* [ %146, %144 ], [ %127, %126 ]
  store %"class.std::__1::vector.3"* %124, %"class.std::__1::vector.3"** %128, align 8
  call void @_ZdlPv(i8* %148) #12
  br label %149

149:                                              ; preds = %147, %122
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %43) #11
  br label %227

150:                                              ; preds = %93
  %151 = add i32 %106, %94
  %152 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %151) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #11
  %153 = call i8* @_Znwm(i64 4) #12
  %154 = bitcast i8* %153 to i32*
  store i8* %153, i8** %85, align 8
  %155 = getelementptr inbounds i8, i8* %153, i64 4
  store i8* %155, i8** %87, align 8
  store i32 %152, i32* %154, align 4
  %156 = ptrtoint i8* %155 to i64
  store i64 %156, i64* %88, align 8
  %157 = call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"* %28, %"class.spvtools::opt::analysis::Type"* %74, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %5) #11
  %158 = load i32*, i32** %89, align 8
  %159 = icmp eq i32* %158, null
  br i1 %159, label %163, label %160

160:                                              ; preds = %150
  %161 = ptrtoint i32* %158 to i64
  store i64 %161, i64* %88, align 8
  %162 = bitcast i32* %158 to i8*
  call void @_ZdlPv(i8* %162) #12
  br label %163

163:                                              ; preds = %150, %160
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #11
  %164 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"* %28, %"class.spvtools::opt::analysis::Constant"* %157, i32 0, %"class.spvtools::opt::InstructionList::iterator"* null) #11
  %165 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %164, i64 0, i32 4
  %166 = load i8, i8* %165, align 1, !range !2
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %173, label %168

168:                                              ; preds = %163
  %169 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %164, i64 0, i32 3
  %170 = load i8, i8* %169, align 4, !range !2
  %171 = zext i8 %170 to i32
  %172 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %164, i32 %171) #11
  br label %173

173:                                              ; preds = %163, %168
  %174 = phi i32 [ %172, %168 ], [ 0, %163 ]
  %175 = load i32*, i32** %77, align 8
  %176 = load i32*, i32** %78, align 8
  %177 = icmp ult i32* %175, %176
  %178 = ptrtoint i32* %176 to i64
  br i1 %177, label %179, label %182

179:                                              ; preds = %173
  store i32 %174, i32* %175, align 4
  %180 = getelementptr inbounds i32, i32* %175, i64 1
  %181 = ptrtoint i32* %180 to i64
  store i64 %181, i64* %90, align 8
  br label %225

182:                                              ; preds = %173
  %183 = ptrtoint i32* %175 to i64
  %184 = load i64, i64* %91, align 8
  %185 = sub i64 %183, %184
  %186 = ashr exact i64 %185, 2
  %187 = add nsw i64 %186, 1
  %188 = icmp ugt i64 %187, 4611686018427387903
  br i1 %188, label %189, label %191

189:                                              ; preds = %182
  %190 = bitcast %"class.std::__1::vector.3"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %190) #13
  unreachable

191:                                              ; preds = %182
  %192 = sub i64 %178, %184
  %193 = ashr exact i64 %192, 2
  %194 = icmp ult i64 %193, 2305843009213693951
  br i1 %194, label %195, label %203

195:                                              ; preds = %191
  %196 = ashr exact i64 %192, 1
  %197 = icmp ult i64 %196, %187
  %198 = select i1 %197, i64 %187, i64 %196
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %208, label %200

200:                                              ; preds = %195
  %201 = icmp ugt i64 %198, 4611686018427387903
  br i1 %201, label %202, label %203

202:                                              ; preds = %200
  call void @abort() #13
  unreachable

203:                                              ; preds = %200, %191
  %204 = phi i64 [ %198, %200 ], [ 4611686018427387903, %191 ]
  %205 = shl i64 %204, 2
  %206 = call i8* @_Znwm(i64 %205) #12
  %207 = bitcast i8* %206 to i32*
  br label %208

208:                                              ; preds = %203, %195
  %209 = phi i64 [ %204, %203 ], [ 0, %195 ]
  %210 = phi i8* [ %206, %203 ], [ null, %195 ]
  %211 = phi i32* [ %207, %203 ], [ null, %195 ]
  %212 = getelementptr inbounds i32, i32* %211, i64 %186
  %213 = getelementptr inbounds i32, i32* %211, i64 %209
  %214 = ptrtoint i32* %213 to i64
  store i32 %174, i32* %212, align 4
  %215 = getelementptr inbounds i32, i32* %212, i64 1
  %216 = ptrtoint i32* %215 to i64
  %217 = ptrtoint i32* %211 to i64
  %218 = icmp sgt i64 %185, 0
  br i1 %218, label %219, label %221

219:                                              ; preds = %208
  %220 = inttoptr i64 %184 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %210, i8* align 4 %220, i64 %185, i1 false) #11
  br label %221

221:                                              ; preds = %219, %208
  store i64 %217, i64* %91, align 8
  store i64 %216, i64* %90, align 8
  store i64 %214, i64* %92, align 8
  %222 = icmp eq i64 %184, 0
  br i1 %222, label %225, label %223

223:                                              ; preds = %221
  %224 = inttoptr i64 %184 to i8*
  call void @_ZdlPv(i8* %224) #12
  br label %225

225:                                              ; preds = %179, %221, %223
  %226 = add nuw i32 %94, 1
  br label %93

227:                                              ; preds = %26, %149
  ret %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %40
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* @_ZN8spvtools3opt19CopyPropagateArrays39BuildMemoryObjectFromCompositeConstructEPNS0_11InstructionE(%"class.spvtools::opt::CopyPropagateArrays"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  %9 = select i1 %8, i32 1, i32 2
  %10 = xor i1 %8, true
  %11 = zext i1 %10 to i32
  %12 = select i1 %5, i32 %11, i32 %9
  %13 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %12) #11
  %14 = tail call %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* @_ZN8spvtools3opt19CopyPropagateArrays20GetSourceObjectIfAnyEj(%"class.spvtools::opt::CopyPropagateArrays"* %0, i32 %13)
  %15 = icmp eq %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %14, null
  br i1 %15, label %312, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %14, i64 0, i32 1, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %14, i64 0, i32 1, i32 0, i32 1
  %20 = load i32*, i32** %19, align 8
  %21 = icmp eq i32* %18, %20
  br i1 %21, label %301, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays", %"class.spvtools::opt::CopyPropagateArrays"* %0, i64 0, i32 0, i32 0, i32 2
  %24 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %24, i64 0, i32 11
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 16384
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %44

29:                                               ; preds = %22
  %30 = tail call i8* @_Znwm(i64 136) #12
  %31 = bitcast i8* %30 to %"class.spvtools::opt::analysis::ConstantManager"*
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %31, %"class.spvtools::opt::IRContext"* %24) #11
  %32 = ptrtoint i8* %30 to i64
  %33 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %24, i64 0, i32 19
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %34, align 8
  %36 = bitcast %"class.std::__1::unique_ptr.400"* %33 to i64*
  store i64 %32, i64* %36, align 8
  %37 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %35, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %29
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %35) #11
  %39 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %35 to i8*
  tail call void @_ZdlPv(i8* %39) #12
  br label %40

40:                                               ; preds = %38, %29
  %41 = load i32, i32* %25, align 8
  %42 = or i32 %41, 16384
  store i32 %42, i32* %25, align 8
  %43 = load i32*, i32** %19, align 8
  br label %44

44:                                               ; preds = %22, %40
  %45 = phi i32* [ %20, %22 ], [ %43, %40 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %24, i64 0, i32 19, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %46, align 8
  %48 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %14, i64 0, i32 1
  %49 = getelementptr inbounds i32, i32* %45, i64 -1
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %47, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %301, label %55

55:                                               ; preds = %44
  %56 = tail call i64 @llvm.ctpop.i64(i64 %53) #11, !range !13
  %57 = icmp ugt i64 %56, 1
  br i1 %57, label %61, label %58

58:                                               ; preds = %55
  %59 = add i64 %53, 4294967295
  %60 = and i64 %59, %51
  br label %65

61:                                               ; preds = %55
  %62 = icmp ugt i64 %53, %51
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %51, %53
  br label %65

65:                                               ; preds = %63, %61, %58
  %66 = phi i64 [ %60, %58 ], [ %64, %63 ], [ %51, %61 ]
  %67 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %47, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %68, i64 %66
  %70 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %69, align 8
  %71 = icmp eq %"struct.std::__1::__hash_node_base.408"* %70, null
  br i1 %71, label %301, label %72

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %70, i64 0, i32 0
  %74 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node_base.408"* %74, null
  br i1 %75, label %301, label %76

76:                                               ; preds = %72
  %77 = add i64 %53, -1
  br label %78

78:                                               ; preds = %99, %76
  %79 = phi %"struct.std::__1::__hash_node_base.408"* [ %74, %76 ], [ %101, %99 ]
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %79, i64 1
  %81 = bitcast %"struct.std::__1::__hash_node_base.408"* %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = icmp eq i64 %82, %51
  br i1 %83, label %94, label %84

84:                                               ; preds = %78
  br i1 %57, label %87, label %85

85:                                               ; preds = %84
  %86 = and i64 %82, %77
  br label %91

87:                                               ; preds = %84
  %88 = icmp ult i64 %82, %53
  br i1 %88, label %91, label %89

89:                                               ; preds = %87
  %90 = urem i64 %82, %53
  br label %91

91:                                               ; preds = %89, %87, %85
  %92 = phi i64 [ %86, %85 ], [ %90, %89 ], [ %82, %87 ]
  %93 = icmp eq i64 %92, %66
  br i1 %93, label %99, label %300

94:                                               ; preds = %78
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %79, i64 2
  %96 = bitcast %"struct.std::__1::__hash_node_base.408"* %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, %50
  br i1 %98, label %103, label %99

99:                                               ; preds = %94, %91
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %79, i64 0, i32 0
  %101 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.408"* %101, null
  br i1 %102, label %300, label %78

103:                                              ; preds = %94
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %79, i64 3
  %105 = bitcast %"struct.std::__1::__hash_node_base.408"* %104 to %"class.spvtools::opt::analysis::Constant"**
  %106 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %105, align 8
  %107 = icmp eq %"class.spvtools::opt::analysis::Constant"* %106, null
  br i1 %107, label %300, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant", %"class.spvtools::opt::analysis::Constant"* %106, i64 0, i32 1
  %110 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %109, align 8
  %111 = bitcast %"class.spvtools::opt::analysis::Type"* %110 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %112 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %111, align 8
  %113 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %112, i64 11
  %114 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %113, align 8
  %115 = tail call %"class.spvtools::opt::analysis::Integer"* %114(%"class.spvtools::opt::analysis::Type"* %110) #11
  %116 = icmp eq %"class.spvtools::opt::analysis::Integer"* %115, null
  br i1 %116, label %300, label %117

117:                                              ; preds = %108
  %118 = tail call i32 @_ZNK8spvtools3opt8analysis8Constant6GetU32Ev(%"class.spvtools::opt::analysis::Constant"* nonnull %106) #11
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %300

120:                                              ; preds = %117
  %121 = load i32*, i32** %19, align 8
  %122 = getelementptr inbounds i32, i32* %121, i64 -1
  store i32* %122, i32** %19, align 8
  %123 = tail call i32 @_ZN8spvtools3opt19CopyPropagateArrays12MemoryObject18GetNumberOfMembersEv(%"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* nonnull %14)
  %124 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %125 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %126 = bitcast %"struct.spvtools::opt::Operand"** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.std::__1::vector"* %124 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = sub i64 %127, %129
  %131 = sdiv exact i64 %130, 48
  %132 = load i8, i8* %3, align 4, !range !2
  %133 = icmp eq i8 %132, 0
  %134 = load i8, i8* %6, align 1, !range !2
  %135 = icmp eq i8 %134, 0
  %136 = select i1 %135, i32 1, i32 2
  %137 = xor i1 %135, true
  %138 = zext i1 %137 to i32
  %139 = select i1 %133, i32 %138, i32 %136
  %140 = trunc i64 %131 to i32
  %141 = sub i32 %140, %139
  %142 = icmp eq i32 %123, %141
  br i1 %142, label %143, label %300

143:                                              ; preds = %120
  %144 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %14, i64 0, i32 0
  %145 = bitcast i32** %19 to i64*
  %146 = bitcast %"class.std::__1::vector.3"* %48 to i64*
  %147 = sub i64 %127, %129
  %148 = sdiv exact i64 %147, 48
  %149 = icmp eq i8 %132, 0
  %150 = icmp eq i8 %134, 0
  %151 = select i1 %150, i32 1, i32 2
  %152 = xor i1 %150, true
  %153 = zext i1 %152 to i32
  %154 = select i1 %149, i32 %153, i32 %151
  %155 = trunc i64 %148 to i32
  %156 = sub i32 %155, %154
  %157 = icmp ugt i32 %156, 1
  br i1 %157, label %158, label %312

158:                                              ; preds = %143, %283
  %159 = phi i32 [ %296, %283 ], [ %154, %143 ]
  %160 = phi i32 [ %284, %283 ], [ 1, %143 ]
  %161 = add i32 %159, %160
  %162 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %161) #11
  %163 = tail call %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* @_ZN8spvtools3opt19CopyPropagateArrays20GetSourceObjectIfAnyEj(%"class.spvtools::opt::CopyPropagateArrays"* %0, i32 %162)
  %164 = icmp eq %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %163, null
  br i1 %164, label %300, label %165

165:                                              ; preds = %158
  %166 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %163, i64 0, i32 1, i32 0, i32 0
  %167 = load i32*, i32** %166, align 8
  %168 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %163, i64 0, i32 1, i32 0, i32 1
  %169 = load i32*, i32** %168, align 8
  %170 = icmp eq i32* %167, %169
  %171 = ptrtoint i32* %169 to i64
  %172 = ptrtoint i32* %167 to i64
  br i1 %170, label %272, label %173

173:                                              ; preds = %165
  %174 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %144, align 8
  %175 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %163, i64 0, i32 0
  %176 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %175, align 8
  %177 = icmp eq %"class.spvtools::opt::Instruction"* %174, %176
  br i1 %177, label %178, label %272

178:                                              ; preds = %173
  %179 = load i64, i64* %145, align 8
  %180 = load i64, i64* %146, align 8
  %181 = sub i64 %179, %180
  %182 = ashr exact i64 %181, 2
  %183 = sub i64 %171, %172
  %184 = ashr exact i64 %183, 2
  %185 = icmp ugt i64 %182, %184
  %186 = inttoptr i64 %180 to i32*
  br i1 %185, label %272, label %187

187:                                              ; preds = %178
  %188 = icmp eq i64 %181, 0
  br i1 %188, label %201, label %192

189:                                              ; preds = %192
  %190 = zext i32 %200 to i64
  %191 = icmp ugt i64 %182, %190
  br i1 %191, label %192, label %201

192:                                              ; preds = %187, %189
  %193 = phi i64 [ %190, %189 ], [ 0, %187 ]
  %194 = phi i32 [ %200, %189 ], [ 0, %187 ]
  %195 = getelementptr inbounds i32, i32* %186, i64 %193
  %196 = load i32, i32* %195, align 4
  %197 = getelementptr inbounds i32, i32* %167, i64 %193
  %198 = load i32, i32* %197, align 4
  %199 = icmp eq i32 %196, %198
  %200 = add i32 %194, 1
  br i1 %199, label %189, label %272

201:                                              ; preds = %189, %187
  %202 = getelementptr inbounds i32, i32* %169, i64 -1
  %203 = load i32, i32* %202, align 4
  %204 = zext i32 %203 to i64
  %205 = load i64, i64* %52, align 8
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %272, label %207

207:                                              ; preds = %201
  %208 = tail call i64 @llvm.ctpop.i64(i64 %205) #11, !range !13
  %209 = icmp ugt i64 %208, 1
  br i1 %209, label %213, label %210

210:                                              ; preds = %207
  %211 = add i64 %205, 4294967295
  %212 = and i64 %211, %204
  br label %217

213:                                              ; preds = %207
  %214 = icmp ugt i64 %205, %204
  br i1 %214, label %217, label %215

215:                                              ; preds = %213
  %216 = urem i64 %204, %205
  br label %217

217:                                              ; preds = %215, %213, %210
  %218 = phi i64 [ %212, %210 ], [ %216, %215 ], [ %204, %213 ]
  %219 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %67, align 8
  %220 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %219, i64 %218
  %221 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %220, align 8
  %222 = icmp eq %"struct.std::__1::__hash_node_base.408"* %221, null
  br i1 %222, label %272, label %223

223:                                              ; preds = %217
  %224 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %221, i64 0, i32 0
  %225 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %224, align 8
  %226 = icmp eq %"struct.std::__1::__hash_node_base.408"* %225, null
  br i1 %226, label %272, label %227

227:                                              ; preds = %223
  %228 = add i64 %205, -1
  br label %229

229:                                              ; preds = %250, %227
  %230 = phi %"struct.std::__1::__hash_node_base.408"* [ %225, %227 ], [ %252, %250 ]
  %231 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %230, i64 1
  %232 = bitcast %"struct.std::__1::__hash_node_base.408"* %231 to i64*
  %233 = load i64, i64* %232, align 8
  %234 = icmp eq i64 %233, %204
  br i1 %234, label %245, label %235

235:                                              ; preds = %229
  br i1 %209, label %238, label %236

236:                                              ; preds = %235
  %237 = and i64 %233, %228
  br label %242

238:                                              ; preds = %235
  %239 = icmp ult i64 %233, %205
  br i1 %239, label %242, label %240

240:                                              ; preds = %238
  %241 = urem i64 %233, %205
  br label %242

242:                                              ; preds = %240, %238, %236
  %243 = phi i64 [ %237, %236 ], [ %241, %240 ], [ %233, %238 ]
  %244 = icmp eq i64 %243, %218
  br i1 %244, label %250, label %272

245:                                              ; preds = %229
  %246 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %230, i64 2
  %247 = bitcast %"struct.std::__1::__hash_node_base.408"* %246 to i32*
  %248 = load i32, i32* %247, align 4
  %249 = icmp eq i32 %248, %203
  br i1 %249, label %254, label %250

250:                                              ; preds = %245, %242
  %251 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %230, i64 0, i32 0
  %252 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %251, align 8
  %253 = icmp eq %"struct.std::__1::__hash_node_base.408"* %252, null
  br i1 %253, label %272, label %229

254:                                              ; preds = %245
  %255 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %230, i64 3
  %256 = bitcast %"struct.std::__1::__hash_node_base.408"* %255 to %"class.spvtools::opt::analysis::Constant"**
  %257 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %256, align 8
  %258 = icmp eq %"class.spvtools::opt::analysis::Constant"* %257, null
  br i1 %258, label %272, label %259

259:                                              ; preds = %254
  %260 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant", %"class.spvtools::opt::analysis::Constant"* %257, i64 0, i32 1
  %261 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %260, align 8
  %262 = bitcast %"class.spvtools::opt::analysis::Type"* %261 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %263 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %262, align 8
  %264 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %263, i64 11
  %265 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %264, align 8
  %266 = tail call %"class.spvtools::opt::analysis::Integer"* %265(%"class.spvtools::opt::analysis::Type"* %261) #11
  %267 = icmp eq %"class.spvtools::opt::analysis::Integer"* %266, null
  br i1 %267, label %272, label %268

268:                                              ; preds = %259
  %269 = tail call i32 @_ZNK8spvtools3opt8analysis8Constant6GetU32Ev(%"class.spvtools::opt::analysis::Constant"* nonnull %257) #11
  %270 = icmp ne i32 %269, %160
  %271 = zext i1 %270 to i32
  br label %272

272:                                              ; preds = %192, %242, %250, %259, %254, %217, %201, %223, %268, %165, %178, %173
  %273 = phi i32 [ 1, %173 ], [ 1, %178 ], [ 1, %165 ], [ 1, %259 ], [ 1, %254 ], [ 1, %217 ], [ 1, %201 ], [ 1, %223 ], [ %271, %268 ], [ 1, %250 ], [ 1, %242 ], [ 1, %192 ]
  %274 = load i32*, i32** %166, align 8
  %275 = icmp eq i32* %274, null
  br i1 %275, label %280, label %276

276:                                              ; preds = %272
  %277 = ptrtoint i32* %274 to i64
  %278 = bitcast i32** %168 to i64*
  store i64 %277, i64* %278, align 8
  %279 = bitcast i32* %274 to i8*
  tail call void @_ZdlPv(i8* %279) #12
  br label %280

280:                                              ; preds = %276, %272
  %281 = bitcast %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %163 to i8*
  tail call void @_ZdlPv(i8* %281) #12
  %282 = icmp eq i32 %273, 0
  br i1 %282, label %283, label %300

283:                                              ; preds = %280
  %284 = add i32 %160, 1
  %285 = load i64, i64* %126, align 8
  %286 = load i64, i64* %128, align 8
  %287 = load i8, i8* %3, align 4, !range !2
  %288 = load i8, i8* %6, align 1, !range !2
  %289 = sub i64 %285, %286
  %290 = sdiv exact i64 %289, 48
  %291 = icmp eq i8 %287, 0
  %292 = icmp eq i8 %288, 0
  %293 = select i1 %292, i32 1, i32 2
  %294 = xor i1 %292, true
  %295 = zext i1 %294 to i32
  %296 = select i1 %291, i32 %295, i32 %293
  %297 = trunc i64 %290 to i32
  %298 = sub i32 %297, %296
  %299 = icmp ult i32 %284, %298
  br i1 %299, label %158, label %312

300:                                              ; preds = %99, %91, %158, %280, %120, %117, %103, %108
  br i1 %15, label %312, label %301

301:                                              ; preds = %65, %44, %72, %16, %300
  %302 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %14, i64 0, i32 1, i32 0, i32 0
  %303 = load i32*, i32** %302, align 8
  %304 = icmp eq i32* %303, null
  br i1 %304, label %310, label %305

305:                                              ; preds = %301
  %306 = ptrtoint i32* %303 to i64
  %307 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %14, i64 0, i32 1, i32 0, i32 1
  %308 = bitcast i32** %307 to i64*
  store i64 %306, i64* %308, align 8
  %309 = bitcast i32* %303 to i8*
  tail call void @_ZdlPv(i8* %309) #12
  br label %310

310:                                              ; preds = %305, %301
  %311 = bitcast %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %14 to i8*
  tail call void @_ZdlPv(i8* %311) #12
  br label %312

312:                                              ; preds = %283, %143, %2, %300, %310
  %313 = phi %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* [ null, %300 ], [ null, %310 ], [ null, %2 ], [ %14, %143 ], [ %14, %283 ]
  ret %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %313
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* @_ZN8spvtools3opt19CopyPropagateArrays27BuildMemoryObjectFromInsertEPNS0_11InstructionE(%"class.spvtools::opt::CopyPropagateArrays"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays", %"class.spvtools::opt::CopyPropagateArrays"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 11
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %36

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %10, align 8
  %12 = tail call i8* @_Znwm(i64 104) #12
  %13 = bitcast i8* %12 to %"class.spvtools::opt::analysis::DefUseManager"*
  %14 = getelementptr inbounds i8, i8* %12, i64 32
  %15 = bitcast i8* %14 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = getelementptr inbounds i8, i8* %12, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #11
  %18 = bitcast i8* %17 to i8**
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %12, i64 64
  %20 = getelementptr inbounds i8, i8* %12, i64 96
  %21 = bitcast i8* %20 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %21, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %13, %"class.spvtools::opt::Module"* %11) #11
  %22 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 6
  %23 = ptrtoint i8* %12 to i64
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %22, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %24, align 8
  %26 = bitcast %"class.std::__1::unique_ptr.62"* %22 to i64*
  store i64 %23, i64* %26, align 8
  %27 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %25, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %9
  %29 = bitcast %"class.std::__1::unique_ptr.62"* %22 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %29, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %25) #11
  br label %30

30:                                               ; preds = %28, %9
  %31 = load i32, i32* %5, align 8
  %32 = or i32 %31, 1
  store i32 %32, i32* %5, align 8
  %33 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %33, i64 0, i32 11
  %35 = load i32, i32* %34, align 8
  br label %36

36:                                               ; preds = %2, %30
  %37 = phi i32 [ %6, %2 ], [ %35, %30 ]
  %38 = phi %"class.spvtools::opt::IRContext"* [ %4, %2 ], [ %33, %30 ]
  %39 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 6, i32 0, i32 0, i32 0
  %40 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %39, align 8
  %41 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %38, i64 0, i32 11
  %42 = trunc i32 %37 to i16
  %43 = icmp slt i16 %42, 0
  br i1 %43, label %62, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %38, i64 0, i32 5
  %46 = tail call i8* @_Znwm(i64 240) #12
  %47 = bitcast i8* %46 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %47, %"class.std::__1::function"* dereferenceable(32) %45, %"class.spvtools::opt::IRContext"* %38) #11
  %48 = ptrtoint i8* %46 to i64
  %49 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %38, i64 0, i32 20
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %50, align 8
  %52 = bitcast %"class.std::__1::unique_ptr.480"* %49 to i64*
  store i64 %48, i64* %52, align 8
  %53 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %51, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %44
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %51) #11
  %55 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %51 to i8*
  tail call void @_ZdlPv(i8* %55) #12
  br label %56

56:                                               ; preds = %54, %44
  %57 = load i32, i32* %41, align 8
  %58 = or i32 %57, 32768
  store i32 %58, i32* %41, align 8
  %59 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %60 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %59, i64 0, i32 11
  %61 = load i32, i32* %60, align 8
  br label %62

62:                                               ; preds = %36, %56
  %63 = phi i32 [ %37, %36 ], [ %61, %56 ]
  %64 = phi %"class.spvtools::opt::IRContext"* [ %38, %36 ], [ %59, %56 ]
  %65 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %38, i64 0, i32 20, i32 0, i32 0, i32 0
  %66 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %65, align 8
  %67 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %64, i64 0, i32 11
  %68 = and i32 %63, 16384
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %84

70:                                               ; preds = %62
  %71 = tail call i8* @_Znwm(i64 136) #12
  %72 = bitcast i8* %71 to %"class.spvtools::opt::analysis::ConstantManager"*
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %72, %"class.spvtools::opt::IRContext"* %64) #11
  %73 = ptrtoint i8* %71 to i64
  %74 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %64, i64 0, i32 19
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %75, align 8
  %77 = bitcast %"class.std::__1::unique_ptr.400"* %74 to i64*
  store i64 %73, i64* %77, align 8
  %78 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %76, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %70
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %76) #11
  %80 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %76 to i8*
  tail call void @_ZdlPv(i8* %80) #12
  br label %81

81:                                               ; preds = %79, %70
  %82 = load i32, i32* %67, align 8
  %83 = or i32 %82, 16384
  store i32 %83, i32* %67, align 8
  br label %84

84:                                               ; preds = %62, %81
  %85 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %64, i64 0, i32 19, i32 0, i32 0, i32 0
  %86 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %85, align 8
  %87 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %88 = load i8, i8* %87, align 4, !range !2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %84
  %91 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #11
  br label %92

92:                                               ; preds = %84, %90
  %93 = phi i32 [ %91, %90 ], [ 0, %84 ]
  %94 = tail call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %66, i32 %93) #11
  %95 = bitcast %"class.spvtools::opt::analysis::Type"* %94 to %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)***
  %96 = load %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)*** %95, align 8
  %97 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)** %96, i64 29
  %98 = load %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)** %97, align 8
  %99 = tail call %"class.spvtools::opt::analysis::Struct"* %98(%"class.spvtools::opt::analysis::Type"* %94) #11
  %100 = icmp eq %"class.spvtools::opt::analysis::Struct"* %99, null
  br i1 %100, label %111, label %101

101:                                              ; preds = %92
  %102 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct", %"class.spvtools::opt::analysis::Struct"* %99, i64 0, i32 1
  %103 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct", %"class.spvtools::opt::analysis::Struct"* %99, i64 0, i32 1, i32 0, i32 1
  %104 = bitcast %"class.spvtools::opt::analysis::Type"*** %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.std::__1::vector.965"* %102 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = sub i64 %105, %107
  %109 = lshr exact i64 %108, 3
  %110 = trunc i64 %109 to i32
  br label %200

111:                                              ; preds = %92
  %112 = bitcast %"class.spvtools::opt::analysis::Type"* %94 to %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)***
  %113 = load %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)*** %112, align 8
  %114 = getelementptr inbounds %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)** %113, i64 25
  %115 = load %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)** %114, align 8
  %116 = tail call %"class.spvtools::opt::analysis::Array"* %115(%"class.spvtools::opt::analysis::Type"* %94) #11
  %117 = icmp eq %"class.spvtools::opt::analysis::Array"* %116, null
  br i1 %117, label %180, label %118

118:                                              ; preds = %111
  %119 = getelementptr inbounds %"class.spvtools::opt::analysis::Array", %"class.spvtools::opt::analysis::Array"* %116, i64 0, i32 2, i32 0
  %120 = load i32, i32* %119, align 8
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %86, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %123 = load i64, i64* %122, align 8
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %177, label %125

125:                                              ; preds = %118
  %126 = tail call i64 @llvm.ctpop.i64(i64 %123) #11, !range !13
  %127 = icmp ugt i64 %126, 1
  br i1 %127, label %131, label %128

128:                                              ; preds = %125
  %129 = add i64 %123, 4294967295
  %130 = and i64 %129, %121
  br label %135

131:                                              ; preds = %125
  %132 = icmp ugt i64 %123, %121
  br i1 %132, label %135, label %133

133:                                              ; preds = %131
  %134 = urem i64 %121, %123
  br label %135

135:                                              ; preds = %133, %131, %128
  %136 = phi i64 [ %130, %128 ], [ %134, %133 ], [ %121, %131 ]
  %137 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %86, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %137, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %138, i64 %136
  %140 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %139, align 8
  %141 = icmp eq %"struct.std::__1::__hash_node_base.408"* %140, null
  br i1 %141, label %177, label %142

142:                                              ; preds = %135
  %143 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %140, i64 0, i32 0
  %144 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %143, align 8
  %145 = icmp eq %"struct.std::__1::__hash_node_base.408"* %144, null
  br i1 %145, label %177, label %146

146:                                              ; preds = %142
  %147 = add i64 %123, -1
  br label %148

148:                                              ; preds = %169, %146
  %149 = phi %"struct.std::__1::__hash_node_base.408"* [ %144, %146 ], [ %171, %169 ]
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %149, i64 1
  %151 = bitcast %"struct.std::__1::__hash_node_base.408"* %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = icmp eq i64 %152, %121
  br i1 %153, label %164, label %154

154:                                              ; preds = %148
  br i1 %127, label %157, label %155

155:                                              ; preds = %154
  %156 = and i64 %152, %147
  br label %161

157:                                              ; preds = %154
  %158 = icmp ult i64 %152, %123
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = urem i64 %152, %123
  br label %161

161:                                              ; preds = %159, %157, %155
  %162 = phi i64 [ %156, %155 ], [ %160, %159 ], [ %152, %157 ]
  %163 = icmp eq i64 %162, %136
  br i1 %163, label %169, label %177

164:                                              ; preds = %148
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %149, i64 2
  %166 = bitcast %"struct.std::__1::__hash_node_base.408"* %165 to i32*
  %167 = load i32, i32* %166, align 4
  %168 = icmp eq i32 %167, %120
  br i1 %168, label %173, label %169

169:                                              ; preds = %164, %161
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %149, i64 0, i32 0
  %171 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %170, align 8
  %172 = icmp eq %"struct.std::__1::__hash_node_base.408"* %171, null
  br i1 %172, label %177, label %148

173:                                              ; preds = %164
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %149, i64 3
  %175 = bitcast %"struct.std::__1::__hash_node_base.408"* %174 to %"class.spvtools::opt::analysis::Constant"**
  %176 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %175, align 8
  br label %177

177:                                              ; preds = %161, %169, %118, %135, %142, %173
  %178 = phi %"class.spvtools::opt::analysis::Constant"* [ %176, %173 ], [ null, %135 ], [ null, %118 ], [ null, %142 ], [ null, %169 ], [ null, %161 ]
  %179 = tail call i32 @_ZNK8spvtools3opt8analysis8Constant6GetU32Ev(%"class.spvtools::opt::analysis::Constant"* %178) #11
  br label %200

180:                                              ; preds = %111
  %181 = bitcast %"class.spvtools::opt::analysis::Type"* %94 to %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)***
  %182 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*** %181, align 8
  %183 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %182, i64 15
  %184 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %183, align 8
  %185 = tail call %"class.spvtools::opt::analysis::Vector"* %184(%"class.spvtools::opt::analysis::Type"* %94) #11
  %186 = icmp eq %"class.spvtools::opt::analysis::Vector"* %185, null
  br i1 %186, label %190, label %187

187:                                              ; preds = %180
  %188 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector", %"class.spvtools::opt::analysis::Vector"* %185, i64 0, i32 3
  %189 = load i32, i32* %188, align 8
  br label %200

190:                                              ; preds = %180
  %191 = bitcast %"class.spvtools::opt::analysis::Type"* %94 to %"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)***
  %192 = load %"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)*** %191, align 8
  %193 = getelementptr inbounds %"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)** %192, i64 17
  %194 = load %"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)** %193, align 8
  %195 = tail call %"class.spvtools::opt::analysis::Matrix"* %194(%"class.spvtools::opt::analysis::Type"* %94) #11
  %196 = icmp eq %"class.spvtools::opt::analysis::Matrix"* %195, null
  br i1 %196, label %530, label %197

197:                                              ; preds = %190
  %198 = getelementptr inbounds %"class.spvtools::opt::analysis::Matrix", %"class.spvtools::opt::analysis::Matrix"* %195, i64 0, i32 3
  %199 = load i32, i32* %198, align 8
  br label %200

200:                                              ; preds = %177, %197, %187, %101
  %201 = phi i32 [ %110, %101 ], [ %179, %177 ], [ %189, %187 ], [ %199, %197 ]
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %530, label %203

203:                                              ; preds = %200
  %204 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %205 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %206 = bitcast %"struct.spvtools::opt::Operand"** %205 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = bitcast %"class.std::__1::vector"* %204 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = sub i64 %207, %209
  %211 = sdiv exact i64 %210, 48
  %212 = load i8, i8* %87, align 4, !range !2
  %213 = icmp eq i8 %212, 0
  %214 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %215 = load i8, i8* %214, align 1, !range !2
  %216 = icmp eq i8 %215, 0
  %217 = select i1 %216, i32 1, i32 2
  %218 = xor i1 %216, true
  %219 = zext i1 %218 to i32
  %220 = select i1 %213, i32 %219, i32 %217
  %221 = trunc i64 %211 to i32
  %222 = sub i32 %221, %220
  %223 = icmp eq i32 %222, 3
  br i1 %223, label %224, label %530

224:                                              ; preds = %203
  %225 = add nuw nsw i32 %220, 2
  %226 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %225) #11
  %227 = add i32 %201, -1
  %228 = icmp eq i32 %226, %227
  br i1 %228, label %229, label %530

229:                                              ; preds = %224
  %230 = load i8, i8* %87, align 4, !range !2
  %231 = icmp eq i8 %230, 0
  %232 = load i8, i8* %214, align 1, !range !2
  %233 = icmp eq i8 %232, 0
  %234 = select i1 %233, i32 1, i32 2
  %235 = xor i1 %233, true
  %236 = zext i1 %235 to i32
  %237 = select i1 %231, i32 %236, i32 %234
  %238 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %237) #11
  %239 = tail call %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* @_ZN8spvtools3opt19CopyPropagateArrays20GetSourceObjectIfAnyEj(%"class.spvtools::opt::CopyPropagateArrays"* %0, i32 %238)
  %240 = icmp eq %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %239, null
  br i1 %240, label %530, label %241

241:                                              ; preds = %229
  %242 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %239, i64 0, i32 1, i32 0, i32 0
  %243 = load i32*, i32** %242, align 8
  %244 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %239, i64 0, i32 1, i32 0, i32 1
  %245 = load i32*, i32** %244, align 8
  %246 = icmp eq i32* %243, %245
  br i1 %246, label %519, label %247

247:                                              ; preds = %241
  %248 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %239, i64 0, i32 1
  %249 = getelementptr inbounds i32, i32* %245, i64 -1
  %250 = load i32, i32* %249, align 4
  %251 = zext i32 %250 to i64
  %252 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %86, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %253 = load i64, i64* %252, align 8
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %519, label %255

255:                                              ; preds = %247
  %256 = tail call i64 @llvm.ctpop.i64(i64 %253) #11, !range !13
  %257 = icmp ugt i64 %256, 1
  br i1 %257, label %261, label %258

258:                                              ; preds = %255
  %259 = add i64 %253, 4294967295
  %260 = and i64 %259, %251
  br label %265

261:                                              ; preds = %255
  %262 = icmp ugt i64 %253, %251
  br i1 %262, label %265, label %263

263:                                              ; preds = %261
  %264 = urem i64 %251, %253
  br label %265

265:                                              ; preds = %263, %261, %258
  %266 = phi i64 [ %260, %258 ], [ %264, %263 ], [ %251, %261 ]
  %267 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %86, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %267, align 8
  %269 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %268, i64 %266
  %270 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %269, align 8
  %271 = icmp eq %"struct.std::__1::__hash_node_base.408"* %270, null
  br i1 %271, label %519, label %272

272:                                              ; preds = %265
  %273 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %270, i64 0, i32 0
  %274 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %273, align 8
  %275 = icmp eq %"struct.std::__1::__hash_node_base.408"* %274, null
  br i1 %275, label %519, label %276

276:                                              ; preds = %272
  %277 = add i64 %253, -1
  br label %278

278:                                              ; preds = %299, %276
  %279 = phi %"struct.std::__1::__hash_node_base.408"* [ %274, %276 ], [ %301, %299 ]
  %280 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %279, i64 1
  %281 = bitcast %"struct.std::__1::__hash_node_base.408"* %280 to i64*
  %282 = load i64, i64* %281, align 8
  %283 = icmp eq i64 %282, %251
  br i1 %283, label %294, label %284

284:                                              ; preds = %278
  br i1 %257, label %287, label %285

285:                                              ; preds = %284
  %286 = and i64 %282, %277
  br label %291

287:                                              ; preds = %284
  %288 = icmp ult i64 %282, %253
  br i1 %288, label %291, label %289

289:                                              ; preds = %287
  %290 = urem i64 %282, %253
  br label %291

291:                                              ; preds = %289, %287, %285
  %292 = phi i64 [ %286, %285 ], [ %290, %289 ], [ %282, %287 ]
  %293 = icmp eq i64 %292, %266
  br i1 %293, label %299, label %518

294:                                              ; preds = %278
  %295 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %279, i64 2
  %296 = bitcast %"struct.std::__1::__hash_node_base.408"* %295 to i32*
  %297 = load i32, i32* %296, align 4
  %298 = icmp eq i32 %297, %250
  br i1 %298, label %303, label %299

299:                                              ; preds = %294, %291
  %300 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %279, i64 0, i32 0
  %301 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %300, align 8
  %302 = icmp eq %"struct.std::__1::__hash_node_base.408"* %301, null
  br i1 %302, label %518, label %278

303:                                              ; preds = %294
  %304 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %279, i64 3
  %305 = bitcast %"struct.std::__1::__hash_node_base.408"* %304 to %"class.spvtools::opt::analysis::Constant"**
  %306 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %305, align 8
  %307 = icmp eq %"class.spvtools::opt::analysis::Constant"* %306, null
  br i1 %307, label %518, label %308

308:                                              ; preds = %303
  %309 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant", %"class.spvtools::opt::analysis::Constant"* %306, i64 0, i32 1
  %310 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %309, align 8
  %311 = bitcast %"class.spvtools::opt::analysis::Type"* %310 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %312 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %311, align 8
  %313 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %312, i64 11
  %314 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %313, align 8
  %315 = tail call %"class.spvtools::opt::analysis::Integer"* %314(%"class.spvtools::opt::analysis::Type"* %310) #11
  %316 = icmp eq %"class.spvtools::opt::analysis::Integer"* %315, null
  br i1 %316, label %518, label %317

317:                                              ; preds = %308
  %318 = tail call i32 @_ZNK8spvtools3opt8analysis8Constant6GetU32Ev(%"class.spvtools::opt::analysis::Constant"* nonnull %306) #11
  %319 = icmp eq i32 %318, %226
  br i1 %319, label %320, label %518

320:                                              ; preds = %317
  %321 = load i32*, i32** %244, align 8
  %322 = getelementptr inbounds i32, i32* %321, i64 -1
  store i32* %322, i32** %244, align 8
  %323 = load i8, i8* %87, align 4, !range !2
  %324 = icmp eq i8 %323, 0
  %325 = load i8, i8* %214, align 1, !range !2
  %326 = icmp eq i8 %325, 0
  %327 = select i1 %326, i32 1, i32 2
  %328 = xor i1 %326, true
  %329 = zext i1 %328 to i32
  %330 = select i1 %324, i32 %329, i32 %327
  %331 = add nuw nsw i32 %330, 1
  %332 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %331) #11
  %333 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %40, i32 %332) #11
  %334 = bitcast i32** %244 to i64*
  %335 = bitcast %"class.std::__1::vector.3"* %248 to i64*
  %336 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %239, i64 0, i32 0
  br label %337

337:                                              ; preds = %515, %320
  %338 = phi %"class.spvtools::opt::Instruction"* [ %333, %320 ], [ %508, %515 ]
  %339 = phi i32 [ %226, %320 ], [ %369, %515 ]
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %530, label %341

341:                                              ; preds = %337
  %342 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %338, i64 0, i32 2
  %343 = load i32, i32* %342, align 8
  %344 = icmp eq i32 %343, 82
  br i1 %344, label %345, label %518

345:                                              ; preds = %341
  %346 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %338, i64 0, i32 6
  %347 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %338, i64 0, i32 6, i32 0, i32 1
  %348 = bitcast %"struct.spvtools::opt::Operand"** %347 to i64*
  %349 = load i64, i64* %348, align 8
  %350 = bitcast %"class.std::__1::vector"* %346 to i64*
  %351 = load i64, i64* %350, align 8
  %352 = sub i64 %349, %351
  %353 = sdiv exact i64 %352, 48
  %354 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %338, i64 0, i32 3
  %355 = load i8, i8* %354, align 4, !range !2
  %356 = icmp eq i8 %355, 0
  %357 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %338, i64 0, i32 4
  %358 = load i8, i8* %357, align 1, !range !2
  %359 = icmp eq i8 %358, 0
  %360 = select i1 %359, i32 1, i32 2
  %361 = xor i1 %359, true
  %362 = zext i1 %361 to i32
  %363 = select i1 %356, i32 %362, i32 %360
  %364 = trunc i64 %353 to i32
  %365 = sub i32 %364, %363
  %366 = icmp eq i32 %365, 3
  br i1 %366, label %367, label %518

367:                                              ; preds = %345
  %368 = add nuw nsw i32 %363, 2
  %369 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %338, i32 %368) #11
  %370 = add i32 %339, -1
  %371 = icmp eq i32 %369, %370
  br i1 %371, label %372, label %518

372:                                              ; preds = %367
  %373 = load i8, i8* %354, align 4, !range !2
  %374 = icmp eq i8 %373, 0
  %375 = load i8, i8* %357, align 1, !range !2
  %376 = icmp eq i8 %375, 0
  %377 = select i1 %376, i32 1, i32 2
  %378 = xor i1 %376, true
  %379 = zext i1 %378 to i32
  %380 = select i1 %374, i32 %379, i32 %377
  %381 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %338, i32 %380) #11
  %382 = tail call %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* @_ZN8spvtools3opt19CopyPropagateArrays20GetSourceObjectIfAnyEj(%"class.spvtools::opt::CopyPropagateArrays"* %0, i32 %381)
  %383 = icmp eq %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %382, null
  br i1 %383, label %518, label %384

384:                                              ; preds = %372
  %385 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %382, i64 0, i32 1, i32 0, i32 0
  %386 = load i32*, i32** %385, align 8
  %387 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %382, i64 0, i32 1, i32 0, i32 1
  %388 = load i32*, i32** %387, align 8
  %389 = icmp eq i32* %386, %388
  br i1 %389, label %506, label %390

390:                                              ; preds = %384
  %391 = ptrtoint i32* %386 to i64
  %392 = ptrtoint i32* %388 to i64
  %393 = load i64, i64* %334, align 8
  %394 = load i64, i64* %335, align 8
  %395 = sub i64 %393, %394
  %396 = ashr exact i64 %395, 2
  %397 = add nsw i64 %396, 1
  %398 = sub i64 %392, %391
  %399 = ashr exact i64 %398, 2
  %400 = icmp eq i64 %397, %399
  br i1 %400, label %401, label %502

401:                                              ; preds = %390
  %402 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %336, align 8
  %403 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %382, i64 0, i32 0
  %404 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %403, align 8
  %405 = icmp eq %"class.spvtools::opt::Instruction"* %402, %404
  br i1 %405, label %406, label %502

406:                                              ; preds = %401
  %407 = inttoptr i64 %394 to i32*
  switch i64 %395, label %411 [
    i64 -4, label %502
    i64 0, label %420
  ]

408:                                              ; preds = %411
  %409 = zext i32 %419 to i64
  %410 = icmp ugt i64 %396, %409
  br i1 %410, label %411, label %420

411:                                              ; preds = %406, %408
  %412 = phi i64 [ %409, %408 ], [ 0, %406 ]
  %413 = phi i32 [ %419, %408 ], [ 0, %406 ]
  %414 = getelementptr inbounds i32, i32* %407, i64 %412
  %415 = load i32, i32* %414, align 4
  %416 = getelementptr inbounds i32, i32* %386, i64 %412
  %417 = load i32, i32* %416, align 4
  %418 = icmp eq i32 %415, %417
  %419 = add i32 %413, 1
  br i1 %418, label %408, label %502

420:                                              ; preds = %408, %406
  %421 = getelementptr inbounds i32, i32* %388, i64 -1
  %422 = load i32, i32* %421, align 4
  %423 = zext i32 %422 to i64
  %424 = load i64, i64* %252, align 8
  %425 = icmp eq i64 %424, 0
  br i1 %425, label %502, label %426

426:                                              ; preds = %420
  %427 = tail call i64 @llvm.ctpop.i64(i64 %424) #11, !range !13
  %428 = icmp ugt i64 %427, 1
  br i1 %428, label %432, label %429

429:                                              ; preds = %426
  %430 = add i64 %424, 4294967295
  %431 = and i64 %430, %423
  br label %436

432:                                              ; preds = %426
  %433 = icmp ugt i64 %424, %423
  br i1 %433, label %436, label %434

434:                                              ; preds = %432
  %435 = urem i64 %423, %424
  br label %436

436:                                              ; preds = %434, %432, %429
  %437 = phi i64 [ %431, %429 ], [ %435, %434 ], [ %423, %432 ]
  %438 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %267, align 8
  %439 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %438, i64 %437
  %440 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %439, align 8
  %441 = icmp eq %"struct.std::__1::__hash_node_base.408"* %440, null
  br i1 %441, label %502, label %442

442:                                              ; preds = %436
  %443 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %440, i64 0, i32 0
  %444 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %443, align 8
  %445 = icmp eq %"struct.std::__1::__hash_node_base.408"* %444, null
  br i1 %445, label %502, label %446

446:                                              ; preds = %442
  %447 = add i64 %424, -1
  br label %448

448:                                              ; preds = %469, %446
  %449 = phi %"struct.std::__1::__hash_node_base.408"* [ %444, %446 ], [ %471, %469 ]
  %450 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %449, i64 1
  %451 = bitcast %"struct.std::__1::__hash_node_base.408"* %450 to i64*
  %452 = load i64, i64* %451, align 8
  %453 = icmp eq i64 %452, %423
  br i1 %453, label %464, label %454

454:                                              ; preds = %448
  br i1 %428, label %457, label %455

455:                                              ; preds = %454
  %456 = and i64 %452, %447
  br label %461

457:                                              ; preds = %454
  %458 = icmp ult i64 %452, %424
  br i1 %458, label %461, label %459

459:                                              ; preds = %457
  %460 = urem i64 %452, %424
  br label %461

461:                                              ; preds = %459, %457, %455
  %462 = phi i64 [ %456, %455 ], [ %460, %459 ], [ %452, %457 ]
  %463 = icmp eq i64 %462, %437
  br i1 %463, label %469, label %502

464:                                              ; preds = %448
  %465 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %449, i64 2
  %466 = bitcast %"struct.std::__1::__hash_node_base.408"* %465 to i32*
  %467 = load i32, i32* %466, align 4
  %468 = icmp eq i32 %467, %422
  br i1 %468, label %473, label %469

469:                                              ; preds = %464, %461
  %470 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %449, i64 0, i32 0
  %471 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %470, align 8
  %472 = icmp eq %"struct.std::__1::__hash_node_base.408"* %471, null
  br i1 %472, label %502, label %448

473:                                              ; preds = %464
  %474 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %449, i64 3
  %475 = bitcast %"struct.std::__1::__hash_node_base.408"* %474 to %"class.spvtools::opt::analysis::Constant"**
  %476 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %475, align 8
  %477 = icmp eq %"class.spvtools::opt::analysis::Constant"* %476, null
  br i1 %477, label %502, label %478

478:                                              ; preds = %473
  %479 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant", %"class.spvtools::opt::analysis::Constant"* %476, i64 0, i32 1
  %480 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %479, align 8
  %481 = bitcast %"class.spvtools::opt::analysis::Type"* %480 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %482 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %481, align 8
  %483 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %482, i64 11
  %484 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %483, align 8
  %485 = tail call %"class.spvtools::opt::analysis::Integer"* %484(%"class.spvtools::opt::analysis::Type"* %480) #11
  %486 = icmp eq %"class.spvtools::opt::analysis::Integer"* %485, null
  br i1 %486, label %502, label %487

487:                                              ; preds = %478
  %488 = tail call i32 @_ZNK8spvtools3opt8analysis8Constant6GetU32Ev(%"class.spvtools::opt::analysis::Constant"* nonnull %476) #11
  %489 = icmp eq i32 %488, %369
  br i1 %489, label %490, label %502

490:                                              ; preds = %487
  %491 = load i8, i8* %354, align 4, !range !2
  %492 = icmp eq i8 %491, 0
  %493 = load i8, i8* %357, align 1, !range !2
  %494 = icmp eq i8 %493, 0
  %495 = select i1 %494, i32 1, i32 2
  %496 = xor i1 %494, true
  %497 = zext i1 %496 to i32
  %498 = select i1 %492, i32 %497, i32 %495
  %499 = add nuw nsw i32 %498, 1
  %500 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %338, i32 %499) #11
  %501 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %40, i32 %500) #11
  br label %502

502:                                              ; preds = %411, %469, %461, %406, %401, %390, %442, %420, %436, %487, %473, %478, %490
  %503 = phi %"class.spvtools::opt::Instruction"* [ %338, %442 ], [ %338, %420 ], [ %338, %436 ], [ %338, %487 ], [ %338, %473 ], [ %338, %478 ], [ %501, %490 ], [ %338, %390 ], [ %338, %406 ], [ %338, %401 ], [ %338, %461 ], [ %338, %469 ], [ %338, %411 ]
  %504 = phi i32 [ 1, %442 ], [ 1, %420 ], [ 1, %436 ], [ 1, %487 ], [ 1, %473 ], [ 1, %478 ], [ 0, %490 ], [ 1, %390 ], [ 1, %406 ], [ 1, %401 ], [ 1, %461 ], [ 1, %469 ], [ 1, %411 ]
  %505 = load i32*, i32** %385, align 8
  br label %506

506:                                              ; preds = %502, %384
  %507 = phi i32* [ %505, %502 ], [ %386, %384 ]
  %508 = phi %"class.spvtools::opt::Instruction"* [ %503, %502 ], [ %338, %384 ]
  %509 = phi i32 [ %504, %502 ], [ 1, %384 ]
  %510 = icmp eq i32* %507, null
  br i1 %510, label %515, label %511

511:                                              ; preds = %506
  %512 = ptrtoint i32* %507 to i64
  %513 = bitcast i32** %387 to i64*
  store i64 %512, i64* %513, align 8
  %514 = bitcast i32* %507 to i8*
  tail call void @_ZdlPv(i8* %514) #12
  br label %515

515:                                              ; preds = %511, %506
  %516 = bitcast %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %382 to i8*
  tail call void @_ZdlPv(i8* %516) #12
  %517 = icmp eq i32 %509, 0
  br i1 %517, label %337, label %518

518:                                              ; preds = %299, %291, %372, %367, %345, %341, %515, %317, %303, %308
  br i1 %240, label %530, label %519

519:                                              ; preds = %265, %247, %272, %241, %518
  %520 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %239, i64 0, i32 1, i32 0, i32 0
  %521 = load i32*, i32** %520, align 8
  %522 = icmp eq i32* %521, null
  br i1 %522, label %528, label %523

523:                                              ; preds = %519
  %524 = ptrtoint i32* %521 to i64
  %525 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %239, i64 0, i32 1, i32 0, i32 1
  %526 = bitcast i32** %525 to i64*
  store i64 %524, i64* %526, align 8
  %527 = bitcast i32* %521 to i8*
  tail call void @_ZdlPv(i8* %527) #12
  br label %528

528:                                              ; preds = %523, %519
  %529 = bitcast %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %239 to i8*
  tail call void @_ZdlPv(i8* %529) #12
  br label %530

530:                                              ; preds = %337, %229, %190, %528, %518, %224, %203, %200
  %531 = phi %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* [ null, %200 ], [ null, %203 ], [ null, %224 ], [ null, %518 ], [ null, %528 ], [ null, %190 ], [ null, %229 ], [ %239, %337 ]
  ret %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %531
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager17GetRegisteredTypeEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::Type"*) local_unnamed_addr #2

declare %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::vector.3"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::Constant"*, i32, %"class.spvtools::opt::InstructionList::iterator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt19CopyPropagateArrays12MemoryObject9GetMemberERKNSt3__16vectorIjNS3_9allocatorIjEEEE(%"class.spvtools::opt::CopyPropagateArrays::MemoryObject"*, %"class.std::__1::vector.3"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1, i64 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1, i64 0, i32 0, i32 1
  %9 = load i32*, i32** %8, align 8
  %10 = tail call i32* @_ZNSt3__16vectorIjNS_9allocatorIjEEE6insertINS_11__wrap_iterIPKjEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPjEEE4typeES8_SA_SA_(%"class.std::__1::vector.3"* %3, i32* %5, i32* %7, i32* %9)
  ret void
}

declare i32 @_ZNK8spvtools3opt8analysis8Constant6GetU32Ev(%"class.spvtools::opt::analysis::Constant"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt19CopyPropagateArrays12MemoryObject18GetNumberOfMembersEv(%"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.3", align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %0, i64 0, i32 0
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 1
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 11
  %8 = load i32, i32* %7, align 8
  %9 = trunc i32 %8 to i16
  %10 = icmp slt i16 %9, 0
  br i1 %10, label %27, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 5
  %13 = tail call i8* @_Znwm(i64 240) #12
  %14 = bitcast i8* %13 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %14, %"class.std::__1::function"* dereferenceable(32) %12, %"class.spvtools::opt::IRContext"* %6) #11
  %15 = ptrtoint i8* %13 to i64
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 20
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %17, align 8
  %19 = bitcast %"class.std::__1::unique_ptr.480"* %16 to i64*
  store i64 %15, i64* %19, align 8
  %20 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %11
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %18) #11
  %22 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %18 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %21, %11
  %24 = load i32, i32* %7, align 8
  %25 = or i32 %24, 32768
  store i32 %25, i32* %7, align 8
  %26 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  br label %27

27:                                               ; preds = %1, %23
  %28 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %26, %23 ]
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 20, i32 0, i32 0, i32 0
  %30 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %29, align 8
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 3
  %32 = load i8, i8* %31, align 4, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %27
  %35 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %28, i32 0) #11
  br label %36

36:                                               ; preds = %27, %34
  %37 = phi i32 [ %35, %34 ], [ 0, %27 ]
  %38 = tail call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %30, i32 %37) #11
  %39 = bitcast %"class.spvtools::opt::analysis::Type"* %38 to %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)***
  %40 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*** %39, align 8
  %41 = getelementptr inbounds %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %40, i64 33
  %42 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %41, align 8
  %43 = tail call %"class.spvtools::opt::analysis::Pointer"* %42(%"class.spvtools::opt::analysis::Type"* %38) #11
  %44 = getelementptr inbounds %"class.spvtools::opt::analysis::Pointer", %"class.spvtools::opt::analysis::Pointer"* %43, i64 0, i32 2
  %45 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %44, align 8
  %46 = bitcast %"class.std::__1::vector.3"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #11
  %47 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %2, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %2, i64 0, i32 0, i32 1
  %49 = bitcast %"class.std::__1::vector.3"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false)
  call void @_ZNK8spvtools3opt19CopyPropagateArrays12MemoryObject12GetAccessIdsEv(%"class.std::__1::vector.3"* nonnull sret %2, %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %0)
  %50 = call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager13GetMemberTypeEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::TypeManager"* %30, %"class.spvtools::opt::analysis::Type"* %45, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %2) #11
  %51 = bitcast %"class.spvtools::opt::analysis::Type"* %50 to %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)***
  %52 = load %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)*** %51, align 8
  %53 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)** %52, i64 29
  %54 = load %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)** %53, align 8
  %55 = call %"class.spvtools::opt::analysis::Struct"* %54(%"class.spvtools::opt::analysis::Type"* %50) #11
  %56 = icmp eq %"class.spvtools::opt::analysis::Struct"* %55, null
  br i1 %56, label %67, label %57

57:                                               ; preds = %36
  %58 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct", %"class.spvtools::opt::analysis::Struct"* %55, i64 0, i32 1
  %59 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct", %"class.spvtools::opt::analysis::Struct"* %55, i64 0, i32 1, i32 0, i32 1
  %60 = bitcast %"class.spvtools::opt::analysis::Type"*** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.std::__1::vector.965"* %58 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = sub i64 %61, %63
  %65 = lshr exact i64 %64, 3
  %66 = trunc i64 %65 to i32
  br label %176

67:                                               ; preds = %36
  %68 = bitcast %"class.spvtools::opt::analysis::Type"* %50 to %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)***
  %69 = load %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)*** %68, align 8
  %70 = getelementptr inbounds %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)** %69, i64 25
  %71 = load %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)** %70, align 8
  %72 = call %"class.spvtools::opt::analysis::Array"* %71(%"class.spvtools::opt::analysis::Type"* %50) #11
  %73 = icmp eq %"class.spvtools::opt::analysis::Array"* %72, null
  br i1 %73, label %156, label %74

74:                                               ; preds = %67
  %75 = load i32, i32* %7, align 8
  %76 = and i32 %75, 16384
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %92

78:                                               ; preds = %74
  %79 = call i8* @_Znwm(i64 136) #12
  %80 = bitcast i8* %79 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %80, %"class.spvtools::opt::IRContext"* %6) #11
  %81 = ptrtoint i8* %79 to i64
  %82 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 19
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %82, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %83, align 8
  %85 = bitcast %"class.std::__1::unique_ptr.400"* %82 to i64*
  store i64 %81, i64* %85, align 8
  %86 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %84, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %78
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %84) #11
  %88 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %84 to i8*
  call void @_ZdlPv(i8* %88) #12
  br label %89

89:                                               ; preds = %87, %78
  %90 = load i32, i32* %7, align 8
  %91 = or i32 %90, 16384
  store i32 %91, i32* %7, align 8
  br label %92

92:                                               ; preds = %74, %89
  %93 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 19, i32 0, i32 0, i32 0
  %94 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %93, align 8
  %95 = getelementptr inbounds %"class.spvtools::opt::analysis::Array", %"class.spvtools::opt::analysis::Array"* %72, i64 0, i32 2, i32 0
  %96 = load i32, i32* %95, align 8
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %94, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %153, label %101

101:                                              ; preds = %92
  %102 = call i64 @llvm.ctpop.i64(i64 %99) #11, !range !13
  %103 = icmp ugt i64 %102, 1
  br i1 %103, label %107, label %104

104:                                              ; preds = %101
  %105 = add i64 %99, 4294967295
  %106 = and i64 %105, %97
  br label %111

107:                                              ; preds = %101
  %108 = icmp ugt i64 %99, %97
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = urem i64 %97, %99
  br label %111

111:                                              ; preds = %109, %107, %104
  %112 = phi i64 [ %106, %104 ], [ %110, %109 ], [ %97, %107 ]
  %113 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %94, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %113, align 8
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %114, i64 %112
  %116 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %115, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base.408"* %116, null
  br i1 %117, label %153, label %118

118:                                              ; preds = %111
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %116, i64 0, i32 0
  %120 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %119, align 8
  %121 = icmp eq %"struct.std::__1::__hash_node_base.408"* %120, null
  br i1 %121, label %153, label %122

122:                                              ; preds = %118
  %123 = add i64 %99, -1
  br label %124

124:                                              ; preds = %145, %122
  %125 = phi %"struct.std::__1::__hash_node_base.408"* [ %120, %122 ], [ %147, %145 ]
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %125, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.408"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = icmp eq i64 %128, %97
  br i1 %129, label %140, label %130

130:                                              ; preds = %124
  br i1 %103, label %133, label %131

131:                                              ; preds = %130
  %132 = and i64 %128, %123
  br label %137

133:                                              ; preds = %130
  %134 = icmp ult i64 %128, %99
  br i1 %134, label %137, label %135

135:                                              ; preds = %133
  %136 = urem i64 %128, %99
  br label %137

137:                                              ; preds = %135, %133, %131
  %138 = phi i64 [ %132, %131 ], [ %136, %135 ], [ %128, %133 ]
  %139 = icmp eq i64 %138, %112
  br i1 %139, label %145, label %153

140:                                              ; preds = %124
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %125, i64 2
  %142 = bitcast %"struct.std::__1::__hash_node_base.408"* %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %143, %96
  br i1 %144, label %149, label %145

145:                                              ; preds = %140, %137
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %125, i64 0, i32 0
  %147 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %146, align 8
  %148 = icmp eq %"struct.std::__1::__hash_node_base.408"* %147, null
  br i1 %148, label %153, label %124

149:                                              ; preds = %140
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %125, i64 3
  %151 = bitcast %"struct.std::__1::__hash_node_base.408"* %150 to %"class.spvtools::opt::analysis::Constant"**
  %152 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %151, align 8
  br label %153

153:                                              ; preds = %137, %145, %92, %111, %118, %149
  %154 = phi %"class.spvtools::opt::analysis::Constant"* [ %152, %149 ], [ null, %111 ], [ null, %92 ], [ null, %118 ], [ null, %145 ], [ null, %137 ]
  %155 = call i32 @_ZNK8spvtools3opt8analysis8Constant6GetU32Ev(%"class.spvtools::opt::analysis::Constant"* %154) #11
  br label %176

156:                                              ; preds = %67
  %157 = bitcast %"class.spvtools::opt::analysis::Type"* %50 to %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)***
  %158 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*** %157, align 8
  %159 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %158, i64 15
  %160 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %159, align 8
  %161 = call %"class.spvtools::opt::analysis::Vector"* %160(%"class.spvtools::opt::analysis::Type"* %50) #11
  %162 = icmp eq %"class.spvtools::opt::analysis::Vector"* %161, null
  br i1 %162, label %166, label %163

163:                                              ; preds = %156
  %164 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector", %"class.spvtools::opt::analysis::Vector"* %161, i64 0, i32 3
  %165 = load i32, i32* %164, align 8
  br label %176

166:                                              ; preds = %156
  %167 = bitcast %"class.spvtools::opt::analysis::Type"* %50 to %"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)***
  %168 = load %"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)*** %167, align 8
  %169 = getelementptr inbounds %"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)** %168, i64 17
  %170 = load %"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)** %169, align 8
  %171 = call %"class.spvtools::opt::analysis::Matrix"* %170(%"class.spvtools::opt::analysis::Type"* %50) #11
  %172 = icmp eq %"class.spvtools::opt::analysis::Matrix"* %171, null
  br i1 %172, label %176, label %173

173:                                              ; preds = %166
  %174 = getelementptr inbounds %"class.spvtools::opt::analysis::Matrix", %"class.spvtools::opt::analysis::Matrix"* %171, i64 0, i32 3
  %175 = load i32, i32* %174, align 8
  br label %176

176:                                              ; preds = %153, %173, %166, %163, %57
  %177 = phi i32 [ %66, %57 ], [ %155, %153 ], [ %165, %163 ], [ %175, %173 ], [ 0, %166 ]
  %178 = load i32*, i32** %47, align 8
  %179 = icmp eq i32* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %176
  %181 = ptrtoint i32* %178 to i64
  %182 = bitcast i32** %48 to i64*
  store i64 %181, i64* %182, align 8
  %183 = bitcast i32* %178 to i8*
  call void @_ZdlPv(i8* %183) #12
  br label %184

184:                                              ; preds = %176, %180
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #11
  ret i32 %177
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt19CopyPropagateArrays12MemoryObject8ContainsEPS2_(%"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* nocapture readonly, %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %0, i64 0, i32 0
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %1, i64 0, i32 0
  %6 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %5, align 8
  %7 = icmp eq %"class.spvtools::opt::Instruction"* %4, %6
  br i1 %7, label %8, label %42

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = bitcast i32** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.3"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 2
  %17 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %1, i64 0, i32 1
  %18 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %1, i64 0, i32 1, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector.3"* %17 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = ashr exact i64 %23, 2
  %25 = icmp ugt i64 %16, %24
  %26 = inttoptr i64 %14 to i32*
  %27 = inttoptr i64 %22 to i32*
  br i1 %25, label %42, label %28

28:                                               ; preds = %8
  %29 = icmp eq i64 %15, 0
  br i1 %29, label %42, label %33

30:                                               ; preds = %33
  %31 = zext i32 %41 to i64
  %32 = icmp ugt i64 %16, %31
  br i1 %32, label %33, label %42

33:                                               ; preds = %28, %30
  %34 = phi i64 [ %31, %30 ], [ 0, %28 ]
  %35 = phi i32 [ %41, %30 ], [ 0, %28 ]
  %36 = getelementptr inbounds i32, i32* %26, i64 %34
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds i32, i32* %27, i64 %34
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %37, %39
  %41 = add i32 %35, 1
  br i1 %40, label %30, label %42

42:                                               ; preds = %33, %30, %28, %2, %8
  %43 = phi i1 [ false, %8 ], [ false, %2 ], [ true, %28 ], [ false, %33 ], [ true, %30 ]
  ret i1 %43
}

declare %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK8spvtools3opt8analysis13DefUseManager12WhileEachUseEPKNS0_11InstructionERKNSt3__18functionIFbPS3_jEEE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::function.981"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZNK8spvtools3opt8analysis13DefUseManager10ForEachUseEPKNS0_11InstructionERKNSt3__18functionIFvPS3_jEEE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::function.995"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt9IRContext10ForgetUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

declare void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis16DebugInfoManager20DerefDebugExpressionEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8spvtools3opt19CopyPropagateArrays15GetMemberTypeIdEjRKNSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.spvtools::opt::CopyPropagateArrays"* nocapture readonly, i32, %"class.std::__1::vector.3"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %2, i64 0, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %2, i64 0, i32 0, i32 1
  %7 = load i32*, i32** %6, align 8
  %8 = icmp eq i32* %5, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays", %"class.spvtools::opt::CopyPropagateArrays"* %0, i64 0, i32 0, i32 0, i32 2
  br label %13

11:                                               ; preds = %78, %3
  %12 = phi i32 [ %1, %3 ], [ %79, %78 ]
  ret i32 %12

13:                                               ; preds = %9, %78
  %14 = phi i32 [ %1, %9 ], [ %79, %78 ]
  %15 = phi i32* [ %5, %9 ], [ %80, %78 ]
  %16 = load i32, i32* %15, align 4
  %17 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %17, i64 0, i32 11
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %46

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %17, i64 0, i32 4, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %23, align 8
  %25 = tail call i8* @_Znwm(i64 104) #12
  %26 = bitcast i8* %25 to %"class.spvtools::opt::analysis::DefUseManager"*
  %27 = getelementptr inbounds i8, i8* %25, i64 32
  %28 = bitcast i8* %27 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %25, i64 48
  %30 = getelementptr inbounds i8, i8* %25, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #11
  %31 = bitcast i8* %30 to i8**
  store i8* %29, i8** %31, align 8
  %32 = getelementptr inbounds i8, i8* %25, i64 64
  %33 = getelementptr inbounds i8, i8* %25, i64 96
  %34 = bitcast i8* %33 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %34, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %26, %"class.spvtools::opt::Module"* %24) #11
  %35 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %17, i64 0, i32 6
  %36 = ptrtoint i8* %25 to i64
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %35, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %37, align 8
  %39 = bitcast %"class.std::__1::unique_ptr.62"* %35 to i64*
  store i64 %36, i64* %39, align 8
  %40 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %38, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %22
  %42 = bitcast %"class.std::__1::unique_ptr.62"* %35 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %42, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %38) #11
  br label %43

43:                                               ; preds = %41, %22
  %44 = load i32, i32* %18, align 8
  %45 = or i32 %44, 1
  store i32 %45, i32* %18, align 8
  br label %46

46:                                               ; preds = %13, %43
  %47 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %17, i64 0, i32 6, i32 0, i32 0, i32 0
  %48 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %47, align 8
  %49 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %48, i32 %14) #11
  %50 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %49, i64 0, i32 2
  %51 = load i32, i32* %50, align 8
  switch i32 %51, label %78 [
    i32 28, label %52
    i32 29, label %52
    i32 24, label %52
    i32 23, label %52
    i32 30, label %63
  ]

52:                                               ; preds = %46, %46, %46, %46
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %49, i64 0, i32 3
  %54 = load i8, i8* %53, align 4, !range !2
  %55 = icmp eq i8 %54, 0
  %56 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %49, i64 0, i32 4
  %57 = load i8, i8* %56, align 1, !range !2
  %58 = icmp eq i8 %57, 0
  %59 = select i1 %58, i32 1, i32 2
  %60 = xor i1 %58, true
  %61 = zext i1 %60 to i32
  %62 = select i1 %55, i32 %61, i32 %59
  br label %75

63:                                               ; preds = %46
  %64 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %49, i64 0, i32 3
  %65 = load i8, i8* %64, align 4, !range !2
  %66 = icmp eq i8 %65, 0
  %67 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %49, i64 0, i32 4
  %68 = load i8, i8* %67, align 1, !range !2
  %69 = icmp eq i8 %68, 0
  %70 = select i1 %69, i32 1, i32 2
  %71 = xor i1 %69, true
  %72 = zext i1 %71 to i32
  %73 = select i1 %66, i32 %72, i32 %70
  %74 = add i32 %73, %16
  br label %75

75:                                               ; preds = %52, %63
  %76 = phi i32 [ %74, %63 ], [ %62, %52 ]
  %77 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %49, i32 %76) #11
  br label %78

78:                                               ; preds = %75, %46
  %79 = phi i32 [ %14, %46 ], [ %77, %75 ]
  %80 = getelementptr inbounds i32, i32* %15, i64 1
  %81 = icmp eq i32* %80, %7
  br i1 %81, label %11, label %13
}

declare i32 @_ZN8spvtools3opt8analysis11TypeManager17FindPointerToTypeEj16SpvStorageClass_(%"class.spvtools::opt::analysis::TypeManager"*, i32, i32) local_unnamed_addr #2

declare i32 @_ZN8spvtools3opt4Pass12GenerateCopyEPNS0_11InstructionEjS3_(%"class.spvtools::opt::Pass"*, %"class.spvtools::opt::Instruction"*, i32, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZNSt3__16vectorIjNS_9allocatorIjEEE6insertINS_11__wrap_iterIPKjEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPjEEE4typeES8_SA_SA_(%"class.std::__1::vector.3"*, i32*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast i32* %2 to i8*
  %6 = bitcast i32* %1 to i8*
  %7 = ptrtoint i32* %1 to i64
  %8 = ptrtoint i32* %2 to i64
  %9 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 0
  %10 = ptrtoint i32* %3 to i64
  %11 = sub i64 %10, %8
  %12 = ashr exact i64 %11, 2
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %706

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast i32** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %19 = load i32*, i32** %18, align 8
  %20 = ptrtoint i32* %19 to i64
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 2
  %23 = icmp sgt i64 %12, %22
  %24 = bitcast i32** %18 to i64*
  br i1 %23, label %339, label %25

25:                                               ; preds = %14
  %26 = sub i64 %20, %7
  %27 = ashr exact i64 %26, 2
  %28 = icmp sgt i64 %12, %27
  br i1 %28, label %29, label %196

29:                                               ; preds = %25
  %30 = getelementptr inbounds i32, i32* %2, i64 %27
  %31 = icmp eq i32* %30, %3
  br i1 %31, label %191, label %32

32:                                               ; preds = %29
  %33 = xor i64 %27, -1
  %34 = getelementptr i32, i32* %3, i64 %33
  %35 = ptrtoint i32* %34 to i64
  %36 = sub i64 %35, %8
  %37 = lshr i64 %36, 2
  %38 = add nuw nsw i64 %37, 1
  %39 = icmp ult i64 %38, 8
  br i1 %39, label %135, label %40

40:                                               ; preds = %32
  %41 = xor i64 %27, -1
  %42 = getelementptr i32, i32* %3, i64 %41
  %43 = ptrtoint i32* %42 to i64
  %44 = sub i64 %43, %8
  %45 = lshr i64 %44, 2
  %46 = add nuw nsw i64 %45, 1
  %47 = getelementptr i32, i32* %19, i64 %46
  %48 = add nsw i64 %27, %45
  %49 = add i64 %48, 1
  %50 = getelementptr i32, i32* %2, i64 %49
  %51 = icmp ult i32* %19, %50
  %52 = icmp ult i32* %30, %47
  %53 = and i1 %51, %52
  br i1 %53, label %135, label %54

54:                                               ; preds = %40
  %55 = and i64 %38, 9223372036854775800
  %56 = getelementptr i32, i32* %19, i64 %55
  %57 = getelementptr i32, i32* %30, i64 %55
  %58 = add nsw i64 %55, -8
  %59 = lshr exact i64 %58, 3
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 24
  br i1 %62, label %114, label %63

63:                                               ; preds = %54
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i32, i32* %19, i64 %66
  %69 = getelementptr i32, i32* %30, i64 %66
  %70 = bitcast i32* %69 to <4 x i32>*
  %71 = load <4 x i32>, <4 x i32>* %70, align 4, !alias.scope !24
  %72 = getelementptr i32, i32* %69, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  %74 = load <4 x i32>, <4 x i32>* %73, align 4, !alias.scope !24
  %75 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> %71, <4 x i32>* %75, align 4, !alias.scope !27, !noalias !24
  %76 = getelementptr i32, i32* %68, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %77, align 4, !alias.scope !27, !noalias !24
  %78 = or i64 %66, 8
  %79 = getelementptr i32, i32* %19, i64 %78
  %80 = getelementptr i32, i32* %30, i64 %78
  %81 = bitcast i32* %80 to <4 x i32>*
  %82 = load <4 x i32>, <4 x i32>* %81, align 4, !alias.scope !24
  %83 = getelementptr i32, i32* %80, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  %85 = load <4 x i32>, <4 x i32>* %84, align 4, !alias.scope !24
  %86 = bitcast i32* %79 to <4 x i32>*
  store <4 x i32> %82, <4 x i32>* %86, align 4, !alias.scope !27, !noalias !24
  %87 = getelementptr i32, i32* %79, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %85, <4 x i32>* %88, align 4, !alias.scope !27, !noalias !24
  %89 = or i64 %66, 16
  %90 = getelementptr i32, i32* %19, i64 %89
  %91 = getelementptr i32, i32* %30, i64 %89
  %92 = bitcast i32* %91 to <4 x i32>*
  %93 = load <4 x i32>, <4 x i32>* %92, align 4, !alias.scope !24
  %94 = getelementptr i32, i32* %91, i64 4
  %95 = bitcast i32* %94 to <4 x i32>*
  %96 = load <4 x i32>, <4 x i32>* %95, align 4, !alias.scope !24
  %97 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %97, align 4, !alias.scope !27, !noalias !24
  %98 = getelementptr i32, i32* %90, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %96, <4 x i32>* %99, align 4, !alias.scope !27, !noalias !24
  %100 = or i64 %66, 24
  %101 = getelementptr i32, i32* %19, i64 %100
  %102 = getelementptr i32, i32* %30, i64 %100
  %103 = bitcast i32* %102 to <4 x i32>*
  %104 = load <4 x i32>, <4 x i32>* %103, align 4, !alias.scope !24
  %105 = getelementptr i32, i32* %102, i64 4
  %106 = bitcast i32* %105 to <4 x i32>*
  %107 = load <4 x i32>, <4 x i32>* %106, align 4, !alias.scope !24
  %108 = bitcast i32* %101 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %108, align 4, !alias.scope !27, !noalias !24
  %109 = getelementptr i32, i32* %101, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %107, <4 x i32>* %110, align 4, !alias.scope !27, !noalias !24
  %111 = add i64 %66, 32
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !29

114:                                              ; preds = %65, %54
  %115 = phi i64 [ 0, %54 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i32, i32* %19, i64 %118
  %121 = getelementptr i32, i32* %30, i64 %118
  %122 = bitcast i32* %121 to <4 x i32>*
  %123 = load <4 x i32>, <4 x i32>* %122, align 4, !alias.scope !24
  %124 = getelementptr i32, i32* %121, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 4, !alias.scope !24
  %127 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %123, <4 x i32>* %127, align 4, !alias.scope !27, !noalias !24
  %128 = getelementptr i32, i32* %120, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %126, <4 x i32>* %129, align 4, !alias.scope !27, !noalias !24
  %130 = add i64 %118, 8
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !30

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %38, %55
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %40, %32
  %136 = phi i32* [ %19, %40 ], [ %19, %32 ], [ %56, %133 ]
  %137 = phi i32* [ %30, %40 ], [ %30, %32 ], [ %57, %133 ]
  %138 = ptrtoint i32* %137 to i64
  %139 = getelementptr i32, i32* %3, i64 -1
  %140 = ptrtoint i32* %139 to i64
  %141 = sub i64 %140, %138
  %142 = lshr i64 %141, 2
  %143 = add nuw nsw i64 %142, 1
  %144 = and i64 %143, 7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %155, label %146

146:                                              ; preds = %135, %146
  %147 = phi i32* [ %152, %146 ], [ %136, %135 ]
  %148 = phi i32* [ %151, %146 ], [ %137, %135 ]
  %149 = phi i64 [ %153, %146 ], [ %144, %135 ]
  %150 = load i32, i32* %148, align 4
  store i32 %150, i32* %147, align 4
  %151 = getelementptr inbounds i32, i32* %148, i64 1
  %152 = getelementptr inbounds i32, i32* %147, i64 1
  %153 = add i64 %149, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %146, !llvm.loop !31

155:                                              ; preds = %146, %135
  %156 = phi i32* [ undef, %135 ], [ %152, %146 ]
  %157 = phi i32* [ %136, %135 ], [ %152, %146 ]
  %158 = phi i32* [ %137, %135 ], [ %151, %146 ]
  %159 = icmp ult i64 %141, 28
  br i1 %159, label %188, label %160

160:                                              ; preds = %155, %160
  %161 = phi i32* [ %186, %160 ], [ %157, %155 ]
  %162 = phi i32* [ %185, %160 ], [ %158, %155 ]
  %163 = load i32, i32* %162, align 4
  store i32 %163, i32* %161, align 4
  %164 = getelementptr inbounds i32, i32* %162, i64 1
  %165 = getelementptr inbounds i32, i32* %161, i64 1
  %166 = load i32, i32* %164, align 4
  store i32 %166, i32* %165, align 4
  %167 = getelementptr inbounds i32, i32* %162, i64 2
  %168 = getelementptr inbounds i32, i32* %161, i64 2
  %169 = load i32, i32* %167, align 4
  store i32 %169, i32* %168, align 4
  %170 = getelementptr inbounds i32, i32* %162, i64 3
  %171 = getelementptr inbounds i32, i32* %161, i64 3
  %172 = load i32, i32* %170, align 4
  store i32 %172, i32* %171, align 4
  %173 = getelementptr inbounds i32, i32* %162, i64 4
  %174 = getelementptr inbounds i32, i32* %161, i64 4
  %175 = load i32, i32* %173, align 4
  store i32 %175, i32* %174, align 4
  %176 = getelementptr inbounds i32, i32* %162, i64 5
  %177 = getelementptr inbounds i32, i32* %161, i64 5
  %178 = load i32, i32* %176, align 4
  store i32 %178, i32* %177, align 4
  %179 = getelementptr inbounds i32, i32* %162, i64 6
  %180 = getelementptr inbounds i32, i32* %161, i64 6
  %181 = load i32, i32* %179, align 4
  store i32 %181, i32* %180, align 4
  %182 = getelementptr inbounds i32, i32* %162, i64 7
  %183 = getelementptr inbounds i32, i32* %161, i64 7
  %184 = load i32, i32* %182, align 4
  store i32 %184, i32* %183, align 4
  %185 = getelementptr inbounds i32, i32* %162, i64 8
  %186 = getelementptr inbounds i32, i32* %161, i64 8
  %187 = icmp eq i32* %185, %3
  br i1 %187, label %188, label %160, !llvm.loop !32

188:                                              ; preds = %155, %160, %133
  %189 = phi i32* [ %56, %133 ], [ %156, %155 ], [ %186, %160 ]
  %190 = ptrtoint i32* %189 to i64
  br label %191

191:                                              ; preds = %188, %29
  %192 = phi i64 [ %20, %29 ], [ %190, %188 ]
  store i64 %192, i64* %24, align 8
  %193 = icmp sgt i64 %26, 0
  br i1 %193, label %194, label %706

194:                                              ; preds = %191
  %195 = inttoptr i64 %192 to i32*
  br label %196

196:                                              ; preds = %194, %25
  %197 = phi i64 [ %192, %194 ], [ %20, %25 ]
  %198 = phi i32* [ %195, %194 ], [ %19, %25 ]
  %199 = phi i32* [ %30, %194 ], [ %3, %25 ]
  %200 = getelementptr inbounds i32, i32* %1, i64 %12
  %201 = ptrtoint i32* %200 to i64
  %202 = sub i64 %197, %201
  %203 = ashr exact i64 %202, 2
  %204 = getelementptr inbounds i32, i32* %1, i64 %203
  %205 = icmp ult i32* %204, %19
  br i1 %205, label %206, label %319

206:                                              ; preds = %196
  %207 = sub nsw i64 0, %203
  %208 = getelementptr i32, i32* %19, i64 %207
  %209 = bitcast i32* %208 to i8*
  %210 = xor i64 %7, -1
  %211 = getelementptr i8, i8* %209, i64 %210
  %212 = ptrtoint i8* %211 to i64
  %213 = lshr i64 %212, 2
  %214 = add nuw nsw i64 %213, 1
  %215 = icmp ult i64 %214, 8
  br i1 %215, label %216, label %219

216:                                              ; preds = %314, %219, %206
  %217 = phi i32* [ %198, %219 ], [ %198, %206 ], [ %237, %314 ]
  %218 = phi i32* [ %204, %219 ], [ %204, %206 ], [ %238, %314 ]
  br label %327

219:                                              ; preds = %206
  %220 = sub nsw i64 0, %203
  %221 = getelementptr i32, i32* %19, i64 %220
  %222 = bitcast i32* %221 to i8*
  %223 = xor i64 %7, -1
  %224 = getelementptr i8, i8* %222, i64 %223
  %225 = ptrtoint i8* %224 to i64
  %226 = lshr i64 %225, 2
  %227 = add nuw nsw i64 %226, 1
  %228 = getelementptr i32, i32* %198, i64 %227
  %229 = add nsw i64 %203, %226
  %230 = add i64 %229, 1
  %231 = getelementptr i32, i32* %1, i64 %230
  %232 = icmp ult i32* %198, %231
  %233 = icmp ult i32* %204, %228
  %234 = and i1 %232, %233
  br i1 %234, label %216, label %235

235:                                              ; preds = %219
  %236 = and i64 %214, 9223372036854775800
  %237 = getelementptr i32, i32* %198, i64 %236
  %238 = getelementptr i32, i32* %204, i64 %236
  %239 = add nsw i64 %236, -8
  %240 = lshr exact i64 %239, 3
  %241 = add nuw nsw i64 %240, 1
  %242 = and i64 %241, 3
  %243 = icmp ult i64 %239, 24
  br i1 %243, label %295, label %244

244:                                              ; preds = %235
  %245 = sub nsw i64 %241, %242
  br label %246

246:                                              ; preds = %246, %244
  %247 = phi i64 [ 0, %244 ], [ %292, %246 ]
  %248 = phi i64 [ %245, %244 ], [ %293, %246 ]
  %249 = getelementptr i32, i32* %198, i64 %247
  %250 = getelementptr i32, i32* %204, i64 %247
  %251 = bitcast i32* %250 to <4 x i32>*
  %252 = load <4 x i32>, <4 x i32>* %251, align 4, !alias.scope !33
  %253 = getelementptr i32, i32* %250, i64 4
  %254 = bitcast i32* %253 to <4 x i32>*
  %255 = load <4 x i32>, <4 x i32>* %254, align 4, !alias.scope !33
  %256 = bitcast i32* %249 to <4 x i32>*
  store <4 x i32> %252, <4 x i32>* %256, align 4, !alias.scope !36, !noalias !33
  %257 = getelementptr i32, i32* %249, i64 4
  %258 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> %255, <4 x i32>* %258, align 4, !alias.scope !36, !noalias !33
  %259 = or i64 %247, 8
  %260 = getelementptr i32, i32* %198, i64 %259
  %261 = getelementptr i32, i32* %204, i64 %259
  %262 = bitcast i32* %261 to <4 x i32>*
  %263 = load <4 x i32>, <4 x i32>* %262, align 4, !alias.scope !33
  %264 = getelementptr i32, i32* %261, i64 4
  %265 = bitcast i32* %264 to <4 x i32>*
  %266 = load <4 x i32>, <4 x i32>* %265, align 4, !alias.scope !33
  %267 = bitcast i32* %260 to <4 x i32>*
  store <4 x i32> %263, <4 x i32>* %267, align 4, !alias.scope !36, !noalias !33
  %268 = getelementptr i32, i32* %260, i64 4
  %269 = bitcast i32* %268 to <4 x i32>*
  store <4 x i32> %266, <4 x i32>* %269, align 4, !alias.scope !36, !noalias !33
  %270 = or i64 %247, 16
  %271 = getelementptr i32, i32* %198, i64 %270
  %272 = getelementptr i32, i32* %204, i64 %270
  %273 = bitcast i32* %272 to <4 x i32>*
  %274 = load <4 x i32>, <4 x i32>* %273, align 4, !alias.scope !33
  %275 = getelementptr i32, i32* %272, i64 4
  %276 = bitcast i32* %275 to <4 x i32>*
  %277 = load <4 x i32>, <4 x i32>* %276, align 4, !alias.scope !33
  %278 = bitcast i32* %271 to <4 x i32>*
  store <4 x i32> %274, <4 x i32>* %278, align 4, !alias.scope !36, !noalias !33
  %279 = getelementptr i32, i32* %271, i64 4
  %280 = bitcast i32* %279 to <4 x i32>*
  store <4 x i32> %277, <4 x i32>* %280, align 4, !alias.scope !36, !noalias !33
  %281 = or i64 %247, 24
  %282 = getelementptr i32, i32* %198, i64 %281
  %283 = getelementptr i32, i32* %204, i64 %281
  %284 = bitcast i32* %283 to <4 x i32>*
  %285 = load <4 x i32>, <4 x i32>* %284, align 4, !alias.scope !33
  %286 = getelementptr i32, i32* %283, i64 4
  %287 = bitcast i32* %286 to <4 x i32>*
  %288 = load <4 x i32>, <4 x i32>* %287, align 4, !alias.scope !33
  %289 = bitcast i32* %282 to <4 x i32>*
  store <4 x i32> %285, <4 x i32>* %289, align 4, !alias.scope !36, !noalias !33
  %290 = getelementptr i32, i32* %282, i64 4
  %291 = bitcast i32* %290 to <4 x i32>*
  store <4 x i32> %288, <4 x i32>* %291, align 4, !alias.scope !36, !noalias !33
  %292 = add i64 %247, 32
  %293 = add i64 %248, -4
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %295, label %246, !llvm.loop !38

295:                                              ; preds = %246, %235
  %296 = phi i64 [ 0, %235 ], [ %292, %246 ]
  %297 = icmp eq i64 %242, 0
  br i1 %297, label %314, label %298

298:                                              ; preds = %295, %298
  %299 = phi i64 [ %311, %298 ], [ %296, %295 ]
  %300 = phi i64 [ %312, %298 ], [ %242, %295 ]
  %301 = getelementptr i32, i32* %198, i64 %299
  %302 = getelementptr i32, i32* %204, i64 %299
  %303 = bitcast i32* %302 to <4 x i32>*
  %304 = load <4 x i32>, <4 x i32>* %303, align 4, !alias.scope !33
  %305 = getelementptr i32, i32* %302, i64 4
  %306 = bitcast i32* %305 to <4 x i32>*
  %307 = load <4 x i32>, <4 x i32>* %306, align 4, !alias.scope !33
  %308 = bitcast i32* %301 to <4 x i32>*
  store <4 x i32> %304, <4 x i32>* %308, align 4, !alias.scope !36, !noalias !33
  %309 = getelementptr i32, i32* %301, i64 4
  %310 = bitcast i32* %309 to <4 x i32>*
  store <4 x i32> %307, <4 x i32>* %310, align 4, !alias.scope !36, !noalias !33
  %311 = add i64 %299, 8
  %312 = add i64 %300, -1
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %314, label %298, !llvm.loop !39

314:                                              ; preds = %298, %295
  %315 = icmp eq i64 %214, %236
  br i1 %315, label %316, label %216

316:                                              ; preds = %327, %314
  %317 = phi i32* [ %237, %314 ], [ %332, %327 ]
  %318 = ptrtoint i32* %317 to i64
  br label %319

319:                                              ; preds = %316, %196
  %320 = phi i64 [ %318, %316 ], [ %197, %196 ]
  store i64 %320, i64* %24, align 8
  %321 = icmp eq i64 %202, 0
  br i1 %321, label %334, label %322

322:                                              ; preds = %319
  %323 = sub nsw i64 0, %203
  %324 = getelementptr inbounds i32, i32* %198, i64 %323
  %325 = bitcast i32* %324 to i8*
  %326 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %325, i8* align 4 %326, i64 %202, i1 false) #11
  br label %334

327:                                              ; preds = %216, %327
  %328 = phi i32* [ %332, %327 ], [ %217, %216 ]
  %329 = phi i32* [ %331, %327 ], [ %218, %216 ]
  %330 = load i32, i32* %329, align 4
  store i32 %330, i32* %328, align 4
  %331 = getelementptr inbounds i32, i32* %329, i64 1
  %332 = getelementptr inbounds i32, i32* %328, i64 1
  %333 = icmp ult i32* %331, %19
  br i1 %333, label %327, label %316, !llvm.loop !40

334:                                              ; preds = %319, %322
  %335 = ptrtoint i32* %199 to i64
  %336 = sub i64 %335, %8
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %706, label %338

338:                                              ; preds = %334
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %5, i64 %336, i1 false) #11
  br label %706

339:                                              ; preds = %14
  %340 = bitcast %"class.std::__1::vector.3"* %0 to i64*
  %341 = load i64, i64* %340, align 8
  %342 = sub i64 %20, %341
  %343 = ashr exact i64 %342, 2
  %344 = add nsw i64 %343, %12
  %345 = icmp ugt i64 %344, 4611686018427387903
  br i1 %345, label %346, label %348

346:                                              ; preds = %339
  %347 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %347) #13
  unreachable

348:                                              ; preds = %339
  %349 = sub i64 %17, %341
  %350 = ashr exact i64 %349, 2
  %351 = icmp ult i64 %350, 2305843009213693951
  br i1 %351, label %355, label %352

352:                                              ; preds = %348
  %353 = sub i64 %7, %341
  %354 = ashr exact i64 %353, 2
  br label %365

355:                                              ; preds = %348
  %356 = ashr exact i64 %349, 1
  %357 = icmp ult i64 %356, %344
  %358 = select i1 %357, i64 %344, i64 %356
  %359 = sub i64 %7, %341
  %360 = ashr exact i64 %359, 2
  %361 = icmp eq i64 %358, 0
  br i1 %361, label %371, label %362

362:                                              ; preds = %355
  %363 = icmp ugt i64 %358, 4611686018427387903
  br i1 %363, label %364, label %365

364:                                              ; preds = %362
  tail call void @abort() #13
  unreachable

365:                                              ; preds = %352, %362
  %366 = phi i64 [ 4611686018427387903, %352 ], [ %358, %362 ]
  %367 = phi i64 [ %354, %352 ], [ %360, %362 ]
  %368 = shl i64 %366, 2
  %369 = tail call i8* @_Znwm(i64 %368) #12
  %370 = bitcast i8* %369 to i32*
  br label %371

371:                                              ; preds = %365, %355
  %372 = phi i64 [ %367, %365 ], [ %360, %355 ]
  %373 = phi i64 [ %366, %365 ], [ 0, %355 ]
  %374 = phi i32* [ %370, %365 ], [ null, %355 ]
  %375 = getelementptr inbounds i32, i32* %374, i64 %372
  %376 = getelementptr inbounds i32, i32* %374, i64 %373
  %377 = ptrtoint i32* %376 to i64
  %378 = getelementptr inbounds i32, i32* %375, i64 %12
  %379 = add i64 %11, -4
  %380 = lshr i64 %379, 2
  %381 = add nuw nsw i64 %380, 1
  %382 = icmp ult i64 %381, 8
  br i1 %382, label %475, label %383

383:                                              ; preds = %371
  %384 = add i64 %11, -4
  %385 = lshr i64 %384, 2
  %386 = add nsw i64 %372, %385
  %387 = add i64 %386, 1
  %388 = getelementptr i32, i32* %374, i64 %387
  %389 = add nuw nsw i64 %385, 1
  %390 = getelementptr i32, i32* %2, i64 %389
  %391 = icmp ult i32* %375, %390
  %392 = icmp ugt i32* %388, %2
  %393 = and i1 %391, %392
  br i1 %393, label %475, label %394

394:                                              ; preds = %383
  %395 = and i64 %381, 9223372036854775800
  %396 = getelementptr i32, i32* %375, i64 %395
  %397 = getelementptr i32, i32* %2, i64 %395
  %398 = add nsw i64 %395, -8
  %399 = lshr exact i64 %398, 3
  %400 = add nuw nsw i64 %399, 1
  %401 = and i64 %400, 3
  %402 = icmp ult i64 %398, 24
  br i1 %402, label %454, label %403

403:                                              ; preds = %394
  %404 = sub nsw i64 %400, %401
  br label %405

405:                                              ; preds = %405, %403
  %406 = phi i64 [ 0, %403 ], [ %451, %405 ]
  %407 = phi i64 [ %404, %403 ], [ %452, %405 ]
  %408 = getelementptr i32, i32* %375, i64 %406
  %409 = getelementptr i32, i32* %2, i64 %406
  %410 = bitcast i32* %409 to <4 x i32>*
  %411 = load <4 x i32>, <4 x i32>* %410, align 4, !alias.scope !41
  %412 = getelementptr i32, i32* %409, i64 4
  %413 = bitcast i32* %412 to <4 x i32>*
  %414 = load <4 x i32>, <4 x i32>* %413, align 4, !alias.scope !41
  %415 = bitcast i32* %408 to <4 x i32>*
  store <4 x i32> %411, <4 x i32>* %415, align 4, !alias.scope !44, !noalias !41
  %416 = getelementptr i32, i32* %408, i64 4
  %417 = bitcast i32* %416 to <4 x i32>*
  store <4 x i32> %414, <4 x i32>* %417, align 4, !alias.scope !44, !noalias !41
  %418 = or i64 %406, 8
  %419 = getelementptr i32, i32* %375, i64 %418
  %420 = getelementptr i32, i32* %2, i64 %418
  %421 = bitcast i32* %420 to <4 x i32>*
  %422 = load <4 x i32>, <4 x i32>* %421, align 4, !alias.scope !41
  %423 = getelementptr i32, i32* %420, i64 4
  %424 = bitcast i32* %423 to <4 x i32>*
  %425 = load <4 x i32>, <4 x i32>* %424, align 4, !alias.scope !41
  %426 = bitcast i32* %419 to <4 x i32>*
  store <4 x i32> %422, <4 x i32>* %426, align 4, !alias.scope !44, !noalias !41
  %427 = getelementptr i32, i32* %419, i64 4
  %428 = bitcast i32* %427 to <4 x i32>*
  store <4 x i32> %425, <4 x i32>* %428, align 4, !alias.scope !44, !noalias !41
  %429 = or i64 %406, 16
  %430 = getelementptr i32, i32* %375, i64 %429
  %431 = getelementptr i32, i32* %2, i64 %429
  %432 = bitcast i32* %431 to <4 x i32>*
  %433 = load <4 x i32>, <4 x i32>* %432, align 4, !alias.scope !41
  %434 = getelementptr i32, i32* %431, i64 4
  %435 = bitcast i32* %434 to <4 x i32>*
  %436 = load <4 x i32>, <4 x i32>* %435, align 4, !alias.scope !41
  %437 = bitcast i32* %430 to <4 x i32>*
  store <4 x i32> %433, <4 x i32>* %437, align 4, !alias.scope !44, !noalias !41
  %438 = getelementptr i32, i32* %430, i64 4
  %439 = bitcast i32* %438 to <4 x i32>*
  store <4 x i32> %436, <4 x i32>* %439, align 4, !alias.scope !44, !noalias !41
  %440 = or i64 %406, 24
  %441 = getelementptr i32, i32* %375, i64 %440
  %442 = getelementptr i32, i32* %2, i64 %440
  %443 = bitcast i32* %442 to <4 x i32>*
  %444 = load <4 x i32>, <4 x i32>* %443, align 4, !alias.scope !41
  %445 = getelementptr i32, i32* %442, i64 4
  %446 = bitcast i32* %445 to <4 x i32>*
  %447 = load <4 x i32>, <4 x i32>* %446, align 4, !alias.scope !41
  %448 = bitcast i32* %441 to <4 x i32>*
  store <4 x i32> %444, <4 x i32>* %448, align 4, !alias.scope !44, !noalias !41
  %449 = getelementptr i32, i32* %441, i64 4
  %450 = bitcast i32* %449 to <4 x i32>*
  store <4 x i32> %447, <4 x i32>* %450, align 4, !alias.scope !44, !noalias !41
  %451 = add i64 %406, 32
  %452 = add i64 %407, -4
  %453 = icmp eq i64 %452, 0
  br i1 %453, label %454, label %405, !llvm.loop !46

454:                                              ; preds = %405, %394
  %455 = phi i64 [ 0, %394 ], [ %451, %405 ]
  %456 = icmp eq i64 %401, 0
  br i1 %456, label %473, label %457

457:                                              ; preds = %454, %457
  %458 = phi i64 [ %470, %457 ], [ %455, %454 ]
  %459 = phi i64 [ %471, %457 ], [ %401, %454 ]
  %460 = getelementptr i32, i32* %375, i64 %458
  %461 = getelementptr i32, i32* %2, i64 %458
  %462 = bitcast i32* %461 to <4 x i32>*
  %463 = load <4 x i32>, <4 x i32>* %462, align 4, !alias.scope !41
  %464 = getelementptr i32, i32* %461, i64 4
  %465 = bitcast i32* %464 to <4 x i32>*
  %466 = load <4 x i32>, <4 x i32>* %465, align 4, !alias.scope !41
  %467 = bitcast i32* %460 to <4 x i32>*
  store <4 x i32> %463, <4 x i32>* %467, align 4, !alias.scope !44, !noalias !41
  %468 = getelementptr i32, i32* %460, i64 4
  %469 = bitcast i32* %468 to <4 x i32>*
  store <4 x i32> %466, <4 x i32>* %469, align 4, !alias.scope !44, !noalias !41
  %470 = add i64 %458, 8
  %471 = add i64 %459, -1
  %472 = icmp eq i64 %471, 0
  br i1 %472, label %473, label %457, !llvm.loop !47

473:                                              ; preds = %457, %454
  %474 = icmp eq i64 %381, %395
  br i1 %474, label %529, label %475

475:                                              ; preds = %473, %383, %371
  %476 = phi i32* [ %375, %383 ], [ %375, %371 ], [ %396, %473 ]
  %477 = phi i32* [ %2, %383 ], [ %2, %371 ], [ %397, %473 ]
  %478 = ptrtoint i32* %476 to i64
  %479 = add nsw i64 %372, %12
  %480 = add nsw i64 %479, -1
  %481 = getelementptr i32, i32* %374, i64 %480
  %482 = ptrtoint i32* %481 to i64
  %483 = sub i64 %482, %478
  %484 = lshr i64 %483, 2
  %485 = add nuw nsw i64 %484, 1
  %486 = and i64 %485, 7
  %487 = icmp eq i64 %486, 0
  br i1 %487, label %497, label %488

488:                                              ; preds = %475, %488
  %489 = phi i32* [ %493, %488 ], [ %476, %475 ]
  %490 = phi i32* [ %494, %488 ], [ %477, %475 ]
  %491 = phi i64 [ %495, %488 ], [ %486, %475 ]
  %492 = load i32, i32* %490, align 4
  store i32 %492, i32* %489, align 4
  %493 = getelementptr inbounds i32, i32* %489, i64 1
  %494 = getelementptr inbounds i32, i32* %490, i64 1
  %495 = add i64 %491, -1
  %496 = icmp eq i64 %495, 0
  br i1 %496, label %497, label %488, !llvm.loop !48

497:                                              ; preds = %488, %475
  %498 = phi i32* [ %476, %475 ], [ %493, %488 ]
  %499 = phi i32* [ %477, %475 ], [ %494, %488 ]
  %500 = icmp ult i64 %483, 28
  br i1 %500, label %529, label %501

501:                                              ; preds = %497, %501
  %502 = phi i32* [ %526, %501 ], [ %498, %497 ]
  %503 = phi i32* [ %527, %501 ], [ %499, %497 ]
  %504 = load i32, i32* %503, align 4
  store i32 %504, i32* %502, align 4
  %505 = getelementptr inbounds i32, i32* %502, i64 1
  %506 = getelementptr inbounds i32, i32* %503, i64 1
  %507 = load i32, i32* %506, align 4
  store i32 %507, i32* %505, align 4
  %508 = getelementptr inbounds i32, i32* %502, i64 2
  %509 = getelementptr inbounds i32, i32* %503, i64 2
  %510 = load i32, i32* %509, align 4
  store i32 %510, i32* %508, align 4
  %511 = getelementptr inbounds i32, i32* %502, i64 3
  %512 = getelementptr inbounds i32, i32* %503, i64 3
  %513 = load i32, i32* %512, align 4
  store i32 %513, i32* %511, align 4
  %514 = getelementptr inbounds i32, i32* %502, i64 4
  %515 = getelementptr inbounds i32, i32* %503, i64 4
  %516 = load i32, i32* %515, align 4
  store i32 %516, i32* %514, align 4
  %517 = getelementptr inbounds i32, i32* %502, i64 5
  %518 = getelementptr inbounds i32, i32* %503, i64 5
  %519 = load i32, i32* %518, align 4
  store i32 %519, i32* %517, align 4
  %520 = getelementptr inbounds i32, i32* %502, i64 6
  %521 = getelementptr inbounds i32, i32* %503, i64 6
  %522 = load i32, i32* %521, align 4
  store i32 %522, i32* %520, align 4
  %523 = getelementptr inbounds i32, i32* %502, i64 7
  %524 = getelementptr inbounds i32, i32* %503, i64 7
  %525 = load i32, i32* %524, align 4
  store i32 %525, i32* %523, align 4
  %526 = getelementptr inbounds i32, i32* %502, i64 8
  %527 = getelementptr inbounds i32, i32* %503, i64 8
  %528 = icmp eq i32* %378, %526
  br i1 %528, label %529, label %501, !llvm.loop !49

529:                                              ; preds = %497, %501, %473
  %530 = load i32*, i32** %9, align 8
  %531 = ptrtoint i32* %530 to i64
  %532 = sub i64 %7, %531
  %533 = ashr exact i64 %532, 2
  %534 = sub nsw i64 0, %533
  %535 = getelementptr inbounds i32, i32* %375, i64 %534
  %536 = ptrtoint i32* %535 to i64
  %537 = icmp sgt i64 %532, 0
  br i1 %537, label %538, label %541

538:                                              ; preds = %529
  %539 = bitcast i32* %535 to i8*
  %540 = bitcast i32* %530 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %539, i8* align 4 %540, i64 %532, i1 false) #11
  br label %541

541:                                              ; preds = %538, %529
  %542 = load i32*, i32** %18, align 8
  %543 = icmp eq i32* %542, %1
  br i1 %543, label %699, label %544

544:                                              ; preds = %541
  %545 = getelementptr i32, i32* %542, i64 -1
  %546 = ptrtoint i32* %545 to i64
  %547 = sub i64 %546, %7
  %548 = lshr i64 %547, 2
  %549 = add nuw nsw i64 %548, 1
  %550 = icmp ult i64 %549, 8
  br i1 %550, label %646, label %551

551:                                              ; preds = %544
  %552 = add nsw i64 %372, %12
  %553 = getelementptr i32, i32* %542, i64 -1
  %554 = ptrtoint i32* %553 to i64
  %555 = sub i64 %554, %7
  %556 = lshr i64 %555, 2
  %557 = add nsw i64 %552, %556
  %558 = add i64 %557, 1
  %559 = getelementptr i32, i32* %374, i64 %558
  %560 = add nuw nsw i64 %556, 1
  %561 = getelementptr i32, i32* %1, i64 %560
  %562 = icmp ult i32* %378, %561
  %563 = icmp ugt i32* %559, %1
  %564 = and i1 %562, %563
  br i1 %564, label %646, label %565

565:                                              ; preds = %551
  %566 = and i64 %549, 9223372036854775800
  %567 = getelementptr i32, i32* %378, i64 %566
  %568 = getelementptr i32, i32* %1, i64 %566
  %569 = add nsw i64 %566, -8
  %570 = lshr exact i64 %569, 3
  %571 = add nuw nsw i64 %570, 1
  %572 = and i64 %571, 3
  %573 = icmp ult i64 %569, 24
  br i1 %573, label %625, label %574

574:                                              ; preds = %565
  %575 = sub nsw i64 %571, %572
  br label %576

576:                                              ; preds = %576, %574
  %577 = phi i64 [ 0, %574 ], [ %622, %576 ]
  %578 = phi i64 [ %575, %574 ], [ %623, %576 ]
  %579 = getelementptr i32, i32* %378, i64 %577
  %580 = getelementptr i32, i32* %1, i64 %577
  %581 = bitcast i32* %580 to <4 x i32>*
  %582 = load <4 x i32>, <4 x i32>* %581, align 4, !alias.scope !50
  %583 = getelementptr i32, i32* %580, i64 4
  %584 = bitcast i32* %583 to <4 x i32>*
  %585 = load <4 x i32>, <4 x i32>* %584, align 4, !alias.scope !50
  %586 = bitcast i32* %579 to <4 x i32>*
  store <4 x i32> %582, <4 x i32>* %586, align 4, !alias.scope !53, !noalias !50
  %587 = getelementptr i32, i32* %579, i64 4
  %588 = bitcast i32* %587 to <4 x i32>*
  store <4 x i32> %585, <4 x i32>* %588, align 4, !alias.scope !53, !noalias !50
  %589 = or i64 %577, 8
  %590 = getelementptr i32, i32* %378, i64 %589
  %591 = getelementptr i32, i32* %1, i64 %589
  %592 = bitcast i32* %591 to <4 x i32>*
  %593 = load <4 x i32>, <4 x i32>* %592, align 4, !alias.scope !50
  %594 = getelementptr i32, i32* %591, i64 4
  %595 = bitcast i32* %594 to <4 x i32>*
  %596 = load <4 x i32>, <4 x i32>* %595, align 4, !alias.scope !50
  %597 = bitcast i32* %590 to <4 x i32>*
  store <4 x i32> %593, <4 x i32>* %597, align 4, !alias.scope !53, !noalias !50
  %598 = getelementptr i32, i32* %590, i64 4
  %599 = bitcast i32* %598 to <4 x i32>*
  store <4 x i32> %596, <4 x i32>* %599, align 4, !alias.scope !53, !noalias !50
  %600 = or i64 %577, 16
  %601 = getelementptr i32, i32* %378, i64 %600
  %602 = getelementptr i32, i32* %1, i64 %600
  %603 = bitcast i32* %602 to <4 x i32>*
  %604 = load <4 x i32>, <4 x i32>* %603, align 4, !alias.scope !50
  %605 = getelementptr i32, i32* %602, i64 4
  %606 = bitcast i32* %605 to <4 x i32>*
  %607 = load <4 x i32>, <4 x i32>* %606, align 4, !alias.scope !50
  %608 = bitcast i32* %601 to <4 x i32>*
  store <4 x i32> %604, <4 x i32>* %608, align 4, !alias.scope !53, !noalias !50
  %609 = getelementptr i32, i32* %601, i64 4
  %610 = bitcast i32* %609 to <4 x i32>*
  store <4 x i32> %607, <4 x i32>* %610, align 4, !alias.scope !53, !noalias !50
  %611 = or i64 %577, 24
  %612 = getelementptr i32, i32* %378, i64 %611
  %613 = getelementptr i32, i32* %1, i64 %611
  %614 = bitcast i32* %613 to <4 x i32>*
  %615 = load <4 x i32>, <4 x i32>* %614, align 4, !alias.scope !50
  %616 = getelementptr i32, i32* %613, i64 4
  %617 = bitcast i32* %616 to <4 x i32>*
  %618 = load <4 x i32>, <4 x i32>* %617, align 4, !alias.scope !50
  %619 = bitcast i32* %612 to <4 x i32>*
  store <4 x i32> %615, <4 x i32>* %619, align 4, !alias.scope !53, !noalias !50
  %620 = getelementptr i32, i32* %612, i64 4
  %621 = bitcast i32* %620 to <4 x i32>*
  store <4 x i32> %618, <4 x i32>* %621, align 4, !alias.scope !53, !noalias !50
  %622 = add i64 %577, 32
  %623 = add i64 %578, -4
  %624 = icmp eq i64 %623, 0
  br i1 %624, label %625, label %576, !llvm.loop !55

625:                                              ; preds = %576, %565
  %626 = phi i64 [ 0, %565 ], [ %622, %576 ]
  %627 = icmp eq i64 %572, 0
  br i1 %627, label %644, label %628

628:                                              ; preds = %625, %628
  %629 = phi i64 [ %641, %628 ], [ %626, %625 ]
  %630 = phi i64 [ %642, %628 ], [ %572, %625 ]
  %631 = getelementptr i32, i32* %378, i64 %629
  %632 = getelementptr i32, i32* %1, i64 %629
  %633 = bitcast i32* %632 to <4 x i32>*
  %634 = load <4 x i32>, <4 x i32>* %633, align 4, !alias.scope !50
  %635 = getelementptr i32, i32* %632, i64 4
  %636 = bitcast i32* %635 to <4 x i32>*
  %637 = load <4 x i32>, <4 x i32>* %636, align 4, !alias.scope !50
  %638 = bitcast i32* %631 to <4 x i32>*
  store <4 x i32> %634, <4 x i32>* %638, align 4, !alias.scope !53, !noalias !50
  %639 = getelementptr i32, i32* %631, i64 4
  %640 = bitcast i32* %639 to <4 x i32>*
  store <4 x i32> %637, <4 x i32>* %640, align 4, !alias.scope !53, !noalias !50
  %641 = add i64 %629, 8
  %642 = add i64 %630, -1
  %643 = icmp eq i64 %642, 0
  br i1 %643, label %644, label %628, !llvm.loop !56

644:                                              ; preds = %628, %625
  %645 = icmp eq i64 %549, %566
  br i1 %645, label %699, label %646

646:                                              ; preds = %644, %551, %544
  %647 = phi i32* [ %378, %551 ], [ %378, %544 ], [ %567, %644 ]
  %648 = phi i32* [ %1, %551 ], [ %1, %544 ], [ %568, %644 ]
  %649 = ptrtoint i32* %648 to i64
  %650 = getelementptr i32, i32* %542, i64 -1
  %651 = ptrtoint i32* %650 to i64
  %652 = sub i64 %651, %649
  %653 = lshr i64 %652, 2
  %654 = add nuw nsw i64 %653, 1
  %655 = and i64 %654, 7
  %656 = icmp eq i64 %655, 0
  br i1 %656, label %666, label %657

657:                                              ; preds = %646, %657
  %658 = phi i32* [ %663, %657 ], [ %647, %646 ]
  %659 = phi i32* [ %662, %657 ], [ %648, %646 ]
  %660 = phi i64 [ %664, %657 ], [ %655, %646 ]
  %661 = load i32, i32* %659, align 4
  store i32 %661, i32* %658, align 4
  %662 = getelementptr inbounds i32, i32* %659, i64 1
  %663 = getelementptr inbounds i32, i32* %658, i64 1
  %664 = add i64 %660, -1
  %665 = icmp eq i64 %664, 0
  br i1 %665, label %666, label %657, !llvm.loop !57

666:                                              ; preds = %657, %646
  %667 = phi i32* [ undef, %646 ], [ %663, %657 ]
  %668 = phi i32* [ %647, %646 ], [ %663, %657 ]
  %669 = phi i32* [ %648, %646 ], [ %662, %657 ]
  %670 = icmp ult i64 %652, 28
  br i1 %670, label %699, label %671

671:                                              ; preds = %666, %671
  %672 = phi i32* [ %697, %671 ], [ %668, %666 ]
  %673 = phi i32* [ %696, %671 ], [ %669, %666 ]
  %674 = load i32, i32* %673, align 4
  store i32 %674, i32* %672, align 4
  %675 = getelementptr inbounds i32, i32* %673, i64 1
  %676 = getelementptr inbounds i32, i32* %672, i64 1
  %677 = load i32, i32* %675, align 4
  store i32 %677, i32* %676, align 4
  %678 = getelementptr inbounds i32, i32* %673, i64 2
  %679 = getelementptr inbounds i32, i32* %672, i64 2
  %680 = load i32, i32* %678, align 4
  store i32 %680, i32* %679, align 4
  %681 = getelementptr inbounds i32, i32* %673, i64 3
  %682 = getelementptr inbounds i32, i32* %672, i64 3
  %683 = load i32, i32* %681, align 4
  store i32 %683, i32* %682, align 4
  %684 = getelementptr inbounds i32, i32* %673, i64 4
  %685 = getelementptr inbounds i32, i32* %672, i64 4
  %686 = load i32, i32* %684, align 4
  store i32 %686, i32* %685, align 4
  %687 = getelementptr inbounds i32, i32* %673, i64 5
  %688 = getelementptr inbounds i32, i32* %672, i64 5
  %689 = load i32, i32* %687, align 4
  store i32 %689, i32* %688, align 4
  %690 = getelementptr inbounds i32, i32* %673, i64 6
  %691 = getelementptr inbounds i32, i32* %672, i64 6
  %692 = load i32, i32* %690, align 4
  store i32 %692, i32* %691, align 4
  %693 = getelementptr inbounds i32, i32* %673, i64 7
  %694 = getelementptr inbounds i32, i32* %672, i64 7
  %695 = load i32, i32* %693, align 4
  store i32 %695, i32* %694, align 4
  %696 = getelementptr inbounds i32, i32* %673, i64 8
  %697 = getelementptr inbounds i32, i32* %672, i64 8
  %698 = icmp eq i32* %696, %542
  br i1 %698, label %699, label %671, !llvm.loop !58

699:                                              ; preds = %666, %671, %644, %541
  %700 = phi i32* [ %378, %541 ], [ %567, %644 ], [ %667, %666 ], [ %697, %671 ]
  %701 = ptrtoint i32* %700 to i64
  %702 = load i32*, i32** %9, align 8
  store i64 %536, i64* %340, align 8
  store i64 %701, i64* %24, align 8
  store i64 %377, i64* %16, align 8
  %703 = icmp eq i32* %702, null
  br i1 %703, label %706, label %704

704:                                              ; preds = %699
  %705 = bitcast i32* %702 to i8*
  tail call void @_ZdlPv(i8* %705) #12
  br label %706

706:                                              ; preds = %704, %699, %191, %334, %338, %4
  %707 = phi i32* [ %1, %4 ], [ %1, %338 ], [ %1, %334 ], [ %1, %191 ], [ %375, %699 ], [ %375, %704 ]
  ret i32* %707
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8spvtools3opt19CopyPropagateArrays12MemoryObject12GetAccessIdsEv(%"class.std::__1::vector.3"* noalias sret, %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %1, i64 0, i32 0
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 1
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 11
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 16384
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %25

11:                                               ; preds = %2
  %12 = tail call i8* @_Znwm(i64 136) #12
  %13 = bitcast i8* %12 to %"class.spvtools::opt::analysis::ConstantManager"*
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %13, %"class.spvtools::opt::IRContext"* %6) #11
  %14 = ptrtoint i8* %12 to i64
  %15 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 19
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %16, align 8
  %18 = bitcast %"class.std::__1::unique_ptr.400"* %15 to i64*
  store i64 %14, i64* %18, align 8
  %19 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %17, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %11
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %17) #11
  %21 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %17 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  br label %22

22:                                               ; preds = %20, %11
  %23 = load i32, i32* %7, align 8
  %24 = or i32 %23, 16384
  store i32 %24, i32* %7, align 8
  br label %25

25:                                               ; preds = %2, %22
  %26 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 19, i32 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.std::__1::vector.3"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #11
  %31 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %1, i64 0, i32 1, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays::MemoryObject", %"class.spvtools::opt::CopyPropagateArrays::MemoryObject"* %1, i64 0, i32 1, i32 0, i32 1
  %34 = load i32*, i32** %33, align 8
  %35 = icmp eq i32* %32, %34
  br i1 %35, label %42, label %36

36:                                               ; preds = %25
  %37 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %27, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %27, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = bitcast i32** %28 to i64*
  %40 = bitcast %"class.std::__1::vector.3"* %0 to i64*
  %41 = bitcast i32** %29 to i64*
  br label %43

42:                                               ; preds = %204, %25
  ret void

43:                                               ; preds = %36, %204
  %44 = phi i32* [ %32, %36 ], [ %205, %204 ]
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = load i64, i64* %37, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %101, label %49

49:                                               ; preds = %43
  %50 = tail call i64 @llvm.ctpop.i64(i64 %47) #11, !range !13
  %51 = icmp ugt i64 %50, 1
  br i1 %51, label %55, label %52

52:                                               ; preds = %49
  %53 = add i64 %47, 4294967295
  %54 = and i64 %53, %46
  br label %59

55:                                               ; preds = %49
  %56 = icmp ugt i64 %47, %46
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = urem i64 %46, %47
  br label %59

59:                                               ; preds = %57, %55, %52
  %60 = phi i64 [ %54, %52 ], [ %58, %57 ], [ %46, %55 ]
  %61 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %38, align 8
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %61, i64 %60
  %63 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base.408"* %63, null
  br i1 %64, label %101, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %63, i64 0, i32 0
  %67 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %66, align 8
  %68 = icmp eq %"struct.std::__1::__hash_node_base.408"* %67, null
  br i1 %68, label %101, label %69

69:                                               ; preds = %65
  %70 = add i64 %47, -1
  br label %71

71:                                               ; preds = %92, %69
  %72 = phi %"struct.std::__1::__hash_node_base.408"* [ %67, %69 ], [ %94, %92 ]
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %72, i64 1
  %74 = bitcast %"struct.std::__1::__hash_node_base.408"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = icmp eq i64 %75, %46
  br i1 %76, label %87, label %77

77:                                               ; preds = %71
  br i1 %51, label %80, label %78

78:                                               ; preds = %77
  %79 = and i64 %75, %70
  br label %84

80:                                               ; preds = %77
  %81 = icmp ult i64 %75, %47
  br i1 %81, label %84, label %82

82:                                               ; preds = %80
  %83 = urem i64 %75, %47
  br label %84

84:                                               ; preds = %82, %80, %78
  %85 = phi i64 [ %79, %78 ], [ %83, %82 ], [ %75, %80 ]
  %86 = icmp eq i64 %85, %60
  br i1 %86, label %92, label %101

87:                                               ; preds = %71
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %72, i64 2
  %89 = bitcast %"struct.std::__1::__hash_node_base.408"* %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, %45
  br i1 %91, label %96, label %92

92:                                               ; preds = %87, %84
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %72, i64 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %93, align 8
  %95 = icmp eq %"struct.std::__1::__hash_node_base.408"* %94, null
  br i1 %95, label %101, label %71

96:                                               ; preds = %87
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %72, i64 3
  %98 = bitcast %"struct.std::__1::__hash_node_base.408"* %97 to %"class.spvtools::opt::analysis::Constant"**
  %99 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %98, align 8
  %100 = icmp eq %"class.spvtools::opt::analysis::Constant"* %99, null
  br i1 %100, label %101, label %152

101:                                              ; preds = %92, %84, %65, %43, %59, %96
  %102 = load i32*, i32** %28, align 8
  %103 = load i32*, i32** %29, align 8
  %104 = icmp ult i32* %102, %103
  %105 = ptrtoint i32* %103 to i64
  br i1 %104, label %106, label %109

106:                                              ; preds = %101
  store i32 0, i32* %102, align 4
  %107 = getelementptr inbounds i32, i32* %102, i64 1
  %108 = ptrtoint i32* %107 to i64
  store i64 %108, i64* %39, align 8
  br label %204

109:                                              ; preds = %101
  %110 = ptrtoint i32* %102 to i64
  %111 = load i64, i64* %40, align 8
  %112 = sub i64 %110, %111
  %113 = ashr exact i64 %112, 2
  %114 = add nsw i64 %113, 1
  %115 = icmp ugt i64 %114, 4611686018427387903
  br i1 %115, label %116, label %118

116:                                              ; preds = %109
  %117 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %117) #13
  unreachable

118:                                              ; preds = %109
  %119 = sub i64 %105, %111
  %120 = ashr exact i64 %119, 2
  %121 = icmp ult i64 %120, 2305843009213693951
  br i1 %121, label %122, label %130

122:                                              ; preds = %118
  %123 = ashr exact i64 %119, 1
  %124 = icmp ult i64 %123, %114
  %125 = select i1 %124, i64 %114, i64 %123
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %135, label %127

127:                                              ; preds = %122
  %128 = icmp ugt i64 %125, 4611686018427387903
  br i1 %128, label %129, label %130

129:                                              ; preds = %127
  tail call void @abort() #13
  unreachable

130:                                              ; preds = %127, %118
  %131 = phi i64 [ %125, %127 ], [ 4611686018427387903, %118 ]
  %132 = shl i64 %131, 2
  %133 = tail call i8* @_Znwm(i64 %132) #12
  %134 = bitcast i8* %133 to i32*
  br label %135

135:                                              ; preds = %130, %122
  %136 = phi i64 [ %131, %130 ], [ 0, %122 ]
  %137 = phi i8* [ %133, %130 ], [ null, %122 ]
  %138 = phi i32* [ %134, %130 ], [ null, %122 ]
  %139 = getelementptr inbounds i32, i32* %138, i64 %113
  %140 = getelementptr inbounds i32, i32* %138, i64 %136
  %141 = ptrtoint i32* %140 to i64
  store i32 0, i32* %139, align 4
  %142 = getelementptr inbounds i32, i32* %139, i64 1
  %143 = ptrtoint i32* %142 to i64
  %144 = ptrtoint i32* %138 to i64
  %145 = icmp sgt i64 %112, 0
  br i1 %145, label %146, label %148

146:                                              ; preds = %135
  %147 = inttoptr i64 %111 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %137, i8* align 4 %147, i64 %112, i1 false) #11
  br label %148

148:                                              ; preds = %146, %135
  store i64 %144, i64* %40, align 8
  store i64 %143, i64* %39, align 8
  store i64 %141, i64* %41, align 8
  %149 = icmp eq i64 %111, 0
  br i1 %149, label %204, label %150

150:                                              ; preds = %148
  %151 = inttoptr i64 %111 to i8*
  tail call void @_ZdlPv(i8* %151) #12
  br label %204

152:                                              ; preds = %96
  %153 = tail call i32 @_ZNK8spvtools3opt8analysis8Constant6GetU32Ev(%"class.spvtools::opt::analysis::Constant"* nonnull %99) #11
  %154 = load i32*, i32** %28, align 8
  %155 = load i32*, i32** %29, align 8
  %156 = icmp ult i32* %154, %155
  %157 = ptrtoint i32* %155 to i64
  br i1 %156, label %158, label %161

158:                                              ; preds = %152
  store i32 %153, i32* %154, align 4
  %159 = getelementptr inbounds i32, i32* %154, i64 1
  %160 = ptrtoint i32* %159 to i64
  store i64 %160, i64* %39, align 8
  br label %204

161:                                              ; preds = %152
  %162 = ptrtoint i32* %154 to i64
  %163 = load i64, i64* %40, align 8
  %164 = sub i64 %162, %163
  %165 = ashr exact i64 %164, 2
  %166 = add nsw i64 %165, 1
  %167 = icmp ugt i64 %166, 4611686018427387903
  br i1 %167, label %168, label %170

168:                                              ; preds = %161
  %169 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %169) #13
  unreachable

170:                                              ; preds = %161
  %171 = sub i64 %157, %163
  %172 = ashr exact i64 %171, 2
  %173 = icmp ult i64 %172, 2305843009213693951
  br i1 %173, label %174, label %182

174:                                              ; preds = %170
  %175 = ashr exact i64 %171, 1
  %176 = icmp ult i64 %175, %166
  %177 = select i1 %176, i64 %166, i64 %175
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %187, label %179

179:                                              ; preds = %174
  %180 = icmp ugt i64 %177, 4611686018427387903
  br i1 %180, label %181, label %182

181:                                              ; preds = %179
  tail call void @abort() #13
  unreachable

182:                                              ; preds = %179, %170
  %183 = phi i64 [ %177, %179 ], [ 4611686018427387903, %170 ]
  %184 = shl i64 %183, 2
  %185 = tail call i8* @_Znwm(i64 %184) #12
  %186 = bitcast i8* %185 to i32*
  br label %187

187:                                              ; preds = %182, %174
  %188 = phi i64 [ %183, %182 ], [ 0, %174 ]
  %189 = phi i8* [ %185, %182 ], [ null, %174 ]
  %190 = phi i32* [ %186, %182 ], [ null, %174 ]
  %191 = getelementptr inbounds i32, i32* %190, i64 %165
  %192 = getelementptr inbounds i32, i32* %190, i64 %188
  %193 = ptrtoint i32* %192 to i64
  store i32 %153, i32* %191, align 4
  %194 = getelementptr inbounds i32, i32* %191, i64 1
  %195 = ptrtoint i32* %194 to i64
  %196 = ptrtoint i32* %190 to i64
  %197 = icmp sgt i64 %164, 0
  br i1 %197, label %198, label %200

198:                                              ; preds = %187
  %199 = inttoptr i64 %163 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %189, i8* align 4 %199, i64 %164, i1 false) #11
  br label %200

200:                                              ; preds = %198, %187
  store i64 %196, i64* %40, align 8
  store i64 %195, i64* %39, align 8
  store i64 %193, i64* %41, align 8
  %201 = icmp eq i64 %163, 0
  br i1 %201, label %204, label %202

202:                                              ; preds = %200
  %203 = inttoptr i64 %163 to i8*
  tail call void @_ZdlPv(i8* %203) #12
  br label %204

204:                                              ; preds = %202, %200, %158, %150, %148, %106
  %205 = getelementptr inbounds i32, i32* %44, i64 1
  %206 = icmp eq i32* %205, %34
  br i1 %206, label %42, label %43
}

declare %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager13GetMemberTypeEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::vector.3"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt7MemPassD2Ev(%"class.spvtools::opt::MemPass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt7MemPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.254"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.254"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.254"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  %11 = icmp eq %"struct.std::__1::__hash_node_base.254"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.254"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.254"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %19, align 8
  %21 = icmp eq %"struct.std::__1::__hash_node_base.915"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %18, %22
  %23 = phi %"struct.std::__1::__hash_node_base.915"* [ %25, %22 ], [ %20, %18 ]
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %23, i64 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %24, align 8
  %26 = bitcast %"struct.std::__1::__hash_node_base.915"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #12
  %27 = icmp eq %"struct.std::__1::__hash_node_base.915"* %25, null
  br i1 %27, label %28, label %22

28:                                               ; preds = %22, %18
  %29 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %29, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.915"** %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"struct.std::__1::__hash_node_base.915"** %30 to i8*
  tail call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %28, %32
  %35 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.915"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %34, %38
  %39 = phi %"struct.std::__1::__hash_node_base.915"* [ %41, %38 ], [ %36, %34 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base.915"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  %43 = icmp eq %"struct.std::__1::__hash_node_base.915"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %34
  %45 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %45, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.915"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base.915"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %44, %48
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %51 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %52 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %51, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %52, i64 0, i32 1
  %54 = load void (i8*)*, void (i8*)** %53, align 8
  %55 = icmp eq void (i8*)* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  tail call void %54(i8* %58) #11
  br label %59

59:                                               ; preds = %50, %56
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt19CopyPropagateArraysD0Ev(%"class.spvtools::opt::CopyPropagateArrays"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays", %"class.spvtools::opt::CopyPropagateArrays"* %0, i64 0, i32 0
  tail call void @_ZN8spvtools3opt7MemPassD2Ev(%"class.spvtools::opt::MemPass"* %2) #11
  %3 = bitcast %"class.spvtools::opt::CopyPropagateArrays"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK8spvtools3opt19CopyPropagateArrays4nameEv(%"class.spvtools::opt::CopyPropagateArrays"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt19CopyPropagateArrays20GetPreservedAnalysesEv(%"class.spvtools::opt::CopyPropagateArrays"*) unnamed_addr #0 comdat align 2 {
  ret i32 49399
}

declare void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*, i32, i32, i32, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1013", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %7 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 2
  call void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* nonnull sret %6, %"class.spvtools::opt::InstructionList::iterator"* %8, %"class.std::__1::unique_ptr.21"* dereferenceable(8) %1) #11
  %9 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  %11 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 11
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %39, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %39, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 1
  %24 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::BasicBlock"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  store %"class.spvtools::opt::Instruction"* %10, %"class.spvtools::opt::Instruction"** %5, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 9, i32 0
  %29 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  %30 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::tuple.1013", %"class.std::__1::tuple.1013"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #11
  %32 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %28, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1013"* nonnull dereferenceable(1) %4) #11
  %33 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %32, 0
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %33, i64 3
  %35 = bitcast %"struct.std::__1::__hash_node_base.178"* %34 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  store %"class.spvtools::opt::BasicBlock"* %24, %"class.spvtools::opt::BasicBlock"** %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  %36 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %36, i64 0, i32 11
  %38 = load i32, i32* %37, align 8
  br label %39

39:                                               ; preds = %2, %17, %22, %26
  %40 = phi i32 [ %14, %2 ], [ %14, %17 ], [ %14, %22 ], [ %38, %26 ]
  %41 = phi %"class.spvtools::opt::IRContext"* [ %12, %2 ], [ %12, %17 ], [ %12, %22 ], [ %36, %26 ]
  %42 = and i32 %40, 1
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %41, i64 0, i32 6, i32 0, i32 0, i32 0
  %51 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %50, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %51, %"class.spvtools::opt::Instruction"* %10) #11
  br label %52

52:                                               ; preds = %39, %44, %49
  ret %"class.spvtools::opt::Instruction"* %10
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"* dereferenceable(48)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::Operand"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::Operand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"struct.spvtools::opt::Operand"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spvtools::opt::Operand"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %32
  %36 = ptrtoint %"struct.spvtools::opt::Operand"* %35 to i64
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 2
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.0"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #11
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.spvtools::opt::Operand"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.spvtools::opt::Operand"* [ %75, %58 ], [ %34, %31 ]
  %60 = phi %"struct.spvtools::opt::Operand"* [ %61, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.0"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %66) #11
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %61, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.spvtools::opt::Operand"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.spvtools::opt::Operand"* [ %34, %56 ], [ %75, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.spvtools::opt::Operand"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.spvtools::opt::Operand"*
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %81, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %80, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %91, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  tail call void @_ZdlPv(i8* %104) #12
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %106, label %107, label %87

107:                                              ; preds = %105, %80
  %108 = icmp eq i64 %83, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %110) #12
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %8, align 8
  store %"class.std::__1::vector.3"* %4, %"class.std::__1::vector.3"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.3"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.3"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %23, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.3"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.3"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

declare i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* sret, %"class.spvtools::opt::InstructionList::iterator"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1013"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::Instruction"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !13
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.178"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.178"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.178"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.178"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.178"* %65 to %"class.spvtools::opt::Instruction"**
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #12, !noalias !59
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !59
  %75 = load i64, i64* %74, align 8, !noalias !59
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !59
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %78, align 8, !noalias !59
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !59
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"**
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %81, align 8, !noalias !59
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !13
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #11
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #11, !range !13
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.178"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.178"* %124, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.178"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.178"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #11, !range !13
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.178"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.178"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } undef, %"struct.std::__1::__hash_node_base.178"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.178"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !13
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !13
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !13
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.174"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.178"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.178"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !62

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.178"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.178"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !13
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.178"* %36, %"struct.std::__1::__hash_node_base.178"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.178"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.178"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.178"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.178"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.178"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.178"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.178"* %82, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.178"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.178"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.178"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.178"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.178"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.178"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.178"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.178"* %80, %"struct.std::__1::__hash_node_base.178"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.178"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.178"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.178"** null, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.178"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.178"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

declare void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::tuple", align 8
  %3 = alloca %"class.std::__1::tuple.1013", align 1
  %4 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %5 = alloca %"class.std::__1::function.940", align 8
  %6 = alloca %"class.std::__1::function.1023", align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %60, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.178"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %10, %14
  %15 = phi %"struct.std::__1::__hash_node_base.178"* [ %17, %14 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %16, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base.178"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  %19 = icmp eq %"struct.std::__1::__hash_node_base.178"* %17, null
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %10
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = add i64 %22, -1
  %27 = and i64 %22, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %22, %27
  br label %43

31:                                               ; preds = %43, %24
  %32 = phi i64 [ 0, %24 ], [ %57, %43 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !63

42:                                               ; preds = %31, %34, %20
  store i64 0, i64* %7, align 8
  br label %60

43:                                               ; preds = %43, %29
  %44 = phi i64 [ 0, %29 ], [ %57, %43 ]
  %45 = phi i64 [ %30, %29 ], [ %58, %43 ]
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %44
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %44, 1
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %44, 2
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = or i64 %44, 3
  %55 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %55, i64 %54
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %56, align 8
  %57 = add nuw i64 %44, 4
  %58 = add i64 %45, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %31, label %43

60:                                               ; preds = %1, %42
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %61, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 0
  %64 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %63, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 1
  %66 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %65, align 8
  %67 = icmp eq %"class.std::__1::unique_ptr.28"* %64, %66
  br i1 %67, label %88, label %68

68:                                               ; preds = %60
  %69 = bitcast %"class.std::__1::function.1023"* %6 to i8*
  %70 = getelementptr inbounds %"class.std::__1::function.1023", %"class.std::__1::function.1023"* %6, i64 0, i32 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.std::__1::function.1023", %"class.std::__1::function.1023"* %6, i64 0, i32 0, i32 2
  %72 = bitcast %"class.std::__1::function.1023"* %6 to %"class.spvtools::opt::IRContext"**
  %73 = getelementptr inbounds %"class.std::__1::function.1023", %"class.std::__1::function.1023"* %6, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast [8 x i8]* %73 to %"class.spvtools::opt::BasicBlock"**
  %75 = bitcast %"class.std::__1::function.940"* %5 to i8*
  %76 = ptrtoint %"class.std::__1::function.1023"* %6 to i64
  %77 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %5, i64 0, i32 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %5, i64 0, i32 0, i32 2
  %79 = bitcast %"class.std::__1::function.940"* %5 to i64*
  %80 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %5, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %5, i64 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::function.1023", %"class.std::__1::function.1023"* %6, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  %84 = bitcast %"class.std::__1::tuple"* %2 to i8*
  %85 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::tuple.1013", %"class.std::__1::tuple.1013"* %3, i64 0, i32 0
  %87 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0
  br label %92

88:                                               ; preds = %101, %60
  %89 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %90 = load i32, i32* %89, align 8
  %91 = or i32 %90, 2
  store i32 %91, i32* %89, align 8
  ret void

92:                                               ; preds = %68, %101
  %93 = phi %"class.std::__1::unique_ptr.28"* [ %64, %68 ], [ %102, %101 ]
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %94, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 0
  %97 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %96, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 1
  %99 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %98, align 8
  %100 = icmp eq %"class.std::__1::unique_ptr.40"* %97, %99
  br i1 %100, label %101, label %104

101:                                              ; preds = %151, %92
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 1
  %103 = icmp eq %"class.std::__1::unique_ptr.28"* %102, %66
  br i1 %103, label %88, label %92

104:                                              ; preds = %92, %151
  %105 = phi %"class.std::__1::unique_ptr.40"* [ %152, %151 ], [ %97, %92 ]
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %106, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #11
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %70, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %71, align 8
  store %"class.spvtools::opt::IRContext"* %0, %"class.spvtools::opt::IRContext"** %72, align 8
  store %"class.spvtools::opt::BasicBlock"* %107, %"class.spvtools::opt::BasicBlock"** %74, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #11
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %78, align 8
  store i64 %76, i64* %79, align 8
  %108 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %108, align 8
  %110 = icmp eq %"class.spvtools::opt::Instruction"* %109, null
  br i1 %110, label %117, label %111

111:                                              ; preds = %104
  %112 = ptrtoint %"class.spvtools::opt::BasicBlock"* %107 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83)
  store %"class.spvtools::opt::Instruction"* %109, %"class.spvtools::opt::Instruction"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #11
  store %"class.spvtools::opt::Instruction"** %4, %"class.spvtools::opt::Instruction"*** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %86) #11
  %113 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %87, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %4, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.1013"* nonnull dereferenceable(1) %3) #11
  %114 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %113, 0
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %114, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #11
  %116 = bitcast %"struct.std::__1::__hash_node_base.178"* %115 to i64*
  store i64 %112, i64* %116, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83)
  br label %117

117:                                              ; preds = %111, %104
  %118 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %119 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %118, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %119, i64 0, i32 0, i32 3
  %121 = load i8, i8* %120, align 8, !range !2
  %122 = icmp ne i8 %121, 0
  %123 = icmp eq %"class.spvtools::opt::Instruction"* %119, null
  %124 = or i1 %123, %122
  br i1 %124, label %137, label %125

125:                                              ; preds = %117, %128
  %126 = phi %"class.spvtools::opt::Instruction"* [ %134, %128 ], [ %119, %117 ]
  %127 = icmp eq %"class.spvtools::opt::Instruction"* %126, null
  br i1 %127, label %137, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %126, i64 0, i32 0, i32 1
  %130 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %129, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %130, i64 0, i32 0, i32 3
  %132 = load i8, i8* %131, align 8, !range !2
  %133 = icmp eq i8 %132, 0
  %134 = select i1 %133, %"class.spvtools::opt::Instruction"* %130, %"class.spvtools::opt::Instruction"* null
  %135 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  %136 = call zeroext i1 %135(%"union.std::__1::__function::__policy_storage"* nonnull %80, %"class.spvtools::opt::Instruction"* nonnull %126) #11
  br i1 %136, label %125, label %137

137:                                              ; preds = %128, %125, %117
  %138 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %78, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %138, i64 0, i32 1
  %140 = load void (i8*)*, void (i8*)** %139, align 8
  %141 = icmp eq void (i8*)* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %137
  %143 = load i8*, i8** %81, align 8
  call void %140(i8* %143) #11
  br label %144

144:                                              ; preds = %137, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #11
  %145 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %71, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %145, i64 0, i32 1
  %147 = load void (i8*)*, void (i8*)** %146, align 8
  %148 = icmp eq void (i8*)* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %144
  %150 = load i8*, i8** %82, align 8
  call void %147(i8* %150) #11
  br label %151

151:                                              ; preds = %144, %149
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #11
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 1
  %153 = icmp eq %"class.std::__1::unique_ptr.40"* %152, %99
  br i1 %153, label %101, label %104
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1023"**
  %4 = load %"class.std::__1::function.1023"*, %"class.std::__1::function.1023"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1023", %"class.std::__1::function.1023"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1023", %"class.std::__1::function.1023"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #11
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1013", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %7 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = bitcast %"class.spvtools::opt::Instruction"** %5 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::IRContext"**
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %12 = bitcast [8 x i8]* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 9, i32 0
  %15 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.1013", %"class.std::__1::tuple.1013"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #11
  %18 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %14, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1013"* nonnull dereferenceable(1) %4) #11
  %19 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %18, 0
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %19, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  %21 = bitcast %"struct.std::__1::__hash_node_base.178"* %20 to i64*
  store i64 %13, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret void
}

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.96"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.96"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.96"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.96"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.96"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  %23 = icmp eq %"struct.std::__1::__hash_node_base.96"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.96"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.96"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node"* %34) #11
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

declare void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::IRContext"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::vector.458", %"class.std::__1::vector.458"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.460"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.460"* %4 to i8*
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.460"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.std::__1::unique_ptr.460"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  %16 = icmp eq %"class.spvtools::opt::analysis::Constant"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.spvtools::opt::analysis::Constant"* %15 to void (%"class.spvtools::opt::analysis::Constant"*)***
  %19 = load void (%"class.spvtools::opt::analysis::Constant"*)**, void (%"class.spvtools::opt::analysis::Constant"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %19, i64 1
  %21 = load void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %20, align 8
  tail call void %21(%"class.spvtools::opt::analysis::Constant"* nonnull %15) #11
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"class.std::__1::unique_ptr.460"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.458"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr.460"* %4, %"class.std::__1::unique_ptr.460"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.441"* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %29, %33
  %34 = phi %"struct.std::__1::__hash_node_base.441"* [ %36, %33 ], [ %31, %29 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %34, i64 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %35, align 8
  %37 = bitcast %"struct.std::__1::__hash_node_base.441"* %34 to i8*
  tail call void @_ZdlPv(i8* %37) #12
  %38 = icmp eq %"struct.std::__1::__hash_node_base.441"* %36, null
  br i1 %38, label %39, label %33

39:                                               ; preds = %33, %29
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.441"**, %"struct.std::__1::__hash_node_base.441"*** %40, align 8
  store %"struct.std::__1::__hash_node_base.441"** null, %"struct.std::__1::__hash_node_base.441"*** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.441"** %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast %"struct.std::__1::__hash_node_base.441"** %41 to i8*
  tail call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %39, %43
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0
  %47 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %48 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.std::__1::__tree_node.1043"**
  %49 = load %"class.std::__1::__tree_node.1043"*, %"class.std::__1::__tree_node.1043"** %48, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %46, %"class.std::__1::__tree_node.1043"* %49) #11
  %50 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %50, align 8
  %52 = icmp eq %"struct.std::__1::__hash_node_base.408"* %51, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %45, %53
  %54 = phi %"struct.std::__1::__hash_node_base.408"* [ %56, %53 ], [ %51, %45 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %54, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %55, align 8
  %57 = bitcast %"struct.std::__1::__hash_node_base.408"* %54 to i8*
  tail call void @_ZdlPv(i8* %57) #12
  %58 = icmp eq %"struct.std::__1::__hash_node_base.408"* %56, null
  br i1 %58, label %59, label %53

59:                                               ; preds = %53, %45
  %60 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %60, align 8
  store %"struct.std::__1::__hash_node_base.408"** null, %"struct.std::__1::__hash_node_base.408"*** %60, align 8
  %62 = icmp eq %"struct.std::__1::__hash_node_base.408"** %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %59
  %64 = bitcast %"struct.std::__1::__hash_node_base.408"** %61 to i8*
  tail call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %59, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"*, %"class.std::__1::__tree_node.1043"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1043"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1043"* %1 to %"class.std::__1::__tree_node.1043"**
  %6 = load %"class.std::__1::__tree_node.1043"*, %"class.std::__1::__tree_node.1043"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %0, %"class.std::__1::__tree_node.1043"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1043", %"class.std::__1::__tree_node.1043"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1043"**
  %9 = load %"class.std::__1::__tree_node.1043"*, %"class.std::__1::__tree_node.1043"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %0, %"class.std::__1::__tree_node.1043"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node.1043"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4TypeD0Ev(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Void"* @_ZN8spvtools3opt8analysis4Type6AsVoidEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Void"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Void"* @_ZNK8spvtools3opt8analysis4Type6AsVoidEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Void"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Bool"* @_ZN8spvtools3opt8analysis4Type6AsBoolEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Bool"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Bool"* @_ZNK8spvtools3opt8analysis4Type6AsBoolEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Bool"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Integer"* @_ZN8spvtools3opt8analysis4Type9AsIntegerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Integer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Integer"* @_ZNK8spvtools3opt8analysis4Type9AsIntegerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Integer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Float"* @_ZN8spvtools3opt8analysis4Type7AsFloatEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Float"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Float"* @_ZNK8spvtools3opt8analysis4Type7AsFloatEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Float"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Vector"* @_ZN8spvtools3opt8analysis4Type8AsVectorEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Vector"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Vector"* @_ZNK8spvtools3opt8analysis4Type8AsVectorEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Vector"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Matrix"* @_ZN8spvtools3opt8analysis4Type8AsMatrixEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Matrix"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Matrix"* @_ZNK8spvtools3opt8analysis4Type8AsMatrixEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Matrix"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Image"* @_ZN8spvtools3opt8analysis4Type7AsImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Image"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Image"* @_ZNK8spvtools3opt8analysis4Type7AsImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Image"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Sampler"* @_ZN8spvtools3opt8analysis4Type9AsSamplerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Sampler"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Sampler"* @_ZNK8spvtools3opt8analysis4Type9AsSamplerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Sampler"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::SampledImage"* @_ZN8spvtools3opt8analysis4Type14AsSampledImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::SampledImage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::SampledImage"* @_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::SampledImage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Array"* @_ZN8spvtools3opt8analysis4Type7AsArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Array"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Array"* @_ZNK8spvtools3opt8analysis4Type7AsArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Array"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RuntimeArray"* @_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RuntimeArray"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RuntimeArray"* @_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RuntimeArray"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Struct"* @_ZN8spvtools3opt8analysis4Type8AsStructEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Struct"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Struct"* @_ZNK8spvtools3opt8analysis4Type8AsStructEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Struct"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Opaque"* @_ZN8spvtools3opt8analysis4Type8AsOpaqueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Opaque"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Opaque"* @_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Opaque"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pointer"* @_ZN8spvtools3opt8analysis4Type9AsPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pointer"* @_ZNK8spvtools3opt8analysis4Type9AsPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Function"* @_ZN8spvtools3opt8analysis4Type10AsFunctionEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Function"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Function"* @_ZNK8spvtools3opt8analysis4Type10AsFunctionEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Function"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Event"* @_ZN8spvtools3opt8analysis4Type7AsEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Event"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Event"* @_ZNK8spvtools3opt8analysis4Type7AsEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Event"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::DeviceEvent"* @_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::DeviceEvent"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::DeviceEvent"* @_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::DeviceEvent"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ReserveId"* @_ZN8spvtools3opt8analysis4Type11AsReserveIdEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ReserveId"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ReserveId"* @_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ReserveId"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Queue"* @_ZN8spvtools3opt8analysis4Type7AsQueueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Queue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Queue"* @_ZNK8spvtools3opt8analysis4Type7AsQueueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Queue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pipe"* @_ZN8spvtools3opt8analysis4Type6AsPipeEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pipe"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pipe"* @_ZNK8spvtools3opt8analysis4Type6AsPipeEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pipe"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ForwardPointer"* @_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ForwardPointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ForwardPointer"* @_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ForwardPointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::PipeStorage"* @_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::PipeStorage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::PipeStorage"* @_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::PipeStorage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::NamedBarrier"* @_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::NamedBarrier"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::NamedBarrier"* @_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::NamedBarrier"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::AccelerationStructureNV"* @_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::AccelerationStructureNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::AccelerationStructureNV"* @_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::AccelerationStructureNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::CooperativeMatrixNV"* @_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::CooperativeMatrixNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::CooperativeMatrixNV"* @_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::CooperativeMatrixNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RayQueryKHR"* @_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RayQueryKHR"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RayQueryKHR"* @_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RayQueryKHR"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %5, %3
  br i1 %6, label %20, label %7

7:                                                ; preds = %1, %18
  %8 = phi %"class.std::__1::vector.3"* [ %9, %18 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 -1
  %10 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = icmp eq i32* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %7
  %14 = ptrtoint i32* %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 -1, i32 0, i32 1
  %16 = bitcast i32** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast i32* %11 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  br label %18

18:                                               ; preds = %13, %7
  %19 = icmp eq %"class.std::__1::vector.3"* %9, %3
  br i1 %19, label %20, label %7

20:                                               ; preds = %18, %1
  store %"class.std::__1::vector.3"* %3, %"class.std::__1::vector.3"** %4, align 8
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.std::__1::function"* dereferenceable(32), %"class.spvtools::opt::IRContext"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.571"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.571"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.571", %"struct.std::__1::__hash_node_base.571"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.571"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  %10 = icmp eq %"struct.std::__1::__hash_node_base.571"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.571"**, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.571"** null, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.571"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.571"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.488"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17, %21
  %22 = phi %"struct.std::__1::__hash_node_base.488"* [ %24, %21 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %23, align 8
  %25 = bitcast %"struct.std::__1::__hash_node_base.488"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #12
  %26 = icmp eq %"struct.std::__1::__hash_node_base.488"* %24, null
  br i1 %26, label %27, label %21

27:                                               ; preds = %21, %17
  %28 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.488"** %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"struct.std::__1::__hash_node_base.488"** %29 to i8*
  tail call void @_ZdlPv(i8* %32) #12
  br label %33

33:                                               ; preds = %27, %31
  %34 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5
  %35 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %35, align 8
  %37 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, null
  br i1 %37, label %61, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36 to i8*
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5, i32 0, i32 1
  %41 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  %42 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %41, %36
  br i1 %42, label %59, label %43

43:                                               ; preds = %38, %54
  %44 = phi %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* [ %45, %54 ], [ %41, %38 ]
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %46, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %46, align 8
  %48 = icmp eq %"class.spvtools::opt::analysis::Type"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.spvtools::opt::analysis::Type"* %47 to void (%"class.spvtools::opt::analysis::Type"*)***
  %51 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %51, i64 1
  %53 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %52, align 8
  tail call void %53(%"class.spvtools::opt::analysis::Type"* nonnull %47) #11
  br label %54

54:                                               ; preds = %49, %43
  %55 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %45, %36
  br i1 %55, label %56, label %43

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector.553"* %34 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %38
  %60 = phi i8* [ %58, %56 ], [ %39, %38 ]
  store %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  tail call void @_ZdlPv(i8* %60) #12
  br label %61

61:                                               ; preds = %33, %59
  %62 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base.536"* %63, null
  br i1 %64, label %81, label %65

65:                                               ; preds = %61, %78
  %66 = phi %"struct.std::__1::__hash_node_base.536"* [ %68, %78 ], [ %63, %61 ]
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.536"* %69 to %"class.spvtools::opt::analysis::Type"**
  %71 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %70, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %70, align 8
  %72 = icmp eq %"class.spvtools::opt::analysis::Type"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %65
  %74 = bitcast %"class.spvtools::opt::analysis::Type"* %71 to void (%"class.spvtools::opt::analysis::Type"*)***
  %75 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %75, i64 1
  %77 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %76, align 8
  tail call void %77(%"class.spvtools::opt::analysis::Type"* nonnull %71) #11
  br label %78

78:                                               ; preds = %73, %65
  %79 = bitcast %"struct.std::__1::__hash_node_base.536"* %66 to i8*
  tail call void @_ZdlPv(i8* %79) #12
  %80 = icmp eq %"struct.std::__1::__hash_node_base.536"* %68, null
  br i1 %80, label %81, label %65

81:                                               ; preds = %78, %61
  %82 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.536"**, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  store %"struct.std::__1::__hash_node_base.536"** null, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.536"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = bitcast %"struct.std::__1::__hash_node_base.536"** %83 to i8*
  tail call void @_ZdlPv(i8* %86) #12
  br label %87

87:                                               ; preds = %81, %85
  %88 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %88, align 8
  %90 = icmp eq %"struct.std::__1::__hash_node_base.512"* %89, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %87, %91
  %92 = phi %"struct.std::__1::__hash_node_base.512"* [ %94, %91 ], [ %89, %87 ]
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.512", %"struct.std::__1::__hash_node_base.512"* %92, i64 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %93, align 8
  %95 = bitcast %"struct.std::__1::__hash_node_base.512"* %92 to i8*
  tail call void @_ZdlPv(i8* %95) #12
  %96 = icmp eq %"struct.std::__1::__hash_node_base.512"* %94, null
  br i1 %96, label %97, label %91

97:                                               ; preds = %91, %87
  %98 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.512"**, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  store %"struct.std::__1::__hash_node_base.512"** null, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.512"** %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = bitcast %"struct.std::__1::__hash_node_base.512"** %99 to i8*
  tail call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %97, %101
  %104 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base.488"* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %103, %107
  %108 = phi %"struct.std::__1::__hash_node_base.488"* [ %110, %107 ], [ %105, %103 ]
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %108, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base.488"* %108 to i8*
  tail call void @_ZdlPv(i8* %111) #12
  %112 = icmp eq %"struct.std::__1::__hash_node_base.488"* %110, null
  br i1 %112, label %113, label %107

113:                                              ; preds = %107, %103
  %114 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.488"** %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = bitcast %"struct.std::__1::__hash_node_base.488"** %115 to i8*
  tail call void @_ZdlPv(i8* %118) #12
  br label %119

119:                                              ; preds = %113, %117
  ret void
}

declare void @_ZN8spvtools3opt8analysis16DebugInfoManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::IRContext"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev(%"class.spvtools::opt::analysis::DebugInfoManager"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.601"* %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %1, %26
  %6 = phi %"struct.std::__1::__hash_node_base.601"* [ %8, %26 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %6, i64 5
  %10 = bitcast %"struct.std::__1::__hash_node_base.601"* %9 to %"struct.std::__1::__hash_node_base.1068"**
  %11 = load %"struct.std::__1::__hash_node_base.1068"*, %"struct.std::__1::__hash_node_base.1068"** %10, align 8
  %12 = icmp eq %"struct.std::__1::__hash_node_base.1068"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %5, %13
  %14 = phi %"struct.std::__1::__hash_node_base.1068"* [ %16, %13 ], [ %11, %5 ]
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1068", %"struct.std::__1::__hash_node_base.1068"* %14, i64 0, i32 0
  %16 = load %"struct.std::__1::__hash_node_base.1068"*, %"struct.std::__1::__hash_node_base.1068"** %15, align 8
  %17 = bitcast %"struct.std::__1::__hash_node_base.1068"* %14 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  %18 = icmp eq %"struct.std::__1::__hash_node_base.1068"* %16, null
  br i1 %18, label %19, label %13

19:                                               ; preds = %13, %5
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %6, i64 3
  %21 = bitcast %"struct.std::__1::__hash_node_base.601"* %20 to %"struct.std::__1::__hash_node_base.1068"***
  %22 = load %"struct.std::__1::__hash_node_base.1068"**, %"struct.std::__1::__hash_node_base.1068"*** %21, align 8
  store %"struct.std::__1::__hash_node_base.1068"** null, %"struct.std::__1::__hash_node_base.1068"*** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.1068"** %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = bitcast %"struct.std::__1::__hash_node_base.1068"** %22 to i8*
  tail call void @_ZdlPv(i8* %25) #12
  br label %26

26:                                               ; preds = %24, %19
  %27 = bitcast %"struct.std::__1::__hash_node_base.601"* %6 to i8*
  tail call void @_ZdlPv(i8* %27) #12
  %28 = icmp eq %"struct.std::__1::__hash_node_base.601"* %8, null
  br i1 %28, label %29, label %5

29:                                               ; preds = %26, %1
  %30 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.601"**, %"struct.std::__1::__hash_node_base.601"*** %30, align 8
  store %"struct.std::__1::__hash_node_base.601"** null, %"struct.std::__1::__hash_node_base.601"*** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.601"** %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast %"struct.std::__1::__hash_node_base.601"** %31 to i8*
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %29, %33
  %36 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.601"* %37, null
  br i1 %38, label %63, label %39

39:                                               ; preds = %35, %60
  %40 = phi %"struct.std::__1::__hash_node_base.601"* [ %42, %60 ], [ %37, %35 ]
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %40, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %40, i64 5
  %44 = bitcast %"struct.std::__1::__hash_node_base.601"* %43 to %"struct.std::__1::__hash_node_base.1068"**
  %45 = load %"struct.std::__1::__hash_node_base.1068"*, %"struct.std::__1::__hash_node_base.1068"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.1068"* %45, null
  br i1 %46, label %53, label %47

47:                                               ; preds = %39, %47
  %48 = phi %"struct.std::__1::__hash_node_base.1068"* [ %50, %47 ], [ %45, %39 ]
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1068", %"struct.std::__1::__hash_node_base.1068"* %48, i64 0, i32 0
  %50 = load %"struct.std::__1::__hash_node_base.1068"*, %"struct.std::__1::__hash_node_base.1068"** %49, align 8
  %51 = bitcast %"struct.std::__1::__hash_node_base.1068"* %48 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  %52 = icmp eq %"struct.std::__1::__hash_node_base.1068"* %50, null
  br i1 %52, label %53, label %47

53:                                               ; preds = %47, %39
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %40, i64 3
  %55 = bitcast %"struct.std::__1::__hash_node_base.601"* %54 to %"struct.std::__1::__hash_node_base.1068"***
  %56 = load %"struct.std::__1::__hash_node_base.1068"**, %"struct.std::__1::__hash_node_base.1068"*** %55, align 8
  store %"struct.std::__1::__hash_node_base.1068"** null, %"struct.std::__1::__hash_node_base.1068"*** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.1068"** %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %53
  %59 = bitcast %"struct.std::__1::__hash_node_base.1068"** %56 to i8*
  tail call void @_ZdlPv(i8* %59) #12
  br label %60

60:                                               ; preds = %58, %53
  %61 = bitcast %"struct.std::__1::__hash_node_base.601"* %40 to i8*
  tail call void @_ZdlPv(i8* %61) #12
  %62 = icmp eq %"struct.std::__1::__hash_node_base.601"* %42, null
  br i1 %62, label %63, label %39

63:                                               ; preds = %60, %35
  %64 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.601"**, %"struct.std::__1::__hash_node_base.601"*** %64, align 8
  store %"struct.std::__1::__hash_node_base.601"** null, %"struct.std::__1::__hash_node_base.601"*** %64, align 8
  %66 = icmp eq %"struct.std::__1::__hash_node_base.601"** %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %63
  %68 = bitcast %"struct.std::__1::__hash_node_base.601"** %65 to i8*
  tail call void @_ZdlPv(i8* %68) #12
  br label %69

69:                                               ; preds = %63, %67
  %70 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %71 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base.601"* %71, null
  br i1 %72, label %97, label %73

73:                                               ; preds = %69, %94
  %74 = phi %"struct.std::__1::__hash_node_base.601"* [ %76, %94 ], [ %71, %69 ]
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %74, i64 0, i32 0
  %76 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %74, i64 5
  %78 = bitcast %"struct.std::__1::__hash_node_base.601"* %77 to %"struct.std::__1::__hash_node_base.1068"**
  %79 = load %"struct.std::__1::__hash_node_base.1068"*, %"struct.std::__1::__hash_node_base.1068"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base.1068"* %79, null
  br i1 %80, label %87, label %81

81:                                               ; preds = %73, %81
  %82 = phi %"struct.std::__1::__hash_node_base.1068"* [ %84, %81 ], [ %79, %73 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1068", %"struct.std::__1::__hash_node_base.1068"* %82, i64 0, i32 0
  %84 = load %"struct.std::__1::__hash_node_base.1068"*, %"struct.std::__1::__hash_node_base.1068"** %83, align 8
  %85 = bitcast %"struct.std::__1::__hash_node_base.1068"* %82 to i8*
  tail call void @_ZdlPv(i8* %85) #12
  %86 = icmp eq %"struct.std::__1::__hash_node_base.1068"* %84, null
  br i1 %86, label %87, label %81

87:                                               ; preds = %81, %73
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %74, i64 3
  %89 = bitcast %"struct.std::__1::__hash_node_base.601"* %88 to %"struct.std::__1::__hash_node_base.1068"***
  %90 = load %"struct.std::__1::__hash_node_base.1068"**, %"struct.std::__1::__hash_node_base.1068"*** %89, align 8
  store %"struct.std::__1::__hash_node_base.1068"** null, %"struct.std::__1::__hash_node_base.1068"*** %89, align 8
  %91 = icmp eq %"struct.std::__1::__hash_node_base.1068"** %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %87
  %93 = bitcast %"struct.std::__1::__hash_node_base.1068"** %90 to i8*
  tail call void @_ZdlPv(i8* %93) #12
  br label %94

94:                                               ; preds = %92, %87
  %95 = bitcast %"struct.std::__1::__hash_node_base.601"* %74 to i8*
  tail call void @_ZdlPv(i8* %95) #12
  %96 = icmp eq %"struct.std::__1::__hash_node_base.601"* %76, null
  br i1 %96, label %97, label %73

97:                                               ; preds = %94, %69
  %98 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.601"**, %"struct.std::__1::__hash_node_base.601"*** %98, align 8
  store %"struct.std::__1::__hash_node_base.601"** null, %"struct.std::__1::__hash_node_base.601"*** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.601"** %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = bitcast %"struct.std::__1::__hash_node_base.601"** %99 to i8*
  tail call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %97, %101
  %104 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base"* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %103, %107
  %108 = phi %"struct.std::__1::__hash_node_base"* [ %110, %107 ], [ %105, %103 ]
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %108, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %108 to i8*
  tail call void @_ZdlPv(i8* %111) #12
  %112 = icmp eq %"struct.std::__1::__hash_node_base"* %110, null
  br i1 %112, label %113, label %107

113:                                              ; preds = %107, %103
  %114 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %114, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"** %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = bitcast %"struct.std::__1::__hash_node_base"** %115 to i8*
  tail call void @_ZdlPv(i8* %118) #12
  br label %119

119:                                              ; preds = %113, %117
  %120 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %121 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base"* %121, null
  br i1 %122, label %129, label %123

123:                                              ; preds = %119, %123
  %124 = phi %"struct.std::__1::__hash_node_base"* [ %126, %123 ], [ %121, %119 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %124, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = bitcast %"struct.std::__1::__hash_node_base"* %124 to i8*
  tail call void @_ZdlPv(i8* %127) #12
  %128 = icmp eq %"struct.std::__1::__hash_node_base"* %126, null
  br i1 %128, label %129, label %123

129:                                              ; preds = %123, %119
  %130 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %130, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %130, align 8
  %132 = icmp eq %"struct.std::__1::__hash_node_base"** %131, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %129
  %134 = bitcast %"struct.std::__1::__hash_node_base"** %131 to i8*
  tail call void @_ZdlPv(i8* %134) #12
  br label %135

135:                                              ; preds = %129, %133
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt7MemPassD0Ev(%"class.spvtools::opt::MemPass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD0Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNKS3_19CopyPropagateArrays20FindStoreInstructionEPKS4_E3$_0S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 62
  br i1 %5, label %6, label %39

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  %13 = select i1 %12, i32 1, i32 2
  %14 = xor i1 %12, true
  %15 = zext i1 %14 to i32
  %16 = select i1 %9, i32 %15, i32 %13
  %17 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %16) #11
  %18 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %19 = bitcast [8 x i8]* %18 to %"class.spvtools::opt::Instruction"**
  %20 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %19, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %20, i64 0, i32 4
  %22 = load i8, i8* %21, align 1, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %6
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %20, i64 0, i32 3
  %26 = load i8, i8* %25, align 4, !range !2
  %27 = zext i8 %26 to i32
  %28 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %20, i32 %27) #11
  br label %29

29:                                               ; preds = %24, %6
  %30 = phi i32 [ %28, %24 ], [ 0, %6 ]
  %31 = icmp eq i32 %17, %30
  br i1 %31, label %32, label %39

32:                                               ; preds = %29
  %33 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::Instruction"***
  %34 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %33, align 8
  %35 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %34, align 8
  %36 = icmp eq %"class.spvtools::opt::Instruction"* %35, null
  br i1 %36, label %37, label %38

37:                                               ; preds = %32
  store %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::Instruction"** %34, align 8
  br label %39

38:                                               ; preds = %32
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %34, align 8
  br label %39

39:                                               ; preds = %2, %29, %37, %38
  %40 = phi i1 [ false, %38 ], [ true, %37 ], [ true, %29 ], [ true, %2 ]
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_19CopyPropagateArrays11HasNoStoresES5_E3$_1S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %9 [
    i32 61, label %20
    i32 65, label %5
  ]

5:                                                ; preds = %2
  %6 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::CopyPropagateArrays"**
  %7 = load %"class.spvtools::opt::CopyPropagateArrays"*, %"class.spvtools::opt::CopyPropagateArrays"** %6, align 8
  %8 = tail call zeroext i1 @_ZN8spvtools3opt19CopyPropagateArrays11HasNoStoresEPNS0_11InstructionE(%"class.spvtools::opt::CopyPropagateArrays"* %7, %"class.spvtools::opt::Instruction"* %1) #11
  br label %20

9:                                                ; preds = %2
  %10 = tail call zeroext i1 @_Z21spvOpcodeIsDecoration6SpvOp_(i32 %4) #11
  br i1 %10, label %20, label %11

11:                                               ; preds = %9
  %12 = load i32, i32* %3, align 8
  %13 = add i32 %12, -5
  %14 = icmp ult i32 %13, 58
  br i1 %14, label %15, label %20

15:                                               ; preds = %11
  %16 = zext i32 %13 to i58
  %17 = lshr i58 36028797018963969, %16
  %18 = and i58 %17, 1
  %19 = icmp ne i58 %18, 0
  ret i1 %19

20:                                               ; preds = %11, %2, %5, %9
  %21 = phi i1 [ %8, %5 ], [ true, %2 ], [ true, %9 ], [ false, %11 ]
  ret i1 %21
}

declare zeroext i1 @_Z21spvOpcodeIsDecoration6SpvOp_(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_19CopyPropagateArrays22HasValidReferencesOnlyES5_S5_E3$_2S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1101"**
  %4 = load %"class.std::__1::__function::__default_alloc_func.1101"*, %"class.std::__1::__function::__default_alloc_func.1101"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %20 [
    i32 61, label %7
    i32 60, label %7
    i32 65, label %14
  ]

7:                                                ; preds = %2, %2
  %8 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1101", %"class.std::__1::__function::__default_alloc_func.1101"* %4, i64 0, i32 0, i32 2
  %9 = bitcast %"class.spvtools::opt::DominatorAnalysis"** %8 to %"class.spvtools::opt::DominatorAnalysisBase"**
  %10 = load %"class.spvtools::opt::DominatorAnalysisBase"*, %"class.spvtools::opt::DominatorAnalysisBase"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1101", %"class.std::__1::__function::__default_alloc_func.1101"* %4, i64 0, i32 0, i32 1
  %12 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %11, align 8
  %13 = tail call zeroext i1 @_ZNK8spvtools3opt21DominatorAnalysisBase9DominatesEPNS0_11InstructionES3_(%"class.spvtools::opt::DominatorAnalysisBase"* %10, %"class.spvtools::opt::Instruction"* %12, %"class.spvtools::opt::Instruction"* %1) #11
  br label %60

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1101", %"class.std::__1::__function::__default_alloc_func.1101"* %4, i64 0, i32 0, i32 0
  %16 = load %"class.spvtools::opt::CopyPropagateArrays"*, %"class.spvtools::opt::CopyPropagateArrays"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1101", %"class.std::__1::__function::__default_alloc_func.1101"* %4, i64 0, i32 0, i32 1
  %18 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %19 = tail call zeroext i1 @_ZN8spvtools3opt19CopyPropagateArrays22HasValidReferencesOnlyEPNS0_11InstructionES3_(%"class.spvtools::opt::CopyPropagateArrays"* %16, %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::Instruction"* %18) #11
  br label %60

20:                                               ; preds = %2
  %21 = tail call zeroext i1 @_Z21spvOpcodeIsDecoration6SpvOp_(i32 %6) #11
  br i1 %21, label %60, label %22

22:                                               ; preds = %20
  %23 = load i32, i32* %5, align 8
  switch i32 %23, label %56 [
    i32 5, label %60
    i32 62, label %24
  ]

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1101", %"class.std::__1::__function::__default_alloc_func.1101"* %4, i64 0, i32 0, i32 3
  %26 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %26, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 59
  br i1 %29, label %30, label %60

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1101", %"class.std::__1::__function::__default_alloc_func.1101"* %4, i64 0, i32 0, i32 1
  %32 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %31, align 8
  %33 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %32, i64 0, i32 3
  %34 = load i8, i8* %33, align 4, !range !2
  %35 = icmp eq i8 %34, 0
  %36 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %32, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %38, i32 1, i32 2
  %40 = xor i1 %38, true
  %41 = zext i1 %40 to i32
  %42 = select i1 %35, i32 %41, i32 %39
  %43 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %32, i32 %42) #11
  %44 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %25, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %44, i64 0, i32 4
  %46 = load i8, i8* %45, align 1, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %30
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %44, i64 0, i32 3
  %50 = load i8, i8* %49, align 4, !range !2
  %51 = zext i8 %50 to i32
  %52 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %44, i32 %51) #11
  br label %53

53:                                               ; preds = %48, %30
  %54 = phi i32 [ %52, %48 ], [ 0, %30 ]
  %55 = icmp eq i32 %43, %54
  br label %60

56:                                               ; preds = %22
  %57 = tail call i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"* %1) #11
  %58 = or i32 %57, 1
  %59 = icmp eq i32 %58, 29
  br label %60

60:                                               ; preds = %7, %14, %20, %22, %24, %53, %56
  %61 = phi i1 [ %13, %7 ], [ %19, %14 ], [ true, %22 ], [ true, %20 ], [ false, %24 ], [ %55, %53 ], [ %59, %56 ]
  ret i1 %61
}

declare zeroext i1 @_ZNK8spvtools3opt21DominatorAnalysisBase9DominatesEPNS0_11InstructionES3_(%"class.spvtools::opt::DominatorAnalysisBase"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt19CopyPropagateArrays22HasValidReferencesOnlyEPNS5_11InstructionES8_E3$_2FbS8_EEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #12, !noalias !64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 32, i1 false) #11
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt19CopyPropagateArrays22HasValidReferencesOnlyEPNS5_11InstructionES8_E3$_2FbS8_EEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEjEE11__call_implINS0_20__default_alloc_funcIZNS3_19CopyPropagateArrays13CanUpdateUsesES5_jE3$_3S6_EEEEbPKNS0_16__policy_storageES5_j"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*, i32) #0 align 2 {
  %4 = alloca %"class.std::__1::vector.3", align 8
  %5 = alloca %"class.spvtools::opt::analysis::Pointer", align 8
  %6 = alloca %"class.std::__1::vector.3", align 8
  %7 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1103"**
  %8 = load %"class.std::__1::__function::__default_alloc_func.1103"*, %"class.std::__1::__function::__default_alloc_func.1103"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1103", %"class.std::__1::__function::__default_alloc_func.1103"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.spvtools::opt::CopyPropagateArrays"*, %"class.spvtools::opt::CopyPropagateArrays"** %9, align 8
  %11 = tail call i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"* %1) #11
  %12 = or i32 %11, 1
  %13 = icmp eq i32 %12, 29
  br i1 %13, label %456, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  switch i32 %16, label %454 [
    i32 61, label %17
    i32 65, label %40
    i32 81, label %336
    i32 62, label %456
    i32 60, label %456
    i32 5, label %456
  ]

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1103", %"class.std::__1::__function::__default_alloc_func.1103"* %8, i64 0, i32 0, i32 3
  %19 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %18, align 8
  %20 = bitcast %"class.spvtools::opt::analysis::Type"* %19 to %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)***
  %21 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %21, i64 32
  %23 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %22, align 8
  %24 = tail call %"class.spvtools::opt::analysis::Pointer"* %23(%"class.spvtools::opt::analysis::Type"* %19) #11
  %25 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1103", %"class.std::__1::__function::__default_alloc_func.1103"* %8, i64 0, i32 0, i32 1
  %26 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::analysis::Pointer", %"class.spvtools::opt::analysis::Pointer"* %24, i64 0, i32 2
  %28 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %27, align 8
  %29 = tail call i32 @_ZNK8spvtools3opt8analysis11TypeManager5GetIdEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %26, %"class.spvtools::opt::analysis::Type"* %28) #11
  %30 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %31 = load i8, i8* %30, align 4, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %17
  %34 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #11
  br label %35

35:                                               ; preds = %33, %17
  %36 = phi i32 [ %34, %33 ], [ 0, %17 ]
  %37 = icmp eq i32 %29, %36
  br i1 %37, label %456, label %38

38:                                               ; preds = %35
  %39 = tail call zeroext i1 @_ZN8spvtools3opt19CopyPropagateArrays13CanUpdateUsesEPNS0_11InstructionEj(%"class.spvtools::opt::CopyPropagateArrays"* %10, %"class.spvtools::opt::Instruction"* %1, i32 %29) #11
  br label %456

40:                                               ; preds = %14
  %41 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1103", %"class.std::__1::__function::__default_alloc_func.1103"* %8, i64 0, i32 0, i32 3
  %42 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %41, align 8
  %43 = bitcast %"class.spvtools::opt::analysis::Type"* %42 to %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)***
  %44 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*** %43, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %44, i64 32
  %46 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %45, align 8
  %47 = tail call %"class.spvtools::opt::analysis::Pointer"* %46(%"class.spvtools::opt::analysis::Type"* %42) #11
  %48 = getelementptr inbounds %"class.spvtools::opt::analysis::Pointer", %"class.spvtools::opt::analysis::Pointer"* %47, i64 0, i32 2
  %49 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %48, align 8
  %50 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #11
  %51 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 24, i1 false) #11
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %55 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %56 = bitcast %"struct.spvtools::opt::Operand"** %55 to i64*
  %57 = bitcast %"class.std::__1::vector"* %54 to i64*
  %58 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %59 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %60 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1103", %"class.std::__1::__function::__default_alloc_func.1103"* %8, i64 0, i32 0, i32 2
  %61 = bitcast i32** %52 to i64*
  %62 = bitcast %"class.std::__1::vector.3"* %4 to i64*
  %63 = bitcast i32** %53 to i64*
  br label %64

64:                                               ; preds = %287, %40
  %65 = phi i32* [ null, %40 ], [ %288, %287 ]
  %66 = phi i64 [ 0, %40 ], [ %289, %287 ]
  %67 = phi i32 [ 1, %40 ], [ %290, %287 ]
  %68 = load i64, i64* %56, align 8
  %69 = load i64, i64* %57, align 8
  %70 = sub i64 %68, %69
  %71 = sdiv exact i64 %70, 48
  %72 = load i8, i8* %58, align 4, !range !2
  %73 = icmp eq i8 %72, 0
  %74 = load i8, i8* %59, align 1, !range !2
  %75 = icmp eq i8 %74, 0
  %76 = select i1 %75, i32 1, i32 2
  %77 = xor i1 %75, true
  %78 = zext i1 %77 to i32
  %79 = select i1 %73, i32 %78, i32 %76
  %80 = trunc i64 %71 to i32
  %81 = sub i32 %80, %79
  %82 = icmp ult i32 %67, %81
  br i1 %82, label %117, label %83

83:                                               ; preds = %64
  %84 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1103", %"class.std::__1::__function::__default_alloc_func.1103"* %8, i64 0, i32 0, i32 1
  %85 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %84, align 8
  %86 = call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager13GetMemberTypeEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::TypeManager"* %85, %"class.spvtools::opt::analysis::Type"* %49, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %4) #11
  %87 = bitcast %"class.spvtools::opt::analysis::Pointer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %87) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 56, i1 false) #11
  %88 = getelementptr inbounds %"class.spvtools::opt::analysis::Pointer", %"class.spvtools::opt::analysis::Pointer"* %47, i64 0, i32 3
  %89 = load i32, i32* %88, align 8
  call void @_ZN8spvtools3opt8analysis7PointerC1EPKNS1_4TypeE16SpvStorageClass_(%"class.spvtools::opt::analysis::Pointer"* nonnull %5, %"class.spvtools::opt::analysis::Type"* %86, i32 %89) #11
  %90 = getelementptr inbounds %"class.spvtools::opt::CopyPropagateArrays", %"class.spvtools::opt::CopyPropagateArrays"* %10, i64 0, i32 0, i32 0, i32 2
  %91 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %90, align 8
  %92 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %91, i64 0, i32 11
  %93 = load i32, i32* %92, align 8
  %94 = trunc i32 %93 to i16
  %95 = icmp slt i16 %94, 0
  br i1 %95, label %111, label %96

96:                                               ; preds = %83
  %97 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %91, i64 0, i32 5
  %98 = call i8* @_Znwm(i64 240) #12
  %99 = bitcast i8* %98 to %"class.spvtools::opt::analysis::TypeManager"*
  call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %99, %"class.std::__1::function"* dereferenceable(32) %97, %"class.spvtools::opt::IRContext"* %91) #11
  %100 = ptrtoint i8* %98 to i64
  %101 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %91, i64 0, i32 20
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %102, align 8
  %104 = bitcast %"class.std::__1::unique_ptr.480"* %101 to i64*
  store i64 %100, i64* %104, align 8
  %105 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %103, null
  br i1 %105, label %108, label %106

106:                                              ; preds = %96
  call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %103) #11
  %107 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %103 to i8*
  call void @_ZdlPv(i8* %107) #12
  br label %108

108:                                              ; preds = %106, %96
  %109 = load i32, i32* %92, align 8
  %110 = or i32 %109, 32768
  store i32 %110, i32* %92, align 8
  br label %111

111:                                              ; preds = %108, %83
  %112 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %91, i64 0, i32 20, i32 0, i32 0, i32 0
  %113 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %112, align 8
  %114 = bitcast %"class.spvtools::opt::analysis::Pointer"* %5 to %"class.spvtools::opt::analysis::Type"*
  %115 = call i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %113, %"class.spvtools::opt::analysis::Type"* nonnull %114) #11
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %299, label %291

117:                                              ; preds = %64
  %118 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %60, align 8
  %119 = add i32 %79, %67
  %120 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %119) #11
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %118, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %123 = load i64, i64* %122, align 8
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %233, label %125

125:                                              ; preds = %117
  %126 = tail call i64 @llvm.ctpop.i64(i64 %123) #11, !range !13
  %127 = icmp ugt i64 %126, 1
  br i1 %127, label %131, label %128

128:                                              ; preds = %125
  %129 = add i64 %123, 4294967295
  %130 = and i64 %129, %121
  br label %135

131:                                              ; preds = %125
  %132 = icmp ugt i64 %123, %121
  br i1 %132, label %135, label %133

133:                                              ; preds = %131
  %134 = urem i64 %121, %123
  br label %135

135:                                              ; preds = %133, %131, %128
  %136 = phi i64 [ %130, %128 ], [ %134, %133 ], [ %121, %131 ]
  %137 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %118, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %137, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %138, i64 %136
  %140 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %139, align 8
  %141 = icmp eq %"struct.std::__1::__hash_node_base.408"* %140, null
  br i1 %141, label %233, label %142

142:                                              ; preds = %135
  %143 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %140, i64 0, i32 0
  %144 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %143, align 8
  %145 = icmp eq %"struct.std::__1::__hash_node_base.408"* %144, null
  br i1 %145, label %233, label %146

146:                                              ; preds = %142
  %147 = add i64 %123, -1
  br label %148

148:                                              ; preds = %169, %146
  %149 = phi %"struct.std::__1::__hash_node_base.408"* [ %144, %146 ], [ %171, %169 ]
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %149, i64 1
  %151 = bitcast %"struct.std::__1::__hash_node_base.408"* %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = icmp eq i64 %152, %121
  br i1 %153, label %164, label %154

154:                                              ; preds = %148
  br i1 %127, label %157, label %155

155:                                              ; preds = %154
  %156 = and i64 %152, %147
  br label %161

157:                                              ; preds = %154
  %158 = icmp ult i64 %152, %123
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = urem i64 %152, %123
  br label %161

161:                                              ; preds = %159, %157, %155
  %162 = phi i64 [ %156, %155 ], [ %160, %159 ], [ %152, %157 ]
  %163 = icmp eq i64 %162, %136
  br i1 %163, label %169, label %233

164:                                              ; preds = %148
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %149, i64 2
  %166 = bitcast %"struct.std::__1::__hash_node_base.408"* %165 to i32*
  %167 = load i32, i32* %166, align 4
  %168 = icmp eq i32 %167, %120
  br i1 %168, label %173, label %169

169:                                              ; preds = %164, %161
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %149, i64 0, i32 0
  %171 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %170, align 8
  %172 = icmp eq %"struct.std::__1::__hash_node_base.408"* %171, null
  br i1 %172, label %233, label %148

173:                                              ; preds = %164
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %149, i64 3
  %175 = bitcast %"struct.std::__1::__hash_node_base.408"* %174 to %"class.spvtools::opt::analysis::Constant"**
  %176 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %175, align 8
  %177 = icmp eq %"class.spvtools::opt::analysis::Constant"* %176, null
  br i1 %177, label %233, label %178

178:                                              ; preds = %173
  %179 = tail call i32 @_ZNK8spvtools3opt8analysis8Constant6GetU32Ev(%"class.spvtools::opt::analysis::Constant"* nonnull %176) #11
  %180 = load i32*, i32** %53, align 8
  %181 = icmp ult i32* %65, %180
  %182 = ptrtoint i32* %180 to i64
  br i1 %181, label %183, label %186

183:                                              ; preds = %178
  store i32 %179, i32* %65, align 4
  %184 = getelementptr inbounds i32, i32* %65, i64 1
  %185 = ptrtoint i32* %184 to i64
  store i64 %185, i64* %61, align 8
  br label %287

186:                                              ; preds = %178
  %187 = ptrtoint i32* %65 to i64
  %188 = load i64, i64* %62, align 8
  %189 = sub i64 %187, %188
  %190 = ashr exact i64 %189, 2
  %191 = add nsw i64 %190, 1
  %192 = icmp ugt i64 %191, 4611686018427387903
  br i1 %192, label %193, label %195

193:                                              ; preds = %186
  %194 = bitcast %"class.std::__1::vector.3"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %194) #13
  unreachable

195:                                              ; preds = %186
  %196 = sub i64 %182, %188
  %197 = ashr exact i64 %196, 2
  %198 = icmp ult i64 %197, 2305843009213693951
  br i1 %198, label %199, label %207

199:                                              ; preds = %195
  %200 = ashr exact i64 %196, 1
  %201 = icmp ult i64 %200, %191
  %202 = select i1 %201, i64 %191, i64 %200
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %212, label %204

204:                                              ; preds = %199
  %205 = icmp ugt i64 %202, 4611686018427387903
  br i1 %205, label %206, label %207

206:                                              ; preds = %204
  tail call void @abort() #13
  unreachable

207:                                              ; preds = %204, %195
  %208 = phi i64 [ %202, %204 ], [ 4611686018427387903, %195 ]
  %209 = shl i64 %208, 2
  %210 = tail call i8* @_Znwm(i64 %209) #12
  %211 = bitcast i8* %210 to i32*
  br label %212

212:                                              ; preds = %207, %199
  %213 = phi i64 [ %208, %207 ], [ 0, %199 ]
  %214 = phi i32* [ %211, %207 ], [ null, %199 ]
  %215 = getelementptr inbounds i32, i32* %214, i64 %190
  %216 = getelementptr inbounds i32, i32* %214, i64 %213
  %217 = ptrtoint i32* %216 to i64
  store i32 %179, i32* %215, align 4
  %218 = getelementptr inbounds i32, i32* %215, i64 1
  %219 = ptrtoint i32* %218 to i64
  %220 = sub i64 %66, %188
  %221 = ashr exact i64 %220, 2
  %222 = sub nsw i64 0, %221
  %223 = getelementptr inbounds i32, i32* %215, i64 %222
  %224 = ptrtoint i32* %223 to i64
  %225 = icmp sgt i64 %220, 0
  br i1 %225, label %226, label %229

226:                                              ; preds = %212
  %227 = bitcast i32* %223 to i8*
  %228 = inttoptr i64 %188 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %227, i8* align 4 %228, i64 %220, i1 false) #11
  br label %229

229:                                              ; preds = %226, %212
  store i64 %224, i64* %62, align 8
  store i64 %219, i64* %61, align 8
  store i64 %217, i64* %63, align 8
  %230 = icmp eq i64 %188, 0
  br i1 %230, label %287, label %231

231:                                              ; preds = %229
  %232 = inttoptr i64 %188 to i8*
  tail call void @_ZdlPv(i8* %232) #12
  br label %287

233:                                              ; preds = %169, %161, %173, %142, %135, %117
  %234 = load i32*, i32** %53, align 8
  %235 = icmp ult i32* %65, %234
  %236 = ptrtoint i32* %234 to i64
  br i1 %235, label %237, label %240

237:                                              ; preds = %233
  store i32 0, i32* %65, align 4
  %238 = getelementptr inbounds i32, i32* %65, i64 1
  %239 = ptrtoint i32* %238 to i64
  store i64 %239, i64* %61, align 8
  br label %287

240:                                              ; preds = %233
  %241 = ptrtoint i32* %65 to i64
  %242 = load i64, i64* %62, align 8
  %243 = sub i64 %241, %242
  %244 = ashr exact i64 %243, 2
  %245 = add nsw i64 %244, 1
  %246 = icmp ugt i64 %245, 4611686018427387903
  br i1 %246, label %247, label %249

247:                                              ; preds = %240
  %248 = bitcast %"class.std::__1::vector.3"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %248) #13
  unreachable

249:                                              ; preds = %240
  %250 = sub i64 %236, %242
  %251 = ashr exact i64 %250, 2
  %252 = icmp ult i64 %251, 2305843009213693951
  br i1 %252, label %253, label %261

253:                                              ; preds = %249
  %254 = ashr exact i64 %250, 1
  %255 = icmp ult i64 %254, %245
  %256 = select i1 %255, i64 %245, i64 %254
  %257 = icmp eq i64 %256, 0
  br i1 %257, label %266, label %258

258:                                              ; preds = %253
  %259 = icmp ugt i64 %256, 4611686018427387903
  br i1 %259, label %260, label %261

260:                                              ; preds = %258
  tail call void @abort() #13
  unreachable

261:                                              ; preds = %258, %249
  %262 = phi i64 [ %256, %258 ], [ 4611686018427387903, %249 ]
  %263 = shl i64 %262, 2
  %264 = tail call i8* @_Znwm(i64 %263) #12
  %265 = bitcast i8* %264 to i32*
  br label %266

266:                                              ; preds = %261, %253
  %267 = phi i64 [ %262, %261 ], [ 0, %253 ]
  %268 = phi i32* [ %265, %261 ], [ null, %253 ]
  %269 = getelementptr inbounds i32, i32* %268, i64 %244
  %270 = getelementptr inbounds i32, i32* %268, i64 %267
  %271 = ptrtoint i32* %270 to i64
  store i32 0, i32* %269, align 4
  %272 = getelementptr inbounds i32, i32* %269, i64 1
  %273 = ptrtoint i32* %272 to i64
  %274 = sub i64 %66, %242
  %275 = ashr exact i64 %274, 2
  %276 = sub nsw i64 0, %275
  %277 = getelementptr inbounds i32, i32* %269, i64 %276
  %278 = ptrtoint i32* %277 to i64
  %279 = icmp sgt i64 %274, 0
  br i1 %279, label %280, label %283

280:                                              ; preds = %266
  %281 = bitcast i32* %277 to i8*
  %282 = inttoptr i64 %242 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %281, i8* align 4 %282, i64 %274, i1 false) #11
  br label %283

283:                                              ; preds = %280, %266
  store i64 %278, i64* %62, align 8
  store i64 %273, i64* %61, align 8
  store i64 %271, i64* %63, align 8
  %284 = icmp eq i64 %242, 0
  br i1 %284, label %287, label %285

285:                                              ; preds = %283
  %286 = inttoptr i64 %242 to i8*
  tail call void @_ZdlPv(i8* %286) #12
  br label %287

287:                                              ; preds = %285, %283, %237, %231, %229, %183
  %288 = phi i32* [ %272, %285 ], [ %272, %283 ], [ %238, %237 ], [ %218, %231 ], [ %218, %229 ], [ %184, %183 ]
  %289 = phi i64 [ %273, %285 ], [ %273, %283 ], [ %239, %237 ], [ %219, %231 ], [ %219, %229 ], [ %185, %183 ]
  %290 = add i32 %67, 1
  br label %64

291:                                              ; preds = %111
  %292 = load i8, i8* %58, align 4, !range !2
  %293 = icmp eq i8 %292, 0
  br i1 %293, label %297, label %294

294:                                              ; preds = %291
  %295 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #11
  %296 = icmp eq i32 %115, %295
  br i1 %296, label %299, label %297

297:                                              ; preds = %294, %291
  %298 = call zeroext i1 @_ZN8spvtools3opt19CopyPropagateArrays13CanUpdateUsesEPNS0_11InstructionEj(%"class.spvtools::opt::CopyPropagateArrays"* %10, %"class.spvtools::opt::Instruction"* %1, i32 %115) #11
  br label %299

299:                                              ; preds = %297, %294, %111
  %300 = phi i1 [ %298, %297 ], [ false, %111 ], [ true, %294 ]
  %301 = getelementptr inbounds %"class.spvtools::opt::analysis::Pointer", %"class.spvtools::opt::analysis::Pointer"* %5, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %301, align 8
  %302 = getelementptr inbounds %"class.spvtools::opt::analysis::Pointer", %"class.spvtools::opt::analysis::Pointer"* %5, i64 0, i32 0, i32 1
  %303 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %302, i64 0, i32 0, i32 0
  %304 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %303, align 8
  %305 = icmp eq %"class.std::__1::vector.3"* %304, null
  br i1 %305, label %329, label %306

306:                                              ; preds = %299
  %307 = bitcast %"class.std::__1::vector.3"* %304 to i8*
  %308 = getelementptr inbounds %"class.spvtools::opt::analysis::Pointer", %"class.spvtools::opt::analysis::Pointer"* %5, i64 0, i32 0, i32 1, i32 0, i32 1
  %309 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %308, align 8
  %310 = icmp eq %"class.std::__1::vector.3"* %309, %304
  br i1 %310, label %327, label %311

311:                                              ; preds = %306, %322
  %312 = phi %"class.std::__1::vector.3"* [ %313, %322 ], [ %309, %306 ]
  %313 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %312, i64 -1
  %314 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %313, i64 0, i32 0, i32 0
  %315 = load i32*, i32** %314, align 8
  %316 = icmp eq i32* %315, null
  br i1 %316, label %322, label %317

317:                                              ; preds = %311
  %318 = ptrtoint i32* %315 to i64
  %319 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %312, i64 -1, i32 0, i32 1
  %320 = bitcast i32** %319 to i64*
  store i64 %318, i64* %320, align 8
  %321 = bitcast i32* %315 to i8*
  call void @_ZdlPv(i8* %321) #12
  br label %322

322:                                              ; preds = %317, %311
  %323 = icmp eq %"class.std::__1::vector.3"* %313, %304
  br i1 %323, label %324, label %311

324:                                              ; preds = %322
  %325 = bitcast %"class.std::__1::vector.463"* %302 to i8**
  %326 = load i8*, i8** %325, align 8
  br label %327

327:                                              ; preds = %324, %306
  %328 = phi i8* [ %326, %324 ], [ %307, %306 ]
  store %"class.std::__1::vector.3"* %304, %"class.std::__1::vector.3"** %308, align 8
  call void @_ZdlPv(i8* %328) #12
  br label %329

329:                                              ; preds = %327, %299
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %87) #11
  %330 = load i32*, i32** %51, align 8
  %331 = icmp eq i32* %330, null
  br i1 %331, label %335, label %332

332:                                              ; preds = %329
  %333 = ptrtoint i32* %330 to i64
  store i64 %333, i64* %61, align 8
  %334 = bitcast i32* %330 to i8*
  call void @_ZdlPv(i8* %334) #12
  br label %335

335:                                              ; preds = %332, %329
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #11
  br label %456

336:                                              ; preds = %14
  %337 = bitcast %"class.std::__1::vector.3"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %337) #11
  %338 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %6, i64 0, i32 0, i32 0
  %339 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %6, i64 0, i32 0, i32 1
  %340 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %337, i8 0, i64 24, i1 false) #11
  %341 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %342 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %343 = bitcast %"struct.spvtools::opt::Operand"** %342 to i64*
  %344 = bitcast %"class.std::__1::vector"* %341 to i64*
  %345 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %346 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %347 = bitcast i32** %339 to i64*
  %348 = bitcast %"class.std::__1::vector.3"* %6 to i64*
  %349 = bitcast i32** %340 to i64*
  br label %350

350:                                              ; preds = %434, %336
  %351 = phi i64 [ 0, %336 ], [ %435, %434 ]
  %352 = phi i32* [ null, %336 ], [ %436, %434 ]
  %353 = phi i32 [ 1, %336 ], [ %437, %434 ]
  %354 = load i64, i64* %343, align 8
  %355 = load i64, i64* %344, align 8
  %356 = sub i64 %354, %355
  %357 = sdiv exact i64 %356, 48
  %358 = load i8, i8* %345, align 4, !range !2
  %359 = icmp eq i8 %358, 0
  %360 = load i8, i8* %346, align 1, !range !2
  %361 = icmp eq i8 %360, 0
  %362 = select i1 %361, i32 1, i32 2
  %363 = xor i1 %361, true
  %364 = zext i1 %363 to i32
  %365 = select i1 %359, i32 %364, i32 %362
  %366 = trunc i64 %357 to i32
  %367 = sub i32 %366, %365
  %368 = icmp ult i32 %353, %367
  br i1 %368, label %378, label %369

369:                                              ; preds = %350
  %370 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1103", %"class.std::__1::__function::__default_alloc_func.1103"* %8, i64 0, i32 0, i32 1
  %371 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %370, align 8
  %372 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1103", %"class.std::__1::__function::__default_alloc_func.1103"* %8, i64 0, i32 0, i32 3
  %373 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %372, align 8
  %374 = call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager13GetMemberTypeEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::TypeManager"* %371, %"class.spvtools::opt::analysis::Type"* %373, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %6) #11
  %375 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %370, align 8
  %376 = call i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %375, %"class.spvtools::opt::analysis::Type"* %374) #11
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %446, label %438

378:                                              ; preds = %350
  %379 = add i32 %365, %353
  %380 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %379) #11
  %381 = load i32*, i32** %340, align 8
  %382 = icmp ult i32* %352, %381
  %383 = ptrtoint i32* %381 to i64
  br i1 %382, label %384, label %387

384:                                              ; preds = %378
  store i32 %380, i32* %352, align 4
  %385 = getelementptr inbounds i32, i32* %352, i64 1
  %386 = ptrtoint i32* %385 to i64
  store i64 %386, i64* %347, align 8
  br label %434

387:                                              ; preds = %378
  %388 = ptrtoint i32* %352 to i64
  %389 = load i64, i64* %348, align 8
  %390 = sub i64 %388, %389
  %391 = ashr exact i64 %390, 2
  %392 = add nsw i64 %391, 1
  %393 = icmp ugt i64 %392, 4611686018427387903
  br i1 %393, label %394, label %396

394:                                              ; preds = %387
  %395 = bitcast %"class.std::__1::vector.3"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %395) #13
  unreachable

396:                                              ; preds = %387
  %397 = sub i64 %383, %389
  %398 = ashr exact i64 %397, 2
  %399 = icmp ult i64 %398, 2305843009213693951
  br i1 %399, label %400, label %408

400:                                              ; preds = %396
  %401 = ashr exact i64 %397, 1
  %402 = icmp ult i64 %401, %392
  %403 = select i1 %402, i64 %392, i64 %401
  %404 = icmp eq i64 %403, 0
  br i1 %404, label %413, label %405

405:                                              ; preds = %400
  %406 = icmp ugt i64 %403, 4611686018427387903
  br i1 %406, label %407, label %408

407:                                              ; preds = %405
  tail call void @abort() #13
  unreachable

408:                                              ; preds = %405, %396
  %409 = phi i64 [ %403, %405 ], [ 4611686018427387903, %396 ]
  %410 = shl i64 %409, 2
  %411 = tail call i8* @_Znwm(i64 %410) #12
  %412 = bitcast i8* %411 to i32*
  br label %413

413:                                              ; preds = %408, %400
  %414 = phi i64 [ %409, %408 ], [ 0, %400 ]
  %415 = phi i32* [ %412, %408 ], [ null, %400 ]
  %416 = getelementptr inbounds i32, i32* %415, i64 %391
  %417 = getelementptr inbounds i32, i32* %415, i64 %414
  %418 = ptrtoint i32* %417 to i64
  store i32 %380, i32* %416, align 4
  %419 = getelementptr inbounds i32, i32* %416, i64 1
  %420 = ptrtoint i32* %419 to i64
  %421 = sub i64 %351, %389
  %422 = ashr exact i64 %421, 2
  %423 = sub nsw i64 0, %422
  %424 = getelementptr inbounds i32, i32* %416, i64 %423
  %425 = ptrtoint i32* %424 to i64
  %426 = icmp sgt i64 %421, 0
  br i1 %426, label %427, label %430

427:                                              ; preds = %413
  %428 = bitcast i32* %424 to i8*
  %429 = inttoptr i64 %389 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %428, i8* align 4 %429, i64 %421, i1 false) #11
  br label %430

430:                                              ; preds = %427, %413
  store i64 %425, i64* %348, align 8
  store i64 %420, i64* %347, align 8
  store i64 %418, i64* %349, align 8
  %431 = icmp eq i64 %389, 0
  br i1 %431, label %434, label %432

432:                                              ; preds = %430
  %433 = inttoptr i64 %389 to i8*
  tail call void @_ZdlPv(i8* %433) #12
  br label %434

434:                                              ; preds = %432, %430, %384
  %435 = phi i64 [ %386, %384 ], [ %420, %430 ], [ %420, %432 ]
  %436 = phi i32* [ %385, %384 ], [ %419, %430 ], [ %419, %432 ]
  %437 = add nuw i32 %353, 1
  br label %350

438:                                              ; preds = %369
  %439 = load i8, i8* %345, align 4, !range !2
  %440 = icmp eq i8 %439, 0
  br i1 %440, label %444, label %441

441:                                              ; preds = %438
  %442 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #11
  %443 = icmp eq i32 %376, %442
  br i1 %443, label %446, label %444

444:                                              ; preds = %441, %438
  %445 = call zeroext i1 @_ZN8spvtools3opt19CopyPropagateArrays13CanUpdateUsesEPNS0_11InstructionEj(%"class.spvtools::opt::CopyPropagateArrays"* %10, %"class.spvtools::opt::Instruction"* %1, i32 %376) #11
  br label %446

446:                                              ; preds = %444, %441, %369
  %447 = phi i1 [ %445, %444 ], [ false, %369 ], [ true, %441 ]
  %448 = load i32*, i32** %338, align 8
  %449 = icmp eq i32* %448, null
  br i1 %449, label %453, label %450

450:                                              ; preds = %446
  %451 = ptrtoint i32* %448 to i64
  store i64 %451, i64* %347, align 8
  %452 = bitcast i32* %448 to i8*
  call void @_ZdlPv(i8* %452) #12
  br label %453

453:                                              ; preds = %450, %446
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %337) #11
  br label %456

454:                                              ; preds = %14
  %455 = tail call zeroext i1 @_Z21spvOpcodeIsDecoration6SpvOp_(i32 %16) #11
  br label %456

456:                                              ; preds = %3, %14, %14, %14, %35, %38, %335, %453, %454
  %457 = phi i1 [ %455, %454 ], [ %447, %453 ], [ %300, %335 ], [ true, %3 ], [ %39, %38 ], [ true, %35 ], [ true, %14 ], [ true, %14 ], [ true, %14 ]
  ret i1 %457
}

declare i32 @_ZNK8spvtools3opt8analysis11TypeManager5GetIdEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::Type"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis7PointerC1EPKNS1_4TypeE16SpvStorageClass_(%"class.spvtools::opt::analysis::Pointer"*, %"class.spvtools::opt::analysis::Type"*, i32) unnamed_addr #2

declare i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::Type"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4TypeD2Ev(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::vector.3"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %9, align 8
  %11 = icmp eq %"class.std::__1::vector.3"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::vector.3"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %14, i64 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = icmp eq i32* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = ptrtoint i32* %16 to i64
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast i32* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::vector.3"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.463"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::vector.3"* %5, %"class.std::__1::vector.3"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %1, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt19CopyPropagateArrays13CanUpdateUsesEPNS5_11InstructionEjE3$_3FbS8_jEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #12, !noalias !69
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 32, i1 false) #11
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt19CopyPropagateArrays13CanUpdateUsesEPNS5_11InstructionEjE3$_3FbS8_jEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEjEE11__call_implINS0_20__default_alloc_funcIZNS3_19CopyPropagateArrays10UpdateUsesES5_S5_E3$_4S6_EEEEvPKNS0_16__policy_storageES5_j"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*, i32) #0 align 2 {
  %4 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %5 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::vector.988"**
  %6 = load %"class.std::__1::vector.988"*, %"class.std::__1::vector.988"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.988", %"class.std::__1::vector.988"* %6, i64 0, i32 0, i32 1
  %8 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.988", %"class.std::__1::vector.988"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %11 = icmp ult %"struct.std::__1::pair"* %8, %10
  %12 = ptrtoint %"struct.std::__1::pair"* %10 to i64
  br i1 %11, label %13, label %19

13:                                               ; preds = %3
  %14 = bitcast %"struct.std::__1::pair"* %8 to i64*
  store i64 %4, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 0, i32 1
  store i32 %2, i32* %15, align 8
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 1
  %17 = ptrtoint %"struct.std::__1::pair"* %16 to i64
  %18 = bitcast %"struct.std::__1::pair"** %7 to i64*
  store i64 %17, i64* %18, align 8
  br label %77

19:                                               ; preds = %3
  %20 = ptrtoint %"struct.std::__1::pair"* %8 to i64
  %21 = bitcast %"struct.std::__1::pair"** %7 to i64*
  %22 = bitcast %"class.std::__1::vector.988"* %6 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %20, %23
  %25 = ashr exact i64 %24, 4
  %26 = add nsw i64 %25, 1
  %27 = icmp ugt i64 %26, 1152921504606846975
  br i1 %27, label %28, label %30

28:                                               ; preds = %19
  %29 = bitcast %"class.std::__1::vector.988"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #13
  unreachable

30:                                               ; preds = %19
  %31 = bitcast %"struct.std::__1::pair"** %9 to i64*
  %32 = sub i64 %12, %23
  %33 = ashr exact i64 %32, 4
  %34 = icmp ult i64 %33, 576460752303423487
  br i1 %34, label %35, label %43

35:                                               ; preds = %30
  %36 = ashr exact i64 %32, 3
  %37 = icmp ult i64 %36, %26
  %38 = select i1 %37, i64 %26, i64 %36
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %48, label %40

40:                                               ; preds = %35
  %41 = icmp ugt i64 %38, 1152921504606846975
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  tail call void @abort() #13
  unreachable

43:                                               ; preds = %40, %30
  %44 = phi i64 [ %38, %40 ], [ 1152921504606846975, %30 ]
  %45 = shl i64 %44, 4
  %46 = tail call i8* @_Znwm(i64 %45) #12
  %47 = bitcast i8* %46 to %"struct.std::__1::pair"*
  br label %48

48:                                               ; preds = %43, %35
  %49 = phi i64 [ %44, %43 ], [ 0, %35 ]
  %50 = phi %"struct.std::__1::pair"* [ %47, %43 ], [ null, %35 ]
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %50, i64 %25
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %50, i64 %49
  %53 = ptrtoint %"struct.std::__1::pair"* %52 to i64
  %54 = bitcast %"struct.std::__1::pair"* %51 to i64*
  store i64 %4, i64* %54, align 8
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %50, i64 %25, i32 1
  store i32 %2, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %51, i64 1
  %57 = ptrtoint %"struct.std::__1::pair"* %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.988", %"class.std::__1::vector.988"* %6, i64 0, i32 0, i32 0
  %59 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %58, align 8
  %60 = load i64, i64* %21, align 8
  %61 = ptrtoint %"struct.std::__1::pair"* %59 to i64
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 4
  %64 = sub nsw i64 0, %63
  %65 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %51, i64 %64
  %66 = ptrtoint %"struct.std::__1::pair"* %65 to i64
  %67 = icmp sgt i64 %62, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %48
  %69 = bitcast %"struct.std::__1::pair"* %65 to i8*
  %70 = bitcast %"struct.std::__1::pair"* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 %62, i1 false) #11
  %71 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %58, align 8
  br label %72

72:                                               ; preds = %68, %48
  %73 = phi %"struct.std::__1::pair"* [ %59, %48 ], [ %71, %68 ]
  store i64 %66, i64* %22, align 8
  store i64 %57, i64* %21, align 8
  store i64 %53, i64* %31, align 8
  %74 = icmp eq %"struct.std::__1::pair"* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  %76 = bitcast %"struct.std::__1::pair"* %73 to i8*
  tail call void @_ZdlPv(i8* %76) #12
  br label %77

77:                                               ; preds = %13, %72, %75
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!6 = distinct !{!6, !7, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt19CopyPropagateArrays13CanUpdateUsesEPNS5_11InstructionEjE3$_3FbS8_jEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt19CopyPropagateArrays13CanUpdateUsesEPNS5_11InstructionEjE3$_3FbS8_jEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!11 = distinct !{!11, !12, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt19CopyPropagateArrays22HasValidReferencesOnlyEPNS5_11InstructionES8_E3$_2FbS8_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt19CopyPropagateArrays22HasValidReferencesOnlyEPNS5_11InstructionES8_E3$_2FbS8_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!13 = !{i64 0, i64 65}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.isvectorized", i32 1}
!21 = distinct !{!21, !22}
!22 = !{!"llvm.loop.unroll.disable"}
!23 = distinct !{!23, !20}
!24 = !{!25}
!25 = distinct !{!25, !26}
!26 = distinct !{!26, !"LVerDomain"}
!27 = !{!28}
!28 = distinct !{!28, !26}
!29 = distinct !{!29, !20}
!30 = distinct !{!30, !22}
!31 = distinct !{!31, !22}
!32 = distinct !{!32, !20}
!33 = !{!34}
!34 = distinct !{!34, !35}
!35 = distinct !{!35, !"LVerDomain"}
!36 = !{!37}
!37 = distinct !{!37, !35}
!38 = distinct !{!38, !20}
!39 = distinct !{!39, !22}
!40 = distinct !{!40, !20}
!41 = !{!42}
!42 = distinct !{!42, !43}
!43 = distinct !{!43, !"LVerDomain"}
!44 = !{!45}
!45 = distinct !{!45, !43}
!46 = distinct !{!46, !20}
!47 = distinct !{!47, !22}
!48 = distinct !{!48, !22}
!49 = distinct !{!49, !20}
!50 = !{!51}
!51 = distinct !{!51, !52}
!52 = distinct !{!52, !"LVerDomain"}
!53 = !{!54}
!54 = distinct !{!54, !52}
!55 = distinct !{!55, !20}
!56 = distinct !{!56, !22}
!57 = distinct !{!57, !22}
!58 = distinct !{!58, !20}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!61 = distinct !{!61, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!62 = distinct !{!62, !22}
!63 = distinct !{!63, !22}
!64 = !{!65, !67}
!65 = distinct !{!65, !66, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!66 = distinct !{!66, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!67 = distinct !{!67, !68, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt19CopyPropagateArrays22HasValidReferencesOnlyEPNS5_11InstructionES8_E3$_2FbS8_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!68 = distinct !{!68, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt19CopyPropagateArrays22HasValidReferencesOnlyEPNS5_11InstructionES8_E3$_2FbS8_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!69 = !{!70, !72}
!70 = distinct !{!70, !71, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!71 = distinct !{!71, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!72 = distinct !{!72, !73, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt19CopyPropagateArrays13CanUpdateUsesEPNS5_11InstructionEjE3$_3FbS8_jEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!73 = distinct !{!73, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt19CopyPropagateArrays13CanUpdateUsesEPNS5_11InstructionEjE3$_3FbS8_jEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
