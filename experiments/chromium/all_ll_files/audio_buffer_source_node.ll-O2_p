; ModuleID = '../../third_party/blink/renderer/modules/webaudio/audio_buffer_source_node.cc'
source_filename = "../../third_party/blink/renderer/modules/webaudio/audio_buffer_source_node.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.54" }
%"class.blink::PersistentBase.54" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.59" }
%"class.WTF::HashTable.59" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember.61", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.63", i32, [4 x i8], %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.199", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.216", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.234", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.241", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.179", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.99" = type { %"struct.std::__1::__atomic_base.100" }
%"struct.std::__1::__atomic_base.100" = type { %"struct.std::__1::__atomic_base.101" }
%"struct.std::__1::__atomic_base.101" = type { %"struct.std::__1::__cxx_atomic_impl.102" }
%"struct.std::__1::__cxx_atomic_impl.102" = type { %"struct.std::__1::__cxx_atomic_base_impl.103" }
%"struct.std::__1::__cxx_atomic_base_impl.103" = type { i64 }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::Worklist.110"* }
%"class.blink::Worklist.110" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::Worklist.117"* }
%"class.blink::Worklist.117" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::Worklist.124"* }
%"class.blink::Worklist.124" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::Worklist.131"* }
%"class.blink::Worklist.131" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::Worklist.138"* }
%"class.blink::Worklist.138" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::Worklist.145"* }
%"class.blink::Worklist.145" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::Worklist.152"* }
%"class.blink::Worklist.152" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.159", %"class.std::__1::__compressed_pair.166", %"class.std::__1::__compressed_pair.171", %"class.std::__1::__compressed_pair.173", [4 x i8] }>
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161", %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { i64 }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { float }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.182", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.191" }
%"class.WTF::Vector.191" = type { %"class.WTF::VectorBuffer.192" }
%"class.WTF::VectorBuffer.192" = type { %"class.WTF::VectorBufferBase.193" }
%"class.WTF::VectorBufferBase.193" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.207" }
%"class.WTF::VectorBuffer.207" = type { %"class.WTF::VectorBufferBase.208" }
%"class.WTF::VectorBufferBase.208" = type { %"struct.std::__1::pair.209"*, i32, i32 }
%"struct.std::__1::pair.209" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.222" }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.110"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.117"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.124"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.131"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.138"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.435" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.240 }
%class.scoped_refptr.240 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.241" = type { %"struct.std::__1::__atomic_base.242" }
%"struct.std::__1::__atomic_base.242" = type { %"struct.std::__1::__cxx_atomic_impl.243" }
%"struct.std::__1::__cxx_atomic_impl.243" = type { %"struct.std::__1::__cxx_atomic_base_impl.244" }
%"struct.std::__1::__cxx_atomic_base_impl.244" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AudioBufferSourceHandler" = type <{ %"class.blink::AudioScheduledSourceHandler.base", [7 x i8], %"class.std::__1::unique_ptr.369", %"class.std::__1::unique_ptr.380", %"class.std::__1::unique_ptr.386", %class.scoped_refptr.392, %class.scoped_refptr.392, i8, i8, [6 x i8], double, double, double, i8, [7 x i8], double, double, i8, [7 x i8], double, i8, [7 x i8] }>
%"class.blink::AudioScheduledSourceHandler.base" = type <{ %"class.blink::AudioHandler.base", [4 x i8], %"class.base::SupportsWeakPtr.364", %"class.WTF::Mutex", double, double, %"struct.std::__1::atomic.365", [4 x i8], %class.scoped_refptr.258, i8 }>
%"class.blink::AudioHandler.base" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted", [4 x i8], double, double, i8, [3 x i8], i32, %"class.blink::WeakPersistent", %"class.blink::UntracedMember", %class.scoped_refptr.269, %"class.WTF::Vector.352", %"class.WTF::Vector.358", i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32 }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::AudioNode"*, %"class.blink::PersistentNodePtr.350" }
%"class.blink::PersistentNodePtr.350" = type { %"class.blink::PersistentNode"* }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.351" }
%"class.blink::MemberBase.351" = type { %"class.blink::BaseAudioContext"* }
%"class.blink::BaseAudioContext" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleStateObserver.base", %"class.blink::InspectorHelperMixin", %"class.blink::ThreadState::PrefinalizerRegistration.35", %"class.blink::Member.36", %"class.blink::HeapVector.38", i8, %class.scoped_refptr.258, i8, %"class.blink::Member.260", i8, %class.scoped_refptr.269, i32, %"class.blink::AsyncAudioDecoder", [3 x i8], %"class.blink::HeapHashSet.323", %"class.blink::Member.329", %"class.blink::Member.329", %"class.blink::Member.329", %"class.blink::Member.329", %class.scoped_refptr.331, %"class.blink::Member.332", %"class.blink::WorkerThread"* }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.10"* }
%"class.blink::HeapVector.10" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.11"* }
%"class.WTF::Vector.11" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.26" }
%"class.blink::WeakMember.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.28" }
%"class.blink::HeapHashSet.28" = type { %"class.WTF::HashSet.31" }
%"class.WTF::HashSet.31" = type { %"class.WTF::HashTable.32" }
%"class.WTF::HashTable.32" = type <{ %"class.blink::WeakMember.34"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.34" = type opaque
%"class.blink::InspectorHelperMixin" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.13", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::AudioGraphTracer"* }
%"class.blink::AudioGraphTracer" = type { %"class.blink::Supplement", %"class.blink::Member.19", %"class.blink::HeapHashSet" }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.455", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.457", %"class.blink::Member.461", %"class.blink::Member.463", %"class.blink::Member.465", %"class.blink::Member.467", %"class.blink::Member.469", %"class.blink::Member.471", %"class.blink::Member.473", %"class.blink::HeapObserverSet.475", %"class.blink::Member.483", %"class.blink::Member.485", %"class.blink::Member.487", %"class.blink::Member.489", %"class.blink::Member.491", %"class.blink::Member.493", %"class.blink::Member.495", %"class.blink::Member.497", %"class.blink::Member.499", %"class.blink::Member.501", %"class.blink::Member.503", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.534", %"class.blink::Member.17", %"class.blink::Member.17", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.542", %"class.std::__1::unique_ptr.548", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.442" }
%"class.blink::HeapHashMap.442" = type { %"class.WTF::HashMap.445" }
%"class.WTF::HashMap.445" = type { %"class.WTF::HashTable.446" }
%"class.WTF::HashTable.446" = type <{ %"struct.WTF::KeyValuePair.448"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.448" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.449" }
%"class.std::__1::unique_ptr.449" = type { %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type opaque
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.17", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.473" = type { %"class.blink::MemberBase.474" }
%"class.blink::MemberBase.474" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.475" = type { i32, [4 x i8], %"class.blink::HeapHashSet.476" }
%"class.blink::HeapHashSet.476" = type { %"class.WTF::HashSet.479" }
%"class.WTF::HashSet.479" = type { %"class.WTF::HashTable.480" }
%"class.WTF::HashTable.480" = type <{ %"class.blink::WeakMember.482"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.482" = type opaque
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.485" = type { %"class.blink::MemberBase.486" }
%"class.blink::MemberBase.486" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.487" = type { %"class.blink::MemberBase.488" }
%"class.blink::MemberBase.488" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.489" = type { %"class.blink::MemberBase.490" }
%"class.blink::MemberBase.490" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.491" = type { %"class.blink::MemberBase.492" }
%"class.blink::MemberBase.492" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.495" = type { %"class.blink::MemberBase.496" }
%"class.blink::MemberBase.496" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.505" }
%"class.WTF::Deque.505" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.508" }
%"class.WTF::VectorBuffer.508" = type { %"class.WTF::VectorBufferBase.509" }
%"class.WTF::VectorBufferBase.509" = type { %"class.std::__1::unique_ptr.510"*, i32, i32 }
%"class.std::__1::unique_ptr.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.516", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.516" = type { %"class.std::__1::__bitset.517" }
%"class.std::__1::__bitset.517" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.518", i64, %"class.absl::optional.523", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.518" = type { %"class.absl::optional_internal::optional_data.519" }
%"class.absl::optional_internal::optional_data.519" = type { %"class.absl::optional_internal::optional_data_base.520" }
%"class.absl::optional_internal::optional_data_base.520" = type { %"class.absl::optional_internal::optional_data_dtor_base.521" }
%"class.absl::optional_internal::optional_data_dtor_base.521" = type { i8, %union.anon.522 }
%union.anon.522 = type { %"class.blink::WebSecurityOrigin" }
%"class.absl::optional.523" = type { %"class.absl::optional_internal::optional_data.524" }
%"class.absl::optional_internal::optional_data.524" = type { %"class.absl::optional_internal::optional_data_base.525" }
%"class.absl::optional_internal::optional_data_base.525" = type { %"class.absl::optional_internal::optional_data_dtor_base.526" }
%"class.absl::optional_internal::optional_data_dtor_base.526" = type { i8, %union.anon.527 }
%union.anon.527 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.528" }
%"class.std::__1::unique_ptr.528" = type { %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.530" }
%"struct.std::__1::__compressed_pair_elem.530" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.534" = type { %"class.WTF::HashSet.537" }
%"class.WTF::HashSet.537" = type { %"class.WTF::HashTable.538" }
%"class.WTF::HashTable.538" = type <{ %"class.blink::WeakMember.540"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.540" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.541 }
%class.scoped_refptr.541 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.273", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.273" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.274" }
%"struct.std::__1::atomic.274" = type { %"struct.std::__1::__atomic_base.275" }
%"struct.std::__1::__atomic_base.275" = type { %"struct.std::__1::__atomic_base.276" }
%"struct.std::__1::__atomic_base.276" = type { %"struct.std::__1::__cxx_atomic_impl.277" }
%"struct.std::__1::__cxx_atomic_impl.277" = type { %"struct.std::__1::__cxx_atomic_base_impl.278" }
%"struct.std::__1::__cxx_atomic_base_impl.278" = type { i8 }
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::InspectorWebAudioAgent"* }
%"class.blink::InspectorWebAudioAgent" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.35" = type { i8 }
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::AudioDestinationNode"* }
%"class.blink::AudioDestinationNode" = type { %"class.blink::AudioNode" }
%"class.blink::AudioNode" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::InspectorHelperMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.24", %class.scoped_refptr.269, %class.scoped_refptr.283, %"class.blink::HeapVector.334", %"class.blink::HeapVector.342" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::BaseAudioContext"* }
%class.scoped_refptr.283 = type { %"class.blink::AudioHandler"* }
%"class.blink::AudioHandler" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted", [4 x i8], double, double, i8, [3 x i8], i32, %"class.blink::WeakPersistent", %"class.blink::UntracedMember", %class.scoped_refptr.269, %"class.WTF::Vector.352", %"class.WTF::Vector.358", i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapVector.334" = type { %"class.WTF::Vector.337" }
%"class.WTF::Vector.337" = type { %"class.WTF::VectorBuffer.338" }
%"class.WTF::VectorBuffer.338" = type { %"class.WTF::VectorBufferBase.339" }
%"class.WTF::VectorBufferBase.339" = type { %"class.blink::Member.340"*, i32, i32 }
%"class.blink::Member.340" = type opaque
%"class.blink::HeapVector.342" = type { %"class.WTF::Vector.345" }
%"class.WTF::Vector.345" = type { %"class.WTF::VectorBuffer.346" }
%"class.WTF::VectorBuffer.346" = type { %"class.WTF::VectorBufferBase.347" }
%"class.WTF::VectorBufferBase.347" = type { %"class.blink::Member.348"*, i32, i32 }
%"class.blink::Member.348" = type opaque
%"class.blink::HeapVector.38" = type { %"class.WTF::Vector.41" }
%"class.WTF::Vector.41" = type { %"class.WTF::VectorBuffer.42" }
%"class.WTF::VectorBuffer.42" = type { %"class.WTF::VectorBufferBase.43" }
%"class.WTF::VectorBufferBase.43" = type { %"class.blink::Member.44"*, i32, i32 }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.48", i32, %"class.blink::Member.49", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.250", %"class.blink::SelfKeepAlive.254" }
%"class.blink::ThreadState::PrefinalizerRegistration.48" = type { i8 }
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.53, %"class.blink::Member.245", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.53 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.245" = type { %"class.blink::MemberBase.246" }
%"class.blink::MemberBase.246" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.247" }
%"class.blink::Persistent.247" = type { %"class.blink::PersistentBase.248" }
%"class.blink::PersistentBase.248" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.49", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.250", %class.scoped_refptr.253 }
%class.scoped_refptr.253 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::TraceWrapperV8Reference.250" = type { %"class.v8::TracedReference.251" }
%"class.v8::TracedReference.251" = type { %"class.v8::BasicTracedReference.252" }
%"class.v8::BasicTracedReference.252" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.254" = type { %"class.blink::Persistent.255" }
%"class.blink::Persistent.255" = type { %"class.blink::PersistentBase.256" }
%"class.blink::PersistentBase.256" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Member.260" = type { %"class.blink::MemberBase.261" }
%"class.blink::MemberBase.261" = type { %"class.blink::AudioListener"* }
%"class.blink::AudioListener" = type { %"class.blink::ScriptWrappable", %"class.blink::InspectorHelperMixin", %"class.blink::Member.262", %"class.blink::Member.262", %"class.blink::Member.262", %"class.blink::Member.262", %"class.blink::Member.262", %"class.blink::Member.262", %"class.blink::Member.262", %"class.blink::Member.262", %"class.blink::Member.262", %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D", double, i8, [7 x i8], %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.WTF::Mutex", %"class.WTF::HashSet.264", %class.scoped_refptr.268 }
%"class.blink::Member.262" = type { %"class.blink::MemberBase.263" }
%"class.blink::MemberBase.263" = type { %"class.blink::AudioParam"* }
%"class.blink::AudioParam" = type { %"class.blink::ScriptWrappable", %"class.blink::InspectorHelperMixin", %class.scoped_refptr.392, %"class.blink::Member.24", %class.scoped_refptr.269 }
%"class.blink::FloatPoint3D" = type { float, float, float }
%"class.blink::AudioArray" = type <{ float*, float*, i32, [4 x i8] }>
%"class.WTF::HashSet.264" = type { %"class.WTF::HashTable.265" }
%"class.WTF::HashTable.265" = type <{ %"class.blink::PannerHandler"**, i32, i32, i32, [4 x i8] }>
%"class.blink::PannerHandler" = type { %"class.blink::AudioHandler.base", %"class.blink::CrossThreadWeakPersistent", %"class.std::__1::unique_ptr.429", i32, i32, i8, i8, %"class.blink::DistanceEffect", %"class.blink::ConeEffect", double, double, float, %class.scoped_refptr.392, %class.scoped_refptr.392, %class.scoped_refptr.392, %class.scoped_refptr.392, %class.scoped_refptr.392, %class.scoped_refptr.392, %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D", %"class.WTF::Mutex" }
%"class.blink::CrossThreadWeakPersistent" = type { %"class.blink::PersistentBase.424" }
%"class.blink::PersistentBase.424" = type { %"class.blink::AudioListener"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.425" }
%"struct.std::__1::atomic.425" = type { %"struct.std::__1::__atomic_base.426" }
%"struct.std::__1::__atomic_base.426" = type { %"struct.std::__1::__cxx_atomic_impl.427" }
%"struct.std::__1::__cxx_atomic_impl.427" = type { %"struct.std::__1::__cxx_atomic_base_impl.428" }
%"struct.std::__1::__cxx_atomic_base_impl.428" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.blink::Panner"* }
%"class.blink::Panner" = type { i32 (...)** }
%"class.blink::DistanceEffect" = type { i32, double, double, double }
%"class.blink::ConeEffect" = type { double, double, double }
%class.scoped_refptr.268 = type { %"class.blink::HRTFDatabaseLoader"* }
%"class.blink::HRTFDatabaseLoader" = type opaque
%"class.blink::AsyncAudioDecoder" = type { i8 }
%"class.blink::HeapHashSet.323" = type { %"class.WTF::HashSet.326" }
%"class.WTF::HashSet.326" = type { %"class.WTF::HashTable.327" }
%"class.WTF::HashTable.327" = type <{ %"class.blink::Member.44"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.329" = type { %"class.blink::MemberBase.330" }
%"class.blink::MemberBase.330" = type { %"class.blink::PeriodicWave"* }
%"class.blink::PeriodicWave" = type opaque
%class.scoped_refptr.331 = type { %"class.blink::AudioDestinationHandler"* }
%"class.blink::AudioDestinationHandler" = type <{ %"class.blink::AudioHandler.base", [4 x i8], %"struct.std::__1::atomic.99", i8, [7 x i8] }>
%"class.blink::Member.332" = type { %"class.blink::MemberBase.333" }
%"class.blink::MemberBase.333" = type { %"class.blink::AudioWorklet"* }
%"class.blink::AudioWorklet" = type opaque
%"class.blink::WorkerThread" = type opaque
%class.scoped_refptr.269 = type { %"class.blink::DeferredTaskHandler"* }
%"class.blink::DeferredTaskHandler" = type <{ %"class.WTF::ThreadSafeRefCounted.270", [4 x i8], %"class.base::SupportsWeakPtr", %"class.WTF::HashSet.279", %"class.WTF::Vector.284", i8, [3 x i8], i32, %"class.WTF::HashSet.289", %"class.WTF::HashSet.289", %"class.WTF::HashSet.293", %"class.WTF::HashSet.297", %"class.WTF::Vector.284", %"class.WTF::Vector.284", %"class.WTF::Vector.284", %"class.WTF::Vector.284", i8, [7 x i8], %"class.WTF::HashSet.279", %"class.WTF::Vector.284", %class.scoped_refptr.258, %"class.WTF::RecursiveMutex", %"class.WTF::Mutex", %"struct.std::__1::atomic", [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted.270" = type { %"class.base::RefCountedThreadSafe.271" }
%"class.base::RefCountedThreadSafe.271" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.272 }
%class.scoped_refptr.272 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.WTF::HashSet.289" = type { %"class.WTF::HashTable.290" }
%"class.WTF::HashTable.290" = type <{ %"class.blink::AudioHandler"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.293" = type { %"class.WTF::HashTable.294" }
%"class.WTF::HashTable.294" = type <{ %"class.blink::AudioSummingJunction"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioSummingJunction" = type <{ i32 (...)**, %class.scoped_refptr.269, %"class.WTF::HashSet.297", %"class.WTF::Vector.395", i8, [7 x i8] }>
%"class.WTF::Vector.395" = type { %"class.WTF::VectorBuffer.396" }
%"class.WTF::VectorBuffer.396" = type { %"class.WTF::VectorBufferBase.397" }
%"class.WTF::VectorBufferBase.397" = type { %"class.blink::AudioNodeOutput"**, i32, i32 }
%"class.blink::AudioNodeOutput" = type { %"class.blink::AudioHandler"*, i32, i32, %class.scoped_refptr.301, %class.scoped_refptr.301, i8, [7 x i8], %"class.WTF::HashSet.315", i8, i8, i32, i32, [4 x i8], %"class.WTF::HashSet.319" }
%class.scoped_refptr.301 = type { %"class.blink::AudioBus"* }
%"class.blink::AudioBus" = type { %"class.WTF::ThreadSafeRefCounted.302", i32, %"class.WTF::Vector.304", i32, float }
%"class.WTF::ThreadSafeRefCounted.302" = type { %"class.base::RefCountedThreadSafe.303" }
%"class.base::RefCountedThreadSafe.303" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.304" = type { %"class.WTF::VectorBuffer.305" }
%"class.WTF::VectorBuffer.305" = type { %"class.WTF::VectorBufferBase.306", [64 x i8] }
%"class.WTF::VectorBufferBase.306" = type { %"class.blink::AudioChannel"*, i32, i32 }
%"class.blink::AudioChannel" = type <{ i64, float*, %"class.std::__1::unique_ptr.307", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.blink::AudioArray"* }
%"class.WTF::HashSet.315" = type { %"class.WTF::HashTable.316" }
%"class.WTF::HashTable.316" = type <{ %"class.blink::AudioNodeInput"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioNodeInput" = type opaque
%"class.WTF::HashSet.319" = type { %"class.WTF::HashTable.320" }
%"class.WTF::HashTable.320" = type <{ %"class.blink::AudioParamHandler"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.297" = type { %"class.WTF::HashTable.298" }
%"class.WTF::HashTable.298" = type <{ %"class.blink::AudioNodeOutput"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.279" = type { %"class.WTF::HashTable.280" }
%"class.WTF::HashTable.280" = type <{ %class.scoped_refptr.283*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %class.scoped_refptr.283*, i32, i32 }
%"class.WTF::RecursiveMutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::Vector.352" = type { %"class.WTF::VectorBuffer.353" }
%"class.WTF::VectorBuffer.353" = type { %"class.WTF::VectorBufferBase.354" }
%"class.WTF::VectorBufferBase.354" = type { %"class.std::__1::unique_ptr.355"*, i32, i32 }
%"class.std::__1::unique_ptr.355" = type opaque
%"class.WTF::Vector.358" = type { %"class.WTF::VectorBuffer.359" }
%"class.WTF::VectorBuffer.359" = type { %"class.WTF::VectorBufferBase.360" }
%"class.WTF::VectorBufferBase.360" = type { %"class.std::__1::unique_ptr.361"*, i32, i32 }
%"class.std::__1::unique_ptr.361" = type opaque
%"class.base::SupportsWeakPtr.364" = type { %"class.base::internal::WeakReferenceOwner" }
%"struct.std::__1::atomic.365" = type { %"struct.std::__1::__atomic_base.366" }
%"struct.std::__1::__atomic_base.366" = type { %"struct.std::__1::__cxx_atomic_impl.367" }
%"struct.std::__1::__cxx_atomic_impl.367" = type { %"struct.std::__1::__cxx_atomic_base_impl.368" }
%"struct.std::__1::__cxx_atomic_base_impl.368" = type { i32 }
%class.scoped_refptr.258 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.259" }>
%"class.base::RefCountedThreadSafe.259" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"class.blink::SharedAudioBuffer"* }
%"class.blink::SharedAudioBuffer" = type { float, i32, %"class.WTF::Vector.372" }
%"class.WTF::Vector.372" = type { %"class.WTF::VectorBuffer.373" }
%"class.WTF::VectorBuffer.373" = type { %"class.WTF::VectorBufferBase.374" }
%"class.WTF::VectorBufferBase.374" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { float** }
%"class.std::__1::unique_ptr.386" = type { %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { float** }
%class.scoped_refptr.392 = type { %"class.blink::AudioParamHandler"* }
%"class.blink::AudioParamHandler" = type { %"class.blink::AudioSummingJunction.base", %"class.WTF::ThreadSafeRefCounted.393", i32, %"class.WTF::String", %"struct.std::__1::atomic.400", float, i32, i32, float, float, %"class.blink::AudioParamTimeline", %class.scoped_refptr.331, %class.scoped_refptr.301 }
%"class.blink::AudioSummingJunction.base" = type <{ i32 (...)**, %class.scoped_refptr.269, %"class.WTF::HashSet.297", %"class.WTF::Vector.395", i8 }>
%"class.WTF::ThreadSafeRefCounted.393" = type { %"class.base::RefCountedThreadSafe.394" }
%"class.base::RefCountedThreadSafe.394" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.400" = type { %"struct.std::__1::__atomic_base.401" }
%"struct.std::__1::__atomic_base.401" = type { %"struct.std::__1::__cxx_atomic_impl.402" }
%"struct.std::__1::__cxx_atomic_impl.402" = type { %"struct.std::__1::__cxx_atomic_base_impl.403" }
%"struct.std::__1::__cxx_atomic_base_impl.403" = type { float }
%"class.blink::AudioParamTimeline" = type <{ %"class.WTF::Vector.404", %"class.WTF::HashSet.415", %"class.WTF::Mutex", float, [4 x i8] }>
%"class.WTF::Vector.404" = type { %"class.WTF::VectorBuffer.405" }
%"class.WTF::VectorBuffer.405" = type { %"class.WTF::VectorBufferBase.406" }
%"class.WTF::VectorBufferBase.406" = type { %"class.std::__1::unique_ptr.407"*, i32, i32 }
%"class.std::__1::unique_ptr.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.blink::AudioParamTimeline::ParamEvent"* }
%"class.blink::AudioParamTimeline::ParamEvent" = type <{ i32, float, double, float, [4 x i8], double, double, double, %"class.WTF::Vector.419", double, float, [4 x i8], %"class.std::__1::unique_ptr.407", i8, [7 x i8] }>
%"class.WTF::Vector.419" = type { %"class.WTF::VectorBuffer.420" }
%"class.WTF::VectorBuffer.420" = type { %"class.WTF::VectorBufferBase.421" }
%"class.WTF::VectorBufferBase.421" = type { float*, i32, i32 }
%"class.WTF::HashSet.415" = type { %"class.WTF::HashTable.416" }
%"class.WTF::HashTable.416" = type <{ %"class.blink::AudioParamTimeline::ParamEvent"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioBufferSourceNode" = type { %"class.blink::AudioScheduledSourceNode", %"class.blink::Member.262", %"class.blink::Member.262", %"class.blink::Member.571" }
%"class.blink::AudioScheduledSourceNode" = type { %"class.blink::AudioNode", %"class.blink::ActiveScriptWrappable.570" }
%"class.blink::ActiveScriptWrappable.570" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Member.571" = type { %"class.blink::MemberBase.572" }
%"class.blink::MemberBase.572" = type { %"class.blink::AudioBuffer"* }
%"class.blink::AudioBuffer" = type { %"class.blink::ScriptWrappable", float, i32, %"class.blink::HeapVector.562" }
%"class.blink::HeapVector.562" = type { %"class.WTF::Vector.565" }
%"class.WTF::Vector.565" = type { %"class.WTF::VectorBuffer.566" }
%"class.WTF::VectorBuffer.566" = type { %"class.WTF::VectorBufferBase.567" }
%"class.WTF::VectorBufferBase.567" = type { %"class.blink::Member.568"*, i32, i32 }
%"class.blink::Member.568" = type { %"class.blink::MemberBase.707" }
%"class.blink::MemberBase.707" = type { %"class.blink::DOMTypedArray"* }
%"class.blink::DOMTypedArray" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.708" }
%"class.blink::Member.708" = type { %"class.blink::MemberBase.709" }
%"class.blink::MemberBase.709" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.736 }
%union.anon.736 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::AudioScheduledSourceHandler" = type <{ %"class.blink::AudioHandler.base", [4 x i8], %"class.base::SupportsWeakPtr.364", %"class.WTF::Mutex", double, double, %"struct.std::__1::atomic.365", [4 x i8], %class.scoped_refptr.258, i8, [7 x i8] }>
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.259", [4 x i8] }>
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.555", %"class.std::__1::__tuple_leaf.556" }
%"class.std::__1::__tuple_leaf" = type { i64 }
%"class.std::__1::__tuple_leaf.555" = type { i64 }
%"class.std::__1::__tuple_leaf.556" = type { double }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.250" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::DeferredTaskHandler::GraphAutoLocker" = type { %"class.blink::DeferredTaskHandler"* }
%"class.WTF::IntegerToStringConverter" = type <{ [12 x i8], [4 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.745, i32, i8, i8, [2 x i8] }>
%union.anon.745 = type { %"class.WTF::Vector.746" }
%"class.WTF::Vector.746" = type { %"class.WTF::VectorBuffer.747" }
%"class.WTF::VectorBuffer.747" = type { %"class.WTF::VectorBufferBase.748", [16 x i8] }
%"class.WTF::VectorBufferBase.748" = type { i8*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::AudioBufferSourceOptions" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.blink::Member.571", float, i8, [3 x i8], double, double, float, [4 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.v8::Value" = type { i8 }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.577", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.612", i32, i8, [3 x i8], %"class.blink::HeapVector.614", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.622", %"class.blink::Member.624", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.633", %"class.blink::Member.639", %"class.blink::Member.641", i8, [7 x i8] }>
%"class.blink::Supplementable.577" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.578" }
%"class.blink::HeapHashMap.578" = type { %"class.WTF::HashMap.581" }
%"class.WTF::HashMap.581" = type { %"class.WTF::HashTable.582" }
%"class.WTF::HashTable.582" = type <{ %"struct.WTF::KeyValuePair.584"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.584" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.585" }
%"class.blink::Supplementable.585" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.586" }
%"class.blink::HeapHashMap.586" = type { %"class.WTF::HashMap.589" }
%"class.WTF::HashMap.589" = type { %"class.WTF::HashTable.590" }
%"class.WTF::HashTable.590" = type <{ %"struct.WTF::KeyValuePair.592"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.592" = type { i8*, %"class.blink::Member.710" }
%"class.blink::Member.710" = type { %"class.blink::MemberBase.711" }
%"class.blink::MemberBase.711" = type { %"class.blink::Supplement.712"* }
%"class.blink::Supplement.712" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.713" }
%"class.blink::Member.713" = type { %"class.blink::MemberBase.714" }
%"class.blink::MemberBase.714" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.593, %"class.std::__1::unique_ptr.594", %"class.std::__1::unique_ptr.594", %"class.std::__1::unique_ptr.600", %"class.std::__1::unique_ptr.600", %"class.blink::Member.606", i32, [4 x i8], %"class.WTF::HashSet.608", i32, i32 }
%class.scoped_refptr.593 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.594" = type { %"class.std::__1::__compressed_pair.595" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"struct.std::__1::__compressed_pair_elem.596" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.600" = type { %"class.std::__1::__compressed_pair.601" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.606" = type { %"class.blink::MemberBase.607" }
%"class.blink::MemberBase.607" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.608" = type { %"class.WTF::HashTable.609" }
%"class.WTF::HashTable.609" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.612" = type { %"class.blink::MemberBase.613" }
%"class.blink::MemberBase.613" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.614" = type { %"class.WTF::Vector.617" }
%"class.WTF::Vector.617" = type { %"class.WTF::VectorBuffer.618" }
%"class.WTF::VectorBuffer.618" = type { %"class.WTF::VectorBufferBase.619" }
%"class.WTF::VectorBufferBase.619" = type { %"class.blink::Member.620"*, i32, i32 }
%"class.blink::Member.620" = type opaque
%"class.blink::Member.622" = type { %"class.blink::MemberBase.623" }
%"class.blink::MemberBase.623" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.624" = type { %"class.blink::MemberBase.625" }
%"class.blink::MemberBase.625" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.626", i32, i32 }
%"class.blink::HeapHashMap.626" = type { %"class.WTF::HashMap.629" }
%"class.WTF::HashMap.629" = type { %"class.WTF::HashTable.630" }
%"class.WTF::HashTable.630" = type <{ %"struct.WTF::KeyValuePair.632"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.632" = type opaque
%"class.std::__1::unique_ptr.633" = type { %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.639" = type { %"class.blink::MemberBase.640" }
%"class.blink::MemberBase.640" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.641" = type { %"class.blink::MemberBase.642" }
%"class.blink::MemberBase.642" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.643", %"class.blink::Member.645", %"class.blink::Member.643", %"class.blink::Member.643", %"class.blink::Member.647" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.651", %"class.blink::Member.653", %"class.blink::Member.645", %"class.blink::Member.655", %"class.blink::Member.655", %"class.blink::Member.679", %"class.blink::Member.681", %"class.blink::Member.683", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.688", %"class.blink::HeapVector.690" }
%"class.blink::Member.651" = type { %"class.blink::MemberBase.652" }
%"class.blink::MemberBase.652" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type opaque
%"class.blink::Member.653" = type { %"class.blink::MemberBase.654" }
%"class.blink::MemberBase.654" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.blink::Member.655" = type { %"class.blink::MemberBase.656" }
%"class.blink::MemberBase.656" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.659" }
%"class.blink::HeapHashMap.659" = type { %"class.WTF::HashMap.662" }
%"class.WTF::HashMap.662" = type { %"class.WTF::HashTable.663" }
%"class.WTF::HashTable.663" = type <{ %"struct.WTF::KeyValuePair.665"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.665" = type { %"class.WTF::AtomicString", %"class.blink::Member.666" }
%"class.blink::Member.666" = type { %"class.blink::MemberBase.667" }
%"class.blink::MemberBase.667" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.670", i32, %"class.blink::HeapVector.672" }
%"class.blink::Member.670" = type { %"class.blink::MemberBase.671" }
%"class.blink::MemberBase.671" = type { %"class.blink::Element"* }
%"class.blink::Element" = type opaque
%"class.blink::HeapVector.672" = type { %"class.WTF::Vector.675" }
%"class.WTF::Vector.675" = type { %"class.WTF::VectorBuffer.676" }
%"class.WTF::VectorBuffer.676" = type { %"class.WTF::VectorBufferBase.677" }
%"class.WTF::VectorBufferBase.677" = type { %"class.blink::Member.670"*, i32, i32 }
%"class.blink::Member.679" = type { %"class.blink::MemberBase.680" }
%"class.blink::MemberBase.680" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.681" = type { %"class.blink::MemberBase.682" }
%"class.blink::MemberBase.682" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.683" = type { %"class.blink::MemberBase.684" }
%"class.blink::MemberBase.684" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.685" }
%"class.blink::Member.685" = type { %"class.blink::MemberBase.686" }
%"class.blink::MemberBase.686" = type { %"class.blink::HeapHashMap.687"* }
%"class.blink::HeapHashMap.687" = type opaque
%"class.blink::Member.688" = type { %"class.blink::MemberBase.689" }
%"class.blink::MemberBase.689" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.690" = type { %"class.WTF::Vector.693" }
%"class.WTF::Vector.693" = type { %"class.WTF::VectorBuffer.694" }
%"class.WTF::VectorBuffer.694" = type { %"class.WTF::VectorBufferBase.695" }
%"class.WTF::VectorBufferBase.695" = type { %"class.blink::Member.696"*, i32, i32 }
%"class.blink::Member.696" = type opaque
%"class.blink::Member.643" = type { %"class.blink::MemberBase.644" }
%"class.blink::MemberBase.644" = type { %"class.blink::Node"* }
%"class.blink::Member.647" = type { %"class.blink::MemberBase.648" }
%"class.blink::MemberBase.648" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::DOMWindow" = type opaque
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::Event" = type opaque
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.700" }
%"class.absl::optional.700" = type { %"class.absl::optional_internal::optional_data.701" }
%"class.absl::optional_internal::optional_data.701" = type { %"class.absl::optional_internal::optional_data_base.702" }
%"class.absl::optional_internal::optional_data_base.702" = type { %"class.absl::optional_internal::optional_data_dtor_base.703" }
%"class.absl::optional_internal::optional_data_dtor_base.703" = type { i8, %union.anon.704 }
%union.anon.704 = type { i64 }
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.705", i8, [7 x i8] }>
%"class.blink::Member.705" = type { %"class.blink::MemberBase.706" }
%"class.blink::MemberBase.706" = type { %"class.blink::EventListener"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.WTF::Vector.751" = type { %"class.WTF::VectorBuffer.752" }
%"class.WTF::VectorBuffer.752" = type { %"class.WTF::VectorBufferBase.753", [16 x i8] }
%"class.WTF::VectorBufferBase.753" = type { i16*, i32, i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink17ExceptionMessages17IndexOutsideRangeIjEEN3WTF6StringEPKcT_S6_NS0_9BoundTypeES6_S7_ = comdat any

$_ZN5blink17ExceptionMessages24IndexExceedsMinimumBoundIdEEN3WTF6StringEPKcT_S6_ = comdat any

$_ZN5blink12AudioHandler22ProcessOnlyAudioParamsEj = comdat any

$_ZNK5blink27AudioScheduledSourceHandler22RequiresTailProcessingEv = comdat any

$_ZNK5blink27AudioScheduledSourceHandler8TailTimeEv = comdat any

$_ZNK5blink27AudioScheduledSourceHandler11LatencyTimeEv = comdat any

$_ZN5blink12AudioHandler24UpdatePullStatusIfNeededEv = comdat any

$_ZN5blink24AudioScheduledSourceNodeD2Ev = comdat any

$_ZN5blink21AudioBufferSourceNodeD0Ev = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink21AudioBufferSourceNode18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv = comdat any

$_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv = comdat any

$_ZThn168_N5blink21AudioBufferSourceNodeD1Ev = comdat any

$_ZThn168_N5blink21AudioBufferSourceNodeD0Ev = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_24AudioScheduledSourceNodeEE18IsContextDestroyedEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_24AudioScheduledSourceNodeEE26DispatchHasPendingActivityEv = comdat any

$_ZN3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZNK3WTF6VectorIN5blink19ArrayBufferContentsELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_10AudioParamEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_11AudioBufferEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEEN3WTF12VectorTraitsIS7_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink24AudioBufferSourceHandlerE = hidden unnamed_addr constant { [25 x i8*] } { [25 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::AudioBufferSourceHandler"*)* @_ZN5blink24AudioBufferSourceHandlerD2Ev to i8*), i8* bitcast (void (%"class.blink::AudioBufferSourceHandler"*)* @_ZN5blink24AudioBufferSourceHandlerD0Ev to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*)* @_ZN5blink12AudioHandler7DisposeEv to i8*), i8* bitcast (%"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)* @_ZNK5blink12AudioHandler7ContextEv to i8*), i8* bitcast (void (%"class.blink::AudioBufferSourceHandler"*, i32)* @_ZN5blink24AudioBufferSourceHandler7ProcessEj to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, i32)* @_ZN5blink12AudioHandler22ProcessOnlyAudioParamsEj to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*)* @_ZN5blink12AudioHandler10InitializeEv to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*)* @_ZN5blink12AudioHandler12UninitializeEv to i8*), i8* bitcast (i32 (%"class.blink::AudioHandler"*)* @_ZNK5blink12AudioHandler22NumberOfOutputChannelsEv to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, i32)* @_ZN5blink12AudioHandler18ProcessIfNecessaryEj to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)* @_ZN5blink12AudioHandler29CheckNumberOfChannelsForInputEPNS_14AudioNodeInputE to i8*), i8* bitcast (i1 (%"class.blink::AudioScheduledSourceHandler"*)* @_ZNK5blink27AudioScheduledSourceHandler22RequiresTailProcessingEv to i8*), i8* bitcast (double (%"class.blink::AudioScheduledSourceHandler"*)* @_ZNK5blink27AudioScheduledSourceHandler8TailTimeEv to i8*), i8* bitcast (double (%"class.blink::AudioScheduledSourceHandler"*)* @_ZNK5blink27AudioScheduledSourceHandler11LatencyTimeEv to i8*), i8* bitcast (i1 (%"class.blink::AudioBufferSourceHandler"*)* @_ZNK5blink24AudioBufferSourceHandler17PropagatesSilenceEv to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, i32, %"class.blink::ExceptionState"*)* @_ZN5blink12AudioHandler15SetChannelCountEjRNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZN5blink12AudioHandler19SetChannelCountModeERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZN5blink12AudioHandler24SetChannelInterpretationERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*)* @_ZN5blink12AudioHandler24UpdatePullStatusIfNeededEv to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, i32)* @_ZN5blink12AudioHandler10PullInputsEj to i8*), i8* bitcast (void (%"class.blink::AudioBufferSourceHandler"*)* @_ZN5blink24AudioBufferSourceHandler25HandleStoppableSourceNodeEv to i8*), i8* bitcast (void (%"class.blink::AudioScheduledSourceHandler"*)* @_ZN5blink27AudioScheduledSourceHandler20FinishWithoutOnEndedEv to i8*), i8* bitcast (void (%"class.blink::AudioScheduledSourceHandler"*)* @_ZN5blink27AudioScheduledSourceHandler6FinishEv to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [34 x i8] c"AudioBufferSourceHandler::Process\00", align 1
@.str.1 = private unnamed_addr constant [86 x i8] c"Cannot set buffer to non-null after it has been already been set to a non-null buffer\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"number of input channels\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"cannot call start more than once.\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"start time\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"offset\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"duration\00", align 1
@_ZN5blink27AudioScheduledSourceHandler12kUnknownTimeE = external local_unnamed_addr constant double, align 8
@_ZTVN5blink21AudioBufferSourceNodeE = hidden unnamed_addr constant { [31 x i8*], [5 x i8*], [7 x i8*] } { [31 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::AudioScheduledSourceNode"*)* @_ZN5blink24AudioScheduledSourceNodeD2Ev to i8*), i8* bitcast (void (%"class.blink::AudioBufferSourceNode"*)* @_ZN5blink21AudioBufferSourceNodeD0Ev to i8*), i8* bitcast (i1 (%"class.blink::AudioScheduledSourceNode"*)* @_ZNK5blink24AudioScheduledSourceNode18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::AudioBufferSourceNode"*, %"class.blink::Visitor"*)* @_ZNK5blink21AudioBufferSourceNode5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::AudioBufferSourceNode"*)* @_ZNK5blink21AudioBufferSourceNode18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AudioNode"*)* @_ZNK5blink9AudioNode13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::AudioNode"*)* @_ZNK5blink9AudioNode19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*), i8* bitcast (void (%"class.blink::AudioBufferSourceNode"*)* @_ZN5blink21AudioBufferSourceNode15ReportDidCreateEv to i8*), i8* bitcast (void (%"class.blink::AudioBufferSourceNode"*)* @_ZN5blink21AudioBufferSourceNode21ReportWillBeDestroyedEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -72 to i8*), i8* null, i8* bitcast (void (%"class.blink::AudioBufferSourceNode"*, %"class.blink::Visitor"*)* @_ZThn72_NK5blink21AudioBufferSourceNode5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::AudioBufferSourceNode"*)* @_ZThn72_N5blink21AudioBufferSourceNode15ReportDidCreateEv to i8*), i8* bitcast (void (%"class.blink::AudioBufferSourceNode"*)* @_ZThn72_N5blink21AudioBufferSourceNode21ReportWillBeDestroyedEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -168 to i8*), i8* null, i8* bitcast (void (%"class.blink::AudioBufferSourceNode"*, %"class.blink::Visitor"*)* @_ZThn168_NK5blink21AudioBufferSourceNode5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::AudioBufferSourceNode"*)* @_ZThn168_N5blink21AudioBufferSourceNodeD1Ev to i8*), i8* bitcast (void (%"class.blink::AudioBufferSourceNode"*)* @_ZThn168_N5blink21AudioBufferSourceNodeD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable.570"*)* @_ZNK5blink21ActiveScriptWrappableINS_24AudioScheduledSourceNodeEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable.570"*)* @_ZNK5blink21ActiveScriptWrappableINS_24AudioScheduledSourceNodeEE26DispatchHasPendingActivityEv to i8*)] }, align 8
@_ZTVN5blink27AudioScheduledSourceHandlerE = external unnamed_addr constant { [25 x i8*] }, align 8
@.str.7 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.8 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink21AudioBufferSourceNode18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.9 = private unnamed_addr constant [23 x i8] c"blink_gc_plugin_ignore\00", section "llvm.metadata"
@.str.10 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/dom/events/event_target.h\00", section "llvm.metadata"
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.11 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.12 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"The \00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c" provided (\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c") is outside the range \00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c", \00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.18 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.20 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.21 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@.str.22 = private unnamed_addr constant [16 x i8] c") is less than \00", align 1
@.str.23 = private unnamed_addr constant [13 x i8] c"or equal to \00", align 1
@.str.24 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.25 = private unnamed_addr constant [20 x i8] c"the minimum bound (\00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c").\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.27 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.28 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

@_ZN5blink24AudioBufferSourceHandlerC1ERNS_9AudioNodeEfRNS_17AudioParamHandlerES4_ = hidden unnamed_addr alias void (%"class.blink::AudioBufferSourceHandler"*, %"class.blink::AudioNode"*, float, %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"*), void (%"class.blink::AudioBufferSourceHandler"*, %"class.blink::AudioNode"*, float, %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"*)* @_ZN5blink24AudioBufferSourceHandlerC2ERNS_9AudioNodeEfRNS_17AudioParamHandlerES4_
@_ZN5blink24AudioBufferSourceHandlerD1Ev = hidden unnamed_addr alias void (%"class.blink::AudioBufferSourceHandler"*), void (%"class.blink::AudioBufferSourceHandler"*)* @_ZN5blink24AudioBufferSourceHandlerD2Ev
@_ZN5blink21AudioBufferSourceNodeC1ERNS_16BaseAudioContextE = hidden unnamed_addr alias void (%"class.blink::AudioBufferSourceNode"*, %"class.blink::BaseAudioContext"*), void (%"class.blink::AudioBufferSourceNode"*, %"class.blink::BaseAudioContext"*)* @_ZN5blink21AudioBufferSourceNodeC2ERNS_16BaseAudioContextE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24AudioBufferSourceHandlerC2ERNS_9AudioNodeEfRNS_17AudioParamHandlerES4_(%"class.blink::AudioBufferSourceHandler"*, %"class.blink::AudioNode"* dereferenceable(168), float, %"class.blink::AudioParamHandler"* dereferenceable(208), %"class.blink::AudioParamHandler"* dereferenceable(208)) unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = bitcast %"class.blink::AudioBufferSourceHandler"* %0 to %"class.blink::AudioScheduledSourceHandler"*
  tail call void @_ZN5blink27AudioScheduledSourceHandlerC2ENS_12AudioHandler8NodeTypeERNS_9AudioNodeEf(%"class.blink::AudioScheduledSourceHandler"* %8, i32 3, %"class.blink::AudioNode"* dereferenceable(168) %1, float %2) #8
  %9 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN5blink24AudioBufferSourceHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 5, i32 0
  %12 = bitcast %"class.std::__1::unique_ptr.369"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false)
  store %"class.blink::AudioParamHandler"* %3, %"class.blink::AudioParamHandler"** %11, align 8
  %13 = icmp eq %"class.blink::AudioParamHandler"* %3, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i64 0, i64 0)) #8
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8
  br label %21

21:                                               ; preds = %5, %14, %18
  %22 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 6, i32 0
  store %"class.blink::AudioParamHandler"* %4, %"class.blink::AudioParamHandler"** %22, align 8
  %23 = icmp eq %"class.blink::AudioParamHandler"* %4, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 1 monotonic
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i64 0, i64 0)) #8
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  br label %31

31:                                               ; preds = %21, %24, %28
  %32 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 7
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 8
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 10
  %35 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 15
  store double 0.000000e+00, double* %35, align 8
  %36 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 16
  %37 = bitcast double* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 25, i1 false)
  store double 2.000000e-02, double* %36, align 8
  %38 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 19
  store double 1.000000e+00, double* %38, align 8
  %39 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 20
  store i8 0, i8* %39, align 8
  %40 = bitcast %"class.blink::AudioBufferSourceHandler"* %0 to %"class.blink::AudioHandler"*
  call void @_ZN5blink12AudioHandler9AddOutputEj(%"class.blink::AudioHandler"* %40, i32 1) #8
  call void @_ZN5blink12AudioHandler10InitializeEv(%"class.blink::AudioHandler"* %40) #8
  ret void
}

declare void @_ZN5blink27AudioScheduledSourceHandlerC2ENS_12AudioHandler8NodeTypeERNS_9AudioNodeEf(%"class.blink::AudioScheduledSourceHandler"*, i32, %"class.blink::AudioNode"* dereferenceable(168), float) unnamed_addr #1

declare void @_ZN5blink12AudioHandler9AddOutputEj(%"class.blink::AudioHandler"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12AudioHandler10InitializeEv(%"class.blink::AudioHandler"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AudioBufferSourceHandler"* @_ZN5blink24AudioBufferSourceHandler6CreateERNS_9AudioNodeEfRNS_17AudioParamHandlerES4_(%"class.blink::AudioNode"* dereferenceable(168), float, %"class.blink::AudioParamHandler"* dereferenceable(208), %"class.blink::AudioParamHandler"* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %5 = tail call noalias i8* @malloc(i64 344) #8
  %6 = bitcast i8* %5 to %"class.blink::AudioBufferSourceHandler"*
  tail call void @_ZN5blink24AudioBufferSourceHandlerC2ERNS_9AudioNodeEfRNS_17AudioParamHandlerES4_(%"class.blink::AudioBufferSourceHandler"* %6, %"class.blink::AudioNode"* dereferenceable(168) %0, float %1, %"class.blink::AudioParamHandler"* dereferenceable(208) %2, %"class.blink::AudioParamHandler"* dereferenceable(208) %3)
  ret %"class.blink::AudioBufferSourceHandler"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24AudioBufferSourceHandlerD2Ev(%"class.blink::AudioBufferSourceHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN5blink24AudioBufferSourceHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast %"class.blink::AudioBufferSourceHandler"* %0 to %"class.blink::AudioHandler"*
  tail call void @_ZN5blink12AudioHandler12UninitializeEv(%"class.blink::AudioHandler"* %3) #8
  %4 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 6, i32 0
  %5 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %4, align 8
  %6 = icmp eq %"class.blink::AudioParamHandler"* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %5, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.base::RefCountedThreadSafe.394", %"class.base::RefCountedThreadSafe.394"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %19

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe.394", %"class.base::RefCountedThreadSafe.394"* %8, i64 -15
  %14 = bitcast %"class.base::RefCountedThreadSafe.394"* %13 to %"class.blink::AudioParamHandler"*
  %15 = bitcast %"class.base::RefCountedThreadSafe.394"* %13 to void (%"class.blink::AudioParamHandler"*)***
  %16 = load void (%"class.blink::AudioParamHandler"*)**, void (%"class.blink::AudioParamHandler"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %16, i64 1
  %18 = load void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %17, align 8
  tail call void %18(%"class.blink::AudioParamHandler"* nonnull %14) #8
  br label %19

19:                                               ; preds = %1, %7, %12
  %20 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 5, i32 0
  %21 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %20, align 8
  %22 = icmp eq %"class.blink::AudioParamHandler"* %21, null
  br i1 %22, label %35, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::AudioParamHandler", %"class.blink::AudioParamHandler"* %21, i64 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.394", %"class.base::RefCountedThreadSafe.394"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %35

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe.394", %"class.base::RefCountedThreadSafe.394"* %24, i64 -15
  %30 = bitcast %"class.base::RefCountedThreadSafe.394"* %29 to %"class.blink::AudioParamHandler"*
  %31 = bitcast %"class.base::RefCountedThreadSafe.394"* %29 to void (%"class.blink::AudioParamHandler"*)***
  %32 = load void (%"class.blink::AudioParamHandler"*)**, void (%"class.blink::AudioParamHandler"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %32, i64 1
  %34 = load void (%"class.blink::AudioParamHandler"*)*, void (%"class.blink::AudioParamHandler"*)** %33, align 8
  tail call void %34(%"class.blink::AudioParamHandler"* nonnull %30) #8
  br label %35

35:                                               ; preds = %19, %23, %28
  %36 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %37 = load float**, float*** %36, align 8
  store float** null, float*** %36, align 8
  %38 = icmp eq float** %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  %40 = bitcast float** %37 to i8*
  tail call void @_ZdaPv(i8* %40) #15
  br label %41

41:                                               ; preds = %35, %39
  %42 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load float**, float*** %42, align 8
  store float** null, float*** %42, align 8
  %44 = icmp eq float** %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %41
  %46 = bitcast float** %43 to i8*
  tail call void @_ZdaPv(i8* %46) #15
  br label %47

47:                                               ; preds = %41, %45
  %48 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %49 = load %"class.blink::SharedAudioBuffer"*, %"class.blink::SharedAudioBuffer"** %48, align 8
  store %"class.blink::SharedAudioBuffer"* null, %"class.blink::SharedAudioBuffer"** %48, align 8
  %50 = icmp eq %"class.blink::SharedAudioBuffer"* %49, null
  br i1 %50, label %75, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %49, i64 0, i32 2
  %53 = getelementptr inbounds %"class.WTF::Vector.372", %"class.WTF::Vector.372"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"** %53, align 8
  %55 = icmp eq %"class.blink::ArrayBufferContents"* %54, null
  br i1 %55, label %73, label %56, !prof !2

56:                                               ; preds = %51
  %57 = bitcast %"class.blink::ArrayBufferContents"* %54 to i8*
  %58 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %49, i64 0, i32 2, i32 0, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %71, label %61, !prof !3

61:                                               ; preds = %56
  %62 = zext i32 %59 to i64
  %63 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %54, i64 %62
  br label %64

64:                                               ; preds = %64, %61
  %65 = phi %"class.blink::ArrayBufferContents"* [ %66, %64 ], [ %54, %61 ]
  tail call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* %65) #8
  %66 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %65, i64 1
  %67 = icmp eq %"class.blink::ArrayBufferContents"* %66, %63
  br i1 %67, label %68, label %64

68:                                               ; preds = %64
  store i32 0, i32* %58, align 4
  %69 = bitcast %"class.WTF::Vector.372"* %52 to i8**
  %70 = load i8*, i8** %69, align 8
  br label %71

71:                                               ; preds = %68, %56
  %72 = phi i8* [ %70, %68 ], [ %57, %56 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %72) #8
  br label %73

73:                                               ; preds = %71, %51
  %74 = bitcast %"class.blink::SharedAudioBuffer"* %49 to i8*
  tail call void @free(i8* %74) #8
  br label %75

75:                                               ; preds = %47, %73
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN5blink27AudioScheduledSourceHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %76 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 0, i32 8, i32 0
  %77 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %76, align 8
  %78 = icmp eq %"class.base::SingleThreadTaskRunner"* %77, null
  br i1 %78, label %87, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %77, i64 0, i32 0, i32 0, i32 1
  %81 = getelementptr inbounds %"class.base::RefCountedThreadSafe.259", %"class.base::RefCountedThreadSafe.259"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw sub i32* %81, i32 1 acq_rel
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %87

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.base::RefCountedThreadSafe.259", %"class.base::RefCountedThreadSafe.259"* %80, i64 -2
  %86 = bitcast %"class.base::RefCountedThreadSafe.259"* %85 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %86) #8
  br label %87

87:                                               ; preds = %75, %79, %84
  %88 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 0, i32 3, i32 0
  tail call void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"* %88) #8
  %89 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 0, i32 2, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"* %89) #8
  tail call void @_ZN5blink12AudioHandlerD2Ev(%"class.blink::AudioHandler"* %3) #8
  ret void
}

declare void @_ZN5blink12AudioHandler12UninitializeEv(%"class.blink::AudioHandler"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24AudioBufferSourceHandlerD0Ev(%"class.blink::AudioBufferSourceHandler"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink24AudioBufferSourceHandlerD2Ev(%"class.blink::AudioBufferSourceHandler"* %0) #8
  %2 = bitcast %"class.blink::AudioBufferSourceHandler"* %0 to i8*
  tail call void @free(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24AudioBufferSourceHandler7ProcessEj(%"class.blink::AudioBufferSourceHandler"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), align 16
  %6 = and i8 %5, 25
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %14, label %8, !prof !2

8:                                                ; preds = %2
  %9 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #8
  %10 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %12 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #8
  store i64 %12, i64* %11, align 8
  %13 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %9, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #8
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), %8 ]
  %16 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), %8 ]
  %17 = phi i64 [ -6148914691236517206, %2 ], [ %13, %8 ]
  %18 = bitcast %"class.blink::AudioBufferSourceHandler"* %0 to %"class.blink::AudioHandler"*
  %19 = call dereferenceable(104) %"class.blink::AudioNodeOutput"* @_ZN5blink12AudioHandler6OutputEj(%"class.blink::AudioHandler"* %18, i32 0) #8
  %20 = call %"class.blink::AudioBus"* @_ZNK5blink15AudioNodeOutput3BusEv(%"class.blink::AudioNodeOutput"* %19) #8
  %21 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 0, i32 0, i32 5
  %22 = load i8, i8* %21, align 8, !range !4
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %14
  call void @_ZN5blink8AudioBus4ZeroEv(%"class.blink::AudioBus"* %20) #8
  br label %91

25:                                               ; preds = %14
  %26 = bitcast %"class.blink::AudioBufferSourceHandler"* %0 to %"class.blink::AudioScheduledSourceHandler"*
  %27 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 0, i32 3
  %28 = call zeroext i1 @_ZN3WTF5Mutex7TryLockEv(%"class.WTF::Mutex"* %27) #8
  br i1 %28, label %29, label %88

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %31 = load %"class.blink::SharedAudioBuffer"*, %"class.blink::SharedAudioBuffer"** %30, align 8
  %32 = icmp eq %"class.blink::SharedAudioBuffer"* %31, null
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  call void @_ZN5blink8AudioBus4ZeroEv(%"class.blink::AudioBus"* %20) #8
  br label %89

34:                                               ; preds = %29
  %35 = call dereferenceable(104) %"class.blink::AudioNodeOutput"* @_ZN5blink12AudioHandler6OutputEj(%"class.blink::AudioHandler"* %18, i32 0) #8
  %36 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %35, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = load %"class.blink::SharedAudioBuffer"*, %"class.blink::SharedAudioBuffer"** %30, align 8
  %39 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %38, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %37, %40
  br i1 %41, label %43, label %42

42:                                               ; preds = %34
  call void @_ZN5blink8AudioBus4ZeroEv(%"class.blink::AudioBus"* %20) #8
  br label %89

43:                                               ; preds = %34
  %44 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #8
  %45 = zext i32 %1 to i64
  call void @_ZN5blink27AudioScheduledSourceHandler20UpdateSchedulingInfoEmPNS_8AudioBusE(%"class.std::__1::tuple"* nonnull sret %4, %"class.blink::AudioScheduledSourceHandler"* %26, i64 %45, %"class.blink::AudioBus"* %20) #8
  %46 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = trunc i64 %47 to i32
  %49 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 1, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = trunc i64 %50 to i32
  %52 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 2, i32 0
  %53 = load double, double* %52, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #8
  %54 = icmp eq i32 %51, 0
  br i1 %54, label %62, label %55

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %20, i64 0, i32 2, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %20, i64 0, i32 2
  %61 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %65

62:                                               ; preds = %43
  call void @_ZN5blink8AudioBus4ZeroEv(%"class.blink::AudioBus"* %20) #8
  br label %89

63:                                               ; preds = %78, %55
  %64 = call zeroext i1 @_ZN5blink24AudioBufferSourceHandler16RenderFromBufferEPNS_8AudioBusEjjd(%"class.blink::AudioBufferSourceHandler"* %0, %"class.blink::AudioBus"* %20, i32 %48, i32 %51, double %53)
  br i1 %64, label %87, label %86

65:                                               ; preds = %59, %78
  %66 = phi i64 [ 0, %59 ], [ %82, %78 ]
  %67 = trunc i64 %66 to i32
  %68 = call dereferenceable(32) %"class.blink::AudioChannel"* @_ZN3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.304"* %60, i32 %67) #8
  %69 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %68, i64 0, i32 3
  store i8 0, i8* %69, align 8
  %70 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %68, i64 0, i32 1
  %71 = load float*, float** %70, align 8
  %72 = icmp eq float* %71, null
  br i1 %72, label %73, label %78

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %68, i64 0, i32 2, i32 0, i32 0, i32 0
  %75 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %75, i64 0, i32 1
  %77 = load float*, float** %76, align 8
  br label %78

78:                                               ; preds = %65, %73
  %79 = phi float* [ %77, %73 ], [ %71, %65 ]
  %80 = load float**, float*** %61, align 8
  %81 = getelementptr inbounds float*, float** %80, i64 %66
  store float* %79, float** %81, align 8
  %82 = add nuw nsw i64 %66, 1
  %83 = load i32, i32* %56, align 4
  %84 = zext i32 %83 to i64
  %85 = icmp ult i64 %82, %84
  br i1 %85, label %65, label %63

86:                                               ; preds = %63
  call void @_ZN5blink8AudioBus4ZeroEv(%"class.blink::AudioBus"* %20) #8
  br label %89

87:                                               ; preds = %63
  call void @_ZN5blink8AudioBus15ClearSilentFlagEv(%"class.blink::AudioBus"* %20) #8
  br label %89

88:                                               ; preds = %25
  call void @_ZN5blink8AudioBus4ZeroEv(%"class.blink::AudioBus"* %20) #8
  br label %91

89:                                               ; preds = %87, %86, %33, %42, %62
  %90 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %27, i64 0, i32 0
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %90) #8
  br label %91

91:                                               ; preds = %89, %88, %24
  %92 = icmp eq i8* %15, null
  br i1 %92, label %97, label %93

93:                                               ; preds = %91
  %94 = load i8, i8* %15, align 1
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %97, label %96

96:                                               ; preds = %93
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %15, i8* %16, i64 %17) #8
  br label %97

97:                                               ; preds = %91, %93, %96
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare dereferenceable(104) %"class.blink::AudioNodeOutput"* @_ZN5blink12AudioHandler6OutputEj(%"class.blink::AudioHandler"*, i32) local_unnamed_addr #1

declare %"class.blink::AudioBus"* @_ZNK5blink15AudioNodeOutput3BusEv(%"class.blink::AudioNodeOutput"*) local_unnamed_addr #1

declare void @_ZN5blink8AudioBus4ZeroEv(%"class.blink::AudioBus"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink24AudioBufferSourceHandler16NumberOfChannelsEv(%"class.blink::AudioBufferSourceHandler"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::AudioBufferSourceHandler"* %0 to %"class.blink::AudioHandler"*
  %3 = tail call dereferenceable(104) %"class.blink::AudioNodeOutput"* @_ZN5blink12AudioHandler6OutputEj(%"class.blink::AudioHandler"* %2, i32 0) #8
  %4 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

declare void @_ZN5blink27AudioScheduledSourceHandler20UpdateSchedulingInfoEmPNS_8AudioBusE(%"class.std::__1::tuple"* sret, %"class.blink::AudioScheduledSourceHandler"*, i64, %"class.blink::AudioBus"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink24AudioBufferSourceHandler16RenderFromBufferEPNS_8AudioBusEjjd(%"class.blink::AudioBufferSourceHandler"*, %"class.blink::AudioBus"*, i32, i32, double) local_unnamed_addr #0 align 2 {
  %6 = alloca double, align 8
  %7 = bitcast %"class.blink::AudioBufferSourceHandler"* %0 to %"class.blink::AudioHandler"*
  %8 = tail call dereferenceable(104) %"class.blink::AudioNodeOutput"* @_ZN5blink12AudioHandler6OutputEj(%"class.blink::AudioHandler"* %7, i32 0) #8
  %9 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %8, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp ne i32 %2, 0
  %12 = icmp ne i32 %10, 0
  %13 = and i1 %11, %12
  br i1 %13, label %14, label %62

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %16 = zext i32 %2 to i64
  %17 = shl nuw nsw i64 %16, 2
  %18 = zext i32 %10 to i64
  %19 = add nsw i64 %18, -1
  %20 = and i64 %18, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %49, label %22

22:                                               ; preds = %14
  %23 = sub nsw i64 %18, %20
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi i64 [ 0, %22 ], [ %46, %24 ]
  %26 = phi i64 [ %23, %22 ], [ %47, %24 ]
  %27 = load float**, float*** %15, align 8
  %28 = getelementptr inbounds float*, float** %27, i64 %25
  %29 = bitcast float** %28 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 %17, i1 false)
  %31 = or i64 %25, 1
  %32 = load float**, float*** %15, align 8
  %33 = getelementptr inbounds float*, float** %32, i64 %31
  %34 = bitcast float** %33 to i8**
  %35 = load i8*, i8** %34, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %17, i1 false)
  %36 = or i64 %25, 2
  %37 = load float**, float*** %15, align 8
  %38 = getelementptr inbounds float*, float** %37, i64 %36
  %39 = bitcast float** %38 to i8**
  %40 = load i8*, i8** %39, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %40, i8 0, i64 %17, i1 false)
  %41 = or i64 %25, 3
  %42 = load float**, float*** %15, align 8
  %43 = getelementptr inbounds float*, float** %42, i64 %41
  %44 = bitcast float** %43 to i8**
  %45 = load i8*, i8** %44, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %45, i8 0, i64 %17, i1 false)
  %46 = add nuw nsw i64 %25, 4
  %47 = add i64 %26, -4
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %24

49:                                               ; preds = %24, %14
  %50 = phi i64 [ 0, %14 ], [ %46, %24 ]
  %51 = icmp eq i64 %20, 0
  br i1 %51, label %62, label %52

52:                                               ; preds = %49, %52
  %53 = phi i64 [ %59, %52 ], [ %50, %49 ]
  %54 = phi i64 [ %60, %52 ], [ %20, %49 ]
  %55 = load float**, float*** %15, align 8
  %56 = getelementptr inbounds float*, float** %55, i64 %53
  %57 = bitcast float** %56 to i8**
  %58 = load i8*, i8** %57, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %58, i8 0, i64 %17, i1 false)
  %59 = add nuw nsw i64 %53, 1
  %60 = add i64 %54, -1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %52, !llvm.loop !5

62:                                               ; preds = %49, %52, %5
  %63 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %64 = load %"class.blink::SharedAudioBuffer"*, %"class.blink::SharedAudioBuffer"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %64, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 13
  %68 = load i8, i8* %67, align 8, !range !4
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %89, label %70

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %64, i64 0, i32 0
  %72 = load float, float* %71, align 8
  %73 = fpext float %72 to double
  %74 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 15
  %75 = load double, double* %74, align 8
  %76 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 16
  %77 = load double, double* %76, align 8
  %78 = fadd double %75, %77
  %79 = tail call i64 @_ZN5blink15audio_utilities17TimeToSampleFrameEddNS0_19SampleFrameRoundingE(double %78, double %73, i32 0) #8
  %80 = tail call i1 @llvm.is.constant.i64(i64 %79) #8
  br i1 %80, label %85, label %81

81:                                               ; preds = %70
  %82 = icmp ult i64 %79, 4294967296
  %83 = trunc i64 %79 to i32
  %84 = select i1 %82, i32 %83, i32 -1, !prof !2
  br label %89

85:                                               ; preds = %70
  %86 = icmp ult i64 %79, 4294967295
  %87 = select i1 %86, i64 %79, i64 4294967295
  %88 = trunc i64 %87 to i32
  br label %89

89:                                               ; preds = %81, %85, %62
  %90 = phi i32 [ %66, %62 ], [ %84, %81 ], [ %88, %85 ]
  %91 = icmp ugt i32 %90, %66
  %92 = select i1 %91, i32 %66, i32 %90
  %93 = uitofp i32 %92 to double
  %94 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 7
  %95 = load i8, i8* %94, align 8, !range !4
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %151, label %97

97:                                               ; preds = %89
  %98 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 10
  %99 = load double, double* %98, align 8
  %100 = fcmp une double %99, 0.000000e+00
  br i1 %100, label %107, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 11
  %103 = load double, double* %102, align 8
  %104 = fcmp oeq double %103, 0.000000e+00
  %105 = fcmp ult double %99, 0.000000e+00
  %106 = or i1 %105, %104
  br i1 %106, label %127, label %112

107:                                              ; preds = %97
  %108 = fcmp ult double %99, 0.000000e+00
  br i1 %108, label %127, label %109

109:                                              ; preds = %107
  %110 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 11
  %111 = load double, double* %110, align 8
  br label %112

112:                                              ; preds = %109, %101
  %113 = phi double [ %111, %109 ], [ %103, %101 ]
  %114 = fcmp ogt double %113, 0.000000e+00
  %115 = fcmp olt double %99, %113
  %116 = and i1 %114, %115
  br i1 %116, label %117, label %127

117:                                              ; preds = %112
  %118 = load %"class.blink::SharedAudioBuffer"*, %"class.blink::SharedAudioBuffer"** %63, align 8
  %119 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %118, i64 0, i32 0
  %120 = load float, float* %119, align 8
  %121 = fpext float %120 to double
  %122 = fmul double %99, %121
  %123 = fmul double %113, %121
  %124 = fcmp ogt double %123, %93
  %125 = select i1 %124, double %93, double %123
  %126 = fsub double %125, %122
  br label %127

127:                                              ; preds = %101, %107, %117, %112
  %128 = phi double [ %93, %101 ], [ %93, %112 ], [ %125, %117 ], [ %93, %107 ]
  %129 = phi double [ %93, %101 ], [ %93, %112 ], [ %126, %117 ], [ %93, %107 ]
  %130 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 12
  %131 = load double, double* %130, align 8
  %132 = fcmp ult double %131, %128
  br i1 %132, label %151, label %133

133:                                              ; preds = %127
  %134 = fcmp olt double %99, 0.000000e+00
  br i1 %134, label %141, label %135

135:                                              ; preds = %133
  %136 = load %"class.blink::SharedAudioBuffer"*, %"class.blink::SharedAudioBuffer"** %63, align 8
  %137 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %136, i64 0, i32 0
  %138 = load float, float* %137, align 8
  %139 = fpext float %138 to double
  %140 = fmul double %99, %139
  br label %141

141:                                              ; preds = %133, %135
  %142 = phi double [ %140, %135 ], [ 0.000000e+00, %133 ]
  store double %142, double* %130, align 8
  %143 = bitcast double* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143)
  %144 = add i32 %66, -1
  %145 = uitofp i32 %144 to double
  store double %145, double* %6, align 8
  %146 = fcmp ogt double %142, %145
  %147 = select i1 %146, double* %6, double* %130
  %148 = bitcast double* %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast double* %130 to i64*
  store i64 %149, i64* %150, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143)
  br label %151

151:                                              ; preds = %89, %127, %141
  %152 = phi double [ %129, %127 ], [ %129, %141 ], [ %93, %89 ]
  %153 = phi double [ %128, %127 ], [ %128, %141 ], [ %93, %89 ]
  %154 = tail call double @_ZN5blink24AudioBufferSourceHandler19ComputePlaybackRateEv(%"class.blink::AudioBufferSourceHandler"* %0)
  %155 = fcmp ogt double %154, %152
  br i1 %155, label %403, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 12
  %158 = load double, double* %157, align 8
  %159 = fcmp olt double %4, 0.000000e+00
  %160 = fcmp une double %154, 0.000000e+00
  %161 = and i1 %159, %160
  br i1 %161, label %162, label %166

162:                                              ; preds = %156
  %163 = fmul double %154, %4
  %164 = tail call double @llvm.fabs.f64(double %163) #8
  %165 = fadd double %164, %158
  br label %166

166:                                              ; preds = %162, %156
  %167 = phi double [ %165, %162 ], [ %158, %156 ]
  %168 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %169 = load float**, float*** %168, align 8
  %170 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %171 = load float**, float*** %170, align 8
  %172 = fcmp oeq double %154, 1.000000e+00
  %173 = tail call double @llvm.floor.f64(double %167)
  %174 = fcmp oeq double %167, %173
  %175 = and i1 %172, %174
  %176 = tail call double @llvm.floor.f64(double %152)
  %177 = fcmp oeq double %152, %176
  %178 = and i1 %177, %175
  %179 = tail call double @llvm.floor.f64(double %153)
  %180 = fcmp oeq double %153, %179
  %181 = and i1 %180, %178
  br i1 %181, label %187, label %182

182:                                              ; preds = %166
  %183 = icmp eq i32 %3, 0
  br i1 %183, label %401, label %184

184:                                              ; preds = %182
  %185 = icmp eq i32 %10, 0
  %186 = zext i32 %10 to i64
  br label %291

187:                                              ; preds = %166
  %188 = fptoui double %167 to i32
  %189 = fptoui double %152 to i32
  %190 = fptoui double %153 to i32
  %191 = icmp sgt i32 %3, 0
  br i1 %191, label %192, label %288

192:                                              ; preds = %187
  %193 = icmp eq i32 %10, 0
  %194 = zext i32 %10 to i64
  %195 = and i64 %194, 1
  %196 = icmp eq i32 %10, 1
  %197 = sub nsw i64 %194, %195
  %198 = icmp eq i64 %195, 0
  br label %199

199:                                              ; preds = %192, %285
  %200 = phi i32 [ %188, %192 ], [ %286, %285 ]
  %201 = phi i32 [ %2, %192 ], [ %228, %285 ]
  %202 = phi i32 [ %3, %192 ], [ %230, %285 ]
  %203 = sub i32 %190, %200
  %204 = icmp slt i32 %203, %202
  %205 = select i1 %204, i32 %203, i32 %202
  %206 = icmp sgt i32 %205, 0
  %207 = select i1 %206, i32 %205, i32 0
  br i1 %193, label %227, label %208

208:                                              ; preds = %199
  %209 = zext i32 %201 to i64
  %210 = zext i32 %200 to i64
  %211 = zext i32 %207 to i64
  %212 = shl nuw nsw i64 %211, 2
  br i1 %196, label %213, label %232

213:                                              ; preds = %409, %208
  %214 = phi i64 [ 0, %208 ], [ %410, %409 ]
  br i1 %198, label %227, label %215

215:                                              ; preds = %213
  %216 = getelementptr inbounds float*, float** %169, i64 %214
  %217 = load float*, float** %216, align 8
  %218 = icmp eq float* %217, null
  %219 = getelementptr inbounds float*, float** %171, i64 %214
  %220 = load float*, float** %219, align 8
  %221 = getelementptr inbounds float, float* %220, i64 %209
  %222 = bitcast float* %221 to i8*
  br i1 %218, label %226, label %223

223:                                              ; preds = %215
  %224 = getelementptr inbounds float, float* %217, i64 %210
  %225 = bitcast float* %224 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %222, i8* align 4 %225, i64 %212, i1 false)
  br label %227

226:                                              ; preds = %215
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %222, i8 0, i64 %212, i1 false)
  br label %227

227:                                              ; preds = %213, %223, %226, %199
  %228 = add i32 %207, %201
  %229 = add i32 %207, %200
  %230 = sub nsw i32 %202, %207
  %231 = icmp ult i32 %229, %190
  br i1 %231, label %285, label %255

232:                                              ; preds = %208, %409
  %233 = phi i64 [ %410, %409 ], [ 0, %208 ]
  %234 = phi i64 [ %411, %409 ], [ %197, %208 ]
  %235 = getelementptr inbounds float*, float** %169, i64 %233
  %236 = load float*, float** %235, align 8
  %237 = icmp eq float* %236, null
  %238 = getelementptr inbounds float*, float** %171, i64 %233
  %239 = load float*, float** %238, align 8
  %240 = getelementptr inbounds float, float* %239, i64 %209
  %241 = bitcast float* %240 to i8*
  br i1 %237, label %245, label %242

242:                                              ; preds = %232
  %243 = getelementptr inbounds float, float* %236, i64 %210
  %244 = bitcast float* %243 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %241, i8* align 4 %244, i64 %212, i1 false)
  br label %246

245:                                              ; preds = %232
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %241, i8 0, i64 %212, i1 false)
  br label %246

246:                                              ; preds = %242, %245
  %247 = or i64 %233, 1
  %248 = getelementptr inbounds float*, float** %169, i64 %247
  %249 = load float*, float** %248, align 8
  %250 = icmp eq float* %249, null
  %251 = getelementptr inbounds float*, float** %171, i64 %247
  %252 = load float*, float** %251, align 8
  %253 = getelementptr inbounds float, float* %252, i64 %209
  %254 = bitcast float* %253 to i8*
  br i1 %250, label %408, label %405

255:                                              ; preds = %227
  %256 = sub i32 %229, %189
  %257 = load i8, i8* %94, align 8, !range !4
  %258 = icmp eq i8 %257, 0
  br i1 %258, label %259, label %285

259:                                              ; preds = %255
  %260 = icmp eq i32 %230, 0
  br i1 %260, label %283, label %261

261:                                              ; preds = %259
  %262 = tail call dereferenceable(104) %"class.blink::AudioNodeOutput"* @_ZN5blink12AudioHandler6OutputEj(%"class.blink::AudioHandler"* %7, i32 0) #8
  %263 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %262, i64 0, i32 1
  %264 = load i32, i32* %263, align 8
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %283, label %266

266:                                              ; preds = %261
  %267 = zext i32 %228 to i64
  %268 = zext i32 %230 to i64
  %269 = shl nuw nsw i64 %268, 2
  br label %270

270:                                              ; preds = %270, %266
  %271 = phi i64 [ 0, %266 ], [ %277, %270 ]
  %272 = load float**, float*** %170, align 8
  %273 = getelementptr inbounds float*, float** %272, i64 %271
  %274 = load float*, float** %273, align 8
  %275 = getelementptr inbounds float, float* %274, i64 %267
  %276 = bitcast float* %275 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %276, i8 0, i64 %269, i1 false) #8
  %277 = add nuw nsw i64 %271, 1
  %278 = tail call dereferenceable(104) %"class.blink::AudioNodeOutput"* @_ZN5blink12AudioHandler6OutputEj(%"class.blink::AudioHandler"* %7, i32 0) #8
  %279 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %278, i64 0, i32 1
  %280 = load i32, i32* %279, align 8
  %281 = zext i32 %280 to i64
  %282 = icmp ult i64 %277, %281
  br i1 %282, label %270, label %283

283:                                              ; preds = %270, %261, %259
  %284 = bitcast %"class.blink::AudioBufferSourceHandler"* %0 to %"class.blink::AudioScheduledSourceHandler"*
  tail call void @_ZN5blink27AudioScheduledSourceHandler6FinishEv(%"class.blink::AudioScheduledSourceHandler"* %284) #8
  br label %288

285:                                              ; preds = %227, %255
  %286 = phi i32 [ %229, %227 ], [ %256, %255 ]
  %287 = icmp sgt i32 %230, 0
  br i1 %287, label %199, label %288

288:                                              ; preds = %285, %187, %283
  %289 = phi i32 [ %256, %283 ], [ %188, %187 ], [ %286, %285 ]
  %290 = uitofp i32 %289 to double
  br label %401

291:                                              ; preds = %184, %398
  %292 = phi i32 [ %3, %184 ], [ %295, %398 ]
  %293 = phi double [ %167, %184 ], [ %399, %398 ]
  %294 = phi i32 [ %2, %184 ], [ %325, %398 ]
  %295 = add nsw i32 %292, -1
  %296 = fptoui double %293 to i32
  %297 = uitofp i32 %296 to double
  %298 = fsub double %293, %297
  %299 = add i32 %296, 1
  %300 = icmp ult i32 %299, %66
  br i1 %300, label %308, label %301

301:                                              ; preds = %291
  %302 = load i8, i8* %94, align 8, !range !4
  %303 = icmp eq i8 %302, 0
  br i1 %303, label %308, label %304

304:                                              ; preds = %301
  %305 = fadd double %293, 1.000000e+00
  %306 = fsub double %305, %152
  %307 = fptoui double %306 to i32
  br label %308

308:                                              ; preds = %301, %291, %304
  %309 = phi i32 [ %307, %304 ], [ %299, %291 ], [ %296, %301 ]
  %310 = icmp ugt i32 %66, %296
  %311 = icmp ult i32 %309, %66
  %312 = and i1 %310, %311
  br i1 %312, label %313, label %401

313:                                              ; preds = %308
  br i1 %185, label %324, label %314

314:                                              ; preds = %313
  %315 = icmp eq i32 %309, %296
  %316 = icmp ne i32 %296, 0
  %317 = and i1 %316, %315
  %318 = zext i32 %296 to i64
  %319 = zext i32 %309 to i64
  %320 = fsub double 1.000000e+00, %298
  %321 = add i32 %296, -1
  %322 = zext i32 %321 to i64
  %323 = zext i32 %294 to i64
  br label %328

324:                                              ; preds = %363, %313
  %325 = add i32 %294, 1
  %326 = fadd double %154, %293
  %327 = fcmp ult double %326, %153
  br i1 %327, label %398, label %368

328:                                              ; preds = %363, %314
  %329 = phi i64 [ 0, %314 ], [ %366, %363 ]
  %330 = getelementptr inbounds float*, float** %171, i64 %329
  %331 = load float*, float** %330, align 8
  %332 = getelementptr inbounds float*, float** %169, i64 %329
  %333 = load float*, float** %332, align 8
  %334 = icmp eq float* %333, null
  br i1 %334, label %363, label %335

335:                                              ; preds = %328
  br i1 %317, label %336, label %345

336:                                              ; preds = %335
  %337 = getelementptr inbounds float, float* %333, i64 %322
  %338 = load float, float* %337, align 4
  %339 = fpext float %338 to double
  %340 = getelementptr inbounds float, float* %333, i64 %318
  %341 = load float, float* %340, align 4
  %342 = fpext float %341 to double
  %343 = fsub double %342, %339
  %344 = fmul double %298, %343
  br label %354

345:                                              ; preds = %335
  %346 = getelementptr inbounds float, float* %333, i64 %318
  %347 = load float, float* %346, align 4
  %348 = fpext float %347 to double
  %349 = getelementptr inbounds float, float* %333, i64 %319
  %350 = load float, float* %349, align 4
  %351 = fpext float %350 to double
  %352 = fmul double %320, %348
  %353 = fmul double %298, %351
  br label %354

354:                                              ; preds = %345, %336
  %355 = phi double [ %353, %345 ], [ %342, %336 ]
  %356 = phi double [ %352, %345 ], [ %344, %336 ]
  %357 = fadd double %356, %355
  %358 = fcmp ult double %357, 0x47EFFFFFE0000000
  br i1 %358, label %359, label %363

359:                                              ; preds = %354
  %360 = fcmp ole double %357, 0xC7EFFFFFE0000000
  %361 = select i1 %360, double 0xC7EFFFFFE0000000, double %357
  %362 = fptrunc double %361 to float
  br label %363

363:                                              ; preds = %328, %359, %354
  %364 = phi float [ %362, %359 ], [ 0x47EFFFFFE0000000, %354 ], [ 0.000000e+00, %328 ]
  %365 = getelementptr inbounds float, float* %331, i64 %323
  store float %364, float* %365, align 4
  %366 = add nuw nsw i64 %329, 1
  %367 = icmp eq i64 %366, %186
  br i1 %367, label %324, label %328

368:                                              ; preds = %324
  %369 = fsub double %326, %152
  %370 = load i8, i8* %94, align 8, !range !4
  %371 = icmp eq i8 %370, 0
  br i1 %371, label %372, label %398

372:                                              ; preds = %368
  %373 = icmp eq i32 %295, 0
  br i1 %373, label %396, label %374

374:                                              ; preds = %372
  %375 = tail call dereferenceable(104) %"class.blink::AudioNodeOutput"* @_ZN5blink12AudioHandler6OutputEj(%"class.blink::AudioHandler"* %7, i32 0) #8
  %376 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %375, i64 0, i32 1
  %377 = load i32, i32* %376, align 8
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %396, label %379

379:                                              ; preds = %374
  %380 = zext i32 %325 to i64
  %381 = zext i32 %295 to i64
  %382 = shl nuw nsw i64 %381, 2
  br label %383

383:                                              ; preds = %383, %379
  %384 = phi i64 [ 0, %379 ], [ %390, %383 ]
  %385 = load float**, float*** %170, align 8
  %386 = getelementptr inbounds float*, float** %385, i64 %384
  %387 = load float*, float** %386, align 8
  %388 = getelementptr inbounds float, float* %387, i64 %380
  %389 = bitcast float* %388 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %389, i8 0, i64 %382, i1 false) #8
  %390 = add nuw nsw i64 %384, 1
  %391 = tail call dereferenceable(104) %"class.blink::AudioNodeOutput"* @_ZN5blink12AudioHandler6OutputEj(%"class.blink::AudioHandler"* %7, i32 0) #8
  %392 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %391, i64 0, i32 1
  %393 = load i32, i32* %392, align 8
  %394 = zext i32 %393 to i64
  %395 = icmp ult i64 %390, %394
  br i1 %395, label %383, label %396

396:                                              ; preds = %383, %372, %374
  %397 = bitcast %"class.blink::AudioBufferSourceHandler"* %0 to %"class.blink::AudioScheduledSourceHandler"*
  tail call void @_ZN5blink27AudioScheduledSourceHandler6FinishEv(%"class.blink::AudioScheduledSourceHandler"* %397) #8
  br label %401

398:                                              ; preds = %324, %368
  %399 = phi double [ %326, %324 ], [ %369, %368 ]
  %400 = icmp eq i32 %295, 0
  br i1 %400, label %401, label %291

401:                                              ; preds = %398, %308, %182, %396, %288
  %402 = phi double [ %290, %288 ], [ %369, %396 ], [ %167, %182 ], [ %399, %398 ], [ %293, %308 ]
  tail call void @_ZN5blink8AudioBus15ClearSilentFlagEv(%"class.blink::AudioBus"* %1) #8
  store double %402, double* %157, align 8
  br label %403

403:                                              ; preds = %151, %401
  %404 = phi i1 [ true, %401 ], [ false, %151 ]
  ret i1 %404

405:                                              ; preds = %246
  %406 = getelementptr inbounds float, float* %249, i64 %210
  %407 = bitcast float* %406 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %254, i8* align 4 %407, i64 %212, i1 false)
  br label %409

408:                                              ; preds = %246
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %254, i8 0, i64 %212, i1 false)
  br label %409

409:                                              ; preds = %408, %405
  %410 = add nuw nsw i64 %233, 2
  %411 = add i64 %234, -2
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %213, label %232
}

declare void @_ZN5blink8AudioBus15ClearSilentFlagEv(%"class.blink::AudioBus"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i64 @_ZN5blink15audio_utilities17TimeToSampleFrameEddNS0_19SampleFrameRoundingE(double, double, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN5blink24AudioBufferSourceHandler19ComputePlaybackRateEv(%"class.blink::AudioBufferSourceHandler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.blink::SharedAudioBuffer"*, %"class.blink::SharedAudioBuffer"** %2, align 8
  %4 = icmp eq %"class.blink::SharedAudioBuffer"* %3, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %3, i64 0, i32 0
  %7 = load float, float* %6, align 8
  %8 = fpext float %7 to double
  %9 = bitcast %"class.blink::AudioBufferSourceHandler"* %0 to %"class.blink::AudioHandler"*
  %10 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %9) #8
  %11 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %10, i64 0, i32 21, i32 0
  %12 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %11, align 8
  %13 = bitcast %"class.blink::AudioDestinationHandler"* %12 to double (%"class.blink::AudioDestinationHandler"*)***
  %14 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %13, align 8
  %15 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %14, i64 25
  %16 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %15, align 8
  %17 = tail call double %16(%"class.blink::AudioDestinationHandler"* %12) #8
  %18 = fptrunc double %17 to float
  %19 = fpext float %18 to double
  %20 = fdiv double %8, %19
  br label %21

21:                                               ; preds = %1, %5
  %22 = phi double [ %20, %5 ], [ 1.000000e+00, %1 ]
  %23 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 5, i32 0
  %24 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %23, align 8
  %25 = tail call float @_ZN5blink17AudioParamHandler10FinalValueEv(%"class.blink::AudioParamHandler"* %24) #8
  %26 = fpext float %25 to double
  %27 = fmul double %22, %26
  %28 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 6, i32 0
  %29 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %28, align 8
  %30 = tail call float @_ZN5blink17AudioParamHandler10FinalValueEv(%"class.blink::AudioParamHandler"* %29) #8
  %31 = fdiv float %30, 1.200000e+03
  %32 = fpext float %31 to double
  %33 = tail call double @_ZN6fdlibm3powEdd(double 2.000000e+00, double %32) #8
  %34 = fmul double %27, %33
  %35 = fcmp ult double %34, 1.024000e+03
  %36 = fcmp ole double %34, 0.000000e+00
  %37 = select i1 %36, double 0.000000e+00, double %34
  %38 = select i1 %35, double %37, double 1.024000e+03
  %39 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 19
  %40 = load double, double* %39, align 8
  %41 = fcmp olt double %38, %40
  br i1 %41, label %42, label %43

42:                                               ; preds = %21
  store double %38, double* %39, align 8
  br label %43

43:                                               ; preds = %42, %21
  ret double %38
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24AudioBufferSourceHandler9SetBufferEPNS_11AudioBufferERNS_14ExceptionStateE(%"class.blink::AudioBufferSourceHandler"*, %"class.blink::AudioBuffer"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::DeferredTaskHandler::GraphAutoLocker", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = icmp ne %"class.blink::AudioBuffer"* %1, null
  br i1 %6, label %7, label %12

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 20
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.1, i64 0, i64 0)) #8
  br label %210

12:                                               ; preds = %7, %3
  %13 = bitcast %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #8
  %14 = getelementptr inbounds %"class.blink::DeferredTaskHandler::GraphAutoLocker", %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %4, i64 0, i32 0
  store %"class.blink::DeferredTaskHandler"* inttoptr (i64 -6148914691236517206 to %"class.blink::DeferredTaskHandler"*), %"class.blink::DeferredTaskHandler"** %14, align 8
  %15 = bitcast %"class.blink::AudioBufferSourceHandler"* %0 to %"class.blink::AudioHandler"*
  %16 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %15) #8
  call void @_ZN5blink19DeferredTaskHandler15GraphAutoLockerC1EPKNS_16BaseAudioContextE(%"class.blink::DeferredTaskHandler::GraphAutoLocker"* nonnull %4, %"class.blink::BaseAudioContext"* %16) #8
  %17 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 0, i32 3, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %17) #8
  br i1 %6, label %46, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %20 = load %"class.blink::SharedAudioBuffer"*, %"class.blink::SharedAudioBuffer"** %19, align 8
  store %"class.blink::SharedAudioBuffer"* null, %"class.blink::SharedAudioBuffer"** %19, align 8
  %21 = icmp eq %"class.blink::SharedAudioBuffer"* %20, null
  br i1 %21, label %206, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %20, i64 0, i32 2
  %24 = getelementptr inbounds %"class.WTF::Vector.372", %"class.WTF::Vector.372"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"** %24, align 8
  %26 = icmp eq %"class.blink::ArrayBufferContents"* %25, null
  br i1 %26, label %44, label %27, !prof !2

27:                                               ; preds = %22
  %28 = bitcast %"class.blink::ArrayBufferContents"* %25 to i8*
  %29 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %20, i64 0, i32 2, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %42, label %32, !prof !3

32:                                               ; preds = %27
  %33 = zext i32 %30 to i64
  %34 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %25, i64 %33
  br label %35

35:                                               ; preds = %35, %32
  %36 = phi %"class.blink::ArrayBufferContents"* [ %37, %35 ], [ %25, %32 ]
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* %36) #8
  %37 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %36, i64 1
  %38 = icmp eq %"class.blink::ArrayBufferContents"* %37, %34
  br i1 %38, label %39, label %35

39:                                               ; preds = %35
  store i32 0, i32* %29, align 4
  %40 = bitcast %"class.WTF::Vector.372"* %23 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %27
  %43 = phi i8* [ %41, %39 ], [ %28, %27 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #8
  br label %44

44:                                               ; preds = %42, %22
  %45 = bitcast %"class.blink::SharedAudioBuffer"* %20 to i8*
  call void @free(i8* %45) #8
  br label %206

46:                                               ; preds = %12
  %47 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 20
  store i8 1, i8* %47, align 8
  %48 = getelementptr inbounds %"class.blink::AudioBuffer", %"class.blink::AudioBuffer"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp ugt i32 %49, 32
  br i1 %50, label %51, label %74

51:                                               ; preds = %46
  %52 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #8
  %53 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17IndexOutsideRangeIjEEN3WTF6StringEPKcT_S6_NS0_9BoundTypeES6_S7_(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0), i32 %49, i32 1, i32 0, i32 32, i32 0)
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %54, align 8
  %55 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %56 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %55, align 8
  %57 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %56, align 8
  call void %57(%"class.blink::ExceptionState"* %2, i32 9, %"class.WTF::String"* nonnull dereferenceable(8) %5) #8
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #8
  br label %73

73:                                               ; preds = %51, %69, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #8
  br label %208

74:                                               ; preds = %46
  %75 = call %"class.blink::SharedAudioBuffer"* @_ZN5blink11AudioBuffer23CreateSharedAudioBufferEv(%"class.blink::AudioBuffer"* nonnull %1) #8
  %76 = ptrtoint %"class.blink::SharedAudioBuffer"* %75 to i64
  %77 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 2
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.369", %"class.std::__1::unique_ptr.369"* %77, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.blink::SharedAudioBuffer"*, %"class.blink::SharedAudioBuffer"** %78, align 8
  %80 = bitcast %"class.std::__1::unique_ptr.369"* %77 to i64*
  store i64 %76, i64* %80, align 8
  %81 = icmp eq %"class.blink::SharedAudioBuffer"* %79, null
  br i1 %81, label %106, label %82

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %79, i64 0, i32 2
  %84 = getelementptr inbounds %"class.WTF::Vector.372", %"class.WTF::Vector.372"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"** %84, align 8
  %86 = icmp eq %"class.blink::ArrayBufferContents"* %85, null
  br i1 %86, label %104, label %87, !prof !2

87:                                               ; preds = %82
  %88 = bitcast %"class.blink::ArrayBufferContents"* %85 to i8*
  %89 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %79, i64 0, i32 2, i32 0, i32 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %102, label %92, !prof !3

92:                                               ; preds = %87
  %93 = zext i32 %90 to i64
  %94 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %85, i64 %93
  br label %95

95:                                               ; preds = %95, %92
  %96 = phi %"class.blink::ArrayBufferContents"* [ %97, %95 ], [ %85, %92 ]
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* %96) #8
  %97 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %96, i64 1
  %98 = icmp eq %"class.blink::ArrayBufferContents"* %97, %94
  br i1 %98, label %99, label %95

99:                                               ; preds = %95
  store i32 0, i32* %89, align 4
  %100 = bitcast %"class.WTF::Vector.372"* %83 to i8**
  %101 = load i8*, i8** %100, align 8
  br label %102

102:                                              ; preds = %99, %87
  %103 = phi i8* [ %101, %99 ], [ %88, %87 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %103) #8
  br label %104

104:                                              ; preds = %102, %82
  %105 = bitcast %"class.blink::SharedAudioBuffer"* %79 to i8*
  call void @free(i8* %105) #8
  br label %106

106:                                              ; preds = %104, %74
  %107 = call dereferenceable(104) %"class.blink::AudioNodeOutput"* @_ZN5blink12AudioHandler6OutputEj(%"class.blink::AudioHandler"* %15, i32 0) #8
  call void @_ZN5blink15AudioNodeOutput19SetNumberOfChannelsEj(%"class.blink::AudioNodeOutput"* %107, i32 %49) #8
  %108 = zext i32 %49 to i64
  %109 = shl nuw nsw i64 %108, 3
  %110 = call i8* @_Znam(i64 %109) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 0, i64 %109, i1 false) #8
  %111 = ptrtoint i8* %110 to i64
  %112 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 3
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.380", %"class.std::__1::unique_ptr.380"* %112, i64 0, i32 0, i32 0, i32 0
  %114 = load float**, float*** %113, align 8
  %115 = bitcast %"class.std::__1::unique_ptr.380"* %112 to i64*
  store i64 %111, i64* %115, align 8
  %116 = icmp eq float** %114, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %106
  %118 = bitcast float** %114 to i8*
  call void @_ZdaPv(i8* %118) #15
  br label %119

119:                                              ; preds = %117, %106
  %120 = call i8* @_Znam(i64 %109) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %120, i8 0, i64 %109, i1 false) #8
  %121 = ptrtoint i8* %120 to i64
  %122 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 4
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.386", %"class.std::__1::unique_ptr.386"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = load float**, float*** %123, align 8
  %125 = bitcast %"class.std::__1::unique_ptr.386"* %122 to i64*
  store i64 %121, i64* %125, align 8
  %126 = icmp eq float** %124, null
  br i1 %126, label %129, label %127

127:                                              ; preds = %119
  %128 = bitcast float** %124 to i8*
  call void @_ZdaPv(i8* %128) #15
  br label %129

129:                                              ; preds = %127, %119
  %130 = icmp eq i32 %49, 0
  br i1 %130, label %131, label %135

131:                                              ; preds = %146, %129
  %132 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 13
  %133 = load i8, i8* %132, align 8, !range !4
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %206, label %153

135:                                              ; preds = %129, %146
  %136 = phi i64 [ %151, %146 ], [ 0, %129 ]
  %137 = load %"class.blink::SharedAudioBuffer"*, %"class.blink::SharedAudioBuffer"** %78, align 8
  %138 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %137, i64 0, i32 2
  %139 = trunc i64 %136 to i32
  %140 = call dereferenceable(16) %"class.blink::ArrayBufferContents"* @_ZNK3WTF6VectorIN5blink19ArrayBufferContentsELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.372"* %138, i32 %139) #8
  %141 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %140, i64 0, i32 0, i32 0
  %142 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %141, align 8
  %143 = icmp eq %"class.v8::BackingStore"* %142, null
  br i1 %143, label %146, label %144

144:                                              ; preds = %135
  %145 = call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %142) #8
  br label %146

146:                                              ; preds = %135, %144
  %147 = phi i8* [ %145, %144 ], [ null, %135 ]
  %148 = load float**, float*** %113, align 8
  %149 = getelementptr inbounds float*, float** %148, i64 %136
  %150 = bitcast float** %149 to i8**
  store i8* %147, i8** %150, align 8
  %151 = add nuw nsw i64 %136, 1
  %152 = icmp eq i64 %151, %108
  br i1 %152, label %131, label %135

153:                                              ; preds = %131
  %154 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %155 = load %"class.blink::SharedAudioBuffer"*, %"class.blink::SharedAudioBuffer"** %154, align 8
  %156 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %155, i64 0, i32 1
  %157 = load i32, i32* %156, align 4
  %158 = uitofp i32 %157 to double
  %159 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %155, i64 0, i32 0
  %160 = load float, float* %159, align 8
  %161 = fpext float %160 to double
  %162 = fdiv double %158, %161
  %163 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 15
  %164 = load double, double* %163, align 8
  %165 = fcmp ult double %164, %162
  %166 = fcmp ole double %164, 0.000000e+00
  %167 = select i1 %166, double 0.000000e+00, double %164
  %168 = select i1 %165, double %167, double %162
  store double %168, double* %163, align 8
  %169 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 17
  %170 = load i8, i8* %169, align 8, !range !4
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %172, label %175

172:                                              ; preds = %153
  %173 = fsub double %162, %168
  %174 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 16
  store double %173, double* %174, align 8
  br label %192

175:                                              ; preds = %153
  %176 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 7
  %177 = load i8, i8* %176, align 8, !range !4
  %178 = icmp eq i8 %177, 0
  %179 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 16
  %180 = load double, double* %179, align 8
  br i1 %178, label %181, label %183

181:                                              ; preds = %175
  %182 = fsub double %162, %168
  br label %192

183:                                              ; preds = %175
  %184 = fcmp ult double %180, 0x7FF0000000000000
  %185 = fcmp ole double %180, 0.000000e+00
  %186 = select i1 %185, double 0.000000e+00, double %180
  %187 = select i1 %184, double %186, double 0x7FF0000000000000
  store double %187, double* %179, align 8
  %188 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 0, i32 4
  %189 = load double, double* %188, align 8
  %190 = fadd double %187, %189
  %191 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 0, i32 5
  store double %190, double* %191, align 8
  br label %200

192:                                              ; preds = %181, %172
  %193 = phi double [ %182, %181 ], [ %173, %172 ]
  %194 = phi double [ %180, %181 ], [ %173, %172 ]
  %195 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 16
  %196 = fcmp ult double %194, %193
  %197 = fcmp ole double %194, 0.000000e+00
  %198 = select i1 %197, double 0.000000e+00, double %194
  %199 = select i1 %196, double %198, double %193
  store double %199, double* %195, align 8
  br label %200

200:                                              ; preds = %183, %192
  %201 = load float, float* %159, align 8
  %202 = fpext float %201 to double
  %203 = call i64 @_ZN5blink15audio_utilities17TimeToSampleFrameEddNS0_19SampleFrameRoundingE(double %168, double %202, i32 0) #8
  %204 = uitofp i64 %203 to double
  %205 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 12
  store double %204, double* %205, align 8
  br label %206

206:                                              ; preds = %44, %18, %131, %200
  %207 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 12
  store double 0.000000e+00, double* %207, align 8
  br label %208

208:                                              ; preds = %73, %206
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %17) #8
  %209 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %14, align 8
  call void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"* %209) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #8
  br label %210

210:                                              ; preds = %208, %11
  ret void
}

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #1

declare %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"*) unnamed_addr #1

declare void @_ZN5blink19DeferredTaskHandler15GraphAutoLockerC1EPKNS_16BaseAudioContextE(%"class.blink::DeferredTaskHandler::GraphAutoLocker"*, %"class.blink::BaseAudioContext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17IndexOutsideRangeIjEEN3WTF6StringEPKcT_S6_NS0_9BoundTypeES6_S7_(i8*, i32, i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %8 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %9 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %10 = alloca %"class.WTF::StringBuilder", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = bitcast %"class.WTF::StringBuilder"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 48, i1 false)
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 1
  %22 = bitcast %union.anon.745* %21 to i8*
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 2
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 3
  store i8 1, i8* %24, align 4
  %25 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 4
  store i8 0, i8* %25, align 1
  %26 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #8
  %27 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %28 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i8** %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 4, i32* %30, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #8
  %31 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  %32 = icmp eq i8* %0, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %6
  %34 = call i64 @strlen(i8* nonnull %0) #16
  %35 = icmp ult i64 %34, 4294967296
  br i1 %35, label %37, label %36, !prof !2

36:                                               ; preds = %33
  call void @llvm.trap() #8
  unreachable

37:                                               ; preds = %33
  %38 = trunc i64 %34 to i32
  br label %39

39:                                               ; preds = %6, %37
  %40 = phi i32 [ %38, %37 ], [ 0, %6 ]
  %41 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %42 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* %0, i8** %43, align 8
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %40, i32* %44, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  %45 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #8
  %46 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %47 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0), i8** %48, align 8
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 11, i32* %49, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #8
  %50 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #8
  %51 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #8
  %52 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 11
  %53 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 2
  %54 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 3
  %55 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 32, i1 false) #8
  store i8* %52, i8** %53, align 8
  %56 = urem i32 %1, 10
  %57 = udiv i32 %1, 10
  %58 = trunc i32 %56 to i8
  %59 = or i8 %58, 48
  store i8 %59, i8* %52, align 1
  %60 = icmp ugt i32 %1, 9
  br i1 %60, label %61, label %94

61:                                               ; preds = %39
  %62 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 10
  store i8* %62, i8** %53, align 8
  %63 = urem i32 %57, 10
  %64 = trunc i32 %63 to i8
  %65 = or i8 %64, 48
  store i8 %65, i8* %62, align 2
  %66 = icmp ugt i32 %1, 99
  br i1 %66, label %67, label %92

67:                                               ; preds = %61
  %68 = udiv i32 %1, 100
  %69 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 9
  store i8* %69, i8** %53, align 8
  %70 = urem i32 %68, 10
  %71 = trunc i32 %70 to i8
  %72 = or i8 %71, 48
  store i8 %72, i8* %69, align 1
  %73 = icmp ugt i32 %1, 999
  br i1 %73, label %74, label %90

74:                                               ; preds = %67
  %75 = udiv i32 %1, 1000
  %76 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 8
  store i8* %76, i8** %53, align 8
  %77 = urem i32 %75, 10
  %78 = trunc i32 %77 to i8
  %79 = or i8 %78, 48
  store i8 %79, i8* %76, align 8
  %80 = icmp ugt i32 %1, 9999
  br i1 %80, label %81, label %88

81:                                               ; preds = %74
  %82 = udiv i32 %1, 10000
  %83 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 7
  store i8* %83, i8** %53, align 8
  %84 = urem i32 %82, 10
  %85 = trunc i32 %84 to i8
  %86 = or i8 %85, 48
  store i8 %86, i8* %83, align 1
  %87 = icmp ugt i32 %1, 99999
  br i1 %87, label %96, label %105

88:                                               ; preds = %74
  %89 = ptrtoint i8* %76 to i64
  br label %108

90:                                               ; preds = %67
  %91 = ptrtoint i8* %69 to i64
  br label %108

92:                                               ; preds = %61
  %93 = ptrtoint i8* %62 to i64
  br label %108

94:                                               ; preds = %39
  %95 = ptrtoint i8* %52 to i64
  br label %108

96:                                               ; preds = %81, %96
  %97 = phi i32 [ %99, %96 ], [ %82, %81 ]
  %98 = load i8*, i8** %53, align 8
  %99 = udiv i32 %97, 10
  %100 = getelementptr inbounds i8, i8* %98, i64 -1
  store i8* %100, i8** %53, align 8
  %101 = urem i32 %99, 10
  %102 = trunc i32 %101 to i8
  %103 = or i8 %102, 48
  store i8 %103, i8* %100, align 1
  %104 = icmp ugt i32 %97, 99
  br i1 %104, label %96, label %105

105:                                              ; preds = %96, %81
  %106 = bitcast i8** %53 to i64*
  %107 = load i64, i64* %106, align 8
  br label %108

108:                                              ; preds = %105, %88, %90, %92, %94
  %109 = phi i64 [ %95, %94 ], [ %93, %92 ], [ %91, %90 ], [ %107, %105 ], [ %89, %88 ]
  %110 = ptrtoint i8* %55 to i64
  %111 = sub i64 %110, %109
  %112 = trunc i64 %111 to i32
  store i32 %112, i32* %54, align 8
  %113 = inttoptr i64 %109 to i8*
  %114 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %113, i32 %112) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %116, label %121

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %117, align 8
  %118 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %119 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 0, i32* %120, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  br label %141

121:                                              ; preds = %108
  %122 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %114, %"class.WTF::StringImpl"** %122, align 8
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 1
  %126 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %127 = bitcast i8** %126 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %125, %"class.WTF::StringImpl"** %127, align 8
  %128 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %124, i32* %128, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  br i1 %132, label %135, label %137

135:                                              ; preds = %121
  %136 = add i32 %134, -1
  store i32 %136, i32* %133, align 4
  br label %137

137:                                              ; preds = %135, %121
  %138 = phi i32 [ %136, %135 ], [ %134, %121 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %114) #8
  br label %141

141:                                              ; preds = %116, %137, %140
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #8
  %142 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #8
  %143 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %144 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i64 0, i64 0), i8** %145, align 8
  %146 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 23, i32* %146, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %15)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #8
  %147 = icmp eq i32 %3, 1
  %148 = select i1 %147, i8 40, i8 91
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %10, i8 zeroext %148) #8
  %149 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %149) #8
  %150 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %150) #8
  %151 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 11
  %152 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 2
  %153 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 3
  %154 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %150, i8 -86, i64 32, i1 false) #8
  store i8* %151, i8** %152, align 8
  %155 = urem i32 %2, 10
  %156 = udiv i32 %2, 10
  %157 = trunc i32 %155 to i8
  %158 = or i8 %157, 48
  store i8 %158, i8* %151, align 1
  %159 = icmp ugt i32 %2, 9
  br i1 %159, label %160, label %193

160:                                              ; preds = %141
  %161 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 10
  store i8* %161, i8** %152, align 8
  %162 = urem i32 %156, 10
  %163 = trunc i32 %162 to i8
  %164 = or i8 %163, 48
  store i8 %164, i8* %161, align 2
  %165 = icmp ugt i32 %2, 99
  br i1 %165, label %166, label %191

166:                                              ; preds = %160
  %167 = udiv i32 %2, 100
  %168 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 9
  store i8* %168, i8** %152, align 8
  %169 = urem i32 %167, 10
  %170 = trunc i32 %169 to i8
  %171 = or i8 %170, 48
  store i8 %171, i8* %168, align 1
  %172 = icmp ugt i32 %2, 999
  br i1 %172, label %173, label %189

173:                                              ; preds = %166
  %174 = udiv i32 %2, 1000
  %175 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 8
  store i8* %175, i8** %152, align 8
  %176 = urem i32 %174, 10
  %177 = trunc i32 %176 to i8
  %178 = or i8 %177, 48
  store i8 %178, i8* %175, align 8
  %179 = icmp ugt i32 %2, 9999
  br i1 %179, label %180, label %187

180:                                              ; preds = %173
  %181 = udiv i32 %2, 10000
  %182 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 7
  store i8* %182, i8** %152, align 8
  %183 = urem i32 %181, 10
  %184 = trunc i32 %183 to i8
  %185 = or i8 %184, 48
  store i8 %185, i8* %182, align 1
  %186 = icmp ugt i32 %2, 99999
  br i1 %186, label %195, label %204

187:                                              ; preds = %173
  %188 = ptrtoint i8* %175 to i64
  br label %207

189:                                              ; preds = %166
  %190 = ptrtoint i8* %168 to i64
  br label %207

191:                                              ; preds = %160
  %192 = ptrtoint i8* %161 to i64
  br label %207

193:                                              ; preds = %141
  %194 = ptrtoint i8* %151 to i64
  br label %207

195:                                              ; preds = %180, %195
  %196 = phi i32 [ %198, %195 ], [ %181, %180 ]
  %197 = load i8*, i8** %152, align 8
  %198 = udiv i32 %196, 10
  %199 = getelementptr inbounds i8, i8* %197, i64 -1
  store i8* %199, i8** %152, align 8
  %200 = urem i32 %198, 10
  %201 = trunc i32 %200 to i8
  %202 = or i8 %201, 48
  store i8 %202, i8* %199, align 1
  %203 = icmp ugt i32 %196, 99
  br i1 %203, label %195, label %204

204:                                              ; preds = %195, %180
  %205 = bitcast i8** %152 to i64*
  %206 = load i64, i64* %205, align 8
  br label %207

207:                                              ; preds = %204, %187, %189, %191, %193
  %208 = phi i64 [ %194, %193 ], [ %192, %191 ], [ %190, %189 ], [ %206, %204 ], [ %188, %187 ]
  %209 = ptrtoint i8* %154 to i64
  %210 = sub i64 %209, %208
  %211 = trunc i64 %210 to i32
  store i32 %211, i32* %153, align 8
  %212 = inttoptr i64 %208 to i8*
  %213 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %212, i32 %211) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %150) #8
  %214 = icmp eq %"class.WTF::StringImpl"* %213, null
  br i1 %214, label %215, label %220

215:                                              ; preds = %207
  %216 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* null, i8** %216, align 8
  %217 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %218 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %217, i64* %218, align 8
  %219 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 0, i32* %219, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %16)
  br label %240

220:                                              ; preds = %207
  %221 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 0
  store %"class.WTF::StringImpl"* %213, %"class.WTF::StringImpl"** %221, align 8
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 1
  %225 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  %226 = bitcast i8** %225 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %224, %"class.WTF::StringImpl"** %226, align 8
  %227 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 %223, i32* %227, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %16)
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load atomic i32, i32* %228 monotonic, align 4
  %230 = and i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 0
  %233 = load i32, i32* %232, align 4
  br i1 %231, label %234, label %236

234:                                              ; preds = %220
  %235 = add i32 %233, -1
  store i32 %235, i32* %232, align 4
  br label %236

236:                                              ; preds = %234, %220
  %237 = phi i32 [ %235, %234 ], [ %233, %220 ]
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %240

239:                                              ; preds = %236
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %213) #8
  br label %240

240:                                              ; preds = %215, %236, %239
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %149) #8
  %241 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %241) #8
  %242 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %243 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %242, i64* %243, align 8
  %244 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0), i8** %244, align 8
  %245 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 2, i32* %245, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %17)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %241) #8
  %246 = bitcast %"class.WTF::StringView"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %246) #8
  %247 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %247) #8
  %248 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 11
  %249 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 2
  %250 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 3
  %251 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %247, i8 -86, i64 32, i1 false) #8
  store i8* %248, i8** %249, align 8
  %252 = urem i32 %4, 10
  %253 = udiv i32 %4, 10
  %254 = trunc i32 %252 to i8
  %255 = or i8 %254, 48
  store i8 %255, i8* %248, align 1
  %256 = icmp ugt i32 %4, 9
  br i1 %256, label %257, label %290

257:                                              ; preds = %240
  %258 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 10
  store i8* %258, i8** %249, align 8
  %259 = urem i32 %253, 10
  %260 = trunc i32 %259 to i8
  %261 = or i8 %260, 48
  store i8 %261, i8* %258, align 2
  %262 = icmp ugt i32 %4, 99
  br i1 %262, label %263, label %288

263:                                              ; preds = %257
  %264 = udiv i32 %4, 100
  %265 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 9
  store i8* %265, i8** %249, align 8
  %266 = urem i32 %264, 10
  %267 = trunc i32 %266 to i8
  %268 = or i8 %267, 48
  store i8 %268, i8* %265, align 1
  %269 = icmp ugt i32 %4, 999
  br i1 %269, label %270, label %286

270:                                              ; preds = %263
  %271 = udiv i32 %4, 1000
  %272 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 8
  store i8* %272, i8** %249, align 8
  %273 = urem i32 %271, 10
  %274 = trunc i32 %273 to i8
  %275 = or i8 %274, 48
  store i8 %275, i8* %272, align 8
  %276 = icmp ugt i32 %4, 9999
  br i1 %276, label %277, label %284

277:                                              ; preds = %270
  %278 = udiv i32 %4, 10000
  %279 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 7
  store i8* %279, i8** %249, align 8
  %280 = urem i32 %278, 10
  %281 = trunc i32 %280 to i8
  %282 = or i8 %281, 48
  store i8 %282, i8* %279, align 1
  %283 = icmp ugt i32 %4, 99999
  br i1 %283, label %292, label %301

284:                                              ; preds = %270
  %285 = ptrtoint i8* %272 to i64
  br label %304

286:                                              ; preds = %263
  %287 = ptrtoint i8* %265 to i64
  br label %304

288:                                              ; preds = %257
  %289 = ptrtoint i8* %258 to i64
  br label %304

290:                                              ; preds = %240
  %291 = ptrtoint i8* %248 to i64
  br label %304

292:                                              ; preds = %277, %292
  %293 = phi i32 [ %295, %292 ], [ %278, %277 ]
  %294 = load i8*, i8** %249, align 8
  %295 = udiv i32 %293, 10
  %296 = getelementptr inbounds i8, i8* %294, i64 -1
  store i8* %296, i8** %249, align 8
  %297 = urem i32 %295, 10
  %298 = trunc i32 %297 to i8
  %299 = or i8 %298, 48
  store i8 %299, i8* %296, align 1
  %300 = icmp ugt i32 %293, 99
  br i1 %300, label %292, label %301

301:                                              ; preds = %292, %277
  %302 = bitcast i8** %249 to i64*
  %303 = load i64, i64* %302, align 8
  br label %304

304:                                              ; preds = %301, %284, %286, %288, %290
  %305 = phi i64 [ %291, %290 ], [ %289, %288 ], [ %287, %286 ], [ %303, %301 ], [ %285, %284 ]
  %306 = ptrtoint i8* %251 to i64
  %307 = sub i64 %306, %305
  %308 = trunc i64 %307 to i32
  store i32 %308, i32* %250, align 8
  %309 = inttoptr i64 %305 to i8*
  %310 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %309, i32 %308) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %247) #8
  %311 = icmp eq %"class.WTF::StringImpl"* %310, null
  br i1 %311, label %312, label %317

312:                                              ; preds = %304
  %313 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  store i8* null, i8** %313, align 8
  %314 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %315 = bitcast %"class.WTF::StringView"* %18 to i64*
  store i64 %314, i64* %315, align 8
  %316 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 0, i32* %316, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %18)
  br label %337

317:                                              ; preds = %304
  %318 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 0
  store %"class.WTF::StringImpl"* %310, %"class.WTF::StringImpl"** %318, align 8
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 1
  %320 = load i32, i32* %319, align 4
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 1
  %322 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  %323 = bitcast i8** %322 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %321, %"class.WTF::StringImpl"** %323, align 8
  %324 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 %320, i32* %324, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %18)
  %325 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %326 = load atomic i32, i32* %325 monotonic, align 4
  %327 = and i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 0
  %330 = load i32, i32* %329, align 4
  br i1 %328, label %331, label %333

331:                                              ; preds = %317
  %332 = add i32 %330, -1
  store i32 %332, i32* %329, align 4
  br label %333

333:                                              ; preds = %331, %317
  %334 = phi i32 [ %332, %331 ], [ %330, %317 ]
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %336, label %337

336:                                              ; preds = %333
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %310) #8
  br label %337

337:                                              ; preds = %312, %333, %336
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %246) #8
  %338 = icmp eq i32 %5, 1
  %339 = select i1 %338, i8 41, i8 93
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %10, i8 zeroext %339) #8
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %10, i8 zeroext 46) #8
  %340 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %10) #8
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %10) #8
  %341 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %342 = icmp eq %"class.WTF::StringImpl"* %341, null
  br i1 %342, label %356, label %343

343:                                              ; preds = %337
  %344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = load atomic i32, i32* %344 monotonic, align 4
  %346 = and i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 0
  %349 = load i32, i32* %348, align 4
  br i1 %347, label %350, label %352

350:                                              ; preds = %343
  %351 = add i32 %349, -1
  store i32 %351, i32* %348, align 4
  br label %352

352:                                              ; preds = %350, %343
  %353 = phi i32 [ %351, %350 ], [ %349, %343 ]
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %355, label %356

355:                                              ; preds = %352
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %341) #8
  br label %356

356:                                              ; preds = %337, %352, %355
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19) #8
  ret %"class.WTF::StringImpl"* %340
}

declare %"class.blink::SharedAudioBuffer"* @_ZN5blink11AudioBuffer23CreateSharedAudioBufferEv(%"class.blink::AudioBuffer"*) local_unnamed_addr #1

declare void @_ZN5blink15AudioNodeOutput19SetNumberOfChannelsEj(%"class.blink::AudioNodeOutput"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24AudioBufferSourceHandler20ClampGrainParametersEPKNS_17SharedAudioBufferE(%"class.blink::AudioBufferSourceHandler"* nocapture, %"class.blink::SharedAudioBuffer"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.blink::SharedAudioBuffer"*, %"class.blink::SharedAudioBuffer"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = uitofp i32 %6 to double
  %8 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %4, i64 0, i32 0
  %9 = load float, float* %8, align 8
  %10 = fpext float %9 to double
  %11 = fdiv double %7, %10
  %12 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 15
  %13 = load double, double* %12, align 8
  %14 = fcmp ult double %13, %11
  %15 = fcmp ole double %13, 0.000000e+00
  %16 = select i1 %15, double 0.000000e+00, double %13
  %17 = select i1 %14, double %16, double %11
  store double %17, double* %12, align 8
  %18 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 17
  %19 = load i8, i8* %18, align 8, !range !4
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %2
  %22 = fsub double %11, %17
  %23 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 16
  store double %22, double* %23, align 8
  br label %41

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 7
  %26 = load i8, i8* %25, align 8, !range !4
  %27 = icmp eq i8 %26, 0
  %28 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 16
  %29 = load double, double* %28, align 8
  br i1 %27, label %30, label %32

30:                                               ; preds = %24
  %31 = fsub double %11, %17
  br label %41

32:                                               ; preds = %24
  %33 = fcmp ult double %29, 0x7FF0000000000000
  %34 = fcmp ole double %29, 0.000000e+00
  %35 = select i1 %34, double 0.000000e+00, double %29
  %36 = select i1 %33, double %35, double 0x7FF0000000000000
  store double %36, double* %28, align 8
  %37 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 0, i32 4
  %38 = load double, double* %37, align 8
  %39 = fadd double %38, %36
  %40 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 0, i32 5
  store double %39, double* %40, align 8
  br label %49

41:                                               ; preds = %30, %21
  %42 = phi double [ %31, %30 ], [ %22, %21 ]
  %43 = phi double [ %29, %30 ], [ %22, %21 ]
  %44 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 16
  %45 = fcmp ult double %43, %42
  %46 = fcmp ole double %43, 0.000000e+00
  %47 = select i1 %46, double 0.000000e+00, double %43
  %48 = select i1 %45, double %47, double %42
  store double %48, double* %44, align 8
  br label %49

49:                                               ; preds = %41, %32
  %50 = load float, float* %8, align 8
  %51 = fpext float %50 to double
  %52 = tail call i64 @_ZN5blink15audio_utilities17TimeToSampleFrameEddNS0_19SampleFrameRoundingE(double %17, double %51, i32 0) #8
  %53 = uitofp i64 %52 to double
  %54 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 12
  store double %53, double* %54, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24AudioBufferSourceHandler5StartEdRNS_14ExceptionStateE(%"class.blink::AudioBufferSourceHandler"*, double, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::AudioBufferSourceHandler"* %0 to %"class.blink::AudioScheduledSourceHandler"*
  tail call void @_ZN5blink27AudioScheduledSourceHandler5StartEdRNS_14ExceptionStateE(%"class.blink::AudioScheduledSourceHandler"* %4, double %1, %"class.blink::ExceptionState"* dereferenceable(72) %2) #8
  ret void
}

declare void @_ZN5blink27AudioScheduledSourceHandler5StartEdRNS_14ExceptionStateE(%"class.blink::AudioScheduledSourceHandler"*, double, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24AudioBufferSourceHandler5StartEddRNS_14ExceptionStateE(%"class.blink::AudioBufferSourceHandler"*, double, double, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.blink::SharedAudioBuffer"*, %"class.blink::SharedAudioBuffer"** %5, align 8
  %7 = icmp eq %"class.blink::SharedAudioBuffer"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = uitofp i32 %10 to double
  %12 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %6, i64 0, i32 0
  %13 = load float, float* %12, align 8
  %14 = fpext float %13 to double
  %15 = fdiv double %11, %14
  br label %16

16:                                               ; preds = %4, %8
  %17 = phi double [ %15, %8 ], [ 0.000000e+00, %4 ]
  tail call void @_ZN5blink24AudioBufferSourceHandler11StartSourceEdddbRNS_14ExceptionStateE(%"class.blink::AudioBufferSourceHandler"* %0, double %1, double %2, double %17, i1 zeroext false, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24AudioBufferSourceHandler11StartSourceEdddbRNS_14ExceptionStateE(%"class.blink::AudioBufferSourceHandler"*, double, double, double, i1 zeroext, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %7 = alloca double, align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca double, align 8
  store double %1, double* %7, align 8
  %12 = zext i1 %4 to i8
  %13 = bitcast %"class.blink::AudioBufferSourceHandler"* %0 to %"class.blink::AudioHandler"*
  %14 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %13) #8
  %15 = bitcast %"class.blink::BaseAudioContext"* %14 to void (%"class.blink::BaseAudioContext"*)***
  %16 = load void (%"class.blink::BaseAudioContext"*)**, void (%"class.blink::BaseAudioContext"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::BaseAudioContext"*)*, void (%"class.blink::BaseAudioContext"*)** %16, i64 35
  %18 = load void (%"class.blink::BaseAudioContext"*)*, void (%"class.blink::BaseAudioContext"*)** %17, align 8
  tail call void %18(%"class.blink::BaseAudioContext"* %14) #8
  %19 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %6
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 11, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0)) #8
  br label %179

23:                                               ; preds = %6
  %24 = load double, double* %7, align 8
  %25 = fcmp olt double %24, 0.000000e+00
  br i1 %25, label %26, label %50

26:                                               ; preds = %23
  %27 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  %28 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages24IndexExceedsMinimumBoundIdEEN3WTF6StringEPKcT_S6_(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), double %24, double 0.000000e+00)
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %29, align 8
  %30 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %31 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %31, i64 2
  %33 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %32, align 8
  call void %33(%"class.blink::ExceptionState"* %5, %"class.WTF::String"* nonnull dereferenceable(8) %8) #8
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #8
  br label %49

49:                                               ; preds = %26, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %179

50:                                               ; preds = %23
  %51 = fcmp olt double %2, 0.000000e+00
  br i1 %51, label %52, label %76

52:                                               ; preds = %50
  %53 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #8
  %54 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages24IndexExceedsMinimumBoundIdEEN3WTF6StringEPKcT_S6_(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), double %2, double 0.000000e+00)
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %55, align 8
  %56 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %57 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %57, i64 2
  %59 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %58, align 8
  call void %59(%"class.blink::ExceptionState"* %5, %"class.WTF::String"* nonnull dereferenceable(8) %9) #8
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #8
  br label %75

75:                                               ; preds = %52, %71, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #8
  br label %179

76:                                               ; preds = %50
  %77 = fcmp olt double %3, 0.000000e+00
  br i1 %77, label %78, label %102

78:                                               ; preds = %76
  %79 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #8
  %80 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages24IndexExceedsMinimumBoundIdEEN3WTF6StringEPKcT_S6_(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), double %3, double 0.000000e+00)
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %80, %"class.WTF::StringImpl"** %81, align 8
  %82 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %83 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %83, i64 2
  %85 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %84, align 8
  call void %85(%"class.blink::ExceptionState"* %5, %"class.WTF::String"* nonnull dereferenceable(8) %10) #8
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %78
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #8
  br label %101

101:                                              ; preds = %78, %97, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #8
  br label %179

102:                                              ; preds = %76
  %103 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %13) #8
  %104 = tail call %"class.blink::AudioNode"* @_ZNK5blink12AudioHandler7GetNodeEv(%"class.blink::AudioHandler"* %13) #8
  tail call void @_ZN5blink16BaseAudioContext33NotifySourceNodeStartedProcessingEPNS_9AudioNodeE(%"class.blink::BaseAudioContext"* %103, %"class.blink::AudioNode"* %104) #8
  %105 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 0, i32 3, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %105) #8
  %106 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 17
  store i8 %12, i8* %106, align 8
  %107 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 13
  store i8 1, i8* %107, align 8
  %108 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 15
  store double %2, double* %108, align 8
  %109 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 16
  store double %3, double* %109, align 8
  %110 = bitcast double* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110)
  %111 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %13) #8
  %112 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %111, i64 0, i32 21, i32 0
  %113 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::AudioDestinationHandler", %"class.blink::AudioDestinationHandler"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i64, i64* %114 acquire, align 8
  %116 = uitofp i64 %115 to double
  %117 = bitcast %"class.blink::AudioDestinationHandler"* %113 to double (%"class.blink::AudioDestinationHandler"*)***
  %118 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %117, align 8
  %119 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %118, i64 25
  %120 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %119, align 8
  %121 = tail call double %120(%"class.blink::AudioDestinationHandler"* %113) #8
  %122 = fdiv double %116, %121
  store double %122, double* %11, align 8
  %123 = load double, double* %7, align 8
  %124 = fcmp olt double %123, %122
  %125 = select i1 %124, double* %11, double* %7
  %126 = bitcast double* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 0, i32 4
  %129 = bitcast double* %128 to i64*
  store i64 %127, i64* %129, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110)
  %130 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %131 = load %"class.blink::SharedAudioBuffer"*, %"class.blink::SharedAudioBuffer"** %130, align 8
  %132 = icmp eq %"class.blink::SharedAudioBuffer"* %131, null
  %133 = bitcast i64 %127 to double
  br i1 %132, label %178, label %134

134:                                              ; preds = %102
  %135 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %131, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = uitofp i32 %136 to double
  %138 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %131, i64 0, i32 0
  %139 = load float, float* %138, align 8
  %140 = fpext float %139 to double
  %141 = fdiv double %137, %140
  %142 = load double, double* %108, align 8
  %143 = fcmp ult double %142, %141
  %144 = fcmp ole double %142, 0.000000e+00
  %145 = select i1 %144, double 0.000000e+00, double %142
  %146 = select i1 %143, double %145, double %141
  store double %146, double* %108, align 8
  %147 = load i8, i8* %106, align 8, !range !4
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %149, label %151

149:                                              ; preds = %134
  %150 = fsub double %141, %146
  store double %150, double* %109, align 8
  br label %165

151:                                              ; preds = %134
  %152 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 7
  %153 = load i8, i8* %152, align 8, !range !4
  %154 = icmp eq i8 %153, 0
  %155 = load double, double* %109, align 8
  br i1 %154, label %156, label %158

156:                                              ; preds = %151
  %157 = fsub double %141, %146
  br label %165

158:                                              ; preds = %151
  %159 = fcmp ult double %155, 0x7FF0000000000000
  %160 = fcmp ole double %155, 0.000000e+00
  %161 = select i1 %160, double 0.000000e+00, double %155
  %162 = select i1 %159, double %161, double 0x7FF0000000000000
  store double %162, double* %109, align 8
  %163 = fadd double %162, %133
  %164 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 0, i32 5
  store double %163, double* %164, align 8
  br label %172

165:                                              ; preds = %156, %149
  %166 = phi double [ %157, %156 ], [ %150, %149 ]
  %167 = phi double [ %155, %156 ], [ %150, %149 ]
  %168 = fcmp ult double %167, %166
  %169 = fcmp ole double %167, 0.000000e+00
  %170 = select i1 %169, double 0.000000e+00, double %167
  %171 = select i1 %168, double %170, double %166
  store double %171, double* %109, align 8
  br label %172

172:                                              ; preds = %158, %165
  %173 = load float, float* %138, align 8
  %174 = fpext float %173 to double
  %175 = tail call i64 @_ZN5blink15audio_utilities17TimeToSampleFrameEddNS0_19SampleFrameRoundingE(double %146, double %174, i32 0) #8
  %176 = uitofp i64 %175 to double
  %177 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 12
  store double %176, double* %177, align 8
  br label %178

178:                                              ; preds = %102, %172
  store atomic i32 1, i32* %19 release, align 4
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %105) #8
  br label %179

179:                                              ; preds = %178, %101, %75, %49, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24AudioBufferSourceHandler5StartEdddRNS_14ExceptionStateE(%"class.blink::AudioBufferSourceHandler"*, double, double, double, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink24AudioBufferSourceHandler11StartSourceEdddbRNS_14ExceptionStateE(%"class.blink::AudioBufferSourceHandler"* %0, double %1, double %2, double %3, i1 zeroext true, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages24IndexExceedsMinimumBoundIdEEN3WTF6StringEPKcT_S6_(i8*, double, double) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::StringBuilder", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = fcmp oeq double %1, %2
  %15 = bitcast %"class.WTF::StringBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %15) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 48, i1 false)
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 1
  %18 = bitcast %union.anon.745* %17 to i8*
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 2
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 3
  store i8 1, i8* %20, align 4
  %21 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 4
  store i8 0, i8* %21, align 1
  %22 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #8
  %23 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %24 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i8** %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 4, i32* %26, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #8
  %27 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #8
  %28 = icmp eq i8* %0, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %3
  %30 = call i64 @strlen(i8* nonnull %0) #16
  %31 = icmp ult i64 %30, 4294967296
  br i1 %31, label %33, label %32, !prof !2

32:                                               ; preds = %29
  call void @llvm.trap() #8
  unreachable

33:                                               ; preds = %29
  %34 = trunc i64 %30 to i32
  br label %35

35:                                               ; preds = %3, %33
  %36 = phi i32 [ %34, %33 ], [ 0, %3 ]
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %38 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* %0, i8** %39, align 8
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %36, i32* %40, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #8
  %41 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #8
  %42 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %43 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0), i8** %44, align 8
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 11, i32* %45, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #8
  %46 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #8
  %47 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages12FormatNumberIdEEN3WTF6StringET_(double %1) #8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %49, label %54

49:                                               ; preds = %35
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %50, align 8
  %51 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %52 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 0, i32* %53, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  br label %74

54:                                               ; preds = %35
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %55, align 8
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 1
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %60 = bitcast i8** %59 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %57, i32* %61, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %54
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %54
  %71 = phi i32 [ %69, %68 ], [ %67, %54 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #8
  br label %74

74:                                               ; preds = %49, %70, %73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #8
  %75 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #8
  %76 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %77 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.22, i64 0, i64 0), i8** %78, align 8
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 15, i32* %79, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #8
  %80 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %80) #8
  %81 = select i1 %14, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.24, i64 0, i64 0)
  %82 = select i1 %14, i32 12, i32 0
  %83 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %84 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* %81, i8** %85, align 8
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %82, i32* %86, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %80) #8
  %87 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #8
  %88 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %89 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.25, i64 0, i64 0), i8** %90, align 8
  %91 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 19, i32* %91, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #8
  %92 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #8
  %93 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages12FormatNumberIdEEN3WTF6StringET_(double %2) #8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %95, label %100

95:                                               ; preds = %74
  %96 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* null, i8** %96, align 8
  %97 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %98 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 0, i32* %99, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %12)
  br label %120

100:                                              ; preds = %74
  %101 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %93, %"class.WTF::StringImpl"** %101, align 8
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %106 = bitcast i8** %105 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %104, %"class.WTF::StringImpl"** %106, align 8
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %103, i32* %107, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %12)
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %100
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %100
  %117 = phi i32 [ %115, %114 ], [ %113, %100 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #8
  br label %120

120:                                              ; preds = %95, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #8
  %121 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121) #8
  %122 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %123 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0), i8** %124, align 8
  %125 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 2, i32* %125, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121) #8
  %126 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %4) #8
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %4) #8
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %120
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #8
  br label %142

142:                                              ; preds = %120, %138, %141
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %15) #8
  ret %"class.WTF::StringImpl"* %126
}

declare void @_ZN5blink16BaseAudioContext33NotifySourceNodeStartedProcessingEPNS_9AudioNodeE(%"class.blink::BaseAudioContext"*, %"class.blink::AudioNode"*) local_unnamed_addr #1

declare %"class.blink::AudioNode"* @_ZNK5blink12AudioHandler7GetNodeEv(%"class.blink::AudioHandler"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24AudioBufferSourceHandler7SetLoopEb(%"class.blink::AudioBufferSourceHandler"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 0, i32 3, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %4) #8
  %5 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 7
  store i8 %3, i8* %5, align 8
  br i1 %1, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 8
  store i8 1, i8* %7, align 1
  br label %8

8:                                                ; preds = %2, %6
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24AudioBufferSourceHandler12SetLoopStartEd(%"class.blink::AudioBufferSourceHandler"*, double) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 0, i32 3, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %3) #8
  %4 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 10
  store double %1, double* %4, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24AudioBufferSourceHandler10SetLoopEndEd(%"class.blink::AudioBufferSourceHandler"*, double) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 0, i32 3, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %3) #8
  %4 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 11
  store double %1, double* %4, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %3) #8
  ret void
}

declare float @_ZN5blink17AudioParamHandler10FinalValueEv(%"class.blink::AudioParamHandler"*) local_unnamed_addr #1

declare double @_ZN6fdlibm3powEdd(double, double) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden double @_ZN5blink24AudioBufferSourceHandler18GetMinPlaybackRateEv(%"class.blink::AudioBufferSourceHandler"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 19
  %3 = load double, double* %2, align 8
  ret double %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink24AudioBufferSourceHandler17PropagatesSilenceEv(%"class.blink::AudioBufferSourceHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i32, i32* %2 acquire, align 4
  %4 = add i32 %3, -1
  %5 = icmp ult i32 %4, 2
  br i1 %5, label %6, label %17

6:                                                ; preds = %1
  %7 = load atomic i32, i32* %2 acquire, align 4
  %8 = icmp eq i32 %7, 3
  br i1 %8, label %17, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 0, i32 3
  %11 = tail call zeroext i1 @_ZN3WTF5Mutex7TryLockEv(%"class.WTF::Mutex"* %10) #8
  br i1 %11, label %12, label %17

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load %"class.blink::SharedAudioBuffer"*, %"class.blink::SharedAudioBuffer"** %13, align 8
  %15 = icmp eq %"class.blink::SharedAudioBuffer"* %14, null
  %16 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %10, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %16) #8
  br label %17

17:                                               ; preds = %9, %12, %1, %6
  %18 = phi i1 [ true, %6 ], [ true, %1 ], [ %15, %12 ], [ false, %9 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24AudioBufferSourceHandler25HandleStoppableSourceNodeEv(%"class.blink::AudioBufferSourceHandler"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::AudioBufferSourceHandler"* %0 to %"class.blink::AudioScheduledSourceHandler"*
  %3 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 0, i32 3
  %4 = tail call zeroext i1 @_ZN3WTF5Mutex7TryLockEv(%"class.WTF::Mutex"* %3) #8
  br i1 %4, label %5, label %90

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 0, i32 5
  %7 = load double, double* %6, align 8
  %8 = load double, double* @_ZN5blink27AudioScheduledSourceHandler12kUnknownTimeE, align 8
  %9 = fcmp une double %7, %8
  br i1 %9, label %10, label %27

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::AudioBufferSourceHandler"* %0 to %"class.blink::AudioHandler"*
  %12 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %11) #8
  %13 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %12, i64 0, i32 21, i32 0
  %14 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::AudioDestinationHandler", %"class.blink::AudioDestinationHandler"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i64, i64* %15 acquire, align 8
  %17 = uitofp i64 %16 to double
  %18 = bitcast %"class.blink::AudioDestinationHandler"* %14 to double (%"class.blink::AudioDestinationHandler"*)***
  %19 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %18, align 8
  %20 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %19, i64 25
  %21 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %20, align 8
  %22 = tail call double %21(%"class.blink::AudioDestinationHandler"* %14) #8
  %23 = fdiv double %17, %22
  %24 = load double, double* %6, align 8
  %25 = fcmp ogt double %23, %24
  br i1 %25, label %26, label %27

26:                                               ; preds = %10
  tail call void @_ZN5blink27AudioScheduledSourceHandler6FinishEv(%"class.blink::AudioScheduledSourceHandler"* %2) #8
  br label %88

27:                                               ; preds = %10, %5
  %28 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 19
  %29 = load double, double* %28, align 8
  %30 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 8
  %31 = load i8, i8* %30, align 1, !range !4
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %88

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %35 = load %"class.blink::SharedAudioBuffer"*, %"class.blink::SharedAudioBuffer"** %34, align 8
  %36 = icmp eq %"class.blink::SharedAudioBuffer"* %35, null
  br i1 %36, label %88, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 acquire, align 4
  %40 = add i32 %39, -1
  %41 = icmp ult i32 %40, 2
  %42 = fcmp ogt double %29, 0.000000e+00
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %88

44:                                               ; preds = %37
  %45 = load %"class.blink::SharedAudioBuffer"*, %"class.blink::SharedAudioBuffer"** %34, align 8
  %46 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %45, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = uitofp i32 %47 to double
  %49 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %45, i64 0, i32 0
  %50 = load float, float* %49, align 8
  %51 = fpext float %50 to double
  %52 = fdiv double %48, %51
  %53 = fdiv double %52, %29
  %54 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %0, i64 0, i32 0, i32 4
  %55 = load double, double* %54, align 8
  %56 = fadd double %55, %53
  %57 = bitcast %"class.blink::AudioBufferSourceHandler"* %0 to %"class.blink::AudioHandler"*
  %58 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %57) #8
  %59 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %58, i64 0, i32 21, i32 0
  %60 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %59, align 8
  %61 = bitcast %"class.blink::AudioDestinationHandler"* %60 to double (%"class.blink::AudioDestinationHandler"*)***
  %62 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %61, align 8
  %63 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %62, i64 25
  %64 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %63, align 8
  %65 = tail call double %64(%"class.blink::AudioDestinationHandler"* %60) #8
  %66 = fptrunc double %65 to float
  %67 = fpext float %66 to double
  %68 = tail call %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* %57) #8
  %69 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %68, i64 0, i32 21, i32 0
  %70 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::AudioDestinationHandler", %"class.blink::AudioDestinationHandler"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i64, i64* %71 acquire, align 8
  %73 = uitofp i64 %72 to double
  %74 = bitcast %"class.blink::AudioDestinationHandler"* %70 to double (%"class.blink::AudioDestinationHandler"*)***
  %75 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %74, align 8
  %76 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %75, i64 25
  %77 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %76, align 8
  %78 = tail call double %77(%"class.blink::AudioDestinationHandler"* %70) #8
  %79 = insertelement <2 x double> <double undef, double 2.560000e+02>, double %73, i32 0
  %80 = insertelement <2 x double> undef, double %78, i32 0
  %81 = insertelement <2 x double> %80, double %67, i32 1
  %82 = fdiv <2 x double> %79, %81
  %83 = extractelement <2 x double> %82, i32 1
  %84 = fadd double %56, %83
  %85 = extractelement <2 x double> %82, i32 0
  %86 = fcmp ogt double %85, %84
  br i1 %86, label %87, label %88

87:                                               ; preds = %44
  tail call void @_ZN5blink27AudioScheduledSourceHandler6FinishEv(%"class.blink::AudioScheduledSourceHandler"* %2) #8
  br label %88

88:                                               ; preds = %27, %37, %33, %87, %44, %26
  %89 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %3, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %89) #8
  br label %90

90:                                               ; preds = %1, %88
  ret void
}

declare void @_ZN5blink27AudioScheduledSourceHandler6FinishEv(%"class.blink::AudioScheduledSourceHandler"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21AudioBufferSourceNodeC2ERNS_16BaseAudioContextE(%"class.blink::AudioBufferSourceNode"*, %"class.blink::BaseAudioContext"* dereferenceable(304)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 0
  tail call void @_ZN5blink24AudioScheduledSourceNodeC2ERNS_16BaseAudioContextE(%"class.blink::AudioScheduledSourceNode"* %3, %"class.blink::BaseAudioContext"* dereferenceable(304) %1) #8
  %4 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [5 x i8*], [7 x i8*] }, { [31 x i8*], [5 x i8*], [7 x i8*] }* @_ZTVN5blink21AudioBufferSourceNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [5 x i8*], [7 x i8*] }, { [31 x i8*], [5 x i8*], [7 x i8*] }* @_ZTVN5blink21AudioBufferSourceNodeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [5 x i8*], [7 x i8*] }, { [31 x i8*], [5 x i8*], [7 x i8*] }* @_ZTVN5blink21AudioBufferSourceNodeE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %8 = tail call %"class.blink::AudioParam"* @_ZN5blink10AudioParam6CreateERNS_16BaseAudioContextERKN3WTF6StringENS_17AudioParamHandler14AudioParamTypeEdNS7_14AutomationRateENS7_18AutomationRateModeEff(%"class.blink::BaseAudioContext"* dereferenceable(304) %1, %"class.WTF::String"* dereferenceable(8) %7, i32 0, double 1.000000e+00, i32 1, i32 0, float 0xC7EFFFFFE0000000, float 0x47EFFFFFE0000000) #8
  %9 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AudioParam"* %8, %"class.blink::AudioParam"** %9, align 8
  %10 = tail call %"class.blink::AudioParam"* @_ZN5blink10AudioParam6CreateERNS_16BaseAudioContextERKN3WTF6StringENS_17AudioParamHandler14AudioParamTypeEdNS7_14AutomationRateENS7_18AutomationRateModeEff(%"class.blink::BaseAudioContext"* dereferenceable(304) %1, %"class.WTF::String"* dereferenceable(8) %7, i32 1, double 0.000000e+00, i32 1, i32 0, float 0xC7EFFFFFE0000000, float 0x47EFFFFFE0000000) #8
  %11 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::AudioParam"* %10, %"class.blink::AudioParam"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::AudioBuffer"* null, %"class.blink::AudioBuffer"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %1, i64 0, i32 21, i32 0
  %15 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %14, align 8
  %16 = bitcast %"class.blink::AudioDestinationHandler"* %15 to double (%"class.blink::AudioDestinationHandler"*)***
  %17 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %16, align 8
  %18 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %17, i64 25
  %19 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %18, align 8
  %20 = tail call double %19(%"class.blink::AudioDestinationHandler"* %15) #8
  %21 = fptrunc double %20 to float
  %22 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %9, align 8
  %23 = getelementptr inbounds %"class.blink::AudioParam", %"class.blink::AudioParam"* %22, i64 0, i32 2, i32 0
  %24 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %23, align 8
  %25 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %11, align 8
  %26 = getelementptr inbounds %"class.blink::AudioParam", %"class.blink::AudioParam"* %25, i64 0, i32 2, i32 0
  %27 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %26, align 8
  %28 = tail call noalias i8* @malloc(i64 344) #8
  %29 = bitcast i8* %28 to %"class.blink::AudioBufferSourceHandler"*
  tail call void @_ZN5blink24AudioBufferSourceHandlerC2ERNS_9AudioNodeEfRNS_17AudioParamHandlerES4_(%"class.blink::AudioBufferSourceHandler"* %29, %"class.blink::AudioNode"* dereferenceable(168) %13, float %21, %"class.blink::AudioParamHandler"* dereferenceable(208) %24, %"class.blink::AudioParamHandler"* dereferenceable(208) %27) #8
  %30 = bitcast i8* %28 to %"class.blink::AudioHandler"*
  tail call void @_ZN5blink9AudioNode10SetHandlerE13scoped_refptrINS_12AudioHandlerEE(%"class.blink::AudioNode"* %13, %"class.blink::AudioHandler"* %30) #8
  ret void
}

declare void @_ZN5blink24AudioScheduledSourceNodeC2ERNS_16BaseAudioContextE(%"class.blink::AudioScheduledSourceNode"*, %"class.blink::BaseAudioContext"* dereferenceable(304)) unnamed_addr #1

declare %"class.blink::AudioParam"* @_ZN5blink10AudioParam6CreateERNS_16BaseAudioContextERKN3WTF6StringENS_17AudioParamHandler14AudioParamTypeEdNS7_14AutomationRateENS7_18AutomationRateModeEff(%"class.blink::BaseAudioContext"* dereferenceable(304), %"class.WTF::String"* dereferenceable(8), i32, double, i32, i32, float, float) local_unnamed_addr #1

declare void @_ZN5blink9AudioNode10SetHandlerE13scoped_refptrINS_12AudioHandlerEE(%"class.blink::AudioNode"*, %"class.blink::AudioHandler"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AudioBufferSourceNode"* @_ZN5blink21AudioBufferSourceNode6CreateERNS_16BaseAudioContextERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"* dereferenceable(304), %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 200) #8
  %4 = bitcast i8* %3 to %"class.blink::AudioBufferSourceNode"*
  tail call void @_ZN5blink21AudioBufferSourceNodeC2ERNS_16BaseAudioContextE(%"class.blink::AudioBufferSourceNode"* %4, %"class.blink::BaseAudioContext"* dereferenceable(304) %0) #8
  %5 = getelementptr inbounds i8, i8* %3, i64 -4
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = or i16 %7, 1
  store atomic i16 %8, i16* %6 release, align 2
  %9 = getelementptr inbounds i8, i8* %3, i64 168
  %10 = bitcast i8* %9 to %"class.blink::ActiveScriptWrappableBase"*
  tail call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %10) #8
  ret %"class.blink::AudioBufferSourceNode"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AudioBufferSourceNode"* @_ZN5blink21AudioBufferSourceNode6CreateEPNS_16BaseAudioContextEPNS_24AudioBufferSourceOptionsERNS_14ExceptionStateE(%"class.blink::BaseAudioContext"*, %"class.blink::AudioBufferSourceOptions"* nocapture readonly, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 200) #8
  %5 = bitcast i8* %4 to %"class.blink::AudioBufferSourceNode"*
  tail call void @_ZN5blink21AudioBufferSourceNodeC2ERNS_16BaseAudioContextE(%"class.blink::AudioBufferSourceNode"* %5, %"class.blink::BaseAudioContext"* dereferenceable(304) %0) #8
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = getelementptr inbounds i8, i8* %4, i64 168
  %11 = bitcast i8* %10 to %"class.blink::ActiveScriptWrappableBase"*
  tail call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %11) #8
  %12 = icmp eq i8* %4, null
  br i1 %12, label %77, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::AudioBufferSourceOptions", %"class.blink::AudioBufferSourceOptions"* %1, i64 0, i32 1
  %15 = load i8, i8* %14, align 8, !range !4
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = bitcast i8* %4 to %"class.blink::AudioNode"*
  br label %37

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::AudioBufferSourceOptions", %"class.blink::AudioBufferSourceOptions"* %1, i64 0, i32 8, i32 0, i32 0
  %21 = load %"class.blink::AudioBuffer"*, %"class.blink::AudioBuffer"** %20, align 8
  %22 = bitcast i8* %4 to %"class.blink::AudioNode"*
  %23 = tail call dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"* nonnull %22) #8
  %24 = bitcast %"class.blink::AudioHandler"* %23 to %"class.blink::AudioBufferSourceHandler"*
  tail call void @_ZN5blink24AudioBufferSourceHandler9SetBufferEPNS_11AudioBufferERNS_14ExceptionStateE(%"class.blink::AudioBufferSourceHandler"* %24, %"class.blink::AudioBuffer"* %21, %"class.blink::ExceptionState"* dereferenceable(72) %2) #8
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %37

28:                                               ; preds = %19
  %29 = getelementptr inbounds i8, i8* %4, i64 192
  %30 = ptrtoint %"class.blink::AudioBuffer"* %21 to i64
  %31 = bitcast i8* %29 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %28
  %35 = bitcast %"class.blink::AudioBuffer"* %21 to i8*
  %36 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %35) #8
  br label %37

37:                                               ; preds = %17, %34, %28, %19
  %38 = phi %"class.blink::AudioNode"* [ %18, %17 ], [ %22, %34 ], [ %22, %28 ], [ %22, %19 ]
  %39 = getelementptr inbounds i8, i8* %4, i64 184
  %40 = bitcast i8* %39 to %"class.blink::AudioParam"**
  %41 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::AudioBufferSourceOptions", %"class.blink::AudioBufferSourceOptions"* %1, i64 0, i32 9
  %43 = load float, float* %42, align 8
  tail call void @_ZN5blink10AudioParam8setValueEf(%"class.blink::AudioParam"* %41, float %43) #8
  %44 = getelementptr inbounds %"class.blink::AudioBufferSourceOptions", %"class.blink::AudioBufferSourceOptions"* %1, i64 0, i32 10
  %45 = load i8, i8* %44, align 4, !range !4
  %46 = icmp eq i8 %45, 0
  %47 = tail call dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"* nonnull %38) #8
  %48 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %47, i64 1, i32 1
  %49 = bitcast %"class.WTF::ThreadSafeRefCounted"* %48 to %"class.WTF::MutexBase"*
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %49) #8
  %50 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %47, i64 1, i32 21
  %51 = bitcast i32* %50 to i8*
  store i8 %45, i8* %51, align 8
  br i1 %46, label %55, label %52

52:                                               ; preds = %37
  %53 = bitcast %"class.blink::AudioHandler"* %47 to %"class.blink::AudioBufferSourceHandler"*
  %54 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %53, i64 0, i32 8
  store i8 1, i8* %54, align 1
  br label %55

55:                                               ; preds = %37, %52
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %49) #8
  %56 = getelementptr inbounds %"class.blink::AudioBufferSourceOptions", %"class.blink::AudioBufferSourceOptions"* %1, i64 0, i32 12
  %57 = bitcast double* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = tail call dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"* nonnull %38) #8
  %60 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %59, i64 1, i32 1
  %61 = bitcast %"class.WTF::ThreadSafeRefCounted"* %60 to %"class.WTF::MutexBase"*
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %61) #8
  %62 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %59, i64 2, i32 1
  %63 = bitcast %"class.WTF::ThreadSafeRefCounted"* %62 to i64*
  store i64 %58, i64* %63, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %61) #8
  %64 = getelementptr inbounds %"class.blink::AudioBufferSourceOptions", %"class.blink::AudioBufferSourceOptions"* %1, i64 0, i32 13
  %65 = bitcast double* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = tail call dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"* nonnull %38) #8
  %68 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %67, i64 1, i32 1
  %69 = bitcast %"class.WTF::ThreadSafeRefCounted"* %68 to %"class.WTF::MutexBase"*
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %69) #8
  %70 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %67, i64 2
  %71 = bitcast %"class.blink::AudioHandler"* %70 to i64*
  store i64 %66, i64* %71, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %69) #8
  %72 = getelementptr inbounds i8, i8* %4, i64 176
  %73 = bitcast i8* %72 to %"class.blink::AudioParam"**
  %74 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::AudioBufferSourceOptions", %"class.blink::AudioBufferSourceOptions"* %1, i64 0, i32 14
  %76 = load float, float* %75, align 8
  tail call void @_ZN5blink10AudioParam8setValueEf(%"class.blink::AudioParam"* %74, float %76) #8
  br label %77

77:                                               ; preds = %3, %55
  ret %"class.blink::AudioBufferSourceNode"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21AudioBufferSourceNode9setBufferEPNS_11AudioBufferERNS_14ExceptionStateE(%"class.blink::AudioBufferSourceNode"*, %"class.blink::AudioBuffer"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 0, i32 0
  %5 = tail call dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"* %4) #8
  %6 = bitcast %"class.blink::AudioHandler"* %5 to %"class.blink::AudioBufferSourceHandler"*
  tail call void @_ZN5blink24AudioBufferSourceHandler9SetBufferEPNS_11AudioBufferERNS_14ExceptionStateE(%"class.blink::AudioBufferSourceHandler"* %6, %"class.blink::AudioBuffer"* %1, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %7 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %19

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 3
  %12 = ptrtoint %"class.blink::AudioBuffer"* %1 to i64
  %13 = bitcast %"class.blink::Member.571"* %11 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.blink::AudioBuffer"* %1 to i8*
  %18 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %17) #8
  br label %19

19:                                               ; preds = %3, %16, %10
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::AudioParam"* @_ZNK5blink21AudioBufferSourceNode6detuneEv(%"class.blink::AudioBufferSourceNode"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %2, align 8
  ret %"class.blink::AudioParam"* %3
}

declare void @_ZN5blink10AudioParam8setValueEf(%"class.blink::AudioParam"*, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21AudioBufferSourceNode7setLoopEb(%"class.blink::AudioBufferSourceNode"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 0, i32 0
  %4 = tail call dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"* %3) #8
  %5 = zext i1 %1 to i8
  %6 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %4, i64 1, i32 1
  %7 = bitcast %"class.WTF::ThreadSafeRefCounted"* %6 to %"class.WTF::MutexBase"*
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %7) #8
  %8 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %4, i64 1, i32 21
  %9 = bitcast i32* %8 to i8*
  store i8 %5, i8* %9, align 8
  br i1 %1, label %10, label %13

10:                                               ; preds = %2
  %11 = bitcast %"class.blink::AudioHandler"* %4 to %"class.blink::AudioBufferSourceHandler"*
  %12 = getelementptr inbounds %"class.blink::AudioBufferSourceHandler", %"class.blink::AudioBufferSourceHandler"* %11, i64 0, i32 8
  store i8 1, i8* %12, align 1
  br label %13

13:                                               ; preds = %2, %10
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %7) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21AudioBufferSourceNode10setLoopEndEd(%"class.blink::AudioBufferSourceNode"*, double) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 0, i32 0
  %4 = tail call dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"* %3) #8
  %5 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %4, i64 1, i32 1
  %6 = bitcast %"class.WTF::ThreadSafeRefCounted"* %5 to %"class.WTF::MutexBase"*
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %6) #8
  %7 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %4, i64 2, i32 1
  %8 = bitcast %"class.WTF::ThreadSafeRefCounted"* %7 to double*
  store double %1, double* %8, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21AudioBufferSourceNode12setLoopStartEd(%"class.blink::AudioBufferSourceNode"*, double) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 0, i32 0
  %4 = tail call dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"* %3) #8
  %5 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %4, i64 1, i32 1
  %6 = bitcast %"class.WTF::ThreadSafeRefCounted"* %5 to %"class.WTF::MutexBase"*
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %6) #8
  %7 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %4, i64 2
  %8 = bitcast %"class.blink::AudioHandler"* %7 to double*
  store double %1, double* %8, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %6) #8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::AudioParam"* @_ZNK5blink21AudioBufferSourceNode12playbackRateEv(%"class.blink::AudioBufferSourceNode"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %2, align 8
  ret %"class.blink::AudioParam"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink21AudioBufferSourceNode5TraceEPNS_7VisitorE(%"class.blink::AudioBufferSourceNode"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.262"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10AudioParamEE5TraceEPNS_7VisitorEPKv) #8
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member.262"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10AudioParamEE5TraceEPNS_7VisitorEPKv) #8
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 3
  %26 = bitcast %"class.blink::Member.571"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11AudioBufferEE5TraceEPNS_7VisitorEPKv) #8
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink9AudioNode5TraceEPNS_7VisitorE(%"class.blink::AudioNode"* %36, %"class.blink::Visitor"* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_NK5blink21AudioBufferSourceNode5TraceEPNS_7VisitorE(%"class.blink::AudioBufferSourceNode"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 -1, i32 0, i32 0, i32 5
  %4 = getelementptr inbounds %class.scoped_refptr.283, %class.scoped_refptr.283* %3, i64 22
  %5 = bitcast %class.scoped_refptr.283* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10AudioParamEE5TraceEPNS_7VisitorEPKv) #8
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds %class.scoped_refptr.283, %class.scoped_refptr.283* %3, i64 23
  %16 = bitcast %class.scoped_refptr.283* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10AudioParamEE5TraceEPNS_7VisitorEPKv) #8
  br label %25

25:                                               ; preds = %19, %14
  %26 = getelementptr inbounds %class.scoped_refptr.283, %class.scoped_refptr.283* %3, i64 24
  %27 = bitcast %class.scoped_refptr.283* %26 to i64*
  %28 = load atomic i64, i64* %27 monotonic, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %25
  %31 = inttoptr i64 %28 to i8*
  %32 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, i64 5
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, align 8
  tail call void %35(%"class.blink::Visitor"* %1, i8* nonnull %31, i8* nonnull %31, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11AudioBufferEE5TraceEPNS_7VisitorEPKv) #8
  br label %36

36:                                               ; preds = %25, %30
  %37 = bitcast %class.scoped_refptr.283* %3 to %"class.blink::AudioNode"*
  tail call void @_ZNK5blink9AudioNode5TraceEPNS_7VisitorE(%"class.blink::AudioNode"* %37, %"class.blink::Visitor"* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn168_NK5blink21AudioBufferSourceNode5TraceEPNS_7VisitorE(%"class.blink::AudioBufferSourceNode"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i64 0
  %4 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i64 176
  %5 = bitcast i8* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10AudioParamEE5TraceEPNS_7VisitorEPKv) #8
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i64 184
  %16 = bitcast i8* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10AudioParamEE5TraceEPNS_7VisitorEPKv) #8
  br label %25

25:                                               ; preds = %19, %14
  %26 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i64 192
  %27 = bitcast i8* %26 to i64*
  %28 = load atomic i64, i64* %27 monotonic, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %25
  %31 = inttoptr i64 %28 to i8*
  %32 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, i64 5
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, align 8
  tail call void %35(%"class.blink::Visitor"* %1, i8* nonnull %31, i8* nonnull %31, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11AudioBufferEE5TraceEPNS_7VisitorEPKv) #8
  br label %36

36:                                               ; preds = %25, %30
  %37 = bitcast i8* %3 to %"class.blink::AudioNode"*
  tail call void @_ZNK5blink9AudioNode5TraceEPNS_7VisitorE(%"class.blink::AudioNode"* %37, %"class.blink::Visitor"* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(344) %"class.blink::AudioBufferSourceHandler"* @_ZNK5blink21AudioBufferSourceNode27GetAudioBufferSourceHandlerEv(%"class.blink::AudioBufferSourceNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 0, i32 0
  %3 = tail call dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"* %2) #8
  %4 = bitcast %"class.blink::AudioHandler"* %3 to %"class.blink::AudioBufferSourceHandler"*
  ret %"class.blink::AudioBufferSourceHandler"* %4
}

declare dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::AudioBuffer"* @_ZNK5blink21AudioBufferSourceNode6bufferEv(%"class.blink::AudioBufferSourceNode"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::AudioBuffer"*, %"class.blink::AudioBuffer"** %2, align 8
  ret %"class.blink::AudioBuffer"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink21AudioBufferSourceNode4loopEv(%"class.blink::AudioBufferSourceNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 0, i32 0
  %3 = tail call dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"* %2) #8
  %4 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %3, i64 1, i32 21
  %5 = bitcast i32* %4 to i8*
  %6 = load i8, i8* %5, align 8, !range !4
  %7 = icmp ne i8 %6, 0
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink21AudioBufferSourceNode9loopStartEv(%"class.blink::AudioBufferSourceNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 0, i32 0
  %3 = tail call dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"* %2) #8
  %4 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %3, i64 2
  %5 = bitcast %"class.blink::AudioHandler"* %4 to double*
  %6 = load double, double* %5, align 8
  ret double %6
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink21AudioBufferSourceNode7loopEndEv(%"class.blink::AudioBufferSourceNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 0, i32 0
  %3 = tail call dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"* %2) #8
  %4 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %3, i64 2, i32 1
  %5 = bitcast %"class.WTF::ThreadSafeRefCounted"* %4 to double*
  %6 = load double, double* %5, align 8
  ret double %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21AudioBufferSourceNode5startERNS_14ExceptionStateE(%"class.blink::AudioBufferSourceNode"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 0, i32 0
  %4 = tail call dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"* %3) #8
  %5 = bitcast %"class.blink::AudioHandler"* %4 to %"class.blink::AudioScheduledSourceHandler"*
  tail call void @_ZN5blink27AudioScheduledSourceHandler5StartEdRNS_14ExceptionStateE(%"class.blink::AudioScheduledSourceHandler"* %5, double 0.000000e+00, %"class.blink::ExceptionState"* dereferenceable(72) %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21AudioBufferSourceNode5startEdRNS_14ExceptionStateE(%"class.blink::AudioBufferSourceNode"*, double, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 0, i32 0
  %5 = tail call dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"* %4) #8
  %6 = bitcast %"class.blink::AudioHandler"* %5 to %"class.blink::AudioScheduledSourceHandler"*
  tail call void @_ZN5blink27AudioScheduledSourceHandler5StartEdRNS_14ExceptionStateE(%"class.blink::AudioScheduledSourceHandler"* %6, double %1, %"class.blink::ExceptionState"* dereferenceable(72) %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21AudioBufferSourceNode5startEddRNS_14ExceptionStateE(%"class.blink::AudioBufferSourceNode"*, double, double, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 0, i32 0
  %6 = tail call dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"* %5) #8
  %7 = bitcast %"class.blink::AudioHandler"* %6 to %"class.blink::AudioBufferSourceHandler"*
  %8 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %6, i64 1, i32 12
  %9 = bitcast %"class.WTF::Vector.358"* %8 to %"class.blink::SharedAudioBuffer"**
  %10 = load %"class.blink::SharedAudioBuffer"*, %"class.blink::SharedAudioBuffer"** %9, align 8
  %11 = icmp eq %"class.blink::SharedAudioBuffer"* %10, null
  br i1 %11, label %20, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = uitofp i32 %14 to double
  %16 = getelementptr inbounds %"class.blink::SharedAudioBuffer", %"class.blink::SharedAudioBuffer"* %10, i64 0, i32 0
  %17 = load float, float* %16, align 8
  %18 = fpext float %17 to double
  %19 = fdiv double %15, %18
  br label %20

20:                                               ; preds = %4, %12
  %21 = phi double [ %19, %12 ], [ 0.000000e+00, %4 ]
  tail call void @_ZN5blink24AudioBufferSourceHandler11StartSourceEdddbRNS_14ExceptionStateE(%"class.blink::AudioBufferSourceHandler"* %7, double %1, double %2, double %21, i1 zeroext false, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21AudioBufferSourceNode5startEdddRNS_14ExceptionStateE(%"class.blink::AudioBufferSourceNode"*, double, double, double, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 0, i32 0
  %7 = tail call dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"* %6) #8
  %8 = bitcast %"class.blink::AudioHandler"* %7 to %"class.blink::AudioBufferSourceHandler"*
  tail call void @_ZN5blink24AudioBufferSourceHandler11StartSourceEdddbRNS_14ExceptionStateE(%"class.blink::AudioBufferSourceHandler"* %8, double %1, double %2, double %3, i1 zeroext true, %"class.blink::ExceptionState"* dereferenceable(72) %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21AudioBufferSourceNode15ReportDidCreateEv(%"class.blink::AudioBufferSourceNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %3 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink16AudioGraphTracer18DidCreateAudioNodeEPNS_9AudioNodeE(%"class.blink::AudioGraphTracer"* %3, %"class.blink::AudioNode"* %4) #8
  %5 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %2, align 8
  %6 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %6, align 8
  tail call void @_ZN5blink16AudioGraphTracer19DidCreateAudioParamEPNS_10AudioParamE(%"class.blink::AudioGraphTracer"* %5, %"class.blink::AudioParam"* %7) #8
  %8 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %2, align 8
  %9 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %9, align 8
  tail call void @_ZN5blink16AudioGraphTracer19DidCreateAudioParamEPNS_10AudioParamE(%"class.blink::AudioGraphTracer"* %8, %"class.blink::AudioParam"* %10) #8
  ret void
}

declare void @_ZN5blink16AudioGraphTracer18DidCreateAudioNodeEPNS_9AudioNodeE(%"class.blink::AudioGraphTracer"*, %"class.blink::AudioNode"*) local_unnamed_addr #1

declare void @_ZN5blink16AudioGraphTracer19DidCreateAudioParamEPNS_10AudioParamE(%"class.blink::AudioGraphTracer"*, %"class.blink::AudioParam"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink21AudioBufferSourceNode15ReportDidCreateEv(%"class.blink::AudioBufferSourceNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 -1, i32 0, i32 0, i32 5
  %3 = getelementptr inbounds %class.scoped_refptr.283, %class.scoped_refptr.283* %2, i64 10
  %4 = bitcast %class.scoped_refptr.283* %3 to %"class.blink::AudioGraphTracer"**
  %5 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %4, align 8
  %6 = bitcast %class.scoped_refptr.283* %2 to %"class.blink::AudioNode"*
  tail call void @_ZN5blink16AudioGraphTracer18DidCreateAudioNodeEPNS_9AudioNodeE(%"class.blink::AudioGraphTracer"* %5, %"class.blink::AudioNode"* %6) #8
  %7 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %4, align 8
  %8 = getelementptr inbounds %class.scoped_refptr.283, %class.scoped_refptr.283* %2, i64 23
  %9 = bitcast %class.scoped_refptr.283* %8 to %"class.blink::AudioParam"**
  %10 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %9, align 8
  tail call void @_ZN5blink16AudioGraphTracer19DidCreateAudioParamEPNS_10AudioParamE(%"class.blink::AudioGraphTracer"* %7, %"class.blink::AudioParam"* %10) #8
  %11 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %4, align 8
  %12 = getelementptr inbounds %class.scoped_refptr.283, %class.scoped_refptr.283* %2, i64 22
  %13 = bitcast %class.scoped_refptr.283* %12 to %"class.blink::AudioParam"**
  %14 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %13, align 8
  tail call void @_ZN5blink16AudioGraphTracer19DidCreateAudioParamEPNS_10AudioParamE(%"class.blink::AudioGraphTracer"* %11, %"class.blink::AudioParam"* %14) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21AudioBufferSourceNode21ReportWillBeDestroyedEv(%"class.blink::AudioBufferSourceNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %3 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %4, align 8
  tail call void @_ZN5blink16AudioGraphTracer21WillDestroyAudioParamEPNS_10AudioParamE(%"class.blink::AudioGraphTracer"* %3, %"class.blink::AudioParam"* %5) #8
  %6 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %2, align 8
  %7 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %7, align 8
  tail call void @_ZN5blink16AudioGraphTracer21WillDestroyAudioParamEPNS_10AudioParamE(%"class.blink::AudioGraphTracer"* %6, %"class.blink::AudioParam"* %8) #8
  %9 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %2, align 8
  %10 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink16AudioGraphTracer20WillDestroyAudioNodeEPNS_9AudioNodeE(%"class.blink::AudioGraphTracer"* %9, %"class.blink::AudioNode"* %10) #8
  ret void
}

declare void @_ZN5blink16AudioGraphTracer21WillDestroyAudioParamEPNS_10AudioParamE(%"class.blink::AudioGraphTracer"*, %"class.blink::AudioParam"*) local_unnamed_addr #1

declare void @_ZN5blink16AudioGraphTracer20WillDestroyAudioNodeEPNS_9AudioNodeE(%"class.blink::AudioGraphTracer"*, %"class.blink::AudioNode"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink21AudioBufferSourceNode21ReportWillBeDestroyedEv(%"class.blink::AudioBufferSourceNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 -1, i32 0, i32 0, i32 5
  %3 = getelementptr inbounds %class.scoped_refptr.283, %class.scoped_refptr.283* %2, i64 10
  %4 = bitcast %class.scoped_refptr.283* %3 to %"class.blink::AudioGraphTracer"**
  %5 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %4, align 8
  %6 = getelementptr inbounds %class.scoped_refptr.283, %class.scoped_refptr.283* %2, i64 23
  %7 = bitcast %class.scoped_refptr.283* %6 to %"class.blink::AudioParam"**
  %8 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %7, align 8
  tail call void @_ZN5blink16AudioGraphTracer21WillDestroyAudioParamEPNS_10AudioParamE(%"class.blink::AudioGraphTracer"* %5, %"class.blink::AudioParam"* %8) #8
  %9 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %4, align 8
  %10 = getelementptr inbounds %class.scoped_refptr.283, %class.scoped_refptr.283* %2, i64 22
  %11 = bitcast %class.scoped_refptr.283* %10 to %"class.blink::AudioParam"**
  %12 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %11, align 8
  tail call void @_ZN5blink16AudioGraphTracer21WillDestroyAudioParamEPNS_10AudioParamE(%"class.blink::AudioGraphTracer"* %9, %"class.blink::AudioParam"* %12) #8
  %13 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %4, align 8
  %14 = bitcast %class.scoped_refptr.283* %2 to %"class.blink::AudioNode"*
  tail call void @_ZN5blink16AudioGraphTracer20WillDestroyAudioNodeEPNS_9AudioNodeE(%"class.blink::AudioGraphTracer"* %13, %"class.blink::AudioNode"* %14) #8
  ret void
}

declare void @_ZN5blink12AudioHandler7DisposeEv(%"class.blink::AudioHandler"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12AudioHandler22ProcessOnlyAudioParamsEj(%"class.blink::AudioHandler"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare i32 @_ZNK5blink12AudioHandler22NumberOfOutputChannelsEv(%"class.blink::AudioHandler"*) unnamed_addr #1

declare void @_ZN5blink12AudioHandler18ProcessIfNecessaryEj(%"class.blink::AudioHandler"*, i32) unnamed_addr #1

declare void @_ZN5blink12AudioHandler29CheckNumberOfChannelsForInputEPNS_14AudioNodeInputE(%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink27AudioScheduledSourceHandler22RequiresTailProcessingEv(%"class.blink::AudioScheduledSourceHandler"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK5blink27AudioScheduledSourceHandler8TailTimeEv(%"class.blink::AudioScheduledSourceHandler"*) unnamed_addr #0 comdat align 2 {
  ret double 0.000000e+00
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK5blink27AudioScheduledSourceHandler11LatencyTimeEv(%"class.blink::AudioScheduledSourceHandler"*) unnamed_addr #0 comdat align 2 {
  ret double 0.000000e+00
}

declare void @_ZN5blink12AudioHandler15SetChannelCountEjRNS_14ExceptionStateE(%"class.blink::AudioHandler"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare void @_ZN5blink12AudioHandler19SetChannelCountModeERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::AudioHandler"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare void @_ZN5blink12AudioHandler24SetChannelInterpretationERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::AudioHandler"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12AudioHandler24UpdatePullStatusIfNeededEv(%"class.blink::AudioHandler"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12AudioHandler10PullInputsEj(%"class.blink::AudioHandler"*, i32) unnamed_addr #1

declare void @_ZN5blink27AudioScheduledSourceHandler20FinishWithoutOnEndedEv(%"class.blink::AudioScheduledSourceHandler"*) unnamed_addr #1

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24AudioScheduledSourceNodeD2Ev(%"class.blink::AudioScheduledSourceNode"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioScheduledSourceNode", %"class.blink::AudioScheduledSourceNode"* %0, i64 0, i32 0
  tail call void @_ZN5blink9AudioNodeD2Ev(%"class.blink::AudioNode"* %2) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21AudioBufferSourceNodeD0Ev(%"class.blink::AudioBufferSourceNode"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink9AudioNodeD2Ev(%"class.blink::AudioNode"* %2) #8
  ret void
}

declare zeroext i1 @_ZNK5blink24AudioScheduledSourceNode18HasPendingActivityEv(%"class.blink::AudioScheduledSourceNode"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #8
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink21AudioBufferSourceNode18GetWrapperTypeInfoEv(%"class.blink::AudioBufferSourceNode"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink21AudioBufferSourceNode18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink9AudioNode13InterfaceNameEv(%"class.blink::AudioNode"*) unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink9AudioNode19GetExecutionContextEv(%"class.blink::AudioNode"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink11EventTarget6ToNodeEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink11EventTarget23RemoveAllEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.10, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.10, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn168_N5blink21AudioBufferSourceNodeD1Ev(%"class.blink::AudioBufferSourceNode"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i64 0
  %3 = bitcast i8* %2 to %"class.blink::AudioNode"*
  tail call void @_ZN5blink9AudioNodeD2Ev(%"class.blink::AudioNode"* %3) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn168_N5blink21AudioBufferSourceNodeD0Ev(%"class.blink::AudioBufferSourceNode"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioBufferSourceNode", %"class.blink::AudioBufferSourceNode"* %0, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i64 0
  %3 = bitcast i8* %2 to %"class.blink::AudioNode"*
  tail call void @_ZN5blink9AudioNodeD2Ev(%"class.blink::AudioNode"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_24AudioScheduledSourceNodeEE18IsContextDestroyedEv(%"class.blink::ActiveScriptWrappable.570"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable.570", %"class.blink::ActiveScriptWrappable.570"* %0, i64 -21
  %3 = bitcast %"class.blink::ActiveScriptWrappable.570"* %2 to %"class.blink::AudioNode"*
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink9AudioNode19GetExecutionContextEv(%"class.blink::AudioNode"* %3) #8
  %5 = tail call zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %4) #8
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_24AudioScheduledSourceNodeEE26DispatchHasPendingActivityEv(%"class.blink::ActiveScriptWrappable.570"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable.570", %"class.blink::ActiveScriptWrappable.570"* %0, i64 -21
  %3 = bitcast %"class.blink::ActiveScriptWrappable.570"* %2 to %"class.blink::AudioScheduledSourceNode"*
  %4 = tail call zeroext i1 @_ZNK5blink24AudioScheduledSourceNode18HasPendingActivityEv(%"class.blink::AudioScheduledSourceNode"* %3) #8
  ret i1 %4
}

; Function Attrs: nounwind
declare void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN5blink12AudioHandlerD2Ev(%"class.blink::AudioHandler"*) unnamed_addr #6

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"*) unnamed_addr #6

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF5Mutex7TryLockEv(%"class.WTF::Mutex"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::AudioChannel"* @_ZN3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.304"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.304", %"class.WTF::Vector.304"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.304", %"class.WTF::Vector.304"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %24, i64 %25
  ret %"class.blink::AudioChannel"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #7

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #3

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"*) local_unnamed_addr #1

declare void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"*) local_unnamed_addr #1

declare void @_ZNK5blink9AudioNode5TraceEPNS_7VisitorE(%"class.blink::AudioNode"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink9AudioNodeD2Ev(%"class.blink::AudioNode"*) unnamed_addr #6

; Function Attrs: nounwind
declare i8* @llvm.ptr.annotation.p0i8(i8*, i8*, i8*, i32) #8

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"*) unnamed_addr #6

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !4
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #8
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #8
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #8
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #8
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #8
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #8
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !3

22:                                               ; preds = %15
  %23 = bitcast %union.anon.745* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.745* %16 to %"class.WTF::Vector.751"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.751"* %30, i16* nonnull dereferenceable(2) %3) #8
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #8
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !3

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.746", %"class.WTF::Vector.746"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.746"* %41, i8* nonnull dereferenceable(1) %4) #8
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.751"*, i16* dereferenceable(2)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.751", %"class.WTF::Vector.751"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.751", %"class.WTF::Vector.751"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.751"* %0, i32 %5) #8
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.751"* %0, i32 %5) #8
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.751"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.751", %"class.WTF::Vector.751"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.18, i64 0, i64 0), i8* %15, i8* %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.751", %"class.WTF::Vector.751"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #8
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #8
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.751"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.751", %"class.WTF::Vector.751"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.751"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.751"* %0, i32 %27) #8
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.751"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.751", %"class.WTF::Vector.751"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.751", %"class.WTF::Vector.751"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.751"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.751", %"class.WTF::Vector.751"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.751", %"class.WTF::Vector.751"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.751", %"class.WTF::Vector.751"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.751"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.751", %"class.WTF::Vector.751"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #8
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.752"* %19, i16* nonnull %6) #8
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #8
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #8
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.751", %"class.WTF::Vector.751"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !2

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.751", %"class.WTF::Vector.751"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #8
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.751", %"class.WTF::Vector.751"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !2

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.751", %"class.WTF::Vector.751"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.752"* %53, i16* %48) #8
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.751"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.751", %"class.WTF::Vector.751"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.20, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.21, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.752"*, i16*) local_unnamed_addr #13 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #8
  ret void
}

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.746"*, i8* dereferenceable(1)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.746", %"class.WTF::Vector.746"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.746", %"class.WTF::Vector.746"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.746"* %0, i32 %5) #8
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.746"* %0, i32 %5) #8
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.746"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.746", %"class.WTF::Vector.746"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.18, i64 0, i64 0), i8* %15, i8* %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.746", %"class.WTF::Vector.746"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #8
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #8
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.746"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.746", %"class.WTF::Vector.746"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.746"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.746"* %0, i32 %27) #8
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.746"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.746", %"class.WTF::Vector.746"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.746", %"class.WTF::Vector.746"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.746"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.746", %"class.WTF::Vector.746"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.746", %"class.WTF::Vector.746"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.746", %"class.WTF::Vector.746"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.746"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.746", %"class.WTF::Vector.746"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #8
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.747"* %18, i8* nonnull %6) #8
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #8
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #8
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.746", %"class.WTF::Vector.746"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !2

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.746", %"class.WTF::Vector.746"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #8
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.746", %"class.WTF::Vector.746"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !2

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.746", %"class.WTF::Vector.746"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.747"* %46, i8* %42) #8
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.746"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.746", %"class.WTF::Vector.746"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.20, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.21, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #8
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.747"*, i8*) local_unnamed_addr #13 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #8
  ret void
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::ArrayBufferContents"* @_ZNK3WTF6VectorIN5blink19ArrayBufferContentsELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.372"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.372", %"class.WTF::Vector.372"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.372", %"class.WTF::Vector.372"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %24, i64 %25
  ret %"class.blink::ArrayBufferContents"* %26
}

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages12FormatNumberIdEEN3WTF6StringET_(double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.5"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.5"*)) #8
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #8
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.27, i64 0, i64 0), i8* %40, i8* %41) #8
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #8
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #8
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #8
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #8
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.5"*) local_unnamed_addr #1

declare void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10AudioParamEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AudioParam"*
  tail call void @_ZNK5blink10AudioParam5TraceEPNS_7VisitorE(%"class.blink::AudioParam"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare void @_ZNK5blink10AudioParam5TraceEPNS_7VisitorE(%"class.blink::AudioParam"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11AudioBufferEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 24
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast i8* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8** %7) #8
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %0, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEEN3WTF12VectorTraitsIS7_EEEEE5TraceEPNS_7VisitorEPKv) #8
  br label %18

18:                                               ; preds = %2, %12
  %19 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %19, %"class.blink::Visitor"* %0) #8
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEEN3WTF12VectorTraitsIS7_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.568"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.568", %"class.blink::Member.568"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.568"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEE5TraceEPNS_7VisitorEPKv) #8
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 32
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv) #8
  br label %13

13:                                               ; preds = %2, %7
  %14 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %14, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone }
attributes #8 = { nounwind }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { builtin nounwind }
attributes #16 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
