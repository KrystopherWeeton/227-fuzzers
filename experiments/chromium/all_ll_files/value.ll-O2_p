; ModuleID = '../../media/learning/common/value.cc'
source_filename = "../../media/learning/common/value.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::learning::Value" = type { double }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

@_ZN5media8learning5ValueC1Ev = hidden unnamed_addr alias void (%"class.media::learning::Value"*), void (%"class.media::learning::Value"*)* @_ZN5media8learning5ValueC2Ev
@_ZN5media8learning5ValueC1EPKc = hidden unnamed_addr alias void (%"class.media::learning::Value"*, i8*), void (%"class.media::learning::Value"*, i8*)* @_ZN5media8learning5ValueC2EPKc
@_ZN5media8learning5ValueC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.media::learning::Value"*, %"class.std::__1::basic_string"*), void (%"class.media::learning::Value"*, %"class.std::__1::basic_string"*)* @_ZN5media8learning5ValueC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE
@_ZN5media8learning5ValueC1Eb = hidden unnamed_addr alias void (%"class.media::learning::Value"*, i1), void (%"class.media::learning::Value"*, i1)* @_ZN5media8learning5ValueC2Eb
@_ZN5media8learning5ValueC1ERKS1_ = hidden unnamed_addr alias void (%"class.media::learning::Value"*, %"class.media::learning::Value"*), void (%"class.media::learning::Value"*, %"class.media::learning::Value"*)* @_ZN5media8learning5ValueC2ERKS1_
@_ZN5media8learning5ValueC1EOS1_ = hidden unnamed_addr alias void (%"class.media::learning::Value"*, %"class.media::learning::Value"*), void (%"class.media::learning::Value"*, %"class.media::learning::Value"*)* @_ZN5media8learning5ValueC2EOS1_

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media8learning5ValueC2Ev(%"class.media::learning::Value"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %0, i64 0, i32 0
  store double 0.000000e+00, double* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media8learning5ValueC2EPKc(%"class.media::learning::Value"* nocapture, i8*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %0, i64 0, i32 0
  store double 0.000000e+00, double* %3, align 8
  %4 = icmp eq i8* %1, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %2
  %6 = tail call i64 @strlen(i8* nonnull %1) #6
  %7 = tail call i32 @_ZN4base14PersistentHashEPKvm(i8* nonnull %1, i64 %6) #7
  %8 = uitofp i32 %7 to double
  store double %8, double* %3, align 8
  br label %9

9:                                                ; preds = %2, %5
  ret void
}

declare i32 @_ZN4base14PersistentHashEPKvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media8learning5ValueC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.media::learning::Value"* nocapture, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %0, i64 0, i32 0
  %4 = tail call i32 @_ZN4base14PersistentHashERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %1) #7
  %5 = uitofp i32 %4 to double
  store double %5, double* %3, align 8
  ret void
}

declare i32 @_ZN4base14PersistentHashERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media8learning5ValueC2Eb(%"class.media::learning::Value"* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %0, i64 0, i32 0
  %4 = uitofp i1 %1 to double
  store double %4, double* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5media8learning5ValueC2ERKS1_(%"class.media::learning::Value"* nocapture, %"class.media::learning::Value"* nocapture readonly dereferenceable(8)) unnamed_addr #4 align 2 {
  %3 = bitcast %"class.media::learning::Value"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.media::learning::Value"* %0 to i64*
  store i64 %4, i64* %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5media8learning5ValueC2EOS1_(%"class.media::learning::Value"* nocapture, %"class.media::learning::Value"* nocapture readonly dereferenceable(8)) unnamed_addr #4 align 2 {
  %3 = bitcast %"class.media::learning::Value"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.media::learning::Value"* %0 to i64*
  store i64 %4, i64* %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(8) %"class.media::learning::Value"* @_ZN5media8learning5ValueaSERKS1_(%"class.media::learning::Value"* returned, %"class.media::learning::Value"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %3 = bitcast %"class.media::learning::Value"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.media::learning::Value"* %0 to i64*
  store i64 %4, i64* %5, align 8
  ret %"class.media::learning::Value"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(8) %"class.media::learning::Value"* @_ZN5media8learning5ValueaSEOS1_(%"class.media::learning::Value"* returned, %"class.media::learning::Value"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %3 = bitcast %"class.media::learning::Value"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.media::learning::Value"* %0 to i64*
  store i64 %4, i64* %5, align 8
  ret %"class.media::learning::Value"* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5media8learning5ValueeqERKS1_(%"class.media::learning::Value"* nocapture readonly, %"class.media::learning::Value"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %0, i64 0, i32 0
  %4 = load double, double* %3, align 8
  %5 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %1, i64 0, i32 0
  %6 = load double, double* %5, align 8
  %7 = fcmp oeq double %4, %6
  ret i1 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5media8learning5ValueneERKS1_(%"class.media::learning::Value"* nocapture readonly, %"class.media::learning::Value"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %0, i64 0, i32 0
  %4 = load double, double* %3, align 8
  %5 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %1, i64 0, i32 0
  %6 = load double, double* %5, align 8
  %7 = fcmp une double %4, %6
  ret i1 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5media8learning5ValueltERKS1_(%"class.media::learning::Value"* nocapture readonly, %"class.media::learning::Value"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %0, i64 0, i32 0
  %4 = load double, double* %3, align 8
  %5 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %1, i64 0, i32 0
  %6 = load double, double* %5, align 8
  %7 = fcmp olt double %4, %6
  ret i1 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5media8learning5ValuegtERKS1_(%"class.media::learning::Value"* nocapture readonly, %"class.media::learning::Value"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %0, i64 0, i32 0
  %4 = load double, double* %3, align 8
  %5 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %1, i64 0, i32 0
  %6 = load double, double* %5, align 8
  %7 = fcmp ogt double %4, %6
  ret i1 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5media8learning5ValuegeERKS1_(%"class.media::learning::Value"* nocapture readonly, %"class.media::learning::Value"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %0, i64 0, i32 0
  %4 = load double, double* %3, align 8
  %5 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %1, i64 0, i32 0
  %6 = load double, double* %5, align 8
  %7 = fcmp oge double %4, %6
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5media8learninglsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5ValueE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.media::learning::Value"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %1, i64 0, i32 0
  %4 = load double, double* %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(%"class.std::__1::basic_ostream"* %0, double %4) #7
  ret %"class.std::__1::basic_ostream"* %5
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(%"class.std::__1::basic_ostream"*, double) local_unnamed_addr #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
