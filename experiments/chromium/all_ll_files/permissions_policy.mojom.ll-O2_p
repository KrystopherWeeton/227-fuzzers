; ModuleID = 'gen/third_party/blink/public/mojom/permissions_policy/permissions_policy.mojom.cc'
source_filename = "gen/third_party/blink/public/mojom/permissions_policy/permissions_policy.mojom.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector", i8, i8, [6 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.2" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.url::Origin"* }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.7" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedArray" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector.12", %"class.std::__1::vector.20", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.mojo::ScopedHandleBase.14"*, %"class.mojo::ScopedHandleBase.14"*, %"class.std::__1::__compressed_pair.15" }
%"class.mojo::ScopedHandleBase.14" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.mojo::ScopedHandleBase.14"* }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.22" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.27 }
%class.scoped_refptr.27 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.31, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.33", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.29 }
%class.scoped_refptr.29 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.30", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.30" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.31 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.32" }>
%"class.base::RefCountedThreadSafe.32" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl.36" }
%"struct.std::__1::__cxx_atomic_impl.36" = type { %"struct.std::__1::__cxx_atomic_base_impl.37" }
%"struct.std::__1::__cxx_atomic_base_impl.37" = type { i32 }
%"class.blink::mojom::internal::ParsedPermissionsPolicyDeclaration_Data" = type { %"struct.mojo::internal::StructHeader", i32, i8, [3 x i8], %"struct.mojo::internal::Pointer" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* }
%"class.mojo::internal::Array_Data" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }
%"class.url::mojom::internal::Origin_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.45", %"struct.mojo::internal::Pointer.45", i16, [6 x i8], %"struct.mojo::internal::Pointer.46" }
%"struct.mojo::internal::Pointer.45" = type { i64 }
%"struct.mojo::internal::Pointer.46" = type { i64 }

$_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN3url5mojom14OriginDataViewEEENSt3__16vectorINS3_6OriginENS7_9allocatorIS9_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISC_EESC_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal11Origin_DataEEEEEPSC_PNS_7MessageE = comdat any

@.str = private unnamed_addr constant [8 x i8] c"feature\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"allowed_origins\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"matches_all_origins\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"matches_opaque_src\00", align 1

@_ZN5blink5mojom34ParsedPermissionsPolicyDeclarationC1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::ParsedPermissionsPolicyDeclaration"*), void (%"class.blink::mojom::ParsedPermissionsPolicyDeclaration"*)* @_ZN5blink5mojom34ParsedPermissionsPolicyDeclarationC2Ev
@_ZN5blink5mojom34ParsedPermissionsPolicyDeclarationC1ENS0_24PermissionsPolicyFeatureENSt3__16vectorIN3url6OriginENS3_9allocatorIS6_EEEEbb = hidden unnamed_addr alias void (%"class.blink::mojom::ParsedPermissionsPolicyDeclaration"*, i32, %"class.std::__1::vector"*, i1, i1), void (%"class.blink::mojom::ParsedPermissionsPolicyDeclaration"*, i32, %"class.std::__1::vector"*, i1, i1)* @_ZN5blink5mojom34ParsedPermissionsPolicyDeclarationC2ENS0_24PermissionsPolicyFeatureENSt3__16vectorIN3url6OriginENS3_9allocatorIS6_EEEEbb
@_ZN5blink5mojom34ParsedPermissionsPolicyDeclarationD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::ParsedPermissionsPolicyDeclaration"*), void (%"class.blink::mojom::ParsedPermissionsPolicyDeclaration"*)* @_ZN5blink5mojom34ParsedPermissionsPolicyDeclarationD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom34ParsedPermissionsPolicyDeclarationC2Ev(%"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::mojom::ParsedPermissionsPolicyDeclaration", %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.blink::mojom::ParsedPermissionsPolicyDeclaration", %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 26, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom34ParsedPermissionsPolicyDeclarationC2ENS0_24PermissionsPolicyFeatureENSt3__16vectorIN3url6OriginENS3_9allocatorIS6_EEEEbb(%"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* nocapture, i32, %"class.std::__1::vector"* nocapture, i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %6 = zext i1 %3 to i8
  %7 = zext i1 %4 to i8
  %8 = getelementptr inbounds %"class.blink::mojom::ParsedPermissionsPolicyDeclaration", %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* %0, i64 0, i32 0
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::mojom::ParsedPermissionsPolicyDeclaration", %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* %0, i64 0, i32 2
  %10 = bitcast %"class.std::__1::vector"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #6
  %11 = bitcast %"class.std::__1::vector"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %9 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %15 = bitcast %"class.url::Origin"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.blink::mojom::ParsedPermissionsPolicyDeclaration", %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* %0, i64 0, i32 2, i32 0, i32 1
  %18 = bitcast %"class.url::Origin"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.url::Origin"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.blink::mojom::ParsedPermissionsPolicyDeclaration", %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"class.url::Origin"** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast %"class.std::__1::vector"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #6
  %25 = getelementptr inbounds %"class.blink::mojom::ParsedPermissionsPolicyDeclaration", %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* %0, i64 0, i32 3
  store i8 %6, i8* %25, align 8
  %26 = getelementptr inbounds %"class.blink::mojom::ParsedPermissionsPolicyDeclaration", %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* %0, i64 0, i32 4
  store i8 %7, i8* %26, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom34ParsedPermissionsPolicyDeclarationD2Ev(%"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::mojom::ParsedPermissionsPolicyDeclaration", %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.url::Origin"*, %"class.url::Origin"** %3, align 8
  %5 = icmp eq %"class.url::Origin"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.url::Origin"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::mojom::ParsedPermissionsPolicyDeclaration", %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = load %"class.url::Origin"*, %"class.url::Origin"** %8, align 8
  %10 = icmp eq %"class.url::Origin"* %9, %4
  br i1 %10, label %18, label %11

11:                                               ; preds = %6, %11
  %12 = phi %"class.url::Origin"* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %12, i64 -1
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %13) #6
  %14 = icmp eq %"class.url::Origin"* %13, %4
  br i1 %14, label %15, label %11

15:                                               ; preds = %11
  %16 = bitcast %"class.std::__1::vector"* %2 to i8**
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %15, %6
  %19 = phi i8* [ %17, %15 ], [ %7, %6 ]
  store %"class.url::Origin"* %4, %"class.url::Origin"** %8, align 8
  tail call void @_ZdlPv(i8* %19) #7
  br label %20

20:                                               ; preds = %1, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5mojom34ParsedPermissionsPolicyDeclaration14WriteIntoTraceEN8perfetto11TracedValueE(%"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* nocapture readonly, %"class.perfetto::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.perfetto::TracedArray", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.perfetto::TracedValue", align 8
  %9 = alloca %"class.perfetto::TracedValue", align 8
  %10 = alloca %"class.perfetto::TracedDictionary", align 8
  %11 = alloca %"class.perfetto::TracedValue", align 8
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.perfetto::TracedValue", align 8
  %15 = bitcast %"class.perfetto::TracedDictionary"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #6
  %16 = bitcast %"class.perfetto::TracedDictionary"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %10, %"class.perfetto::TracedValue"* %1) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %11, %"class.perfetto::TracedDictionary"* nonnull %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)) #6
  %17 = getelementptr inbounds %"class.blink::mojom::ParsedPermissionsPolicyDeclaration", %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* %0, i64 0, i32 0
  %18 = bitcast %"class.perfetto::TracedValue"* %11 to i8*
  %19 = bitcast %"class.perfetto::TracedValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* nonnull align 8 %18, i64 16, i1 false) #6
  %20 = load i32, i32* %17, align 4
  call void @_ZN8perfetto17TraceFormatTraitsIN5blink5mojom24PermissionsPolicyFeatureEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"* nonnull %8, i32 %20) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %12, %"class.perfetto::TracedDictionary"* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)) #6
  %21 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  %22 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %21, i64 16, i1 false) #6
  %23 = bitcast %"class.perfetto::TracedArray"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false) #6
  call void @_ZNO8perfetto11TracedValue10WriteArrayEv(%"class.perfetto::TracedArray"* nonnull sret %6, %"class.perfetto::TracedValue"* nonnull %7) #6
  %24 = getelementptr inbounds %"class.blink::mojom::ParsedPermissionsPolicyDeclaration", %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* %0, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.url::Origin"*, %"class.url::Origin"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::mojom::ParsedPermissionsPolicyDeclaration", %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* %0, i64 0, i32 2, i32 0, i32 1
  %27 = load %"class.url::Origin"*, %"class.url::Origin"** %26, align 8
  %28 = icmp eq %"class.url::Origin"* %25, %27
  br i1 %28, label %36, label %29

29:                                               ; preds = %2
  %30 = bitcast %"class.perfetto::TracedValue"* %5 to i8*
  %31 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  br label %32

32:                                               ; preds = %32, %29
  %33 = phi %"class.url::Origin"* [ %25, %29 ], [ %34, %32 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #6
  call void @_ZN8perfetto11TracedArray10AppendItemEv(%"class.perfetto::TracedValue"* nonnull sret %5, %"class.perfetto::TracedArray"* nonnull %6) #6
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* nonnull align 8 %30, i64 16, i1 false) #6
  call void @_ZNK3url6Origin14WriteIntoTraceEN8perfetto11TracedValueE(%"class.url::Origin"* %33, %"class.perfetto::TracedValue"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #6
  %34 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %33, i64 1
  %35 = icmp eq %"class.url::Origin"* %34, %27
  br i1 %35, label %36, label %32

36:                                               ; preds = %32, %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::TracedDictionary"* nonnull %10, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0)) #6
  %37 = getelementptr inbounds %"class.blink::mojom::ParsedPermissionsPolicyDeclaration", %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* %0, i64 0, i32 3
  %38 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  %39 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %38, i64 16, i1 false) #6
  %40 = load i8, i8* %37, align 1, !range !2
  %41 = icmp ne i8 %40, 0
  call void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"* nonnull %3, i1 zeroext %41) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %14, %"class.perfetto::TracedDictionary"* nonnull %10, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0)) #6
  %42 = getelementptr inbounds %"class.blink::mojom::ParsedPermissionsPolicyDeclaration", %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* %0, i64 0, i32 4
  %43 = bitcast %"class.perfetto::TracedValue"* %14 to i8*
  %44 = bitcast %"class.perfetto::TracedValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* nonnull align 8 %43, i64 16, i1 false) #6
  %45 = load i8, i8* %42, align 1, !range !2
  %46 = icmp ne i8 %45, 0
  call void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"* nonnull %9, i1 zeroext %46) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #2

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink5mojom34ParsedPermissionsPolicyDeclaration8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN5blink5mojom8internal39ParsedPermissionsPolicyDeclaration_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %0, %"class.mojo::internal::ValidationContext"* %1) #6
  ret i1 %3
}

declare zeroext i1 @_ZN5blink5mojom8internal39ParsedPermissionsPolicyDeclaration_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom42ParsedPermissionsPolicyDeclarationDataViewENS_9StructPtrINS2_34ParsedPermissionsPolicyDeclarationEEEE4ReadES3_PS6_(%"class.blink::mojom::internal::ParsedPermissionsPolicyDeclaration_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 40) #7, !noalias !3
  %5 = bitcast i8* %4 to i32*
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 26, i1 false) #6, !noalias !3
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.blink::mojom::internal::ParsedPermissionsPolicyDeclaration_Data", %"class.blink::mojom::internal::ParsedPermissionsPolicyDeclaration_Data"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 1
  store i32 %9, i32* %5, align 4
  %10 = getelementptr inbounds %"class.blink::mojom::internal::ParsedPermissionsPolicyDeclaration_Data", %"class.blink::mojom::internal::ParsedPermissionsPolicyDeclaration_Data"* %0, i64 0, i32 4
  %11 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %10, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %3
  %15 = getelementptr inbounds i8, i8* %4, i64 16
  %16 = bitcast i8* %15 to %"class.url::Origin"**
  store %"class.url::Origin"* null, %"class.url::Origin"** %16, align 8
  br label %23

17:                                               ; preds = %3
  %18 = bitcast i8* %6 to %"class.std::__1::vector"*
  %19 = bitcast %"struct.mojo::internal::Pointer"* %10 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 %12
  %21 = bitcast i8* %20 to %"class.mojo::internal::Array_Data"*
  %22 = tail call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN3url5mojom14OriginDataViewEEENSt3__16vectorINS3_6OriginENS7_9allocatorIS9_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISC_EESC_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal11Origin_DataEEEEEPSC_PNS_7MessageE(%"class.mojo::internal::Array_Data"* nonnull %21, %"class.std::__1::vector"* %18, %"class.mojo::Message"* %1) #6
  br i1 %22, label %23, label %31

23:                                               ; preds = %17, %14
  %24 = getelementptr inbounds %"class.blink::mojom::internal::ParsedPermissionsPolicyDeclaration_Data", %"class.blink::mojom::internal::ParsedPermissionsPolicyDeclaration_Data"* %0, i64 0, i32 2
  %25 = load i8, i8* %24, align 1
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds i8, i8* %4, i64 32
  store i8 %26, i8* %27, align 8
  %28 = getelementptr inbounds i8, i8* %4, i64 33
  %29 = lshr i8 %25, 1
  %30 = and i8 %29, 1
  store i8 %30, i8* %28, align 1
  br label %31

31:                                               ; preds = %17, %23
  %32 = phi i1 [ true, %23 ], [ false, %17 ]
  %33 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"*, %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"** %33, align 8
  store %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* null, %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"** %33, align 8
  %35 = icmp eq %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %31
  %37 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  store i64 %7, i64* %37, align 8
  br label %83

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.blink::mojom::ParsedPermissionsPolicyDeclaration", %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* %34, i64 0, i32 2
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.url::Origin"*, %"class.url::Origin"** %40, align 8
  %42 = icmp eq %"class.url::Origin"* %41, null
  br i1 %42, label %57, label %43

43:                                               ; preds = %38
  %44 = bitcast %"class.url::Origin"* %41 to i8*
  %45 = getelementptr inbounds %"class.blink::mojom::ParsedPermissionsPolicyDeclaration", %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* %34, i64 0, i32 2, i32 0, i32 1
  %46 = load %"class.url::Origin"*, %"class.url::Origin"** %45, align 8
  %47 = icmp eq %"class.url::Origin"* %46, %41
  br i1 %47, label %55, label %48

48:                                               ; preds = %43, %48
  %49 = phi %"class.url::Origin"* [ %50, %48 ], [ %46, %43 ]
  %50 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %49, i64 -1
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %50) #6
  %51 = icmp eq %"class.url::Origin"* %50, %41
  br i1 %51, label %52, label %48

52:                                               ; preds = %48
  %53 = bitcast %"class.std::__1::vector"* %39 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %52, %43
  %56 = phi i8* [ %54, %52 ], [ %44, %43 ]
  store %"class.url::Origin"* %41, %"class.url::Origin"** %45, align 8
  tail call void @_ZdlPv(i8* %56) #7
  br label %57

57:                                               ; preds = %38, %55
  %58 = bitcast %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* %34 to i8*
  tail call void @_ZdlPv(i8* %58) #7
  %59 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %60 = load %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"*, %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"** %33, align 8
  store i64 %7, i64* %59, align 8
  %61 = icmp eq %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* %60, null
  br i1 %61, label %83, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::mojom::ParsedPermissionsPolicyDeclaration", %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* %60, i64 0, i32 2
  %64 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %63, i64 0, i32 0, i32 0
  %65 = load %"class.url::Origin"*, %"class.url::Origin"** %64, align 8
  %66 = icmp eq %"class.url::Origin"* %65, null
  br i1 %66, label %81, label %67

67:                                               ; preds = %62
  %68 = bitcast %"class.url::Origin"* %65 to i8*
  %69 = getelementptr inbounds %"class.blink::mojom::ParsedPermissionsPolicyDeclaration", %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* %60, i64 0, i32 2, i32 0, i32 1
  %70 = load %"class.url::Origin"*, %"class.url::Origin"** %69, align 8
  %71 = icmp eq %"class.url::Origin"* %70, %65
  br i1 %71, label %79, label %72

72:                                               ; preds = %67, %72
  %73 = phi %"class.url::Origin"* [ %74, %72 ], [ %70, %67 ]
  %74 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %73, i64 -1
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %74) #6
  %75 = icmp eq %"class.url::Origin"* %74, %65
  br i1 %75, label %76, label %72

76:                                               ; preds = %72
  %77 = bitcast %"class.std::__1::vector"* %63 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %67
  %80 = phi i8* [ %78, %76 ], [ %68, %67 ]
  store %"class.url::Origin"* %65, %"class.url::Origin"** %69, align 8
  tail call void @_ZdlPv(i8* %80) #7
  br label %81

81:                                               ; preds = %79, %62
  %82 = bitcast %"class.blink::mojom::ParsedPermissionsPolicyDeclaration"* %60 to i8*
  tail call void @_ZdlPv(i8* %82) #7
  br label %83

83:                                               ; preds = %36, %57, %81
  ret i1 %32
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN8perfetto17TraceFormatTraitsIN5blink5mojom24PermissionsPolicyFeatureEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZNO8perfetto11TracedValue10WriteArrayEv(%"class.perfetto::TracedArray"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #2

declare void @_ZN8perfetto11TracedArray10AppendItemEv(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedArray"*) local_unnamed_addr #2

declare void @_ZNK3url6Origin14WriteIntoTraceEN8perfetto11TracedValueE(%"class.url::Origin"*, %"class.perfetto::TracedValue"*) local_unnamed_addr #2

declare void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN3url5mojom14OriginDataViewEEENSt3__16vectorINS3_6OriginENS7_9allocatorIS9_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISC_EESC_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal11Origin_DataEEEEEPSC_PNS_7MessageE(%"class.mojo::internal::Array_Data"*, %"class.std::__1::vector"*, %"class.mojo::Message"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 1
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.url::Origin"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 80
  %14 = icmp eq i64 %13, %6
  br i1 %14, label %49, label %15

15:                                               ; preds = %3
  %16 = icmp eq i32 %5, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %15
  %18 = mul nuw nsw i64 %6, 80
  %19 = tail call i8* @_Znwm(i64 %18) #7
  %20 = bitcast i8* %19 to %"class.url::Origin"*
  %21 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %20, i64 %6
  %22 = ptrtoint i8* %19 to i64
  br label %23

23:                                               ; preds = %23, %17
  %24 = phi %"class.url::Origin"* [ %25, %23 ], [ %20, %17 ]
  tail call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %24) #6
  %25 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %24, i64 1
  %26 = icmp eq %"class.url::Origin"* %25, %21
  br i1 %26, label %27, label %23

27:                                               ; preds = %23
  %28 = ptrtoint %"class.url::Origin"* %21 to i64
  %29 = load i64, i64* %10, align 8
  %30 = load i64, i64* %8, align 8
  br label %31

31:                                               ; preds = %15, %27
  %32 = phi i64 [ %28, %27 ], [ 0, %15 ]
  %33 = phi i64 [ %30, %27 ], [ %9, %15 ]
  %34 = phi i64 [ %22, %27 ], [ 0, %15 ]
  %35 = phi i64 [ %29, %27 ], [ %11, %15 ]
  store i64 %34, i64* %10, align 8
  store i64 %32, i64* %8, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %"class.url::Origin"** %36 to i64*
  store i64 %32, i64* %37, align 8
  %38 = inttoptr i64 %35 to %"class.url::Origin"*
  %39 = icmp eq i64 %35, 0
  %40 = inttoptr i64 %33 to %"class.url::Origin"*
  br i1 %39, label %49, label %41

41:                                               ; preds = %31
  %42 = icmp eq %"class.url::Origin"* %40, %38
  br i1 %42, label %47, label %43

43:                                               ; preds = %41, %43
  %44 = phi %"class.url::Origin"* [ %45, %43 ], [ %40, %41 ]
  %45 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %44, i64 -1
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %45) #6
  %46 = icmp eq %"class.url::Origin"* %45, %38
  br i1 %46, label %47, label %43

47:                                               ; preds = %43, %41
  %48 = inttoptr i64 %35 to i8*
  tail call void @_ZdlPv(i8* %48) #7
  br label %49

49:                                               ; preds = %3, %47, %31
  %50 = load i32, i32* %4, align 1
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %78, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %0, i64 1
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  br label %55

55:                                               ; preds = %52, %74
  %56 = phi i32 [ %50, %52 ], [ %75, %74 ]
  %57 = phi i64 [ 0, %52 ], [ %64, %74 ]
  %58 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %53, i64 %57
  %59 = bitcast %"class.mojo::internal::Array_Data"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, 0
  %62 = bitcast %"class.mojo::internal::Array_Data"* %58 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 %60
  %64 = add nuw nsw i64 %57, 1
  %65 = icmp eq i8* %63, null
  %66 = or i1 %61, %65
  br i1 %66, label %74, label %67

67:                                               ; preds = %55
  %68 = bitcast i8* %63 to %"class.url::mojom::internal::Origin_Data"*
  %69 = load %"class.url::Origin"*, %"class.url::Origin"** %54, align 8
  %70 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %69, i64 %57
  %71 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN3url5mojom14OriginDataViewENS1_6OriginEE4ReadES3_PS4_(%"class.url::mojom::internal::Origin_Data"* nonnull %68, %"class.mojo::Message"* %2, %"class.url::Origin"* %70) #6
  br i1 %71, label %72, label %78

72:                                               ; preds = %67
  %73 = load i32, i32* %4, align 1
  br label %74

74:                                               ; preds = %72, %55
  %75 = phi i32 [ %73, %72 ], [ %56, %55 ]
  %76 = zext i32 %75 to i64
  %77 = icmp ult i64 %64, %76
  br i1 %77, label %55, label %78

78:                                               ; preds = %74, %67, %49
  %79 = phi i1 [ true, %49 ], [ false, %67 ], [ true, %74 ]
  ret i1 %79
}

declare void @_ZN3url6OriginC1Ev(%"class.url::Origin"*) unnamed_addr #2

declare zeroext i1 @_ZN4mojo12StructTraitsIN3url5mojom14OriginDataViewENS1_6OriginEE4ReadES3_PS4_(%"class.url::mojom::internal::Origin_Data"*, %"class.mojo::Message"*, %"class.url::Origin"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink5mojom34ParsedPermissionsPolicyDeclaration3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZN5blink5mojom34ParsedPermissionsPolicyDeclaration3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
