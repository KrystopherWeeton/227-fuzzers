; ModuleID = '../../third_party/blink/renderer/platform/graphics/gpu/xr_webgl_drawing_buffer.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/gpu/xr_webgl_drawing_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer" = type { %"class.base::RefCountedThreadSafe", %"class.base::PlatformThreadRef", %"class.base::WeakPtr", %"class.blink::IntSize", i32, %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", %"struct.gpu::SyncToken" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::PlatformThreadRef" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.1", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.1" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.blink::XRWebGLDrawingBuffer" = type { %"class.WTF::RefCounted", %class.scoped_refptr.7, i32, i32, i32, %class.scoped_refptr.60, %class.scoped_refptr.60, i32, %"class.blink::IntSize", i32, i8, i8, i8, %"class.WTF::Deque.61", i8, i8, i8, i8, i32, i32, i32, %"class.base::WeakPtrFactory.66" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::DrawingBuffer"* }
%class.scoped_refptr.60 = type { %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* }
%"class.WTF::Deque.61" = type { %"class.WTF::Deque<scoped_refptr<blink::XRWebGLDrawingBuffer::ColorBuffer>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<scoped_refptr<blink::XRWebGLDrawingBuffer::ColorBuffer>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.64" }
%"class.WTF::VectorBuffer.64" = type { %"class.WTF::VectorBufferBase.65" }
%"class.WTF::VectorBufferBase.65" = type { %class.scoped_refptr.60*, i32, i32 }
%"class.base::WeakPtrFactory.66" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.27 }
%class.scoped_refptr.27 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::DrawingBuffer" = type { %"class.cc::TextureLayerClient", %"class.WTF::RefCounted.8", %"class.WTF::Vector", %"class.blink::DrawingBuffer::Client"*, i32, i32, %"class.std::__1::unique_ptr", %"class.gpu::gles2::GLES2Interface"*, %"class.std::__1::unique_ptr.31", %"class.blink::IntSize", i8, i8, i8, i8, i8, %"struct.blink::Platform::GraphicsInfo", i8, i8, i32, %"class.blink::DrawingBuffer::ScopedStateRestorer"*, i32, i32, i32, i32, %"struct.gpu::Mailbox", i32, %class.scoped_refptr.45, %class.scoped_refptr.45, i8, i8, i32, i8, i8, %"class.gfx::ColorSpace", i32, i8, i32, i32, i32, i8, i8, i8, i32, %class.scoped_refptr.54, %"class.WTF::Deque", i32, i8, i32, i32, %"class.base::WeakPtrFactory.59" }
%"class.cc::TextureLayerClient" = type { i32 (...)** }
%"class.WTF::RefCounted.8" = type { %"class.base::RefCounted.9" }
%"class.base::RefCounted.9" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::DrawingBuffer::RegisteredBitmap"*, i32, i32 }
%"struct.blink::DrawingBuffer::RegisteredBitmap" = type { %class.scoped_refptr.10, %"class.cc::SharedBitmapIdRegistration" }
%class.scoped_refptr.10 = type { %"class.cc::CrossThreadSharedBitmap"* }
%"class.cc::CrossThreadSharedBitmap" = type <{ %"class.base::RefCountedThreadSafe.11", %"struct.gpu::Mailbox", [4 x i8], %"class.base::ReadOnlySharedMemoryRegion", %"class.base::WritableSharedMemoryMapping", %"class.gfx::Size", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.11" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::ReadOnlySharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.gfx::Size" = type { i32, i32 }
%"class.cc::SharedBitmapIdRegistration" = type { %"class.base::WeakPtr.12", %"struct.gpu::Mailbox" }
%"class.base::WeakPtr.12" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::DrawingBuffer::Client" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::WebGraphicsContext3DProviderWrapper"* }
%"class.blink::WebGraphicsContext3DProviderWrapper" = type { %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.18", %"class.base::ObserverList", %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::GraphicsContext3DUtils"* }
%"class.blink::GraphicsContext3DUtils" = type { %"class.base::WeakPtr.16" }
%"class.base::WeakPtr.16" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::WebGraphicsContext3DProvider"* }
%"class.blink::WebGraphicsContext3DProvider" = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.24" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.gpu::gles2::GLES2Interface" = type { %"class.gpu::InterfaceBase" }
%"class.gpu::InterfaceBase" = type { i32 (...)** }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::Extensions3DUtil"* }
%"class.blink::Extensions3DUtil" = type <{ %"class.gpu::gles2::GLES2Interface"*, %"class.WTF::HashSet", %"class.WTF::HashSet", i8, [7 x i8] }>
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr.36 }
%class.scoped_refptr.36 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.37" }
%"struct.std::__1::atomic.37" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__atomic_base.39" }
%"struct.std::__1::__atomic_base.39" = type { %"struct.std::__1::__cxx_atomic_impl.40" }
%"struct.std::__1::__cxx_atomic_impl.40" = type { %"struct.std::__1::__cxx_atomic_base_impl.41" }
%"struct.std::__1::__cxx_atomic_base_impl.41" = type { i32 }
%"struct.blink::Platform::GraphicsInfo" = type { i32, i32, i32, i8, i8, i8, i8, i8, %"class.blink::WebString", %"class.blink::WebString", %"class.blink::WebString", %"class.blink::WebString" }
%"class.blink::WebString" = type { %class.scoped_refptr.36 }
%"class.blink::DrawingBuffer::ScopedStateRestorer" = type <{ %class.scoped_refptr.7, %"class.blink::DrawingBuffer::ScopedStateRestorer"*, i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.scoped_refptr.45 = type { %"struct.blink::DrawingBuffer::ColorBuffer"* }
%"struct.blink::DrawingBuffer::ColorBuffer" = type { %"class.base::RefCountedThreadSafe.46", %"class.base::PlatformThreadRef", %"class.base::WeakPtr.47", %"class.blink::IntSize", i32, i32, %"class.std::__1::unique_ptr.48", i32, %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", %"struct.gpu::SyncToken" }
%"class.base::RefCountedThreadSafe.46" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr.47" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.gfx::GpuMemoryBuffer"* }
%"class.gfx::GpuMemoryBuffer" = type opaque
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%class.scoped_refptr.54 = type { %"class.cc::TextureLayer"* }
%"class.cc::TextureLayer" = type opaque
%"class.WTF::Deque" = type { %"class.WTF::Deque<scoped_refptr<blink::DrawingBuffer::ColorBuffer>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<scoped_refptr<blink::DrawingBuffer::ColorBuffer>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.57" }
%"class.WTF::VectorBuffer.57" = type { %"class.WTF::VectorBufferBase.58" }
%"class.WTF::VectorBufferBase.58" = type { %class.scoped_refptr.45*, i32, i32 }
%"class.base::WeakPtrFactory.59" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.gpu::SharedImageInterface" = type { i32 (...)** }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"class.WTF::DequeIterator" = type { %"class.WTF::DequeIteratorBase.base", [4 x i8] }
%"class.WTF::DequeIteratorBase.base" = type <{ %"class.WTF::Deque.61"*, i32 }>
%"class.blink::StaticBitmapImage" = type <{ %"class.blink::Image", %"class.blink::ImageOrientation", i8, [6 x i8] }>
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i8, %class.scoped_refptr.70, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.268" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.69" }
%"class.base::RefCountedThreadSafe.69" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.70 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.71", i64, %"class.WTF::Vector.73", %"class.WTF::Vector.78" }
%"class.WTF::RefCounted.71" = type { %"class.base::RefCounted.72" }
%"class.base::RefCounted.72" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.73" = type { %"class.WTF::VectorBuffer.74" }
%"class.WTF::VectorBuffer.74" = type { %"class.WTF::VectorBufferBase.75" }
%"class.WTF::VectorBufferBase.75" = type { i8*, i32, i32 }
%"class.WTF::Vector.78" = type { %"class.WTF::VectorBuffer.79" }
%"class.WTF::VectorBuffer.79" = type { %"class.WTF::VectorBufferBase.80" }
%"class.WTF::VectorBufferBase.80" = type { %"class.std::__1::unique_ptr.81"*, i32, i32 }
%"class.std::__1::unique_ptr.81" = type opaque
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.84", i32, [4 x i8], %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.222", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.228", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.239", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.251", %"class.std::__1::unique_ptr.257", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.264", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.177", %"class.std::__1::unique_ptr.202", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.120" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.120" = type { %"struct.std::__1::__atomic_base.121" }
%"struct.std::__1::__atomic_base.121" = type { %"struct.std::__1::__atomic_base.122" }
%"struct.std::__1::__atomic_base.122" = type { %"struct.std::__1::__cxx_atomic_impl.123" }
%"struct.std::__1::__cxx_atomic_impl.123" = type { %"struct.std::__1::__cxx_atomic_base_impl.124" }
%"struct.std::__1::__cxx_atomic_base_impl.124" = type { i64 }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::Worklist.131"* }
%"class.blink::Worklist.131" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.120" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::Worklist.138"* }
%"class.blink::Worklist.138" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.120" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::Worklist.145"* }
%"class.blink::Worklist.145" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.120" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::Worklist.152"* }
%"class.blink::Worklist.152" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.120" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::Worklist.159"* }
%"class.blink::Worklist.159" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.120" }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::Worklist.166"* }
%"class.blink::Worklist.166" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.120" }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::Worklist.173"* }
%"class.blink::Worklist.173" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.120" }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.180", %"class.std::__1::__compressed_pair.189", %"class.std::__1::__compressed_pair.194", %"class.std::__1::__compressed_pair.196", [4 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182", %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { i64 }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { float }
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.205", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.214" }
%"class.WTF::Vector.214" = type { %"class.WTF::VectorBuffer.215" }
%"class.WTF::VectorBuffer.215" = type { %"class.WTF::VectorBufferBase.216" }
%"class.WTF::VectorBufferBase.216" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.228" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.231" }
%"class.WTF::VectorBuffer.231" = type { %"class.WTF::VectorBufferBase.232" }
%"class.WTF::VectorBufferBase.232" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.245" }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.131"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.138"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.145"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.152"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.159"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.274", i64 }
%"class.std::__1::vector.274" = type { %"class.std::__1::__vector_base.275" }
%"class.std::__1::__vector_base.275" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.276" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.263 }
%class.scoped_refptr.263 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.264" = type { %"struct.std::__1::__atomic_base.265" }
%"struct.std::__1::__atomic_base.265" = type { %"struct.std::__1::__cxx_atomic_impl.266" }
%"struct.std::__1::__cxx_atomic_impl.266" = type { %"struct.std::__1::__cxx_atomic_base_impl.267" }
%"struct.std::__1::__cxx_atomic_base_impl.267" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.blink::ImageOrientation" = type { i8 }
%class.sk_sp = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkSurfaceProps = type { i32, i32 }
%class.sk_sp.282 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.283, i32, i32 }
%class.sk_sp.283 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%struct.SkISize = type { i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.302 }
%class.scoped_refptr.302 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.303", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.303" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::UnacceleratedStaticBitmapImage" = type { %"class.blink::StaticBitmapImage.base", %"class.cc::PaintImage", %class.sk_sp.282, %class.scoped_refptr.300 }
%"class.blink::StaticBitmapImage.base" = type <{ %"class.blink::Image", %"class.blink::ImageOrientation", i8 }>
%"class.cc::PaintImage" = type { %class.sk_sp.282, %class.sk_sp.284, %"class.gfx::Rect", i32, %class.sk_sp.289, %class.sk_sp.297, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.282, %class.scoped_refptr.298 }
%class.sk_sp.284 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.285", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { i8* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.289 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.290" }
%"class.std::__1::vector.290" = type { %"class.std::__1::__vector_base.291" }
%"class.std::__1::__vector_base.291" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.292" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.297 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr.298 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.299", [4 x i8] }>
%"class.base::RefCountedThreadSafe.299" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.300 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.301" }>
%"class.base::RefCountedThreadSafe.301" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.blink::Thread" = type { i32 (...)** }
%"class.blink::AcceleratedStaticBitmapImage" = type <{ %"class.blink::StaticBitmapImage.base", %"struct.gpu::Mailbox", [6 x i8], %struct.SkImageInfo, i32, i8, [3 x i8], %"class.base::WeakPtr.16", %class.scoped_refptr.305, %"class.base::WeakPtr.16", %class.sk_sp.308, i32, [4 x i8] }>
%class.scoped_refptr.305 = type { %"class.blink::MailboxRef"* }
%"class.blink::MailboxRef" = type { %"class.WTF::ThreadSafeRefCounted.306", %"struct.gpu::SyncToken", %"class.base::PlatformThreadRef", %class.scoped_refptr.300, %"class.base::OnceCallback" }
%"class.WTF::ThreadSafeRefCounted.306" = type { %"class.base::RefCountedThreadSafe.307" }
%"class.base::RefCountedThreadSafe.307" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.sk_sp.308 = type { %"class.blink::MailboxTextureBacking"* }
%"class.blink::MailboxTextureBacking" = type opaque
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink20XRWebGLDrawingBufferD2Ev = comdat any

$_ZN3WTF5DequeI13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEELj0ENS_18PartitionAllocatorEE10DestroyAllEv = comdat any

$_ZNK3WTF13DequeIteratorI13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEELj0ENS_18PartitionAllocatorEEdeEv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEERKN3gpu9SyncTokenEbEJS7_EEEFvSB_bEE7RunOnceEPNS0_13BindStateBaseESB_b = comdat any

$_ZN4base8internal9BindStateIPFv13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEERKN3gpu9SyncTokenEbEJS6_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN3WTF5DequeI13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEEEEmm = comdat any

@.str = private unnamed_addr constant [28 x i8] c"GL_OES_packed_depth_stencil\00", align 1
@.str.1 = private unnamed_addr constant [36 x i8] c"GL_CHROMIUM_framebuffer_multisample\00", align 1
@.str.2 = private unnamed_addr constant [38 x i8] c"GL_EXT_multisampled_render_to_texture\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"GL_OES_rgb8_rgba8\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"GL_EXT_discard_framebuffer\00", align 1
@_ZZN5blink20XRWebGLDrawingBuffer20DoneWithSharedBufferEvE12kAttachments = internal constant [3 x i32] [i32 36096, i32 36128, i32 0], align 4
@.str.6 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"index_ != deque_->end_\00", align 1
@.str.9 = private unnamed_addr constant [54 x i8] c"../../third_party/blink/renderer/platform/wtf/deque.h\00", align 1
@.str.10 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.11 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEEEEPKcv = private unnamed_addr constant [103 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<blink::XRWebGLDrawingBuffer::ColorBuffer>]\00", align 1

@_ZN5blink20XRWebGLDrawingBuffer11ColorBufferC1EN4base7WeakPtrIS0_EERKNS_7IntSizeERKN3gpu7MailboxEj = hidden unnamed_addr alias void (%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"class.base::WeakPtr"*, %"class.blink::IntSize"*, %"struct.gpu::Mailbox"*, i32), void (%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"class.base::WeakPtr"*, %"class.blink::IntSize"*, %"struct.gpu::Mailbox"*, i32)* @_ZN5blink20XRWebGLDrawingBuffer11ColorBufferC2EN4base7WeakPtrIS0_EERKNS_7IntSizeERKN3gpu7MailboxEj
@_ZN5blink20XRWebGLDrawingBuffer11ColorBufferD1Ev = hidden unnamed_addr alias void (%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*), void (%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*)* @_ZN5blink20XRWebGLDrawingBuffer11ColorBufferD2Ev
@_ZN5blink20XRWebGLDrawingBufferC1EPNS_13DrawingBufferEjbbbb = hidden unnamed_addr alias void (%"class.blink::XRWebGLDrawingBuffer"*, %"class.blink::DrawingBuffer"*, i32, i1, i1, i1, i1), void (%"class.blink::XRWebGLDrawingBuffer"*, %"class.blink::DrawingBuffer"*, i32, i1, i1, i1, i1)* @_ZN5blink20XRWebGLDrawingBufferC2EPNS_13DrawingBufferEjbbbb

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20XRWebGLDrawingBuffer11ColorBufferC2EN4base7WeakPtrIS0_EERKNS_7IntSizeERKN3gpu7MailboxEj(%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"class.base::WeakPtr"*, %"class.blink::IntSize"* nocapture readonly dereferenceable(8), %"struct.gpu::Mailbox"* nocapture readonly dereferenceable(16), i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %6, align 4
  %7 = tail call i64 @_ZN4base14PlatformThread10CurrentRefEv() #10
  %8 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %0, i64 0, i32 1, i32 0
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %9, %"class.base::internal::WeakReference"* dereferenceable(8) %10) #10
  %11 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %0, i64 0, i32 2, i32 0, i32 1
  %12 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %11, align 8
  %14 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %0, i64 0, i32 3
  %15 = bitcast %"class.blink::IntSize"* %2 to i64*
  %16 = bitcast %"class.blink::IntSize"* %14 to i64*
  %17 = load i64, i64* %15, align 4
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %0, i64 0, i32 4
  store i32 %4, i32* %18, align 8
  %19 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %0, i64 0, i32 5, i32 0, i64 0
  %20 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %3, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 1 %20, i64 16, i1 false)
  %21 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %0, i64 0, i32 6
  tail call void @_ZN3gpu9SyncTokenC1Ev(%"struct.gpu::SyncToken"* %21) #10
  %22 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %0, i64 0, i32 7
  tail call void @_ZN3gpu9SyncTokenC1Ev(%"struct.gpu::SyncToken"* %22) #10
  ret void
}

declare i64 @_ZN4base14PlatformThread10CurrentRefEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN3gpu9SyncTokenC1Ev(%"struct.gpu::SyncToken"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20XRWebGLDrawingBuffer11ColorBufferD2Ev(%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"struct.gpu::SyncToken", align 8
  %5 = tail call i64 @_ZN4base14PlatformThread10CurrentRefEv() #10
  %6 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %0, i64 0, i32 1, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %9, label %78

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %0, i64 0, i32 2, i32 0, i32 0
  %11 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #10
  br i1 %11, label %12, label %78

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %0, i64 0, i32 2, i32 0, i32 1
  %14 = bitcast i64* %13 to %"class.blink::XRWebGLDrawingBuffer"**
  %15 = load %"class.blink::XRWebGLDrawingBuffer"*, %"class.blink::XRWebGLDrawingBuffer"** %14, align 8
  %16 = icmp eq %"class.blink::XRWebGLDrawingBuffer"* %15, null
  br i1 %16, label %78, label %17

17:                                               ; preds = %12
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #10
  br i1 %18, label %22, label %19

19:                                               ; preds = %17
  %20 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %19, %17
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #10
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = load %"class.blink::XRWebGLDrawingBuffer"*, %"class.blink::XRWebGLDrawingBuffer"** %14, align 8
  br label %26

26:                                               ; preds = %22, %24
  %27 = phi %"class.blink::XRWebGLDrawingBuffer"* [ %25, %24 ], [ null, %22 ]
  %28 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %27, i64 0, i32 1, i32 0
  %29 = load %"class.blink::DrawingBuffer"*, %"class.blink::DrawingBuffer"** %28, align 8
  %30 = call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* %29) #10
  %31 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %0, i64 0, i32 7, i32 1
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, -1
  br i1 %33, label %34, label %36

34:                                               ; preds = %26
  %35 = bitcast %"class.gpu::gles2::GLES2Interface"* %30 to void (%"class.gpu::InterfaceBase"*, i8*)***
  br label %43

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.gpu::gles2::GLES2Interface", %"class.gpu::gles2::GLES2Interface"* %30, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %0, i64 0, i32 7, i32 0
  %39 = bitcast %"class.gpu::gles2::GLES2Interface"* %30 to void (%"class.gpu::InterfaceBase"*, i8*)***
  %40 = load void (%"class.gpu::InterfaceBase"*, i8*)**, void (%"class.gpu::InterfaceBase"*, i8*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %40, i64 3
  %42 = load void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %41, align 8
  call void %42(%"class.gpu::InterfaceBase"* %37, i8* %38) #10
  br label %43

43:                                               ; preds = %34, %36
  %44 = phi void (%"class.gpu::InterfaceBase"*, i8*)*** [ %35, %34 ], [ %39, %36 ]
  %45 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %0, i64 0, i32 4
  %46 = bitcast %"class.gpu::gles2::GLES2Interface"* %30 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)***
  %47 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %47, i64 57
  %49 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %48, align 8
  call void %49(%"class.gpu::gles2::GLES2Interface"* %30, i32 1, i32* %45) #10
  %50 = getelementptr inbounds %"struct.gpu::SyncToken", %"struct.gpu::SyncToken"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 24, i1 false)
  call void @_ZN3gpu9SyncTokenC1Ev(%"struct.gpu::SyncToken"* nonnull %4) #10
  %51 = getelementptr inbounds %"class.gpu::gles2::GLES2Interface", %"class.gpu::gles2::GLES2Interface"* %30, i64 0, i32 0
  %52 = load void (%"class.gpu::InterfaceBase"*, i8*)**, void (%"class.gpu::InterfaceBase"*, i8*)*** %44, align 8
  %53 = getelementptr inbounds void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %52, i64 1
  %54 = load void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %53, align 8
  call void %54(%"class.gpu::InterfaceBase"* %51, i8* nonnull %50) #10
  %55 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #10
  br i1 %55, label %59, label %56

56:                                               ; preds = %43
  %57 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #10
  %58 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #10
  br label %59

59:                                               ; preds = %56, %43
  %60 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #10
  br i1 %60, label %61, label %63

61:                                               ; preds = %59
  %62 = load %"class.blink::XRWebGLDrawingBuffer"*, %"class.blink::XRWebGLDrawingBuffer"** %14, align 8
  br label %63

63:                                               ; preds = %59, %61
  %64 = phi %"class.blink::XRWebGLDrawingBuffer"* [ %62, %61 ], [ null, %59 ]
  %65 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %64, i64 0, i32 1, i32 0
  %66 = load %"class.blink::DrawingBuffer"*, %"class.blink::DrawingBuffer"** %65, align 8
  %67 = call %"class.blink::WebGraphicsContext3DProvider"* @_ZN5blink13DrawingBuffer15ContextProviderEv(%"class.blink::DrawingBuffer"* %66) #10
  %68 = bitcast %"class.blink::WebGraphicsContext3DProvider"* %67 to %"class.gpu::SharedImageInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)***
  %69 = load %"class.gpu::SharedImageInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)**, %"class.gpu::SharedImageInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)*** %68, align 8
  %70 = getelementptr inbounds %"class.gpu::SharedImageInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)*, %"class.gpu::SharedImageInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)** %69, i64 16
  %71 = load %"class.gpu::SharedImageInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)*, %"class.gpu::SharedImageInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)** %70, align 8
  %72 = call %"class.gpu::SharedImageInterface"* %71(%"class.blink::WebGraphicsContext3DProvider"* %67) #10
  %73 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %0, i64 0, i32 5
  %74 = bitcast %"class.gpu::SharedImageInterface"* %72 to void (%"class.gpu::SharedImageInterface"*, %"struct.gpu::SyncToken"*, %"struct.gpu::Mailbox"*)***
  %75 = load void (%"class.gpu::SharedImageInterface"*, %"struct.gpu::SyncToken"*, %"struct.gpu::Mailbox"*)**, void (%"class.gpu::SharedImageInterface"*, %"struct.gpu::SyncToken"*, %"struct.gpu::Mailbox"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.gpu::SharedImageInterface"*, %"struct.gpu::SyncToken"*, %"struct.gpu::Mailbox"*)*, void (%"class.gpu::SharedImageInterface"*, %"struct.gpu::SyncToken"*, %"struct.gpu::Mailbox"*)** %75, i64 8
  %77 = load void (%"class.gpu::SharedImageInterface"*, %"struct.gpu::SyncToken"*, %"struct.gpu::Mailbox"*)*, void (%"class.gpu::SharedImageInterface"*, %"struct.gpu::SyncToken"*, %"struct.gpu::Mailbox"*)** %76, align 8
  call void %77(%"class.gpu::SharedImageInterface"* %72, %"struct.gpu::SyncToken"* nonnull dereferenceable(24) %4, %"struct.gpu::Mailbox"* dereferenceable(16) %73) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #10
  br label %78

78:                                               ; preds = %12, %1, %9, %63
  %79 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %0, i64 0, i32 2, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %79) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::gles2::GLES2Interface"* @_ZN5blink20XRWebGLDrawingBuffer9ContextGLEv(%"class.blink::XRWebGLDrawingBuffer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::DrawingBuffer"*, %"class.blink::DrawingBuffer"** %2, align 8
  %4 = tail call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* %3) #10
  ret %"class.gpu::gles2::GLES2Interface"* %4
}

declare %"class.blink::WebGraphicsContext3DProvider"* @_ZN5blink13DrawingBuffer15ContextProviderEv(%"class.blink::DrawingBuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::XRWebGLDrawingBuffer"* @_ZN5blink20XRWebGLDrawingBuffer6CreateEPNS_13DrawingBufferEjRKNS_7IntSizeEbbbb(%"class.blink::DrawingBuffer"*, i32, %"class.blink::IntSize"* nocapture readonly dereferenceable(8), i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = getelementptr inbounds %"class.blink::DrawingBuffer", %"class.blink::DrawingBuffer"* %0, i64 0, i32 39
  %19 = load i8, i8* %18, align 4, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %281

21:                                               ; preds = %7
  %22 = tail call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* %0) #10
  %23 = tail call %"class.blink::Extensions3DUtil"* @_ZN5blink16Extensions3DUtil6CreateEPN3gpu5gles214GLES2InterfaceE(%"class.gpu::gles2::GLES2Interface"* %22) #10
  %24 = getelementptr inbounds %"class.blink::Extensions3DUtil", %"class.blink::Extensions3DUtil"* %23, i64 0, i32 3
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %276, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i64 27) #10
  %29 = call zeroext i1 @_ZN5blink16Extensions3DUtil22EnsureExtensionEnabledERKN3WTF6StringE(%"class.blink::Extensions3DUtil"* %23, %"class.WTF::String"* nonnull dereferenceable(8) %8) #10
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #10
  br label %46

46:                                               ; preds = %27, %42, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br i1 %6, label %47, label %192

47:                                               ; preds = %46
  %48 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i64 35) #10
  %49 = call zeroext i1 @_ZN5blink16Extensions3DUtil17SupportsExtensionERKN3WTF6StringE(%"class.blink::Extensions3DUtil"* %23, %"class.WTF::String"* nonnull dereferenceable(8) %9) #10
  br i1 %49, label %53, label %50

50:                                               ; preds = %47
  %51 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i64 37) #10
  %52 = call zeroext i1 @_ZN5blink16Extensions3DUtil17SupportsExtensionERKN3WTF6StringE(%"class.blink::Extensions3DUtil"* %23, %"class.WTF::String"* nonnull dereferenceable(8) %10) #10
  br i1 %52, label %53, label %74

53:                                               ; preds = %50, %47
  %54 = phi i1 [ false, %47 ], [ true, %50 ]
  %55 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i64 17) #10
  %56 = call zeroext i1 @_ZN5blink16Extensions3DUtil17SupportsExtensionERKN3WTF6StringE(%"class.blink::Extensions3DUtil"* %23, %"class.WTF::String"* nonnull dereferenceable(8) %11) #10
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #10
  br label %73

73:                                               ; preds = %72, %69, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #10
  br i1 %54, label %74, label %94

74:                                               ; preds = %50, %73
  %75 = phi i1 [ %56, %73 ], [ false, %50 ]
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #10
  br label %92

92:                                               ; preds = %74, %88, %91
  %93 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #10
  br label %94

94:                                               ; preds = %92, %73
  %95 = phi i1 [ %75, %92 ], [ %56, %73 ]
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #10
  br label %112

112:                                              ; preds = %94, %108, %111
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #10
  br i1 %95, label %113, label %192

113:                                              ; preds = %112
  %114 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i64 17) #10
  %115 = call zeroext i1 @_ZN5blink16Extensions3DUtil22EnsureExtensionEnabledERKN3WTF6StringE(%"class.blink::Extensions3DUtil"* %23, %"class.WTF::String"* nonnull dereferenceable(8) %12) #10
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #10
  br label %132

132:                                              ; preds = %113, %128, %131
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #10
  %133 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %133) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i64 35) #10
  %134 = call zeroext i1 @_ZN5blink16Extensions3DUtil17SupportsExtensionERKN3WTF6StringE(%"class.blink::Extensions3DUtil"* %23, %"class.WTF::String"* nonnull dereferenceable(8) %13) #10
  %135 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %137, label %151, label %138

138:                                              ; preds = %132
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  br i1 %142, label %145, label %147

145:                                              ; preds = %138
  %146 = add i32 %144, -1
  store i32 %146, i32* %143, align 4
  br label %147

147:                                              ; preds = %145, %138
  %148 = phi i32 [ %146, %145 ], [ %144, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %136) #10
  br label %151

151:                                              ; preds = %132, %147, %150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %133) #10
  br i1 %134, label %152, label %172

152:                                              ; preds = %151
  %153 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %153) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %14, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i64 35) #10
  %154 = call zeroext i1 @_ZN5blink16Extensions3DUtil22EnsureExtensionEnabledERKN3WTF6StringE(%"class.blink::Extensions3DUtil"* %23, %"class.WTF::String"* nonnull dereferenceable(8) %14) #10
  %155 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %171, label %158

158:                                              ; preds = %152
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #10
  br label %171

171:                                              ; preds = %152, %167, %170
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %153) #10
  br label %192

172:                                              ; preds = %151
  %173 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %15, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i64 37) #10
  %174 = call zeroext i1 @_ZN5blink16Extensions3DUtil22EnsureExtensionEnabledERKN3WTF6StringE(%"class.blink::Extensions3DUtil"* %23, %"class.WTF::String"* nonnull dereferenceable(8) %15) #10
  %175 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %175, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %172
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #10
  br label %191

191:                                              ; preds = %172, %187, %190
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #10
  br label %192

192:                                              ; preds = %46, %112, %171, %191
  %193 = phi i1 [ true, %171 ], [ true, %191 ], [ false, %112 ], [ false, %46 ]
  %194 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %194) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i64 26) #10
  %195 = call zeroext i1 @_ZN5blink16Extensions3DUtil17SupportsExtensionERKN3WTF6StringE(%"class.blink::Extensions3DUtil"* %23, %"class.WTF::String"* nonnull dereferenceable(8) %16) #10
  %196 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %197 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %196, align 8
  %198 = icmp eq %"class.WTF::StringImpl"* %197, null
  br i1 %198, label %212, label %199

199:                                              ; preds = %192
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  br i1 %203, label %206, label %208

206:                                              ; preds = %199
  %207 = add i32 %205, -1
  store i32 %207, i32* %204, align 4
  br label %208

208:                                              ; preds = %206, %199
  %209 = phi i32 [ %207, %206 ], [ %205, %199 ]
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %208
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %197) #10
  br label %212

212:                                              ; preds = %192, %208, %211
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %194) #10
  br i1 %195, label %213, label %233

213:                                              ; preds = %212
  %214 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %214) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %17, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i64 26) #10
  %215 = call zeroext i1 @_ZN5blink16Extensions3DUtil22EnsureExtensionEnabledERKN3WTF6StringE(%"class.blink::Extensions3DUtil"* %23, %"class.WTF::String"* nonnull dereferenceable(8) %17) #10
  %216 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %217 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %216, align 8
  %218 = icmp eq %"class.WTF::StringImpl"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %213
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load atomic i32, i32* %220 monotonic, align 4
  %222 = and i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  br i1 %223, label %226, label %228

226:                                              ; preds = %219
  %227 = add i32 %225, -1
  store i32 %227, i32* %224, align 4
  br label %228

228:                                              ; preds = %226, %219
  %229 = phi i32 [ %227, %226 ], [ %225, %219 ]
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %232

231:                                              ; preds = %228
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %217) #10
  br label %232

232:                                              ; preds = %213, %228, %231
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %214) #10
  br label %233

233:                                              ; preds = %232, %212
  %234 = call noalias i8* @malloc(i64 128) #10
  %235 = bitcast i8* %234 to %"class.blink::XRWebGLDrawingBuffer"*
  %236 = zext i1 %195 to i8
  %237 = zext i1 %3 to i8
  %238 = zext i1 %4 to i8
  %239 = zext i1 %5 to i8
  %240 = bitcast i8* %234 to i32*
  store i32 1, i32* %240, align 4
  %241 = getelementptr inbounds i8, i8* %234, i64 8
  %242 = bitcast i8* %241 to %"class.blink::DrawingBuffer"**
  store %"class.blink::DrawingBuffer"* %0, %"class.blink::DrawingBuffer"** %242, align 8
  %243 = icmp eq %"class.blink::DrawingBuffer"* %0, null
  br i1 %243, label %246, label %244

244:                                              ; preds = %233
  %245 = getelementptr inbounds %"class.blink::DrawingBuffer", %"class.blink::DrawingBuffer"* %0, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %245) #10
  br label %246

246:                                              ; preds = %233, %244
  %247 = getelementptr inbounds i8, i8* %234, i64 16
  %248 = bitcast i8* %247 to i32*
  store i32 %1, i32* %248, align 8
  %249 = getelementptr inbounds i8, i8* %234, i64 20
  %250 = bitcast i8* %249 to i32*
  store i32 0, i32* %250, align 4
  %251 = getelementptr inbounds i8, i8* %234, i64 24
  %252 = bitcast i8* %251 to i32*
  store i32 0, i32* %252, align 8
  %253 = getelementptr inbounds i8, i8* %234, i64 32
  %254 = getelementptr inbounds i8, i8* %234, i64 72
  call void @llvm.memset.p0i8.i64(i8* align 8 %254, i8 0, i64 24, i1 false) #10
  %255 = getelementptr inbounds i8, i8* %234, i64 96
  call void @llvm.memset.p0i8.i64(i8* align 8 %253, i8 0, i64 35, i1 false) #10
  store i8 %236, i8* %255, align 8
  %256 = getelementptr inbounds i8, i8* %234, i64 97
  store i8 %238, i8* %256, align 1
  %257 = getelementptr inbounds i8, i8* %234, i64 98
  store i8 %239, i8* %257, align 2
  %258 = getelementptr inbounds i8, i8* %234, i64 99
  store i8 %237, i8* %258, align 1
  %259 = getelementptr inbounds i8, i8* %234, i64 100
  %260 = bitcast i8* %259 to i32*
  store i32 0, i32* %260, align 4
  %261 = getelementptr inbounds i8, i8* %234, i64 104
  %262 = bitcast i8* %261 to i32*
  store i32 0, i32* %262, align 8
  %263 = getelementptr inbounds i8, i8* %234, i64 108
  %264 = bitcast i8* %263 to i32*
  store i32 0, i32* %264, align 4
  %265 = getelementptr inbounds i8, i8* %234, i64 112
  %266 = bitcast i8* %265 to %"class.base::internal::WeakPtrFactoryBase"*
  %267 = ptrtoint i8* %234 to i64
  call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %266, i64 %267) #10
  %268 = call zeroext i1 @_ZN5blink20XRWebGLDrawingBuffer10InitializeERKNS_7IntSizeEb(%"class.blink::XRWebGLDrawingBuffer"* %235, %"class.blink::IntSize"* dereferenceable(8) %2, i1 zeroext %193)
  br i1 %268, label %276, label %269

269:                                              ; preds = %246
  %270 = icmp eq i8* %234, null
  br i1 %270, label %276, label %271

271:                                              ; preds = %269
  %272 = bitcast i8* %234 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* nonnull %272) #10
  %273 = load i32, i32* %240, align 4
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %276

275:                                              ; preds = %271
  call void @_ZN5blink20XRWebGLDrawingBufferD2Ev(%"class.blink::XRWebGLDrawingBuffer"* nonnull %235) #10
  call void @free(i8* nonnull %234) #10
  br label %276

276:                                              ; preds = %21, %246, %275, %271, %269
  %277 = phi i64 [ 0, %21 ], [ 0, %269 ], [ 0, %271 ], [ 0, %275 ], [ %267, %246 ]
  %278 = icmp eq %"class.blink::Extensions3DUtil"* %23, null
  br i1 %278, label %281, label %279

279:                                              ; preds = %276
  call void @_ZN5blink16Extensions3DUtilD1Ev(%"class.blink::Extensions3DUtil"* nonnull %23) #10
  %280 = bitcast %"class.blink::Extensions3DUtil"* %23 to i8*
  call void @free(i8* %280) #10
  br label %281

281:                                              ; preds = %7, %279, %276
  %282 = phi i64 [ 0, %7 ], [ %277, %276 ], [ %277, %279 ]
  %283 = inttoptr i64 %282 to %"class.blink::XRWebGLDrawingBuffer"*
  ret %"class.blink::XRWebGLDrawingBuffer"* %283
}

declare %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"*) local_unnamed_addr #1

declare %"class.blink::Extensions3DUtil"* @_ZN5blink16Extensions3DUtil6CreateEPN3gpu5gles214GLES2InterfaceE(%"class.gpu::gles2::GLES2Interface"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink16Extensions3DUtil22EnsureExtensionEnabledERKN3WTF6StringE(%"class.blink::Extensions3DUtil"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink16Extensions3DUtil17SupportsExtensionERKN3WTF6StringE(%"class.blink::Extensions3DUtil"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20XRWebGLDrawingBuffer10InitializeERKNS_7IntSizeEb(%"class.blink::XRWebGLDrawingBuffer"*, %"class.blink::IntSize"* nocapture readonly dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::DrawingBuffer"*, %"class.blink::DrawingBuffer"** %6, align 8
  %8 = tail call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* %7) #10
  %9 = tail call %"class.blink::Extensions3DUtil"* @_ZN5blink16Extensions3DUtil6CreateEPN3gpu5gles214GLES2InterfaceE(%"class.gpu::gles2::GLES2Interface"* %8) #10
  %10 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 19
  %11 = bitcast %"class.gpu::gles2::GLES2Interface"* %8 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)***
  %12 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %12, i64 102
  %14 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %13, align 8
  tail call void %14(%"class.gpu::gles2::GLES2Interface"* %8, i32 3379, i32* %10) #10
  %15 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #10
  store i32 0, i32* %4, align 4
  %16 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 18
  store i32 0, i32* %16, align 4
  br i1 %2, label %17, label %41

17:                                               ; preds = %3
  %18 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*** %11, align 8
  %19 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %18, i64 102
  %20 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %19, align 8
  call void %20(%"class.gpu::gles2::GLES2Interface"* %8, i32 36183, i32* nonnull %4) #10
  store i32 2, i32* %16, align 4
  %21 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i64 37) #10
  %22 = call zeroext i1 @_ZN5blink16Extensions3DUtil17SupportsExtensionERKN3WTF6StringE(%"class.blink::Extensions3DUtil"* %9, %"class.WTF::String"* nonnull dereferenceable(8) %5) #10
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #10
  br label %39

39:                                               ; preds = %17, %35, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  br i1 %22, label %40, label %41

40:                                               ; preds = %39
  store i32 1, i32* %16, align 4
  br label %41

41:                                               ; preds = %39, %40, %3
  %42 = load i32, i32* %4, align 4
  %43 = icmp slt i32 %42, 4
  %44 = select i1 %43, i32 %42, i32 4
  %45 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 20
  store i32 %44, i32* %45, align 4
  call void @_ZN5blink20XRWebGLDrawingBuffer6ResizeERKNS_7IntSizeE(%"class.blink::XRWebGLDrawingBuffer"* %0, %"class.blink::IntSize"* dereferenceable(8) %1)
  %46 = bitcast %"class.gpu::gles2::GLES2Interface"* %8 to i32 (%"class.gpu::gles2::GLES2Interface"*)***
  %47 = load i32 (%"class.gpu::gles2::GLES2Interface"*)**, i32 (%"class.gpu::gles2::GLES2Interface"*)*** %46, align 8
  %48 = getelementptr inbounds i32 (%"class.gpu::gles2::GLES2Interface"*)*, i32 (%"class.gpu::gles2::GLES2Interface"*)** %47, i64 332
  %49 = load i32 (%"class.gpu::gles2::GLES2Interface"*)*, i32 (%"class.gpu::gles2::GLES2Interface"*)** %48, align 8
  %50 = call i32 %49(%"class.gpu::gles2::GLES2Interface"* %8) #10
  %51 = icmp eq i32 %50, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #10
  %52 = icmp eq %"class.blink::Extensions3DUtil"* %9, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %41
  call void @_ZN5blink16Extensions3DUtilD1Ev(%"class.blink::Extensions3DUtil"* nonnull %9) #10
  %54 = bitcast %"class.blink::Extensions3DUtil"* %9 to i8*
  call void @free(i8* %54) #10
  br label %55

55:                                               ; preds = %41, %53
  ret i1 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20XRWebGLDrawingBufferC2EPNS_13DrawingBufferEjbbbb(%"class.blink::XRWebGLDrawingBuffer"*, %"class.blink::DrawingBuffer"*, i32, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %8 = zext i1 %3 to i8
  %9 = zext i1 %4 to i8
  %10 = zext i1 %5 to i8
  %11 = zext i1 %6 to i8
  %12 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %12, align 4
  %13 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 1, i32 0
  store %"class.blink::DrawingBuffer"* %1, %"class.blink::DrawingBuffer"** %13, align 8
  %14 = icmp eq %"class.blink::DrawingBuffer"* %1, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.blink::DrawingBuffer", %"class.blink::DrawingBuffer"* %1, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %16) #10
  br label %17

17:                                               ; preds = %7, %15
  %18 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 2
  store i32 %2, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 3
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 4
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 5, i32 0
  %22 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 13
  %23 = bitcast %"class.WTF::Deque.61"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #10
  %24 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 14
  %25 = bitcast %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 35, i1 false)
  store i8 %8, i8* %24, align 8
  %26 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 15
  store i8 %10, i8* %26, align 1
  %27 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 16
  store i8 %11, i8* %27, align 2
  %28 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 17
  store i8 %9, i8* %28, align 1
  %29 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 18
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 19
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 20
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 21, i32 0
  %33 = ptrtoint %"class.blink::XRWebGLDrawingBuffer"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %32, i64 %33) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20XRWebGLDrawingBuffer16BeginDestructionEv(%"class.blink::XRWebGLDrawingBuffer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %2, i64 0, i32 0
  %4 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %3, align 8
  %5 = icmp eq %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 1, i32 0
  %8 = load %"class.blink::DrawingBuffer"*, %"class.blink::DrawingBuffer"** %7, align 8
  %9 = tail call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* %8) #10
  %10 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %3, align 8
  %11 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %10, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = bitcast %"class.gpu::gles2::GLES2Interface"* %9 to void (%"class.gpu::gles2::GLES2Interface"*, i32)***
  %14 = load void (%"class.gpu::gles2::GLES2Interface"*, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32)** %14, i64 356
  %16 = load void (%"class.gpu::gles2::GLES2Interface"*, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32)** %15, align 8
  tail call void %16(%"class.gpu::gles2::GLES2Interface"* %9, i32 %12) #10
  %17 = bitcast %class.scoped_refptr.60* %2 to i64*
  %18 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %3, align 8
  store i64 0, i64* %17, align 8
  %19 = icmp eq %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %6
  %21 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  tail call void @_ZN5blink20XRWebGLDrawingBuffer11ColorBufferD2Ev(%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* nonnull %18) #10
  %25 = bitcast %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %18 to i8*
  tail call void @_ZdlPv(i8* %25) #11
  br label %26

26:                                               ; preds = %1, %24, %20, %6
  %27 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 6
  %28 = bitcast %class.scoped_refptr.60* %27 to i64*
  %29 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %27, i64 0, i32 0
  %30 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %29, align 8
  store i64 0, i64* %28, align 8
  %31 = icmp eq %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %30, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw sub i32* %33, i32 1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  tail call void @_ZN5blink20XRWebGLDrawingBuffer11ColorBufferD2Ev(%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* nonnull %30) #10
  %37 = bitcast %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %30 to i8*
  tail call void @_ZdlPv(i8* %37) #11
  br label %38

38:                                               ; preds = %26, %32, %36
  %39 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 13
  tail call void @_ZN3WTF5DequeI13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque.61"* %39) #10
  %40 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 13, i32 1
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 13, i32 2
  store i32 0, i32* %41, align 4
  %42 = bitcast %"class.WTF::Deque.61"* %39 to i8**
  %43 = load i8*, i8** %42, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #10
  %44 = bitcast %"class.WTF::Deque.61"* %39 to i64*
  store atomic i64 0, i64* %44 monotonic, align 8
  %45 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %45, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20XRWebGLDrawingBuffer6ResizeERKNS_7IntSizeE(%"class.blink::XRWebGLDrawingBuffer"*, %"class.blink::IntSize"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 1
  %6 = select i1 %5, i32 %4, i32 1
  %7 = sitofp i32 %6 to float
  %8 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 1
  %11 = select i1 %10, i32 %9, i32 1
  %12 = sitofp i32 %11 to float
  %13 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 19
  %14 = load i32, i32* %13, align 8
  %15 = sitofp i32 %14 to float
  %16 = fdiv float %15, %7
  %17 = fdiv float %15, %12
  %18 = fcmp olt float %17, %16
  %19 = select i1 %18, float %17, float %16
  %20 = fcmp olt float %19, 1.000000e+00
  %21 = fmul float %19, %7
  %22 = fmul float %19, %12
  %23 = select i1 %20, float %21, float %7
  %24 = select i1 %20, float %22, float %12
  %25 = fptosi float %23 to i32
  %26 = fptosi float %24 to i32
  %27 = zext i32 %26 to i64
  %28 = shl nuw i64 %27, 32
  %29 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 8
  %30 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %29, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, %25
  br i1 %32, label %33, label %37

33:                                               ; preds = %2
  %34 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 8, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, %26
  br i1 %36, label %249, label %37

37:                                               ; preds = %2, %33
  %38 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 1, i32 0
  %39 = load %"class.blink::DrawingBuffer"*, %"class.blink::DrawingBuffer"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::DrawingBuffer", %"class.blink::DrawingBuffer"* %39, i64 0, i32 39
  %41 = load i8, i8* %40, align 4, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %249

43:                                               ; preds = %37
  %44 = tail call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* %39) #10
  %45 = bitcast %"class.blink::IntSize"* %29 to i64*
  %46 = zext i32 %25 to i64
  %47 = or i64 %28, %46
  store i64 %47, i64* %45, align 4
  %48 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 13
  tail call void @_ZN3WTF5DequeI13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque.61"* %48) #10
  %49 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 13, i32 1
  store i32 0, i32* %49, align 8
  %50 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 13, i32 2
  store i32 0, i32* %50, align 4
  %51 = bitcast %"class.WTF::Deque.61"* %48 to i8**
  %52 = load i8*, i8** %51, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %52) #10
  %53 = bitcast %"class.WTF::Deque.61"* %48 to i64*
  store atomic i64 0, i64* %53 monotonic, align 8
  %54 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %54, align 8
  %55 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 2
  %56 = load i32, i32* %55, align 8
  %57 = bitcast %"class.gpu::gles2::GLES2Interface"* %44 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)***
  %58 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %58, i64 15
  %60 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %59, align 8
  tail call void %60(%"class.gpu::gles2::GLES2Interface"* %44, i32 36160, i32 %56) #10
  %61 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 15
  %62 = load i8, i8* %61, align 1, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %43
  %65 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 16
  %66 = load i8, i8* %65, align 2, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %121, label %68

68:                                               ; preds = %64, %43
  %69 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 7
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 0
  %72 = bitcast %"class.gpu::gles2::GLES2Interface"* %44 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)***
  br i1 %71, label %77, label %73

73:                                               ; preds = %68
  %74 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*** %72, align 8
  %75 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %74, i64 53
  %76 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %75, align 8
  tail call void %76(%"class.gpu::gles2::GLES2Interface"* %44, i32 1, i32* %69) #10
  store i32 0, i32* %69, align 8
  br label %77

77:                                               ; preds = %68, %73
  %78 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*** %72, align 8
  %79 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %78, i64 80
  %80 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %79, align 8
  tail call void %80(%"class.gpu::gles2::GLES2Interface"* %44, i32 1, i32* %69) #10
  %81 = load i32, i32* %69, align 8
  %82 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %57, align 8
  %83 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %82, i64 16
  %84 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %83, align 8
  tail call void %84(%"class.gpu::gles2::GLES2Interface"* %44, i32 36161, i32 %81) #10
  %85 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 18
  %86 = load i32, i32* %85, align 4
  switch i32 %86, label %107 [
    i32 1, label %87
    i32 2, label %97
  ]

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 20
  %89 = load i32, i32* %88, align 4
  %90 = load i32, i32* %30, align 4
  %91 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 8, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = bitcast %"class.gpu::gles2::GLES2Interface"* %44 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)***
  %94 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*** %93, align 8
  %95 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)** %94, i64 240
  %96 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)** %95, align 8
  tail call void %96(%"class.gpu::gles2::GLES2Interface"* %44, i32 36161, i32 %89, i32 35056, i32 %90, i32 %92) #10
  br label %115

97:                                               ; preds = %77
  %98 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 20
  %99 = load i32, i32* %98, align 4
  %100 = load i32, i32* %30, align 4
  %101 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 8, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = bitcast %"class.gpu::gles2::GLES2Interface"* %44 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)***
  %104 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)** %104, i64 238
  %106 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)** %105, align 8
  tail call void %106(%"class.gpu::gles2::GLES2Interface"* %44, i32 36161, i32 %99, i32 35056, i32 %100, i32 %102) #10
  br label %115

107:                                              ; preds = %77
  %108 = load i32, i32* %30, align 4
  %109 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 8, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = bitcast %"class.gpu::gles2::GLES2Interface"* %44 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)***
  %112 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %112, i64 151
  %114 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %113, align 8
  tail call void %114(%"class.gpu::gles2::GLES2Interface"* %44, i32 36161, i32 35056, i32 %108, i32 %110) #10
  br label %115

115:                                              ; preds = %97, %107, %87
  %116 = load i32, i32* %69, align 8
  %117 = bitcast %"class.gpu::gles2::GLES2Interface"* %44 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)***
  %118 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*** %117, align 8
  %119 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %118, i64 73
  %120 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %119, align 8
  tail call void %120(%"class.gpu::gles2::GLES2Interface"* %44, i32 36160, i32 33306, i32 36161, i32 %116) #10
  br label %121

121:                                              ; preds = %64, %115
  %122 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 18
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %123, 2
  br i1 %124, label %125, label %173

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 17
  %127 = load i8, i8* %126, align 1, !range !2
  %128 = icmp eq i8 %127, 0
  %129 = select i1 %128, i32 32849, i32 32856
  %130 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 4
  %131 = load i32, i32* %130, align 8
  %132 = icmp eq i32 %131, 0
  %133 = bitcast %"class.gpu::gles2::GLES2Interface"* %44 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)***
  br i1 %132, label %138, label %134

134:                                              ; preds = %125
  %135 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*** %133, align 8
  %136 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %135, i64 53
  %137 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %136, align 8
  tail call void %137(%"class.gpu::gles2::GLES2Interface"* %44, i32 1, i32* %130) #10
  store i32 0, i32* %130, align 8
  br label %138

138:                                              ; preds = %125, %134
  %139 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*** %133, align 8
  %140 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %139, i64 80
  %141 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %140, align 8
  tail call void %141(%"class.gpu::gles2::GLES2Interface"* %44, i32 1, i32* %130) #10
  %142 = load i32, i32* %130, align 8
  %143 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %57, align 8
  %144 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %143, i64 16
  %145 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %144, align 8
  tail call void %145(%"class.gpu::gles2::GLES2Interface"* %44, i32 36161, i32 %142) #10
  %146 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 20
  %147 = load i32, i32* %146, align 4
  %148 = load i32, i32* %30, align 4
  %149 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 8, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = bitcast %"class.gpu::gles2::GLES2Interface"* %44 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)***
  %152 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)** %152, i64 238
  %154 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)** %153, align 8
  tail call void %154(%"class.gpu::gles2::GLES2Interface"* %44, i32 36161, i32 %147, i32 %129, i32 %148, i32 %150) #10
  %155 = load i32, i32* %130, align 8
  %156 = bitcast %"class.gpu::gles2::GLES2Interface"* %44 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)***
  %157 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*** %156, align 8
  %158 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %157, i64 73
  %159 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %158, align 8
  tail call void %159(%"class.gpu::gles2::GLES2Interface"* %44, i32 36160, i32 36064, i32 36161, i32 %155) #10
  %160 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 3
  %161 = load i32, i32* %160, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %168

163:                                              ; preds = %138
  %164 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*** %133, align 8
  %165 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %164, i64 79
  %166 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %165, align 8
  tail call void %166(%"class.gpu::gles2::GLES2Interface"* %44, i32 1, i32* %160) #10
  %167 = load i32, i32* %160, align 4
  br label %168

168:                                              ; preds = %138, %163
  %169 = phi i32 [ %161, %138 ], [ %167, %163 ]
  %170 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %57, align 8
  %171 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %170, i64 15
  %172 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %171, align 8
  tail call void %172(%"class.gpu::gles2::GLES2Interface"* %44, i32 36160, i32 %169) #10
  br label %173

173:                                              ; preds = %168, %121
  %174 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 5
  %175 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %174, i64 0, i32 0
  %176 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %175, align 8
  %177 = icmp eq %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %176, null
  br i1 %177, label %185, label %178

178:                                              ; preds = %173
  %179 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %176, i64 0, i32 4
  %180 = load i32, i32* %179, align 8
  %181 = bitcast %"class.gpu::gles2::GLES2Interface"* %44 to void (%"class.gpu::gles2::GLES2Interface"*, i32)***
  %182 = load void (%"class.gpu::gles2::GLES2Interface"*, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32)*** %181, align 8
  %183 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32)** %182, i64 356
  %184 = load void (%"class.gpu::gles2::GLES2Interface"*, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32)** %183, align 8
  tail call void %184(%"class.gpu::gles2::GLES2Interface"* %44, i32 %180) #10
  br label %185

185:                                              ; preds = %173, %178
  %186 = tail call %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* @_ZN5blink20XRWebGLDrawingBuffer17CreateColorBufferEv(%"class.blink::XRWebGLDrawingBuffer"* %0)
  %187 = ptrtoint %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %186 to i64
  %188 = bitcast %class.scoped_refptr.60* %174 to i64*
  %189 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %175, align 8
  store i64 %187, i64* %188, align 8
  %190 = icmp eq %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %189, null
  br i1 %190, label %197, label %191

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %189, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = atomicrmw sub i32* %192, i32 1 acq_rel
  %194 = icmp eq i32 %193, 1
  br i1 %194, label %195, label %197

195:                                              ; preds = %191
  tail call void @_ZN5blink20XRWebGLDrawingBuffer11ColorBufferD2Ev(%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* nonnull %189) #10
  %196 = bitcast %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %189 to i8*
  tail call void @_ZdlPv(i8* %196) #11
  br label %197

197:                                              ; preds = %185, %191, %195
  %198 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 6
  %199 = bitcast %class.scoped_refptr.60* %198 to i64*
  %200 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %198, i64 0, i32 0
  %201 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %200, align 8
  store i64 0, i64* %199, align 8
  %202 = icmp eq %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %201, null
  br i1 %202, label %209, label %203

203:                                              ; preds = %197
  %204 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %201, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = atomicrmw sub i32* %204, i32 1 acq_rel
  %206 = icmp eq i32 %205, 1
  br i1 %206, label %207, label %209

207:                                              ; preds = %203
  tail call void @_ZN5blink20XRWebGLDrawingBuffer11ColorBufferD2Ev(%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* nonnull %201) #10
  %208 = bitcast %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %201 to i8*
  tail call void @_ZdlPv(i8* %208) #11
  br label %209

209:                                              ; preds = %197, %203, %207
  %210 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %175, align 8
  %211 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %210, i64 0, i32 4
  %212 = load i32, i32* %211, align 8
  %213 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %57, align 8
  %214 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %213, i64 355
  %215 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %214, align 8
  tail call void %215(%"class.gpu::gles2::GLES2Interface"* %44, i32 %212, i32 35575) #10
  %216 = load i32, i32* %122, align 4
  %217 = icmp eq i32 %216, 1
  %218 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %175, align 8
  %219 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %218, i64 0, i32 4
  %220 = load i32, i32* %219, align 8
  br i1 %217, label %221, label %228

221:                                              ; preds = %209
  %222 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 20
  %223 = load i32, i32* %222, align 4
  %224 = bitcast %"class.gpu::gles2::GLES2Interface"* %44 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)***
  %225 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)*** %224, align 8
  %226 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)** %225, i64 241
  %227 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)** %226, align 8
  tail call void %227(%"class.gpu::gles2::GLES2Interface"* %44, i32 36160, i32 36064, i32 3553, i32 %220, i32 0, i32 %223) #10
  br label %233

228:                                              ; preds = %209
  %229 = bitcast %"class.gpu::gles2::GLES2Interface"* %44 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)***
  %230 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*** %229, align 8
  %231 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)** %230, i64 74
  %232 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)** %231, align 8
  tail call void %232(%"class.gpu::gles2::GLES2Interface"* %44, i32 36160, i32 36064, i32 3553, i32 %220, i32 0) #10
  br label %233

233:                                              ; preds = %228, %221
  %234 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 10
  %235 = load i8, i8* %234, align 8, !range !2
  %236 = icmp eq i8 %235, 0
  br i1 %236, label %237, label %238

237:                                              ; preds = %233
  store i8 1, i8* %234, align 8
  br label %238

238:                                              ; preds = %233, %237
  %239 = load %"class.blink::DrawingBuffer"*, %"class.blink::DrawingBuffer"** %38, align 8
  %240 = getelementptr inbounds %"class.blink::DrawingBuffer", %"class.blink::DrawingBuffer"* %239, i64 0, i32 3
  %241 = load %"class.blink::DrawingBuffer::Client"*, %"class.blink::DrawingBuffer::Client"** %240, align 8
  %242 = bitcast %"class.blink::DrawingBuffer::Client"* %241 to void (%"class.blink::DrawingBuffer::Client"*)***
  %243 = load void (%"class.blink::DrawingBuffer::Client"*)**, void (%"class.blink::DrawingBuffer::Client"*)*** %242, align 8
  %244 = getelementptr inbounds void (%"class.blink::DrawingBuffer::Client"*)*, void (%"class.blink::DrawingBuffer::Client"*)** %243, i64 6
  %245 = load void (%"class.blink::DrawingBuffer::Client"*)*, void (%"class.blink::DrawingBuffer::Client"*)** %244, align 8
  tail call void %245(%"class.blink::DrawingBuffer::Client"* %241) #10
  %246 = load void (%"class.blink::DrawingBuffer::Client"*)**, void (%"class.blink::DrawingBuffer::Client"*)*** %242, align 8
  %247 = getelementptr inbounds void (%"class.blink::DrawingBuffer::Client"*)*, void (%"class.blink::DrawingBuffer::Client"*)** %246, i64 7
  %248 = load void (%"class.blink::DrawingBuffer::Client"*)*, void (%"class.blink::DrawingBuffer::Client"*)** %247, align 8
  tail call void %248(%"class.blink::DrawingBuffer::Client"* %241) #10
  br label %249

249:                                              ; preds = %37, %33, %238
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink20XRWebGLDrawingBuffer11ContextLostEv(%"class.blink::XRWebGLDrawingBuffer"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::DrawingBuffer"*, %"class.blink::DrawingBuffer"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::DrawingBuffer", %"class.blink::DrawingBuffer"* %3, i64 0, i32 39
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp ne i8 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZN5blink20XRWebGLDrawingBuffer10AdjustSizeERKNS_7IntSizeE(%"class.blink::XRWebGLDrawingBuffer"* nocapture readonly, %"class.blink::IntSize"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 1
  %6 = select i1 %5, i32 %4, i32 1
  %7 = sitofp i32 %6 to float
  %8 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 1
  %11 = select i1 %10, i32 %9, i32 1
  %12 = sitofp i32 %11 to float
  %13 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 19
  %14 = load i32, i32* %13, align 8
  %15 = sitofp i32 %14 to float
  %16 = fdiv float %15, %7
  %17 = fdiv float %15, %12
  %18 = fcmp olt float %17, %16
  %19 = select i1 %18, float %17, float %16
  %20 = fcmp olt float %19, 1.000000e+00
  %21 = fmul float %19, %7
  %22 = fmul float %19, %12
  %23 = select i1 %20, float %21, float %7
  %24 = select i1 %20, float %22, float %12
  %25 = fptosi float %23 to i32
  %26 = fptosi float %24 to i32
  %27 = zext i32 %26 to i64
  %28 = shl nuw i64 %27, 32
  %29 = zext i32 %25 to i64
  %30 = or i64 %28, %29
  ret i64 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20XRWebGLDrawingBuffer15UseSharedBufferERKN3gpu13MailboxHolderE(%"class.blink::XRWebGLDrawingBuffer"*, %"struct.gpu::MailboxHolder"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::DrawingBuffer"*, %"class.blink::DrawingBuffer"** %3, align 8
  %5 = tail call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* %4) #10
  %6 = getelementptr inbounds %"class.gpu::gles2::GLES2Interface", %"class.gpu::gles2::GLES2Interface"* %5, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.gpu::MailboxHolder", %"struct.gpu::MailboxHolder"* %1, i64 0, i32 1, i32 0
  %8 = bitcast %"class.gpu::gles2::GLES2Interface"* %5 to void (%"class.gpu::InterfaceBase"*, i8*)***
  %9 = load void (%"class.gpu::InterfaceBase"*, i8*)**, void (%"class.gpu::InterfaceBase"*, i8*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %9, i64 3
  %11 = load void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %10, align 8
  tail call void %11(%"class.gpu::InterfaceBase"* %6, i8* %7) #10
  %12 = getelementptr inbounds %"struct.gpu::MailboxHolder", %"struct.gpu::MailboxHolder"* %1, i64 0, i32 0, i32 0, i64 0
  %13 = bitcast %"class.gpu::gles2::GLES2Interface"* %5 to i32 (%"class.gpu::gles2::GLES2Interface"*, i8*)***
  %14 = load i32 (%"class.gpu::gles2::GLES2Interface"*, i8*)**, i32 (%"class.gpu::gles2::GLES2Interface"*, i8*)*** %13, align 8
  %15 = getelementptr inbounds i32 (%"class.gpu::gles2::GLES2Interface"*, i8*)*, i32 (%"class.gpu::gles2::GLES2Interface"*, i8*)** %14, i64 353
  %16 = load i32 (%"class.gpu::gles2::GLES2Interface"*, i8*)*, i32 (%"class.gpu::gles2::GLES2Interface"*, i8*)** %15, align 8
  %17 = tail call i32 %16(%"class.gpu::gles2::GLES2Interface"* %5, i8* %12) #10
  %18 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 9
  store i32 %17, i32* %18, align 4
  %19 = bitcast %"class.gpu::gles2::GLES2Interface"* %5 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)***
  %20 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %20, i64 355
  %22 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %21, align 8
  tail call void %22(%"class.gpu::gles2::GLES2Interface"* %5, i32 %17, i32 35575) #10
  %23 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 18
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 2
  br i1 %25, label %26, label %41

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %26
  %31 = bitcast %"class.gpu::gles2::GLES2Interface"* %5 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)***
  %32 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %32, i64 79
  %34 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %33, align 8
  tail call void %34(%"class.gpu::gles2::GLES2Interface"* %5, i32 1, i32* %27) #10
  %35 = load i32, i32* %27, align 4
  br label %36

36:                                               ; preds = %26, %30
  %37 = phi i32 [ %28, %26 ], [ %35, %30 ]
  %38 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %19, align 8
  %39 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %38, i64 15
  %40 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %39, align 8
  tail call void %40(%"class.gpu::gles2::GLES2Interface"* %5, i32 36160, i32 %37) #10
  br label %47

41:                                               ; preds = %2
  %42 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %19, align 8
  %45 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %44, i64 15
  %46 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %45, align 8
  tail call void %46(%"class.gpu::gles2::GLES2Interface"* %5, i32 36160, i32 %43) #10
  br label %47

47:                                               ; preds = %41, %36
  %48 = load i32, i32* %23, align 4
  %49 = icmp eq i32 %48, 1
  %50 = load i32, i32* %18, align 4
  br i1 %49, label %51, label %58

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 20
  %53 = load i32, i32* %52, align 4
  %54 = bitcast %"class.gpu::gles2::GLES2Interface"* %5 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)***
  %55 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)** %55, i64 241
  %57 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)** %56, align 8
  tail call void %57(%"class.gpu::gles2::GLES2Interface"* %5, i32 36160, i32 36064, i32 3553, i32 %50, i32 0, i32 %53) #10
  br label %63

58:                                               ; preds = %47
  %59 = bitcast %"class.gpu::gles2::GLES2Interface"* %5 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)***
  %60 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)** %60, i64 74
  %62 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)** %61, align 8
  tail call void %62(%"class.gpu::gles2::GLES2Interface"* %5, i32 36160, i32 36064, i32 3553, i32 %50, i32 0) #10
  br label %63

63:                                               ; preds = %58, %51
  %64 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 12
  %65 = load i8, i8* %64, align 2, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %63
  store i8 1, i8* %64, align 2
  br label %68

68:                                               ; preds = %63, %67
  %69 = load i32, i32* %23, align 4
  %70 = icmp eq i32 %69, 2
  br i1 %70, label %71, label %77

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 2
  %73 = load i32, i32* %72, align 8
  %74 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %19, align 8
  %75 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %74, i64 15
  %76 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %75, align 8
  tail call void %76(%"class.gpu::gles2::GLES2Interface"* %5, i32 36160, i32 %73) #10
  br label %77

77:                                               ; preds = %71, %68
  tail call void @_ZN5blink20XRWebGLDrawingBuffer21ClearBoundFramebufferEv(%"class.blink::XRWebGLDrawingBuffer"* %0)
  %78 = load %"class.blink::DrawingBuffer"*, %"class.blink::DrawingBuffer"** %3, align 8
  %79 = getelementptr inbounds %"class.blink::DrawingBuffer", %"class.blink::DrawingBuffer"* %78, i64 0, i32 3
  %80 = load %"class.blink::DrawingBuffer::Client"*, %"class.blink::DrawingBuffer::Client"** %79, align 8
  %81 = icmp eq %"class.blink::DrawingBuffer::Client"* %80, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %77
  %83 = bitcast %"class.blink::DrawingBuffer::Client"* %80 to void (%"class.blink::DrawingBuffer::Client"*)***
  %84 = load void (%"class.blink::DrawingBuffer::Client"*)**, void (%"class.blink::DrawingBuffer::Client"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.blink::DrawingBuffer::Client"*)*, void (%"class.blink::DrawingBuffer::Client"*)** %84, i64 7
  %86 = load void (%"class.blink::DrawingBuffer::Client"*)*, void (%"class.blink::DrawingBuffer::Client"*)** %85, align 8
  tail call void %86(%"class.blink::DrawingBuffer::Client"* nonnull %80) #10
  br label %87

87:                                               ; preds = %77, %82
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink20XRWebGLDrawingBuffer19WantExplicitResolveEv(%"class.blink::XRWebGLDrawingBuffer"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 18
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 2
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20XRWebGLDrawingBuffer21ClearBoundFramebufferEv(%"class.blink::XRWebGLDrawingBuffer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::DrawingBuffer"*, %"class.blink::DrawingBuffer"** %2, align 8
  %4 = tail call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* %3) #10
  %5 = bitcast %"class.gpu::gles2::GLES2Interface"* %4 to void (%"class.gpu::gles2::GLES2Interface"*, i8, i8, i8, i8)***
  %6 = load void (%"class.gpu::gles2::GLES2Interface"*, i8, i8, i8, i8)**, void (%"class.gpu::gles2::GLES2Interface"*, i8, i8, i8, i8)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i8, i8, i8, i8)*, void (%"class.gpu::gles2::GLES2Interface"*, i8, i8, i8, i8)** %6, i64 37
  %8 = load void (%"class.gpu::gles2::GLES2Interface"*, i8, i8, i8, i8)*, void (%"class.gpu::gles2::GLES2Interface"*, i8, i8, i8, i8)** %7, align 8
  tail call void %8(%"class.gpu::gles2::GLES2Interface"* %4, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1) #10
  %9 = bitcast %"class.gpu::gles2::GLES2Interface"* %4 to void (%"class.gpu::gles2::GLES2Interface"*, float, float, float, float)***
  %10 = load void (%"class.gpu::gles2::GLES2Interface"*, float, float, float, float)**, void (%"class.gpu::gles2::GLES2Interface"*, float, float, float, float)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, float, float, float, float)*, void (%"class.gpu::gles2::GLES2Interface"*, float, float, float, float)** %10, i64 33
  %12 = load void (%"class.gpu::gles2::GLES2Interface"*, float, float, float, float)*, void (%"class.gpu::gles2::GLES2Interface"*, float, float, float, float)** %11, align 8
  tail call void %12(%"class.gpu::gles2::GLES2Interface"* %4, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00) #10
  %13 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 15
  %14 = load i8, i8* %13, align 1, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %25, label %16

16:                                               ; preds = %1
  %17 = bitcast %"class.gpu::gles2::GLES2Interface"* %4 to void (%"class.gpu::gles2::GLES2Interface"*, i8)***
  %18 = load void (%"class.gpu::gles2::GLES2Interface"*, i8)**, void (%"class.gpu::gles2::GLES2Interface"*, i8)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i8)*, void (%"class.gpu::gles2::GLES2Interface"*, i8)** %18, i64 60
  %20 = load void (%"class.gpu::gles2::GLES2Interface"*, i8)*, void (%"class.gpu::gles2::GLES2Interface"*, i8)** %19, align 8
  tail call void %20(%"class.gpu::gles2::GLES2Interface"* %4, i8 zeroext 1) #10
  %21 = bitcast %"class.gpu::gles2::GLES2Interface"* %4 to void (%"class.gpu::gles2::GLES2Interface"*, float)***
  %22 = load void (%"class.gpu::gles2::GLES2Interface"*, float)**, void (%"class.gpu::gles2::GLES2Interface"*, float)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, float)*, void (%"class.gpu::gles2::GLES2Interface"*, float)** %22, i64 34
  %24 = load void (%"class.gpu::gles2::GLES2Interface"*, float)*, void (%"class.gpu::gles2::GLES2Interface"*, float)** %23, align 8
  tail call void %24(%"class.gpu::gles2::GLES2Interface"* %4, float 1.000000e+00) #10
  br label %25

25:                                               ; preds = %1, %16
  %26 = phi i32 [ 16640, %16 ], [ 16384, %1 ]
  %27 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 16
  %28 = load i8, i8* %27, align 2, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %25
  %31 = bitcast %"class.gpu::gles2::GLES2Interface"* %4 to void (%"class.gpu::gles2::GLES2Interface"*, i32)***
  br label %42

32:                                               ; preds = %25
  %33 = or i32 %26, 1024
  %34 = bitcast %"class.gpu::gles2::GLES2Interface"* %4 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)***
  %35 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %35, i64 172
  %37 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %36, align 8
  tail call void %37(%"class.gpu::gles2::GLES2Interface"* %4, i32 1028, i32 1) #10
  %38 = bitcast %"class.gpu::gles2::GLES2Interface"* %4 to void (%"class.gpu::gles2::GLES2Interface"*, i32)***
  %39 = load void (%"class.gpu::gles2::GLES2Interface"*, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32)** %39, i64 35
  %41 = load void (%"class.gpu::gles2::GLES2Interface"*, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32)** %40, align 8
  tail call void %41(%"class.gpu::gles2::GLES2Interface"* %4, i32 0) #10
  br label %42

42:                                               ; preds = %30, %32
  %43 = phi void (%"class.gpu::gles2::GLES2Interface"*, i32)*** [ %31, %30 ], [ %38, %32 ]
  %44 = phi i32 [ %26, %30 ], [ %33, %32 ]
  %45 = load void (%"class.gpu::gles2::GLES2Interface"*, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32)*** %43, align 8
  %46 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32)** %45, i64 63
  %47 = load void (%"class.gpu::gles2::GLES2Interface"*, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32)** %46, align 8
  tail call void %47(%"class.gpu::gles2::GLES2Interface"* %4, i32 3089) #10
  %48 = load void (%"class.gpu::gles2::GLES2Interface"*, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32)*** %43, align 8
  %49 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32)** %48, i64 28
  %50 = load void (%"class.gpu::gles2::GLES2Interface"*, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32)** %49, align 8
  tail call void %50(%"class.gpu::gles2::GLES2Interface"* %4, i32 %44) #10
  %51 = load %"class.blink::DrawingBuffer"*, %"class.blink::DrawingBuffer"** %2, align 8
  %52 = getelementptr inbounds %"class.blink::DrawingBuffer", %"class.blink::DrawingBuffer"* %51, i64 0, i32 3
  %53 = load %"class.blink::DrawingBuffer::Client"*, %"class.blink::DrawingBuffer::Client"** %52, align 8
  %54 = icmp eq %"class.blink::DrawingBuffer::Client"* %53, null
  br i1 %54, label %63, label %55

55:                                               ; preds = %42
  %56 = bitcast %"class.blink::DrawingBuffer::Client"* %53 to void (%"class.blink::DrawingBuffer::Client"*)***
  %57 = load void (%"class.blink::DrawingBuffer::Client"*)**, void (%"class.blink::DrawingBuffer::Client"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::DrawingBuffer::Client"*)*, void (%"class.blink::DrawingBuffer::Client"*)** %57, i64 1
  %59 = load void (%"class.blink::DrawingBuffer::Client"*)*, void (%"class.blink::DrawingBuffer::Client"*)** %58, align 8
  tail call void %59(%"class.blink::DrawingBuffer::Client"* nonnull %53) #10
  %60 = load void (%"class.blink::DrawingBuffer::Client"*)**, void (%"class.blink::DrawingBuffer::Client"*)*** %56, align 8
  %61 = getelementptr inbounds void (%"class.blink::DrawingBuffer::Client"*)*, void (%"class.blink::DrawingBuffer::Client"*)** %60, i64 2
  %62 = load void (%"class.blink::DrawingBuffer::Client"*)*, void (%"class.blink::DrawingBuffer::Client"*)** %61, align 8
  tail call void %62(%"class.blink::DrawingBuffer::Client"* nonnull %53) #10
  br label %63

63:                                               ; preds = %42, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20XRWebGLDrawingBuffer20DoneWithSharedBufferEv(%"class.blink::XRWebGLDrawingBuffer"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink20XRWebGLDrawingBuffer36BindAndResolveDestinationFramebufferEv(%"class.blink::XRWebGLDrawingBuffer"* %0)
  %2 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::DrawingBuffer"*, %"class.blink::DrawingBuffer"** %2, align 8
  %4 = tail call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* %3) #10
  %5 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 14
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = bitcast %"class.gpu::gles2::GLES2Interface"* %4 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)***
  br label %21

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = bitcast %"class.gpu::gles2::GLES2Interface"* %4 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)***
  %14 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %14, i64 15
  %16 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %15, align 8
  tail call void %16(%"class.gpu::gles2::GLES2Interface"* %4, i32 36160, i32 %12) #10
  %17 = bitcast %"class.gpu::gles2::GLES2Interface"* %4 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)***
  %18 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)** %18, i64 316
  %20 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32*)** %19, align 8
  tail call void %20(%"class.gpu::gles2::GLES2Interface"* %4, i32 36160, i32 2, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @_ZZN5blink20XRWebGLDrawingBuffer20DoneWithSharedBufferEvE12kAttachments, i64 0, i64 0)) #10
  br label %21

21:                                               ; preds = %8, %10
  %22 = phi void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*** [ %9, %8 ], [ %13, %10 ]
  %23 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %23, i64 15
  %25 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %24, align 8
  tail call void %25(%"class.gpu::gles2::GLES2Interface"* %4, i32 36160, i32 0) #10
  %26 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 9
  %27 = load i32, i32* %26, align 4
  %28 = bitcast %"class.gpu::gles2::GLES2Interface"* %4 to void (%"class.gpu::gles2::GLES2Interface"*, i32)***
  %29 = load void (%"class.gpu::gles2::GLES2Interface"*, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32)** %29, i64 356
  %31 = load void (%"class.gpu::gles2::GLES2Interface"*, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32)** %30, align 8
  tail call void %31(%"class.gpu::gles2::GLES2Interface"* %4, i32 %27) #10
  %32 = bitcast %"class.gpu::gles2::GLES2Interface"* %4 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)***
  %33 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %33, i64 57
  %35 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %34, align 8
  tail call void %35(%"class.gpu::gles2::GLES2Interface"* %4, i32 1, i32* %26) #10
  store i32 0, i32* %26, align 4
  %36 = load %"class.blink::DrawingBuffer"*, %"class.blink::DrawingBuffer"** %2, align 8
  %37 = getelementptr inbounds %"class.blink::DrawingBuffer", %"class.blink::DrawingBuffer"* %36, i64 0, i32 3
  %38 = load %"class.blink::DrawingBuffer::Client"*, %"class.blink::DrawingBuffer::Client"** %37, align 8
  %39 = icmp eq %"class.blink::DrawingBuffer::Client"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %21
  %41 = bitcast %"class.blink::DrawingBuffer::Client"* %38 to void (%"class.blink::DrawingBuffer::Client"*)***
  %42 = load void (%"class.blink::DrawingBuffer::Client"*)**, void (%"class.blink::DrawingBuffer::Client"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::DrawingBuffer::Client"*)*, void (%"class.blink::DrawingBuffer::Client"*)** %42, i64 7
  %44 = load void (%"class.blink::DrawingBuffer::Client"*)*, void (%"class.blink::DrawingBuffer::Client"*)** %43, align 8
  tail call void %44(%"class.blink::DrawingBuffer::Client"* nonnull %38) #10
  br label %45

45:                                               ; preds = %21, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20XRWebGLDrawingBuffer36BindAndResolveDestinationFramebufferEv(%"class.blink::XRWebGLDrawingBuffer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::DrawingBuffer"*, %"class.blink::DrawingBuffer"** %2, align 8
  %4 = tail call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* %3) #10
  %5 = load %"class.blink::DrawingBuffer"*, %"class.blink::DrawingBuffer"** %2, align 8
  %6 = getelementptr inbounds %"class.blink::DrawingBuffer", %"class.blink::DrawingBuffer"* %5, i64 0, i32 3
  %7 = load %"class.blink::DrawingBuffer::Client"*, %"class.blink::DrawingBuffer::Client"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 18
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 2
  %11 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = bitcast %"class.gpu::gles2::GLES2Interface"* %4 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)***
  %14 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %14, i64 15
  %16 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %15, align 8
  br i1 %10, label %17, label %43

17:                                               ; preds = %1
  tail call void %16(%"class.gpu::gles2::GLES2Interface"* %4, i32 36008, i32 %12) #10
  %18 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %13, align 8
  %21 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %20, i64 15
  %22 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %21, align 8
  tail call void %22(%"class.gpu::gles2::GLES2Interface"* %4, i32 36009, i32 %19) #10
  %23 = bitcast %"class.gpu::gles2::GLES2Interface"* %4 to void (%"class.gpu::gles2::GLES2Interface"*, i32)***
  %24 = load void (%"class.gpu::gles2::GLES2Interface"*, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32)** %24, i64 63
  %26 = load void (%"class.gpu::gles2::GLES2Interface"*, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32)** %25, align 8
  tail call void %26(%"class.gpu::gles2::GLES2Interface"* %4, i32 3089) #10
  %27 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 8, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 8, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = bitcast %"class.gpu::gles2::GLES2Interface"* %4 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)***
  %32 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)** %32, i64 237
  %34 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)** %33, align 8
  tail call void %34(%"class.gpu::gles2::GLES2Interface"* %4, i32 0, i32 0, i32 %28, i32 %30, i32 0, i32 0, i32 %28, i32 %30, i32 16384, i32 9728) #10
  %35 = load i32, i32* %18, align 4
  %36 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %13, align 8
  %37 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %36, i64 15
  %38 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %37, align 8
  tail call void %38(%"class.gpu::gles2::GLES2Interface"* %4, i32 36160, i32 %35) #10
  %39 = bitcast %"class.blink::DrawingBuffer::Client"* %7 to void (%"class.blink::DrawingBuffer::Client"*)***
  %40 = load void (%"class.blink::DrawingBuffer::Client"*)**, void (%"class.blink::DrawingBuffer::Client"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::DrawingBuffer::Client"*)*, void (%"class.blink::DrawingBuffer::Client"*)** %40, i64 1
  %42 = load void (%"class.blink::DrawingBuffer::Client"*)*, void (%"class.blink::DrawingBuffer::Client"*)** %41, align 8
  tail call void %42(%"class.blink::DrawingBuffer::Client"* %7) #10
  br label %44

43:                                               ; preds = %1
  tail call void %16(%"class.gpu::gles2::GLES2Interface"* %4, i32 36160, i32 %12) #10
  br label %44

44:                                               ; preds = %43, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* @_ZN5blink20XRWebGLDrawingBuffer17CreateColorBufferEv(%"class.blink::XRWebGLDrawingBuffer"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.base::WeakPtr", align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.gfx::Size"*
  %7 = alloca %"class.gfx::ColorSpace", align 4
  %8 = alloca %"struct.gpu::SyncToken", align 8
  %9 = alloca %"class.base::WeakPtr", align 8
  %10 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 1, i32 0
  %11 = load %"class.blink::DrawingBuffer"*, %"class.blink::DrawingBuffer"** %10, align 8
  %12 = tail call %"class.blink::WebGraphicsContext3DProvider"* @_ZN5blink13DrawingBuffer15ContextProviderEv(%"class.blink::DrawingBuffer"* %11) #10
  %13 = bitcast %"class.blink::WebGraphicsContext3DProvider"* %12 to %"class.gpu::SharedImageInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)***
  %14 = load %"class.gpu::SharedImageInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)**, %"class.gpu::SharedImageInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.gpu::SharedImageInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)*, %"class.gpu::SharedImageInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)** %14, i64 16
  %16 = load %"class.gpu::SharedImageInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)*, %"class.gpu::SharedImageInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)** %15, align 8
  %17 = tail call %"class.gpu::SharedImageInterface"* %16(%"class.blink::WebGraphicsContext3DProvider"* %12) #10
  %18 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #10
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %20 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false)
  %21 = load i8, i8* %20, align 1, !range !2
  %22 = icmp eq i8 %21, 0
  %23 = select i1 %22, i32 14, i32 0
  %24 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 8
  %26 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %25, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 8, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %27, 0
  %31 = select i1 %30, i32 %27, i32 0
  %32 = icmp sgt i32 %29, 0
  %33 = select i1 %32, i32 %29, i32 0
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 32
  %36 = zext i32 %31 to i64
  %37 = or i64 %35, %36
  store i64 %37, i64* %5, align 8
  %38 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %38) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %38, i8 0, i64 68, i1 false) #10
  %39 = bitcast %"class.gpu::SharedImageInterface"* %17 to { i64, i64 } (%"class.gpu::SharedImageInterface"*, i32, %"class.gfx::Size"*, %"class.gfx::ColorSpace"*, i32, i32, i32, i32)***
  %40 = load { i64, i64 } (%"class.gpu::SharedImageInterface"*, i32, %"class.gfx::Size"*, %"class.gfx::ColorSpace"*, i32, i32, i32, i32)**, { i64, i64 } (%"class.gpu::SharedImageInterface"*, i32, %"class.gfx::Size"*, %"class.gfx::ColorSpace"*, i32, i32, i32, i32)*** %39, align 8
  %41 = getelementptr inbounds { i64, i64 } (%"class.gpu::SharedImageInterface"*, i32, %"class.gfx::Size"*, %"class.gfx::ColorSpace"*, i32, i32, i32, i32)*, { i64, i64 } (%"class.gpu::SharedImageInterface"*, i32, %"class.gfx::Size"*, %"class.gfx::ColorSpace"*, i32, i32, i32, i32)** %40, i64 2
  %42 = load { i64, i64 } (%"class.gpu::SharedImageInterface"*, i32, %"class.gfx::Size"*, %"class.gfx::ColorSpace"*, i32, i32, i32, i32)*, { i64, i64 } (%"class.gpu::SharedImageInterface"*, i32, %"class.gfx::Size"*, %"class.gfx::ColorSpace"*, i32, i32, i32, i32)** %41, align 8
  %43 = call { i64, i64 } %42(%"class.gpu::SharedImageInterface"* %17, i32 %23, %"class.gfx::Size"* nonnull dereferenceable(8) %6, %"class.gfx::ColorSpace"* nonnull dereferenceable(68) %7, i32 0, i32 2, i32 11, i32 0) #10
  %44 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %45 = extractvalue { i64, i64 } %43, 0
  store i64 %45, i64* %44, align 8
  %46 = extractvalue { i64, i64 } %43, 1
  store i64 %46, i64* %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %38) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  %47 = load %"class.blink::DrawingBuffer"*, %"class.blink::DrawingBuffer"** %10, align 8
  %48 = call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* %47) #10
  %49 = getelementptr inbounds %"class.gpu::gles2::GLES2Interface", %"class.gpu::gles2::GLES2Interface"* %48, i64 0, i32 0
  %50 = getelementptr inbounds %"struct.gpu::SyncToken", %"struct.gpu::SyncToken"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #10
  %51 = bitcast %"class.gpu::SharedImageInterface"* %17 to void (%"struct.gpu::SyncToken"*, %"class.gpu::SharedImageInterface"*)***
  %52 = load void (%"struct.gpu::SyncToken"*, %"class.gpu::SharedImageInterface"*)**, void (%"struct.gpu::SyncToken"*, %"class.gpu::SharedImageInterface"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"struct.gpu::SyncToken"*, %"class.gpu::SharedImageInterface"*)*, void (%"struct.gpu::SyncToken"*, %"class.gpu::SharedImageInterface"*)** %52, i64 11
  %54 = load void (%"struct.gpu::SyncToken"*, %"class.gpu::SharedImageInterface"*)*, void (%"struct.gpu::SyncToken"*, %"class.gpu::SharedImageInterface"*)** %53, align 8
  call void %54(%"struct.gpu::SyncToken"* nonnull sret %8, %"class.gpu::SharedImageInterface"* %17) #10
  %55 = bitcast %"class.gpu::gles2::GLES2Interface"* %48 to void (%"class.gpu::InterfaceBase"*, i8*)***
  %56 = load void (%"class.gpu::InterfaceBase"*, i8*)**, void (%"class.gpu::InterfaceBase"*, i8*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %56, i64 3
  %58 = load void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %57, align 8
  call void %58(%"class.gpu::InterfaceBase"* %49, i8* nonnull %50) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #10
  %59 = bitcast %"class.gpu::gles2::GLES2Interface"* %48 to i32 (%"class.gpu::gles2::GLES2Interface"*, i8*)***
  %60 = load i32 (%"class.gpu::gles2::GLES2Interface"*, i8*)**, i32 (%"class.gpu::gles2::GLES2Interface"*, i8*)*** %59, align 8
  %61 = getelementptr inbounds i32 (%"class.gpu::gles2::GLES2Interface"*, i8*)*, i32 (%"class.gpu::gles2::GLES2Interface"*, i8*)** %60, i64 353
  %62 = load i32 (%"class.gpu::gles2::GLES2Interface"*, i8*)*, i32 (%"class.gpu::gles2::GLES2Interface"*, i8*)** %61, align 8
  %63 = call i32 %62(%"class.gpu::gles2::GLES2Interface"* %48, i8* nonnull %18) #10
  %64 = load %"class.blink::DrawingBuffer"*, %"class.blink::DrawingBuffer"** %10, align 8
  %65 = getelementptr inbounds %"class.blink::DrawingBuffer", %"class.blink::DrawingBuffer"* %64, i64 0, i32 3
  %66 = load %"class.blink::DrawingBuffer::Client"*, %"class.blink::DrawingBuffer::Client"** %65, align 8
  %67 = bitcast %"class.blink::DrawingBuffer::Client"* %66 to void (%"class.blink::DrawingBuffer::Client"*)***
  %68 = load void (%"class.blink::DrawingBuffer::Client"*)**, void (%"class.blink::DrawingBuffer::Client"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.blink::DrawingBuffer::Client"*)*, void (%"class.blink::DrawingBuffer::Client"*)** %68, i64 4
  %70 = load void (%"class.blink::DrawingBuffer::Client"*)*, void (%"class.blink::DrawingBuffer::Client"*)** %69, align 8
  call void %70(%"class.blink::DrawingBuffer::Client"* %66) #10
  %71 = bitcast %"class.base::WeakPtr"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #10
  %72 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #10, !noalias !3
  %73 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 21, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %73) #10, !noalias !3
  %74 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 21, i32 0, i32 1
  %75 = load i64, i64* %74, align 8, !noalias !3
  %76 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %76, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %75) #10
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #10, !noalias !3
  %77 = bitcast %"class.base::WeakPtr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77)
  %78 = call i8* @_Znwm(i64 112) #11
  %79 = bitcast i8* %78 to %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*
  %80 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %80, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %81) #10
  %82 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0, i32 1
  %83 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  store i64 %84, i64* %82, align 8
  %85 = bitcast i8* %78 to i32*
  store i32 0, i32* %85, align 4
  %86 = call i64 @_ZN4base14PlatformThread10CurrentRefEv() #10
  %87 = getelementptr inbounds i8, i8* %78, i64 8
  %88 = bitcast i8* %87 to i64*
  store i64 %86, i64* %88, align 8
  %89 = getelementptr inbounds i8, i8* %78, i64 16
  %90 = bitcast i8* %89 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %90, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %80) #10
  %91 = getelementptr inbounds i8, i8* %78, i64 24
  %92 = bitcast i8* %91 to i64*
  %93 = load i64, i64* %82, align 8
  store i64 %93, i64* %92, align 8
  %94 = getelementptr inbounds i8, i8* %78, i64 32
  %95 = bitcast %"class.blink::IntSize"* %25 to i64*
  %96 = bitcast i8* %94 to i64*
  %97 = load i64, i64* %95, align 4
  store i64 %97, i64* %96, align 8
  %98 = getelementptr inbounds i8, i8* %78, i64 40
  %99 = bitcast i8* %98 to i32*
  store i32 %63, i32* %99, align 8
  %100 = getelementptr inbounds i8, i8* %78, i64 44
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %100, i8* nonnull align 8 %18, i64 16, i1 false) #10
  %101 = getelementptr inbounds i8, i8* %78, i64 64
  %102 = bitcast i8* %101 to %"struct.gpu::SyncToken"*
  call void @_ZN3gpu9SyncTokenC1Ev(%"struct.gpu::SyncToken"* %102) #10
  %103 = getelementptr inbounds i8, i8* %78, i64 88
  %104 = bitcast i8* %103 to %"struct.gpu::SyncToken"*
  call void @_ZN3gpu9SyncTokenC1Ev(%"struct.gpu::SyncToken"* %104) #10
  %105 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %105) #10
  %106 = atomicrmw add i32* %85, i32 1 monotonic
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77)
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %76) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #10
  ret %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %79
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* @_ZN5blink20XRWebGLDrawingBuffer26CreateOrRecycleColorBufferEv(%"class.blink::XRWebGLDrawingBuffer"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::DequeIterator", align 8
  %3 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 13
  %4 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 13, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 13, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %65, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.WTF::DequeIterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::Deque.61"* %3, %"class.WTF::Deque.61"** %11, align 8, !alias.scope !6
  %12 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %2, i64 0, i32 0, i32 1
  store i32 %7, i32* %12, align 8, !alias.scope !6
  %13 = icmp eq i32 %7, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  br label %17

17:                                               ; preds = %14, %9
  %18 = phi i32 [ %16, %14 ], [ %7, %9 ]
  %19 = add i32 %18, -1
  store i32 %19, i32* %12, align 8
  %20 = call dereferenceable(8) %class.scoped_refptr.60* @_ZNK3WTF13DequeIteratorI13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEELj0ENS_18PartitionAllocatorEEdeEv(%"class.WTF::DequeIterator"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  %21 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %20, i64 0, i32 0
  %22 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %21, align 8
  store %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* null, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %21, align 8
  %23 = load i32, i32* %6, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  br label %28

28:                                               ; preds = %25, %17
  %29 = phi i32 [ %27, %25 ], [ %23, %17 ]
  %30 = add i32 %29, -1
  store i32 %30, i32* %6, align 4
  %31 = getelementptr inbounds %"class.WTF::Deque.61", %"class.WTF::Deque.61"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %class.scoped_refptr.60*, %class.scoped_refptr.60** %31, align 8
  %33 = zext i32 %30 to i64
  %34 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %32, i64 %33
  %35 = zext i32 %29 to i64
  %36 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %32, i64 %35
  br label %37

37:                                               ; preds = %48, %28
  %38 = phi %class.scoped_refptr.60* [ %49, %48 ], [ %34, %28 ]
  %39 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %38, i64 0, i32 0
  %40 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %39, align 8
  %41 = icmp eq %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %40, null
  br i1 %41, label %48, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw sub i32* %43, i32 1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  call void @_ZN5blink20XRWebGLDrawingBuffer11ColorBufferD2Ev(%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* nonnull %40) #10
  %47 = bitcast %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %40 to i8*
  call void @_ZdlPv(i8* %47) #11
  br label %48

48:                                               ; preds = %46, %42, %37
  %49 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %38, i64 1
  %50 = icmp eq %class.scoped_refptr.60* %49, %36
  br i1 %50, label %51, label %37

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %22, i64 0, i32 7, i32 1
  %53 = load i8, i8* %52, align 1
  %54 = icmp eq i8 %53, -1
  br i1 %54, label %67, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 1, i32 0
  %57 = load %"class.blink::DrawingBuffer"*, %"class.blink::DrawingBuffer"** %56, align 8
  %58 = call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* %57) #10
  %59 = getelementptr inbounds %"class.gpu::gles2::GLES2Interface", %"class.gpu::gles2::GLES2Interface"* %58, i64 0, i32 0
  %60 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %22, i64 0, i32 7, i32 0
  %61 = bitcast %"class.gpu::gles2::GLES2Interface"* %58 to void (%"class.gpu::InterfaceBase"*, i8*)***
  %62 = load void (%"class.gpu::InterfaceBase"*, i8*)**, void (%"class.gpu::InterfaceBase"*, i8*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %62, i64 3
  %64 = load void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %63, align 8
  call void %64(%"class.gpu::InterfaceBase"* %59, i8* %60) #10
  br label %67

65:                                               ; preds = %1
  %66 = tail call %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* @_ZN5blink20XRWebGLDrawingBuffer17CreateColorBufferEv(%"class.blink::XRWebGLDrawingBuffer"* %0)
  br label %67

67:                                               ; preds = %51, %55, %65
  %68 = phi %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* [ %66, %65 ], [ %22, %55 ], [ %22, %51 ]
  ret %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %68
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20XRWebGLDrawingBuffer16SwapColorBuffersEv(%"class.blink::XRWebGLDrawingBuffer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::DrawingBuffer"*, %"class.blink::DrawingBuffer"** %2, align 8
  %4 = tail call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* %3) #10
  %5 = load %"class.blink::DrawingBuffer"*, %"class.blink::DrawingBuffer"** %2, align 8
  %6 = getelementptr inbounds %"class.blink::DrawingBuffer", %"class.blink::DrawingBuffer"* %5, i64 0, i32 3
  %7 = load %"class.blink::DrawingBuffer::Client"*, %"class.blink::DrawingBuffer::Client"** %6, align 8
  tail call void @_ZN5blink20XRWebGLDrawingBuffer36BindAndResolveDestinationFramebufferEv(%"class.blink::XRWebGLDrawingBuffer"* %0)
  %8 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 5
  %9 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %8, i64 0, i32 0
  %10 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %9, align 8
  %11 = icmp eq %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %10, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = bitcast %"class.gpu::gles2::GLES2Interface"* %4 to void (%"class.gpu::gles2::GLES2Interface"*, i32)***
  %16 = load void (%"class.gpu::gles2::GLES2Interface"*, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32)** %16, i64 356
  %18 = load void (%"class.gpu::gles2::GLES2Interface"*, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32)** %17, align 8
  tail call void %18(%"class.gpu::gles2::GLES2Interface"* %4, i32 %14) #10
  %19 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %9, align 8
  %20 = icmp eq %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic
  %24 = ptrtoint %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %19 to i64
  br label %25

25:                                               ; preds = %1, %12, %21
  %26 = phi i64 [ 0, %12 ], [ %24, %21 ], [ 0, %1 ]
  %27 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 6
  %28 = bitcast %class.scoped_refptr.60* %27 to i64*
  %29 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %27, i64 0, i32 0
  %30 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %29, align 8
  store i64 %26, i64* %28, align 8
  %31 = icmp eq %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %30, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw sub i32* %33, i32 1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  tail call void @_ZN5blink20XRWebGLDrawingBuffer11ColorBufferD2Ev(%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* nonnull %30) #10
  %37 = bitcast %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %30 to i8*
  tail call void @_ZdlPv(i8* %37) #11
  br label %38

38:                                               ; preds = %25, %32, %36
  %39 = tail call %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* @_ZN5blink20XRWebGLDrawingBuffer26CreateOrRecycleColorBufferEv(%"class.blink::XRWebGLDrawingBuffer"* %0)
  %40 = ptrtoint %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %39 to i64
  %41 = bitcast %class.scoped_refptr.60* %8 to i64*
  %42 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %9, align 8
  store i64 %40, i64* %41, align 8
  %43 = icmp eq %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %42, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw sub i32* %45, i32 1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %50

48:                                               ; preds = %44
  tail call void @_ZN5blink20XRWebGLDrawingBuffer11ColorBufferD2Ev(%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* nonnull %42) #10
  %49 = bitcast %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %42 to i8*
  tail call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %38, %44, %48
  %51 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %9, align 8
  %52 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %51, i64 0, i32 4
  %53 = load i32, i32* %52, align 8
  %54 = bitcast %"class.gpu::gles2::GLES2Interface"* %4 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)***
  %55 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %55, i64 355
  %57 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %56, align 8
  tail call void %57(%"class.gpu::gles2::GLES2Interface"* %4, i32 %53, i32 35575) #10
  %58 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 18
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 1
  %61 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %9, align 8
  %62 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %61, i64 0, i32 4
  %63 = load i32, i32* %62, align 8
  br i1 %60, label %64, label %71

64:                                               ; preds = %50
  %65 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 20
  %66 = load i32, i32* %65, align 4
  %67 = bitcast %"class.gpu::gles2::GLES2Interface"* %4 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)***
  %68 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)** %68, i64 241
  %70 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)** %69, align 8
  tail call void %70(%"class.gpu::gles2::GLES2Interface"* %4, i32 36160, i32 36064, i32 3553, i32 %63, i32 0, i32 %66) #10
  br label %76

71:                                               ; preds = %50
  %72 = bitcast %"class.gpu::gles2::GLES2Interface"* %4 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)***
  %73 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)** %73, i64 74
  %75 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)** %74, align 8
  tail call void %75(%"class.gpu::gles2::GLES2Interface"* %4, i32 36160, i32 36064, i32 3553, i32 %63, i32 0) #10
  br label %76

76:                                               ; preds = %71, %64
  %77 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 11
  %78 = load i8, i8* %77, align 1, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %76
  store i8 1, i8* %77, align 1
  br label %81

81:                                               ; preds = %76, %80
  %82 = load i32, i32* %58, align 4
  %83 = icmp eq i32 %82, 2
  br i1 %83, label %84, label %90

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 2
  %86 = load i32, i32* %85, align 8
  %87 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %54, align 8
  %88 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %87, i64 15
  %89 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %88, align 8
  tail call void %89(%"class.gpu::gles2::GLES2Interface"* %4, i32 36160, i32 %86) #10
  br label %90

90:                                               ; preds = %84, %81
  tail call void @_ZN5blink20XRWebGLDrawingBuffer21ClearBoundFramebufferEv(%"class.blink::XRWebGLDrawingBuffer"* %0)
  %91 = bitcast %"class.blink::DrawingBuffer::Client"* %7 to void (%"class.blink::DrawingBuffer::Client"*)***
  %92 = load void (%"class.blink::DrawingBuffer::Client"*)**, void (%"class.blink::DrawingBuffer::Client"*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.blink::DrawingBuffer::Client"*)*, void (%"class.blink::DrawingBuffer::Client"*)** %92, i64 7
  %94 = load void (%"class.blink::DrawingBuffer::Client"*)*, void (%"class.blink::DrawingBuffer::Client"*)** %93, align 8
  tail call void %94(%"class.blink::DrawingBuffer::Client"* %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StaticBitmapImage"* @_ZN5blink20XRWebGLDrawingBuffer27TransferToStaticBitmapImageEv(%"class.blink::XRWebGLDrawingBuffer"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp, align 8
  %3 = alloca %class.sk_sp.282, align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %struct.SkImageInfo, align 16
  %6 = alloca %"class.base::WeakPtr.16", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 1, i32 0
  %9 = load %"class.blink::DrawingBuffer"*, %"class.blink::DrawingBuffer"** %8, align 8
  %10 = tail call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* %9) #10
  %11 = load %"class.blink::DrawingBuffer"*, %"class.blink::DrawingBuffer"** %8, align 8
  %12 = getelementptr inbounds %"class.blink::DrawingBuffer", %"class.blink::DrawingBuffer"* %11, i64 0, i32 39
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %34

15:                                               ; preds = %1
  tail call void @_ZN5blink20XRWebGLDrawingBuffer16SwapColorBuffersEv(%"class.blink::XRWebGLDrawingBuffer"* %0)
  %16 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 6, i32 0
  %17 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %16, align 8
  %18 = icmp eq %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic
  br label %22

22:                                               ; preds = %19, %15
  %23 = ptrtoint %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %17 to i64
  %24 = getelementptr inbounds %"class.gpu::gles2::GLES2Interface", %"class.gpu::gles2::GLES2Interface"* %10, i64 0, i32 0
  %25 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %17, i64 0, i32 6
  %26 = getelementptr inbounds %"struct.gpu::SyncToken", %"struct.gpu::SyncToken"* %25, i64 0, i32 0
  %27 = bitcast %"class.gpu::gles2::GLES2Interface"* %10 to void (%"class.gpu::InterfaceBase"*, i8*)***
  %28 = load void (%"class.gpu::InterfaceBase"*, i8*)**, void (%"class.gpu::InterfaceBase"*, i8*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %28, i64 1
  %30 = load void (%"class.gpu::InterfaceBase"*, i8*)*, void (%"class.gpu::InterfaceBase"*, i8*)** %29, align 8
  tail call void %30(%"class.gpu::InterfaceBase"* %24, i8* %26) #10
  %31 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %17, i64 0, i32 6, i32 1
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, -1
  br i1 %33, label %34, label %72

34:                                               ; preds = %22, %1
  %35 = phi i64 [ 0, %1 ], [ %23, %22 ]
  %36 = inttoptr i64 %35 to %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*
  %37 = bitcast %class.sk_sp* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  %38 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  store %class.SkSurface* inttoptr (i64 -6148914691236517206 to %class.SkSurface*), %class.SkSurface** %38, align 8
  %39 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 8, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 8, i32 1
  %42 = load i32, i32* %41, align 4
  call void @_ZN9SkSurface19MakeRasterN32PremulEiiPK14SkSurfaceProps(%class.sk_sp* nonnull sret %2, i32 %40, i32 %42, %class.SkSurfaceProps* null) #10
  %43 = load %class.SkSurface*, %class.SkSurface** %38, align 8
  call void @_ZN9SkSurface17makeImageSnapshotEv(%class.sk_sp.282* nonnull sret %3, %class.SkSurface* %43) #10
  %44 = call %"class.blink::UnacceleratedStaticBitmapImage"* @_ZN5blink30UnacceleratedStaticBitmapImage6CreateE5sk_spI7SkImageENS_16ImageOrientationE(%class.sk_sp.282* nonnull %3, i8 1) #10
  %45 = ptrtoint %"class.blink::UnacceleratedStaticBitmapImage"* %44 to i64
  %46 = getelementptr inbounds %class.sk_sp.282, %class.sk_sp.282* %3, i64 0, i32 0
  %47 = load %class.SkImage*, %class.SkImage** %46, align 8
  %48 = icmp eq %class.SkImage* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %34
  %50 = getelementptr inbounds %class.SkImage, %class.SkImage* %47, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 -1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %59

53:                                               ; preds = %49
  %54 = bitcast %class.SkImage* %47 to %class.SkRefCntBase*
  %55 = bitcast %class.SkImage* %47 to void (%class.SkRefCntBase*)***
  %56 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %55, align 8
  %57 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, i64 2
  %58 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %57, align 8
  call void %58(%class.SkRefCntBase* nonnull %54) #10
  br label %59

59:                                               ; preds = %34, %49, %53
  %60 = load %class.SkSurface*, %class.SkSurface** %38, align 8
  %61 = icmp eq %class.SkSurface* %60, null
  br i1 %61, label %125, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %60, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %125

66:                                               ; preds = %62
  %67 = bitcast %class.SkSurface* %60 to %class.SkRefCntBase*
  %68 = bitcast %class.SkSurface* %60 to void (%class.SkRefCntBase*)***
  %69 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %68, align 8
  %70 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, i64 2
  %71 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, align 8
  call void %71(%class.SkRefCntBase* nonnull %67) #10
  br label %125

72:                                               ; preds = %22
  %73 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #10
  %74 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %74, align 8
  %75 = tail call i8* @_Znwm(i64 48) #11, !noalias !9
  %76 = bitcast i8* %75 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %76, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*, i1)* @_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEERKN3gpu9SyncTokenEbEJS7_EEEFvSB_bEE7RunOnceEPNS0_13BindStateBaseESB_b to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFv13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEERKN3gpu9SyncTokenEbEJS6_EE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !9
  %77 = getelementptr inbounds i8, i8* %75, i64 32
  %78 = bitcast i8* %77 to i64*
  store i64 ptrtoint (void (%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.gpu::SyncToken"*, i1)* @_ZN5blink20XRWebGLDrawingBuffer21NotifyMailboxReleasedE13scoped_refptrINS0_11ColorBufferEERKN3gpu9SyncTokenEb to i64), i64* %78, align 8, !noalias !9
  %79 = getelementptr inbounds i8, i8* %75, i64 40
  %80 = bitcast i8* %79 to %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"**
  store %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %17, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %80, align 8, !noalias !9
  br i1 %18, label %84, label %81

81:                                               ; preds = %72
  %82 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 1 monotonic, !noalias !9
  br label %84

84:                                               ; preds = %72, %81
  %85 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %75, i8** %85, align 8, !alias.scope !9
  %86 = bitcast %struct.SkImageInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #10
  %87 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 0, i32 0
  %88 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 8, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 8, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = zext i32 %91 to i64
  %93 = shl nuw i64 %92, 32
  %94 = zext i32 %89 to i64
  %95 = or i64 %93, %94
  %96 = bitcast %struct.SkImageInfo* %5 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %96, align 16, !alias.scope !14
  %97 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 1
  %98 = bitcast %struct.SkISize* %97 to i64*
  store i64 %95, i64* %98, align 16, !alias.scope !14
  %99 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %17, i64 0, i32 5
  %100 = load %"class.blink::DrawingBuffer"*, %"class.blink::DrawingBuffer"** %8, align 8
  call void @_ZN5blink13DrawingBuffer22ContextProviderWeakPtrEv(%"class.base::WeakPtr.16"* nonnull sret %6, %"class.blink::DrawingBuffer"* %100) #10
  %101 = call i64 @_ZN4base14PlatformThread10CurrentRefEv() #10
  %102 = call %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() #10
  %103 = bitcast %"class.blink::Thread"* %102 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %104 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %103, align 8
  %105 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %104, i64 3
  %106 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %105, align 8
  %107 = call %"class.base::SingleThreadTaskRunner"* %106(%"class.blink::Thread"* %102) #10
  %108 = ptrtoint i8* %75 to i64
  %109 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %108, i64* %109, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %74, align 8
  %110 = ptrtoint %"class.base::SingleThreadTaskRunner"* %107 to i64
  %111 = call %"class.blink::AcceleratedStaticBitmapImage"* @_ZN5blink28AcceleratedStaticBitmapImage23CreateFromCanvasMailboxERKN3gpu7MailboxERKNS1_9SyncTokenEjRK11SkImageInfojbN4base7WeakPtrINS_35WebGraphicsContext3DProviderWrapperEEENSB_17PlatformThreadRefE13scoped_refptrINSB_22SingleThreadTaskRunnerEENSB_12OnceCallbackIFvS7_bEEE(%"struct.gpu::Mailbox"* dereferenceable(16) %99, %"struct.gpu::SyncToken"* dereferenceable(24) %25, i32 0, %struct.SkImageInfo* nonnull dereferenceable(24) %5, i32 3553, i1 zeroext false, %"class.base::WeakPtr.16"* nonnull %6, i64 %101, i64 %110, %"class.base::OnceCallback"* nonnull %7) #10
  %112 = ptrtoint %"class.blink::AcceleratedStaticBitmapImage"* %111 to i64
  %113 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %113) #10
  %114 = getelementptr inbounds %"class.base::WeakPtr.16", %"class.base::WeakPtr.16"* %6, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %114) #10
  %115 = load %class.SkColorSpace*, %class.SkColorSpace** %87, align 16
  %116 = icmp eq %class.SkColorSpace* %115, null
  br i1 %116, label %123, label %117

117:                                              ; preds = %84
  %118 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = atomicrmw add i32* %118, i32 -1 acq_rel
  %120 = icmp eq i32 %119, 1
  br i1 %120, label %121, label %123

121:                                              ; preds = %117
  %122 = bitcast %class.SkColorSpace* %115 to i8*
  call void @_ZdlPv(i8* %122) #11
  br label %123

123:                                              ; preds = %84, %117, %121
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #10
  %124 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %124) #10
  br label %125

125:                                              ; preds = %66, %62, %59, %123
  %126 = phi i8* [ %73, %123 ], [ %37, %59 ], [ %37, %62 ], [ %37, %66 ]
  %127 = phi %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* [ %17, %123 ], [ %36, %59 ], [ %36, %62 ], [ %36, %66 ]
  %128 = phi i64 [ %112, %123 ], [ %45, %59 ], [ %45, %62 ], [ %45, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #10
  %129 = icmp eq %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %127, null
  br i1 %129, label %136, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %127, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = atomicrmw sub i32* %131, i32 1 acq_rel
  %133 = icmp eq i32 %132, 1
  br i1 %133, label %134, label %136

134:                                              ; preds = %130
  call void @_ZN5blink20XRWebGLDrawingBuffer11ColorBufferD2Ev(%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* nonnull %127) #10
  %135 = bitcast %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %127 to i8*
  call void @_ZdlPv(i8* %135) #11
  br label %136

136:                                              ; preds = %125, %130, %134
  %137 = inttoptr i64 %128 to %"class.blink::StaticBitmapImage"*
  ret %"class.blink::StaticBitmapImage"* %137
}

declare void @_ZN9SkSurface19MakeRasterN32PremulEiiPK14SkSurfaceProps(%class.sk_sp* sret, i32, i32, %class.SkSurfaceProps*) local_unnamed_addr #1

declare %"class.blink::UnacceleratedStaticBitmapImage"* @_ZN5blink30UnacceleratedStaticBitmapImage6CreateE5sk_spI7SkImageENS_16ImageOrientationE(%class.sk_sp.282*, i8) local_unnamed_addr #1

declare void @_ZN9SkSurface17makeImageSnapshotEv(%class.sk_sp.282* sret, %class.SkSurface*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20XRWebGLDrawingBuffer21NotifyMailboxReleasedE13scoped_refptrINS0_11ColorBufferEERKN3gpu9SyncTokenEb(%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.gpu::SyncToken"* nocapture readonly dereferenceable(24), i1 zeroext) #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %0, i64 0, i32 7, i32 0
  %6 = getelementptr inbounds %"struct.gpu::SyncToken", %"struct.gpu::SyncToken"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  %7 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #10
  br i1 %8, label %9, label %30

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %0, i64 0, i32 2, i32 0, i32 1
  %11 = bitcast i64* %10 to %"class.blink::XRWebGLDrawingBuffer"**
  %12 = load %"class.blink::XRWebGLDrawingBuffer"*, %"class.blink::XRWebGLDrawingBuffer"** %11, align 8
  %13 = icmp eq %"class.blink::XRWebGLDrawingBuffer"* %12, null
  br i1 %13, label %30, label %14

14:                                               ; preds = %9
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #10
  br i1 %15, label %19, label %16

16:                                               ; preds = %14
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %16, %14
  %20 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #10
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = load %"class.blink::XRWebGLDrawingBuffer"*, %"class.blink::XRWebGLDrawingBuffer"** %11, align 8
  br label %23

23:                                               ; preds = %19, %21
  %24 = phi %"class.blink::XRWebGLDrawingBuffer"* [ %22, %21 ], [ null, %19 ]
  %25 = icmp eq %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %0, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 1 monotonic
  br label %29

29:                                               ; preds = %23, %26
  call void @_ZN5blink20XRWebGLDrawingBuffer15MailboxReleasedE13scoped_refptrINS0_11ColorBufferEEb(%"class.blink::XRWebGLDrawingBuffer"* %24, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %0, i1 zeroext %2)
  br label %30

30:                                               ; preds = %9, %3, %29
  %31 = icmp eq %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %0, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw sub i32* %33, i32 1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  call void @_ZN5blink20XRWebGLDrawingBuffer11ColorBufferD2Ev(%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* nonnull %0) #10
  %37 = bitcast %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %0 to i8*
  call void @_ZdlPv(i8* %37) #11
  br label %38

38:                                               ; preds = %30, %32, %36
  ret void
}

declare %"class.blink::AcceleratedStaticBitmapImage"* @_ZN5blink28AcceleratedStaticBitmapImage23CreateFromCanvasMailboxERKN3gpu7MailboxERKNS1_9SyncTokenEjRK11SkImageInfojbN4base7WeakPtrINS_35WebGraphicsContext3DProviderWrapperEEENSB_17PlatformThreadRefE13scoped_refptrINSB_22SingleThreadTaskRunnerEENSB_12OnceCallbackIFvS7_bEEE(%"struct.gpu::Mailbox"* dereferenceable(16), %"struct.gpu::SyncToken"* dereferenceable(24), i32, %struct.SkImageInfo* dereferenceable(24), i32, i1 zeroext, %"class.base::WeakPtr.16"*, i64, i64, %"class.base::OnceCallback"*) local_unnamed_addr #1

declare void @_ZN5blink13DrawingBuffer22ContextProviderWeakPtrEv(%"class.base::WeakPtr.16"* sret, %"class.blink::DrawingBuffer"*) local_unnamed_addr #1

declare %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20XRWebGLDrawingBuffer15MailboxReleasedE13scoped_refptrINS0_11ColorBufferEEb(%"class.blink::XRWebGLDrawingBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::DequeIterator", align 8
  %5 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 6
  %6 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %5, i64 0, i32 0
  %7 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %6, align 8
  %8 = icmp eq %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %7, %1
  br i1 %8, label %9, label %18

9:                                                ; preds = %3
  %10 = bitcast %class.scoped_refptr.60* %5 to i64*
  store i64 0, i64* %10, align 8
  %11 = icmp eq %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %1, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw sub i32* %13, i32 1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  tail call void @_ZN5blink20XRWebGLDrawingBuffer11ColorBufferD2Ev(%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* nonnull %1) #10
  %17 = bitcast %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %1 to i8*
  tail call void @_ZdlPv(i8* %17) #11
  br label %18

18:                                               ; preds = %16, %12, %9, %3
  %19 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 1, i32 0
  %20 = load %"class.blink::DrawingBuffer"*, %"class.blink::DrawingBuffer"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::DrawingBuffer", %"class.blink::DrawingBuffer"* %20, i64 0, i32 39
  %22 = load i8, i8* %21, align 4, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %130

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %1, i64 0, i32 3, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 8, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %26, %28
  br i1 %29, label %30, label %130

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %1, i64 0, i32 3, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 8, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp ne i32 %32, %34
  %36 = or i1 %35, %2
  br i1 %36, label %130, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 13
  %39 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 13, i32 1
  %40 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 13, i32 2
  %41 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1
  %42 = bitcast %"class.WTF::DequeIterator"* %4 to i8*
  %43 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %4, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %4, i64 0, i32 0, i32 1
  %45 = getelementptr inbounds %"class.WTF::Deque.61", %"class.WTF::Deque.61"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %46

46:                                               ; preds = %95, %37
  %47 = load i32, i32* %39, align 8
  %48 = load i32, i32* %40, align 4
  %49 = icmp ult i32 %48, %47
  br i1 %49, label %50, label %53

50:                                               ; preds = %46
  %51 = load i32, i32* %41, align 8
  %52 = add i32 %51, %48
  br label %53

53:                                               ; preds = %46, %50
  %54 = phi i32 [ %52, %50 ], [ %48, %46 ]
  %55 = sub i32 %54, %47
  %56 = icmp ugt i32 %55, 1
  br i1 %56, label %57, label %102

57:                                               ; preds = %53
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #10
  store %"class.WTF::Deque.61"* %38, %"class.WTF::Deque.61"** %43, align 8, !alias.scope !19
  store i32 %48, i32* %44, align 8, !alias.scope !19
  %58 = icmp eq i32 %48, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %57
  %60 = load i32, i32* %41, align 8
  br label %61

61:                                               ; preds = %59, %57
  %62 = phi i32 [ %60, %59 ], [ %48, %57 ]
  %63 = add i32 %62, -1
  store i32 %63, i32* %44, align 8
  %64 = call dereferenceable(8) %class.scoped_refptr.60* @_ZNK3WTF13DequeIteratorI13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEELj0ENS_18PartitionAllocatorEEdeEv(%"class.WTF::DequeIterator"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #10
  %65 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %64, i64 0, i32 0
  %66 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %65, align 8
  store %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* null, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %65, align 8
  %67 = load i32, i32* %40, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %61
  %70 = load i32, i32* %41, align 8
  br label %71

71:                                               ; preds = %69, %61
  %72 = phi i32 [ %70, %69 ], [ %67, %61 ]
  %73 = add i32 %72, -1
  store i32 %73, i32* %40, align 4
  %74 = load %class.scoped_refptr.60*, %class.scoped_refptr.60** %45, align 8
  %75 = zext i32 %73 to i64
  %76 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %74, i64 %75
  %77 = zext i32 %72 to i64
  %78 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %74, i64 %77
  br label %79

79:                                               ; preds = %90, %71
  %80 = phi %class.scoped_refptr.60* [ %91, %90 ], [ %76, %71 ]
  %81 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %80, i64 0, i32 0
  %82 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %81, align 8
  %83 = icmp eq %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %82, null
  br i1 %83, label %90, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = atomicrmw sub i32* %85, i32 1 acq_rel
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %90

88:                                               ; preds = %84
  call void @_ZN5blink20XRWebGLDrawingBuffer11ColorBufferD2Ev(%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* nonnull %82) #10
  %89 = bitcast %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %82 to i8*
  call void @_ZdlPv(i8* %89) #11
  br label %90

90:                                               ; preds = %88, %84, %79
  %91 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %80, i64 1
  %92 = icmp eq %class.scoped_refptr.60* %91, %78
  br i1 %92, label %93, label %79

93:                                               ; preds = %90
  %94 = icmp eq %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %66, null
  br i1 %94, label %95, label %96

95:                                               ; preds = %93, %96, %100
  br label %46

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = atomicrmw sub i32* %97, i32 1 acq_rel
  %99 = icmp eq i32 %98, 1
  br i1 %99, label %100, label %95

100:                                              ; preds = %96
  call void @_ZN5blink20XRWebGLDrawingBuffer11ColorBufferD2Ev(%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* nonnull %66) #10
  %101 = bitcast %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %66 to i8*
  call void @_ZdlPv(i8* %101) #11
  br label %95

102:                                              ; preds = %53
  %103 = icmp eq i32 %47, 0
  br i1 %103, label %107, label %104

104:                                              ; preds = %102
  %105 = add i32 %48, 1
  %106 = icmp eq i32 %105, %47
  br i1 %106, label %115, label %120

107:                                              ; preds = %102
  %108 = icmp eq i32 %48, 0
  %109 = load i32, i32* %41, align 8
  br i1 %108, label %113, label %110

110:                                              ; preds = %107
  %111 = add i32 %109, -1
  %112 = icmp eq i32 %48, %111
  br i1 %112, label %115, label %120

113:                                              ; preds = %107
  %114 = icmp eq i32 %109, 0
  br i1 %114, label %115, label %120

115:                                              ; preds = %113, %110, %104
  call void @_ZN3WTF5DequeI13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.61"* %38) #10
  %116 = load i32, i32* %39, align 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %115
  %119 = load i32, i32* %41, align 8
  br label %120

120:                                              ; preds = %110, %113, %118, %115, %104
  %121 = phi i32 [ %116, %115 ], [ %47, %104 ], [ %119, %118 ], [ %109, %113 ], [ %109, %110 ]
  %122 = add i32 %121, -1
  store i32 %122, i32* %39, align 8
  %123 = load %class.scoped_refptr.60*, %class.scoped_refptr.60** %45, align 8
  %124 = zext i32 %122 to i64
  %125 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %123, i64 %124, i32 0
  store %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %1, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %125, align 8
  %126 = icmp eq %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %1, null
  br i1 %126, label %138, label %127

127:                                              ; preds = %120
  %128 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = atomicrmw add i32* %128, i32 1 monotonic
  br label %132

130:                                              ; preds = %18, %24, %30
  %131 = icmp eq %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %1, null
  br i1 %131, label %138, label %132

132:                                              ; preds = %127, %130
  %133 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = atomicrmw sub i32* %133, i32 1 acq_rel
  %135 = icmp eq i32 %134, 1
  br i1 %135, label %136, label %138

136:                                              ; preds = %132
  call void @_ZN5blink20XRWebGLDrawingBuffer11ColorBufferD2Ev(%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* nonnull %1) #10
  %137 = bitcast %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %1 to i8*
  call void @_ZdlPv(i8* %137) #11
  br label %138

138:                                              ; preds = %120, %130, %132, %136
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #5

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20XRWebGLDrawingBufferD2Ev(%"class.blink::XRWebGLDrawingBuffer"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 21, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %2) #10
  %3 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 13
  %4 = getelementptr inbounds %"class.WTF::Deque.61", %"class.WTF::Deque.61"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.scoped_refptr.60*, %class.scoped_refptr.60** %4, align 8
  %6 = icmp eq %class.scoped_refptr.60* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.scoped_refptr.60* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 13, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 13, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %17, label %14

14:                                               ; preds = %7
  tail call void @_ZN3WTF5DequeI13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque.61"* %3) #10
  %15 = bitcast %"class.WTF::Deque.61"* %3 to i8**
  %16 = load i8*, i8** %15, align 8
  br label %17

17:                                               ; preds = %14, %7
  %18 = phi i8* [ %16, %14 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %18) #10
  store %class.scoped_refptr.60* null, %class.scoped_refptr.60** %4, align 8
  br label %19

19:                                               ; preds = %1, %17
  %20 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 6, i32 0
  %21 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %20, align 8
  %22 = icmp eq %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw sub i32* %24, i32 1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  tail call void @_ZN5blink20XRWebGLDrawingBuffer11ColorBufferD2Ev(%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* nonnull %21) #10
  %28 = bitcast %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %21 to i8*
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %19, %23, %27
  %30 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 5, i32 0
  %31 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %30, align 8
  %32 = icmp eq %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw sub i32* %34, i32 1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %39

37:                                               ; preds = %33
  tail call void @_ZN5blink20XRWebGLDrawingBuffer11ColorBufferD2Ev(%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* nonnull %31) #10
  %38 = bitcast %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %31 to i8*
  tail call void @_ZdlPv(i8* %38) #11
  br label %39

39:                                               ; preds = %29, %33, %37
  %40 = getelementptr inbounds %"class.blink::XRWebGLDrawingBuffer", %"class.blink::XRWebGLDrawingBuffer"* %0, i64 0, i32 1, i32 0
  %41 = load %"class.blink::DrawingBuffer"*, %"class.blink::DrawingBuffer"** %40, align 8
  %42 = icmp eq %"class.blink::DrawingBuffer"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::DrawingBuffer", %"class.blink::DrawingBuffer"* %41, i64 0, i32 1, i32 0
  %45 = getelementptr inbounds %"class.base::RefCounted.9", %"class.base::RefCounted.9"* %44, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %45) #10
  %46 = getelementptr inbounds %"class.base::RefCounted.9", %"class.base::RefCounted.9"* %44, i64 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %56

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.base::RefCounted.9", %"class.base::RefCounted.9"* %44, i64 -2
  %51 = bitcast %"class.base::RefCounted.9"* %50 to %"class.blink::DrawingBuffer"*
  %52 = bitcast %"class.base::RefCounted.9"* %50 to void (%"class.blink::DrawingBuffer"*)***
  %53 = load void (%"class.blink::DrawingBuffer"*)**, void (%"class.blink::DrawingBuffer"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.blink::DrawingBuffer"*)*, void (%"class.blink::DrawingBuffer"*)** %53, i64 2
  %55 = load void (%"class.blink::DrawingBuffer"*)*, void (%"class.blink::DrawingBuffer"*)** %54, align 8
  tail call void %55(%"class.blink::DrawingBuffer"* nonnull %51) #10
  br label %56

56:                                               ; preds = %39, %43, %49
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeI13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque.61"*) local_unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque.61", %"class.WTF::Deque.61"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque.61", %"class.WTF::Deque.61"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp ugt i32 %3, %5
  %7 = getelementptr inbounds %"class.WTF::Deque.61", %"class.WTF::Deque.61"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %class.scoped_refptr.60*, %class.scoped_refptr.60** %7, align 8
  %9 = zext i32 %5 to i64
  %10 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %8, i64 %9
  br i1 %6, label %30, label %11

11:                                               ; preds = %1
  %12 = icmp eq i32 %3, %5
  br i1 %12, label %74, label %13

13:                                               ; preds = %11
  %14 = zext i32 %3 to i64
  %15 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %8, i64 %14
  br label %16

16:                                               ; preds = %13, %27
  %17 = phi %class.scoped_refptr.60* [ %28, %27 ], [ %15, %13 ]
  %18 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %17, i64 0, i32 0
  %19 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %18, align 8
  %20 = icmp eq %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw sub i32* %22, i32 1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  tail call void @_ZN5blink20XRWebGLDrawingBuffer11ColorBufferD2Ev(%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* nonnull %19) #10
  %26 = bitcast %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %19 to i8*
  tail call void @_ZdlPv(i8* %26) #11
  br label %27

27:                                               ; preds = %25, %21, %16
  %28 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %17, i64 1
  %29 = icmp eq %class.scoped_refptr.60* %28, %10
  br i1 %29, label %74, label %16

30:                                               ; preds = %1
  %31 = icmp eq i32 %5, 0
  br i1 %31, label %49, label %32

32:                                               ; preds = %30, %43
  %33 = phi %class.scoped_refptr.60* [ %44, %43 ], [ %8, %30 ]
  %34 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %33, i64 0, i32 0
  %35 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %34, align 8
  %36 = icmp eq %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw sub i32* %38, i32 1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  tail call void @_ZN5blink20XRWebGLDrawingBuffer11ColorBufferD2Ev(%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* nonnull %35) #10
  %42 = bitcast %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %35 to i8*
  tail call void @_ZdlPv(i8* %42) #11
  br label %43

43:                                               ; preds = %41, %37, %32
  %44 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %33, i64 1
  %45 = icmp eq %class.scoped_refptr.60* %44, %10
  br i1 %45, label %46, label %32

46:                                               ; preds = %43
  %47 = load %class.scoped_refptr.60*, %class.scoped_refptr.60** %7, align 8
  %48 = load i32, i32* %2, align 8
  br label %49

49:                                               ; preds = %46, %30
  %50 = phi i32 [ %48, %46 ], [ %3, %30 ]
  %51 = phi %class.scoped_refptr.60* [ %47, %46 ], [ %8, %30 ]
  %52 = getelementptr inbounds %"class.WTF::Deque.61", %"class.WTF::Deque.61"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %51, i64 %54
  %56 = icmp eq i32 %50, %53
  br i1 %56, label %74, label %57

57:                                               ; preds = %49
  %58 = zext i32 %50 to i64
  %59 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %51, i64 %58
  br label %60

60:                                               ; preds = %57, %71
  %61 = phi %class.scoped_refptr.60* [ %72, %71 ], [ %59, %57 ]
  %62 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %61, i64 0, i32 0
  %63 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %62, align 8
  %64 = icmp eq %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %63, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw sub i32* %66, i32 1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  tail call void @_ZN5blink20XRWebGLDrawingBuffer11ColorBufferD2Ev(%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* nonnull %63) #10
  %70 = bitcast %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %63 to i8*
  tail call void @_ZdlPv(i8* %70) #11
  br label %71

71:                                               ; preds = %69, %65, %60
  %72 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %61, i64 1
  %73 = icmp eq %class.scoped_refptr.60* %72, %55
  br i1 %73, label %74, label %60

74:                                               ; preds = %27, %71, %49, %11
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink16Extensions3DUtilD1Ev(%"class.blink::Extensions3DUtil"*) unnamed_addr #5

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #5

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr.60* @_ZNK3WTF13DequeIteratorI13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEELj0ENS_18PartitionAllocatorEEdeEv(%"class.WTF::DequeIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::Deque.61"*, %"class.WTF::Deque.61"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::Deque.61", %"class.WTF::Deque.61"* %10, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %14 = icmp eq i32 %8, %12
  br i1 %14, label %16, label %15

15:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  store i8* null, i8** %6, align 8
  br label %25

16:                                               ; preds = %1
  %17 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %17, i8* %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.9, i64 0, i64 0), i32 693, %"class.logging::CheckOpResult"* nonnull %3) #10
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br label %25

25:                                               ; preds = %15, %16, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %26 = load %"class.WTF::Deque.61"*, %"class.WTF::Deque.61"** %9, align 8
  %27 = getelementptr inbounds %"class.WTF::Deque.61", %"class.WTF::Deque.61"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %class.scoped_refptr.60*, %class.scoped_refptr.60** %27, align 8
  %29 = load i32, i32* %7, align 8
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %28, i64 %30
  ret %class.scoped_refptr.60* %31
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEERKN3gpu9SyncTokenEbEJS7_EEEFvSB_bEE7RunOnceEPNS0_13BindStateBaseESB_b(%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"* dereferenceable(24), i1 zeroext) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.gpu::SyncToken"*, i1)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = load void (%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.gpu::SyncToken"*, i1)*, void (%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.gpu::SyncToken"*, i1)** %5, align 8
  %8 = bitcast void ()** %6 to %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"**
  %9 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %8, align 8
  store %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* null, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %8, align 8
  tail call void %7(%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %9, %"struct.gpu::SyncToken"* dereferenceable(24) %1, i1 zeroext %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFv13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEERKN3gpu9SyncTokenEbEJS6_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"**
  %6 = load %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"*, %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"** %5, align 8
  %7 = icmp eq %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer", %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  tail call void @_ZN5blink20XRWebGLDrawingBuffer11ColorBufferD2Ev(%"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* nonnull %6) #10
  %13 = bitcast %"struct.blink::XRWebGLDrawingBuffer::ColorBuffer"* %6 to i8*
  tail call void @_ZdlPv(i8* %13) #11
  br label %14

14:                                               ; preds = %3, %8, %12
  %15 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %14, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeI13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.61"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque.61", %"class.WTF::Deque.61"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque.61", %"class.WTF::Deque.61"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.scoped_refptr.60*, %class.scoped_refptr.60** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEEEEmm(i64 %11) #10
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEEEEmm(i64 %11) #10
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEEEEPKcv, i64 0, i64 0)) #10
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Deque.61"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %2, align 8
  %19 = getelementptr inbounds %"class.WTF::Deque.61", %"class.WTF::Deque.61"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque.61", %"class.WTF::Deque.61"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %20, %22
  %24 = bitcast i8* %14 to %class.scoped_refptr.60*
  br i1 %23, label %40, label %25

25:                                               ; preds = %1
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %5, i64 %26
  %28 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %24, i64 %26
  %29 = icmp ne %class.scoped_refptr.60* %28, null
  %30 = icmp ne %class.scoped_refptr.60* %27, null
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %73, !prof !22

32:                                               ; preds = %25
  %33 = zext i32 %22 to i64
  %34 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %5, i64 %33
  %35 = bitcast %class.scoped_refptr.60* %27 to i8*
  %36 = ptrtoint %class.scoped_refptr.60* %34 to i64
  %37 = ptrtoint %class.scoped_refptr.60* %27 to i64
  %38 = sub i64 %36, %37
  %39 = bitcast %class.scoped_refptr.60* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %35, i64 %38, i1 false) #10
  br label %73

40:                                               ; preds = %1
  %41 = icmp ne i8* %14, null
  %42 = icmp ne %class.scoped_refptr.60* %5, null
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %51, !prof !22

44:                                               ; preds = %40
  %45 = zext i32 %22 to i64
  %46 = bitcast %class.scoped_refptr.60* %5 to i8*
  %47 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %46, i64 %47, i1 false) #10
  %48 = load i32, i32* %2, align 8
  %49 = load i32, i32* %19, align 8
  %50 = load %class.scoped_refptr.60*, %class.scoped_refptr.60** %4, align 8
  br label %51

51:                                               ; preds = %40, %44
  %52 = phi %class.scoped_refptr.60* [ %24, %40 ], [ %50, %44 ]
  %53 = phi i32 [ %20, %40 ], [ %49, %44 ]
  %54 = phi i32 [ %18, %40 ], [ %48, %44 ]
  %55 = sub i32 %53, %3
  %56 = add i32 %55, %54
  %57 = zext i32 %53 to i64
  %58 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %5, i64 %57
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %52, i64 %59
  %61 = icmp ne %class.scoped_refptr.60* %60, null
  %62 = icmp ne %class.scoped_refptr.60* %58, null
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %72, !prof !22

64:                                               ; preds = %51
  %65 = zext i32 %3 to i64
  %66 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %5, i64 %65
  %67 = bitcast %class.scoped_refptr.60* %58 to i8*
  %68 = ptrtoint %class.scoped_refptr.60* %66 to i64
  %69 = ptrtoint %class.scoped_refptr.60* %58 to i64
  %70 = sub i64 %68, %69
  %71 = bitcast %class.scoped_refptr.60* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull align 8 %67, i64 %70, i1 false) #10
  br label %72

72:                                               ; preds = %51, %64
  store i32 %56, i32* %19, align 8
  br label %73

73:                                               ; preds = %32, %25, %72
  %74 = bitcast %class.scoped_refptr.60* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base14WeakPtrFactoryIN5blink20XRWebGLDrawingBufferEE10GetWeakPtrEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base14WeakPtrFactoryIN5blink20XRWebGLDrawingBufferEE10GetWeakPtrEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN3WTF5DequeI13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEELj0ENS_18PartitionAllocatorEE3endEv: argument 0"}
!8 = distinct !{!8, !"_ZN3WTF5DequeI13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEELj0ENS_18PartitionAllocatorEE3endEv"}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFv13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEERKN3gpu9SyncTokenEbEJRS7_EEEDcOT0_DpOT1_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFv13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEERKN3gpu9SyncTokenEbEJRS7_EEEDcOT0_DpOT1_"}
!12 = distinct !{!12, !13, !"_ZN4base8BindOnceIPFv13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEERKN3gpu9SyncTokenEbEJRS5_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8BindOnceIPFv13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEERKN3gpu9SyncTokenEbEJRS5_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!16 = distinct !{!16, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!17 = distinct !{!17, !18, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE: argument 0"}
!18 = distinct !{!18, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN3WTF5DequeI13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEELj0ENS_18PartitionAllocatorEE3endEv: argument 0"}
!21 = distinct !{!21, !"_ZN3WTF5DequeI13scoped_refptrIN5blink20XRWebGLDrawingBuffer11ColorBufferEELj0ENS_18PartitionAllocatorEE3endEv"}
!22 = !{!"branch_weights", i32 2000, i32 1}
