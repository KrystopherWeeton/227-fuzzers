; ModuleID = '../../content/renderer/categorized_worker_pool.cc'
source_filename = "../../content/renderer/categorized_worker_pool.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.perfetto::Track" = type { i64, i64 }
%"class.content::CategorizedWorkerPool" = type { %"class.base::TaskRunner.base", %"class.cc::TaskGraphRunner", %"class.std::__1::vector", %"class.base::Lock", %"class.cc::TaskGraphWorkQueue", %"class.cc::NamespaceToken", %"class.std::__1::vector.32", %"struct.cc::TaskGraph", %"class.std::__1::vector.32", %"class.base::ConditionVariable", %"class.base::ConditionVariable", %"class.base::ConditionVariable", i8, %"class.base::OnceCallback", %class.scoped_refptr.61 }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.cc::TaskGraphRunner" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::SimpleThread"* }
%"class.base::SimpleThread" = type <{ %"class.base::PlatformThread::Delegate", %"class.std::__1::basic_string", %"struct.base::SimpleThread::Options", %"class.base::PlatformThreadHandle", %"class.base::WaitableEvent", i32, i8, i8, [2 x i8] }>
%"class.base::PlatformThread::Delegate" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.base::SimpleThread::Options" = type <{ i64, i32, i8, [3 x i8] }>
%"class.base::PlatformThreadHandle" = type { i64 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr, i8, [7 x i8] }>
%class.scoped_refptr = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.4", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.5" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i64 }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::unique_ptr"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.cc::TaskGraphWorkQueue" = type <{ i32 (...)**, %"class.std::__1::map", %"class.std::__1::map.23", i32, [4 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::map.23" = type { %"class.std::__1::__tree.24" }
%"class.std::__1::__tree.24" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.25", %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.cc::NamespaceToken" = type { i32 }
%"struct.cc::TaskGraph" = type { %"class.std::__1::vector.41", %"class.std::__1::vector.48" }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"*, %"class.std::__1::__compressed_pair.43" }
%"struct.cc::TaskGraph::Node" = type { %class.scoped_refptr.34, i16, i16, i32 }
%class.scoped_refptr.34 = type { %"class.cc::Task"* }
%"class.cc::Task" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.35", %"class.cc::TaskState", i64 }
%"class.base::RefCountedThreadSafe.35" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::TaskState" = type { i16 }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.cc::TaskGraph::Node"* }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"struct.cc::TaskGraph::Edge"*, %"struct.cc::TaskGraph::Edge"*, %"class.std::__1::__compressed_pair.50" }
%"struct.cc::TaskGraph::Edge" = type { %"class.cc::Task"*, %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.cc::TaskGraph::Edge"* }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %class.scoped_refptr.34*, %class.scoped_refptr.34*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.scoped_refptr.34* }
%"class.base::ConditionVariable" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t*, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.55, %union.anon.57, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.55 = type { i64 }
%union.anon.57 = type { i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.59 }
%class.scoped_refptr.59 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.60", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.60" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.61 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.content::CategorizedWorkerPool::ClosureTask" = type { %"class.cc::Task", %"class.base::OnceCallback.75" }
%"class.base::OnceCallback.75" = type { %"class.base::internal::CallbackBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.gfx::RenderingPipeline" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope" = type { %"class.base::IgnoreHangsInScope" }
%"class.base::IgnoreHangsInScope" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.std::__1::__tree_node.198" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.199" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type.199" = type { %"struct.std::__1::pair.190" }
%"struct.std::__1::pair.190" = type { i16, %"class.std::__1::vector.191" }
%"class.std::__1::vector.191" = type { %"class.std::__1::__vector_base.192" }
%"class.std::__1::__vector_base.192" = type { %"struct.cc::TaskGraphWorkQueue::TaskNamespace"**, %"struct.cc::TaskGraphWorkQueue::TaskNamespace"**, %"class.std::__1::__compressed_pair.193" }
%"struct.cc::TaskGraphWorkQueue::TaskNamespace" = type { %"struct.cc::TaskGraph", %"class.std::__1::map.78", %"class.std::__1::vector.32", %"class.std::__1::vector.87" }
%"class.std::__1::map.78" = type { %"class.std::__1::__tree.79" }
%"class.std::__1::__tree.79" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::vector.87" = type { %"class.std::__1::__vector_base.88" }
%"class.std::__1::__vector_base.88" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.89" }
%"struct.std::__1::pair" = type { i16, %class.scoped_refptr.34 }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"struct.std::__1::pair"* }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"struct.cc::TaskGraphWorkQueue::TaskNamespace"** }
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { i16*, i16*, %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { i16* }
%"class.base::sequence_manager::TaskTimeObserver" = type { i32 (...)** }
%"struct.cc::TaskGraphWorkQueue::PrioritizedTask" = type <{ %class.scoped_refptr.34, %"struct.cc::TaskGraphWorkQueue::TaskNamespace"*, i16, i16, [4 x i8] }>
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.102", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.104", i64, i64 }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list.115" }
%"class.std::__1::list.115" = type { %"class.std::__1::__list_imp.116" }
%"class.std::__1::__list_imp.116" = type { %"struct.std::__1::__list_node_base.117", %"class.std::__1::__compressed_pair.118" }
%"struct.std::__1::__list_node_base.117" = type { %"struct.std::__1::__list_node_base.117"*, %"struct.std::__1::__list_node_base.117"* }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.98" }
%"struct.std::__1::pair.98" = type { %"class.cc::NamespaceToken", %"struct.cc::TaskGraphWorkQueue::TaskNamespace" }
%"class.perfetto::EventContext" = type { %"class.protozero::MessageHandle", %"class.perfetto::protos::pbzero::TrackEvent"*, %"struct.perfetto::internal::TrackEventIncrementalState"* }
%"class.protozero::MessageHandle" = type { %"class.protozero::MessageHandleBase" }
%"class.protozero::MessageHandleBase" = type { %"class.protozero::Message"* }
%"class.perfetto::protos::pbzero::TrackEvent" = type { %"class.protozero::Message.base", [7 x i8] }
%"struct.perfetto::internal::TrackEventIncrementalState" = type { i8, %"class.protozero::HeapBuffered.135", %"struct.std::__1::array", %"class.perfetto::base::FlatSet", %"class.std::__1::unordered_map" }
%"class.protozero::HeapBuffered.135" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage.136" }
%"class.protozero::RootMessage.136" = type { %"class.perfetto::protos::pbzero::InternedData.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::InternedData.base" = type { %"class.protozero::Message.base" }
%"struct.std::__1::array" = type { [32 x %"struct.std::__1::pair.137"] }
%"struct.std::__1::pair.137" = type { i64, %"class.std::__1::unique_ptr.138" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.perfetto::internal::BaseTrackEventInternedDataIndex"* }
%"class.perfetto::internal::BaseTrackEventInternedDataIndex" = type { i32 (...)** }
%"class.perfetto::base::FlatSet" = type { %"class.std::__1::vector.144" }
%"class.std::__1::vector.144" = type { %"class.std::__1::__vector_base.145" }
%"class.std::__1::__vector_base.145" = type { i64*, i64*, %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { i64* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.151", %"class.std::__1::__compressed_pair.159", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.166", [4 x i8] }>
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153", %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { float }
%"class.base::trace_event::TrackEventHandle" = type { %"class.perfetto::protos::pbzero::TrackEvent"*, %"struct.perfetto::internal::TrackEventIncrementalState"*, %"class.base::trace_event::TrackEventHandle::CompletionListener"* }
%"class.base::trace_event::TrackEventHandle::CompletionListener" = type { i32 (...)** }
%"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner" = type { %"class.base::SequencedTaskRunner.base", %"class.base::Lock", %"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken", %"class.std::__1::vector.32", %"struct.cc::TaskGraph", %"class.std::__1::vector.32" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.content::(anonymous namespace)::CategorizedWorkerPoolThread" = type { %"class.base::SimpleThread.base", %"class.content::CategorizedWorkerPool"*, %"class.std::__1::vector.62", %"class.gfx::RenderingPipeline"*, %"class.base::ConditionVariable"*, %"class.base::OnceCallback", %class.scoped_refptr.61 }
%"class.base::SimpleThread.base" = type <{ %"class.base::PlatformThread::Delegate", %"class.std::__1::basic_string", %"struct.base::SimpleThread::Options", %"class.base::PlatformThreadHandle", %"class.base::WaitableEvent", i32, i8, i8 }>

$_ZNSt3__16vectorINS_10unique_ptrIN4base12SimpleThreadENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE7reserveEm = comdat any

$_ZN20trace_event_internal13AddTraceEventImmEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_ = comdat any

$_ZN7content21CategorizedWorkerPool40CategorizedWorkerPoolSequencedTaskRunner15PostDelayedTaskERKN4base8LocationENS2_12OnceCallbackIFvvEEENS2_9TimeDeltaE = comdat any

$_ZN7content21CategorizedWorkerPool40CategorizedWorkerPoolSequencedTaskRunnerD2Ev = comdat any

$_ZN7content21CategorizedWorkerPool40CategorizedWorkerPoolSequencedTaskRunnerD0Ev = comdat any

$_ZN7content21CategorizedWorkerPool40CategorizedWorkerPoolSequencedTaskRunner26PostNonNestableDelayedTaskERKN4base8LocationENS2_12OnceCallbackIFvvEEENS2_9TimeDeltaE = comdat any

$_ZNK7content21CategorizedWorkerPool40CategorizedWorkerPoolSequencedTaskRunner26RunsTasksInCurrentSequenceEv = comdat any

$_ZNSt3__16vectorI13scoped_refptrIN2cc4TaskEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

$_ZNSt3__16vectorIN2cc9TaskGraph4NodeENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZN4base12SimpleThread11BeforeStartEv = comdat any

$_ZN4base12SimpleThread10BeforeJoinEv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFviEEEJiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateINS_12OnceCallbackIFviEEEJiEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFviEEEJiEEEEEbPKNS0_13BindStateBaseENS7_21CancellationQueryModeE = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN4base12SimpleThreadENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZTVN7content21CategorizedWorkerPool40CategorizedWorkerPoolSequencedTaskRunnerE = comdat any

@_ZTVN7content21CategorizedWorkerPoolE = hidden unnamed_addr constant { [10 x i8*], [8 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.content::CategorizedWorkerPool"*, %"class.base::Location"*, %"class.base::OnceCallback.75"*, i64)* @_ZN7content21CategorizedWorkerPool15PostDelayedTaskERKN4base8LocationENS1_12OnceCallbackIFvvEEENS1_9TimeDeltaE to i8*), i8* bitcast (void (%"class.content::CategorizedWorkerPool"*)* @_ZN7content21CategorizedWorkerPoolD2Ev to i8*), i8* bitcast (void (%"class.content::CategorizedWorkerPool"*)* @_ZN7content21CategorizedWorkerPoolD0Ev to i8*), i8* bitcast (void (%"class.base::TaskRunner"*)* @_ZNK4base10TaskRunner10OnDestructEv to i8*), i8* bitcast (void (%"class.cc::NamespaceToken"*, %"class.content::CategorizedWorkerPool"*)* @_ZN7content21CategorizedWorkerPool22GenerateNamespaceTokenEv to i8*), i8* bitcast (void (%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"*, %"struct.cc::TaskGraph"*)* @_ZN7content21CategorizedWorkerPool13ScheduleTasksEN2cc14NamespaceTokenEPNS1_9TaskGraphE to i8*), i8* bitcast (void (%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"*)* @_ZN7content21CategorizedWorkerPool27WaitForTasksToFinishRunningEN2cc14NamespaceTokenE to i8*), i8* bitcast (void (%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.32"*)* @_ZN7content21CategorizedWorkerPool21CollectCompletedTasksEN2cc14NamespaceTokenEPNSt3__16vectorI13scoped_refptrINS1_4TaskEENS3_9allocatorIS7_EEEE to i8*)], [8 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.content::CategorizedWorkerPool"*)* @_ZThn16_N7content21CategorizedWorkerPoolD1Ev to i8*), i8* bitcast (void (%"class.content::CategorizedWorkerPool"*)* @_ZThn16_N7content21CategorizedWorkerPoolD0Ev to i8*), i8* bitcast (void (%"class.cc::NamespaceToken"*, %"class.content::CategorizedWorkerPool"*)* @_ZThn16_N7content21CategorizedWorkerPool22GenerateNamespaceTokenEv to i8*), i8* bitcast (void (%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"*, %"struct.cc::TaskGraph"*)* @_ZThn16_N7content21CategorizedWorkerPool13ScheduleTasksEN2cc14NamespaceTokenEPNS1_9TaskGraphE to i8*), i8* bitcast (void (%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"*)* @_ZThn16_N7content21CategorizedWorkerPool27WaitForTasksToFinishRunningEN2cc14NamespaceTokenE to i8*), i8* bitcast (void (%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.32"*)* @_ZThn16_N7content21CategorizedWorkerPool21CollectCompletedTasksEN2cc14NamespaceTokenEPNSt3__16vectorI13scoped_refptrINS1_4TaskEENS3_9allocatorIS7_EEEE to i8*)] }, align 8
@_ZN7content12_GLOBAL__N_131kNormalThreadPriorityCategoriesE = internal unnamed_addr constant [3 x i16] [i16 0, i16 1, i16 3], align 2
@.str = private unnamed_addr constant [23 x i8] c"CompositorTileWorker%d\00", align 1
@.str.1 = private unnamed_addr constant [31 x i8] c"CompositorTileWorkerBackground\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"Shutdown\00", align 1
@.str.3 = private unnamed_addr constant [50 x i8] c"../../content/renderer/categorized_worker_pool.cc\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.4 = private unnamed_addr constant [37 x i8] c"CategorizedWorkerPool::ScheduleTasks\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"num_nodes\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"num_edges\00", align 1
@.str.7 = private unnamed_addr constant [51 x i8] c"CategorizedWorkerPool::WaitForTasksToFinishRunning\00", align 1
@.str.8 = private unnamed_addr constant [45 x i8] c"CategorizedWorkerPool::CollectCompletedTasks\00", align 1
@_ZTVN7content21CategorizedWorkerPool11ClosureTaskE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::CategorizedWorkerPool::ClosureTask"*)* @_ZN7content21CategorizedWorkerPool11ClosureTask17RunOnWorkerThreadEv to i8*), i8* bitcast (void (%"class.content::CategorizedWorkerPool::ClosureTask"*)* @_ZN7content21CategorizedWorkerPool11ClosureTaskD2Ev to i8*), i8* bitcast (void (%"class.content::CategorizedWorkerPool::ClosureTask"*)* @_ZN7content21CategorizedWorkerPool11ClosureTaskD0Ev to i8*)] }, align 8
@_ZTVN7content21CategorizedWorkerPool40CategorizedWorkerPoolSequencedTaskRunnerE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.75"*, i64)* @_ZN7content21CategorizedWorkerPool40CategorizedWorkerPoolSequencedTaskRunner15PostDelayedTaskERKN4base8LocationENS2_12OnceCallbackIFvvEEENS2_9TimeDeltaE to i8*), i8* bitcast (void (%"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"*)* @_ZN7content21CategorizedWorkerPool40CategorizedWorkerPoolSequencedTaskRunnerD2Ev to i8*), i8* bitcast (void (%"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"*)* @_ZN7content21CategorizedWorkerPool40CategorizedWorkerPoolSequencedTaskRunnerD0Ev to i8*), i8* bitcast (void (%"class.base::TaskRunner"*)* @_ZNK4base10TaskRunner10OnDestructEv to i8*), i8* bitcast (i1 (%"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.75"*, i64)* @_ZN7content21CategorizedWorkerPool40CategorizedWorkerPoolSequencedTaskRunner26PostNonNestableDelayedTaskERKN4base8LocationENS2_12OnceCallbackIFvvEEENS2_9TimeDeltaE to i8*), i8* bitcast (i1 (%"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"*)* @_ZNK7content21CategorizedWorkerPool40CategorizedWorkerPoolSequencedTaskRunner26RunsTasksInCurrentSequenceEv to i8*)] }, comdat, align 8
@.str.9 = private unnamed_addr constant [42 x i8] c"~CategorizedWorkerPoolSequencedTaskRunner\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"task\00", align 1
@.str.12 = private unnamed_addr constant [25 x i8] c"TaskGraphRunner::RunTask\00", align 1
@_ZN20trace_event_internal13kDefaultTrackE = external local_unnamed_addr global %"struct.perfetto::Track", align 8
@.str.13 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTVN7content12_GLOBAL__N_127CategorizedWorkerPoolThreadE = internal unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (i64 (%"class.base::PlatformThread::Delegate"*)* @_ZN4base14PlatformThread8Delegate17GetRealtimePeriodEv to i8*), i8* bitcast (void (%"class.base::SimpleThread"*)* @_ZN4base12SimpleThread10ThreadMainEv to i8*), i8* bitcast (void (%"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"*)* @_ZN7content12_GLOBAL__N_127CategorizedWorkerPoolThreadD2Ev to i8*), i8* bitcast (void (%"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"*)* @_ZN7content12_GLOBAL__N_127CategorizedWorkerPoolThreadD0Ev to i8*), i8* bitcast (void (%"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"*)* @_ZN7content12_GLOBAL__N_127CategorizedWorkerPoolThread3RunEv to i8*), i8* bitcast (void (%"class.base::SimpleThread"*)* @_ZN4base12SimpleThread11BeforeStartEv to i8*), i8* bitcast (void (%"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"*)* @_ZN7content12_GLOBAL__N_127CategorizedWorkerPoolThread9BeforeRunEv to i8*), i8* bitcast (void (%"class.base::SimpleThread"*)* @_ZN4base12SimpleThread10BeforeJoinEv to i8*)] }, align 8
@.str.14 = private unnamed_addr constant [10 x i8] c"BeforeRun\00", align 1
@.str.15 = private unnamed_addr constant [27 x i8] c"../../base/bind_internal.h\00", align 1
@.str.16 = private unnamed_addr constant [18 x i8] c"!IsNull(functor_)\00", align 1

@_ZN7content21CategorizedWorkerPoolC1Ev = hidden unnamed_addr alias void (%"class.content::CategorizedWorkerPool"*), void (%"class.content::CategorizedWorkerPool"*)* @_ZN7content21CategorizedWorkerPoolC2Ev
@_ZN7content21CategorizedWorkerPoolD1Ev = hidden unnamed_addr alias void (%"class.content::CategorizedWorkerPool"*), void (%"class.content::CategorizedWorkerPool"*)* @_ZN7content21CategorizedWorkerPoolD2Ev
@_ZN7content21CategorizedWorkerPool11ClosureTaskC1EN4base12OnceCallbackIFvvEEE = hidden unnamed_addr alias void (%"class.content::CategorizedWorkerPool::ClosureTask"*, %"class.base::OnceCallback.75"*), void (%"class.content::CategorizedWorkerPool::ClosureTask"*, %"class.base::OnceCallback.75"*)* @_ZN7content21CategorizedWorkerPool11ClosureTaskC2EN4base12OnceCallbackIFvvEEE
@_ZN7content21CategorizedWorkerPool11ClosureTaskD1Ev = hidden unnamed_addr alias void (%"class.content::CategorizedWorkerPool::ClosureTask"*), void (%"class.content::CategorizedWorkerPool::ClosureTask"*)* @_ZN7content21CategorizedWorkerPool11ClosureTaskD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21CategorizedWorkerPoolC2Ev(%"class.content::CategorizedWorkerPool"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.content::CategorizedWorkerPool"* %0 to %"class.base::TaskRunner"*
  tail call void @_ZN4base10TaskRunnerC2Ev(%"class.base::TaskRunner"* %2) #10
  %3 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [8 x i8*] }, { [10 x i8*], [8 x i8*] }* @_ZTVN7content21CategorizedWorkerPoolE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [8 x i8*] }, { [10 x i8*], [8 x i8*] }* @_ZTVN7content21CategorizedWorkerPoolE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %5 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #10
  %7 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %8) #10
  %9 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 4
  tail call void @_ZN2cc18TaskGraphWorkQueueC1Ev(%"class.cc::TaskGraphWorkQueue"* %9) #10
  %10 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 5
  %11 = bitcast %"class.content::CategorizedWorkerPool"* %0 to void (%"class.cc::NamespaceToken"*, %"class.content::CategorizedWorkerPool"*)***
  %12 = load void (%"class.cc::NamespaceToken"*, %"class.content::CategorizedWorkerPool"*)**, void (%"class.cc::NamespaceToken"*, %"class.content::CategorizedWorkerPool"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.cc::NamespaceToken"*, %"class.content::CategorizedWorkerPool"*)*, void (%"class.cc::NamespaceToken"*, %"class.content::CategorizedWorkerPool"*)** %12, i64 4
  %14 = load void (%"class.cc::NamespaceToken"*, %"class.content::CategorizedWorkerPool"*)*, void (%"class.cc::NamespaceToken"*, %"class.content::CategorizedWorkerPool"*)** %13, align 8
  tail call void %14(%"class.cc::NamespaceToken"* sret %10, %"class.content::CategorizedWorkerPool"* %0) #10
  %15 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 6
  %16 = bitcast %"class.std::__1::vector.32"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #10
  %17 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 7
  tail call void @_ZN2cc9TaskGraphC1Ev(%"struct.cc::TaskGraph"* %17) #10
  %18 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 8
  %19 = bitcast %"class.std::__1::vector.32"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #10
  %20 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 9
  tail call void @_ZN4base17ConditionVariableC1EPNS_4LockE(%"class.base::ConditionVariable"* %20, %"class.base::Lock"* %7) #10
  %21 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 10
  tail call void @_ZN4base17ConditionVariableC1EPNS_4LockE(%"class.base::ConditionVariable"* %21, %"class.base::Lock"* %7) #10
  %22 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 11
  tail call void @_ZN4base17ConditionVariableC1EPNS_4LockE(%"class.base::ConditionVariable"* %22, %"class.base::Lock"* %7) #10
  %23 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 12
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 9, i32 2
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 10, i32 2
  store i8 0, i8* %26, align 8
  %27 = bitcast %"class.base::internal::BindStateBase"** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false)
  ret void
}

declare void @_ZN4base10TaskRunnerC2Ev(%"class.base::TaskRunner"*) unnamed_addr #1

declare void @_ZN2cc18TaskGraphWorkQueueC1Ev(%"class.cc::TaskGraphWorkQueue"*) unnamed_addr #1

declare void @_ZN2cc9TaskGraphC1Ev(%"struct.cc::TaskGraph"*) unnamed_addr #1

declare void @_ZN4base17ConditionVariableC1EPNS_4LockE(%"class.base::ConditionVariable"*, %"class.base::Lock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21CategorizedWorkerPool5StartEiPN3gfx17RenderingPipelineE(%"class.content::CategorizedWorkerPool"*, i32, %"class.gfx::RenderingPipeline"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"struct.base::SimpleThread::Options", align 8
  %7 = alloca %"class.std::__1::unique_ptr", align 8
  %8 = alloca %"struct.base::SimpleThread::Options", align 8
  %9 = alloca %"class.base::OnceCallback", align 8
  %10 = alloca %"class.std::__1::unique_ptr", align 8
  %11 = ptrtoint %"class.gfx::RenderingPipeline"* %2 to i64
  %12 = add nsw i32 %1, 1
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 2
  tail call void @_ZNSt3__16vectorINS_10unique_ptrIN4base12SimpleThreadENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE7reserveEm(%"class.std::__1::vector"* %14, i64 %13)
  %15 = tail call i8* @_Znwm(i64 6) #11
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %15, i8* align 2 bitcast ([3 x i16]* @_ZN7content12_GLOBAL__N_131kNormalThreadPriorityCategoriesE to i8*), i64 6, i1 false) #10
  %16 = icmp sgt i32 %1, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %3
  %18 = ptrtoint %"class.content::CategorizedWorkerPool"* %0 to i64
  br label %37

19:                                               ; preds = %3
  %20 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %21 = bitcast %"struct.base::SimpleThread::Options"* %6 to i8*
  %22 = getelementptr inbounds %"struct.base::SimpleThread::Options", %"struct.base::SimpleThread::Options"* %6, i64 0, i32 1
  %23 = getelementptr inbounds %"struct.base::SimpleThread::Options", %"struct.base::SimpleThread::Options"* %6, i64 0, i32 2
  %24 = ptrtoint %"class.content::CategorizedWorkerPool"* %0 to i64
  %25 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 9
  %26 = ptrtoint %"class.base::ConditionVariable"* %25 to i64
  %27 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.std::__1::unique_ptr"* %7 to i8*
  %31 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  %32 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 2, i32 0, i32 1
  %33 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.std::__1::unique_ptr"** %32 to i64*
  %36 = bitcast %"struct.base::SimpleThread::Options"* %6 to i8*
  br label %87

37:                                               ; preds = %132, %17
  %38 = phi i64 [ %18, %17 ], [ %24, %132 ]
  %39 = bitcast %"struct.base::SimpleThread::Options"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"struct.base::SimpleThread::Options", %"struct.base::SimpleThread::Options"* %8, i64 0, i32 0
  %41 = getelementptr inbounds %"struct.base::SimpleThread::Options", %"struct.base::SimpleThread::Options"* %8, i64 0, i32 1
  %42 = getelementptr inbounds %"struct.base::SimpleThread::Options", %"struct.base::SimpleThread::Options"* %8, i64 0, i32 2
  %43 = bitcast %"struct.base::SimpleThread::Options"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 16, i1 false)
  store i64 0, i64* %40, align 8
  store i8 1, i8* %42, align 4
  store i32 0, i32* %41, align 8
  %44 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 10
  %45 = ptrtoint %"class.base::ConditionVariable"* %44 to i64
  %46 = call i8* @_Znwm(i64 144) #11
  %47 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #10
  %48 = call i8* @_Znwm(i64 32) #11
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %48, i8** %49, align 8
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = bitcast i64* %50 to <2 x i64>*
  store <2 x i64> <i64 30, i64 -9223372036854775776>, <2 x i64>* %51, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %48, i8* align 1 getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i64 30, i1 false) #10
  %52 = getelementptr inbounds i8, i8* %48, i64 30
  store i8 0, i8* %52, align 1
  %53 = call i8* @_Znwm(i64 2) #11
  %54 = bitcast i8* %53 to i16*
  store i16 2, i16* %54, align 2
  %55 = bitcast i8* %46 to %"class.base::SimpleThread"*
  call void @_ZN4base12SimpleThreadC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS0_7OptionsE(%"class.base::SimpleThread"* nonnull %55, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"struct.base::SimpleThread::Options"* nonnull dereferenceable(16) %8) #10
  %56 = bitcast i8* %46 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN7content12_GLOBAL__N_127CategorizedWorkerPoolThreadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = getelementptr inbounds i8, i8* %46, i64 80
  %58 = bitcast i8* %57 to i64*
  store i64 %38, i64* %58, align 8
  %59 = getelementptr inbounds i8, i8* %46, i64 88
  %60 = call i8* @_Znwm(i64 2) #11
  %61 = getelementptr inbounds i8, i8* %46, i64 96
  %62 = bitcast i8* %59 to i8**
  store i8* %60, i8** %62, align 8
  %63 = getelementptr inbounds i8, i8* %60, i64 2
  %64 = getelementptr inbounds i8, i8* %46, i64 104
  %65 = bitcast i8* %64 to i8**
  store i8* %63, i8** %65, align 8
  %66 = bitcast i8* %61 to i64*
  %67 = bitcast i8* %53 to i16*
  %68 = bitcast i8* %60 to i16*
  %69 = load i16, i16* %67, align 2
  store i16 %69, i16* %68, align 2
  %70 = ptrtoint i8* %63 to i64
  store i64 %70, i64* %66, align 8
  %71 = getelementptr inbounds i8, i8* %46, i64 112
  %72 = bitcast i8* %71 to %"class.gfx::RenderingPipeline"**
  store %"class.gfx::RenderingPipeline"* null, %"class.gfx::RenderingPipeline"** %72, align 8
  %73 = getelementptr inbounds i8, i8* %46, i64 120
  %74 = bitcast i8* %73 to i64*
  store i64 %45, i64* %74, align 8
  %75 = getelementptr inbounds i8, i8* %46, i64 128
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 16, i1 false) #10
  call void @_ZdlPv(i8* nonnull %53) #11
  %76 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %37
  %81 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %81) #11
  br label %82

82:                                               ; preds = %37, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #10
  %83 = ptrtoint i8* %46 to i64
  %84 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %85 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %84, align 8
  %86 = icmp eq %"class.base::internal::BindStateBase"* %85, null
  br i1 %86, label %158, label %134

87:                                               ; preds = %132, %19
  %88 = phi i32 [ 0, %19 ], [ %89, %132 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #10
  %89 = add nuw nsw i32 %88, 1
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 %89) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 16, i1 false)
  store i32 1, i32* %22, align 8
  store i8 1, i8* %23, align 4
  %90 = call i8* @_Znwm(i64 144) #11
  %91 = call i8* @_Znwm(i64 6) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %91, i8* nonnull align 2 %15, i64 6, i1 false) #10
  %92 = bitcast i8* %90 to %"class.base::SimpleThread"*
  call void @_ZN4base12SimpleThreadC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS0_7OptionsE(%"class.base::SimpleThread"* nonnull %92, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"struct.base::SimpleThread::Options"* nonnull dereferenceable(16) %6) #10
  %93 = bitcast i8* %90 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN7content12_GLOBAL__N_127CategorizedWorkerPoolThreadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %93, align 8
  %94 = getelementptr inbounds i8, i8* %90, i64 80
  %95 = bitcast i8* %94 to i64*
  store i64 %24, i64* %95, align 8
  %96 = getelementptr inbounds i8, i8* %90, i64 88
  %97 = call i8* @_Znwm(i64 6) #11
  %98 = getelementptr inbounds i8, i8* %90, i64 96
  %99 = bitcast i8* %96 to i8**
  store i8* %97, i8** %99, align 8
  %100 = getelementptr inbounds i8, i8* %97, i64 6
  %101 = getelementptr inbounds i8, i8* %90, i64 104
  %102 = bitcast i8* %101 to i8**
  store i8* %100, i8** %102, align 8
  %103 = bitcast i8* %98 to i64*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %97, i8* nonnull align 2 %91, i64 6, i1 false) #10
  %104 = ptrtoint i8* %100 to i64
  store i64 %104, i64* %103, align 8
  %105 = getelementptr inbounds i8, i8* %90, i64 112
  %106 = bitcast i8* %105 to i64*
  store i64 %11, i64* %106, align 8
  %107 = getelementptr inbounds i8, i8* %90, i64 120
  %108 = bitcast i8* %107 to i64*
  store i64 %26, i64* %108, align 8
  %109 = getelementptr inbounds i8, i8* %90, i64 128
  call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 16, i1 false) #10
  call void @_ZdlPv(i8* nonnull %91) #11
  %110 = ptrtoint i8* %90 to i64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #10
  %111 = load i8, i8* %28, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %87
  %114 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %114) #11
  br label %115

115:                                              ; preds = %87, %113
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #10
  call void @_ZN4base12SimpleThread10StartAsyncEv(%"class.base::SimpleThread"* nonnull %92) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  store i64 %110, i64* %31, align 8
  %116 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %32, align 8
  %117 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %33, align 8
  %118 = icmp ult %"class.std::__1::unique_ptr"* %116, %117
  br i1 %118, label %119, label %123

119:                                              ; preds = %115
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %34, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  store i64 %110, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 1
  %122 = ptrtoint %"class.std::__1::unique_ptr"* %121 to i64
  store i64 %122, i64* %35, align 8
  br label %124

123:                                              ; preds = %115
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4base12SimpleThreadENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %14, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %7) #10
  br label %124

124:                                              ; preds = %119, %123
  %125 = load %"class.base::SimpleThread"*, %"class.base::SimpleThread"** %34, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %34, align 8
  %126 = icmp eq %"class.base::SimpleThread"* %125, null
  br i1 %126, label %132, label %127

127:                                              ; preds = %124
  %128 = bitcast %"class.base::SimpleThread"* %125 to void (%"class.base::SimpleThread"*)***
  %129 = load void (%"class.base::SimpleThread"*)**, void (%"class.base::SimpleThread"*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.base::SimpleThread"*)*, void (%"class.base::SimpleThread"*)** %129, i64 3
  %131 = load void (%"class.base::SimpleThread"*)*, void (%"class.base::SimpleThread"*)** %130, align 8
  call void %131(%"class.base::SimpleThread"* nonnull %125) #10
  br label %132

132:                                              ; preds = %127, %124
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  %133 = icmp eq i32 %89, %1
  br i1 %133, label %37, label %87

134:                                              ; preds = %82
  %135 = ptrtoint %"class.base::internal::BindStateBase"* %85 to i64
  %136 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 14
  %137 = getelementptr inbounds %class.scoped_refptr.61, %class.scoped_refptr.61* %136, i64 0, i32 0
  %138 = bitcast %class.scoped_refptr.61* %136 to i64*
  %139 = load i64, i64* %138, align 8
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %137, align 8
  %140 = bitcast %"class.base::OnceCallback"* %9 to i64*
  store i64 %135, i64* %140, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %84, align 8
  %141 = getelementptr inbounds i8, i8* %46, i64 136
  %142 = bitcast i8* %141 to i64*
  %143 = bitcast i8* %141 to %"class.base::SingleThreadTaskRunner"**
  %144 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %143, align 8
  store i64 %139, i64* %142, align 8
  %145 = icmp eq %"class.base::SingleThreadTaskRunner"* %144, null
  br i1 %145, label %154, label %146

146:                                              ; preds = %134
  %147 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %144, i64 0, i32 0, i32 0, i32 1
  %148 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %147, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = atomicrmw sub i32* %148, i32 1 acq_rel
  %150 = icmp eq i32 %149, 1
  br i1 %150, label %151, label %154

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %147, i64 -2
  %153 = bitcast %"class.base::RefCountedThreadSafe"* %152 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %153) #10
  br label %154

154:                                              ; preds = %134, %146, %151
  %155 = bitcast i8* %75 to %"class.base::internal::CallbackBase"*
  %156 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0
  %157 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %155, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %156) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %156) #10
  br label %158

158:                                              ; preds = %82, %154
  call void @_ZN4base12SimpleThread10StartAsyncEv(%"class.base::SimpleThread"* nonnull %55) #10
  %159 = bitcast %"class.std::__1::unique_ptr"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #10
  %160 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 %83, i64* %160, align 8
  %161 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 2, i32 0, i32 1
  %162 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %161, align 8
  %163 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %164 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %163, align 8
  %165 = icmp ult %"class.std::__1::unique_ptr"* %162, %164
  br i1 %165, label %166, label %172

166:                                              ; preds = %158
  %167 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %167, align 8
  %168 = bitcast %"class.std::__1::unique_ptr"* %162 to i64*
  store i64 %83, i64* %168, align 8
  %169 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %162, i64 1
  %170 = ptrtoint %"class.std::__1::unique_ptr"* %169 to i64
  %171 = bitcast %"class.std::__1::unique_ptr"** %161 to i64*
  store i64 %170, i64* %171, align 8
  br label %173

172:                                              ; preds = %158
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4base12SimpleThreadENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %14, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %10) #10
  br label %173

173:                                              ; preds = %166, %172
  %174 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 0, i32 0, i32 0, i32 0
  %175 = load %"class.base::SimpleThread"*, %"class.base::SimpleThread"** %174, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %174, align 8
  %176 = icmp eq %"class.base::SimpleThread"* %175, null
  br i1 %176, label %182, label %177

177:                                              ; preds = %173
  %178 = bitcast %"class.base::SimpleThread"* %175 to void (%"class.base::SimpleThread"*)***
  %179 = load void (%"class.base::SimpleThread"*)**, void (%"class.base::SimpleThread"*)*** %178, align 8
  %180 = getelementptr inbounds void (%"class.base::SimpleThread"*)*, void (%"class.base::SimpleThread"*)** %179, i64 3
  %181 = load void (%"class.base::SimpleThread"*)*, void (%"class.base::SimpleThread"*)** %180, align 8
  call void %181(%"class.base::SimpleThread"* nonnull %175) #10
  br label %182

182:                                              ; preds = %177, %173
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #10
  call void @_ZdlPv(i8* nonnull %15) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN4base12SimpleThreadENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE7reserveEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.std::__1::unique_ptr"*
  br i1 %10, label %12, label %135

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr"** %13 to i64*
  %15 = icmp ugt i64 %1, 2305843009213693951
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #12
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 3
  %21 = shl i64 %1, 3
  %22 = tail call i8* @_Znwm(i64 %21) #11
  %23 = bitcast i8* %22 to %"class.std::__1::unique_ptr"*
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %23, i64 %20
  %25 = ptrtoint %"class.std::__1::unique_ptr"* %24 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %23, i64 %1
  %27 = ptrtoint %"class.std::__1::unique_ptr"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.std::__1::unique_ptr"*
  %29 = icmp eq %"class.std::__1::unique_ptr"* %28, %11
  br i1 %29, label %57, label %30

30:                                               ; preds = %17
  %31 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 -1, i32 0, i32 0, i32 0
  %32 = bitcast %"class.base::SimpleThread"** %31 to i8*
  %33 = sub i64 0, %7
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 7
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %30, %40
  %41 = phi %"class.std::__1::unique_ptr"* [ %44, %40 ], [ %24, %30 ]
  %42 = phi %"class.std::__1::unique_ptr"* [ %45, %40 ], [ %28, %30 ]
  %43 = phi i64 [ %50, %40 ], [ %38, %30 ]
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 -1
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %42, i64 -1
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.std::__1::unique_ptr"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %46, align 8
  %49 = bitcast %"class.std::__1::unique_ptr"* %44 to i64*
  store i64 %48, i64* %49, align 8
  %50 = add i64 %43, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %40, !llvm.loop !2

52:                                               ; preds = %40, %30
  %53 = phi %"class.std::__1::unique_ptr"* [ undef, %30 ], [ %44, %40 ]
  %54 = phi %"class.std::__1::unique_ptr"* [ %24, %30 ], [ %44, %40 ]
  %55 = phi %"class.std::__1::unique_ptr"* [ %28, %30 ], [ %45, %40 ]
  %56 = icmp ult i8* %34, inttoptr (i64 56 to i8*)
  br i1 %56, label %110, label %58

57:                                               ; preds = %17
  store i64 %25, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  br label %130

58:                                               ; preds = %52, %58
  %59 = phi %"class.std::__1::unique_ptr"* [ %103, %58 ], [ %54, %52 ]
  %60 = phi %"class.std::__1::unique_ptr"* [ %104, %58 ], [ %55, %52 ]
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.std::__1::unique_ptr"* %62 to i64*
  %65 = load i64, i64* %64, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %63, align 8
  %66 = bitcast %"class.std::__1::unique_ptr"* %61 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -2
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -2
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.std::__1::unique_ptr"* %68 to i64*
  %71 = load i64, i64* %70, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %69, align 8
  %72 = bitcast %"class.std::__1::unique_ptr"* %67 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -3
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -3
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.std::__1::unique_ptr"* %74 to i64*
  %77 = load i64, i64* %76, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %75, align 8
  %78 = bitcast %"class.std::__1::unique_ptr"* %73 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -4
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -4
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -5
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -5
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -6
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -6
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -7
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -7
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -8
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = icmp eq %"class.std::__1::unique_ptr"* %104, %11
  br i1 %109, label %110, label %58

110:                                              ; preds = %58, %52
  %111 = phi %"class.std::__1::unique_ptr"* [ %53, %52 ], [ %103, %58 ]
  %112 = ptrtoint %"class.std::__1::unique_ptr"* %111 to i64
  %113 = load i64, i64* %6, align 8
  %114 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %13, align 8
  %115 = inttoptr i64 %113 to %"class.std::__1::unique_ptr"*
  store i64 %112, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %116 = icmp eq %"class.std::__1::unique_ptr"* %114, %115
  br i1 %116, label %130, label %117

117:                                              ; preds = %110, %128
  %118 = phi %"class.std::__1::unique_ptr"* [ %119, %128 ], [ %114, %110 ]
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %118, i64 -1
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %119, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.base::SimpleThread"*, %"class.base::SimpleThread"** %120, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %120, align 8
  %122 = icmp eq %"class.base::SimpleThread"* %121, null
  br i1 %122, label %128, label %123

123:                                              ; preds = %117
  %124 = bitcast %"class.base::SimpleThread"* %121 to void (%"class.base::SimpleThread"*)***
  %125 = load void (%"class.base::SimpleThread"*)**, void (%"class.base::SimpleThread"*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.base::SimpleThread"*)*, void (%"class.base::SimpleThread"*)** %125, i64 3
  %127 = load void (%"class.base::SimpleThread"*)*, void (%"class.base::SimpleThread"*)** %126, align 8
  tail call void %127(%"class.base::SimpleThread"* nonnull %121) #10
  br label %128

128:                                              ; preds = %123, %117
  %129 = icmp eq %"class.std::__1::unique_ptr"* %119, %115
  br i1 %129, label %130, label %117

130:                                              ; preds = %128, %57, %110
  %131 = phi i64 [ %7, %57 ], [ %113, %110 ], [ %113, %128 ]
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %135, label %133

133:                                              ; preds = %130
  %134 = inttoptr i64 %131 to i8*
  tail call void @_ZdlPv(i8* %134) #11
  br label %135

135:                                              ; preds = %133, %130, %2
  ret void
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base12SimpleThread10StartAsyncEv(%"class.base::SimpleThread"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21CategorizedWorkerPool8ShutdownEv(%"class.content::CategorizedWorkerPool"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope", align 1
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.cc::NamespaceToken", align 4
  %5 = alloca %"class.cc::NamespaceToken", align 4
  %6 = getelementptr inbounds %"class.base::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope", %"class.base::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope"* %2, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #10
  store i8 -86, i8* %6, align 1
  %7 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.3, i64 0, i64 0), i32 241) #10
  call void @_ZN4base49ScopedAllowBaseSyncPrimitivesOutsideBlockingScopeC1ERKNS_8LocationE(%"class.base::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope"* nonnull %2, %"class.base::Location"* nonnull dereferenceable(32) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 5, i32 0
  %9 = getelementptr inbounds %"class.cc::NamespaceToken", %"class.cc::NamespaceToken"* %4, i64 0, i32 0
  %10 = load i32, i32* %8, align 8
  store i32 %10, i32* %9, align 4
  %11 = bitcast %"class.content::CategorizedWorkerPool"* %0 to void (%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"*)***
  %12 = load void (%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"*)**, void (%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"*)*, void (%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"*)** %12, i64 6
  %14 = load void (%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"*)*, void (%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"*)** %13, align 8
  call void %14(%"class.content::CategorizedWorkerPool"* %0, %"class.cc::NamespaceToken"* nonnull %4) #10
  call void @_ZN4base49ScopedAllowBaseSyncPrimitivesOutsideBlockingScopeD1Ev(%"class.base::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #10
  %15 = getelementptr inbounds %"class.cc::NamespaceToken", %"class.cc::NamespaceToken"* %5, i64 0, i32 0
  %16 = load i32, i32* %8, align 8
  store i32 %16, i32* %15, align 4
  %17 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 8
  %18 = bitcast %"class.content::CategorizedWorkerPool"* %0 to void (%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.32"*)***
  %19 = load void (%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.32"*)**, void (%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.32"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.32"*)*, void (%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.32"*)** %19, i64 7
  %21 = load void (%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.32"*)*, void (%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.32"*)** %20, align 8
  call void %21(%"class.content::CategorizedWorkerPool"* %0, %"class.cc::NamespaceToken"* nonnull %5, %"class.std::__1::vector.32"* %17) #10
  %22 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 3
  %23 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %22, i64 0, i32 0, i32 0
  %24 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %23) #10
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %28, label %26, !prof !4

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %22, i64 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %27) #10
  br label %28

28:                                               ; preds = %1, %26
  %29 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 12
  store i8 1, i8* %29, align 8
  %30 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 9
  call void @_ZN4base17ConditionVariable9BroadcastEv(%"class.base::ConditionVariable"* %30) #10
  %31 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 10
  call void @_ZN4base17ConditionVariable9BroadcastEv(%"class.base::ConditionVariable"* %31) #10
  %32 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %23) #10
  %33 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 2, i32 0, i32 0
  %34 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %33, align 8
  %35 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 2, i32 0, i32 1
  %36 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %35, align 8
  %37 = icmp eq %"class.std::__1::unique_ptr"* %34, %36
  br i1 %37, label %55, label %38

38:                                               ; preds = %28, %52
  %39 = phi %"class.std::__1::unique_ptr"* [ %43, %52 ], [ %36, %28 ]
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %39, i64 -1, i32 0, i32 0, i32 0
  %41 = load %"class.base::SimpleThread"*, %"class.base::SimpleThread"** %40, align 8
  call void @_ZN4base12SimpleThread4JoinEv(%"class.base::SimpleThread"* %41) #10
  %42 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %35, align 8
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %42, i64 -1
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.base::SimpleThread"*, %"class.base::SimpleThread"** %44, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %44, align 8
  %46 = icmp eq %"class.base::SimpleThread"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %38
  %48 = bitcast %"class.base::SimpleThread"* %45 to void (%"class.base::SimpleThread"*)***
  %49 = load void (%"class.base::SimpleThread"*)**, void (%"class.base::SimpleThread"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.base::SimpleThread"*)*, void (%"class.base::SimpleThread"*)** %49, i64 3
  %51 = load void (%"class.base::SimpleThread"*)*, void (%"class.base::SimpleThread"*)** %50, align 8
  call void %51(%"class.base::SimpleThread"* nonnull %45) #10
  br label %52

52:                                               ; preds = %38, %47
  store %"class.std::__1::unique_ptr"* %43, %"class.std::__1::unique_ptr"** %35, align 8
  %53 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %33, align 8
  %54 = icmp eq %"class.std::__1::unique_ptr"* %53, %43
  br i1 %54, label %55, label %38

55:                                               ; preds = %52, %28
  ret void
}

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

declare void @_ZN4base49ScopedAllowBaseSyncPrimitivesOutsideBlockingScopeC1ERKNS_8LocationE(%"class.base::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN4base49ScopedAllowBaseSyncPrimitivesOutsideBlockingScopeD1Ev(%"class.base::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope"*) unnamed_addr #3

declare void @_ZN4base17ConditionVariable9BroadcastEv(%"class.base::ConditionVariable"*) local_unnamed_addr #1

declare void @_ZN4base12SimpleThread4JoinEv(%"class.base::SimpleThread"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content21CategorizedWorkerPool15PostDelayedTaskERKN4base8LocationENS1_12OnceCallbackIFvvEEENS1_9TimeDeltaE(%"class.content::CategorizedWorkerPool"*, %"class.base::Location"* nocapture readnone dereferenceable(32), %"class.base::OnceCallback.75"* nocapture, i64) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback.75", align 8
  %6 = alloca %"class.cc::NamespaceToken", align 4
  %7 = alloca %class.scoped_refptr.34, align 8
  %8 = alloca %"struct.cc::TaskGraph::Node", align 8
  %9 = alloca %"class.cc::NamespaceToken", align 4
  %10 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %10, i64 0, i32 0, i32 0
  %12 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %11) #10
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14, !prof !4

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %10, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %15) #10
  br label %16

16:                                               ; preds = %4, %14
  %17 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 5, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 8
  %20 = bitcast %"class.cc::NamespaceToken"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20)
  %21 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 4
  %22 = getelementptr inbounds %"class.cc::NamespaceToken", %"class.cc::NamespaceToken"* %6, i64 0, i32 0
  store i32 %18, i32* %22, align 4
  call void @_ZN2cc18TaskGraphWorkQueue21CollectCompletedTasksENS_14NamespaceTokenEPNSt3__16vectorI13scoped_refptrINS_4TaskEENS2_9allocatorIS6_EEEE(%"class.cc::TaskGraphWorkQueue"* %21, %"class.cc::NamespaceToken"* nonnull %6, %"class.std::__1::vector.32"* %19) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20)
  %23 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 6
  %24 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %23, i64 0, i32 0, i32 0
  %25 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %24, align 8
  %26 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 6, i32 0, i32 1
  %27 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %26, align 8
  %28 = icmp eq %class.scoped_refptr.34* %25, %27
  br i1 %28, label %56, label %29

29:                                               ; preds = %16
  %30 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 8, i32 0, i32 0
  %31 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %30, align 8
  %32 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 8, i32 0, i32 1
  %33 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %32, align 8
  %34 = icmp eq %class.scoped_refptr.34* %31, %33
  br label %35

35:                                               ; preds = %51, %29
  %36 = phi %class.scoped_refptr.34* [ %25, %29 ], [ %52, %51 ]
  br i1 %34, label %48, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %36, i64 0, i32 0
  %39 = load %"class.cc::Task"*, %"class.cc::Task"** %38, align 8
  br label %40

40:                                               ; preds = %45, %37
  %41 = phi %class.scoped_refptr.34* [ %31, %37 ], [ %46, %45 ]
  %42 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %41, i64 0, i32 0
  %43 = load %"class.cc::Task"*, %"class.cc::Task"** %42, align 8
  %44 = icmp eq %"class.cc::Task"* %43, %39
  br i1 %44, label %48, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %41, i64 1
  %47 = icmp eq %class.scoped_refptr.34* %46, %33
  br i1 %47, label %51, label %40

48:                                               ; preds = %40, %35
  %49 = phi %class.scoped_refptr.34* [ %31, %35 ], [ %41, %40 ]
  %50 = icmp eq %class.scoped_refptr.34* %49, %33
  br i1 %50, label %51, label %56

51:                                               ; preds = %45, %48
  %52 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %36, i64 1
  %53 = icmp eq %class.scoped_refptr.34* %52, %27
  br i1 %53, label %54, label %35

54:                                               ; preds = %51
  %55 = ptrtoint %class.scoped_refptr.34* %27 to i64
  br label %119

56:                                               ; preds = %48, %16
  %57 = phi %class.scoped_refptr.34* [ %25, %16 ], [ %36, %48 ]
  %58 = ptrtoint %class.scoped_refptr.34* %57 to i64
  %59 = icmp eq %class.scoped_refptr.34* %57, %27
  br i1 %59, label %119, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %57, i64 1
  %62 = icmp eq %class.scoped_refptr.34* %61, %27
  br i1 %62, label %119, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 8, i32 0, i32 0
  %65 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 8, i32 0, i32 1
  br label %66

66:                                               ; preds = %113, %63
  %67 = phi %class.scoped_refptr.34* [ %61, %63 ], [ %115, %113 ]
  %68 = phi i64 [ %58, %63 ], [ %114, %113 ]
  %69 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %64, align 8
  %70 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %65, align 8
  %71 = icmp eq %class.scoped_refptr.34* %69, %70
  br i1 %71, label %84, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %67, i64 0, i32 0
  %74 = load %"class.cc::Task"*, %"class.cc::Task"** %73, align 8
  %75 = ptrtoint %"class.cc::Task"* %74 to i64
  br label %76

76:                                               ; preds = %81, %72
  %77 = phi %class.scoped_refptr.34* [ %69, %72 ], [ %82, %81 ]
  %78 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %77, i64 0, i32 0
  %79 = load %"class.cc::Task"*, %"class.cc::Task"** %78, align 8
  %80 = icmp eq %"class.cc::Task"* %79, %74
  br i1 %80, label %84, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %77, i64 1
  %83 = icmp eq %class.scoped_refptr.34* %82, %70
  br i1 %83, label %90, label %76

84:                                               ; preds = %76, %66
  %85 = phi %class.scoped_refptr.34* [ %69, %66 ], [ %77, %76 ]
  %86 = icmp eq %class.scoped_refptr.34* %85, %70
  br i1 %86, label %87, label %113

87:                                               ; preds = %84
  %88 = bitcast %class.scoped_refptr.34* %67 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %81, %87
  %91 = phi i64 [ %89, %87 ], [ %75, %81 ]
  %92 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %67, i64 0, i32 0
  store %"class.cc::Task"* null, %"class.cc::Task"** %92, align 8
  %93 = inttoptr i64 %68 to %class.scoped_refptr.34*
  %94 = inttoptr i64 %68 to i64*
  %95 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %93, i64 0, i32 0
  %96 = load %"class.cc::Task"*, %"class.cc::Task"** %95, align 8
  store i64 %91, i64* %94, align 8
  %97 = icmp eq %"class.cc::Task"* %96, null
  br i1 %97, label %110, label %98

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"class.cc::Task", %"class.cc::Task"* %96, i64 0, i32 1
  %100 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw sub i32* %100, i32 1 acq_rel
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %110

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %99, i64 -2
  %105 = bitcast %"class.base::RefCountedThreadSafe.35"* %104 to %"class.cc::Task"*
  %106 = bitcast %"class.base::RefCountedThreadSafe.35"* %104 to void (%"class.cc::Task"*)***
  %107 = load void (%"class.cc::Task"*)**, void (%"class.cc::Task"*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %107, i64 2
  %109 = load void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %108, align 8
  call void %109(%"class.cc::Task"* nonnull %105) #10
  br label %110

110:                                              ; preds = %103, %98, %90
  %111 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %93, i64 1
  %112 = ptrtoint %class.scoped_refptr.34* %111 to i64
  br label %113

113:                                              ; preds = %110, %84
  %114 = phi i64 [ %68, %84 ], [ %112, %110 ]
  %115 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %67, i64 1
  %116 = icmp eq %class.scoped_refptr.34* %115, %27
  br i1 %116, label %117, label %66

117:                                              ; preds = %113
  %118 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %26, align 8
  br label %119

119:                                              ; preds = %117, %60, %56, %54
  %120 = phi %class.scoped_refptr.34* [ %27, %56 ], [ %27, %54 ], [ %27, %60 ], [ %118, %117 ]
  %121 = phi i64 [ %58, %56 ], [ %55, %54 ], [ %58, %60 ], [ %114, %117 ]
  %122 = inttoptr i64 %121 to %class.scoped_refptr.34*
  %123 = icmp eq %class.scoped_refptr.34* %120, %122
  br i1 %123, label %145, label %124

124:                                              ; preds = %119, %142
  %125 = phi %class.scoped_refptr.34* [ %126, %142 ], [ %120, %119 ]
  %126 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %125, i64 -1
  %127 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %126, i64 0, i32 0
  %128 = load %"class.cc::Task"*, %"class.cc::Task"** %127, align 8
  %129 = icmp eq %"class.cc::Task"* %128, null
  br i1 %129, label %142, label %130

130:                                              ; preds = %124
  %131 = getelementptr inbounds %"class.cc::Task", %"class.cc::Task"* %128, i64 0, i32 1
  %132 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %131, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = atomicrmw sub i32* %132, i32 1 acq_rel
  %134 = icmp eq i32 %133, 1
  br i1 %134, label %135, label %142

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %131, i64 -2
  %137 = bitcast %"class.base::RefCountedThreadSafe.35"* %136 to %"class.cc::Task"*
  %138 = bitcast %"class.base::RefCountedThreadSafe.35"* %136 to void (%"class.cc::Task"*)***
  %139 = load void (%"class.cc::Task"*)**, void (%"class.cc::Task"*)*** %138, align 8
  %140 = getelementptr inbounds void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %139, i64 2
  %141 = load void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %140, align 8
  call void %141(%"class.cc::Task"* nonnull %137) #10
  br label %142

142:                                              ; preds = %135, %130, %124
  %143 = icmp eq %class.scoped_refptr.34* %126, %122
  br i1 %143, label %144, label %124

144:                                              ; preds = %142
  store %class.scoped_refptr.34* %122, %class.scoped_refptr.34** %26, align 8
  br label %145

145:                                              ; preds = %119, %144
  %146 = bitcast %class.scoped_refptr.34* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #10
  %147 = bitcast %"class.base::OnceCallback.75"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147)
  %148 = call i8* @_Znwm(i64 32) #11
  %149 = getelementptr inbounds %"class.base::OnceCallback.75", %"class.base::OnceCallback.75"* %2, i64 0, i32 0, i32 0, i32 0
  %150 = bitcast %"class.base::OnceCallback.75"* %2 to i64*
  %151 = load i64, i64* %150, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %149, align 8
  %152 = bitcast i8* %148 to %"class.cc::Task"*
  call void @_ZN2cc4TaskC2Ev(%"class.cc::Task"* nonnull %152) #10
  %153 = bitcast i8* %148 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN7content21CategorizedWorkerPool11ClosureTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %153, align 8
  %154 = getelementptr inbounds i8, i8* %148, i64 24
  %155 = getelementptr inbounds %"class.base::OnceCallback.75", %"class.base::OnceCallback.75"* %5, i64 0, i32 0, i32 0, i32 0
  %156 = bitcast i8* %154 to i64*
  store i64 %151, i64* %156, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %155, align 8
  %157 = getelementptr inbounds %"class.base::OnceCallback.75", %"class.base::OnceCallback.75"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %157) #10
  %158 = getelementptr inbounds i8, i8* %148, i64 8
  %159 = bitcast i8* %158 to i32*
  %160 = atomicrmw add i32* %159, i32 1 monotonic
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147)
  %161 = ptrtoint i8* %148 to i64
  %162 = bitcast %class.scoped_refptr.34* %7 to i64*
  store i64 %161, i64* %162, align 8
  %163 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %26, align 8
  %164 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %165 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %164, align 8
  %166 = icmp ult %class.scoped_refptr.34* %163, %165
  br i1 %166, label %167, label %173

167:                                              ; preds = %145
  %168 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %7, i64 0, i32 0
  %169 = bitcast %class.scoped_refptr.34* %163 to i64*
  store i64 %161, i64* %169, align 8
  store %"class.cc::Task"* null, %"class.cc::Task"** %168, align 8
  %170 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %163, i64 1
  %171 = ptrtoint %class.scoped_refptr.34* %170 to i64
  %172 = bitcast %class.scoped_refptr.34** %26 to i64*
  store i64 %171, i64* %172, align 8
  br label %189

173:                                              ; preds = %145
  call void @_ZNSt3__16vectorI13scoped_refptrIN2cc4TaskEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.32"* %23, %class.scoped_refptr.34* nonnull dereferenceable(8) %7) #10
  %174 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %7, i64 0, i32 0
  %175 = load %"class.cc::Task"*, %"class.cc::Task"** %174, align 8
  %176 = icmp eq %"class.cc::Task"* %175, null
  br i1 %176, label %189, label %177

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.cc::Task", %"class.cc::Task"* %175, i64 0, i32 1
  %179 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %178, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = atomicrmw sub i32* %179, i32 1 acq_rel
  %181 = icmp eq i32 %180, 1
  br i1 %181, label %182, label %189

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %178, i64 -2
  %184 = bitcast %"class.base::RefCountedThreadSafe.35"* %183 to %"class.cc::Task"*
  %185 = bitcast %"class.base::RefCountedThreadSafe.35"* %183 to void (%"class.cc::Task"*)***
  %186 = load void (%"class.cc::Task"*)**, void (%"class.cc::Task"*)*** %185, align 8
  %187 = getelementptr inbounds void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %186, i64 2
  %188 = load void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %187, align 8
  call void %188(%"class.cc::Task"* nonnull %184) #10
  br label %189

189:                                              ; preds = %167, %182, %177, %173
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #10
  %190 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 7
  call void @_ZN2cc9TaskGraph5ResetEv(%"struct.cc::TaskGraph"* %190) #10
  %191 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %24, align 8
  %192 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %26, align 8
  %193 = icmp eq %class.scoped_refptr.34* %191, %192
  br i1 %193, label %200, label %194

194:                                              ; preds = %189
  %195 = getelementptr inbounds %"struct.cc::TaskGraph", %"struct.cc::TaskGraph"* %190, i64 0, i32 0
  %196 = bitcast %"struct.cc::TaskGraph::Node"* %8 to i8*
  %197 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %198 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 7, i32 0, i32 0, i32 2, i32 0, i32 0
  %199 = bitcast %"struct.cc::TaskGraph::Node"** %197 to i64*
  br label %230

200:                                              ; preds = %246, %189
  %201 = getelementptr inbounds %"class.cc::NamespaceToken", %"class.cc::NamespaceToken"* %9, i64 0, i32 0
  %202 = load i32, i32* %17, align 8
  store i32 %202, i32* %201, align 4
  call void @_ZN7content21CategorizedWorkerPool29ScheduleTasksWithLockAcquiredEN2cc14NamespaceTokenEPNS1_9TaskGraphE(%"class.content::CategorizedWorkerPool"* %0, %"class.cc::NamespaceToken"* nonnull %9, %"struct.cc::TaskGraph"* %190)
  %203 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %19, i64 0, i32 0, i32 0
  %204 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %203, align 8
  %205 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 8, i32 0, i32 1
  %206 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %205, align 8
  %207 = icmp eq %class.scoped_refptr.34* %206, %204
  br i1 %207, label %228, label %208

208:                                              ; preds = %200, %226
  %209 = phi %class.scoped_refptr.34* [ %210, %226 ], [ %206, %200 ]
  %210 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %209, i64 -1
  %211 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %210, i64 0, i32 0
  %212 = load %"class.cc::Task"*, %"class.cc::Task"** %211, align 8
  %213 = icmp eq %"class.cc::Task"* %212, null
  br i1 %213, label %226, label %214

214:                                              ; preds = %208
  %215 = getelementptr inbounds %"class.cc::Task", %"class.cc::Task"* %212, i64 0, i32 1
  %216 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %215, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = atomicrmw sub i32* %216, i32 1 acq_rel
  %218 = icmp eq i32 %217, 1
  br i1 %218, label %219, label %226

219:                                              ; preds = %214
  %220 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %215, i64 -2
  %221 = bitcast %"class.base::RefCountedThreadSafe.35"* %220 to %"class.cc::Task"*
  %222 = bitcast %"class.base::RefCountedThreadSafe.35"* %220 to void (%"class.cc::Task"*)***
  %223 = load void (%"class.cc::Task"*)**, void (%"class.cc::Task"*)*** %222, align 8
  %224 = getelementptr inbounds void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %223, i64 2
  %225 = load void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %224, align 8
  call void %225(%"class.cc::Task"* nonnull %221) #10
  br label %226

226:                                              ; preds = %219, %214, %208
  %227 = icmp eq %class.scoped_refptr.34* %210, %204
  br i1 %227, label %228, label %208

228:                                              ; preds = %226, %200
  store %class.scoped_refptr.34* %204, %class.scoped_refptr.34** %205, align 8
  %229 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #10
  ret i1 true

230:                                              ; preds = %194, %246
  %231 = phi %class.scoped_refptr.34* [ %191, %194 ], [ %247, %246 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %196) #10
  %232 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %231, i64 0, i32 0
  %233 = load %"class.cc::Task"*, %"class.cc::Task"** %232, align 8
  %234 = icmp eq %"class.cc::Task"* %233, null
  br i1 %234, label %238, label %235

235:                                              ; preds = %230
  %236 = getelementptr inbounds %"class.cc::Task", %"class.cc::Task"* %233, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = atomicrmw add i32* %236, i32 1 monotonic
  br label %238

238:                                              ; preds = %230, %235
  call void @_ZN2cc9TaskGraph4NodeC1E13scoped_refptrINS_4TaskEEttj(%"struct.cc::TaskGraph::Node"* nonnull %8, %"class.cc::Task"* %233, i16 zeroext 1, i16 zeroext 0, i32 0) #10
  %239 = load %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"** %197, align 8
  %240 = load %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"** %198, align 8
  %241 = icmp ult %"struct.cc::TaskGraph::Node"* %239, %240
  br i1 %241, label %242, label %245

242:                                              ; preds = %238
  call void @_ZN2cc9TaskGraph4NodeC1EOS1_(%"struct.cc::TaskGraph::Node"* %239, %"struct.cc::TaskGraph::Node"* nonnull dereferenceable(16) %8) #10
  %243 = getelementptr inbounds %"struct.cc::TaskGraph::Node", %"struct.cc::TaskGraph::Node"* %239, i64 1
  %244 = ptrtoint %"struct.cc::TaskGraph::Node"* %243 to i64
  store i64 %244, i64* %199, align 8
  br label %246

245:                                              ; preds = %238
  call void @_ZNSt3__16vectorIN2cc9TaskGraph4NodeENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.41"* %195, %"struct.cc::TaskGraph::Node"* nonnull dereferenceable(16) %8) #10
  br label %246

246:                                              ; preds = %242, %245
  call void @_ZN2cc9TaskGraph4NodeD1Ev(%"struct.cc::TaskGraph::Node"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %196) #10
  %247 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %231, i64 1
  %248 = icmp eq %class.scoped_refptr.34* %247, %192
  br i1 %248, label %200, label %230
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21CategorizedWorkerPool37CollectCompletedTasksWithLockAcquiredEN2cc14NamespaceTokenEPNSt3__16vectorI13scoped_refptrINS1_4TaskEENS3_9allocatorIS7_EEEE(%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"* nocapture readonly, %"class.std::__1::vector.32"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.cc::NamespaceToken", align 4
  %5 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.cc::NamespaceToken", %"class.cc::NamespaceToken"* %1, i64 0, i32 0
  %7 = getelementptr inbounds %"class.cc::NamespaceToken", %"class.cc::NamespaceToken"* %4, i64 0, i32 0
  %8 = load i32, i32* %6, align 4
  store i32 %8, i32* %7, align 4
  call void @_ZN2cc18TaskGraphWorkQueue21CollectCompletedTasksENS_14NamespaceTokenEPNSt3__16vectorI13scoped_refptrINS_4TaskEENS2_9allocatorIS6_EEEE(%"class.cc::TaskGraphWorkQueue"* %5, %"class.cc::NamespaceToken"* nonnull %4, %"class.std::__1::vector.32"* %2) #10
  ret void
}

declare void @_ZN2cc9TaskGraph5ResetEv(%"struct.cc::TaskGraph"*) local_unnamed_addr #1

declare void @_ZN2cc9TaskGraph4NodeC1E13scoped_refptrINS_4TaskEEttj(%"struct.cc::TaskGraph::Node"*, %"class.cc::Task"*, i16 zeroext, i16 zeroext, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc9TaskGraph4NodeD1Ev(%"struct.cc::TaskGraph::Node"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21CategorizedWorkerPool29ScheduleTasksWithLockAcquiredEN2cc14NamespaceTokenEPNS1_9TaskGraphE(%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"* nocapture readonly, %"struct.cc::TaskGraph"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.cc::NamespaceToken", align 4
  %5 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.cc::NamespaceToken", %"class.cc::NamespaceToken"* %1, i64 0, i32 0
  %7 = getelementptr inbounds %"class.cc::NamespaceToken", %"class.cc::NamespaceToken"* %4, i64 0, i32 0
  %8 = load i32, i32* %6, align 4
  store i32 %8, i32* %7, align 4
  call void @_ZN2cc18TaskGraphWorkQueue13ScheduleTasksENS_14NamespaceTokenEPNS_9TaskGraphE(%"class.cc::TaskGraphWorkQueue"* %5, %"class.cc::NamespaceToken"* nonnull %4, %"struct.cc::TaskGraph"* %2) #10
  %9 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 4, i32 2, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node.198"**
  %11 = load %"class.std::__1::__tree_node.198"*, %"class.std::__1::__tree_node.198"** %10, align 8
  %12 = icmp eq %"class.std::__1::__tree_node.198"* %11, null
  br i1 %12, label %168, label %13

13:                                               ; preds = %3, %13
  %14 = phi %"class.std::__1::__tree_node.198"* [ %16, %13 ], [ %11, %3 ]
  %15 = bitcast %"class.std::__1::__tree_node.198"* %14 to %"class.std::__1::__tree_node.198"**
  %16 = load %"class.std::__1::__tree_node.198"*, %"class.std::__1::__tree_node.198"** %15, align 8
  %17 = icmp eq %"class.std::__1::__tree_node.198"* %16, null
  br i1 %17, label %18, label %13

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::__tree_node.198", %"class.std::__1::__tree_node.198"* %14, i64 0, i32 0, i32 0
  %20 = icmp eq %"class.std::__1::__tree_end_node"* %19, %9
  br i1 %20, label %134, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 4
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to i16*
  %24 = load i16, i16* %23, align 2
  %25 = icmp eq i16 %24, 0
  br i1 %25, label %26, label %134

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 5
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"struct.cc::TaskGraphWorkQueue::TaskNamespace"***
  %29 = load %"struct.cc::TaskGraphWorkQueue::TaskNamespace"**, %"struct.cc::TaskGraphWorkQueue::TaskNamespace"*** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 6
  %31 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"struct.cc::TaskGraphWorkQueue::TaskNamespace"***
  %32 = load %"struct.cc::TaskGraphWorkQueue::TaskNamespace"**, %"struct.cc::TaskGraphWorkQueue::TaskNamespace"*** %31, align 8
  %33 = icmp eq %"struct.cc::TaskGraphWorkQueue::TaskNamespace"** %29, %32
  br i1 %33, label %134, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %36 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %35, align 8
  %37 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 4, i32 1, i32 0, i32 1, i32 0, i32 0
  %38 = icmp eq %"class.std::__1::__tree_end_node"* %36, %37
  br i1 %38, label %164, label %39

39:                                               ; preds = %34, %104
  %40 = phi i64 [ %76, %104 ], [ 0, %34 ]
  %41 = phi %"class.std::__1::__tree_end_node"* [ %105, %104 ], [ %36, %34 ]
  %42 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 17
  %43 = bitcast %"class.std::__1::__tree_end_node"* %42 to %"struct.std::__1::pair"**
  %44 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 18
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"struct.std::__1::pair"**
  %47 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %46, align 8
  %48 = icmp eq %"struct.std::__1::pair"* %44, %47
  br i1 %48, label %75, label %49

49:                                               ; preds = %39
  %50 = ptrtoint %"struct.std::__1::pair"* %44 to i64
  %51 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %47, i64 -1
  %52 = ptrtoint %"struct.std::__1::pair"* %51 to i64
  %53 = sub i64 %52, %50
  %54 = lshr i64 %53, 4
  %55 = add nuw nsw i64 %54, 1
  %56 = and i64 %55, 3
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %70, label %58

58:                                               ; preds = %49, %58
  %59 = phi i64 [ %66, %58 ], [ %40, %49 ]
  %60 = phi %"struct.std::__1::pair"* [ %67, %58 ], [ %44, %49 ]
  %61 = phi i64 [ %68, %58 ], [ %56, %49 ]
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %60, i64 0, i32 0
  %63 = load i16, i16* %62, align 8
  %64 = icmp eq i16 %63, 0
  %65 = zext i1 %64 to i64
  %66 = add i64 %59, %65
  %67 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %60, i64 1
  %68 = add i64 %61, -1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %58, !llvm.loop !5

70:                                               ; preds = %58, %49
  %71 = phi i64 [ undef, %49 ], [ %66, %58 ]
  %72 = phi i64 [ %40, %49 ], [ %66, %58 ]
  %73 = phi %"struct.std::__1::pair"* [ %44, %49 ], [ %67, %58 ]
  %74 = icmp ult i64 %53, 48
  br i1 %74, label %75, label %107

75:                                               ; preds = %70, %107, %39
  %76 = phi i64 [ %40, %39 ], [ %71, %70 ], [ %129, %107 ]
  %77 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 1, i32 0
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node_base"* %78, null
  br i1 %79, label %80, label %88

80:                                               ; preds = %75
  %81 = bitcast %"class.std::__1::__tree_end_node"* %41 to %"class.std::__1::__tree_node_base"*
  %82 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 2
  %83 = bitcast %"class.std::__1::__tree_end_node"* %82 to %"class.std::__1::__tree_end_node"**
  %84 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %83, align 8
  %85 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 0, i32 0
  %86 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %85, align 8
  %87 = icmp eq %"class.std::__1::__tree_node_base"* %86, %81
  br i1 %87, label %104, label %95

88:                                               ; preds = %75, %88
  %89 = phi %"class.std::__1::__tree_node_base"* [ %91, %88 ], [ %78, %75 ]
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %89, i64 0, i32 0, i32 0
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %90, align 8
  %92 = icmp eq %"class.std::__1::__tree_node_base"* %91, null
  br i1 %92, label %93, label %88

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %89, i64 0, i32 0
  br label %104

95:                                               ; preds = %80, %95
  %96 = phi %"class.std::__1::__tree_end_node"** [ %99, %95 ], [ %83, %80 ]
  %97 = bitcast %"class.std::__1::__tree_end_node"** %96 to %"class.std::__1::__tree_node_base"**
  %98 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %97, align 8
  %99 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 2
  %100 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %99, align 8
  %101 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %100, i64 0, i32 0
  %102 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %101, align 8
  %103 = icmp eq %"class.std::__1::__tree_node_base"* %102, %98
  br i1 %103, label %104, label %95

104:                                              ; preds = %95, %93, %80
  %105 = phi %"class.std::__1::__tree_end_node"* [ %94, %93 ], [ %84, %80 ], [ %100, %95 ]
  %106 = icmp eq %"class.std::__1::__tree_end_node"* %105, %37
  br i1 %106, label %132, label %39

107:                                              ; preds = %70, %107
  %108 = phi i64 [ %129, %107 ], [ %72, %70 ]
  %109 = phi %"struct.std::__1::pair"* [ %130, %107 ], [ %73, %70 ]
  %110 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %109, i64 0, i32 0
  %111 = load i16, i16* %110, align 8
  %112 = icmp eq i16 %111, 0
  %113 = zext i1 %112 to i64
  %114 = add i64 %108, %113
  %115 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %109, i64 1, i32 0
  %116 = load i16, i16* %115, align 8
  %117 = icmp eq i16 %116, 0
  %118 = zext i1 %117 to i64
  %119 = add i64 %114, %118
  %120 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %109, i64 2, i32 0
  %121 = load i16, i16* %120, align 8
  %122 = icmp eq i16 %121, 0
  %123 = zext i1 %122 to i64
  %124 = add i64 %119, %123
  %125 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %109, i64 3, i32 0
  %126 = load i16, i16* %125, align 8
  %127 = icmp eq i16 %126, 0
  %128 = zext i1 %127 to i64
  %129 = add i64 %124, %128
  %130 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %109, i64 4
  %131 = icmp eq %"struct.std::__1::pair"* %130, %47
  br i1 %131, label %75, label %107

132:                                              ; preds = %104
  %133 = icmp eq i64 %76, 0
  br i1 %133, label %164, label %134

134:                                              ; preds = %18, %132, %26, %21
  br label %135

135:                                              ; preds = %134, %135
  %136 = phi %"class.std::__1::__tree_end_node"* [ %146, %135 ], [ %9, %134 ]
  %137 = phi %"class.std::__1::__tree_node.198"* [ %147, %135 ], [ %11, %134 ]
  %138 = getelementptr inbounds %"class.std::__1::__tree_node.198", %"class.std::__1::__tree_node.198"* %137, i64 0, i32 1, i32 0, i32 0
  %139 = load i16, i16* %138, align 2
  %140 = icmp eq i16 %139, 0
  %141 = getelementptr inbounds %"class.std::__1::__tree_node.198", %"class.std::__1::__tree_node.198"* %137, i64 0, i32 0, i32 1
  %142 = bitcast %"class.std::__1::__tree_node_base"** %141 to %"class.std::__1::__tree_node.198"**
  %143 = getelementptr inbounds %"class.std::__1::__tree_node.198", %"class.std::__1::__tree_node.198"* %137, i64 0, i32 0, i32 0
  %144 = bitcast %"class.std::__1::__tree_node.198"* %137 to %"class.std::__1::__tree_node.198"**
  %145 = select i1 %140, %"class.std::__1::__tree_node.198"** %142, %"class.std::__1::__tree_node.198"** %144
  %146 = select i1 %140, %"class.std::__1::__tree_end_node"* %136, %"class.std::__1::__tree_end_node"* %143
  %147 = load %"class.std::__1::__tree_node.198"*, %"class.std::__1::__tree_node.198"** %145, align 8
  %148 = icmp eq %"class.std::__1::__tree_node.198"* %147, null
  br i1 %148, label %149, label %135

149:                                              ; preds = %135
  %150 = icmp eq %"class.std::__1::__tree_end_node"* %146, %9
  br i1 %150, label %168, label %151

151:                                              ; preds = %149
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %146, i64 4
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i16*
  %154 = load i16, i16* %153, align 2
  %155 = icmp ugt i16 %154, 1
  br i1 %155, label %168, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %146, i64 5
  %158 = bitcast %"class.std::__1::__tree_end_node"* %157 to %"struct.cc::TaskGraphWorkQueue::TaskNamespace"***
  %159 = load %"struct.cc::TaskGraphWorkQueue::TaskNamespace"**, %"struct.cc::TaskGraphWorkQueue::TaskNamespace"*** %158, align 8
  %160 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %146, i64 6
  %161 = bitcast %"class.std::__1::__tree_end_node"* %160 to %"struct.cc::TaskGraphWorkQueue::TaskNamespace"***
  %162 = load %"struct.cc::TaskGraphWorkQueue::TaskNamespace"**, %"struct.cc::TaskGraphWorkQueue::TaskNamespace"*** %161, align 8
  %163 = icmp eq %"struct.cc::TaskGraphWorkQueue::TaskNamespace"** %159, %162
  br i1 %163, label %168, label %164

164:                                              ; preds = %156, %132, %34, %168
  %165 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 9
  br label %172

166:                                              ; preds = %170
  %167 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 10
  br label %172

168:                                              ; preds = %3, %156, %149, %151
  %169 = call zeroext i1 @_ZN7content21CategorizedWorkerPool40ShouldRunTaskForCategoryWithLockAcquiredEN2cc12TaskCategoryE(%"class.content::CategorizedWorkerPool"* %0, i16 zeroext 3) #10
  br i1 %169, label %164, label %170

170:                                              ; preds = %168
  %171 = call zeroext i1 @_ZN7content21CategorizedWorkerPool40ShouldRunTaskForCategoryWithLockAcquiredEN2cc12TaskCategoryE(%"class.content::CategorizedWorkerPool"* %0, i16 zeroext 2) #10
  br i1 %171, label %166, label %174

172:                                              ; preds = %166, %164
  %173 = phi %"class.base::ConditionVariable"* [ %165, %164 ], [ %167, %166 ]
  call void @_ZN4base17ConditionVariable6SignalEv(%"class.base::ConditionVariable"* %173) #10
  br label %174

174:                                              ; preds = %172, %170
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21CategorizedWorkerPool3RunERKNSt3__16vectorIN2cc12TaskCategoryENS1_9allocatorIS4_EEEEPN3gfx17RenderingPipelineEPN4base17ConditionVariableE(%"class.content::CategorizedWorkerPool"*, %"class.std::__1::vector.62"* nocapture readonly dereferenceable(24), %"class.gfx::RenderingPipeline"*, %"class.base::ConditionVariable"*) local_unnamed_addr #0 align 2 {
  %5 = icmp eq %"class.gfx::RenderingPipeline"* %2, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %4
  %7 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %8 = bitcast %"class.gfx::RenderingPipeline"* %2 to %"class.base::sequence_manager::TaskTimeObserver"* (%"class.gfx::RenderingPipeline"*, i32)***
  %9 = load %"class.base::sequence_manager::TaskTimeObserver"* (%"class.gfx::RenderingPipeline"*, i32)**, %"class.base::sequence_manager::TaskTimeObserver"* (%"class.gfx::RenderingPipeline"*, i32)*** %8, align 8
  %10 = getelementptr inbounds %"class.base::sequence_manager::TaskTimeObserver"* (%"class.gfx::RenderingPipeline"*, i32)*, %"class.base::sequence_manager::TaskTimeObserver"* (%"class.gfx::RenderingPipeline"*, i32)** %9, i64 3
  %11 = load %"class.base::sequence_manager::TaskTimeObserver"* (%"class.gfx::RenderingPipeline"*, i32)*, %"class.base::sequence_manager::TaskTimeObserver"* (%"class.gfx::RenderingPipeline"*, i32)** %10, align 8
  %12 = tail call %"class.base::sequence_manager::TaskTimeObserver"* %11(%"class.gfx::RenderingPipeline"* nonnull %2, i32 %7) #10
  br label %13

13:                                               ; preds = %4, %6
  %14 = phi %"class.base::sequence_manager::TaskTimeObserver"* [ %12, %6 ], [ null, %4 ]
  %15 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %15, i64 0, i32 0, i32 0
  %17 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %16) #10
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19, !prof !4

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %15, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %20) #10
  br label %21

21:                                               ; preds = %13, %19
  %22 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %1, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %1, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 4, i32 2, i32 0, i32 1, i32 0, i32 0
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.std::__1::__tree_node.198"**
  %26 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %27 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 4, i32 1, i32 0, i32 1, i32 0, i32 0
  %28 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 10
  %29 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 9
  %30 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 12
  br label %31

31:                                               ; preds = %205, %21
  %32 = load i16*, i16** %22, align 8
  %33 = load i16*, i16** %23, align 8
  %34 = icmp eq i16* %32, %33
  br i1 %34, label %43, label %37

35:                                               ; preds = %37
  %36 = icmp eq i16* %41, %33
  br i1 %36, label %43, label %37

37:                                               ; preds = %31, %35
  %38 = phi i16* [ %41, %35 ], [ %32, %31 ]
  %39 = load i16, i16* %38, align 2
  %40 = tail call zeroext i1 @_ZN7content21CategorizedWorkerPool40ShouldRunTaskForCategoryWithLockAcquiredEN2cc12TaskCategoryE(%"class.content::CategorizedWorkerPool"* %0, i16 zeroext %39) #10
  %41 = getelementptr inbounds i16, i16* %38, i64 1
  br i1 %40, label %42, label %35

42:                                               ; preds = %37
  tail call void @_ZN7content21CategorizedWorkerPool33RunTaskInCategoryWithLockAcquiredEN2cc12TaskCategoryEPN4base16sequence_manager16TaskTimeObserverE(%"class.content::CategorizedWorkerPool"* %0, i16 zeroext %39, %"class.base::sequence_manager::TaskTimeObserver"* %14) #10
  br label %205

43:                                               ; preds = %35, %31
  %44 = load %"class.std::__1::__tree_node.198"*, %"class.std::__1::__tree_node.198"** %25, align 8
  %45 = icmp eq %"class.std::__1::__tree_node.198"* %44, null
  br i1 %45, label %195, label %46

46:                                               ; preds = %43, %46
  %47 = phi %"class.std::__1::__tree_node.198"* [ %49, %46 ], [ %44, %43 ]
  %48 = bitcast %"class.std::__1::__tree_node.198"* %47 to %"class.std::__1::__tree_node.198"**
  %49 = load %"class.std::__1::__tree_node.198"*, %"class.std::__1::__tree_node.198"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node.198"* %49, null
  br i1 %50, label %51, label %46

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.std::__1::__tree_node.198", %"class.std::__1::__tree_node.198"* %47, i64 0, i32 0, i32 0
  %53 = icmp eq %"class.std::__1::__tree_end_node"* %52, %24
  br i1 %53, label %165, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 4
  %56 = bitcast %"class.std::__1::__tree_end_node"* %55 to i16*
  %57 = load i16, i16* %56, align 2
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %59, label %165

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 5
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.cc::TaskGraphWorkQueue::TaskNamespace"***
  %62 = load %"struct.cc::TaskGraphWorkQueue::TaskNamespace"**, %"struct.cc::TaskGraphWorkQueue::TaskNamespace"*** %61, align 8
  %63 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 6
  %64 = bitcast %"class.std::__1::__tree_end_node"* %63 to %"struct.cc::TaskGraphWorkQueue::TaskNamespace"***
  %65 = load %"struct.cc::TaskGraphWorkQueue::TaskNamespace"**, %"struct.cc::TaskGraphWorkQueue::TaskNamespace"*** %64, align 8
  %66 = icmp eq %"struct.cc::TaskGraphWorkQueue::TaskNamespace"** %62, %65
  br i1 %66, label %165, label %67

67:                                               ; preds = %59
  %68 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %26, align 8
  %69 = icmp eq %"class.std::__1::__tree_end_node"* %68, %27
  br i1 %69, label %199, label %70

70:                                               ; preds = %67, %135
  %71 = phi i64 [ %107, %135 ], [ 0, %67 ]
  %72 = phi %"class.std::__1::__tree_end_node"* [ %136, %135 ], [ %68, %67 ]
  %73 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 17
  %74 = bitcast %"class.std::__1::__tree_end_node"* %73 to %"struct.std::__1::pair"**
  %75 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %74, align 8
  %76 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 18
  %77 = bitcast %"class.std::__1::__tree_end_node"* %76 to %"struct.std::__1::pair"**
  %78 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %77, align 8
  %79 = icmp eq %"struct.std::__1::pair"* %75, %78
  br i1 %79, label %106, label %80

80:                                               ; preds = %70
  %81 = ptrtoint %"struct.std::__1::pair"* %75 to i64
  %82 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 -1
  %83 = ptrtoint %"struct.std::__1::pair"* %82 to i64
  %84 = sub i64 %83, %81
  %85 = lshr i64 %84, 4
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %101, label %89

89:                                               ; preds = %80, %89
  %90 = phi i64 [ %97, %89 ], [ %71, %80 ]
  %91 = phi %"struct.std::__1::pair"* [ %98, %89 ], [ %75, %80 ]
  %92 = phi i64 [ %99, %89 ], [ %87, %80 ]
  %93 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %91, i64 0, i32 0
  %94 = load i16, i16* %93, align 8
  %95 = icmp eq i16 %94, 0
  %96 = zext i1 %95 to i64
  %97 = add i64 %90, %96
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %91, i64 1
  %99 = add i64 %92, -1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %89, !llvm.loop !6

101:                                              ; preds = %89, %80
  %102 = phi i64 [ undef, %80 ], [ %97, %89 ]
  %103 = phi i64 [ %71, %80 ], [ %97, %89 ]
  %104 = phi %"struct.std::__1::pair"* [ %75, %80 ], [ %98, %89 ]
  %105 = icmp ult i64 %84, 48
  br i1 %105, label %106, label %138

106:                                              ; preds = %101, %138, %70
  %107 = phi i64 [ %71, %70 ], [ %102, %101 ], [ %160, %138 ]
  %108 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 1, i32 0
  %109 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %108, align 8
  %110 = icmp eq %"class.std::__1::__tree_node_base"* %109, null
  br i1 %110, label %111, label %119

111:                                              ; preds = %106
  %112 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"class.std::__1::__tree_node_base"*
  %113 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 2
  %114 = bitcast %"class.std::__1::__tree_end_node"* %113 to %"class.std::__1::__tree_end_node"**
  %115 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %115, i64 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, %112
  br i1 %118, label %135, label %126

119:                                              ; preds = %106, %119
  %120 = phi %"class.std::__1::__tree_node_base"* [ %122, %119 ], [ %109, %106 ]
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %120, i64 0, i32 0, i32 0
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  %123 = icmp eq %"class.std::__1::__tree_node_base"* %122, null
  br i1 %123, label %124, label %119

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %120, i64 0, i32 0
  br label %135

126:                                              ; preds = %111, %126
  %127 = phi %"class.std::__1::__tree_end_node"** [ %130, %126 ], [ %114, %111 ]
  %128 = bitcast %"class.std::__1::__tree_end_node"** %127 to %"class.std::__1::__tree_node_base"**
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %131 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %130, align 8
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %131, i64 0, i32 0
  %133 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %132, align 8
  %134 = icmp eq %"class.std::__1::__tree_node_base"* %133, %129
  br i1 %134, label %135, label %126

135:                                              ; preds = %126, %124, %111
  %136 = phi %"class.std::__1::__tree_end_node"* [ %125, %124 ], [ %115, %111 ], [ %131, %126 ]
  %137 = icmp eq %"class.std::__1::__tree_end_node"* %136, %27
  br i1 %137, label %163, label %70

138:                                              ; preds = %101, %138
  %139 = phi i64 [ %160, %138 ], [ %103, %101 ]
  %140 = phi %"struct.std::__1::pair"* [ %161, %138 ], [ %104, %101 ]
  %141 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %140, i64 0, i32 0
  %142 = load i16, i16* %141, align 8
  %143 = icmp eq i16 %142, 0
  %144 = zext i1 %143 to i64
  %145 = add i64 %139, %144
  %146 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %140, i64 1, i32 0
  %147 = load i16, i16* %146, align 8
  %148 = icmp eq i16 %147, 0
  %149 = zext i1 %148 to i64
  %150 = add i64 %145, %149
  %151 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %140, i64 2, i32 0
  %152 = load i16, i16* %151, align 8
  %153 = icmp eq i16 %152, 0
  %154 = zext i1 %153 to i64
  %155 = add i64 %150, %154
  %156 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %140, i64 3, i32 0
  %157 = load i16, i16* %156, align 8
  %158 = icmp eq i16 %157, 0
  %159 = zext i1 %158 to i64
  %160 = add i64 %155, %159
  %161 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %140, i64 4
  %162 = icmp eq %"struct.std::__1::pair"* %161, %78
  br i1 %162, label %106, label %138

163:                                              ; preds = %135
  %164 = icmp eq i64 %107, 0
  br i1 %164, label %199, label %165

165:                                              ; preds = %51, %163, %59, %54
  br label %166

166:                                              ; preds = %165, %166
  %167 = phi %"class.std::__1::__tree_end_node"* [ %177, %166 ], [ %24, %165 ]
  %168 = phi %"class.std::__1::__tree_node.198"* [ %178, %166 ], [ %44, %165 ]
  %169 = getelementptr inbounds %"class.std::__1::__tree_node.198", %"class.std::__1::__tree_node.198"* %168, i64 0, i32 1, i32 0, i32 0
  %170 = load i16, i16* %169, align 2
  %171 = icmp eq i16 %170, 0
  %172 = getelementptr inbounds %"class.std::__1::__tree_node.198", %"class.std::__1::__tree_node.198"* %168, i64 0, i32 0, i32 1
  %173 = bitcast %"class.std::__1::__tree_node_base"** %172 to %"class.std::__1::__tree_node.198"**
  %174 = getelementptr inbounds %"class.std::__1::__tree_node.198", %"class.std::__1::__tree_node.198"* %168, i64 0, i32 0, i32 0
  %175 = bitcast %"class.std::__1::__tree_node.198"* %168 to %"class.std::__1::__tree_node.198"**
  %176 = select i1 %171, %"class.std::__1::__tree_node.198"** %173, %"class.std::__1::__tree_node.198"** %175
  %177 = select i1 %171, %"class.std::__1::__tree_end_node"* %167, %"class.std::__1::__tree_end_node"* %174
  %178 = load %"class.std::__1::__tree_node.198"*, %"class.std::__1::__tree_node.198"** %176, align 8
  %179 = icmp eq %"class.std::__1::__tree_node.198"* %178, null
  br i1 %179, label %180, label %166

180:                                              ; preds = %166
  %181 = icmp eq %"class.std::__1::__tree_end_node"* %177, %24
  br i1 %181, label %195, label %182

182:                                              ; preds = %180
  %183 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %177, i64 4
  %184 = bitcast %"class.std::__1::__tree_end_node"* %183 to i16*
  %185 = load i16, i16* %184, align 2
  %186 = icmp ugt i16 %185, 1
  br i1 %186, label %195, label %187

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %177, i64 5
  %189 = bitcast %"class.std::__1::__tree_end_node"* %188 to %"struct.cc::TaskGraphWorkQueue::TaskNamespace"***
  %190 = load %"struct.cc::TaskGraphWorkQueue::TaskNamespace"**, %"struct.cc::TaskGraphWorkQueue::TaskNamespace"*** %189, align 8
  %191 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %177, i64 6
  %192 = bitcast %"class.std::__1::__tree_end_node"* %191 to %"struct.cc::TaskGraphWorkQueue::TaskNamespace"***
  %193 = load %"struct.cc::TaskGraphWorkQueue::TaskNamespace"**, %"struct.cc::TaskGraphWorkQueue::TaskNamespace"*** %192, align 8
  %194 = icmp eq %"struct.cc::TaskGraphWorkQueue::TaskNamespace"** %190, %193
  br i1 %194, label %195, label %199

195:                                              ; preds = %43, %187, %180, %182
  %196 = tail call zeroext i1 @_ZN7content21CategorizedWorkerPool40ShouldRunTaskForCategoryWithLockAcquiredEN2cc12TaskCategoryE(%"class.content::CategorizedWorkerPool"* %0, i16 zeroext 3) #10
  br i1 %196, label %199, label %197

197:                                              ; preds = %195
  %198 = tail call zeroext i1 @_ZN7content21CategorizedWorkerPool40ShouldRunTaskForCategoryWithLockAcquiredEN2cc12TaskCategoryE(%"class.content::CategorizedWorkerPool"* %0, i16 zeroext 2) #10
  br i1 %198, label %199, label %201

199:                                              ; preds = %197, %195, %67, %163, %187
  %200 = phi %"class.base::ConditionVariable"* [ %29, %187 ], [ %29, %163 ], [ %29, %67 ], [ %29, %195 ], [ %28, %197 ]
  tail call void @_ZN4base17ConditionVariable6SignalEv(%"class.base::ConditionVariable"* %200) #10
  br label %201

201:                                              ; preds = %199, %197
  %202 = load i8, i8* %30, align 8, !range !7
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %204, label %206

204:                                              ; preds = %201
  notail call void @_ZN4base17ConditionVariable4WaitEv(%"class.base::ConditionVariable"* %3) #10
  br label %205

205:                                              ; preds = %204, %42
  br label %31

206:                                              ; preds = %201
  %207 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %16) #10
  ret void
}

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content21CategorizedWorkerPool23RunTaskWithLockAcquiredERKNSt3__16vectorIN2cc12TaskCategoryENS1_9allocatorIS4_EEEEPN4base16sequence_manager16TaskTimeObserverE(%"class.content::CategorizedWorkerPool"*, %"class.std::__1::vector.62"* nocapture readonly dereferenceable(24), %"class.base::sequence_manager::TaskTimeObserver"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %1, i64 0, i32 0, i32 0
  %5 = load i16*, i16** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %1, i64 0, i32 0, i32 1
  %7 = load i16*, i16** %6, align 8
  %8 = icmp eq i16* %5, %7
  br i1 %8, label %17, label %11

9:                                                ; preds = %11
  %10 = icmp eq i16* %15, %7
  br i1 %10, label %17, label %11

11:                                               ; preds = %3, %9
  %12 = phi i16* [ %15, %9 ], [ %5, %3 ]
  %13 = load i16, i16* %12, align 2
  %14 = tail call zeroext i1 @_ZN7content21CategorizedWorkerPool40ShouldRunTaskForCategoryWithLockAcquiredEN2cc12TaskCategoryE(%"class.content::CategorizedWorkerPool"* %0, i16 zeroext %13)
  %15 = getelementptr inbounds i16, i16* %12, i64 1
  br i1 %14, label %16, label %9

16:                                               ; preds = %11
  tail call void @_ZN7content21CategorizedWorkerPool33RunTaskInCategoryWithLockAcquiredEN2cc12TaskCategoryEPN4base16sequence_manager16TaskTimeObserverE(%"class.content::CategorizedWorkerPool"* %0, i16 zeroext %13, %"class.base::sequence_manager::TaskTimeObserver"* %2)
  br label %17

17:                                               ; preds = %9, %3, %16
  %18 = phi i1 [ true, %16 ], [ false, %3 ], [ false, %9 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21CategorizedWorkerPool40SignalHasReadyToRunTasksWithLockAcquiredEv(%"class.content::CategorizedWorkerPool"*) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN7content21CategorizedWorkerPool40ShouldRunTaskForCategoryWithLockAcquiredEN2cc12TaskCategoryE(%"class.content::CategorizedWorkerPool"* %0, i16 zeroext 0)
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = tail call zeroext i1 @_ZN7content21CategorizedWorkerPool40ShouldRunTaskForCategoryWithLockAcquiredEN2cc12TaskCategoryE(%"class.content::CategorizedWorkerPool"* %0, i16 zeroext 1)
  br i1 %4, label %5, label %12

5:                                                ; preds = %12, %3, %1
  %6 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 9
  br label %9

7:                                                ; preds = %14
  %8 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 10
  br label %9

9:                                                ; preds = %7, %5
  %10 = phi %"class.base::ConditionVariable"* [ %6, %5 ], [ %8, %7 ]
  tail call void @_ZN4base17ConditionVariable6SignalEv(%"class.base::ConditionVariable"* %10) #10
  br label %11

11:                                               ; preds = %9, %14
  ret void

12:                                               ; preds = %3
  %13 = tail call zeroext i1 @_ZN7content21CategorizedWorkerPool40ShouldRunTaskForCategoryWithLockAcquiredEN2cc12TaskCategoryE(%"class.content::CategorizedWorkerPool"* %0, i16 zeroext 3)
  br i1 %13, label %5, label %14

14:                                               ; preds = %12
  %15 = tail call zeroext i1 @_ZN7content21CategorizedWorkerPool40ShouldRunTaskForCategoryWithLockAcquiredEN2cc12TaskCategoryE(%"class.content::CategorizedWorkerPool"* %0, i16 zeroext 2)
  br i1 %15, label %7, label %11
}

declare void @_ZN4base17ConditionVariable4WaitEv(%"class.base::ConditionVariable"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21CategorizedWorkerPool15FlushForTestingEv(%"class.content::CategorizedWorkerPool"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #10
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !4

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %10 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 4, i32 1, i32 0, i32 1, i32 0, i32 0
  %11 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 11
  %12 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %13 = icmp eq %"class.std::__1::__tree_end_node"* %12, %10
  br i1 %13, label %110, label %14

14:                                               ; preds = %8, %103
  %15 = phi %"class.std::__1::__tree_end_node"* [ %104, %103 ], [ %12, %8 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 17
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"struct.std::__1::pair"**
  %18 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 18
  %20 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"struct.std::__1::pair"**
  %21 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %20, align 8
  %22 = icmp eq %"struct.std::__1::pair"* %18, %21
  br i1 %22, label %23, label %105

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 11
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.std::__1::__tree_end_node"**
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 12
  %28 = icmp eq %"class.std::__1::__tree_end_node"* %26, %27
  br i1 %28, label %69, label %29

29:                                               ; preds = %23, %66
  %30 = phi %"class.std::__1::__tree_end_node"* [ %67, %66 ], [ %26, %23 ]
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 5
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"**
  %33 = load %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"*, %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 6
  %35 = bitcast %"class.std::__1::__tree_end_node"* %34 to %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"**
  %36 = load %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"*, %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"** %35, align 8
  %37 = icmp eq %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* %33, %36
  br i1 %37, label %38, label %69

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 1, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.std::__1::__tree_node_base"*
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 2
  %45 = bitcast %"class.std::__1::__tree_end_node"* %44 to %"class.std::__1::__tree_end_node"**
  %46 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %46, i64 0, i32 0
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %48, %43
  br i1 %49, label %66, label %57

50:                                               ; preds = %38, %50
  %51 = phi %"class.std::__1::__tree_node_base"* [ %53, %50 ], [ %40, %38 ]
  %52 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %51, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, null
  br i1 %54, label %55, label %50

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %51, i64 0, i32 0
  br label %66

57:                                               ; preds = %42, %57
  %58 = phi %"class.std::__1::__tree_end_node"** [ %61, %57 ], [ %45, %42 ]
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 2
  %62 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %61, align 8
  %63 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %62, i64 0, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  %65 = icmp eq %"class.std::__1::__tree_node_base"* %64, %60
  br i1 %65, label %66, label %57

66:                                               ; preds = %57, %55, %42
  %67 = phi %"class.std::__1::__tree_end_node"* [ %56, %55 ], [ %46, %42 ], [ %62, %57 ]
  %68 = icmp eq %"class.std::__1::__tree_end_node"* %67, %27
  br i1 %68, label %72, label %29

69:                                               ; preds = %29, %23
  %70 = phi %"class.std::__1::__tree_end_node"* [ %26, %23 ], [ %30, %29 ]
  %71 = icmp eq %"class.std::__1::__tree_end_node"* %70, %27
  br i1 %71, label %72, label %105

72:                                               ; preds = %66, %69
  %73 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 1, i32 0
  %74 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %73, align 8
  %75 = icmp eq %"class.std::__1::__tree_node_base"* %74, null
  br i1 %75, label %76, label %84

76:                                               ; preds = %72
  %77 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node_base"*
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 2
  %79 = bitcast %"class.std::__1::__tree_end_node"* %78 to %"class.std::__1::__tree_end_node"**
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %77
  br i1 %83, label %100, label %91

84:                                               ; preds = %72, %84
  %85 = phi %"class.std::__1::__tree_node_base"* [ %87, %84 ], [ %74, %72 ]
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %85, i64 0, i32 0, i32 0
  %87 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %87, null
  br i1 %88, label %89, label %84

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %85, i64 0, i32 0
  br label %100

91:                                               ; preds = %76, %91
  %92 = phi %"class.std::__1::__tree_end_node"** [ %95, %91 ], [ %79, %76 ]
  %93 = bitcast %"class.std::__1::__tree_end_node"** %92 to %"class.std::__1::__tree_node_base"**
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %94, i64 0, i32 2
  %96 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %95, align 8
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %96, i64 0, i32 0
  %98 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %97, align 8
  %99 = icmp eq %"class.std::__1::__tree_node_base"* %98, %94
  br i1 %99, label %100, label %91

100:                                              ; preds = %91, %89, %76
  %101 = phi %"class.std::__1::__tree_end_node"* [ %90, %89 ], [ %80, %76 ], [ %96, %91 ]
  %102 = icmp eq %"class.std::__1::__tree_end_node"* %101, %10
  br i1 %102, label %110, label %103

103:                                              ; preds = %100, %107
  %104 = phi %"class.std::__1::__tree_end_node"* [ %101, %100 ], [ %108, %107 ]
  br label %14

105:                                              ; preds = %14, %69
  %106 = icmp eq %"class.std::__1::__tree_end_node"* %15, %10
  br i1 %106, label %110, label %107

107:                                              ; preds = %105
  notail call void @_ZN4base17ConditionVariable4WaitEv(%"class.base::ConditionVariable"* %11) #10
  %108 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %109 = icmp eq %"class.std::__1::__tree_end_node"* %108, %10
  br i1 %109, label %110, label %103

110:                                              ; preds = %105, %107, %100, %8
  %111 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SequencedTaskRunner"* @_ZN7content21CategorizedWorkerPool25CreateSequencedTaskRunnerEv(%"class.content::CategorizedWorkerPool"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 168) #11
  %3 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 1
  %4 = bitcast i8* %2 to %"class.base::TaskRunner"*
  tail call void @_ZN4base10TaskRunnerC2Ev(%"class.base::TaskRunner"* nonnull %4) #10
  %5 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7content21CategorizedWorkerPool40CategorizedWorkerPoolSequencedTaskRunnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 16
  %7 = bitcast i8* %6 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %7) #10
  %8 = getelementptr inbounds i8, i8* %2, i64 56
  %9 = bitcast i8* %8 to %"class.cc::TaskGraphRunner"**
  store %"class.cc::TaskGraphRunner"* %3, %"class.cc::TaskGraphRunner"** %9, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 64
  %11 = bitcast i8* %10 to %"class.cc::NamespaceToken"*
  %12 = bitcast %"class.cc::TaskGraphRunner"* %3 to void (%"class.cc::NamespaceToken"*, %"class.cc::TaskGraphRunner"*)***
  %13 = load void (%"class.cc::NamespaceToken"*, %"class.cc::TaskGraphRunner"*)**, void (%"class.cc::NamespaceToken"*, %"class.cc::TaskGraphRunner"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.cc::NamespaceToken"*, %"class.cc::TaskGraphRunner"*)*, void (%"class.cc::NamespaceToken"*, %"class.cc::TaskGraphRunner"*)** %13, i64 2
  %15 = load void (%"class.cc::NamespaceToken"*, %"class.cc::TaskGraphRunner"*)*, void (%"class.cc::NamespaceToken"*, %"class.cc::TaskGraphRunner"*)** %14, align 8
  tail call void %15(%"class.cc::NamespaceToken"* sret %11, %"class.cc::TaskGraphRunner"* %3) #10
  %16 = getelementptr inbounds i8, i8* %2, i64 72
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #10
  %17 = getelementptr inbounds i8, i8* %2, i64 96
  %18 = bitcast i8* %17 to %"struct.cc::TaskGraph"*
  tail call void @_ZN2cc9TaskGraphC1Ev(%"struct.cc::TaskGraph"* %18) #10
  %19 = getelementptr inbounds i8, i8* %2, i64 144
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #10
  %20 = bitcast i8* %2 to %"class.base::SequencedTaskRunner"*
  %21 = getelementptr inbounds i8, i8* %2, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = atomicrmw add i32* %22, i32 1 monotonic
  ret %"class.base::SequencedTaskRunner"* %20
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21CategorizedWorkerPool24SetBackgroundingCallbackE13scoped_refptrIN4base22SingleThreadTaskRunnerEENS2_12OnceCallbackIFviEEE(%"class.content::CategorizedWorkerPool"*, %"class.base::SingleThreadTaskRunner"*, %"class.base::OnceCallback"*) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.base::SingleThreadTaskRunner"* %1 to i64
  %5 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 13, i32 0
  %6 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %7 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %5, %"class.base::internal::CallbackBase"* dereferenceable(8) %6) #10
  %8 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 14
  %9 = bitcast %class.scoped_refptr.61* %8 to i64*
  %10 = getelementptr inbounds %class.scoped_refptr.61, %class.scoped_refptr.61* %8, i64 0, i32 0
  %11 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %10, align 8
  store i64 %4, i64* %9, align 8
  %12 = icmp eq %"class.base::SingleThreadTaskRunner"* %11, null
  br i1 %12, label %21, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %11, i64 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw sub i32* %15, i32 1 acq_rel
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %14, i64 -2
  %20 = bitcast %"class.base::RefCountedThreadSafe"* %19 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %20) #10
  br label %21

21:                                               ; preds = %18, %13, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21CategorizedWorkerPoolD2Ev(%"class.content::CategorizedWorkerPool"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [8 x i8*] }, { [10 x i8*], [8 x i8*] }* @_ZTVN7content21CategorizedWorkerPoolE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [8 x i8*] }, { [10 x i8*], [8 x i8*] }* @_ZTVN7content21CategorizedWorkerPoolE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 14, i32 0
  %5 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %4, align 8
  %6 = icmp eq %"class.base::SingleThreadTaskRunner"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %8, i64 -2
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %13 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %14) #10
  br label %15

15:                                               ; preds = %1, %7, %12
  %16 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 13, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %16) #10
  %17 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 11
  tail call void @_ZN4base17ConditionVariableD1Ev(%"class.base::ConditionVariable"* %17) #10
  %18 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 10
  tail call void @_ZN4base17ConditionVariableD1Ev(%"class.base::ConditionVariable"* %18) #10
  %19 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 9
  tail call void @_ZN4base17ConditionVariableD1Ev(%"class.base::ConditionVariable"* %19) #10
  %20 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 8
  %21 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %20, i64 0, i32 0, i32 0
  %22 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %21, align 8
  %23 = icmp eq %class.scoped_refptr.34* %22, null
  br i1 %23, label %54, label %24

24:                                               ; preds = %15
  %25 = bitcast %class.scoped_refptr.34* %22 to i8*
  %26 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 8, i32 0, i32 1
  %27 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %26, align 8
  %28 = icmp eq %class.scoped_refptr.34* %27, %22
  br i1 %28, label %52, label %29

29:                                               ; preds = %24, %47
  %30 = phi %class.scoped_refptr.34* [ %31, %47 ], [ %27, %24 ]
  %31 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %30, i64 -1
  %32 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %31, i64 0, i32 0
  %33 = load %"class.cc::Task"*, %"class.cc::Task"** %32, align 8
  %34 = icmp eq %"class.cc::Task"* %33, null
  br i1 %34, label %47, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.cc::Task", %"class.cc::Task"* %33, i64 0, i32 1
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw sub i32* %37, i32 1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %47

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %36, i64 -2
  %42 = bitcast %"class.base::RefCountedThreadSafe.35"* %41 to %"class.cc::Task"*
  %43 = bitcast %"class.base::RefCountedThreadSafe.35"* %41 to void (%"class.cc::Task"*)***
  %44 = load void (%"class.cc::Task"*)**, void (%"class.cc::Task"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %44, i64 2
  %46 = load void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %45, align 8
  tail call void %46(%"class.cc::Task"* nonnull %42) #10
  br label %47

47:                                               ; preds = %40, %35, %29
  %48 = icmp eq %class.scoped_refptr.34* %31, %22
  br i1 %48, label %49, label %29

49:                                               ; preds = %47
  %50 = bitcast %"class.std::__1::vector.32"* %20 to i8**
  %51 = load i8*, i8** %50, align 8
  br label %52

52:                                               ; preds = %49, %24
  %53 = phi i8* [ %51, %49 ], [ %25, %24 ]
  store %class.scoped_refptr.34* %22, %class.scoped_refptr.34** %26, align 8
  tail call void @_ZdlPv(i8* %53) #11
  br label %54

54:                                               ; preds = %15, %52
  %55 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 7
  tail call void @_ZN2cc9TaskGraphD1Ev(%"struct.cc::TaskGraph"* %55) #10
  %56 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 6
  %57 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %56, i64 0, i32 0, i32 0
  %58 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %57, align 8
  %59 = icmp eq %class.scoped_refptr.34* %58, null
  br i1 %59, label %90, label %60

60:                                               ; preds = %54
  %61 = bitcast %class.scoped_refptr.34* %58 to i8*
  %62 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 6, i32 0, i32 1
  %63 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %62, align 8
  %64 = icmp eq %class.scoped_refptr.34* %63, %58
  br i1 %64, label %88, label %65

65:                                               ; preds = %60, %83
  %66 = phi %class.scoped_refptr.34* [ %67, %83 ], [ %63, %60 ]
  %67 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %66, i64 -1
  %68 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %67, i64 0, i32 0
  %69 = load %"class.cc::Task"*, %"class.cc::Task"** %68, align 8
  %70 = icmp eq %"class.cc::Task"* %69, null
  br i1 %70, label %83, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.cc::Task", %"class.cc::Task"* %69, i64 0, i32 1
  %73 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw sub i32* %73, i32 1 acq_rel
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %83

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %72, i64 -2
  %78 = bitcast %"class.base::RefCountedThreadSafe.35"* %77 to %"class.cc::Task"*
  %79 = bitcast %"class.base::RefCountedThreadSafe.35"* %77 to void (%"class.cc::Task"*)***
  %80 = load void (%"class.cc::Task"*)**, void (%"class.cc::Task"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %80, i64 2
  %82 = load void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %81, align 8
  tail call void %82(%"class.cc::Task"* nonnull %78) #10
  br label %83

83:                                               ; preds = %76, %71, %65
  %84 = icmp eq %class.scoped_refptr.34* %67, %58
  br i1 %84, label %85, label %65

85:                                               ; preds = %83
  %86 = bitcast %"class.std::__1::vector.32"* %56 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %85, %60
  %89 = phi i8* [ %87, %85 ], [ %61, %60 ]
  store %class.scoped_refptr.34* %58, %class.scoped_refptr.34** %62, align 8
  tail call void @_ZdlPv(i8* %89) #11
  br label %90

90:                                               ; preds = %54, %88
  %91 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 4
  tail call void @_ZN2cc18TaskGraphWorkQueueD1Ev(%"class.cc::TaskGraphWorkQueue"* %91) #10
  %92 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %92) #10
  %93 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 2
  %94 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %93, i64 0, i32 0, i32 0
  %95 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %94, align 8
  %96 = icmp eq %"class.std::__1::unique_ptr"* %95, null
  br i1 %96, label %120, label %97

97:                                               ; preds = %90
  %98 = bitcast %"class.std::__1::unique_ptr"* %95 to i8*
  %99 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 2, i32 0, i32 1
  %100 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %99, align 8
  %101 = icmp eq %"class.std::__1::unique_ptr"* %100, %95
  br i1 %101, label %118, label %102

102:                                              ; preds = %97, %113
  %103 = phi %"class.std::__1::unique_ptr"* [ %104, %113 ], [ %100, %97 ]
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %103, i64 -1
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = load %"class.base::SimpleThread"*, %"class.base::SimpleThread"** %105, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %105, align 8
  %107 = icmp eq %"class.base::SimpleThread"* %106, null
  br i1 %107, label %113, label %108

108:                                              ; preds = %102
  %109 = bitcast %"class.base::SimpleThread"* %106 to void (%"class.base::SimpleThread"*)***
  %110 = load void (%"class.base::SimpleThread"*)**, void (%"class.base::SimpleThread"*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.base::SimpleThread"*)*, void (%"class.base::SimpleThread"*)** %110, i64 3
  %112 = load void (%"class.base::SimpleThread"*)*, void (%"class.base::SimpleThread"*)** %111, align 8
  tail call void %112(%"class.base::SimpleThread"* nonnull %106) #10
  br label %113

113:                                              ; preds = %108, %102
  %114 = icmp eq %"class.std::__1::unique_ptr"* %104, %95
  br i1 %114, label %115, label %102

115:                                              ; preds = %113
  %116 = bitcast %"class.std::__1::vector"* %93 to i8**
  %117 = load i8*, i8** %116, align 8
  br label %118

118:                                              ; preds = %115, %97
  %119 = phi i8* [ %117, %115 ], [ %98, %97 ]
  store %"class.std::__1::unique_ptr"* %95, %"class.std::__1::unique_ptr"** %99, align 8
  tail call void @_ZdlPv(i8* %119) #11
  br label %120

120:                                              ; preds = %90, %118
  %121 = bitcast %"class.content::CategorizedWorkerPool"* %0 to %"class.base::TaskRunner"*
  tail call void @_ZN4base10TaskRunnerD2Ev(%"class.base::TaskRunner"* %121) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base17ConditionVariableD1Ev(%"class.base::ConditionVariable"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc9TaskGraphD1Ev(%"struct.cc::TaskGraph"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc18TaskGraphWorkQueueD1Ev(%"class.cc::TaskGraphWorkQueue"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N7content21CategorizedWorkerPoolD1Ev(%"class.content::CategorizedWorkerPool"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 -1, i32 13
  %3 = bitcast %"class.base::OnceCallback"* %2 to %"class.content::CategorizedWorkerPool"*
  tail call void @_ZN7content21CategorizedWorkerPoolD2Ev(%"class.content::CategorizedWorkerPool"* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21CategorizedWorkerPoolD0Ev(%"class.content::CategorizedWorkerPool"*) unnamed_addr #0 align 2 {
  tail call void @_ZN7content21CategorizedWorkerPoolD2Ev(%"class.content::CategorizedWorkerPool"* %0) #10
  %2 = bitcast %"class.content::CategorizedWorkerPool"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N7content21CategorizedWorkerPoolD0Ev(%"class.content::CategorizedWorkerPool"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 -1, i32 13
  %3 = bitcast %"class.base::OnceCallback"* %2 to %"class.content::CategorizedWorkerPool"*
  tail call void @_ZN7content21CategorizedWorkerPoolD2Ev(%"class.content::CategorizedWorkerPool"* %3) #10
  %4 = bitcast %"class.base::OnceCallback"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21CategorizedWorkerPool22GenerateNamespaceTokenEv(%"class.cc::NamespaceToken"* noalias sret, %"class.content::CategorizedWorkerPool"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %1, i64 0, i32 3
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #10
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %1, i64 0, i32 4
  tail call void @_ZN2cc18TaskGraphWorkQueue22GenerateNamespaceTokenEv(%"class.cc::NamespaceToken"* sret %0, %"class.cc::TaskGraphWorkQueue"* %10) #10
  %11 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #10
  ret void
}

declare void @_ZN2cc18TaskGraphWorkQueue22GenerateNamespaceTokenEv(%"class.cc::NamespaceToken"* sret, %"class.cc::TaskGraphWorkQueue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N7content21CategorizedWorkerPool22GenerateNamespaceTokenEv(%"class.cc::NamespaceToken"* noalias sret, %"class.content::CategorizedWorkerPool"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %1, i64 -1, i32 13
  %4 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 6
  %5 = bitcast %"class.base::OnceCallback"* %4 to %union.pthread_mutex_t*
  %6 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %5) #10, !noalias !8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !4

8:                                                ; preds = %2
  %9 = bitcast %"class.base::OnceCallback"* %4 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %9) #10
  br label %10

10:                                               ; preds = %2, %8
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 11
  %12 = bitcast %"class.base::OnceCallback"* %11 to %"class.cc::TaskGraphWorkQueue"*
  tail call void @_ZN2cc18TaskGraphWorkQueue22GenerateNamespaceTokenEv(%"class.cc::NamespaceToken"* sret %0, %"class.cc::TaskGraphWorkQueue"* %12) #10
  %13 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21CategorizedWorkerPool13ScheduleTasksEN2cc14NamespaceTokenEPNS1_9TaskGraphE(%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"* nocapture readonly, %"struct.cc::TaskGraph"*) unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.cc::NamespaceToken", align 4
  %7 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), align 16
  %8 = and i8 %7, 25
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %29, label %10, !prof !4

10:                                               ; preds = %3
  %11 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"struct.cc::TaskGraph", %"struct.cc::TaskGraph"* %2, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast %"struct.cc::TaskGraph::Node"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"struct.cc::TaskGraph"* %2 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 4
  store i64 %18, i64* %4, align 8
  %19 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"struct.cc::TaskGraph", %"struct.cc::TaskGraph"* %2, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.cc::TaskGraph", %"struct.cc::TaskGraph"* %2, i64 0, i32 1, i32 0, i32 1
  %22 = bitcast %"struct.cc::TaskGraph::Edge"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector.48"* %20 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = ashr exact i64 %26, 4
  store i64 %27, i64* %5, align 8
  %28 = call i64 @_ZN20trace_event_internal13AddTraceEventImmEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i64* nonnull dereferenceable(8) %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0), i64* nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  br label %29

29:                                               ; preds = %3, %10
  %30 = phi i64 [ -6148914691236517206, %3 ], [ %28, %10 ]
  %31 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), %10 ]
  %32 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), %10 ]
  %33 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 3
  %34 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %33, i64 0, i32 0, i32 0
  %35 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %34) #10
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %39, label %37, !prof !4

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %33, i64 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %38) #10
  br label %39

39:                                               ; preds = %29, %37
  %40 = getelementptr inbounds %"class.cc::NamespaceToken", %"class.cc::NamespaceToken"* %1, i64 0, i32 0
  %41 = getelementptr inbounds %"class.cc::NamespaceToken", %"class.cc::NamespaceToken"* %6, i64 0, i32 0
  %42 = load i32, i32* %40, align 4
  store i32 %42, i32* %41, align 4
  call void @_ZN7content21CategorizedWorkerPool29ScheduleTasksWithLockAcquiredEN2cc14NamespaceTokenEPNS1_9TaskGraphE(%"class.content::CategorizedWorkerPool"* %0, %"class.cc::NamespaceToken"* nonnull %6, %"struct.cc::TaskGraph"* %2)
  %43 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %34) #10
  %44 = icmp eq i8* %32, null
  br i1 %44, label %49, label %45

45:                                               ; preds = %39
  %46 = load i8, i8* %32, align 1
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %49, label %48

48:                                               ; preds = %45
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %32, i8* %31, i64 %30) #10
  br label %49

49:                                               ; preds = %39, %45, %48
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventImmEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i64* dereferenceable(8), i8*, i64* dereferenceable(8)) local_unnamed_addr #6 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #10
  %19 = bitcast %"class.base::trace_event::TraceArguments"* %12 to i64*
  store i64 -6148914691247570430, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %21, align 8
  %22 = load i64, i64* %8, align 8
  %23 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = load i64, i64* %10, align 8
  %25 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1, i32 0
  store i64 %24, i64* %25, align 8
  %26 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #10
  %27 = load i8, i8* %18, align 8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %63, label %29

29:                                               ; preds = %11, %58
  %30 = phi i64 [ %59, %58 ], [ 0, %11 ]
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 8
  br i1 %33, label %34, label %45

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %30
  %36 = bitcast %"union.base::trace_event::TraceValue"* %35 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %37 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %36, align 8
  %38 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %37 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %41 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %41, i64 1
  %43 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %42, align 8
  call void %43(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %37) #10
  %44 = load i8, i8* %31, align 1
  br label %45

45:                                               ; preds = %39, %29
  %46 = phi i8 [ %32, %29 ], [ %44, %39 ]
  %47 = icmp eq i8 %46, 9
  br i1 %47, label %48, label %58

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %30
  %50 = bitcast %"union.base::trace_event::TraceValue"* %49 to %"class.protozero::HeapBuffered"**
  %51 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %50, align 8
  %52 = icmp eq %"class.protozero::HeapBuffered"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %51, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %54) #10
  %55 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %51, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %55) #10
  %56 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %51, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %56) #10
  %57 = bitcast %"class.protozero::HeapBuffered"* %51 to i8*
  call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %53, %48, %45, %34
  %59 = add nuw nsw i64 %30, 1
  %60 = load i8, i8* %18, align 8
  %61 = zext i8 %60 to i64
  %62 = icmp ult i64 %59, %61
  br i1 %62, label %29, label %63

63:                                               ; preds = %58, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  ret i64 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N7content21CategorizedWorkerPool13ScheduleTasksEN2cc14NamespaceTokenEPNS1_9TaskGraphE(%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"* nocapture readonly, %"struct.cc::TaskGraph"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 -1, i32 13
  %5 = bitcast %"class.base::OnceCallback"* %4 to %"class.content::CategorizedWorkerPool"*
  tail call void @_ZN7content21CategorizedWorkerPool13ScheduleTasksEN2cc14NamespaceTokenEPNS1_9TaskGraphE(%"class.content::CategorizedWorkerPool"* %5, %"class.cc::NamespaceToken"* %1, %"struct.cc::TaskGraph"* %2)
  ret void
}

declare void @_ZN2cc18TaskGraphWorkQueue13ScheduleTasksENS_14NamespaceTokenEPNS_9TaskGraphE(%"class.cc::TaskGraphWorkQueue"*, %"class.cc::NamespaceToken"*, %"struct.cc::TaskGraph"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21CategorizedWorkerPool27WaitForTasksToFinishRunningEN2cc14NamespaceTokenE(%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), align 16
  %5 = and i8 %4, 25
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %13, label %7, !prof !4

7:                                                ; preds = %2
  %8 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %9 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %11 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %11, i64* %10, align 8
  %12 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.7, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %8, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  br label %13

13:                                               ; preds = %2, %7
  %14 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([51 x i8], [51 x i8]* @.str.7, i64 0, i64 0), %7 ]
  %15 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), %7 ]
  %16 = phi i64 [ -6148914691236517206, %2 ], [ %12, %7 ]
  %17 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 3
  %18 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %17, i64 0, i32 0, i32 0
  %19 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %18) #10
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21, !prof !4

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %17, i64 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %22) #10
  br label %23

23:                                               ; preds = %13, %21
  %24 = getelementptr inbounds %"class.cc::NamespaceToken", %"class.cc::NamespaceToken"* %1, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 4, i32 1, i32 0, i32 1, i32 0, i32 0
  %27 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.std::__1::__tree_node"**
  %28 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node"* %28, null
  br i1 %29, label %114, label %30

30:                                               ; preds = %23, %30
  %31 = phi %"class.std::__1::__tree_end_node"* [ %41, %30 ], [ %26, %23 ]
  %32 = phi %"class.std::__1::__tree_node"* [ %42, %30 ], [ %28, %23 ]
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 1, i32 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %34, %25
  %36 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 0, i32 1
  %37 = bitcast %"class.std::__1::__tree_node_base"** %36 to %"class.std::__1::__tree_node"**
  %38 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 0, i32 0
  %39 = bitcast %"class.std::__1::__tree_node"* %32 to %"class.std::__1::__tree_node"**
  %40 = select i1 %35, %"class.std::__1::__tree_node"** %37, %"class.std::__1::__tree_node"** %39
  %41 = select i1 %35, %"class.std::__1::__tree_end_node"* %31, %"class.std::__1::__tree_end_node"* %38
  %42 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %40, align 8
  %43 = icmp eq %"class.std::__1::__tree_node"* %42, null
  br i1 %43, label %44, label %30

44:                                               ; preds = %30
  %45 = icmp eq %"class.std::__1::__tree_end_node"* %41, %26
  br i1 %45, label %114, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 4
  %48 = bitcast %"class.std::__1::__tree_end_node"* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp slt i32 %25, %49
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 5
  %52 = icmp eq %"class.std::__1::__tree_end_node"* %51, null
  %53 = or i1 %52, %50
  br i1 %53, label %114, label %54

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 17
  %56 = bitcast %"class.std::__1::__tree_end_node"* %55 to %"struct.std::__1::pair"**
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 18
  %58 = bitcast %"class.std::__1::__tree_end_node"* %57 to %"struct.std::__1::pair"**
  %59 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 11
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 11
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"class.std::__1::__tree_end_node"**
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 12
  br label %63

63:                                               ; preds = %54, %112
  %64 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %56, align 8
  %65 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %58, align 8
  %66 = icmp eq %"struct.std::__1::pair"* %64, %65
  br i1 %66, label %67, label %112

67:                                               ; preds = %63
  %68 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %61, align 8
  %69 = icmp eq %"class.std::__1::__tree_end_node"* %68, %62
  br i1 %69, label %113, label %70

70:                                               ; preds = %67, %107
  %71 = phi %"class.std::__1::__tree_end_node"* [ %108, %107 ], [ %68, %67 ]
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 5
  %73 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"**
  %74 = load %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"*, %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"** %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 6
  %76 = bitcast %"class.std::__1::__tree_end_node"* %75 to %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"**
  %77 = load %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"*, %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"** %76, align 8
  %78 = icmp eq %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* %74, %77
  br i1 %78, label %79, label %110

79:                                               ; preds = %70
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 1, i32 0
  %81 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %80, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %81, null
  br i1 %82, label %83, label %91

83:                                               ; preds = %79
  %84 = bitcast %"class.std::__1::__tree_end_node"* %71 to %"class.std::__1::__tree_node_base"*
  %85 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 2
  %86 = bitcast %"class.std::__1::__tree_end_node"* %85 to %"class.std::__1::__tree_end_node"**
  %87 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %86, align 8
  %88 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %87, i64 0, i32 0
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  %90 = icmp eq %"class.std::__1::__tree_node_base"* %89, %84
  br i1 %90, label %107, label %98

91:                                               ; preds = %79, %91
  %92 = phi %"class.std::__1::__tree_node_base"* [ %94, %91 ], [ %81, %79 ]
  %93 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %92, i64 0, i32 0, i32 0
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_node_base"* %94, null
  br i1 %95, label %96, label %91

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %92, i64 0, i32 0
  br label %107

98:                                               ; preds = %83, %98
  %99 = phi %"class.std::__1::__tree_end_node"** [ %102, %98 ], [ %86, %83 ]
  %100 = bitcast %"class.std::__1::__tree_end_node"** %99 to %"class.std::__1::__tree_node_base"**
  %101 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %101, i64 0, i32 2
  %103 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %102, align 8
  %104 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %103, i64 0, i32 0
  %105 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %104, align 8
  %106 = icmp eq %"class.std::__1::__tree_node_base"* %105, %101
  br i1 %106, label %107, label %98

107:                                              ; preds = %98, %96, %83
  %108 = phi %"class.std::__1::__tree_end_node"* [ %97, %96 ], [ %87, %83 ], [ %103, %98 ]
  %109 = icmp eq %"class.std::__1::__tree_end_node"* %108, %62
  br i1 %109, label %113, label %70

110:                                              ; preds = %70
  %111 = icmp eq %"class.std::__1::__tree_end_node"* %71, %62
  br i1 %111, label %113, label %112

112:                                              ; preds = %63, %110
  notail call void @_ZN4base17ConditionVariable4WaitEv(%"class.base::ConditionVariable"* %59) #10
  br label %63

113:                                              ; preds = %67, %110, %107
  call void @_ZN4base17ConditionVariable6SignalEv(%"class.base::ConditionVariable"* %59) #10
  br label %114

114:                                              ; preds = %23, %44, %46, %113
  %115 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %18) #10
  %116 = icmp eq i8* %15, null
  br i1 %116, label %121, label %117

117:                                              ; preds = %114
  %118 = load i8, i8* %15, align 1
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %121, label %120

120:                                              ; preds = %117
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %15, i8* %14, i64 %16) #10
  br label %121

121:                                              ; preds = %114, %117, %120
  ret void
}

declare void @_ZN4base17ConditionVariable6SignalEv(%"class.base::ConditionVariable"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N7content21CategorizedWorkerPool27WaitForTasksToFinishRunningEN2cc14NamespaceTokenE(%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 -1, i32 13
  %4 = bitcast %"class.base::OnceCallback"* %3 to %"class.content::CategorizedWorkerPool"*
  tail call void @_ZN7content21CategorizedWorkerPool27WaitForTasksToFinishRunningEN2cc14NamespaceTokenE(%"class.content::CategorizedWorkerPool"* %4, %"class.cc::NamespaceToken"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21CategorizedWorkerPool21CollectCompletedTasksEN2cc14NamespaceTokenEPNSt3__16vectorI13scoped_refptrINS1_4TaskEENS3_9allocatorIS7_EEEE(%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"* nocapture readonly, %"class.std::__1::vector.32"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.cc::NamespaceToken", align 4
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), align 16
  %7 = and i8 %6, 25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %15, label %9, !prof !4

9:                                                ; preds = %3
  %10 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %11 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %13 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %13, i64* %12, align 8
  %14 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.8, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %10, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  br label %15

15:                                               ; preds = %3, %9
  %16 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([45 x i8], [45 x i8]* @.str.8, i64 0, i64 0), %9 ]
  %17 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), %9 ]
  %18 = phi i64 [ -6148914691236517206, %3 ], [ %14, %9 ]
  %19 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 3
  %20 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %19, i64 0, i32 0, i32 0
  %21 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %20) #10
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23, !prof !4

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %19, i64 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %24) #10
  br label %25

25:                                               ; preds = %15, %23
  %26 = getelementptr inbounds %"class.cc::NamespaceToken", %"class.cc::NamespaceToken"* %1, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = bitcast %"class.cc::NamespaceToken"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28)
  %29 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 4
  %30 = getelementptr inbounds %"class.cc::NamespaceToken", %"class.cc::NamespaceToken"* %4, i64 0, i32 0
  store i32 %27, i32* %30, align 4
  call void @_ZN2cc18TaskGraphWorkQueue21CollectCompletedTasksENS_14NamespaceTokenEPNSt3__16vectorI13scoped_refptrINS_4TaskEENS2_9allocatorIS6_EEEE(%"class.cc::TaskGraphWorkQueue"* %29, %"class.cc::NamespaceToken"* nonnull %4, %"class.std::__1::vector.32"* %2) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28)
  %31 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %20) #10
  %32 = icmp eq i8* %17, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %25
  %34 = load i8, i8* %17, align 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %33
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %16, i64 %18) #10
  br label %37

37:                                               ; preds = %25, %33, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N7content21CategorizedWorkerPool21CollectCompletedTasksEN2cc14NamespaceTokenEPNSt3__16vectorI13scoped_refptrINS1_4TaskEENS3_9allocatorIS7_EEEE(%"class.content::CategorizedWorkerPool"*, %"class.cc::NamespaceToken"* nocapture readonly, %"class.std::__1::vector.32"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 -1, i32 13
  %5 = bitcast %"class.base::OnceCallback"* %4 to %"class.content::CategorizedWorkerPool"*
  tail call void @_ZN7content21CategorizedWorkerPool21CollectCompletedTasksEN2cc14NamespaceTokenEPNSt3__16vectorI13scoped_refptrINS1_4TaskEENS3_9allocatorIS7_EEEE(%"class.content::CategorizedWorkerPool"* %5, %"class.cc::NamespaceToken"* %1, %"class.std::__1::vector.32"* %2)
  ret void
}

declare void @_ZN2cc18TaskGraphWorkQueue21CollectCompletedTasksENS_14NamespaceTokenEPNSt3__16vectorI13scoped_refptrINS_4TaskEENS2_9allocatorIS6_EEEE(%"class.cc::TaskGraphWorkQueue"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.32"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN7content21CategorizedWorkerPool40ShouldRunTaskForCategoryWithLockAcquiredEN2cc12TaskCategoryE(%"class.content::CategorizedWorkerPool"* readonly, i16 zeroext) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 4, i32 2, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.198"**
  %5 = load %"class.std::__1::__tree_node.198"*, %"class.std::__1::__tree_node.198"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node.198"* %5, null
  br i1 %6, label %359, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node.198"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.198", %"class.std::__1::__tree_node.198"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load i16, i16* %10, align 2
  %12 = icmp ult i16 %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node.198", %"class.std::__1::__tree_node.198"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node.198"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.198", %"class.std::__1::__tree_node.198"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node.198"* %9 to %"class.std::__1::__tree_node.198"**
  %17 = select i1 %12, %"class.std::__1::__tree_node.198"** %14, %"class.std::__1::__tree_node.198"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node.198"*, %"class.std::__1::__tree_node.198"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node.198"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %359, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to i16*
  %26 = load i16, i16* %25, align 2
  %27 = icmp ugt i16 %26, %1
  br i1 %27, label %359, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 5
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"struct.cc::TaskGraphWorkQueue::TaskNamespace"***
  %31 = load %"struct.cc::TaskGraphWorkQueue::TaskNamespace"**, %"struct.cc::TaskGraphWorkQueue::TaskNamespace"*** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 6
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"struct.cc::TaskGraphWorkQueue::TaskNamespace"***
  %34 = load %"struct.cc::TaskGraphWorkQueue::TaskNamespace"**, %"struct.cc::TaskGraphWorkQueue::TaskNamespace"*** %33, align 8
  %35 = icmp eq %"struct.cc::TaskGraphWorkQueue::TaskNamespace"** %31, %34
  br i1 %35, label %359, label %36

36:                                               ; preds = %28
  switch i16 %1, label %358 [
    i16 2, label %40
    i16 3, label %40
    i16 0, label %37
  ]

37:                                               ; preds = %36
  %38 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %39 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %38, align 8
  br label %259

40:                                               ; preds = %36, %36
  %41 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %42 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %41, align 8
  %43 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 4, i32 1, i32 0, i32 1, i32 0, i32 0
  %44 = icmp eq %"class.std::__1::__tree_end_node"* %42, %43
  br i1 %44, label %140, label %45

45:                                               ; preds = %40, %110
  %46 = phi i64 [ %82, %110 ], [ 0, %40 ]
  %47 = phi %"class.std::__1::__tree_end_node"* [ %111, %110 ], [ %42, %40 ]
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %47, i64 17
  %49 = bitcast %"class.std::__1::__tree_end_node"* %48 to %"struct.std::__1::pair"**
  %50 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %47, i64 18
  %52 = bitcast %"class.std::__1::__tree_end_node"* %51 to %"struct.std::__1::pair"**
  %53 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %52, align 8
  %54 = icmp eq %"struct.std::__1::pair"* %50, %53
  br i1 %54, label %81, label %55

55:                                               ; preds = %45
  %56 = ptrtoint %"struct.std::__1::pair"* %50 to i64
  %57 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %53, i64 -1
  %58 = ptrtoint %"struct.std::__1::pair"* %57 to i64
  %59 = sub i64 %58, %56
  %60 = lshr i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %76, label %64

64:                                               ; preds = %55, %64
  %65 = phi i64 [ %72, %64 ], [ %46, %55 ]
  %66 = phi %"struct.std::__1::pair"* [ %73, %64 ], [ %50, %55 ]
  %67 = phi i64 [ %74, %64 ], [ %62, %55 ]
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %66, i64 0, i32 0
  %69 = load i16, i16* %68, align 8
  %70 = icmp eq i16 %69, 0
  %71 = zext i1 %70 to i64
  %72 = add i64 %65, %71
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %66, i64 1
  %74 = add i64 %67, -1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %64, !llvm.loop !11

76:                                               ; preds = %64, %55
  %77 = phi i64 [ undef, %55 ], [ %72, %64 ]
  %78 = phi i64 [ %46, %55 ], [ %72, %64 ]
  %79 = phi %"struct.std::__1::pair"* [ %50, %55 ], [ %73, %64 ]
  %80 = icmp ult i64 %59, 48
  br i1 %80, label %81, label %113

81:                                               ; preds = %76, %113, %45
  %82 = phi i64 [ %46, %45 ], [ %77, %76 ], [ %135, %113 ]
  %83 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %47, i64 1, i32 0
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  %85 = icmp eq %"class.std::__1::__tree_node_base"* %84, null
  br i1 %85, label %86, label %94

86:                                               ; preds = %81
  %87 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.std::__1::__tree_node_base"*
  %88 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %47, i64 2
  %89 = bitcast %"class.std::__1::__tree_end_node"* %88 to %"class.std::__1::__tree_end_node"**
  %90 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %89, align 8
  %91 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 0, i32 0
  %92 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %91, align 8
  %93 = icmp eq %"class.std::__1::__tree_node_base"* %92, %87
  br i1 %93, label %110, label %101

94:                                               ; preds = %81, %94
  %95 = phi %"class.std::__1::__tree_node_base"* [ %97, %94 ], [ %84, %81 ]
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %95, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, null
  br i1 %98, label %99, label %94

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %95, i64 0, i32 0
  br label %110

101:                                              ; preds = %86, %101
  %102 = phi %"class.std::__1::__tree_end_node"** [ %105, %101 ], [ %89, %86 ]
  %103 = bitcast %"class.std::__1::__tree_end_node"** %102 to %"class.std::__1::__tree_node_base"**
  %104 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %103, align 8
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %104, i64 0, i32 2
  %106 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %105, align 8
  %107 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 0, i32 0
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  %109 = icmp eq %"class.std::__1::__tree_node_base"* %108, %104
  br i1 %109, label %110, label %101

110:                                              ; preds = %101, %99, %86
  %111 = phi %"class.std::__1::__tree_end_node"* [ %100, %99 ], [ %90, %86 ], [ %106, %101 ]
  %112 = icmp eq %"class.std::__1::__tree_end_node"* %111, %43
  br i1 %112, label %138, label %45

113:                                              ; preds = %76, %113
  %114 = phi i64 [ %135, %113 ], [ %78, %76 ]
  %115 = phi %"struct.std::__1::pair"* [ %136, %113 ], [ %79, %76 ]
  %116 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %115, i64 0, i32 0
  %117 = load i16, i16* %116, align 8
  %118 = icmp eq i16 %117, 0
  %119 = zext i1 %118 to i64
  %120 = add i64 %114, %119
  %121 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %115, i64 1, i32 0
  %122 = load i16, i16* %121, align 8
  %123 = icmp eq i16 %122, 0
  %124 = zext i1 %123 to i64
  %125 = add i64 %120, %124
  %126 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %115, i64 2, i32 0
  %127 = load i16, i16* %126, align 8
  %128 = icmp eq i16 %127, 0
  %129 = zext i1 %128 to i64
  %130 = add i64 %125, %129
  %131 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %115, i64 3, i32 0
  %132 = load i16, i16* %131, align 8
  %133 = icmp eq i16 %132, 0
  %134 = zext i1 %133 to i64
  %135 = add i64 %130, %134
  %136 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %115, i64 4
  %137 = icmp eq %"struct.std::__1::pair"* %136, %53
  br i1 %137, label %81, label %113

138:                                              ; preds = %110
  %139 = icmp eq i64 %82, 0
  br i1 %139, label %140, label %359

140:                                              ; preds = %138, %40
  br label %141

141:                                              ; preds = %140, %141
  %142 = phi %"class.std::__1::__tree_node.198"* [ %144, %141 ], [ %5, %140 ]
  %143 = bitcast %"class.std::__1::__tree_node.198"* %142 to %"class.std::__1::__tree_node.198"**
  %144 = load %"class.std::__1::__tree_node.198"*, %"class.std::__1::__tree_node.198"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node.198"* %144, null
  br i1 %145, label %146, label %141

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.std::__1::__tree_node.198", %"class.std::__1::__tree_node.198"* %142, i64 0, i32 0, i32 0
  %148 = icmp eq %"class.std::__1::__tree_end_node"* %147, %3
  br i1 %148, label %162, label %149

149:                                              ; preds = %146
  %150 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %147, i64 4
  %151 = bitcast %"class.std::__1::__tree_end_node"* %150 to i16*
  %152 = load i16, i16* %151, align 2
  %153 = icmp eq i16 %152, 0
  br i1 %153, label %154, label %162

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %147, i64 5
  %156 = bitcast %"class.std::__1::__tree_end_node"* %155 to %"struct.cc::TaskGraphWorkQueue::TaskNamespace"***
  %157 = load %"struct.cc::TaskGraphWorkQueue::TaskNamespace"**, %"struct.cc::TaskGraphWorkQueue::TaskNamespace"*** %156, align 8
  %158 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %147, i64 6
  %159 = bitcast %"class.std::__1::__tree_end_node"* %158 to %"struct.cc::TaskGraphWorkQueue::TaskNamespace"***
  %160 = load %"struct.cc::TaskGraphWorkQueue::TaskNamespace"**, %"struct.cc::TaskGraphWorkQueue::TaskNamespace"*** %159, align 8
  %161 = icmp eq %"struct.cc::TaskGraphWorkQueue::TaskNamespace"** %157, %160
  br i1 %161, label %162, label %359

162:                                              ; preds = %149, %154, %146
  br i1 %44, label %553, label %458

163:                                              ; preds = %583, %228
  %164 = phi i64 [ %200, %228 ], [ 0, %583 ]
  %165 = phi %"class.std::__1::__tree_end_node"* [ %229, %228 ], [ %42, %583 ]
  %166 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %165, i64 17
  %167 = bitcast %"class.std::__1::__tree_end_node"* %166 to %"struct.std::__1::pair"**
  %168 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %167, align 8
  %169 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %165, i64 18
  %170 = bitcast %"class.std::__1::__tree_end_node"* %169 to %"struct.std::__1::pair"**
  %171 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %170, align 8
  %172 = icmp eq %"struct.std::__1::pair"* %168, %171
  br i1 %172, label %199, label %173

173:                                              ; preds = %163
  %174 = ptrtoint %"struct.std::__1::pair"* %168 to i64
  %175 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %171, i64 -1
  %176 = ptrtoint %"struct.std::__1::pair"* %175 to i64
  %177 = sub i64 %176, %174
  %178 = lshr i64 %177, 4
  %179 = add nuw nsw i64 %178, 1
  %180 = and i64 %179, 3
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %194, label %182

182:                                              ; preds = %173, %182
  %183 = phi i64 [ %190, %182 ], [ %164, %173 ]
  %184 = phi %"struct.std::__1::pair"* [ %191, %182 ], [ %168, %173 ]
  %185 = phi i64 [ %192, %182 ], [ %180, %173 ]
  %186 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %184, i64 0, i32 0
  %187 = load i16, i16* %186, align 8
  %188 = icmp eq i16 %187, 2
  %189 = zext i1 %188 to i64
  %190 = add i64 %183, %189
  %191 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %184, i64 1
  %192 = add i64 %185, -1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %182, !llvm.loop !12

194:                                              ; preds = %182, %173
  %195 = phi i64 [ undef, %173 ], [ %190, %182 ]
  %196 = phi i64 [ %164, %173 ], [ %190, %182 ]
  %197 = phi %"struct.std::__1::pair"* [ %168, %173 ], [ %191, %182 ]
  %198 = icmp ult i64 %177, 48
  br i1 %198, label %199, label %231

199:                                              ; preds = %194, %231, %163
  %200 = phi i64 [ %164, %163 ], [ %195, %194 ], [ %253, %231 ]
  %201 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %165, i64 1, i32 0
  %202 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %201, align 8
  %203 = icmp eq %"class.std::__1::__tree_node_base"* %202, null
  br i1 %203, label %204, label %212

204:                                              ; preds = %199
  %205 = bitcast %"class.std::__1::__tree_end_node"* %165 to %"class.std::__1::__tree_node_base"*
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %165, i64 2
  %207 = bitcast %"class.std::__1::__tree_end_node"* %206 to %"class.std::__1::__tree_end_node"**
  %208 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %207, align 8
  %209 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %208, i64 0, i32 0
  %210 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %209, align 8
  %211 = icmp eq %"class.std::__1::__tree_node_base"* %210, %205
  br i1 %211, label %228, label %219

212:                                              ; preds = %199, %212
  %213 = phi %"class.std::__1::__tree_node_base"* [ %215, %212 ], [ %202, %199 ]
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 0, i32 0
  %215 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %214, align 8
  %216 = icmp eq %"class.std::__1::__tree_node_base"* %215, null
  br i1 %216, label %217, label %212

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 0
  br label %228

219:                                              ; preds = %204, %219
  %220 = phi %"class.std::__1::__tree_end_node"** [ %223, %219 ], [ %207, %204 ]
  %221 = bitcast %"class.std::__1::__tree_end_node"** %220 to %"class.std::__1::__tree_node_base"**
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %224 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %223, align 8
  %225 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %224, i64 0, i32 0
  %226 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %225, align 8
  %227 = icmp eq %"class.std::__1::__tree_node_base"* %226, %222
  br i1 %227, label %228, label %219

228:                                              ; preds = %219, %217, %204
  %229 = phi %"class.std::__1::__tree_end_node"* [ %218, %217 ], [ %208, %204 ], [ %224, %219 ]
  %230 = icmp eq %"class.std::__1::__tree_end_node"* %229, %43
  br i1 %230, label %256, label %163

231:                                              ; preds = %194, %231
  %232 = phi i64 [ %253, %231 ], [ %196, %194 ]
  %233 = phi %"struct.std::__1::pair"* [ %254, %231 ], [ %197, %194 ]
  %234 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %233, i64 0, i32 0
  %235 = load i16, i16* %234, align 8
  %236 = icmp eq i16 %235, 2
  %237 = zext i1 %236 to i64
  %238 = add i64 %232, %237
  %239 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %233, i64 1, i32 0
  %240 = load i16, i16* %239, align 8
  %241 = icmp eq i16 %240, 2
  %242 = zext i1 %241 to i64
  %243 = add i64 %238, %242
  %244 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %233, i64 2, i32 0
  %245 = load i16, i16* %244, align 8
  %246 = icmp eq i16 %245, 2
  %247 = zext i1 %246 to i64
  %248 = add i64 %243, %247
  %249 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %233, i64 3, i32 0
  %250 = load i16, i16* %249, align 8
  %251 = icmp eq i16 %250, 2
  %252 = zext i1 %251 to i64
  %253 = add i64 %248, %252
  %254 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %233, i64 4
  %255 = icmp eq %"struct.std::__1::pair"* %254, %171
  br i1 %255, label %199, label %231

256:                                              ; preds = %228
  %257 = icmp eq i64 %200, 0
  br i1 %257, label %258, label %359

258:                                              ; preds = %256
  br i1 %44, label %456, label %361

259:                                              ; preds = %37, %456
  %260 = phi %"class.std::__1::__tree_end_node"* [ %39, %37 ], [ %42, %456 ]
  %261 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 4, i32 1, i32 0, i32 1, i32 0, i32 0
  %262 = icmp eq %"class.std::__1::__tree_end_node"* %260, %261
  br i1 %262, label %358, label %263

263:                                              ; preds = %259, %328
  %264 = phi i64 [ %300, %328 ], [ 0, %259 ]
  %265 = phi %"class.std::__1::__tree_end_node"* [ %329, %328 ], [ %260, %259 ]
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %265, i64 17
  %267 = bitcast %"class.std::__1::__tree_end_node"* %266 to %"struct.std::__1::pair"**
  %268 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %267, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %265, i64 18
  %270 = bitcast %"class.std::__1::__tree_end_node"* %269 to %"struct.std::__1::pair"**
  %271 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %270, align 8
  %272 = icmp eq %"struct.std::__1::pair"* %268, %271
  br i1 %272, label %299, label %273

273:                                              ; preds = %263
  %274 = ptrtoint %"struct.std::__1::pair"* %268 to i64
  %275 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %271, i64 -1
  %276 = ptrtoint %"struct.std::__1::pair"* %275 to i64
  %277 = sub i64 %276, %274
  %278 = lshr i64 %277, 4
  %279 = add nuw nsw i64 %278, 1
  %280 = and i64 %279, 3
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %294, label %282

282:                                              ; preds = %273, %282
  %283 = phi i64 [ %290, %282 ], [ %264, %273 ]
  %284 = phi %"struct.std::__1::pair"* [ %291, %282 ], [ %268, %273 ]
  %285 = phi i64 [ %292, %282 ], [ %280, %273 ]
  %286 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %284, i64 0, i32 0
  %287 = load i16, i16* %286, align 8
  %288 = icmp eq i16 %287, 0
  %289 = zext i1 %288 to i64
  %290 = add i64 %283, %289
  %291 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %284, i64 1
  %292 = add i64 %285, -1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %282, !llvm.loop !13

294:                                              ; preds = %282, %273
  %295 = phi i64 [ undef, %273 ], [ %290, %282 ]
  %296 = phi i64 [ %264, %273 ], [ %290, %282 ]
  %297 = phi %"struct.std::__1::pair"* [ %268, %273 ], [ %291, %282 ]
  %298 = icmp ult i64 %277, 48
  br i1 %298, label %299, label %331

299:                                              ; preds = %294, %331, %263
  %300 = phi i64 [ %264, %263 ], [ %295, %294 ], [ %353, %331 ]
  %301 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %265, i64 1, i32 0
  %302 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %301, align 8
  %303 = icmp eq %"class.std::__1::__tree_node_base"* %302, null
  br i1 %303, label %304, label %312

304:                                              ; preds = %299
  %305 = bitcast %"class.std::__1::__tree_end_node"* %265 to %"class.std::__1::__tree_node_base"*
  %306 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %265, i64 2
  %307 = bitcast %"class.std::__1::__tree_end_node"* %306 to %"class.std::__1::__tree_end_node"**
  %308 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %307, align 8
  %309 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %308, i64 0, i32 0
  %310 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %309, align 8
  %311 = icmp eq %"class.std::__1::__tree_node_base"* %310, %305
  br i1 %311, label %328, label %319

312:                                              ; preds = %299, %312
  %313 = phi %"class.std::__1::__tree_node_base"* [ %315, %312 ], [ %302, %299 ]
  %314 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %313, i64 0, i32 0, i32 0
  %315 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %314, align 8
  %316 = icmp eq %"class.std::__1::__tree_node_base"* %315, null
  br i1 %316, label %317, label %312

317:                                              ; preds = %312
  %318 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %313, i64 0, i32 0
  br label %328

319:                                              ; preds = %304, %319
  %320 = phi %"class.std::__1::__tree_end_node"** [ %323, %319 ], [ %307, %304 ]
  %321 = bitcast %"class.std::__1::__tree_end_node"** %320 to %"class.std::__1::__tree_node_base"**
  %322 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %321, align 8
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %322, i64 0, i32 2
  %324 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %323, align 8
  %325 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %324, i64 0, i32 0
  %326 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %325, align 8
  %327 = icmp eq %"class.std::__1::__tree_node_base"* %326, %322
  br i1 %327, label %328, label %319

328:                                              ; preds = %319, %317, %304
  %329 = phi %"class.std::__1::__tree_end_node"* [ %318, %317 ], [ %308, %304 ], [ %324, %319 ]
  %330 = icmp eq %"class.std::__1::__tree_end_node"* %329, %261
  br i1 %330, label %356, label %263

331:                                              ; preds = %294, %331
  %332 = phi i64 [ %353, %331 ], [ %296, %294 ]
  %333 = phi %"struct.std::__1::pair"* [ %354, %331 ], [ %297, %294 ]
  %334 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %333, i64 0, i32 0
  %335 = load i16, i16* %334, align 8
  %336 = icmp eq i16 %335, 0
  %337 = zext i1 %336 to i64
  %338 = add i64 %332, %337
  %339 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %333, i64 1, i32 0
  %340 = load i16, i16* %339, align 8
  %341 = icmp eq i16 %340, 0
  %342 = zext i1 %341 to i64
  %343 = add i64 %338, %342
  %344 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %333, i64 2, i32 0
  %345 = load i16, i16* %344, align 8
  %346 = icmp eq i16 %345, 0
  %347 = zext i1 %346 to i64
  %348 = add i64 %343, %347
  %349 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %333, i64 3, i32 0
  %350 = load i16, i16* %349, align 8
  %351 = icmp eq i16 %350, 0
  %352 = zext i1 %351 to i64
  %353 = add i64 %348, %352
  %354 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %333, i64 4
  %355 = icmp eq %"struct.std::__1::pair"* %354, %271
  br i1 %355, label %299, label %331

356:                                              ; preds = %328
  %357 = icmp eq i64 %300, 0
  br i1 %357, label %358, label %359

358:                                              ; preds = %36, %259, %356, %456
  br label %359

359:                                              ; preds = %154, %138, %551, %575, %256, %454, %28, %23, %21, %2, %356, %358
  %360 = phi i1 [ true, %358 ], [ false, %28 ], [ false, %356 ], [ false, %2 ], [ false, %21 ], [ false, %23 ], [ false, %454 ], [ false, %256 ], [ false, %575 ], [ false, %551 ], [ false, %138 ], [ false, %154 ]
  ret i1 %360

361:                                              ; preds = %258, %451
  %362 = phi i64 [ %423, %451 ], [ 0, %258 ]
  %363 = phi %"class.std::__1::__tree_end_node"* [ %452, %451 ], [ %42, %258 ]
  %364 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %363, i64 17
  %365 = bitcast %"class.std::__1::__tree_end_node"* %364 to %"struct.std::__1::pair"**
  %366 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %365, align 8
  %367 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %363, i64 18
  %368 = bitcast %"class.std::__1::__tree_end_node"* %367 to %"struct.std::__1::pair"**
  %369 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %368, align 8
  %370 = icmp eq %"struct.std::__1::pair"* %366, %369
  br i1 %370, label %422, label %371

371:                                              ; preds = %361
  %372 = ptrtoint %"struct.std::__1::pair"* %366 to i64
  %373 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %369, i64 -1
  %374 = ptrtoint %"struct.std::__1::pair"* %373 to i64
  %375 = sub i64 %374, %372
  %376 = lshr i64 %375, 4
  %377 = add nuw nsw i64 %376, 1
  %378 = and i64 %377, 3
  %379 = icmp eq i64 %378, 0
  br i1 %379, label %392, label %380

380:                                              ; preds = %371, %380
  %381 = phi i64 [ %388, %380 ], [ %362, %371 ]
  %382 = phi %"struct.std::__1::pair"* [ %389, %380 ], [ %366, %371 ]
  %383 = phi i64 [ %390, %380 ], [ %378, %371 ]
  %384 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %382, i64 0, i32 0
  %385 = load i16, i16* %384, align 8
  %386 = icmp eq i16 %385, 3
  %387 = zext i1 %386 to i64
  %388 = add i64 %381, %387
  %389 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %382, i64 1
  %390 = add i64 %383, -1
  %391 = icmp eq i64 %390, 0
  br i1 %391, label %392, label %380, !llvm.loop !14

392:                                              ; preds = %380, %371
  %393 = phi i64 [ undef, %371 ], [ %388, %380 ]
  %394 = phi i64 [ %362, %371 ], [ %388, %380 ]
  %395 = phi %"struct.std::__1::pair"* [ %366, %371 ], [ %389, %380 ]
  %396 = icmp ult i64 %375, 48
  br i1 %396, label %422, label %397

397:                                              ; preds = %392, %397
  %398 = phi i64 [ %419, %397 ], [ %394, %392 ]
  %399 = phi %"struct.std::__1::pair"* [ %420, %397 ], [ %395, %392 ]
  %400 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %399, i64 0, i32 0
  %401 = load i16, i16* %400, align 8
  %402 = icmp eq i16 %401, 3
  %403 = zext i1 %402 to i64
  %404 = add i64 %398, %403
  %405 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %399, i64 1, i32 0
  %406 = load i16, i16* %405, align 8
  %407 = icmp eq i16 %406, 3
  %408 = zext i1 %407 to i64
  %409 = add i64 %404, %408
  %410 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %399, i64 2, i32 0
  %411 = load i16, i16* %410, align 8
  %412 = icmp eq i16 %411, 3
  %413 = zext i1 %412 to i64
  %414 = add i64 %409, %413
  %415 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %399, i64 3, i32 0
  %416 = load i16, i16* %415, align 8
  %417 = icmp eq i16 %416, 3
  %418 = zext i1 %417 to i64
  %419 = add i64 %414, %418
  %420 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %399, i64 4
  %421 = icmp eq %"struct.std::__1::pair"* %420, %369
  br i1 %421, label %422, label %397

422:                                              ; preds = %392, %397, %361
  %423 = phi i64 [ %362, %361 ], [ %393, %392 ], [ %419, %397 ]
  %424 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %363, i64 1, i32 0
  %425 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %424, align 8
  %426 = icmp eq %"class.std::__1::__tree_node_base"* %425, null
  br i1 %426, label %434, label %427

427:                                              ; preds = %422, %427
  %428 = phi %"class.std::__1::__tree_node_base"* [ %430, %427 ], [ %425, %422 ]
  %429 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %428, i64 0, i32 0, i32 0
  %430 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %429, align 8
  %431 = icmp eq %"class.std::__1::__tree_node_base"* %430, null
  br i1 %431, label %432, label %427

432:                                              ; preds = %427
  %433 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %428, i64 0, i32 0
  br label %451

434:                                              ; preds = %422
  %435 = bitcast %"class.std::__1::__tree_end_node"* %363 to %"class.std::__1::__tree_node_base"*
  %436 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %363, i64 2
  %437 = bitcast %"class.std::__1::__tree_end_node"* %436 to %"class.std::__1::__tree_end_node"**
  %438 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %437, align 8
  %439 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %438, i64 0, i32 0
  %440 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %439, align 8
  %441 = icmp eq %"class.std::__1::__tree_node_base"* %440, %435
  br i1 %441, label %451, label %442

442:                                              ; preds = %434, %442
  %443 = phi %"class.std::__1::__tree_end_node"** [ %446, %442 ], [ %437, %434 ]
  %444 = bitcast %"class.std::__1::__tree_end_node"** %443 to %"class.std::__1::__tree_node_base"**
  %445 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %444, align 8
  %446 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %445, i64 0, i32 2
  %447 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %446, align 8
  %448 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %447, i64 0, i32 0
  %449 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %448, align 8
  %450 = icmp eq %"class.std::__1::__tree_node_base"* %449, %445
  br i1 %450, label %451, label %442

451:                                              ; preds = %442, %434, %432
  %452 = phi %"class.std::__1::__tree_end_node"* [ %433, %432 ], [ %438, %434 ], [ %447, %442 ]
  %453 = icmp eq %"class.std::__1::__tree_end_node"* %452, %43
  br i1 %453, label %454, label %361

454:                                              ; preds = %451
  %455 = icmp eq i64 %423, 0
  br i1 %455, label %456, label %359

456:                                              ; preds = %583, %454, %258
  %457 = icmp eq i16 %1, 0
  br i1 %457, label %259, label %358

458:                                              ; preds = %162, %548
  %459 = phi i64 [ %520, %548 ], [ 0, %162 ]
  %460 = phi %"class.std::__1::__tree_end_node"* [ %549, %548 ], [ %42, %162 ]
  %461 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %460, i64 17
  %462 = bitcast %"class.std::__1::__tree_end_node"* %461 to %"struct.std::__1::pair"**
  %463 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %462, align 8
  %464 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %460, i64 18
  %465 = bitcast %"class.std::__1::__tree_end_node"* %464 to %"struct.std::__1::pair"**
  %466 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %465, align 8
  %467 = icmp eq %"struct.std::__1::pair"* %463, %466
  br i1 %467, label %519, label %468

468:                                              ; preds = %458
  %469 = ptrtoint %"struct.std::__1::pair"* %463 to i64
  %470 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %466, i64 -1
  %471 = ptrtoint %"struct.std::__1::pair"* %470 to i64
  %472 = sub i64 %471, %469
  %473 = lshr i64 %472, 4
  %474 = add nuw nsw i64 %473, 1
  %475 = and i64 %474, 3
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %489, label %477

477:                                              ; preds = %468, %477
  %478 = phi i64 [ %485, %477 ], [ %459, %468 ]
  %479 = phi %"struct.std::__1::pair"* [ %486, %477 ], [ %463, %468 ]
  %480 = phi i64 [ %487, %477 ], [ %475, %468 ]
  %481 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %479, i64 0, i32 0
  %482 = load i16, i16* %481, align 8
  %483 = icmp eq i16 %482, 1
  %484 = zext i1 %483 to i64
  %485 = add i64 %478, %484
  %486 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %479, i64 1
  %487 = add i64 %480, -1
  %488 = icmp eq i64 %487, 0
  br i1 %488, label %489, label %477, !llvm.loop !15

489:                                              ; preds = %477, %468
  %490 = phi i64 [ undef, %468 ], [ %485, %477 ]
  %491 = phi i64 [ %459, %468 ], [ %485, %477 ]
  %492 = phi %"struct.std::__1::pair"* [ %463, %468 ], [ %486, %477 ]
  %493 = icmp ult i64 %472, 48
  br i1 %493, label %519, label %494

494:                                              ; preds = %489, %494
  %495 = phi i64 [ %516, %494 ], [ %491, %489 ]
  %496 = phi %"struct.std::__1::pair"* [ %517, %494 ], [ %492, %489 ]
  %497 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %496, i64 0, i32 0
  %498 = load i16, i16* %497, align 8
  %499 = icmp eq i16 %498, 1
  %500 = zext i1 %499 to i64
  %501 = add i64 %495, %500
  %502 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %496, i64 1, i32 0
  %503 = load i16, i16* %502, align 8
  %504 = icmp eq i16 %503, 1
  %505 = zext i1 %504 to i64
  %506 = add i64 %501, %505
  %507 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %496, i64 2, i32 0
  %508 = load i16, i16* %507, align 8
  %509 = icmp eq i16 %508, 1
  %510 = zext i1 %509 to i64
  %511 = add i64 %506, %510
  %512 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %496, i64 3, i32 0
  %513 = load i16, i16* %512, align 8
  %514 = icmp eq i16 %513, 1
  %515 = zext i1 %514 to i64
  %516 = add i64 %511, %515
  %517 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %496, i64 4
  %518 = icmp eq %"struct.std::__1::pair"* %517, %466
  br i1 %518, label %519, label %494

519:                                              ; preds = %489, %494, %458
  %520 = phi i64 [ %459, %458 ], [ %490, %489 ], [ %516, %494 ]
  %521 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %460, i64 1, i32 0
  %522 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %521, align 8
  %523 = icmp eq %"class.std::__1::__tree_node_base"* %522, null
  br i1 %523, label %531, label %524

524:                                              ; preds = %519, %524
  %525 = phi %"class.std::__1::__tree_node_base"* [ %527, %524 ], [ %522, %519 ]
  %526 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %525, i64 0, i32 0, i32 0
  %527 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %526, align 8
  %528 = icmp eq %"class.std::__1::__tree_node_base"* %527, null
  br i1 %528, label %529, label %524

529:                                              ; preds = %524
  %530 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %525, i64 0, i32 0
  br label %548

531:                                              ; preds = %519
  %532 = bitcast %"class.std::__1::__tree_end_node"* %460 to %"class.std::__1::__tree_node_base"*
  %533 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %460, i64 2
  %534 = bitcast %"class.std::__1::__tree_end_node"* %533 to %"class.std::__1::__tree_end_node"**
  %535 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %534, align 8
  %536 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %535, i64 0, i32 0
  %537 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %536, align 8
  %538 = icmp eq %"class.std::__1::__tree_node_base"* %537, %532
  br i1 %538, label %548, label %539

539:                                              ; preds = %531, %539
  %540 = phi %"class.std::__1::__tree_end_node"** [ %543, %539 ], [ %534, %531 ]
  %541 = bitcast %"class.std::__1::__tree_end_node"** %540 to %"class.std::__1::__tree_node_base"**
  %542 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %541, align 8
  %543 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %542, i64 0, i32 2
  %544 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %543, align 8
  %545 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %544, i64 0, i32 0
  %546 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %545, align 8
  %547 = icmp eq %"class.std::__1::__tree_node_base"* %546, %542
  br i1 %547, label %548, label %539

548:                                              ; preds = %539, %531, %529
  %549 = phi %"class.std::__1::__tree_end_node"* [ %530, %529 ], [ %535, %531 ], [ %544, %539 ]
  %550 = icmp eq %"class.std::__1::__tree_end_node"* %549, %43
  br i1 %550, label %551, label %458

551:                                              ; preds = %548
  %552 = icmp eq i64 %520, 0
  br i1 %552, label %553, label %359

553:                                              ; preds = %162, %551
  br label %554

554:                                              ; preds = %553, %554
  %555 = phi %"class.std::__1::__tree_end_node"* [ %565, %554 ], [ %3, %553 ]
  %556 = phi %"class.std::__1::__tree_node.198"* [ %566, %554 ], [ %5, %553 ]
  %557 = getelementptr inbounds %"class.std::__1::__tree_node.198", %"class.std::__1::__tree_node.198"* %556, i64 0, i32 1, i32 0, i32 0
  %558 = load i16, i16* %557, align 2
  %559 = icmp eq i16 %558, 0
  %560 = getelementptr inbounds %"class.std::__1::__tree_node.198", %"class.std::__1::__tree_node.198"* %556, i64 0, i32 0, i32 1
  %561 = bitcast %"class.std::__1::__tree_node_base"** %560 to %"class.std::__1::__tree_node.198"**
  %562 = getelementptr inbounds %"class.std::__1::__tree_node.198", %"class.std::__1::__tree_node.198"* %556, i64 0, i32 0, i32 0
  %563 = bitcast %"class.std::__1::__tree_node.198"* %556 to %"class.std::__1::__tree_node.198"**
  %564 = select i1 %559, %"class.std::__1::__tree_node.198"** %561, %"class.std::__1::__tree_node.198"** %563
  %565 = select i1 %559, %"class.std::__1::__tree_end_node"* %555, %"class.std::__1::__tree_end_node"* %562
  %566 = load %"class.std::__1::__tree_node.198"*, %"class.std::__1::__tree_node.198"** %564, align 8
  %567 = icmp eq %"class.std::__1::__tree_node.198"* %566, null
  br i1 %567, label %568, label %554

568:                                              ; preds = %554
  %569 = icmp eq %"class.std::__1::__tree_end_node"* %565, %3
  br i1 %569, label %583, label %570

570:                                              ; preds = %568
  %571 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %565, i64 4
  %572 = bitcast %"class.std::__1::__tree_end_node"* %571 to i16*
  %573 = load i16, i16* %572, align 2
  %574 = icmp ugt i16 %573, 1
  br i1 %574, label %583, label %575

575:                                              ; preds = %570
  %576 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %565, i64 5
  %577 = bitcast %"class.std::__1::__tree_end_node"* %576 to %"struct.cc::TaskGraphWorkQueue::TaskNamespace"***
  %578 = load %"struct.cc::TaskGraphWorkQueue::TaskNamespace"**, %"struct.cc::TaskGraphWorkQueue::TaskNamespace"*** %577, align 8
  %579 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %565, i64 6
  %580 = bitcast %"class.std::__1::__tree_end_node"* %579 to %"struct.cc::TaskGraphWorkQueue::TaskNamespace"***
  %581 = load %"struct.cc::TaskGraphWorkQueue::TaskNamespace"**, %"struct.cc::TaskGraphWorkQueue::TaskNamespace"*** %580, align 8
  %582 = icmp eq %"struct.cc::TaskGraphWorkQueue::TaskNamespace"** %578, %581
  br i1 %582, label %583, label %359

583:                                              ; preds = %575, %570, %568
  br i1 %44, label %456, label %163
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21CategorizedWorkerPool33RunTaskInCategoryWithLockAcquiredEN2cc12TaskCategoryEPN4base16sequence_manager16TaskTimeObserverE(%"class.content::CategorizedWorkerPool"*, i16 zeroext, %"class.base::sequence_manager::TaskTimeObserver"*) local_unnamed_addr #0 align 2 {
  %4 = alloca [15 x i8], align 1
  %5 = alloca %"class.perfetto::EventContext", align 8
  %6 = alloca %"class.base::trace_event::TrackEventHandle", align 8
  %7 = alloca %"class.perfetto::EventContext", align 8
  %8 = alloca %"class.perfetto::EventContext", align 8
  %9 = alloca %"class.base::trace_event::TrackEventHandle", align 8
  %10 = alloca %"class.perfetto::EventContext", align 8
  %11 = alloca %"struct.cc::TaskGraphWorkQueue::PrioritizedTask", align 8
  %12 = alloca %"struct.cc::TaskGraphWorkQueue::PrioritizedTask", align 8
  %13 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 3
  %14 = bitcast %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"struct.cc::TaskGraphWorkQueue::PrioritizedTask", %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* %11, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.cc::TaskGraphWorkQueue::PrioritizedTask", %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* %11, i64 0, i32 1
  %17 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 4
  %18 = bitcast %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false)
  call void @_ZN2cc18TaskGraphWorkQueue16GetNextTaskToRunEt(%"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* nonnull sret %11, %"class.cc::TaskGraphWorkQueue"* %17, i16 zeroext %1) #10
  %19 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 127, i32 0), align 16
  %20 = and i8 %19, 25
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %92, label %22, !prof !4

22:                                               ; preds = %3
  %23 = bitcast %"class.perfetto::EventContext"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #10
  %24 = bitcast %"class.base::trace_event::TrackEventHandle"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #10
  %25 = getelementptr inbounds %"class.base::trace_event::TrackEventHandle", %"class.base::trace_event::TrackEventHandle"* %6, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false) #10
  %26 = load i64, i64* getelementptr inbounds (%"struct.perfetto::Track", %"struct.perfetto::Track"* @_ZN20trace_event_internal13kDefaultTrackE, i64 0, i32 0), align 8
  call void @_ZN20trace_event_internal16CreateTrackEventEcPKhN8perfetto12StaticStringEN4base9TimeTicksEmb(%"class.base::trace_event::TrackEventHandle"* nonnull sret %6, i8 signext 66, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 127, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12, i64 0, i64 0), i64 0, i64 %26, i1 zeroext false) #10
  %27 = load %"class.perfetto::protos::pbzero::TrackEvent"*, %"class.perfetto::protos::pbzero::TrackEvent"** %25, align 8
  %28 = icmp eq %"class.perfetto::protos::pbzero::TrackEvent"* %27, null
  br i1 %28, label %91, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.base::trace_event::TrackEventHandle", %"class.base::trace_event::TrackEventHandle"* %6, i64 0, i32 1
  %31 = bitcast %"struct.perfetto::internal::TrackEventIncrementalState"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %7, i64 0, i32 0, i32 0
  call void @_ZN9protozero17MessageHandleBaseC2EPNS_7MessageE(%"class.protozero::MessageHandleBase"* nonnull %33, %"class.protozero::Message"* null) #10
  %34 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %7, i64 0, i32 1
  store %"class.perfetto::protos::pbzero::TrackEvent"* %27, %"class.perfetto::protos::pbzero::TrackEvent"** %34, align 8
  %35 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %7, i64 0, i32 2
  %36 = bitcast %"struct.perfetto::internal::TrackEventIncrementalState"** %35 to i64*
  store i64 %32, i64* %36, align 8
  %37 = bitcast %"class.perfetto::EventContext"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #10
  %38 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %5, i64 0, i32 0, i32 0
  call void @_ZN9protozero17MessageHandleBaseC2EOS0_(%"class.protozero::MessageHandleBase"* nonnull %38, %"class.protozero::MessageHandleBase"* nonnull dereferenceable(8) %33) #10
  %39 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %5, i64 0, i32 1
  %40 = bitcast %"class.perfetto::protos::pbzero::TrackEvent"** %39 to i8*
  %41 = bitcast %"class.perfetto::protos::pbzero::TrackEvent"** %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 16, i1 false) #10
  %42 = bitcast %"class.perfetto::protos::pbzero::TrackEvent"** %39 to %"class.protozero::Message"**
  %43 = load %"class.protozero::Message"*, %"class.protozero::Message"** %42, align 8
  %44 = call %"class.protozero::Message"* @_ZN9protozero7Message26BeginNestedMessageInternalEj(%"class.protozero::Message"* %43, i32 1006) #10
  %45 = load %"class.cc::Task"*, %"class.cc::Task"** %15, align 8
  %46 = getelementptr inbounds %"class.cc::Task", %"class.cc::Task"* %45, i64 0, i32 3
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.protozero::Message", %"class.protozero::Message"* %44, i64 0, i32 2
  %49 = load %"class.protozero::Message"*, %"class.protozero::Message"** %48, align 8
  %50 = icmp eq %"class.protozero::Message"* %49, null
  br i1 %50, label %52, label %51

51:                                               ; preds = %29
  call void @_ZN9protozero7Message16EndNestedMessageEv(%"class.protozero::Message"* %44) #10
  br label %52

52:                                               ; preds = %51, %29
  %53 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %53) #10
  %54 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %54, i8 -86, i64 14, i1 false) #10
  store i8 8, i8* %53, align 1
  %55 = icmp ugt i64 %47, 127
  %56 = trunc i64 %47 to i8
  br i1 %55, label %57, label %68

57:                                               ; preds = %52, %57
  %58 = phi i8 [ %65, %57 ], [ %56, %52 ]
  %59 = phi i64 [ %63, %57 ], [ %47, %52 ]
  %60 = phi i8* [ %62, %57 ], [ %54, %52 ]
  %61 = or i8 %58, -128
  %62 = getelementptr inbounds i8, i8* %60, i64 1
  store i8 %61, i8* %60, align 1
  %63 = lshr i64 %59, 7
  %64 = icmp ugt i64 %59, 16383
  %65 = trunc i64 %63 to i8
  br i1 %64, label %57, label %66

66:                                               ; preds = %57
  %67 = trunc i64 %63 to i8
  br label %68

68:                                               ; preds = %66, %52
  %69 = phi i8* [ %54, %52 ], [ %62, %66 ]
  %70 = phi i8 [ %56, %52 ], [ %67, %66 ]
  store i8 %70, i8* %69, align 1
  %71 = getelementptr inbounds i8, i8* %69, i64 1
  %72 = ptrtoint i8* %71 to i64
  %73 = ptrtoint [15 x i8]* %4 to i64
  %74 = sub i64 %72, %73
  %75 = trunc i64 %74 to i32
  %76 = getelementptr inbounds %"class.protozero::Message", %"class.protozero::Message"* %44, i64 0, i32 0
  %77 = load %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter"** %76, align 8
  %78 = and i64 %74, 4294967295
  %79 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %77, i64 0, i32 2
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr inbounds i8, i8* %80, i64 %78
  %82 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %77, i64 0, i32 1, i32 1
  %83 = load i8*, i8** %82, align 8
  %84 = icmp ugt i8* %81, %83
  br i1 %84, label %86, label %85, !prof !16

85:                                               ; preds = %68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %80, i8* nonnull align 1 %53, i64 %78, i1 false) #10
  store i8* %81, i8** %79, align 8
  br label %87

86:                                               ; preds = %68
  call void @_ZN9protozero21ScatteredStreamWriter18WriteBytesSlowPathEPKhm(%"class.protozero::ScatteredStreamWriter"* %77, i8* nonnull %53, i64 %78) #10
  br label %87

87:                                               ; preds = %86, %85
  %88 = getelementptr inbounds %"class.protozero::Message", %"class.protozero::Message"* %44, i64 0, i32 4
  %89 = load i32, i32* %88, align 8
  %90 = add i32 %89, %75
  store i32 %90, i32* %88, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %53) #10
  call void @_ZN8perfetto12EventContextD1Ev(%"class.perfetto::EventContext"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #10
  call void @_ZN8perfetto12EventContextD1Ev(%"class.perfetto::EventContext"* nonnull %7) #10
  br label %91

91:                                               ; preds = %22, %87
  call void @_ZN4base11trace_event16TrackEventHandleD1Ev(%"class.base::trace_event::TrackEventHandle"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #10
  br label %92

92:                                               ; preds = %3, %91
  %93 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 4, i32 2, i32 0, i32 1, i32 0, i32 0
  %94 = bitcast %"class.std::__1::__tree_end_node"* %93 to %"class.std::__1::__tree_node.198"**
  %95 = load %"class.std::__1::__tree_node.198"*, %"class.std::__1::__tree_node.198"** %94, align 8
  %96 = icmp eq %"class.std::__1::__tree_node.198"* %95, null
  br i1 %96, label %252, label %97

97:                                               ; preds = %92, %97
  %98 = phi %"class.std::__1::__tree_node.198"* [ %100, %97 ], [ %95, %92 ]
  %99 = bitcast %"class.std::__1::__tree_node.198"* %98 to %"class.std::__1::__tree_node.198"**
  %100 = load %"class.std::__1::__tree_node.198"*, %"class.std::__1::__tree_node.198"** %99, align 8
  %101 = icmp eq %"class.std::__1::__tree_node.198"* %100, null
  br i1 %101, label %102, label %97

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.std::__1::__tree_node.198", %"class.std::__1::__tree_node.198"* %98, i64 0, i32 0, i32 0
  %104 = icmp eq %"class.std::__1::__tree_end_node"* %103, %93
  br i1 %104, label %218, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %103, i64 4
  %107 = bitcast %"class.std::__1::__tree_end_node"* %106 to i16*
  %108 = load i16, i16* %107, align 2
  %109 = icmp eq i16 %108, 0
  br i1 %109, label %110, label %218

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %103, i64 5
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to %"struct.cc::TaskGraphWorkQueue::TaskNamespace"***
  %113 = load %"struct.cc::TaskGraphWorkQueue::TaskNamespace"**, %"struct.cc::TaskGraphWorkQueue::TaskNamespace"*** %112, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %103, i64 6
  %115 = bitcast %"class.std::__1::__tree_end_node"* %114 to %"struct.cc::TaskGraphWorkQueue::TaskNamespace"***
  %116 = load %"struct.cc::TaskGraphWorkQueue::TaskNamespace"**, %"struct.cc::TaskGraphWorkQueue::TaskNamespace"*** %115, align 8
  %117 = icmp eq %"struct.cc::TaskGraphWorkQueue::TaskNamespace"** %113, %116
  br i1 %117, label %218, label %118

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %120 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %119, align 8
  %121 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 4, i32 1, i32 0, i32 1, i32 0, i32 0
  %122 = icmp eq %"class.std::__1::__tree_end_node"* %120, %121
  br i1 %122, label %248, label %123

123:                                              ; preds = %118, %188
  %124 = phi i64 [ %160, %188 ], [ 0, %118 ]
  %125 = phi %"class.std::__1::__tree_end_node"* [ %189, %188 ], [ %120, %118 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %125, i64 17
  %127 = bitcast %"class.std::__1::__tree_end_node"* %126 to %"struct.std::__1::pair"**
  %128 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %127, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %125, i64 18
  %130 = bitcast %"class.std::__1::__tree_end_node"* %129 to %"struct.std::__1::pair"**
  %131 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %130, align 8
  %132 = icmp eq %"struct.std::__1::pair"* %128, %131
  br i1 %132, label %159, label %133

133:                                              ; preds = %123
  %134 = ptrtoint %"struct.std::__1::pair"* %128 to i64
  %135 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %131, i64 -1
  %136 = ptrtoint %"struct.std::__1::pair"* %135 to i64
  %137 = sub i64 %136, %134
  %138 = lshr i64 %137, 4
  %139 = add nuw nsw i64 %138, 1
  %140 = and i64 %139, 3
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %154, label %142

142:                                              ; preds = %133, %142
  %143 = phi i64 [ %150, %142 ], [ %124, %133 ]
  %144 = phi %"struct.std::__1::pair"* [ %151, %142 ], [ %128, %133 ]
  %145 = phi i64 [ %152, %142 ], [ %140, %133 ]
  %146 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %144, i64 0, i32 0
  %147 = load i16, i16* %146, align 8
  %148 = icmp eq i16 %147, 0
  %149 = zext i1 %148 to i64
  %150 = add i64 %143, %149
  %151 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %144, i64 1
  %152 = add i64 %145, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %142, !llvm.loop !17

154:                                              ; preds = %142, %133
  %155 = phi i64 [ undef, %133 ], [ %150, %142 ]
  %156 = phi i64 [ %124, %133 ], [ %150, %142 ]
  %157 = phi %"struct.std::__1::pair"* [ %128, %133 ], [ %151, %142 ]
  %158 = icmp ult i64 %137, 48
  br i1 %158, label %159, label %191

159:                                              ; preds = %154, %191, %123
  %160 = phi i64 [ %124, %123 ], [ %155, %154 ], [ %213, %191 ]
  %161 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %125, i64 1, i32 0
  %162 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %161, align 8
  %163 = icmp eq %"class.std::__1::__tree_node_base"* %162, null
  br i1 %163, label %164, label %172

164:                                              ; preds = %159
  %165 = bitcast %"class.std::__1::__tree_end_node"* %125 to %"class.std::__1::__tree_node_base"*
  %166 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %125, i64 2
  %167 = bitcast %"class.std::__1::__tree_end_node"* %166 to %"class.std::__1::__tree_end_node"**
  %168 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %167, align 8
  %169 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %168, i64 0, i32 0
  %170 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %169, align 8
  %171 = icmp eq %"class.std::__1::__tree_node_base"* %170, %165
  br i1 %171, label %188, label %179

172:                                              ; preds = %159, %172
  %173 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %162, %159 ]
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %173, i64 0, i32 0, i32 0
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %177, label %172

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %173, i64 0, i32 0
  br label %188

179:                                              ; preds = %164, %179
  %180 = phi %"class.std::__1::__tree_end_node"** [ %183, %179 ], [ %167, %164 ]
  %181 = bitcast %"class.std::__1::__tree_end_node"** %180 to %"class.std::__1::__tree_node_base"**
  %182 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %181, align 8
  %183 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %182, i64 0, i32 2
  %184 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %183, align 8
  %185 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %184, i64 0, i32 0
  %186 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %185, align 8
  %187 = icmp eq %"class.std::__1::__tree_node_base"* %186, %182
  br i1 %187, label %188, label %179

188:                                              ; preds = %179, %177, %164
  %189 = phi %"class.std::__1::__tree_end_node"* [ %178, %177 ], [ %168, %164 ], [ %184, %179 ]
  %190 = icmp eq %"class.std::__1::__tree_end_node"* %189, %121
  br i1 %190, label %216, label %123

191:                                              ; preds = %154, %191
  %192 = phi i64 [ %213, %191 ], [ %156, %154 ]
  %193 = phi %"struct.std::__1::pair"* [ %214, %191 ], [ %157, %154 ]
  %194 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %193, i64 0, i32 0
  %195 = load i16, i16* %194, align 8
  %196 = icmp eq i16 %195, 0
  %197 = zext i1 %196 to i64
  %198 = add i64 %192, %197
  %199 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %193, i64 1, i32 0
  %200 = load i16, i16* %199, align 8
  %201 = icmp eq i16 %200, 0
  %202 = zext i1 %201 to i64
  %203 = add i64 %198, %202
  %204 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %193, i64 2, i32 0
  %205 = load i16, i16* %204, align 8
  %206 = icmp eq i16 %205, 0
  %207 = zext i1 %206 to i64
  %208 = add i64 %203, %207
  %209 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %193, i64 3, i32 0
  %210 = load i16, i16* %209, align 8
  %211 = icmp eq i16 %210, 0
  %212 = zext i1 %211 to i64
  %213 = add i64 %208, %212
  %214 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %193, i64 4
  %215 = icmp eq %"struct.std::__1::pair"* %214, %131
  br i1 %215, label %159, label %191

216:                                              ; preds = %188
  %217 = icmp eq i64 %160, 0
  br i1 %217, label %248, label %218

218:                                              ; preds = %102, %216, %110, %105
  br label %219

219:                                              ; preds = %218, %219
  %220 = phi %"class.std::__1::__tree_end_node"* [ %230, %219 ], [ %93, %218 ]
  %221 = phi %"class.std::__1::__tree_node.198"* [ %231, %219 ], [ %95, %218 ]
  %222 = getelementptr inbounds %"class.std::__1::__tree_node.198", %"class.std::__1::__tree_node.198"* %221, i64 0, i32 1, i32 0, i32 0
  %223 = load i16, i16* %222, align 2
  %224 = icmp eq i16 %223, 0
  %225 = getelementptr inbounds %"class.std::__1::__tree_node.198", %"class.std::__1::__tree_node.198"* %221, i64 0, i32 0, i32 1
  %226 = bitcast %"class.std::__1::__tree_node_base"** %225 to %"class.std::__1::__tree_node.198"**
  %227 = getelementptr inbounds %"class.std::__1::__tree_node.198", %"class.std::__1::__tree_node.198"* %221, i64 0, i32 0, i32 0
  %228 = bitcast %"class.std::__1::__tree_node.198"* %221 to %"class.std::__1::__tree_node.198"**
  %229 = select i1 %224, %"class.std::__1::__tree_node.198"** %226, %"class.std::__1::__tree_node.198"** %228
  %230 = select i1 %224, %"class.std::__1::__tree_end_node"* %220, %"class.std::__1::__tree_end_node"* %227
  %231 = load %"class.std::__1::__tree_node.198"*, %"class.std::__1::__tree_node.198"** %229, align 8
  %232 = icmp eq %"class.std::__1::__tree_node.198"* %231, null
  br i1 %232, label %233, label %219

233:                                              ; preds = %219
  %234 = icmp eq %"class.std::__1::__tree_end_node"* %230, %93
  br i1 %234, label %252, label %235

235:                                              ; preds = %233
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %230, i64 4
  %237 = bitcast %"class.std::__1::__tree_end_node"* %236 to i16*
  %238 = load i16, i16* %237, align 2
  %239 = icmp ugt i16 %238, 1
  br i1 %239, label %252, label %240

240:                                              ; preds = %235
  %241 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %230, i64 5
  %242 = bitcast %"class.std::__1::__tree_end_node"* %241 to %"struct.cc::TaskGraphWorkQueue::TaskNamespace"***
  %243 = load %"struct.cc::TaskGraphWorkQueue::TaskNamespace"**, %"struct.cc::TaskGraphWorkQueue::TaskNamespace"*** %242, align 8
  %244 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %230, i64 6
  %245 = bitcast %"class.std::__1::__tree_end_node"* %244 to %"struct.cc::TaskGraphWorkQueue::TaskNamespace"***
  %246 = load %"struct.cc::TaskGraphWorkQueue::TaskNamespace"**, %"struct.cc::TaskGraphWorkQueue::TaskNamespace"*** %245, align 8
  %247 = icmp eq %"struct.cc::TaskGraphWorkQueue::TaskNamespace"** %243, %246
  br i1 %247, label %252, label %248

248:                                              ; preds = %240, %216, %118, %252
  %249 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 9
  br label %256

250:                                              ; preds = %254
  %251 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 10
  br label %256

252:                                              ; preds = %92, %240, %233, %235
  %253 = call zeroext i1 @_ZN7content21CategorizedWorkerPool40ShouldRunTaskForCategoryWithLockAcquiredEN2cc12TaskCategoryE(%"class.content::CategorizedWorkerPool"* %0, i16 zeroext 3) #10
  br i1 %253, label %248, label %254

254:                                              ; preds = %252
  %255 = call zeroext i1 @_ZN7content21CategorizedWorkerPool40ShouldRunTaskForCategoryWithLockAcquiredEN2cc12TaskCategoryE(%"class.content::CategorizedWorkerPool"* %0, i16 zeroext 2) #10
  br i1 %255, label %250, label %258

256:                                              ; preds = %250, %248
  %257 = phi %"class.base::ConditionVariable"* [ %249, %248 ], [ %251, %250 ]
  call void @_ZN4base17ConditionVariable6SignalEv(%"class.base::ConditionVariable"* %257) #10
  br label %258

258:                                              ; preds = %256, %254
  %259 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %13, i64 0, i32 0, i32 0
  %260 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %259) #10
  %261 = icmp eq %"class.base::sequence_manager::TaskTimeObserver"* %2, null
  br i1 %261, label %277, label %262

262:                                              ; preds = %258
  %263 = call i64 @_ZN4base9TimeTicks3NowEv() #10
  %264 = bitcast %"class.base::sequence_manager::TaskTimeObserver"* %2 to void (%"class.base::sequence_manager::TaskTimeObserver"*, i64)***
  %265 = load void (%"class.base::sequence_manager::TaskTimeObserver"*, i64)**, void (%"class.base::sequence_manager::TaskTimeObserver"*, i64)*** %264, align 8
  %266 = getelementptr inbounds void (%"class.base::sequence_manager::TaskTimeObserver"*, i64)*, void (%"class.base::sequence_manager::TaskTimeObserver"*, i64)** %265, i64 2
  %267 = load void (%"class.base::sequence_manager::TaskTimeObserver"*, i64)*, void (%"class.base::sequence_manager::TaskTimeObserver"*, i64)** %266, align 8
  call void %267(%"class.base::sequence_manager::TaskTimeObserver"* nonnull %2, i64 %263) #10
  %268 = load %"class.cc::Task"*, %"class.cc::Task"** %15, align 8
  %269 = bitcast %"class.cc::Task"* %268 to void (%"class.cc::Task"*)***
  %270 = load void (%"class.cc::Task"*)**, void (%"class.cc::Task"*)*** %269, align 8
  %271 = load void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %270, align 8
  call void %271(%"class.cc::Task"* %268) #10
  %272 = call i64 @_ZN4base9TimeTicks3NowEv() #10
  %273 = bitcast %"class.base::sequence_manager::TaskTimeObserver"* %2 to void (%"class.base::sequence_manager::TaskTimeObserver"*, i64, i64)***
  %274 = load void (%"class.base::sequence_manager::TaskTimeObserver"*, i64, i64)**, void (%"class.base::sequence_manager::TaskTimeObserver"*, i64, i64)*** %273, align 8
  %275 = getelementptr inbounds void (%"class.base::sequence_manager::TaskTimeObserver"*, i64, i64)*, void (%"class.base::sequence_manager::TaskTimeObserver"*, i64, i64)** %274, i64 3
  %276 = load void (%"class.base::sequence_manager::TaskTimeObserver"*, i64, i64)*, void (%"class.base::sequence_manager::TaskTimeObserver"*, i64, i64)** %275, align 8
  call void %276(%"class.base::sequence_manager::TaskTimeObserver"* nonnull %2, i64 %263, i64 %272) #10
  br label %282

277:                                              ; preds = %258
  %278 = load %"class.cc::Task"*, %"class.cc::Task"** %15, align 8
  %279 = bitcast %"class.cc::Task"* %278 to void (%"class.cc::Task"*)***
  %280 = load void (%"class.cc::Task"*)**, void (%"class.cc::Task"*)*** %279, align 8
  %281 = load void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %280, align 8
  call void %281(%"class.cc::Task"* %278) #10
  br label %282

282:                                              ; preds = %277, %262
  %283 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %259) #10
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %287, label %285, !prof !4

285:                                              ; preds = %282
  %286 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %13, i64 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %286) #10
  br label %287

287:                                              ; preds = %282, %285
  %288 = load %"struct.cc::TaskGraphWorkQueue::TaskNamespace"*, %"struct.cc::TaskGraphWorkQueue::TaskNamespace"** %16, align 8
  call void @_ZN2cc18TaskGraphWorkQueue15PrioritizedTaskC1EOS1_(%"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* nonnull %12, %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* nonnull dereferenceable(24) %11) #10
  call void @_ZN2cc18TaskGraphWorkQueue12CompleteTaskENS0_15PrioritizedTaskE(%"class.cc::TaskGraphWorkQueue"* %17, %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* nonnull %12) #10
  call void @_ZN2cc18TaskGraphWorkQueue15PrioritizedTaskD1Ev(%"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* nonnull %12) #10
  %289 = getelementptr inbounds %"struct.cc::TaskGraphWorkQueue::TaskNamespace", %"struct.cc::TaskGraphWorkQueue::TaskNamespace"* %288, i64 0, i32 3, i32 0, i32 0
  %290 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %289, align 8
  %291 = getelementptr inbounds %"struct.cc::TaskGraphWorkQueue::TaskNamespace", %"struct.cc::TaskGraphWorkQueue::TaskNamespace"* %288, i64 0, i32 3, i32 0, i32 1
  %292 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %291, align 8
  %293 = icmp eq %"struct.std::__1::pair"* %290, %292
  br i1 %293, label %294, label %344

294:                                              ; preds = %287
  %295 = getelementptr inbounds %"struct.cc::TaskGraphWorkQueue::TaskNamespace", %"struct.cc::TaskGraphWorkQueue::TaskNamespace"* %288, i64 0, i32 1, i32 0, i32 0
  %296 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %295, align 8
  %297 = getelementptr inbounds %"struct.cc::TaskGraphWorkQueue::TaskNamespace", %"struct.cc::TaskGraphWorkQueue::TaskNamespace"* %288, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %298 = icmp eq %"class.std::__1::__tree_end_node"* %296, %297
  br i1 %298, label %339, label %299

299:                                              ; preds = %294, %336
  %300 = phi %"class.std::__1::__tree_end_node"* [ %337, %336 ], [ %296, %294 ]
  %301 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %300, i64 5
  %302 = bitcast %"class.std::__1::__tree_end_node"* %301 to %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"**
  %303 = load %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"*, %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"** %302, align 8
  %304 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %300, i64 6
  %305 = bitcast %"class.std::__1::__tree_end_node"* %304 to %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"**
  %306 = load %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"*, %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"** %305, align 8
  %307 = icmp eq %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* %303, %306
  br i1 %307, label %308, label %339

308:                                              ; preds = %299
  %309 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %300, i64 1, i32 0
  %310 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %309, align 8
  %311 = icmp eq %"class.std::__1::__tree_node_base"* %310, null
  br i1 %311, label %312, label %320

312:                                              ; preds = %308
  %313 = bitcast %"class.std::__1::__tree_end_node"* %300 to %"class.std::__1::__tree_node_base"*
  %314 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %300, i64 2
  %315 = bitcast %"class.std::__1::__tree_end_node"* %314 to %"class.std::__1::__tree_end_node"**
  %316 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %315, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %316, i64 0, i32 0
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %317, align 8
  %319 = icmp eq %"class.std::__1::__tree_node_base"* %318, %313
  br i1 %319, label %336, label %327

320:                                              ; preds = %308, %320
  %321 = phi %"class.std::__1::__tree_node_base"* [ %323, %320 ], [ %310, %308 ]
  %322 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %321, i64 0, i32 0, i32 0
  %323 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %322, align 8
  %324 = icmp eq %"class.std::__1::__tree_node_base"* %323, null
  br i1 %324, label %325, label %320

325:                                              ; preds = %320
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %321, i64 0, i32 0
  br label %336

327:                                              ; preds = %312, %327
  %328 = phi %"class.std::__1::__tree_end_node"** [ %331, %327 ], [ %315, %312 ]
  %329 = bitcast %"class.std::__1::__tree_end_node"** %328 to %"class.std::__1::__tree_node_base"**
  %330 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %329, align 8
  %331 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %330, i64 0, i32 2
  %332 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %331, align 8
  %333 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %332, i64 0, i32 0
  %334 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %333, align 8
  %335 = icmp eq %"class.std::__1::__tree_node_base"* %334, %330
  br i1 %335, label %336, label %327

336:                                              ; preds = %327, %325, %312
  %337 = phi %"class.std::__1::__tree_end_node"* [ %326, %325 ], [ %316, %312 ], [ %332, %327 ]
  %338 = icmp eq %"class.std::__1::__tree_end_node"* %337, %297
  br i1 %338, label %342, label %299

339:                                              ; preds = %299, %294
  %340 = phi %"class.std::__1::__tree_end_node"* [ %296, %294 ], [ %300, %299 ]
  %341 = icmp eq %"class.std::__1::__tree_end_node"* %340, %297
  br i1 %341, label %342, label %344

342:                                              ; preds = %336, %339
  %343 = getelementptr inbounds %"class.content::CategorizedWorkerPool", %"class.content::CategorizedWorkerPool"* %0, i64 0, i32 11
  call void @_ZN4base17ConditionVariable6SignalEv(%"class.base::ConditionVariable"* %343) #10
  br label %344

344:                                              ; preds = %287, %342, %339
  %345 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 127, i32 0), align 16
  %346 = and i8 %345, 25
  %347 = icmp eq i8 %346, 0
  br i1 %347, label %369, label %348, !prof !4

348:                                              ; preds = %344
  %349 = bitcast %"class.perfetto::EventContext"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %349) #10
  %350 = bitcast %"class.base::trace_event::TrackEventHandle"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %350) #10
  %351 = getelementptr inbounds %"class.base::trace_event::TrackEventHandle", %"class.base::trace_event::TrackEventHandle"* %9, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %350, i8 -86, i64 24, i1 false) #10
  %352 = load i64, i64* getelementptr inbounds (%"struct.perfetto::Track", %"struct.perfetto::Track"* @_ZN20trace_event_internal13kDefaultTrackE, i64 0, i32 0), align 8
  call void @_ZN20trace_event_internal16CreateTrackEventEcPKhN8perfetto12StaticStringEN4base9TimeTicksEmb(%"class.base::trace_event::TrackEventHandle"* nonnull sret %9, i8 signext 69, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 127, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13, i64 0, i64 0), i64 0, i64 %352, i1 zeroext false) #10
  %353 = load %"class.perfetto::protos::pbzero::TrackEvent"*, %"class.perfetto::protos::pbzero::TrackEvent"** %351, align 8
  %354 = icmp eq %"class.perfetto::protos::pbzero::TrackEvent"* %353, null
  br i1 %354, label %368, label %355

355:                                              ; preds = %348
  %356 = getelementptr inbounds %"class.base::trace_event::TrackEventHandle", %"class.base::trace_event::TrackEventHandle"* %9, i64 0, i32 1
  %357 = bitcast %"struct.perfetto::internal::TrackEventIncrementalState"** %356 to i64*
  %358 = load i64, i64* %357, align 8
  %359 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %10, i64 0, i32 0, i32 0
  call void @_ZN9protozero17MessageHandleBaseC2EPNS_7MessageE(%"class.protozero::MessageHandleBase"* nonnull %359, %"class.protozero::Message"* null) #10
  %360 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %10, i64 0, i32 1
  store %"class.perfetto::protos::pbzero::TrackEvent"* %353, %"class.perfetto::protos::pbzero::TrackEvent"** %360, align 8
  %361 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %10, i64 0, i32 2
  %362 = bitcast %"struct.perfetto::internal::TrackEventIncrementalState"** %361 to i64*
  store i64 %358, i64* %362, align 8
  %363 = bitcast %"class.perfetto::EventContext"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %363) #10
  %364 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %8, i64 0, i32 0, i32 0
  call void @_ZN9protozero17MessageHandleBaseC2EOS0_(%"class.protozero::MessageHandleBase"* nonnull %364, %"class.protozero::MessageHandleBase"* nonnull dereferenceable(8) %359) #10
  %365 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %8, i64 0, i32 1
  %366 = bitcast %"class.perfetto::protos::pbzero::TrackEvent"** %365 to i8*
  %367 = bitcast %"class.perfetto::protos::pbzero::TrackEvent"** %360 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %366, i8* align 8 %367, i64 16, i1 false) #10
  call void @_ZN8perfetto12EventContextD1Ev(%"class.perfetto::EventContext"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %363) #10
  call void @_ZN8perfetto12EventContextD1Ev(%"class.perfetto::EventContext"* nonnull %10) #10
  br label %368

368:                                              ; preds = %348, %355
  call void @_ZN4base11trace_event16TrackEventHandleD1Ev(%"class.base::trace_event::TrackEventHandle"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %350) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %349) #10
  br label %369

369:                                              ; preds = %344, %368
  call void @_ZN2cc18TaskGraphWorkQueue15PrioritizedTaskD1Ev(%"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #10
  ret void
}

declare void @_ZN2cc18TaskGraphWorkQueue16GetNextTaskToRunEt(%"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* sret, %"class.cc::TaskGraphWorkQueue"*, i16 zeroext) local_unnamed_addr #1

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

declare void @_ZN2cc18TaskGraphWorkQueue12CompleteTaskENS0_15PrioritizedTaskE(%"class.cc::TaskGraphWorkQueue"*, %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"*) local_unnamed_addr #1

declare void @_ZN2cc18TaskGraphWorkQueue15PrioritizedTaskC1EOS1_(%"struct.cc::TaskGraphWorkQueue::PrioritizedTask"*, %"struct.cc::TaskGraphWorkQueue::PrioritizedTask"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc18TaskGraphWorkQueue15PrioritizedTaskD1Ev(%"struct.cc::TaskGraphWorkQueue::PrioritizedTask"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21CategorizedWorkerPool11ClosureTaskC2EN4base12OnceCallbackIFvvEEE(%"class.content::CategorizedWorkerPool::ClosureTask"*, %"class.base::OnceCallback.75"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::CategorizedWorkerPool::ClosureTask", %"class.content::CategorizedWorkerPool::ClosureTask"* %0, i64 0, i32 0
  tail call void @_ZN2cc4TaskC2Ev(%"class.cc::Task"* %3) #10
  %4 = getelementptr inbounds %"class.content::CategorizedWorkerPool::ClosureTask", %"class.content::CategorizedWorkerPool::ClosureTask"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN7content21CategorizedWorkerPool11ClosureTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.content::CategorizedWorkerPool::ClosureTask", %"class.content::CategorizedWorkerPool::ClosureTask"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.base::OnceCallback.75", %"class.base::OnceCallback.75"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback.75"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback.75"* %5 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  ret void
}

declare void @_ZN2cc4TaskC2Ev(%"class.cc::Task"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21CategorizedWorkerPool11ClosureTask17RunOnWorkerThreadEv(%"class.content::CategorizedWorkerPool::ClosureTask"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.75", align 8
  %3 = getelementptr inbounds %"class.content::CategorizedWorkerPool::ClosureTask", %"class.content::CategorizedWorkerPool::ClosureTask"* %0, i64 0, i32 1
  %4 = bitcast %"class.base::OnceCallback.75"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.base::OnceCallback.75", %"class.base::OnceCallback.75"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.base::OnceCallback.75"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.base::OnceCallback.75"* %2 to i64*
  store i64 %7, i64* %8, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  %9 = getelementptr inbounds %"class.base::OnceCallback.75", %"class.base::OnceCallback.75"* %2, i64 0, i32 0
  %10 = inttoptr i64 %7 to %"class.base::internal::BindStateBase"*
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %10, i64 0, i32 1
  %12 = bitcast void ()** %11 to void (%"class.base::internal::BindStateBase"*)**
  %13 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %12, align 8
  tail call void %13(%"class.base::internal::BindStateBase"* %10) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21CategorizedWorkerPool11ClosureTaskD2Ev(%"class.content::CategorizedWorkerPool::ClosureTask"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::CategorizedWorkerPool::ClosureTask", %"class.content::CategorizedWorkerPool::ClosureTask"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN7content21CategorizedWorkerPool11ClosureTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::CategorizedWorkerPool::ClosureTask", %"class.content::CategorizedWorkerPool::ClosureTask"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #10
  %4 = getelementptr inbounds %"class.content::CategorizedWorkerPool::ClosureTask", %"class.content::CategorizedWorkerPool::ClosureTask"* %0, i64 0, i32 0
  tail call void @_ZN2cc4TaskD2Ev(%"class.cc::Task"* %4) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2cc4TaskD2Ev(%"class.cc::Task"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21CategorizedWorkerPool11ClosureTaskD0Ev(%"class.content::CategorizedWorkerPool::ClosureTask"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::CategorizedWorkerPool::ClosureTask", %"class.content::CategorizedWorkerPool::ClosureTask"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN7content21CategorizedWorkerPool11ClosureTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::CategorizedWorkerPool::ClosureTask", %"class.content::CategorizedWorkerPool::ClosureTask"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #10
  %4 = getelementptr inbounds %"class.content::CategorizedWorkerPool::ClosureTask", %"class.content::CategorizedWorkerPool::ClosureTask"* %0, i64 0, i32 0
  tail call void @_ZN2cc4TaskD2Ev(%"class.cc::Task"* %4) #10
  %5 = bitcast %"class.content::CategorizedWorkerPool::ClosureTask"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #11
  ret void
}

declare void @_ZNK4base10TaskRunner10OnDestructEv(%"class.base::TaskRunner"*) unnamed_addr #1

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN7content21CategorizedWorkerPool40CategorizedWorkerPoolSequencedTaskRunner15PostDelayedTaskERKN4base8LocationENS2_12OnceCallbackIFvvEEENS2_9TimeDeltaE(%"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.75"*, i64) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.base::OnceCallback.75", align 8
  %6 = getelementptr inbounds %"class.base::OnceCallback.75", %"class.base::OnceCallback.75"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback.75"* %2 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback.75"* %5 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %10 = bitcast %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0 to i1 (%"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.75"*, i64)***
  %11 = load i1 (%"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.75"*, i64)**, i1 (%"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.75"*, i64)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.75"*, i64)*, i1 (%"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.75"*, i64)** %11, i64 4
  %13 = load i1 (%"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.75"*, i64)*, i1 (%"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.75"*, i64)** %12, align 8
  %14 = call zeroext i1 %13(%"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0, %"class.base::Location"* dereferenceable(32) %1, %"class.base::OnceCallback.75"* nonnull %5, i64 %3) #10
  %15 = getelementptr inbounds %"class.base::OnceCallback.75", %"class.base::OnceCallback.75"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #10
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content21CategorizedWorkerPool40CategorizedWorkerPoolSequencedTaskRunnerD2Ev(%"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.base::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope", align 1
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.cc::NamespaceToken", align 4
  %5 = alloca %"class.cc::NamespaceToken", align 4
  %6 = getelementptr inbounds %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner", %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7content21CategorizedWorkerPool40CategorizedWorkerPoolSequencedTaskRunnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.base::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope", %"class.base::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope"* %2, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #10
  store i8 -86, i8* %7, align 1
  %8 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.3, i64 0, i64 0), i32 157) #10
  call void @_ZN4base49ScopedAllowBaseSyncPrimitivesOutsideBlockingScopeC1ERKNS_8LocationE(%"class.base::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope"* nonnull %2, %"class.base::Location"* nonnull dereferenceable(32) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner", %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0, i64 0, i32 2
  %10 = load %"class.cc::TaskGraphRunner"*, %"class.cc::TaskGraphRunner"** %9, align 8
  %11 = getelementptr inbounds %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner", %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0, i64 0, i32 3, i32 0
  %12 = getelementptr inbounds %"class.cc::NamespaceToken", %"class.cc::NamespaceToken"* %4, i64 0, i32 0
  %13 = load i32, i32* %11, align 8
  store i32 %13, i32* %12, align 4
  %14 = bitcast %"class.cc::TaskGraphRunner"* %10 to void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*)***
  %15 = load void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*)**, void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*)*, void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*)** %15, i64 4
  %17 = load void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*)*, void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*)** %16, align 8
  call void %17(%"class.cc::TaskGraphRunner"* %10, %"class.cc::NamespaceToken"* nonnull %4) #10
  call void @_ZN4base49ScopedAllowBaseSyncPrimitivesOutsideBlockingScopeD1Ev(%"class.base::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #10
  %18 = load %"class.cc::TaskGraphRunner"*, %"class.cc::TaskGraphRunner"** %9, align 8
  %19 = getelementptr inbounds %"class.cc::NamespaceToken", %"class.cc::NamespaceToken"* %5, i64 0, i32 0
  %20 = load i32, i32* %11, align 8
  store i32 %20, i32* %19, align 4
  %21 = getelementptr inbounds %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner", %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0, i64 0, i32 6
  %22 = bitcast %"class.cc::TaskGraphRunner"* %18 to void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.32"*)***
  %23 = load void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.32"*)**, void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.32"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.32"*)*, void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.32"*)** %23, i64 5
  %25 = load void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.32"*)*, void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.32"*)** %24, align 8
  call void %25(%"class.cc::TaskGraphRunner"* %18, %"class.cc::NamespaceToken"* nonnull %5, %"class.std::__1::vector.32"* %21) #10
  %26 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %21, i64 0, i32 0, i32 0
  %27 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %26, align 8
  %28 = icmp eq %class.scoped_refptr.34* %27, null
  br i1 %28, label %59, label %29

29:                                               ; preds = %1
  %30 = bitcast %class.scoped_refptr.34* %27 to i8*
  %31 = getelementptr inbounds %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner", %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0, i64 0, i32 6, i32 0, i32 1
  %32 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %31, align 8
  %33 = icmp eq %class.scoped_refptr.34* %32, %27
  br i1 %33, label %57, label %34

34:                                               ; preds = %29, %52
  %35 = phi %class.scoped_refptr.34* [ %36, %52 ], [ %32, %29 ]
  %36 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %35, i64 -1
  %37 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %36, i64 0, i32 0
  %38 = load %"class.cc::Task"*, %"class.cc::Task"** %37, align 8
  %39 = icmp eq %"class.cc::Task"* %38, null
  br i1 %39, label %52, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.cc::Task", %"class.cc::Task"* %38, i64 0, i32 1
  %42 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw sub i32* %42, i32 1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %52

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %41, i64 -2
  %47 = bitcast %"class.base::RefCountedThreadSafe.35"* %46 to %"class.cc::Task"*
  %48 = bitcast %"class.base::RefCountedThreadSafe.35"* %46 to void (%"class.cc::Task"*)***
  %49 = load void (%"class.cc::Task"*)**, void (%"class.cc::Task"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %49, i64 2
  %51 = load void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %50, align 8
  call void %51(%"class.cc::Task"* nonnull %47) #10
  br label %52

52:                                               ; preds = %45, %40, %34
  %53 = icmp eq %class.scoped_refptr.34* %36, %27
  br i1 %53, label %54, label %34

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector.32"* %21 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %29
  %58 = phi i8* [ %56, %54 ], [ %30, %29 ]
  store %class.scoped_refptr.34* %27, %class.scoped_refptr.34** %31, align 8
  call void @_ZdlPv(i8* %58) #11
  br label %59

59:                                               ; preds = %1, %57
  %60 = getelementptr inbounds %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner", %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0, i64 0, i32 5
  call void @_ZN2cc9TaskGraphD1Ev(%"struct.cc::TaskGraph"* %60) #10
  %61 = getelementptr inbounds %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner", %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0, i64 0, i32 4
  %62 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %61, i64 0, i32 0, i32 0
  %63 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %62, align 8
  %64 = icmp eq %class.scoped_refptr.34* %63, null
  br i1 %64, label %95, label %65

65:                                               ; preds = %59
  %66 = bitcast %class.scoped_refptr.34* %63 to i8*
  %67 = getelementptr inbounds %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner", %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0, i64 0, i32 4, i32 0, i32 1
  %68 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %67, align 8
  %69 = icmp eq %class.scoped_refptr.34* %68, %63
  br i1 %69, label %93, label %70

70:                                               ; preds = %65, %88
  %71 = phi %class.scoped_refptr.34* [ %72, %88 ], [ %68, %65 ]
  %72 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %71, i64 -1
  %73 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %72, i64 0, i32 0
  %74 = load %"class.cc::Task"*, %"class.cc::Task"** %73, align 8
  %75 = icmp eq %"class.cc::Task"* %74, null
  br i1 %75, label %88, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.cc::Task", %"class.cc::Task"* %74, i64 0, i32 1
  %78 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw sub i32* %78, i32 1 acq_rel
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %88

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %77, i64 -2
  %83 = bitcast %"class.base::RefCountedThreadSafe.35"* %82 to %"class.cc::Task"*
  %84 = bitcast %"class.base::RefCountedThreadSafe.35"* %82 to void (%"class.cc::Task"*)***
  %85 = load void (%"class.cc::Task"*)**, void (%"class.cc::Task"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %85, i64 2
  %87 = load void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %86, align 8
  call void %87(%"class.cc::Task"* nonnull %83) #10
  br label %88

88:                                               ; preds = %81, %76, %70
  %89 = icmp eq %class.scoped_refptr.34* %72, %63
  br i1 %89, label %90, label %70

90:                                               ; preds = %88
  %91 = bitcast %"class.std::__1::vector.32"* %61 to i8**
  %92 = load i8*, i8** %91, align 8
  br label %93

93:                                               ; preds = %90, %65
  %94 = phi i8* [ %92, %90 ], [ %66, %65 ]
  store %class.scoped_refptr.34* %63, %class.scoped_refptr.34** %67, align 8
  call void @_ZdlPv(i8* %94) #11
  br label %95

95:                                               ; preds = %59, %93
  %96 = getelementptr inbounds %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner", %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0, i64 0, i32 1, i32 0
  call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %96) #10
  %97 = bitcast %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0 to %"class.base::TaskRunner"*
  call void @_ZN4base10TaskRunnerD2Ev(%"class.base::TaskRunner"* %97) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content21CategorizedWorkerPool40CategorizedWorkerPoolSequencedTaskRunnerD0Ev(%"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN7content21CategorizedWorkerPool40CategorizedWorkerPoolSequencedTaskRunnerD2Ev(%"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0) #10
  %2 = bitcast %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN7content21CategorizedWorkerPool40CategorizedWorkerPoolSequencedTaskRunner26PostNonNestableDelayedTaskERKN4base8LocationENS2_12OnceCallbackIFvvEEENS2_9TimeDeltaE(%"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.75"*, i64) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.base::OnceCallback.75", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.cc::NamespaceToken", align 4
  %8 = alloca %class.scoped_refptr.34, align 8
  %9 = alloca %"struct.cc::TaskGraph::Node", align 8
  %10 = alloca %"class.cc::NamespaceToken", align 4
  %11 = getelementptr inbounds %"class.base::OnceCallback.75", %"class.base::OnceCallback.75"* %2, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %11, align 8
  %13 = icmp eq %"class.base::internal::BindStateBase"* %12, null
  br i1 %13, label %14, label %17

14:                                               ; preds = %4
  %15 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.3, i64 0, i64 0), i32 119, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)) #10
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  br label %17

17:                                               ; preds = %4, %14
  %18 = getelementptr inbounds %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner", %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %18, i64 0, i32 0, i32 0
  %20 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %19) #10
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %24, label %22, !prof !4

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %18, i64 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %23) #10
  br label %24

24:                                               ; preds = %17, %22
  %25 = getelementptr inbounds %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner", %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0, i64 0, i32 2
  %26 = load %"class.cc::TaskGraphRunner"*, %"class.cc::TaskGraphRunner"** %25, align 8
  %27 = getelementptr inbounds %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner", %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0, i64 0, i32 3, i32 0
  %28 = getelementptr inbounds %"class.cc::NamespaceToken", %"class.cc::NamespaceToken"* %7, i64 0, i32 0
  %29 = load i32, i32* %27, align 8
  store i32 %29, i32* %28, align 4
  %30 = getelementptr inbounds %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner", %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0, i64 0, i32 6
  %31 = bitcast %"class.cc::TaskGraphRunner"* %26 to void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.32"*)***
  %32 = load void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.32"*)**, void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.32"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.32"*)*, void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.32"*)** %32, i64 5
  %34 = load void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.32"*)*, void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"class.std::__1::vector.32"*)** %33, align 8
  call void %34(%"class.cc::TaskGraphRunner"* %26, %"class.cc::NamespaceToken"* nonnull %7, %"class.std::__1::vector.32"* %30) #10
  %35 = getelementptr inbounds %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner", %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0, i64 0, i32 4
  %36 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %35, i64 0, i32 0, i32 0
  %37 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %36, align 8
  %38 = getelementptr inbounds %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner", %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0, i64 0, i32 6, i32 0, i32 1
  %39 = bitcast %class.scoped_refptr.34** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector.32"* %30 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 3
  %45 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %37, i64 %44
  %46 = icmp eq i64 %43, 0
  br i1 %46, label %104, label %47

47:                                               ; preds = %24
  %48 = getelementptr inbounds %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner", %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0, i64 0, i32 4, i32 0, i32 1
  %49 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %48, align 8
  %50 = icmp eq %class.scoped_refptr.34* %49, %45
  br i1 %50, label %79, label %51

51:                                               ; preds = %47, %73
  %52 = phi %class.scoped_refptr.34* [ %75, %73 ], [ %37, %47 ]
  %53 = phi %class.scoped_refptr.34* [ %74, %73 ], [ %45, %47 ]
  %54 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %53, i64 0, i32 0
  %55 = bitcast %class.scoped_refptr.34* %53 to i64*
  %56 = load i64, i64* %55, align 8
  store %"class.cc::Task"* null, %"class.cc::Task"** %54, align 8
  %57 = bitcast %class.scoped_refptr.34* %52 to i64*
  %58 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %52, i64 0, i32 0
  %59 = load %"class.cc::Task"*, %"class.cc::Task"** %58, align 8
  store i64 %56, i64* %57, align 8
  %60 = icmp eq %"class.cc::Task"* %59, null
  br i1 %60, label %73, label %61

61:                                               ; preds = %51
  %62 = getelementptr inbounds %"class.cc::Task", %"class.cc::Task"* %59, i64 0, i32 1
  %63 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw sub i32* %63, i32 1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %73

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %62, i64 -2
  %68 = bitcast %"class.base::RefCountedThreadSafe.35"* %67 to %"class.cc::Task"*
  %69 = bitcast %"class.base::RefCountedThreadSafe.35"* %67 to void (%"class.cc::Task"*)***
  %70 = load void (%"class.cc::Task"*)**, void (%"class.cc::Task"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %70, i64 2
  %72 = load void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %71, align 8
  call void %72(%"class.cc::Task"* nonnull %68) #10
  br label %73

73:                                               ; preds = %66, %61, %51
  %74 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %53, i64 1
  %75 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %52, i64 1
  %76 = icmp eq %class.scoped_refptr.34* %74, %49
  br i1 %76, label %77, label %51

77:                                               ; preds = %73
  %78 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %48, align 8
  br label %79

79:                                               ; preds = %77, %47
  %80 = phi %class.scoped_refptr.34* [ %45, %47 ], [ %78, %77 ]
  %81 = phi %class.scoped_refptr.34* [ %37, %47 ], [ %75, %77 ]
  %82 = icmp eq %class.scoped_refptr.34* %80, %81
  br i1 %82, label %103, label %83

83:                                               ; preds = %79, %101
  %84 = phi %class.scoped_refptr.34* [ %85, %101 ], [ %80, %79 ]
  %85 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %84, i64 -1
  %86 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %85, i64 0, i32 0
  %87 = load %"class.cc::Task"*, %"class.cc::Task"** %86, align 8
  %88 = icmp eq %"class.cc::Task"* %87, null
  br i1 %88, label %101, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.cc::Task", %"class.cc::Task"* %87, i64 0, i32 1
  %91 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = atomicrmw sub i32* %91, i32 1 acq_rel
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %101

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %90, i64 -2
  %96 = bitcast %"class.base::RefCountedThreadSafe.35"* %95 to %"class.cc::Task"*
  %97 = bitcast %"class.base::RefCountedThreadSafe.35"* %95 to void (%"class.cc::Task"*)***
  %98 = load void (%"class.cc::Task"*)**, void (%"class.cc::Task"*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %98, i64 2
  %100 = load void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %99, align 8
  call void %100(%"class.cc::Task"* nonnull %96) #10
  br label %101

101:                                              ; preds = %94, %89, %83
  %102 = icmp eq %class.scoped_refptr.34* %85, %81
  br i1 %102, label %103, label %83

103:                                              ; preds = %101, %79
  store %class.scoped_refptr.34* %81, %class.scoped_refptr.34** %48, align 8
  br label %104

104:                                              ; preds = %24, %103
  %105 = bitcast %class.scoped_refptr.34* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #10
  %106 = bitcast %"class.base::OnceCallback.75"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106)
  %107 = call i8* @_Znwm(i64 32) #11
  %108 = bitcast %"class.base::OnceCallback.75"* %2 to i64*
  %109 = load i64, i64* %108, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %110 = bitcast i8* %107 to %"class.cc::Task"*
  call void @_ZN2cc4TaskC2Ev(%"class.cc::Task"* nonnull %110) #10
  %111 = bitcast i8* %107 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN7content21CategorizedWorkerPool11ClosureTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %111, align 8
  %112 = getelementptr inbounds i8, i8* %107, i64 24
  %113 = getelementptr inbounds %"class.base::OnceCallback.75", %"class.base::OnceCallback.75"* %5, i64 0, i32 0, i32 0, i32 0
  %114 = bitcast i8* %112 to i64*
  store i64 %109, i64* %114, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %113, align 8
  %115 = getelementptr inbounds %"class.base::OnceCallback.75", %"class.base::OnceCallback.75"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %115) #10
  %116 = getelementptr inbounds i8, i8* %107, i64 8
  %117 = bitcast i8* %116 to i32*
  %118 = atomicrmw add i32* %117, i32 1 monotonic
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106)
  %119 = ptrtoint i8* %107 to i64
  %120 = bitcast %class.scoped_refptr.34* %8 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner", %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0, i64 0, i32 4, i32 0, i32 1
  %122 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %121, align 8
  %123 = getelementptr inbounds %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner", %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %124 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %123, align 8
  %125 = icmp ult %class.scoped_refptr.34* %122, %124
  br i1 %125, label %126, label %132

126:                                              ; preds = %104
  %127 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %8, i64 0, i32 0
  %128 = bitcast %class.scoped_refptr.34* %122 to i64*
  store i64 %119, i64* %128, align 8
  store %"class.cc::Task"* null, %"class.cc::Task"** %127, align 8
  %129 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %122, i64 1
  %130 = ptrtoint %class.scoped_refptr.34* %129 to i64
  %131 = bitcast %class.scoped_refptr.34** %121 to i64*
  store i64 %130, i64* %131, align 8
  br label %148

132:                                              ; preds = %104
  call void @_ZNSt3__16vectorI13scoped_refptrIN2cc4TaskEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.32"* %35, %class.scoped_refptr.34* nonnull dereferenceable(8) %8) #10
  %133 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %8, i64 0, i32 0
  %134 = load %"class.cc::Task"*, %"class.cc::Task"** %133, align 8
  %135 = icmp eq %"class.cc::Task"* %134, null
  br i1 %135, label %148, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.cc::Task", %"class.cc::Task"* %134, i64 0, i32 1
  %138 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %137, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = atomicrmw sub i32* %138, i32 1 acq_rel
  %140 = icmp eq i32 %139, 1
  br i1 %140, label %141, label %148

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %137, i64 -2
  %143 = bitcast %"class.base::RefCountedThreadSafe.35"* %142 to %"class.cc::Task"*
  %144 = bitcast %"class.base::RefCountedThreadSafe.35"* %142 to void (%"class.cc::Task"*)***
  %145 = load void (%"class.cc::Task"*)**, void (%"class.cc::Task"*)*** %144, align 8
  %146 = getelementptr inbounds void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %145, i64 2
  %147 = load void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %146, align 8
  call void %147(%"class.cc::Task"* nonnull %143) #10
  br label %148

148:                                              ; preds = %126, %141, %136, %132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #10
  %149 = getelementptr inbounds %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner", %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0, i64 0, i32 5
  call void @_ZN2cc9TaskGraph5ResetEv(%"struct.cc::TaskGraph"* %149) #10
  %150 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %36, align 8
  %151 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %121, align 8
  %152 = icmp eq %class.scoped_refptr.34* %150, %151
  br i1 %152, label %169, label %153

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"struct.cc::TaskGraph", %"struct.cc::TaskGraph"* %149, i64 0, i32 0
  %155 = getelementptr inbounds %"struct.cc::TaskGraph", %"struct.cc::TaskGraph"* %149, i64 0, i32 0, i32 0, i32 0
  %156 = getelementptr inbounds %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner", %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %157 = bitcast %"struct.cc::TaskGraph::Node"* %9 to i8*
  %158 = getelementptr inbounds %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner", %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0, i64 0, i32 5, i32 1
  %159 = bitcast %"struct.cc::TaskGraph::Node"* %9 to i64*
  %160 = getelementptr inbounds %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner", %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0, i64 0, i32 5, i32 1, i32 0, i32 1
  %161 = getelementptr inbounds %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner", %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0, i64 0, i32 5, i32 1, i32 0, i32 2, i32 0, i32 0
  %162 = bitcast %"struct.cc::TaskGraph::Edge"** %160 to i64*
  %163 = bitcast %"class.std::__1::vector.48"* %158 to i64*
  %164 = bitcast %"struct.cc::TaskGraph::Edge"** %161 to i64*
  %165 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %158, i64 0, i32 0, i32 0
  %166 = getelementptr inbounds %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner", %"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  %167 = bitcast %"struct.cc::TaskGraph::Node"** %156 to i64*
  %168 = bitcast %"struct.cc::TaskGraph::Node"* %9 to i8*
  br label %203

169:                                              ; preds = %296, %148
  %170 = load %"class.cc::TaskGraphRunner"*, %"class.cc::TaskGraphRunner"** %25, align 8
  %171 = getelementptr inbounds %"class.cc::NamespaceToken", %"class.cc::NamespaceToken"* %10, i64 0, i32 0
  %172 = load i32, i32* %27, align 8
  store i32 %172, i32* %171, align 4
  %173 = bitcast %"class.cc::TaskGraphRunner"* %170 to void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"struct.cc::TaskGraph"*)***
  %174 = load void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"struct.cc::TaskGraph"*)**, void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"struct.cc::TaskGraph"*)*** %173, align 8
  %175 = getelementptr inbounds void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"struct.cc::TaskGraph"*)*, void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"struct.cc::TaskGraph"*)** %174, i64 3
  %176 = load void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"struct.cc::TaskGraph"*)*, void (%"class.cc::TaskGraphRunner"*, %"class.cc::NamespaceToken"*, %"struct.cc::TaskGraph"*)** %175, align 8
  call void %176(%"class.cc::TaskGraphRunner"* %170, %"class.cc::NamespaceToken"* nonnull %10, %"struct.cc::TaskGraph"* %149) #10
  %177 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %30, i64 0, i32 0, i32 0
  %178 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %177, align 8
  %179 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %38, align 8
  %180 = icmp eq %class.scoped_refptr.34* %179, %178
  br i1 %180, label %201, label %181

181:                                              ; preds = %169, %199
  %182 = phi %class.scoped_refptr.34* [ %183, %199 ], [ %179, %169 ]
  %183 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %182, i64 -1
  %184 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %183, i64 0, i32 0
  %185 = load %"class.cc::Task"*, %"class.cc::Task"** %184, align 8
  %186 = icmp eq %"class.cc::Task"* %185, null
  br i1 %186, label %199, label %187

187:                                              ; preds = %181
  %188 = getelementptr inbounds %"class.cc::Task", %"class.cc::Task"* %185, i64 0, i32 1
  %189 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %188, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = atomicrmw sub i32* %189, i32 1 acq_rel
  %191 = icmp eq i32 %190, 1
  br i1 %191, label %192, label %199

192:                                              ; preds = %187
  %193 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %188, i64 -2
  %194 = bitcast %"class.base::RefCountedThreadSafe.35"* %193 to %"class.cc::Task"*
  %195 = bitcast %"class.base::RefCountedThreadSafe.35"* %193 to void (%"class.cc::Task"*)***
  %196 = load void (%"class.cc::Task"*)**, void (%"class.cc::Task"*)*** %195, align 8
  %197 = getelementptr inbounds void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %196, i64 2
  %198 = load void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %197, align 8
  call void %198(%"class.cc::Task"* nonnull %194) #10
  br label %199

199:                                              ; preds = %192, %187, %181
  %200 = icmp eq %class.scoped_refptr.34* %183, %178
  br i1 %200, label %201, label %181

201:                                              ; preds = %199, %169
  store %class.scoped_refptr.34* %178, %class.scoped_refptr.34** %38, align 8
  %202 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %19) #10
  ret i1 true

203:                                              ; preds = %153, %296
  %204 = phi %class.scoped_refptr.34* [ %150, %153 ], [ %297, %296 ]
  %205 = load %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"** %155, align 8
  %206 = load %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"** %156, align 8
  %207 = icmp eq %"struct.cc::TaskGraph::Node"* %205, %206
  %208 = xor i1 %207, true
  %209 = zext i1 %208 to i32
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %157) #10
  %210 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %204, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 16, i1 false)
  %211 = load %"class.cc::Task"*, %"class.cc::Task"** %210, align 8
  %212 = icmp eq %"class.cc::Task"* %211, null
  br i1 %212, label %216, label %213

213:                                              ; preds = %203
  %214 = getelementptr inbounds %"class.cc::Task", %"class.cc::Task"* %211, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = atomicrmw add i32* %214, i32 1 monotonic
  br label %216

216:                                              ; preds = %203, %213
  call void @_ZN2cc9TaskGraph4NodeC1E13scoped_refptrINS_4TaskEEttj(%"struct.cc::TaskGraph::Node"* nonnull %9, %"class.cc::Task"* %211, i16 zeroext 1, i16 zeroext 0, i32 %209) #10
  br i1 %207, label %288, label %217

217:                                              ; preds = %216
  %218 = load %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"** %156, align 8
  %219 = getelementptr inbounds %"struct.cc::TaskGraph::Node", %"struct.cc::TaskGraph::Node"* %218, i64 -1, i32 0, i32 0
  %220 = bitcast %"class.cc::Task"** %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = load i64, i64* %159, align 8
  %223 = load %"struct.cc::TaskGraph::Edge"*, %"struct.cc::TaskGraph::Edge"** %160, align 8
  %224 = load %"struct.cc::TaskGraph::Edge"*, %"struct.cc::TaskGraph::Edge"** %161, align 8
  %225 = icmp ult %"struct.cc::TaskGraph::Edge"* %223, %224
  %226 = ptrtoint %"struct.cc::TaskGraph::Edge"* %224 to i64
  br i1 %225, label %227, label %233

227:                                              ; preds = %217
  %228 = bitcast %"struct.cc::TaskGraph::Edge"* %223 to i64*
  store i64 %221, i64* %228, align 8
  %229 = getelementptr inbounds %"struct.cc::TaskGraph::Edge", %"struct.cc::TaskGraph::Edge"* %223, i64 0, i32 1
  %230 = bitcast %"class.cc::Task"** %229 to i64*
  store i64 %222, i64* %230, align 8
  %231 = getelementptr inbounds %"struct.cc::TaskGraph::Edge", %"struct.cc::TaskGraph::Edge"* %223, i64 1
  %232 = ptrtoint %"struct.cc::TaskGraph::Edge"* %231 to i64
  store i64 %232, i64* %162, align 8
  br label %288

233:                                              ; preds = %217
  %234 = ptrtoint %"struct.cc::TaskGraph::Edge"* %223 to i64
  %235 = load i64, i64* %163, align 8
  %236 = sub i64 %234, %235
  %237 = ashr exact i64 %236, 4
  %238 = add nsw i64 %237, 1
  %239 = icmp ugt i64 %238, 1152921504606846975
  br i1 %239, label %240, label %242

240:                                              ; preds = %233
  %241 = bitcast %"class.std::__1::vector.48"* %158 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %241) #12
  unreachable

242:                                              ; preds = %233
  %243 = sub i64 %226, %235
  %244 = ashr exact i64 %243, 4
  %245 = icmp ult i64 %244, 576460752303423487
  br i1 %245, label %246, label %254

246:                                              ; preds = %242
  %247 = ashr exact i64 %243, 3
  %248 = icmp ult i64 %247, %238
  %249 = select i1 %248, i64 %238, i64 %247
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %259, label %251

251:                                              ; preds = %246
  %252 = icmp ugt i64 %249, 1152921504606846975
  br i1 %252, label %253, label %254

253:                                              ; preds = %251
  call void @abort() #12
  unreachable

254:                                              ; preds = %251, %242
  %255 = phi i64 [ %249, %251 ], [ 1152921504606846975, %242 ]
  %256 = shl i64 %255, 4
  %257 = call i8* @_Znwm(i64 %256) #11
  %258 = bitcast i8* %257 to %"struct.cc::TaskGraph::Edge"*
  br label %259

259:                                              ; preds = %254, %246
  %260 = phi i64 [ %255, %254 ], [ 0, %246 ]
  %261 = phi %"struct.cc::TaskGraph::Edge"* [ %258, %254 ], [ null, %246 ]
  %262 = getelementptr inbounds %"struct.cc::TaskGraph::Edge", %"struct.cc::TaskGraph::Edge"* %261, i64 %237
  %263 = getelementptr inbounds %"struct.cc::TaskGraph::Edge", %"struct.cc::TaskGraph::Edge"* %261, i64 %260
  %264 = ptrtoint %"struct.cc::TaskGraph::Edge"* %263 to i64
  %265 = bitcast %"struct.cc::TaskGraph::Edge"* %262 to i64*
  store i64 %221, i64* %265, align 8
  %266 = getelementptr inbounds %"struct.cc::TaskGraph::Edge", %"struct.cc::TaskGraph::Edge"* %261, i64 %237, i32 1
  %267 = bitcast %"class.cc::Task"** %266 to i64*
  store i64 %222, i64* %267, align 8
  %268 = getelementptr inbounds %"struct.cc::TaskGraph::Edge", %"struct.cc::TaskGraph::Edge"* %262, i64 1
  %269 = ptrtoint %"struct.cc::TaskGraph::Edge"* %268 to i64
  %270 = load %"struct.cc::TaskGraph::Edge"*, %"struct.cc::TaskGraph::Edge"** %165, align 8
  %271 = load i64, i64* %162, align 8
  %272 = ptrtoint %"struct.cc::TaskGraph::Edge"* %270 to i64
  %273 = sub i64 %271, %272
  %274 = ashr exact i64 %273, 4
  %275 = sub nsw i64 0, %274
  %276 = getelementptr inbounds %"struct.cc::TaskGraph::Edge", %"struct.cc::TaskGraph::Edge"* %262, i64 %275
  %277 = ptrtoint %"struct.cc::TaskGraph::Edge"* %276 to i64
  %278 = icmp sgt i64 %273, 0
  br i1 %278, label %279, label %283

279:                                              ; preds = %259
  %280 = bitcast %"struct.cc::TaskGraph::Edge"* %276 to i8*
  %281 = bitcast %"struct.cc::TaskGraph::Edge"* %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %281, i64 %273, i1 false) #10
  %282 = load %"struct.cc::TaskGraph::Edge"*, %"struct.cc::TaskGraph::Edge"** %165, align 8
  br label %283

283:                                              ; preds = %279, %259
  %284 = phi %"struct.cc::TaskGraph::Edge"* [ %270, %259 ], [ %282, %279 ]
  store i64 %277, i64* %163, align 8
  store i64 %269, i64* %162, align 8
  store i64 %264, i64* %164, align 8
  %285 = icmp eq %"struct.cc::TaskGraph::Edge"* %284, null
  br i1 %285, label %288, label %286

286:                                              ; preds = %283
  %287 = bitcast %"struct.cc::TaskGraph::Edge"* %284 to i8*
  call void @_ZdlPv(i8* %287) #11
  br label %288

288:                                              ; preds = %286, %283, %227, %216
  %289 = load %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"** %156, align 8
  %290 = load %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"** %166, align 8
  %291 = icmp ult %"struct.cc::TaskGraph::Node"* %289, %290
  br i1 %291, label %292, label %295

292:                                              ; preds = %288
  call void @_ZN2cc9TaskGraph4NodeC1EOS1_(%"struct.cc::TaskGraph::Node"* %289, %"struct.cc::TaskGraph::Node"* nonnull dereferenceable(16) %9) #10
  %293 = getelementptr inbounds %"struct.cc::TaskGraph::Node", %"struct.cc::TaskGraph::Node"* %289, i64 1
  %294 = ptrtoint %"struct.cc::TaskGraph::Node"* %293 to i64
  store i64 %294, i64* %167, align 8
  br label %296

295:                                              ; preds = %288
  call void @_ZNSt3__16vectorIN2cc9TaskGraph4NodeENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.41"* %154, %"struct.cc::TaskGraph::Node"* nonnull dereferenceable(16) %9) #10
  br label %296

296:                                              ; preds = %292, %295
  call void @_ZN2cc9TaskGraph4NodeD1Ev(%"struct.cc::TaskGraph::Node"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %157) #10
  %297 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %204, i64 1
  %298 = icmp eq %class.scoped_refptr.34* %297, %151
  br i1 %298, label %169, label %203
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7content21CategorizedWorkerPool40CategorizedWorkerPoolSequencedTaskRunner26RunsTasksInCurrentSequenceEv(%"class.content::CategorizedWorkerPool::CategorizedWorkerPoolSequencedTaskRunner"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind
declare void @_ZN4base10TaskRunnerD2Ev(%"class.base::TaskRunner"*) unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #3

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare void @_ZN20trace_event_internal16CreateTrackEventEcPKhN8perfetto12StaticStringEN4base9TimeTicksEmb(%"class.base::trace_event::TrackEventHandle"* sret, i8 signext, i8*, i8*, i64, i64, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8perfetto12EventContextD1Ev(%"class.perfetto::EventContext"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base11trace_event16TrackEventHandleD1Ev(%"class.base::trace_event::TrackEventHandle"*) unnamed_addr #3

declare void @_ZN9protozero7Message16EndNestedMessageEv(%"class.protozero::Message"*) local_unnamed_addr #1

declare void @_ZN9protozero21ScatteredStreamWriter18WriteBytesSlowPathEPKhm(%"class.protozero::ScatteredStreamWriter"*, i8*, i64) local_unnamed_addr #1

declare %"class.protozero::Message"* @_ZN9protozero7Message26BeginNestedMessageInternalEj(%"class.protozero::Message"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero17MessageHandleBaseC2EOS0_(%"class.protozero::MessageHandleBase"*, %"class.protozero::MessageHandleBase"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN9protozero17MessageHandleBaseC2EPNS_7MessageE(%"class.protozero::MessageHandleBase"*, %"class.protozero::Message"*) unnamed_addr #1

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI13scoped_refptrIN2cc4TaskEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.32"*, %class.scoped_refptr.34* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.scoped_refptr.34** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.32"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.32"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.scoped_refptr.34** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %class.scoped_refptr.34*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.scoped_refptr.34* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %36, i64 %9
  %38 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %36, i64 %35
  %39 = ptrtoint %class.scoped_refptr.34* %38 to i64
  %40 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %1, i64 0, i32 0
  %41 = bitcast %class.scoped_refptr.34* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %class.scoped_refptr.34* %37 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.cc::Task"* null, %"class.cc::Task"** %40, align 8
  %44 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %37, i64 1
  %45 = ptrtoint %class.scoped_refptr.34* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 0
  %47 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %46, align 8
  %48 = ptrtoint %class.scoped_refptr.34* %47 to i64
  %49 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %3, align 8
  %50 = icmp eq %class.scoped_refptr.34* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.scoped_refptr.34, %class.scoped_refptr.34* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.cc::Task"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.scoped_refptr.34* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.scoped_refptr.34* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %60, i64 -1
  %64 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %61, i64 -1
  %65 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %64, i64 0, i32 0
  %66 = bitcast %class.scoped_refptr.34* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %class.scoped_refptr.34* %63 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.cc::Task"* null, %"class.cc::Task"** %65, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !18

71:                                               ; preds = %59, %51
  %72 = phi %class.scoped_refptr.34* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.scoped_refptr.34* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.scoped_refptr.34* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.scoped_refptr.34* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.scoped_refptr.34* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %77, i64 -1
  %80 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %78, i64 -1
  %81 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %80, i64 0, i32 0
  %82 = bitcast %class.scoped_refptr.34* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %class.scoped_refptr.34* %79 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.cc::Task"* null, %"class.cc::Task"** %81, align 8
  %85 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %77, i64 -2
  %86 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %78, i64 -2
  %87 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %86, i64 0, i32 0
  %88 = bitcast %class.scoped_refptr.34* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %class.scoped_refptr.34* %85 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.cc::Task"* null, %"class.cc::Task"** %87, align 8
  %91 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %77, i64 -3
  %92 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %78, i64 -3
  %93 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %92, i64 0, i32 0
  %94 = bitcast %class.scoped_refptr.34* %92 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %class.scoped_refptr.34* %91 to i64*
  store i64 %95, i64* %96, align 8
  store %"class.cc::Task"* null, %"class.cc::Task"** %93, align 8
  %97 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %77, i64 -4
  %98 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %78, i64 -4
  %99 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %98, i64 0, i32 0
  %100 = bitcast %class.scoped_refptr.34* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %class.scoped_refptr.34* %97 to i64*
  store i64 %101, i64* %102, align 8
  store %"class.cc::Task"* null, %"class.cc::Task"** %99, align 8
  %103 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %77, i64 -5
  %104 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %78, i64 -5
  %105 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %104, i64 0, i32 0
  %106 = bitcast %class.scoped_refptr.34* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %class.scoped_refptr.34* %103 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.cc::Task"* null, %"class.cc::Task"** %105, align 8
  %109 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %77, i64 -6
  %110 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %78, i64 -6
  %111 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %110, i64 0, i32 0
  %112 = bitcast %class.scoped_refptr.34* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %class.scoped_refptr.34* %109 to i64*
  store i64 %113, i64* %114, align 8
  store %"class.cc::Task"* null, %"class.cc::Task"** %111, align 8
  %115 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %77, i64 -7
  %116 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %78, i64 -7
  %117 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %116, i64 0, i32 0
  %118 = bitcast %class.scoped_refptr.34* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %class.scoped_refptr.34* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.cc::Task"* null, %"class.cc::Task"** %117, align 8
  %121 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %77, i64 -8
  %122 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %78, i64 -8
  %123 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %122, i64 0, i32 0
  %124 = bitcast %class.scoped_refptr.34* %122 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %class.scoped_refptr.34* %121 to i64*
  store i64 %125, i64* %126, align 8
  store %"class.cc::Task"* null, %"class.cc::Task"** %123, align 8
  %127 = icmp eq %class.scoped_refptr.34* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.scoped_refptr.34* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.scoped_refptr.34*, %class.scoped_refptr.34** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.scoped_refptr.34* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.scoped_refptr.34* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.scoped_refptr.34* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.scoped_refptr.34*
  %138 = icmp eq %class.scoped_refptr.34* %133, %137
  br i1 %138, label %159, label %139

139:                                              ; preds = %132, %157
  %140 = phi %class.scoped_refptr.34* [ %141, %157 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %140, i64 -1
  %142 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %141, i64 0, i32 0
  %143 = load %"class.cc::Task"*, %"class.cc::Task"** %142, align 8
  %144 = icmp eq %"class.cc::Task"* %143, null
  br i1 %144, label %157, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.cc::Task", %"class.cc::Task"* %143, i64 0, i32 1
  %147 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %146, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = atomicrmw sub i32* %147, i32 1 acq_rel
  %149 = icmp eq i32 %148, 1
  br i1 %149, label %150, label %157

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %146, i64 -2
  %152 = bitcast %"class.base::RefCountedThreadSafe.35"* %151 to %"class.cc::Task"*
  %153 = bitcast %"class.base::RefCountedThreadSafe.35"* %151 to void (%"class.cc::Task"*)***
  %154 = load void (%"class.cc::Task"*)**, void (%"class.cc::Task"*)*** %153, align 8
  %155 = getelementptr inbounds void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %154, i64 2
  %156 = load void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %155, align 8
  tail call void %156(%"class.cc::Task"* nonnull %152) #10
  br label %157

157:                                              ; preds = %150, %145, %139
  %158 = icmp eq %class.scoped_refptr.34* %141, %137
  br i1 %158, label %159, label %139

159:                                              ; preds = %157, %132
  %160 = icmp eq i64 %135, 0
  br i1 %160, label %163, label %161

161:                                              ; preds = %159
  %162 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %162) #11
  br label %163

163:                                              ; preds = %159, %161
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc9TaskGraph4NodeENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.41"*, %"struct.cc::TaskGraph::Node"* dereferenceable(16)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.cc::TaskGraph::Node"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.41"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.41"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.cc::TaskGraph::Node"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"struct.cc::TaskGraph::Node"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.cc::TaskGraph::Node"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.cc::TaskGraph::Node", %"struct.cc::TaskGraph::Node"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.cc::TaskGraph::Node", %"struct.cc::TaskGraph::Node"* %36, i64 %35
  %39 = ptrtoint %"struct.cc::TaskGraph::Node"* %38 to i64
  tail call void @_ZN2cc9TaskGraph4NodeC1EOS1_(%"struct.cc::TaskGraph::Node"* %37, %"struct.cc::TaskGraph::Node"* dereferenceable(16) %1) #10
  %40 = getelementptr inbounds %"struct.cc::TaskGraph::Node", %"struct.cc::TaskGraph::Node"* %37, i64 1
  %41 = ptrtoint %"struct.cc::TaskGraph::Node"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %0, i64 0, i32 0, i32 0
  %43 = load %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"** %42, align 8
  %44 = load %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"** %3, align 8
  %45 = icmp eq %"struct.cc::TaskGraph::Node"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"struct.cc::TaskGraph::Node"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"struct.cc::TaskGraph::Node"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"struct.cc::TaskGraph::Node"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"struct.cc::TaskGraph::Node", %"struct.cc::TaskGraph::Node"* %49, i64 -1
  %52 = getelementptr inbounds %"struct.cc::TaskGraph::Node", %"struct.cc::TaskGraph::Node"* %50, i64 -1
  tail call void @_ZN2cc9TaskGraph4NodeC1EOS1_(%"struct.cc::TaskGraph::Node"* %51, %"struct.cc::TaskGraph::Node"* dereferenceable(16) %52) #10
  %53 = icmp eq %"struct.cc::TaskGraph::Node"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"struct.cc::TaskGraph::Node"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"struct.cc::TaskGraph::Node"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"struct.cc::TaskGraph::Node"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"struct.cc::TaskGraph::Node"*
  %63 = icmp eq %"struct.cc::TaskGraph::Node"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"struct.cc::TaskGraph::Node"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"struct.cc::TaskGraph::Node", %"struct.cc::TaskGraph::Node"* %65, i64 -1
  tail call void @_ZN2cc9TaskGraph4NodeD1Ev(%"struct.cc::TaskGraph::Node"* %66) #10
  %67 = icmp eq %"struct.cc::TaskGraph::Node"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #11
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

declare void @_ZN2cc9TaskGraph4NodeC1EOS1_(%"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN4base12SimpleThreadC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS0_7OptionsE(%"class.base::SimpleThread"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.base::SimpleThread::Options"* dereferenceable(16)) unnamed_addr #1

declare i64 @_ZN4base14PlatformThread8Delegate17GetRealtimePeriodEv(%"class.base::PlatformThread::Delegate"*) unnamed_addr #1

declare void @_ZN4base12SimpleThread10ThreadMainEv(%"class.base::SimpleThread"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7content12_GLOBAL__N_127CategorizedWorkerPoolThreadD2Ev(%"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"*) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread", %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN7content12_GLOBAL__N_127CategorizedWorkerPoolThreadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread", %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"* %0, i64 0, i32 6, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #10
  br label %14

14:                                               ; preds = %1, %6, %11
  %15 = getelementptr inbounds %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread", %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %15) #10
  %16 = getelementptr inbounds %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread", %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"* %0, i64 0, i32 2, i32 0, i32 0
  %17 = load i16*, i16** %16, align 8
  %18 = icmp eq i16* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %14
  %20 = ptrtoint i16* %17 to i64
  %21 = getelementptr inbounds %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread", %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"* %0, i64 0, i32 2, i32 0, i32 1
  %22 = bitcast i16** %21 to i64*
  store i64 %20, i64* %22, align 8
  %23 = bitcast i16* %17 to i8*
  tail call void @_ZdlPv(i8* %23) #11
  br label %24

24:                                               ; preds = %14, %19
  %25 = bitcast %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"* %0 to %"class.base::SimpleThread"*
  tail call void @_ZN4base12SimpleThreadD2Ev(%"class.base::SimpleThread"* %25) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7content12_GLOBAL__N_127CategorizedWorkerPoolThreadD0Ev(%"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"*) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread", %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN7content12_GLOBAL__N_127CategorizedWorkerPoolThreadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread", %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"* %0, i64 0, i32 6, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #10
  br label %14

14:                                               ; preds = %11, %6, %1
  %15 = getelementptr inbounds %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread", %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %15) #10
  %16 = getelementptr inbounds %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread", %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"* %0, i64 0, i32 2, i32 0, i32 0
  %17 = load i16*, i16** %16, align 8
  %18 = icmp eq i16* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %14
  %20 = ptrtoint i16* %17 to i64
  %21 = getelementptr inbounds %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread", %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"* %0, i64 0, i32 2, i32 0, i32 1
  %22 = bitcast i16** %21 to i64*
  store i64 %20, i64* %22, align 8
  %23 = bitcast i16* %17 to i8*
  tail call void @_ZdlPv(i8* %23) #11
  br label %24

24:                                               ; preds = %14, %19
  %25 = bitcast %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"* %0 to %"class.base::SimpleThread"*
  tail call void @_ZN4base12SimpleThreadD2Ev(%"class.base::SimpleThread"* %25) #10
  %26 = bitcast %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"* %0 to i8*
  tail call void @_ZdlPv(i8* %26) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7content12_GLOBAL__N_127CategorizedWorkerPoolThread3RunEv(%"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread", %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"* %0, i64 0, i32 1
  %3 = load %"class.content::CategorizedWorkerPool"*, %"class.content::CategorizedWorkerPool"** %2, align 8
  %4 = getelementptr inbounds %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread", %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread", %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"* %0, i64 0, i32 3
  %6 = load %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"** %5, align 8
  %7 = getelementptr inbounds %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread", %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"* %0, i64 0, i32 4
  %8 = load %"class.base::ConditionVariable"*, %"class.base::ConditionVariable"** %7, align 8
  tail call void @_ZN7content21CategorizedWorkerPool3RunERKNSt3__16vectorIN2cc12TaskCategoryENS1_9allocatorIS4_EEEEPN3gfx17RenderingPipelineEPN4base17ConditionVariableE(%"class.content::CategorizedWorkerPool"* %3, %"class.std::__1::vector.62"* dereferenceable(24) %4, %"class.gfx::RenderingPipeline"* %6, %"class.base::ConditionVariable"* %8)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12SimpleThread11BeforeStartEv(%"class.base::SimpleThread"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7content12_GLOBAL__N_127CategorizedWorkerPoolThread9BeforeRunEv(%"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback.75", align 8
  %5 = getelementptr inbounds %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread", %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"* %0, i64 0, i32 5
  %6 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %6, align 8
  %8 = icmp eq %"class.base::internal::BindStateBase"* %7, null
  br i1 %8, label %32, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread", %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"* %0, i64 0, i32 6, i32 0
  %11 = bitcast %"class.base::SingleThreadTaskRunner"** %10 to %"class.base::TaskRunner"**
  %12 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %11, align 8
  %13 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.3, i64 0, i64 0), i32 77) #10
  %14 = bitcast %"class.content::(anonymous namespace)::CategorizedWorkerPoolThread"* %0 to %"class.base::SimpleThread"*
  %15 = call i32 @_ZN4base12SimpleThread3tidEv(%"class.base::SimpleThread"* %14) #10
  %16 = call i8* @_Znwm(i64 48) #11, !noalias !19
  %17 = bitcast i8* %16 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %17, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFviEEEJiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateINS_12OnceCallbackIFviEEEJiEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFviEEEJiEEEEEbPKNS0_13BindStateBaseENS7_21CancellationQueryModeE) #10, !noalias !19
  %18 = getelementptr inbounds i8, i8* %16, i64 32
  %19 = bitcast %"class.base::OnceCallback"* %5 to i64*
  %20 = load i64, i64* %19, align 8, !noalias !19
  %21 = bitcast i8* %18 to i64*
  store i64 %20, i64* %21, align 8, !noalias !19
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8, !noalias !19
  %22 = getelementptr inbounds i8, i8* %16, i64 40
  %23 = bitcast i8* %22 to i32*
  store i32 %15, i32* %23, align 4, !noalias !19
  %24 = icmp eq i64 %20, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %9
  %26 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #10, !noalias !19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), i32 896, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0)) #10, !noalias !19
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10, !noalias !19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10, !noalias !19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #10, !noalias !19
  br label %28

28:                                               ; preds = %9, %25
  %29 = bitcast %"class.base::OnceCallback.75"* %4 to i8**
  store i8* %16, i8** %29, align 8, !alias.scope !19
  %30 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %12, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback.75"* nonnull %4) #10
  %31 = getelementptr inbounds %"class.base::OnceCallback.75", %"class.base::OnceCallback.75"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #10
  br label %32

32:                                               ; preds = %1, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12SimpleThread10BeforeJoinEv(%"class.base::SimpleThread"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base12SimpleThreadD2Ev(%"class.base::SimpleThread"*) unnamed_addr #3

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.75"*) local_unnamed_addr #1

declare i32 @_ZN4base12SimpleThread3tidEv(%"class.base::SimpleThread"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFviEEEJiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::BindStateBase"**
  %9 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %13 = inttoptr i64 %10 to %"class.base::internal::BindStateBase"*
  %14 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %13, i64 0, i32 1
  %15 = bitcast void ()** %14 to void (%"class.base::internal::BindStateBase"*, i32)**
  %16 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %15, align 8
  tail call void %16(%"class.base::internal::BindStateBase"* %13, i32 %6) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateINS_12OnceCallbackIFviEEEJiEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #10
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFviEEEJiEEEEEbPKNS0_13BindStateBaseENS7_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  switch i32 %1, label %10 [
    i32 0, label %4
    i32 1, label %7
  ]

4:                                                ; preds = %2
  %5 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %6 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"* %5) #10
  br label %10

7:                                                ; preds = %2
  %8 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %9 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"* %8) #10
  br label %10

10:                                               ; preds = %2, %4, %7
  %11 = phi i1 [ %9, %7 ], [ %6, %4 ], [ false, %2 ]
  ret i1 %11
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN4base12SimpleThreadENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.base::SimpleThread"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !24

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.base::SimpleThread"*, %"class.base::SimpleThread"** %142, align 8
  store %"class.base::SimpleThread"* null, %"class.base::SimpleThread"** %142, align 8
  %144 = icmp eq %"class.base::SimpleThread"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.base::SimpleThread"* %143 to void (%"class.base::SimpleThread"*)***
  %147 = load void (%"class.base::SimpleThread"*)**, void (%"class.base::SimpleThread"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.base::SimpleThread"*)*, void (%"class.base::SimpleThread"*)** %147, i64 3
  %149 = load void (%"class.base::SimpleThread"*)*, void (%"class.base::SimpleThread"*)** %148, align 8
  tail call void %149(%"class.base::SimpleThread"* nonnull %143) #10
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #11
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
!7 = !{i8 0, i8 2}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN7content21CategorizedWorkerPool22GenerateNamespaceTokenEv: argument 0"}
!10 = distinct !{!10, !"_ZN7content21CategorizedWorkerPool22GenerateNamespaceTokenEv"}
!11 = distinct !{!11, !3}
!12 = distinct !{!12, !3}
!13 = distinct !{!13, !3}
!14 = distinct !{!14, !3}
!15 = distinct !{!15, !3}
!16 = !{!"branch_weights", i32 1, i32 2000}
!17 = distinct !{!17, !3}
!18 = distinct !{!18, !3}
!19 = !{!20, !22}
!20 = distinct !{!20, !21, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFviEEEJiEEEDcOT0_DpOT1_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFviEEEJiEEEDcOT0_DpOT1_"}
!22 = distinct !{!22, !23, !"_ZN4base8BindOnceINS_12OnceCallbackIFviEEEJiEEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS6_DpOS7_: argument 0"}
!23 = distinct !{!23, !"_ZN4base8BindOnceINS_12OnceCallbackIFviEEEJiEEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS6_DpOS7_"}
!24 = distinct !{!24, !3}
