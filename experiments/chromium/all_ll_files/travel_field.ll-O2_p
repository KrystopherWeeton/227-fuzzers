; ModuleID = '../../components/autofill/core/browser/form_parsing/travel_field.cc'
source_filename = "../../components/autofill/core/browser/form_parsing/travel_field.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.autofill::TravelField" = type { %"class.autofill::FormField", %"class.autofill::AutofillField"*, %"class.autofill::AutofillField"*, %"class.autofill::AutofillField"*, %"class.autofill::AutofillField"* }
%"class.autofill::FormField" = type { i32 (...)** }
%"class.autofill::AutofillField" = type opaque
%"class.autofill::AutofillScanner" = type { %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::vector" }
%"class.std::__1::__wrap_iter" = type { %"class.autofill::AutofillField"** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.autofill::AutofillField"**, %"class.autofill::AutofillField"**, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.autofill::AutofillField"** }
%"class.autofill::LanguageCode" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.autofill::LogManager" = type opaque
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"struct.autofill::MatchingPattern"*, %"struct.autofill::MatchingPattern"*, %"class.std::__1::__compressed_pair.20" }
%"struct.autofill::MatchingPattern" = type { %"class.autofill::LanguageCode", %"class.std::__1::basic_string.11", %"class.std::__1::basic_string.11", float, i8, i16 }
%"class.std::__1::basic_string.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.14 }
%union.anon.14 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.autofill::MatchingPattern"* }
%"struct.autofill::RegExLogging" = type { %"class.autofill::LogManager"*, i8* }
%"class.autofill::PatternProvider" = type { %"class.std::__1::map", %"class.base::Version" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.25", %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i64 }
%"class.base::Version" = type { %"class.std::__1::vector.33" }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { i32*, i32*, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { i32* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::flat_map" = type opaque

@.str.1 = private unnamed_addr constant [14 x i8] c"TRAVEL_ORIGIN\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"TRAVEL_DESTINATION\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"FLIGHT\00", align 1
@_ZN8autofill11kPassportReE = external constant [0 x i16], align 2
@.str.4 = private unnamed_addr constant [12 x i8] c"kPassportRe\00", align 1
@_ZN8autofill15kTravelOriginReE = external constant [0 x i16], align 2
@.str.5 = private unnamed_addr constant [16 x i8] c"kTravelOriginRe\00", align 1
@_ZN8autofill20kTravelDestinationReE = external constant [0 x i16], align 2
@.str.6 = private unnamed_addr constant [21 x i8] c"kTravelDestinationRe\00", align 1
@_ZN8autofill9kFlightReE = external constant [0 x i16], align 2
@.str.7 = private unnamed_addr constant [10 x i8] c"kFlightRe\00", align 1
@_ZN8autofill9FormField22kBaseTravelParserScoreE = external local_unnamed_addr constant float, align 4
@_ZTVN8autofill11TravelFieldE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.autofill::TravelField"*)* @_ZN8autofill11TravelFieldD2Ev to i8*), i8* bitcast (void (%"class.autofill::TravelField"*)* @_ZN8autofill11TravelFieldD0Ev to i8*), i8* bitcast (void (%"class.autofill::TravelField"*, %"class.base::flat_map"*)* @_ZNK8autofill11TravelField18AddClassificationsEPN4base8flat_mapINS_8internal8GlobalIdINS_15FieldRendererIdEEENS_15FieldCandidatesENSt3__14lessIvEENS8_6vectorINS8_4pairIS6_S7_EENS8_9allocatorISD_EEEEEE to i8*)] }, align 8

@_ZN8autofill11TravelFieldD1Ev = hidden unnamed_addr alias void (%"class.autofill::TravelField"*), void (%"class.autofill::TravelField"*)* @_ZN8autofill11TravelFieldD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8autofill11TravelFieldD2Ev(%"class.autofill::TravelField"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill11TravelFieldD0Ev(%"class.autofill::TravelField"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.autofill::TravelField"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.autofill::FormField"* @_ZN8autofill11TravelField5ParseEPNS_15AutofillScannerERKNS_12LanguageCodeEPNS_10LogManagerE(%"class.autofill::AutofillScanner"*, %"class.autofill::LanguageCode"* dereferenceable(24), %"class.autofill::LogManager"*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::vector.9", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::vector.9", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::vector.9", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::vector.9", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"struct.autofill::RegExLogging", align 8
  %13 = alloca %"struct.autofill::RegExLogging", align 8
  %14 = alloca %"struct.autofill::RegExLogging", align 8
  %15 = alloca %"struct.autofill::RegExLogging", align 8
  %16 = icmp eq %"class.autofill::AutofillScanner"* %0, null
  br i1 %16, label %227, label %17

17:                                               ; preds = %3
  %18 = tail call zeroext i1 @_ZNK8autofill15AutofillScanner5IsEndEv(%"class.autofill::AutofillScanner"* nonnull %0) #8
  br i1 %18, label %227, label %19

19:                                               ; preds = %17
  %20 = bitcast %"class.std::__1::vector.9"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #8
  %21 = tail call dereferenceable(48) %"class.autofill::PatternProvider"* @_ZN8autofill15PatternProvider11GetInstanceEv() #8
  %22 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #8
  %23 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  store i8 8, i8* %24, align 1
  %25 = bitcast %"class.std::__1::basic_string"* %5 to i64*
  store i64 6076006053690163536, i64* %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast i64* %26 to i8*
  store i8 0, i8* %27, align 8
  call void @_ZNK8autofill15PatternProvider16GetMatchPatternsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_12LanguageCodeE(%"class.std::__1::vector.9"* nonnull sret %4, %"class.autofill::PatternProvider"* %21, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"class.autofill::LanguageCode"* dereferenceable(24) %1) #8
  %28 = load i8, i8* %24, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #7
  br label %33

33:                                               ; preds = %19, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #8
  %34 = bitcast %"class.std::__1::vector.9"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #8
  %35 = call dereferenceable(48) %"class.autofill::PatternProvider"* @_ZN8autofill15PatternProvider11GetInstanceEv() #8
  %36 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #8
  %37 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  store i8 13, i8* %38, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i64 13, i1 false) #8
  %39 = getelementptr inbounds i8, i8* %36, i64 13
  store i8 0, i8* %39, align 1
  call void @_ZNK8autofill15PatternProvider16GetMatchPatternsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_12LanguageCodeE(%"class.std::__1::vector.9"* nonnull sret %6, %"class.autofill::PatternProvider"* %35, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, %"class.autofill::LanguageCode"* dereferenceable(24) %1) #8
  %40 = load i8, i8* %38, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #7
  br label %45

45:                                               ; preds = %33, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #8
  %46 = bitcast %"class.std::__1::vector.9"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #8
  %47 = call dereferenceable(48) %"class.autofill::PatternProvider"* @_ZN8autofill15PatternProvider11GetInstanceEv() #8
  %48 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #8
  %49 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  store i8 18, i8* %50, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %48, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 18, i1 false) #8
  %51 = getelementptr inbounds i8, i8* %48, i64 18
  store i8 0, i8* %51, align 2
  call void @_ZNK8autofill15PatternProvider16GetMatchPatternsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_12LanguageCodeE(%"class.std::__1::vector.9"* nonnull sret %8, %"class.autofill::PatternProvider"* %47, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, %"class.autofill::LanguageCode"* dereferenceable(24) %1) #8
  %52 = load i8, i8* %50, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %45
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %56) #7
  br label %57

57:                                               ; preds = %45, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #8
  %58 = bitcast %"class.std::__1::vector.9"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #8
  %59 = call dereferenceable(48) %"class.autofill::PatternProvider"* @_ZN8autofill15PatternProvider11GetInstanceEv() #8
  %60 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #8
  %61 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  store i8 6, i8* %62, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %60, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i64 6, i1 false) #8
  %63 = getelementptr inbounds i8, i8* %60, i64 6
  store i8 0, i8* %63, align 2
  call void @_ZNK8autofill15PatternProvider16GetMatchPatternsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_12LanguageCodeE(%"class.std::__1::vector.9"* nonnull sret %10, %"class.autofill::PatternProvider"* %59, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11, %"class.autofill::LanguageCode"* dereferenceable(24) %1) #8
  %64 = load i8, i8* %62, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %68) #7
  br label %69

69:                                               ; preds = %57, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #8
  %70 = call i8* @_Znwm(i64 40) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %70, i8 0, i64 40, i1 false) #8
  %71 = bitcast i8* %70 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8autofill11TravelFieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  %72 = ptrtoint i8* %70 to i64
  %73 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill11kPassportReE, i64 0, i64 0), align 2
  %74 = icmp eq i16 %73, 0
  br i1 %74, label %82, label %75

75:                                               ; preds = %69, %75
  %76 = phi i64 [ %78, %75 ], [ 0, %69 ]
  %77 = phi i16* [ %79, %75 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill11kPassportReE, i64 0, i64 0), %69 ]
  %78 = add i64 %76, 1
  %79 = getelementptr inbounds i16, i16* %77, i64 1
  %80 = load i16, i16* %79, align 2
  %81 = icmp eq i16 %80, 0
  br i1 %81, label %82, label %75

82:                                               ; preds = %75, %69
  %83 = phi i64 [ 0, %69 ], [ %78, %75 ]
  %84 = getelementptr inbounds i8, i8* %70, i64 8
  %85 = bitcast i8* %84 to %"class.autofill::AutofillField"**
  %86 = bitcast %"struct.autofill::RegExLogging"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #8
  %87 = getelementptr inbounds %"struct.autofill::RegExLogging", %"struct.autofill::RegExLogging"* %12, i64 0, i32 0
  store %"class.autofill::LogManager"* %2, %"class.autofill::LogManager"** %87, align 8
  %88 = getelementptr inbounds %"struct.autofill::RegExLogging", %"struct.autofill::RegExLogging"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i8** %88, align 8
  %89 = call zeroext i1 @_ZN8autofill9FormField10ParseFieldEPNS_15AutofillScannerEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEERKNS5_6vectorINS_15MatchingPatternENS5_9allocatorISA_EEEEPPNS_13AutofillFieldERKNS_12RegExLoggingE(%"class.autofill::AutofillScanner"* nonnull %0, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill11kPassportReE, i64 0, i64 0), i64 %83, %"class.std::__1::vector.9"* nonnull dereferenceable(24) %4, %"class.autofill::AutofillField"** %85, %"struct.autofill::RegExLogging"* nonnull dereferenceable(16) %12) #8
  %90 = bitcast %"struct.autofill::RegExLogging"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #8
  %91 = bitcast %"struct.autofill::RegExLogging"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #8
  %92 = bitcast %"struct.autofill::RegExLogging"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #8
  br i1 %89, label %146, label %93

93:                                               ; preds = %82
  %94 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill15kTravelOriginReE, i64 0, i64 0), align 2
  %95 = icmp eq i16 %94, 0
  br i1 %95, label %103, label %96

96:                                               ; preds = %93, %96
  %97 = phi i64 [ %99, %96 ], [ 0, %93 ]
  %98 = phi i16* [ %100, %96 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill15kTravelOriginReE, i64 0, i64 0), %93 ]
  %99 = add i64 %97, 1
  %100 = getelementptr inbounds i16, i16* %98, i64 1
  %101 = load i16, i16* %100, align 2
  %102 = icmp eq i16 %101, 0
  br i1 %102, label %103, label %96

103:                                              ; preds = %96, %93
  %104 = phi i64 [ 0, %93 ], [ %99, %96 ]
  %105 = getelementptr inbounds i8, i8* %70, i64 16
  %106 = bitcast i8* %105 to %"class.autofill::AutofillField"**
  %107 = getelementptr inbounds %"struct.autofill::RegExLogging", %"struct.autofill::RegExLogging"* %13, i64 0, i32 0
  store %"class.autofill::LogManager"* %2, %"class.autofill::LogManager"** %107, align 8
  %108 = getelementptr inbounds %"struct.autofill::RegExLogging", %"struct.autofill::RegExLogging"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i8** %108, align 8
  %109 = call zeroext i1 @_ZN8autofill9FormField10ParseFieldEPNS_15AutofillScannerEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEERKNS5_6vectorINS_15MatchingPatternENS5_9allocatorISA_EEEEPPNS_13AutofillFieldERKNS_12RegExLoggingE(%"class.autofill::AutofillScanner"* nonnull %0, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill15kTravelOriginReE, i64 0, i64 0), i64 %104, %"class.std::__1::vector.9"* nonnull dereferenceable(24) %6, %"class.autofill::AutofillField"** %106, %"struct.autofill::RegExLogging"* nonnull dereferenceable(16) %13) #8
  br i1 %109, label %145, label %110

110:                                              ; preds = %103
  %111 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill20kTravelDestinationReE, i64 0, i64 0), align 2
  %112 = icmp eq i16 %111, 0
  br i1 %112, label %120, label %113

113:                                              ; preds = %110, %113
  %114 = phi i64 [ %116, %113 ], [ 0, %110 ]
  %115 = phi i16* [ %117, %113 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill20kTravelDestinationReE, i64 0, i64 0), %110 ]
  %116 = add i64 %114, 1
  %117 = getelementptr inbounds i16, i16* %115, i64 1
  %118 = load i16, i16* %117, align 2
  %119 = icmp eq i16 %118, 0
  br i1 %119, label %120, label %113

120:                                              ; preds = %113, %110
  %121 = phi i64 [ 0, %110 ], [ %116, %113 ]
  %122 = getelementptr inbounds i8, i8* %70, i64 24
  %123 = bitcast i8* %122 to %"class.autofill::AutofillField"**
  %124 = getelementptr inbounds %"struct.autofill::RegExLogging", %"struct.autofill::RegExLogging"* %14, i64 0, i32 0
  store %"class.autofill::LogManager"* %2, %"class.autofill::LogManager"** %124, align 8
  %125 = getelementptr inbounds %"struct.autofill::RegExLogging", %"struct.autofill::RegExLogging"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i8** %125, align 8
  %126 = call zeroext i1 @_ZN8autofill9FormField10ParseFieldEPNS_15AutofillScannerEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEERKNS5_6vectorINS_15MatchingPatternENS5_9allocatorISA_EEEEPPNS_13AutofillFieldERKNS_12RegExLoggingE(%"class.autofill::AutofillScanner"* nonnull %0, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill20kTravelDestinationReE, i64 0, i64 0), i64 %121, %"class.std::__1::vector.9"* nonnull dereferenceable(24) %8, %"class.autofill::AutofillField"** %123, %"struct.autofill::RegExLogging"* nonnull dereferenceable(16) %14) #8
  br i1 %126, label %144, label %127

127:                                              ; preds = %120
  %128 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill9kFlightReE, i64 0, i64 0), align 2
  %129 = icmp eq i16 %128, 0
  br i1 %129, label %137, label %130

130:                                              ; preds = %127, %130
  %131 = phi i64 [ %133, %130 ], [ 0, %127 ]
  %132 = phi i16* [ %134, %130 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill9kFlightReE, i64 0, i64 0), %127 ]
  %133 = add i64 %131, 1
  %134 = getelementptr inbounds i16, i16* %132, i64 1
  %135 = load i16, i16* %134, align 2
  %136 = icmp eq i16 %135, 0
  br i1 %136, label %137, label %130

137:                                              ; preds = %130, %127
  %138 = phi i64 [ 0, %127 ], [ %133, %130 ]
  %139 = getelementptr inbounds i8, i8* %70, i64 32
  %140 = bitcast i8* %139 to %"class.autofill::AutofillField"**
  %141 = getelementptr inbounds %"struct.autofill::RegExLogging", %"struct.autofill::RegExLogging"* %15, i64 0, i32 0
  store %"class.autofill::LogManager"* %2, %"class.autofill::LogManager"** %141, align 8
  %142 = getelementptr inbounds %"struct.autofill::RegExLogging", %"struct.autofill::RegExLogging"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), i8** %142, align 8
  %143 = call zeroext i1 @_ZN8autofill9FormField10ParseFieldEPNS_15AutofillScannerEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEERKNS5_6vectorINS_15MatchingPatternENS5_9allocatorISA_EEEEPPNS_13AutofillFieldERKNS_12RegExLoggingE(%"class.autofill::AutofillScanner"* nonnull %0, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill9kFlightReE, i64 0, i64 0), i64 %138, %"class.std::__1::vector.9"* nonnull dereferenceable(24) %10, %"class.autofill::AutofillField"** %140, %"struct.autofill::RegExLogging"* nonnull dereferenceable(16) %15) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #8
  br i1 %143, label %153, label %147

144:                                              ; preds = %120
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #8
  br label %153

145:                                              ; preds = %103
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #8
  br label %153

146:                                              ; preds = %82
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #8
  br label %153

147:                                              ; preds = %137
  %148 = bitcast i8* %70 to %"class.autofill::TravelField"*
  %149 = bitcast i8* %70 to void (%"class.autofill::TravelField"*)***
  %150 = load void (%"class.autofill::TravelField"*)**, void (%"class.autofill::TravelField"*)*** %149, align 8
  %151 = getelementptr inbounds void (%"class.autofill::TravelField"*)*, void (%"class.autofill::TravelField"*)** %150, i64 1
  %152 = load void (%"class.autofill::TravelField"*)*, void (%"class.autofill::TravelField"*)** %151, align 8
  call void %152(%"class.autofill::TravelField"* nonnull %148) #8
  br label %153

153:                                              ; preds = %137, %144, %145, %146, %147
  %154 = phi i64 [ 0, %147 ], [ %72, %146 ], [ %72, %145 ], [ %72, %144 ], [ %72, %137 ]
  %155 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %10, i64 0, i32 0, i32 0
  %156 = load %"struct.autofill::MatchingPattern"*, %"struct.autofill::MatchingPattern"** %155, align 8
  %157 = icmp eq %"struct.autofill::MatchingPattern"* %156, null
  br i1 %157, label %172, label %158

158:                                              ; preds = %153
  %159 = bitcast %"struct.autofill::MatchingPattern"* %156 to i8*
  %160 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %10, i64 0, i32 0, i32 1
  %161 = load %"struct.autofill::MatchingPattern"*, %"struct.autofill::MatchingPattern"** %160, align 8
  %162 = icmp eq %"struct.autofill::MatchingPattern"* %161, %156
  br i1 %162, label %170, label %163

163:                                              ; preds = %158, %163
  %164 = phi %"struct.autofill::MatchingPattern"* [ %165, %163 ], [ %161, %158 ]
  %165 = getelementptr inbounds %"struct.autofill::MatchingPattern", %"struct.autofill::MatchingPattern"* %164, i64 -1
  call void @_ZN8autofill15MatchingPatternD1Ev(%"struct.autofill::MatchingPattern"* %165) #8
  %166 = icmp eq %"struct.autofill::MatchingPattern"* %165, %156
  br i1 %166, label %167, label %163

167:                                              ; preds = %163
  %168 = bitcast %"class.std::__1::vector.9"* %10 to i8**
  %169 = load i8*, i8** %168, align 8
  br label %170

170:                                              ; preds = %167, %158
  %171 = phi i8* [ %169, %167 ], [ %159, %158 ]
  store %"struct.autofill::MatchingPattern"* %156, %"struct.autofill::MatchingPattern"** %160, align 8
  call void @_ZdlPv(i8* %171) #7
  br label %172

172:                                              ; preds = %153, %170
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #8
  %173 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %8, i64 0, i32 0, i32 0
  %174 = load %"struct.autofill::MatchingPattern"*, %"struct.autofill::MatchingPattern"** %173, align 8
  %175 = icmp eq %"struct.autofill::MatchingPattern"* %174, null
  br i1 %175, label %190, label %176

176:                                              ; preds = %172
  %177 = bitcast %"struct.autofill::MatchingPattern"* %174 to i8*
  %178 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %8, i64 0, i32 0, i32 1
  %179 = load %"struct.autofill::MatchingPattern"*, %"struct.autofill::MatchingPattern"** %178, align 8
  %180 = icmp eq %"struct.autofill::MatchingPattern"* %179, %174
  br i1 %180, label %188, label %181

181:                                              ; preds = %176, %181
  %182 = phi %"struct.autofill::MatchingPattern"* [ %183, %181 ], [ %179, %176 ]
  %183 = getelementptr inbounds %"struct.autofill::MatchingPattern", %"struct.autofill::MatchingPattern"* %182, i64 -1
  call void @_ZN8autofill15MatchingPatternD1Ev(%"struct.autofill::MatchingPattern"* %183) #8
  %184 = icmp eq %"struct.autofill::MatchingPattern"* %183, %174
  br i1 %184, label %185, label %181

185:                                              ; preds = %181
  %186 = bitcast %"class.std::__1::vector.9"* %8 to i8**
  %187 = load i8*, i8** %186, align 8
  br label %188

188:                                              ; preds = %185, %176
  %189 = phi i8* [ %187, %185 ], [ %177, %176 ]
  store %"struct.autofill::MatchingPattern"* %174, %"struct.autofill::MatchingPattern"** %178, align 8
  call void @_ZdlPv(i8* %189) #7
  br label %190

190:                                              ; preds = %172, %188
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #8
  %191 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %6, i64 0, i32 0, i32 0
  %192 = load %"struct.autofill::MatchingPattern"*, %"struct.autofill::MatchingPattern"** %191, align 8
  %193 = icmp eq %"struct.autofill::MatchingPattern"* %192, null
  br i1 %193, label %208, label %194

194:                                              ; preds = %190
  %195 = bitcast %"struct.autofill::MatchingPattern"* %192 to i8*
  %196 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %6, i64 0, i32 0, i32 1
  %197 = load %"struct.autofill::MatchingPattern"*, %"struct.autofill::MatchingPattern"** %196, align 8
  %198 = icmp eq %"struct.autofill::MatchingPattern"* %197, %192
  br i1 %198, label %206, label %199

199:                                              ; preds = %194, %199
  %200 = phi %"struct.autofill::MatchingPattern"* [ %201, %199 ], [ %197, %194 ]
  %201 = getelementptr inbounds %"struct.autofill::MatchingPattern", %"struct.autofill::MatchingPattern"* %200, i64 -1
  call void @_ZN8autofill15MatchingPatternD1Ev(%"struct.autofill::MatchingPattern"* %201) #8
  %202 = icmp eq %"struct.autofill::MatchingPattern"* %201, %192
  br i1 %202, label %203, label %199

203:                                              ; preds = %199
  %204 = bitcast %"class.std::__1::vector.9"* %6 to i8**
  %205 = load i8*, i8** %204, align 8
  br label %206

206:                                              ; preds = %203, %194
  %207 = phi i8* [ %205, %203 ], [ %195, %194 ]
  store %"struct.autofill::MatchingPattern"* %192, %"struct.autofill::MatchingPattern"** %196, align 8
  call void @_ZdlPv(i8* %207) #7
  br label %208

208:                                              ; preds = %190, %206
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #8
  %209 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %4, i64 0, i32 0, i32 0
  %210 = load %"struct.autofill::MatchingPattern"*, %"struct.autofill::MatchingPattern"** %209, align 8
  %211 = icmp eq %"struct.autofill::MatchingPattern"* %210, null
  br i1 %211, label %226, label %212

212:                                              ; preds = %208
  %213 = bitcast %"struct.autofill::MatchingPattern"* %210 to i8*
  %214 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %4, i64 0, i32 0, i32 1
  %215 = load %"struct.autofill::MatchingPattern"*, %"struct.autofill::MatchingPattern"** %214, align 8
  %216 = icmp eq %"struct.autofill::MatchingPattern"* %215, %210
  br i1 %216, label %224, label %217

217:                                              ; preds = %212, %217
  %218 = phi %"struct.autofill::MatchingPattern"* [ %219, %217 ], [ %215, %212 ]
  %219 = getelementptr inbounds %"struct.autofill::MatchingPattern", %"struct.autofill::MatchingPattern"* %218, i64 -1
  call void @_ZN8autofill15MatchingPatternD1Ev(%"struct.autofill::MatchingPattern"* %219) #8
  %220 = icmp eq %"struct.autofill::MatchingPattern"* %219, %210
  br i1 %220, label %221, label %217

221:                                              ; preds = %217
  %222 = bitcast %"class.std::__1::vector.9"* %4 to i8**
  %223 = load i8*, i8** %222, align 8
  br label %224

224:                                              ; preds = %221, %212
  %225 = phi i8* [ %223, %221 ], [ %213, %212 ]
  store %"struct.autofill::MatchingPattern"* %210, %"struct.autofill::MatchingPattern"** %214, align 8
  call void @_ZdlPv(i8* %225) #7
  br label %226

226:                                              ; preds = %208, %224
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #8
  br label %227

227:                                              ; preds = %17, %3, %226
  %228 = phi i64 [ %154, %226 ], [ 0, %3 ], [ 0, %17 ]
  %229 = inttoptr i64 %228 to %"class.autofill::FormField"*
  ret %"class.autofill::FormField"* %229
}

declare zeroext i1 @_ZNK8autofill15AutofillScanner5IsEndEv(%"class.autofill::AutofillScanner"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare dereferenceable(48) %"class.autofill::PatternProvider"* @_ZN8autofill15PatternProvider11GetInstanceEv() local_unnamed_addr #3

declare void @_ZNK8autofill15PatternProvider16GetMatchPatternsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_12LanguageCodeE(%"class.std::__1::vector.9"* sret, %"class.autofill::PatternProvider"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.autofill::LanguageCode"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare zeroext i1 @_ZN8autofill9FormField10ParseFieldEPNS_15AutofillScannerEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEERKNS5_6vectorINS_15MatchingPatternENS5_9allocatorISA_EEEEPPNS_13AutofillFieldERKNS_12RegExLoggingE(%"class.autofill::AutofillScanner"*, i16*, i64, %"class.std::__1::vector.9"* dereferenceable(24), %"class.autofill::AutofillField"**, %"struct.autofill::RegExLogging"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8autofill11TravelField18AddClassificationsEPN4base8flat_mapINS_8internal8GlobalIdINS_15FieldRendererIdEEENS_15FieldCandidatesENSt3__14lessIvEENS8_6vectorINS8_4pairIS6_S7_EENS8_9allocatorISD_EEEEEE(%"class.autofill::TravelField"* nocapture readonly, %"class.base::flat_map"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.autofill::TravelField", %"class.autofill::TravelField"* %0, i64 0, i32 1
  %4 = load %"class.autofill::AutofillField"*, %"class.autofill::AutofillField"** %3, align 8
  %5 = load float, float* @_ZN8autofill9FormField22kBaseTravelParserScoreE, align 4
  tail call void @_ZN8autofill9FormField17AddClassificationEPKNS_13AutofillFieldENS_15ServerFieldTypeEfPN4base8flat_mapINS_8internal8GlobalIdINS_15FieldRendererIdEEENS_15FieldCandidatesENSt3__14lessIvEENSC_6vectorINSC_4pairISA_SB_EENSC_9allocatorISH_EEEEEE(%"class.autofill::AutofillField"* %4, i32 1, float %5, %"class.base::flat_map"* %1) #8
  %6 = getelementptr inbounds %"class.autofill::TravelField", %"class.autofill::TravelField"* %0, i64 0, i32 2
  %7 = load %"class.autofill::AutofillField"*, %"class.autofill::AutofillField"** %6, align 8
  tail call void @_ZN8autofill9FormField17AddClassificationEPKNS_13AutofillFieldENS_15ServerFieldTypeEfPN4base8flat_mapINS_8internal8GlobalIdINS_15FieldRendererIdEEENS_15FieldCandidatesENSt3__14lessIvEENSC_6vectorINSC_4pairISA_SB_EENSC_9allocatorISH_EEEEEE(%"class.autofill::AutofillField"* %7, i32 1, float %5, %"class.base::flat_map"* %1) #8
  %8 = getelementptr inbounds %"class.autofill::TravelField", %"class.autofill::TravelField"* %0, i64 0, i32 3
  %9 = load %"class.autofill::AutofillField"*, %"class.autofill::AutofillField"** %8, align 8
  tail call void @_ZN8autofill9FormField17AddClassificationEPKNS_13AutofillFieldENS_15ServerFieldTypeEfPN4base8flat_mapINS_8internal8GlobalIdINS_15FieldRendererIdEEENS_15FieldCandidatesENSt3__14lessIvEENSC_6vectorINSC_4pairISA_SB_EENSC_9allocatorISH_EEEEEE(%"class.autofill::AutofillField"* %9, i32 1, float %5, %"class.base::flat_map"* %1) #8
  %10 = getelementptr inbounds %"class.autofill::TravelField", %"class.autofill::TravelField"* %0, i64 0, i32 4
  %11 = load %"class.autofill::AutofillField"*, %"class.autofill::AutofillField"** %10, align 8
  tail call void @_ZN8autofill9FormField17AddClassificationEPKNS_13AutofillFieldENS_15ServerFieldTypeEfPN4base8flat_mapINS_8internal8GlobalIdINS_15FieldRendererIdEEENS_15FieldCandidatesENSt3__14lessIvEENSC_6vectorINSC_4pairISA_SB_EENSC_9allocatorISH_EEEEEE(%"class.autofill::AutofillField"* %11, i32 1, float %5, %"class.base::flat_map"* %1) #8
  ret void
}

declare void @_ZN8autofill9FormField17AddClassificationEPKNS_13AutofillFieldENS_15ServerFieldTypeEfPN4base8flat_mapINS_8internal8GlobalIdINS_15FieldRendererIdEEENS_15FieldCandidatesENSt3__14lessIvEENSC_6vectorINSC_4pairISA_SB_EENSC_9allocatorISH_EEEEEE(%"class.autofill::AutofillField"*, i32, float, %"class.base::flat_map"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind
declare void @_ZN8autofill15MatchingPatternD1Ev(%"struct.autofill::MatchingPattern"*) unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
