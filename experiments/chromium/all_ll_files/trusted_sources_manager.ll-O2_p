; ModuleID = '../../chrome/browser/download/trusted_sources_manager.cc'
source_filename = "../../chrome/browser/download/trusted_sources_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.TrustedSourcesManager = type { i32 (...)**, %"class.net::SchemeHostPortMatcher" }
%"class.net::SchemeHostPortMatcher" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.net::SchemeHostPortMatcherRule"* }
%"class.net::SchemeHostPortMatcherRule" = type { i32 (...)** }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::CommandLine" = type { %"class.std::__1::vector.1", %"class.std::__1::map", i64 }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.21" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %class.GURL* }

@_ZTV21TrustedSourcesManager = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.TrustedSourcesManager*)* @_ZN21TrustedSourcesManagerD2Ev to i8*), i8* bitcast (void (%class.TrustedSourcesManager*)* @_ZN21TrustedSourcesManagerD0Ev to i8*), i8* bitcast (i1 (%class.TrustedSourcesManager*, %class.GURL*)* @_ZNK21TrustedSourcesManager19IsFromTrustedSourceERK4GURL to i8*)] }, align 8
@_ZN8switches23kTrustedDownloadSourcesE = external constant [0 x i8], align 1

@_ZN21TrustedSourcesManagerC1Ev = hidden unnamed_addr alias void (%class.TrustedSourcesManager*), void (%class.TrustedSourcesManager*)* @_ZN21TrustedSourcesManagerC2Ev
@_ZN21TrustedSourcesManagerD1Ev = hidden unnamed_addr alias void (%class.TrustedSourcesManager*), void (%class.TrustedSourcesManager*)* @_ZN21TrustedSourcesManagerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21TrustedSourcesManagerC2Ev(%class.TrustedSourcesManager* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.net::SchemeHostPortMatcher", align 16
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %class.TrustedSourcesManager, %class.TrustedSourcesManager* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV21TrustedSourcesManager, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.TrustedSourcesManager, %class.TrustedSourcesManager* %0, i64 0, i32 1
  %6 = bitcast %"class.net::SchemeHostPortMatcher"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #5
  %7 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #5
  %8 = bitcast %"class.net::SchemeHostPortMatcher"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #5
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #5
  %10 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches23kTrustedDownloadSourcesE, i64 0, i64 0)) #5
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.base::CommandLine"* %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches23kTrustedDownloadSourcesE, i64 0, i64 0), i64 %10) #5
  call void @_ZN3net21SchemeHostPortMatcher13FromRawStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::SchemeHostPortMatcher"* nonnull sret %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #5
  %11 = getelementptr inbounds %"class.net::SchemeHostPortMatcher", %"class.net::SchemeHostPortMatcher"* %5, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %11, align 8
  %13 = icmp eq %"class.std::__1::unique_ptr"* %12, null
  br i1 %13, label %37, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.std::__1::unique_ptr"* %12 to i8*
  %16 = getelementptr inbounds %class.TrustedSourcesManager, %class.TrustedSourcesManager* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %18 = icmp eq %"class.std::__1::unique_ptr"* %17, %12
  br i1 %18, label %35, label %19

19:                                               ; preds = %14, %30
  %20 = phi %"class.std::__1::unique_ptr"* [ %21, %30 ], [ %17, %14 ]
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 -1
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.net::SchemeHostPortMatcherRule"*, %"class.net::SchemeHostPortMatcherRule"** %22, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %22, align 8
  %24 = icmp eq %"class.net::SchemeHostPortMatcherRule"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %19
  %26 = bitcast %"class.net::SchemeHostPortMatcherRule"* %23 to void (%"class.net::SchemeHostPortMatcherRule"*)***
  %27 = load void (%"class.net::SchemeHostPortMatcherRule"*)**, void (%"class.net::SchemeHostPortMatcherRule"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %27, i64 1
  %29 = load void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %28, align 8
  call void %29(%"class.net::SchemeHostPortMatcherRule"* nonnull %23) #5
  br label %30

30:                                               ; preds = %25, %19
  %31 = icmp eq %"class.std::__1::unique_ptr"* %21, %12
  br i1 %31, label %32, label %19

32:                                               ; preds = %30
  %33 = bitcast %"class.net::SchemeHostPortMatcher"* %5 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %14
  %36 = phi i8* [ %34, %32 ], [ %15, %14 ]
  store %"class.std::__1::unique_ptr"* %12, %"class.std::__1::unique_ptr"** %16, align 8
  call void @_ZdlPv(i8* %36) #6
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #5
  br label %37

37:                                               ; preds = %1, %35
  %38 = bitcast %"class.net::SchemeHostPortMatcher"* %2 to <2 x i64>*
  %39 = load <2 x i64>, <2 x i64>* %38, align 16
  %40 = bitcast %"class.net::SchemeHostPortMatcher"* %5 to <2 x i64>*
  store <2 x i64> %39, <2 x i64>* %40, align 8
  %41 = getelementptr inbounds %"class.net::SchemeHostPortMatcher", %"class.net::SchemeHostPortMatcher"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast %"class.std::__1::unique_ptr"** %41 to i64*
  %43 = load i64, i64* %42, align 16
  %44 = getelementptr inbounds %class.TrustedSourcesManager, %class.TrustedSourcesManager* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %45 = bitcast %"class.std::__1::unique_ptr"** %44 to i64*
  store i64 %43, i64* %45, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 0, i64 24, i1 false) #5
  %46 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %52) #6
  br label %53

53:                                               ; preds = %37, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #2

declare void @_ZN3net21SchemeHostPortMatcher13FromRawStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::SchemeHostPortMatcher"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, %"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21TrustedSourcesManagerD2Ev(%class.TrustedSourcesManager* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.TrustedSourcesManager, %class.TrustedSourcesManager* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV21TrustedSourcesManager, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.TrustedSourcesManager, %class.TrustedSourcesManager* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.net::SchemeHostPortMatcher", %"class.net::SchemeHostPortMatcher"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  %9 = getelementptr inbounds %class.TrustedSourcesManager, %class.TrustedSourcesManager* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.net::SchemeHostPortMatcherRule"*, %"class.net::SchemeHostPortMatcherRule"** %15, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %15, align 8
  %17 = icmp eq %"class.net::SchemeHostPortMatcherRule"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.net::SchemeHostPortMatcherRule"* %16 to void (%"class.net::SchemeHostPortMatcherRule"*)***
  %20 = load void (%"class.net::SchemeHostPortMatcherRule"*)**, void (%"class.net::SchemeHostPortMatcherRule"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %20, i64 1
  %22 = load void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %21, align 8
  tail call void %22(%"class.net::SchemeHostPortMatcherRule"* nonnull %16) #5
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.net::SchemeHostPortMatcher"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr"* %5, %"class.std::__1::unique_ptr"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #6
  br label %30

30:                                               ; preds = %1, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21TrustedSourcesManagerD0Ev(%class.TrustedSourcesManager*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.TrustedSourcesManager, %class.TrustedSourcesManager* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV21TrustedSourcesManager, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.TrustedSourcesManager, %class.TrustedSourcesManager* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.net::SchemeHostPortMatcher", %"class.net::SchemeHostPortMatcher"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  %9 = getelementptr inbounds %class.TrustedSourcesManager, %class.TrustedSourcesManager* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.net::SchemeHostPortMatcherRule"*, %"class.net::SchemeHostPortMatcherRule"** %15, align 8
  store %"class.net::SchemeHostPortMatcherRule"* null, %"class.net::SchemeHostPortMatcherRule"** %15, align 8
  %17 = icmp eq %"class.net::SchemeHostPortMatcherRule"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.net::SchemeHostPortMatcherRule"* %16 to void (%"class.net::SchemeHostPortMatcherRule"*)***
  %20 = load void (%"class.net::SchemeHostPortMatcherRule"*)**, void (%"class.net::SchemeHostPortMatcherRule"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %20, i64 1
  %22 = load void (%"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.net::SchemeHostPortMatcherRule"*)** %21, align 8
  tail call void %22(%"class.net::SchemeHostPortMatcherRule"* nonnull %16) #5
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.net::SchemeHostPortMatcher"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr"* %5, %"class.std::__1::unique_ptr"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #6
  br label %30

30:                                               ; preds = %1, %28
  %31 = bitcast %class.TrustedSourcesManager* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK21TrustedSourcesManager19IsFromTrustedSourceERK4GURL(%class.TrustedSourcesManager*, %class.GURL* dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.TrustedSourcesManager, %class.TrustedSourcesManager* %0, i64 0, i32 1
  %4 = tail call zeroext i1 @_ZNK3net21SchemeHostPortMatcher8IncludesERK4GURL(%"class.net::SchemeHostPortMatcher"* %3, %class.GURL* dereferenceable(120) %1) #5
  ret i1 %4
}

declare zeroext i1 @_ZNK3net21SchemeHostPortMatcher8IncludesERK4GURL(%"class.net::SchemeHostPortMatcher"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
