; ModuleID = '../../pdf/accessibility_helper.cc'
source_filename = "../../pdf/accessibility_helper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.chrome_pdf::AccessibilityTextRunInfo" = type { i32, %"class.gfx::RectF", i32, %"struct.chrome_pdf::AccessibilityTextStyleInfo" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"struct.chrome_pdf::AccessibilityTextStyleInfo" = type <{ %"class.std::__1::basic_string", i32, i32, float, i32, i32, i8, i8, [2 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.chrome_pdf::AccessibilityTextRunInfo"*, %"struct.chrome_pdf::AccessibilityTextRunInfo"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.chrome_pdf::AccessibilityTextRunInfo"* }

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN10chrome_pdf19IsCharWithinTextRunERKNS_24AccessibilityTextRunInfoEjj(%"struct.chrome_pdf::AccessibilityTextRunInfo"* nocapture readonly dereferenceable(72), i32, i32) local_unnamed_addr #0 {
  %4 = icmp ult i32 %2, %1
  br i1 %4, label %10, label %5

5:                                                ; preds = %3
  %6 = sub i32 %2, %1
  %7 = getelementptr inbounds %"struct.chrome_pdf::AccessibilityTextRunInfo", %"struct.chrome_pdf::AccessibilityTextRunInfo"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %6, %8
  br label %10

10:                                               ; preds = %3, %5
  %11 = phi i1 [ false, %3 ], [ %9, %5 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10chrome_pdf36GetEnclosingTextRunRangeForCharRangeERKNSt3__16vectorINS_24AccessibilityTextRunInfoENS0_9allocatorIS2_EEEEii(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), i32, i32) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.chrome_pdf::AccessibilityTextRunInfo"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 72
  %11 = trunc i64 %10 to i32
  %12 = icmp slt i32 %1, 0
  %13 = icmp slt i32 %2, 1
  %14 = or i1 %12, %13
  %15 = inttoptr i64 %8 to %"struct.chrome_pdf::AccessibilityTextRunInfo"*
  br i1 %14, label %62, label %16

16:                                               ; preds = %3
  %17 = add nsw i32 %2, -1
  %18 = zext i32 %17 to i33
  %19 = sext i32 %1 to i33
  %20 = add nuw nsw i33 %18, %19
  %21 = trunc i33 %20 to i32
  %22 = icmp sgt i33 %20, -1
  %23 = icmp ne i64 %9, 0
  %24 = and i1 %22, %23
  br i1 %24, label %25, label %62

25:                                               ; preds = %16, %54
  %26 = phi i32 [ %59, %54 ], [ 0, %16 ]
  %27 = phi i64 [ %60, %54 ], [ 0, %16 ]
  %28 = phi i8 [ %55, %54 ], [ 0, %16 ]
  %29 = phi i32 [ %56, %54 ], [ -1431655766, %16 ]
  %30 = icmp eq i8 %28, 0
  br i1 %30, label %31, label %40

31:                                               ; preds = %25
  %32 = icmp ugt i32 %26, %1
  br i1 %32, label %54, label %33

33:                                               ; preds = %31
  %34 = sub i32 %1, %26
  %35 = getelementptr inbounds %"struct.chrome_pdf::AccessibilityTextRunInfo", %"struct.chrome_pdf::AccessibilityTextRunInfo"* %15, i64 %27, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp ult i32 %34, %36
  br i1 %37, label %38, label %54

38:                                               ; preds = %33
  %39 = trunc i64 %27 to i32
  br label %40

40:                                               ; preds = %25, %38
  %41 = phi i32 [ %39, %38 ], [ %29, %25 ]
  %42 = phi i8 [ 1, %38 ], [ %28, %25 ]
  %43 = icmp ugt i32 %26, %21
  br i1 %43, label %54, label %44

44:                                               ; preds = %40
  %45 = sub i32 %21, %26
  %46 = getelementptr inbounds %"struct.chrome_pdf::AccessibilityTextRunInfo", %"struct.chrome_pdf::AccessibilityTextRunInfo"* %15, i64 %27, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = icmp ult i32 %45, %47
  br i1 %48, label %49, label %54

49:                                               ; preds = %44
  %50 = zext i32 %41 to i64
  %51 = sub i64 %27, %50
  %52 = shl i64 %51, 32
  %53 = add i64 %52, 4294967296
  br label %62

54:                                               ; preds = %40, %31, %33, %44
  %55 = phi i8 [ %42, %44 ], [ 0, %33 ], [ 0, %31 ], [ %42, %40 ]
  %56 = phi i32 [ %41, %44 ], [ %29, %33 ], [ %29, %31 ], [ %41, %40 ]
  %57 = getelementptr inbounds %"struct.chrome_pdf::AccessibilityTextRunInfo", %"struct.chrome_pdf::AccessibilityTextRunInfo"* %15, i64 %27, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = add i32 %58, %26
  %60 = add nuw i64 %27, 1
  %61 = icmp ult i64 %60, %10
  br i1 %61, label %25, label %62

62:                                               ; preds = %54, %16, %49, %3
  %63 = phi i32 [ %11, %3 ], [ %11, %16 ], [ %41, %49 ], [ %11, %54 ]
  %64 = phi i64 [ 0, %3 ], [ 0, %16 ], [ %53, %49 ], [ 0, %54 ]
  %65 = zext i32 %63 to i64
  %66 = or i64 %64, %65
  ret i64 %66
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
