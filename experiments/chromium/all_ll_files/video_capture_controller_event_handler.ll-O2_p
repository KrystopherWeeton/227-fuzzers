; ModuleID = '../../content/browser/renderer_host/media/video_capture_controller_event_handler.cc'
source_filename = "../../content/browser/renderer_host/media/video_capture_controller_event_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.content::ReadyBuffer" = type { i32, %"class.mojo::StructPtr" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.media::mojom::VideoFrameInfo"* }
%"class.media::mojom::VideoFrameInfo" = type { %"class.base::TimeDelta", %"struct.media::VideoFrameMetadata", i32, %"class.gfx::Size", %"class.gfx::Rect", i8, %"class.absl::optional.35", %"class.mojo::StructPtr.40" }
%"class.base::TimeDelta" = type { i64 }
%"struct.media::VideoFrameMetadata" = type { i8, %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.0", %"class.absl::optional.5", %"class.absl::optional.10", i8, %"class.absl::optional.15", %"class.absl::optional.20", i8, %"class.absl::optional", i8, [3 x i8], %"class.absl::optional.25", i8, i8, i8, i8, i32, %"class.absl::optional.30", i8, %"class.absl::optional.20", %"class.absl::optional.20", %"class.absl::optional.20", %"class.absl::optional.20", %"class.absl::optional.20", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.15", %"class.absl::optional.20", %"class.absl::optional", %"class.absl::optional.15", %"class.absl::optional.0" }
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { %"class.gfx::Rect" }
%"class.absl::optional.10" = type { %"class.absl::optional_internal::optional_data.11" }
%"class.absl::optional_internal::optional_data.11" = type { %"class.absl::optional_internal::optional_data_base.12" }
%"class.absl::optional_internal::optional_data_base.12" = type { %"class.absl::optional_internal::optional_data_dtor_base.13" }
%"class.absl::optional_internal::optional_data_dtor_base.13" = type { i8, %union.anon.14 }
%union.anon.14 = type { i32 }
%"class.absl::optional.25" = type { %"class.absl::optional_internal::optional_data.26" }
%"class.absl::optional_internal::optional_data.26" = type { %"class.absl::optional_internal::optional_data_base.27" }
%"class.absl::optional_internal::optional_data_base.27" = type { %"class.absl::optional_internal::optional_data_dtor_base.28" }
%"class.absl::optional_internal::optional_data_dtor_base.28" = type { i8, [3 x i8], %union.anon.29 }
%union.anon.29 = type { %"struct.media::VideoTransformation" }
%"struct.media::VideoTransformation" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.30" = type { %"class.absl::optional_internal::optional_data.31" }
%"class.absl::optional_internal::optional_data.31" = type { %"class.absl::optional_internal::optional_data_base.32" }
%"class.absl::optional_internal::optional_data_base.32" = type { %"class.absl::optional_internal::optional_data_dtor_base.33" }
%"class.absl::optional_internal::optional_data_dtor_base.33" = type { i8, %union.anon.34 }
%union.anon.34 = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.20" = type { %"class.absl::optional_internal::optional_data.21" }
%"class.absl::optional_internal::optional_data.21" = type { %"class.absl::optional_internal::optional_data_base.22" }
%"class.absl::optional_internal::optional_data_base.22" = type { %"class.absl::optional_internal::optional_data_dtor_base.23" }
%"class.absl::optional_internal::optional_data_dtor_base.23" = type { i8, %union.anon.24 }
%union.anon.24 = type { double }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.absl::optional.15" = type { %"class.absl::optional_internal::optional_data.16" }
%"class.absl::optional_internal::optional_data.16" = type { %"class.absl::optional_internal::optional_data_base.17" }
%"class.absl::optional_internal::optional_data_base.17" = type { %"class.absl::optional_internal::optional_data_dtor_base.18" }
%"class.absl::optional_internal::optional_data_dtor_base.18" = type { i8, %union.anon.19 }
%union.anon.19 = type { %"class.base::TimeDelta" }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.absl::optional.35" = type { %"class.absl::optional_internal::optional_data.36" }
%"class.absl::optional_internal::optional_data.36" = type { %"class.absl::optional_internal::optional_data_base.37" }
%"class.absl::optional_internal::optional_data_base.37" = type { %"class.absl::optional_internal::optional_data_dtor_base.38" }
%"class.absl::optional_internal::optional_data_dtor_base.38" = type { i8, %union.anon.39 }
%union.anon.39 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.mojo::StructPtr.40" = type { %"class.std::__1::unique_ptr.41" }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.media::mojom::PlaneStrides"* }
%"class.media::mojom::PlaneStrides" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { i32* }

@_ZN7content11ReadyBufferC1EiN4mojo9StructPtrIN5media5mojom14VideoFrameInfoEEE = hidden unnamed_addr alias void (%"struct.content::ReadyBuffer"*, i32, %"class.mojo::StructPtr"*), void (%"struct.content::ReadyBuffer"*, i32, %"class.mojo::StructPtr"*)* @_ZN7content11ReadyBufferC2EiN4mojo9StructPtrIN5media5mojom14VideoFrameInfoEEE
@_ZN7content11ReadyBufferC1EOS0_ = hidden unnamed_addr alias void (%"struct.content::ReadyBuffer"*, %"struct.content::ReadyBuffer"*), void (%"struct.content::ReadyBuffer"*, %"struct.content::ReadyBuffer"*)* @_ZN7content11ReadyBufferC2EOS0_
@_ZN7content11ReadyBufferD1Ev = hidden unnamed_addr alias void (%"struct.content::ReadyBuffer"*), void (%"struct.content::ReadyBuffer"*)* @_ZN7content11ReadyBufferD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7content11ReadyBufferC2EiN4mojo9StructPtrIN5media5mojom14VideoFrameInfoEEE(%"struct.content::ReadyBuffer"* nocapture, i32, %"class.mojo::StructPtr"* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.content::ReadyBuffer", %"struct.content::ReadyBuffer"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"struct.content::ReadyBuffer", %"struct.content::ReadyBuffer"* %0, i64 0, i32 1
  %6 = bitcast %"class.mojo::StructPtr"* %5 to i64*
  %7 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.media::mojom::VideoFrameInfo"* null, %"class.media::mojom::VideoFrameInfo"** %7, align 8
  %8 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %6, align 8
  store i64 0, i64* %8, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7content11ReadyBufferC2EOS0_(%"struct.content::ReadyBuffer"* nocapture, %"struct.content::ReadyBuffer"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.content::ReadyBuffer", %"struct.content::ReadyBuffer"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.content::ReadyBuffer", %"struct.content::ReadyBuffer"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"struct.content::ReadyBuffer", %"struct.content::ReadyBuffer"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.content::ReadyBuffer", %"struct.content::ReadyBuffer"* %1, i64 0, i32 1
  %8 = bitcast %"class.mojo::StructPtr"* %6 to i64*
  %9 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.media::mojom::VideoFrameInfo"* null, %"class.media::mojom::VideoFrameInfo"** %9, align 8
  %10 = bitcast %"class.mojo::StructPtr"* %7 to i64*
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %8, align 8
  store i64 0, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content11ReadyBufferD2Ev(%"struct.content::ReadyBuffer"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.content::ReadyBuffer", %"struct.content::ReadyBuffer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.media::mojom::VideoFrameInfo"*, %"class.media::mojom::VideoFrameInfo"** %2, align 8
  store %"class.media::mojom::VideoFrameInfo"* null, %"class.media::mojom::VideoFrameInfo"** %2, align 8
  %4 = icmp eq %"class.media::mojom::VideoFrameInfo"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN5media5mojom14VideoFrameInfoD1Ev(%"class.media::mojom::VideoFrameInfo"* nonnull %3) #4
  %6 = bitcast %"class.media::mojom::VideoFrameInfo"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #5
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"struct.content::ReadyBuffer"* @_ZN7content11ReadyBufferaSEOS0_(%"struct.content::ReadyBuffer"* returned, %"struct.content::ReadyBuffer"* nocapture dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.content::ReadyBuffer", %"struct.content::ReadyBuffer"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.content::ReadyBuffer", %"struct.content::ReadyBuffer"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.content::ReadyBuffer", %"struct.content::ReadyBuffer"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.content::ReadyBuffer", %"struct.content::ReadyBuffer"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.media::mojom::VideoFrameInfo"*, %"class.media::mojom::VideoFrameInfo"** %8, align 8
  store %"class.media::mojom::VideoFrameInfo"* null, %"class.media::mojom::VideoFrameInfo"** %8, align 8
  %10 = icmp eq %"class.media::mojom::VideoFrameInfo"* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = bitcast %"class.mojo::StructPtr"* %7 to i64*
  br label %17

13:                                               ; preds = %2
  tail call void @_ZN5media5mojom14VideoFrameInfoD1Ev(%"class.media::mojom::VideoFrameInfo"* nonnull %9) #4
  %14 = bitcast %"class.media::mojom::VideoFrameInfo"* %9 to i8*
  tail call void @_ZdlPv(i8* %14) #5
  %15 = bitcast %"class.mojo::StructPtr"* %7 to i64*
  %16 = load i64, i64* %15, align 8
  br label %17

17:                                               ; preds = %11, %13
  %18 = phi i64* [ %12, %11 ], [ %15, %13 ]
  %19 = phi i64 [ 0, %11 ], [ %16, %13 ]
  %20 = bitcast %"class.mojo::StructPtr"* %6 to i64*
  %21 = load i64, i64* %20, align 8
  store i64 %21, i64* %18, align 8
  store i64 %19, i64* %20, align 8
  ret %"struct.content::ReadyBuffer"* %0
}

; Function Attrs: nounwind
declare void @_ZN5media5mojom14VideoFrameInfoD1Ev(%"class.media::mojom::VideoFrameInfo"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
