; ModuleID = '../../third_party/blink/renderer/core/animation/css_custom_list_interpolation_type.cc'
source_filename = "../../third_party/blink/renderer/core/animation/css_custom_list_interpolation_type.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.128", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.144", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.162", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.169", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.113", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl.36" }
%"struct.std::__1::__cxx_atomic_impl.36" = type { %"struct.std::__1::__cxx_atomic_base_impl.37" }
%"struct.std::__1::__cxx_atomic_base_impl.37" = type { i64 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::Worklist.44"* }
%"class.blink::Worklist.44" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::Worklist.51"* }
%"class.blink::Worklist.51" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::Worklist.58"* }
%"class.blink::Worklist.58" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::Worklist.65"* }
%"class.blink::Worklist.65" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::Worklist.72"* }
%"class.blink::Worklist.72" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::Worklist.79"* }
%"class.blink::Worklist.79" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::Worklist.86"* }
%"class.blink::Worklist.86" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.100", %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.107", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { i64 }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { float }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.116", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.136" }
%"class.WTF::VectorBuffer.136" = type { %"class.WTF::VectorBufferBase.137" }
%"class.WTF::VectorBufferBase.137" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.150" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.44"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.51"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.58"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.65"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.72"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.179" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.168 }
%class.scoped_refptr.168 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.169" = type { %"struct.std::__1::__atomic_base.170" }
%"struct.std::__1::__atomic_base.170" = type { %"struct.std::__1::__cxx_atomic_impl.171" }
%"struct.std::__1::__cxx_atomic_impl.171" = type { %"struct.std::__1::__cxx_atomic_base_impl.172" }
%"struct.std::__1::__cxx_atomic_base_impl.172" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.286" }
%"struct.std::__1::atomic.286" = type { %"struct.std::__1::__atomic_base.287" }
%"struct.std::__1::__atomic_base.287" = type { %"struct.std::__1::__atomic_base.288" }
%"struct.std::__1::__atomic_base.288" = type { %"struct.std::__1::__cxx_atomic_impl.289" }
%"struct.std::__1::__cxx_atomic_impl.289" = type { %"struct.std::__1::__cxx_atomic_base_impl.290" }
%"struct.std::__1::__cxx_atomic_base_impl.290" = type { i32 }
%"class.blink::CSSCustomListInterpolationType" = type <{ %"class.blink::CSSInterpolationType", %"class.std::__1::unique_ptr.173", i32, [4 x i8] }>
%"class.blink::CSSInterpolationType" = type { %"class.blink::InterpolationType", %"class.blink::WeakPersistent" }
%"class.blink::InterpolationType" = type { i32 (...)**, %"class.blink::PropertyHandle" }
%"class.blink::PropertyHandle" = type { i32, %union.anon, %"class.WTF::AtomicString" }
%union.anon = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::PropertyRegistration"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PropertyRegistration" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::CSSInterpolationType"* }
%"struct.blink::InterpolationValue" = type { %"class.std::__1::unique_ptr.184", %class.scoped_refptr.190 }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::InterpolableValue"* }
%"class.blink::InterpolableValue" = type { i32 (...)** }
%class.scoped_refptr.190 = type { %"class.blink::NonInterpolableValue"* }
%"class.blink::NonInterpolableValue" = type <{ i32 (...)**, %"class.WTF::RefCounted.191", [4 x i8] }>
%"class.WTF::RefCounted.191" = type { %"class.base::RefCounted.192" }
%"class.base::RefCounted.192" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.193" = type { %"class.WTF::VectorBuffer.194" }
%"class.WTF::VectorBuffer.194" = type { %"class.WTF::VectorBufferBase.195" }
%"class.WTF::VectorBufferBase.195" = type { %"class.std::__1::unique_ptr.196"*, i32, i32 }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.985" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.986" }
%"struct.std::__1::__compressed_pair_elem.986" = type { %"class.blink::InterpolationType::ConversionChecker"* }
%"class.blink::InterpolationType::ConversionChecker" = type { i32 (...)**, %"class.blink::InterpolationType"* }
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %class.scoped_refptr.190*, i32, i32 }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::UnderlyingLengthChecker"* }
%"class.blink::UnderlyingLengthChecker" = type <{ %"class.blink::InterpolationType::ConversionChecker", i32, [4 x i8] }>
%"class.blink::InterpolableList" = type { %"class.blink::InterpolableValue", %"class.WTF::Vector.937" }
%"class.WTF::Vector.937" = type { %"class.WTF::VectorBuffer.938" }
%"class.WTF::VectorBuffer.938" = type { %"class.WTF::VectorBufferBase.939" }
%"class.WTF::VectorBufferBase.939" = type { %"class.std::__1::unique_ptr.184"*, i32, i32 }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::StyleResolverState" = type <{ %"class.blink::ElementResolveContext", %"class.blink::Document"*, %class.scoped_refptr.556, %"class.blink::CSSToLengthConversionData", %class.scoped_refptr.231, %class.scoped_refptr.231, %"class.blink::CSSAnimationUpdate", i32, [4 x i8], %"class.blink::FontBuilder", %"class.blink::PseudoElement"*, %"class.blink::ElementStyleResources", i32, i8, i8, [2 x i8] }>
%"class.blink::ElementResolveContext" = type <{ %"class.blink::Element"*, %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"*, %class.scoped_refptr.231, i32, [4 x i8] }>
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.213" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.207", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.209" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.207" = type { %"class.blink::MemberBase.208" }
%"class.blink::MemberBase.208" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.232", %"class.blink::Member.234", %"class.blink::Member.207", %"class.blink::Member.236", %"class.blink::Member.236", %"class.blink::Member.255", %"class.blink::Member.257", %"class.blink::Member.259", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.264", %"class.blink::HeapVector.266" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.232" = type { %"class.blink::MemberBase.233" }
%"class.blink::MemberBase.233" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.234" = type { %"class.blink::MemberBase.235" }
%"class.blink::MemberBase.235" = type { %"class.blink::Document"* }
%"class.blink::Member.236" = type { %"class.blink::MemberBase.237" }
%"class.blink::MemberBase.237" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.243" }
%"class.blink::Member.243" = type { %"class.blink::MemberBase.244" }
%"class.blink::MemberBase.244" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.247", i32, %"class.blink::HeapVector" }
%"class.blink::Member.247" = type { %"class.blink::MemberBase.248" }
%"class.blink::MemberBase.248" = type { %"class.blink::Element"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.251" }
%"class.WTF::Vector.251" = type { %"class.WTF::VectorBuffer.252" }
%"class.WTF::VectorBuffer.252" = type { %"class.WTF::VectorBufferBase.253" }
%"class.WTF::VectorBufferBase.253" = type { %"class.blink::Member.247"*, i32, i32 }
%"class.blink::Member.255" = type { %"class.blink::MemberBase.256" }
%"class.blink::MemberBase.256" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.257" = type { %"class.blink::MemberBase.258" }
%"class.blink::MemberBase.258" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.259" = type { %"class.blink::MemberBase.260" }
%"class.blink::MemberBase.260" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.261" }
%"class.blink::Member.261" = type { %"class.blink::MemberBase.262" }
%"class.blink::MemberBase.262" = type { %"class.blink::HeapHashMap.263"* }
%"class.blink::HeapHashMap.263" = type opaque
%"class.blink::Member.264" = type { %"class.blink::MemberBase.265" }
%"class.blink::MemberBase.265" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.266" = type { %"class.WTF::Vector.269" }
%"class.WTF::Vector.269" = type { %"class.WTF::VectorBuffer.270" }
%"class.WTF::VectorBuffer.270" = type { %"class.WTF::VectorBufferBase.271" }
%"class.WTF::VectorBufferBase.271" = type { %"class.blink::Member.272"*, i32, i32 }
%"class.blink::Member.272" = type { %"class.blink::MemberBase.273" }
%"class.blink::MemberBase.273" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::Member.209" = type { %"class.blink::MemberBase.210" }
%"class.blink::MemberBase.210" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.213" = type { %"class.blink::MemberBase.214" }
%"class.blink::MemberBase.214" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.217", %"class.blink::Member.219", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.217" = type { %"class.WTF::SingleThreadedBitField.218" }
%"class.WTF::SingleThreadedBitField.218" = type { i32 }
%"class.blink::Member.219" = type { %"class.blink::MemberBase.220" }
%"class.blink::MemberBase.220" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.223 }
%class.scoped_refptr.223 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.224", %"class.WTF::AtomicString", %"class.WTF::Vector.226" }
%"class.WTF::RefCounted.224" = type { %"class.base::RefCounted.225" }
%"class.base::RefCounted.225" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.226" = type { %"class.WTF::VectorBuffer.227" }
%"class.WTF::VectorBuffer.227" = type { %"class.WTF::VectorBufferBase.228", [32 x i8] }
%"class.WTF::VectorBufferBase.228" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.282", %"class.WTF::Vector.282", i8, i32, %"class.blink::Member.293", %"class.blink::Member.295", %"class.blink::Member.297", %"class.blink::Member.299", %"class.blink::Member.301", %"class.blink::Member.303", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.311", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.317", %"class.blink::Member.319", %"class.blink::Member.272", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.322", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.247", %"class.blink::Member.352", %"class.blink::Member.247", %"class.blink::Member.247", %"class.blink::Member.247", %"class.blink::UserActionElementSet", %"class.blink::Member.361", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.368", i16, i8, %"class.blink::Member.375", %"class.blink::Member.377", %"class.blink::Member.379", %"class.blink::Member.381", %"class.blink::TextLinkColors", %"class.blink::Member.383", i8, [7 x i8], %"class.blink::HeapHashMap.385", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.247", %"class.WTF::Vector.392", %"class.blink::Member.397", %"class.blink::Member.399", i8, %"class.blink::Member.247", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.401", %"class.blink::HeapVector.403", %"class.std::__1::unique_ptr.411", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.417", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.430", %"class.WTF::Vector.432", i8, i8, %"class.std::__1::unique_ptr.437", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.443", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.451", i8, i32, %"class.blink::Member.453", %"class.blink::Member.455", %"class.blink::Member.457", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.459", %"class.WTF::HashMap.461", %"class.blink::Member.466", %"class.blink::Member.468", %"class.blink::Member.470", %"class.blink::Member.472", %"class.blink::Member.234", %"class.blink::Member.234", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.474", i8, i32, %"class.blink::Member.481", %"class.blink::Member.483", i32, %"class.blink::Member.485", %"class.blink::Member.487", %"class.blink::Member.489", %"class.std::__1::unique_ptr.491", i64, %"class.std::__1::unique_ptr.497", i32, i32, %"class.blink::Member.503", %"class.blink::Member.505", %"class.blink::Member.507", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.509", %"class.WTF::Vector.511", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.516", %"class.blink::Member.523", %"class.std::__1::unique_ptr.525", %"class.blink::Member.531", i8, i8, %"class.WTF::String", %"class.blink::Member.533", i8, [7 x i8], %"class.blink::HeapHashMap.535", %"class.blink::HeapObserverSet", %"class.blink::Member.549", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.551", i32, i8, i8, %"class.blink::WeakMember.553", %"class.blink::Member.554" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.275" }
%"class.blink::HeapHashMap.275" = type { %"class.WTF::HashMap.278" }
%"class.WTF::HashMap.278" = type { %"class.WTF::HashTable.279" }
%"class.WTF::HashTable.279" = type <{ %"struct.WTF::KeyValuePair.281"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.281" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.282" = type { %"class.WTF::VectorBuffer.283" }
%"class.WTF::VectorBuffer.283" = type { %"class.WTF::VectorBufferBase.284" }
%"class.WTF::VectorBufferBase.284" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.285 }
%class.scoped_refptr.285 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.286" }
%"class.blink::Member.293" = type { %"class.blink::MemberBase.294" }
%"class.blink::MemberBase.294" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.295" = type { %"class.blink::MemberBase.296" }
%"class.blink::MemberBase.296" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.862", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.895", i32, i8, [3 x i8], %"class.blink::HeapVector.897", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.905", %"class.blink::Member.907", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.916", %"class.blink::Member.922", %"class.blink::Member.924", i8, [7 x i8] }>
%"class.blink::Supplementable.862" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.863" }
%"class.blink::HeapHashMap.863" = type { %"class.WTF::HashMap.866" }
%"class.WTF::HashMap.866" = type { %"class.WTF::HashTable.867" }
%"class.WTF::HashTable.867" = type <{ %"struct.WTF::KeyValuePair.869"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.869" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.870" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.820" }
%"class.blink::HeapObserverSet.820" = type { i32, [4 x i8], %"class.blink::HeapHashSet.821" }
%"class.blink::HeapHashSet.821" = type { %"class.WTF::HashSet.824" }
%"class.WTF::HashSet.824" = type { %"class.WTF::HashTable.825" }
%"class.WTF::HashTable.825" = type <{ %"class.blink::WeakMember.827"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.827" = type opaque
%"class.blink::Supplementable.870" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.871" }
%"class.blink::HeapHashMap.871" = type { %"class.WTF::HashMap.874" }
%"class.WTF::HashMap.874" = type { %"class.WTF::HashTable.875" }
%"class.WTF::HashTable.875" = type <{ %"struct.WTF::KeyValuePair.877"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.877" = type { i8*, %"class.blink::Member.951" }
%"class.blink::Member.951" = type { %"class.blink::MemberBase.952" }
%"class.blink::MemberBase.952" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.953" }
%"class.blink::Member.953" = type { %"class.blink::MemberBase.954" }
%"class.blink::MemberBase.954" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.878, %"class.std::__1::unique_ptr.879", %"class.std::__1::unique_ptr.879", %"class.std::__1::unique_ptr.885", %"class.std::__1::unique_ptr.885", %"class.blink::Member.295", i32, [4 x i8], %"class.WTF::HashSet.891", i32, i32 }
%class.scoped_refptr.878 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.879" = type { %"class.std::__1::__compressed_pair.880" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.885" = type { %"class.std::__1::__compressed_pair.886" }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.887" }
%"struct.std::__1::__compressed_pair_elem.887" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.891" = type { %"class.WTF::HashTable.892" }
%"class.WTF::HashTable.892" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.895" = type { %"class.blink::MemberBase.896" }
%"class.blink::MemberBase.896" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.897" = type { %"class.WTF::Vector.900" }
%"class.WTF::Vector.900" = type { %"class.WTF::VectorBuffer.901" }
%"class.WTF::VectorBuffer.901" = type { %"class.WTF::VectorBufferBase.902" }
%"class.WTF::VectorBufferBase.902" = type { %"class.blink::Member.903"*, i32, i32 }
%"class.blink::Member.903" = type opaque
%"class.blink::Member.905" = type { %"class.blink::MemberBase.906" }
%"class.blink::MemberBase.906" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.907" = type { %"class.blink::MemberBase.908" }
%"class.blink::MemberBase.908" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.909", i32, i32 }
%"class.blink::HeapHashMap.909" = type { %"class.WTF::HashMap.912" }
%"class.WTF::HashMap.912" = type { %"class.WTF::HashTable.913" }
%"class.WTF::HashTable.913" = type <{ %"struct.WTF::KeyValuePair.915"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.915" = type opaque
%"class.std::__1::unique_ptr.916" = type { %"class.std::__1::__compressed_pair.917" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.918" }
%"struct.std::__1::__compressed_pair_elem.918" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.922" = type { %"class.blink::MemberBase.923" }
%"class.blink::MemberBase.923" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.924" = type { %"class.blink::MemberBase.925" }
%"class.blink::MemberBase.925" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.297" = type { %"class.blink::MemberBase.298" }
%"class.blink::MemberBase.298" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.299" = type { %"class.blink::MemberBase.300" }
%"class.blink::MemberBase.300" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.301" = type { %"class.blink::MemberBase.302" }
%"class.blink::MemberBase.302" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.303" = type { %"class.blink::MemberBase.304" }
%"class.blink::MemberBase.304" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.305" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.blink::KURL"* }
%"class.blink::Member.317" = type { %"class.blink::MemberBase.318" }
%"class.blink::MemberBase.318" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.319" = type { %"class.blink::MemberBase.320" }
%"class.blink::MemberBase.320" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.321 }
%class.scoped_refptr.321 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.322" = type { %"class.WTF::VectorBuffer.323" }
%"class.WTF::VectorBuffer.323" = type { %"class.WTF::VectorBufferBase.324" }
%"class.WTF::VectorBufferBase.324" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.325 }
%class.scoped_refptr.325 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.326", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.326" = type { %"class.base::RefCounted.327" }
%"class.base::RefCounted.327" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.328" }
%"class.blink::PersistentBase.328" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.339" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.331" }
%"class.blink::HeapHashMap.331" = type { %"class.WTF::HashMap.334" }
%"class.WTF::HashMap.334" = type { %"class.WTF::HashTable.335" }
%"class.WTF::HashTable.335" = type <{ %"struct.WTF::KeyValuePair.337"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.337" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.338" }
%"class.blink::MemberBase.338" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.339" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.352" = type { %"class.blink::MemberBase.353" }
%"class.blink::MemberBase.353" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.354" }
%"class.blink::HeapHashMap.354" = type { %"class.WTF::HashMap.357" }
%"class.WTF::HashMap.357" = type { %"class.WTF::HashTable.358" }
%"class.WTF::HashTable.358" = type <{ %"struct.WTF::KeyValuePair.360"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.360" = type opaque
%"class.blink::Member.361" = type { %"class.blink::MemberBase.362" }
%"class.blink::MemberBase.362" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.365" }
%"class.WTF::HashTable.365" = type <{ %"class.blink::WeakMember.367"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.367" = type opaque
%"class.blink::HeapHashSet.368" = type { %"class.WTF::HashSet.371" }
%"class.WTF::HashSet.371" = type { %"class.WTF::HashTable.372" }
%"class.WTF::HashTable.372" = type <{ %"class.blink::WeakMember.374"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.374" = type opaque
%"class.blink::Member.375" = type { %"class.blink::MemberBase.376" }
%"class.blink::MemberBase.376" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.377" = type { %"class.blink::MemberBase.378" }
%"class.blink::MemberBase.378" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.379" = type { %"class.blink::MemberBase.380" }
%"class.blink::MemberBase.380" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.383" = type { %"class.blink::MemberBase.384" }
%"class.blink::MemberBase.384" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.385" = type { %"class.WTF::HashMap.388" }
%"class.WTF::HashMap.388" = type { %"class.WTF::HashTable.389" }
%"class.WTF::HashTable.389" = type <{ %"struct.WTF::KeyValuePair.391"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.391" = type opaque
%"class.WTF::Vector.392" = type { %"class.WTF::VectorBuffer.393" }
%"class.WTF::VectorBuffer.393" = type { %"class.WTF::VectorBufferBase.394" }
%"class.WTF::VectorBufferBase.394" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.397" = type { %"class.blink::MemberBase.398" }
%"class.blink::MemberBase.398" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.399" = type { %"class.blink::MemberBase.400" }
%"class.blink::MemberBase.400" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.401" = type { %"class.blink::MemberBase.402" }
%"class.blink::MemberBase.402" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.403" = type { %"class.WTF::Vector.406" }
%"class.WTF::Vector.406" = type { %"class.WTF::VectorBuffer.407" }
%"class.WTF::VectorBuffer.407" = type { %"class.WTF::VectorBufferBase.408" }
%"class.WTF::VectorBufferBase.408" = type { %"class.blink::Member.409"*, i32, i32 }
%"class.blink::Member.409" = type opaque
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.417" = type { %"class.WTF::HashSet.420" }
%"class.WTF::HashSet.420" = type { %"class.WTF::HashTable.421" }
%"class.WTF::HashTable.421" = type <{ %"class.blink::WeakMember.423"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.423" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.424", i32, [4 x i8] }>
%"class.WTF::Vector.424" = type { %"class.WTF::VectorBuffer.425" }
%"class.WTF::VectorBuffer.425" = type { %"class.WTF::VectorBufferBase.426" }
%"class.WTF::VectorBufferBase.426" = type { %"struct.std::__1::pair.427"*, i32, i32 }
%"struct.std::__1::pair.427" = type opaque
%"class.blink::Member.430" = type { %"class.blink::MemberBase.431" }
%"class.blink::MemberBase.431" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.432" = type { %"class.WTF::VectorBuffer.433" }
%"class.WTF::VectorBuffer.433" = type { %"class.WTF::VectorBufferBase.434" }
%"class.WTF::VectorBufferBase.434" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.443" = type { %"class.WTF::Vector.446" }
%"class.WTF::Vector.446" = type { %"class.WTF::VectorBuffer.447" }
%"class.WTF::VectorBuffer.447" = type { %"class.WTF::VectorBufferBase.448" }
%"class.WTF::VectorBufferBase.448" = type { %"class.blink::Member.449"*, i32, i32 }
%"class.blink::Member.449" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.234" }
%"class.blink::Member.451" = type { %"class.blink::MemberBase.452" }
%"class.blink::MemberBase.452" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.461" = type { %"class.WTF::HashTable.462" }
%"class.WTF::HashTable.462" = type <{ %"struct.WTF::KeyValuePair.465"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.465" = type opaque
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.351", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.342, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.342 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.343" }>
%"class.base::RefCountedThreadSafe.343" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.344 }
%class.scoped_refptr.344 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.345", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.345" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.346" }
%"struct.std::__1::atomic.346" = type { %"struct.std::__1::__atomic_base.347" }
%"struct.std::__1::__atomic_base.347" = type { %"struct.std::__1::__atomic_base.348" }
%"struct.std::__1::__atomic_base.348" = type { %"struct.std::__1::__cxx_atomic_impl.349" }
%"struct.std::__1::__cxx_atomic_impl.349" = type { %"struct.std::__1::__cxx_atomic_base_impl.350" }
%"struct.std::__1::__cxx_atomic_base_impl.350" = type { i8 }
%"class.blink::WeakMember.351" = type { %"class.blink::MemberBase.235" }
%"class.blink::HeapHashSet.474" = type { %"class.WTF::HashSet.477" }
%"class.WTF::HashSet.477" = type { %"class.WTF::HashTable.478" }
%"class.WTF::HashTable.478" = type <{ %"class.blink::Member.480"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.480" = type opaque
%"class.blink::Member.481" = type { %"class.blink::MemberBase.482" }
%"class.blink::MemberBase.482" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.485" = type { %"class.blink::MemberBase.486" }
%"class.blink::MemberBase.486" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.487" = type { %"class.blink::MemberBase.488" }
%"class.blink::MemberBase.488" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.489" = type { %"class.blink::MemberBase.490" }
%"class.blink::MemberBase.490" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.491" = type { %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.497" = type { %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.509" = type { %"class.blink::MemberBase.510" }
%"class.blink::MemberBase.510" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.511" = type { %"class.WTF::VectorBuffer.512" }
%"class.WTF::VectorBuffer.512" = type { %"class.WTF::VectorBufferBase.513" }
%"class.WTF::VectorBufferBase.513" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.516" = type { %"class.WTF::HashMap.519" }
%"class.WTF::HashMap.519" = type { %"class.WTF::HashTable.520" }
%"class.WTF::HashTable.520" = type <{ %"struct.WTF::KeyValuePair.522"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.522" = type opaque
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.525" = type { %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.531" = type { %"class.blink::MemberBase.532" }
%"class.blink::MemberBase.532" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.533" = type { %"class.blink::MemberBase.534" }
%"class.blink::MemberBase.534" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.535" = type { %"class.WTF::HashMap.538" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.541"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.541" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.542" }
%"class.blink::HeapHashSet.542" = type { %"class.WTF::HashSet.545" }
%"class.WTF::HashSet.545" = type { %"class.WTF::HashTable.546" }
%"class.WTF::HashTable.546" = type <{ %"class.blink::WeakMember.548"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.548" = type opaque
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.551" = type { %"class.blink::MemberBase.552" }
%"class.blink::MemberBase.552" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.234", %"class.blink::HeapHashSet.853", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.860", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.853" = type { %"class.WTF::HashSet.856" }
%"class.WTF::HashSet.856" = type { %"class.WTF::HashTable.857" }
%"class.WTF::HashTable.857" = type <{ %"class.blink::Member.859"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.859" = type opaque
%"class.blink::HeapTaskRunnerTimer.860" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.861", { i64, i64 } }
%"class.blink::WeakMember.861" = type { %"class.blink::MemberBase.552" }
%"class.blink::WeakMember.553" = type { %"class.blink::MemberBase" }
%"class.blink::Member.554" = type { %"class.blink::MemberBase.555" }
%"class.blink::MemberBase.555" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%class.scoped_refptr.556 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type opaque
%"class.blink::CSSToLengthConversionData" = type <{ %"class.blink::ComputedStyle"*, %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::ViewportSize", float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::FontSizes" = type <{ float, float, %"class.blink::Font"*, float, [4 x i8] }>
%"class.blink::Font" = type opaque
%"class.blink::CSSToLengthConversionData::ViewportSize" = type { %"class.blink::DoubleSize" }
%"class.blink::DoubleSize" = type { double, double }
%class.scoped_refptr.231 = type { %"class.blink::ComputedStyle"* }
%"class.blink::CSSAnimationUpdate" = type { %"class.blink::HeapVector.557", %"class.WTF::Vector.715", %"class.blink::HeapHashSet.720", %"class.WTF::Vector.715", %"class.blink::HeapVector.727", %"class.blink::HeapVector.734", %"class.blink::HeapHashMap.741", %"class.WTF::HashSet.748", %"class.WTF::HashSet.748", %"class.blink::HeapHashMap.752", %"class.blink::HeapHashMap.752", %"class.blink::HeapHashMap.752", %"class.blink::HeapHashMap.752" }
%"class.blink::HeapVector.557" = type { %"class.WTF::Vector.560" }
%"class.WTF::Vector.560" = type { %"class.WTF::VectorBuffer.561" }
%"class.WTF::VectorBuffer.561" = type { %"class.WTF::VectorBufferBase.562" }
%"class.WTF::VectorBufferBase.562" = type { %"class.blink::NewCSSAnimation"*, i32, i32 }
%"class.blink::NewCSSAnimation" = type { %"class.WTF::AtomicString", i64, i64, %"class.blink::Member.563", %"struct.blink::Timing", %"class.blink::Member.637", i32, %"class.blink::Member.649", %"class.WTF::Vector.709" }
%"class.blink::Member.563" = type { %"class.blink::MemberBase.564" }
%"class.blink::MemberBase.564" = type { %"class.blink::InertEffect"* }
%"class.blink::InertEffect" = type { %"class.blink::AnimationEffect", %"class.blink::Member.584", i8, %"class.absl::optional", %"class.absl::optional.632" }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.565", %"struct.blink::Timing", %"class.blink::Member.570", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional", %"class.absl::optional.579", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member.565" = type { %"class.blink::MemberBase.566" }
%"class.blink::MemberBase.566" = type { %"class.blink::AnimationEffectOwner"* }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.570" = type { %"class.blink::MemberBase.571" }
%"class.blink::MemberBase.571" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional.574", %"class.absl::optional.574", i8, i8, i8, %"class.absl::optional", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.574" = type { %"class.absl::optional_internal::optional_data.575" }
%"class.absl::optional_internal::optional_data.575" = type { %"class.absl::optional_internal::optional_data_base.576" }
%"class.absl::optional_internal::optional_data_base.576" = type { %"class.absl::optional_internal::optional_data_dtor_base.577" }
%"class.absl::optional_internal::optional_data_dtor_base.577" = type { i8, %union.anon.578 }
%union.anon.578 = type { double }
%"class.absl::optional.579" = type { %"class.absl::optional_internal::optional_data.580" }
%"class.absl::optional_internal::optional_data.580" = type { %"class.absl::optional_internal::optional_data_base.581" }
%"class.absl::optional_internal::optional_data_base.581" = type { %"class.absl::optional_internal::optional_data_dtor_base.582" }
%"class.absl::optional_internal::optional_data_dtor_base.582" = type { i8, %union.anon.583 }
%union.anon.583 = type { i32 }
%"class.blink::AnimationTimeDelta" = type { double }
%"class.blink::Member.584" = type { %"class.blink::MemberBase.585" }
%"class.blink::MemberBase.585" = type { %"class.blink::KeyframeEffectModelBase"* }
%"class.blink::KeyframeEffectModelBase" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector.588", %"class.blink::Member.596", %"class.blink::Member.620", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr.568, i8, i8, i8, [5 x i8] }>
%"class.blink::EffectModel" = type { i32 (...)** }
%"class.blink::HeapVector.588" = type { %"class.WTF::Vector.591" }
%"class.WTF::Vector.591" = type { %"class.WTF::VectorBuffer.592" }
%"class.WTF::VectorBuffer.592" = type { %"class.WTF::VectorBufferBase.593" }
%"class.WTF::VectorBufferBase.593" = type { %"class.blink::Member.594"*, i32, i32 }
%"class.blink::Member.594" = type { %"class.blink::MemberBase.962" }
%"class.blink::MemberBase.962" = type { %"class.blink::Keyframe"* }
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional.574", %"class.absl::optional.965", %class.scoped_refptr.568 }
%"class.absl::optional.965" = type { %"class.absl::optional_internal::optional_data.966" }
%"class.absl::optional_internal::optional_data.966" = type { %"class.absl::optional_internal::optional_data_base.967" }
%"class.absl::optional_internal::optional_data_base.967" = type { %"class.absl::optional_internal::optional_data_dtor_base.968" }
%"class.absl::optional_internal::optional_data_dtor_base.968" = type { i8, %union.anon.969 }
%union.anon.969 = type { i32 }
%"class.blink::Member.596" = type { %"class.blink::MemberBase.597" }
%"class.blink::MemberBase.597" = type { %"class.blink::HeapHashMap.598"* }
%"class.blink::HeapHashMap.598" = type { %"class.WTF::HashMap.601" }
%"class.WTF::HashMap.601" = type { %"class.WTF::HashTable.602" }
%"class.WTF::HashTable.602" = type <{ %"struct.WTF::KeyValuePair.604"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.604" = type { %"class.blink::PropertyHandle", %"class.blink::Member.605" }
%"class.blink::Member.605" = type { %"class.blink::MemberBase.606" }
%"class.blink::MemberBase.606" = type { %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* }
%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup" = type { %"class.blink::HeapVector.609" }
%"class.blink::HeapVector.609" = type { %"class.WTF::Vector.612" }
%"class.WTF::Vector.612" = type { %"class.WTF::VectorBuffer.613" }
%"class.WTF::VectorBuffer.613" = type { %"class.WTF::VectorBufferBase.614" }
%"class.WTF::VectorBufferBase.614" = type { %"class.blink::Member.615"*, i32, i32 }
%"class.blink::Member.615" = type { %"class.blink::MemberBase.616" }
%"class.blink::MemberBase.616" = type { %"class.blink::Keyframe::PropertySpecificKeyframe"* }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr.568, i32, [4 x i8] }>
%"class.blink::Member.620" = type { %"class.blink::MemberBase.621" }
%"class.blink::MemberBase.621" = type { %"class.blink::InterpolationEffect"* }
%"class.blink::InterpolationEffect" = type { i8, %"class.blink::HeapVector.624" }
%"class.blink::HeapVector.624" = type { %"class.WTF::Vector.627" }
%"class.WTF::Vector.627" = type { %"class.WTF::VectorBuffer.628" }
%"class.WTF::VectorBuffer.628" = type { %"class.WTF::VectorBufferBase.629" }
%"class.WTF::VectorBufferBase.629" = type { %"class.blink::Member.630"*, i32, i32 }
%"class.blink::Member.630" = type { %"class.blink::MemberBase.955" }
%"class.blink::MemberBase.955" = type { %"class.blink::InterpolationEffect::InterpolationRecord"* }
%"class.blink::InterpolationEffect::InterpolationRecord" = type { %"class.blink::Member.958", %class.scoped_refptr.568, double, double, double, double }
%"class.blink::Member.958" = type { %"class.blink::MemberBase.959" }
%"class.blink::MemberBase.959" = type { %"class.blink::Interpolation"* }
%"class.blink::Interpolation" = type { i32 (...)** }
%class.scoped_refptr.568 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.569" }
%"class.base::RefCountedThreadSafe.569" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.567 }
%union.anon.567 = type { %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.632" = type { %"class.absl::optional_internal::optional_data.633" }
%"class.absl::optional_internal::optional_data.633" = type { %"class.absl::optional_internal::optional_data_base.634" }
%"class.absl::optional_internal::optional_data_base.634" = type { %"class.absl::optional_internal::optional_data_dtor_base.635" }
%"class.absl::optional_internal::optional_data_dtor_base.635" = type { i8, %union.anon.636 }
%union.anon.636 = type { i32 }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional", i32, [4 x i8], %class.scoped_refptr.568, i16, [6 x i8] }>
%"class.blink::Member.637" = type { %"class.blink::MemberBase.638" }
%"class.blink::MemberBase.638" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.641", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::HeapVector.641" = type { %"class.WTF::Vector.644" }
%"class.WTF::Vector.644" = type { %"class.WTF::VectorBuffer.645" }
%"class.WTF::VectorBuffer.645" = type { %"class.WTF::VectorBufferBase.646" }
%"class.WTF::VectorBufferBase.646" = type { %"class.blink::Member.647"*, i32, i32 }
%"class.blink::Member.647" = type opaque
%"class.blink::Member.649" = type { %"class.blink::MemberBase.650" }
%"class.blink::MemberBase.650" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.234", i32, [4 x i8], %"class.blink::HeapHashSet.651", %"class.blink::HeapHashSet.659", %"class.std::__1::unique_ptr.666", %"class.absl::optional.699" }
%"class.blink::HeapHashSet.651" = type { %"class.WTF::HashSet.654" }
%"class.WTF::HashSet.654" = type { %"class.WTF::HashTable.655" }
%"class.WTF::HashTable.655" = type <{ %"class.blink::Member.657"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.657" = type { %"class.blink::MemberBase.658" }
%"class.blink::MemberBase.658" = type { %"class.blink::Animation"* }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional.574", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.632", %"class.absl::optional", i8, [3 x i8], i32, %"class.blink::Member.828", %"class.blink::Member.828", %"class.blink::Member.830", %"class.blink::Member.234", %"class.blink::Member.649", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.832", %"class.blink::Member.832", %"class.blink::Member.832", %"class.std::__1::unique_ptr.834", i8, [3 x i8], i32, %"class.blink::Member.840", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.811" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.799" }
%"class.blink::HeapVector.799" = type { %"class.WTF::Vector.802" }
%"class.WTF::Vector.802" = type { %"class.WTF::VectorBuffer.803" }
%"class.WTF::VectorBuffer.803" = type { %"class.WTF::VectorBufferBase.804", [32 x i8] }
%"class.WTF::VectorBufferBase.804" = type { %"struct.std::__1::pair.805"*, i32, i32 }
%"struct.std::__1::pair.805" = type { %"class.WTF::AtomicString", %"class.blink::Member.806" }
%"class.blink::Member.806" = type { %"class.blink::MemberBase.807" }
%"class.blink::MemberBase.807" = type { %"class.blink::HeapVector.808"* }
%"class.blink::HeapVector.808" = type opaque
%"class.std::__1::unique_ptr.811" = type { %"class.std::__1::__compressed_pair.812" }
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.813" = type { %"class.WTF::Vector.814"* }
%"class.WTF::Vector.814" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.818" }
%"class.blink::WeakMember.818" = type { %"class.blink::MemberBase.819" }
%"class.blink::MemberBase.819" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.828" = type { %"class.blink::MemberBase.829" }
%"class.blink::MemberBase.829" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.830" = type { %"class.blink::MemberBase.831" }
%"class.blink::MemberBase.831" = type { %"class.blink::AnimationEffect"* }
%"class.blink::Member.832" = type { %"class.blink::MemberBase.833" }
%"class.blink::MemberBase.833" = type { %"class.blink::Event"* }
%"class.blink::Event" = type opaque
%"class.std::__1::unique_ptr.834" = type { %"class.std::__1::__compressed_pair.835" }
%"class.std::__1::__compressed_pair.835" = type { %"struct.std::__1::__compressed_pair_elem.836" }
%"struct.std::__1::__compressed_pair_elem.836" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional.574", %"class.absl::optional.574", double, i8, i32 }
%"class.blink::Member.840" = type { %"class.blink::MemberBase.841" }
%"class.blink::MemberBase.841" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.844", %"class.std::__1::unique_ptr.845", %"class.blink::Member.657" }
%"class.blink::ThreadState::PrefinalizerRegistration.844" = type { i8 }
%"class.std::__1::unique_ptr.845" = type { %"class.std::__1::__compressed_pair.846" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.847" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::HeapHashSet.659" = type { %"class.WTF::HashSet.662" }
%"class.WTF::HashSet.662" = type { %"class.WTF::HashTable.663" }
%"class.WTF::HashTable.663" = type <{ %"class.blink::WeakMember.665"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.665" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.669 }
%class.scoped_refptr.669 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.670", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.670" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.671" }
%"class.std::__1::__hash_table.671" = type <{ %"class.std::__1::unique_ptr.672", %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.687", %"class.std::__1::__compressed_pair.691", [4 x i8] }>
%"class.std::__1::unique_ptr.672" = type { %"class.std::__1::__compressed_pair.673" }
%"class.std::__1::__compressed_pair.673" = type { %"struct.std::__1::__compressed_pair_elem.674", %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.674" = type { %"struct.std::__1::__hash_node_base.675"** }
%"struct.std::__1::__hash_node_base.675" = type { %"struct.std::__1::__hash_node_base.675"* }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"class.std::__1::__bucket_list_deallocator.677" }
%"class.std::__1::__bucket_list_deallocator.677" = type { %"class.std::__1::__compressed_pair.678" }
%"class.std::__1::__compressed_pair.678" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"struct.std::__1::__hash_node_base.675" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.699" = type { %"class.absl::optional_internal::optional_data.700" }
%"class.absl::optional_internal::optional_data.700" = type { %"class.absl::optional_internal::optional_data_base.701" }
%"class.absl::optional_internal::optional_data_base.701" = type { %"class.absl::optional_internal::optional_data_dtor_base.702" }
%"class.absl::optional_internal::optional_data_dtor_base.702" = type { i8, %union.anon.703 }
%union.anon.703 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.704" }
%"class.absl::optional.704" = type { %"class.absl::optional_internal::optional_data.705" }
%"class.absl::optional_internal::optional_data.705" = type { %"class.absl::optional_internal::optional_data_base.706" }
%"class.absl::optional_internal::optional_data_base.706" = type { %"class.absl::optional_internal::optional_data_dtor_base.707" }
%"class.absl::optional_internal::optional_data_dtor_base.707" = type { i8, %union.anon.708 }
%union.anon.708 = type { %"class.base::TimeDelta" }
%"class.WTF::Vector.709" = type { %"class.WTF::VectorBuffer.710" }
%"class.WTF::VectorBuffer.710" = type { %"class.WTF::VectorBufferBase.711" }
%"class.WTF::VectorBufferBase.711" = type { i32*, i32, i32 }
%"class.blink::HeapHashSet.720" = type { %"class.WTF::HashSet.723" }
%"class.WTF::HashSet.723" = type { %"class.WTF::HashTable.724" }
%"class.WTF::HashTable.724" = type <{ %"class.blink::Member.726"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.726" = type { %"class.blink::MemberBase.970" }
%"class.blink::MemberBase.970" = type { %"class.blink::Animation"* }
%"class.WTF::Vector.715" = type { %"class.WTF::VectorBuffer.716" }
%"class.WTF::VectorBuffer.716" = type { %"class.WTF::VectorBufferBase.717" }
%"class.WTF::VectorBufferBase.717" = type { i32*, i32, i32 }
%"class.blink::HeapVector.727" = type { %"class.WTF::Vector.730" }
%"class.WTF::Vector.730" = type { %"class.WTF::VectorBuffer.731" }
%"class.WTF::VectorBuffer.731" = type { %"class.WTF::VectorBufferBase.732" }
%"class.WTF::VectorBufferBase.732" = type { %"class.blink::UpdatedCSSAnimation"*, i32, i32 }
%"class.blink::UpdatedCSSAnimation" = type { i32, %"class.blink::Member.657", %"class.blink::Member.563", %"struct.blink::Timing", %"class.blink::Member.637", i32, %"class.blink::Member.649", %"class.WTF::Vector.709" }
%"class.blink::HeapVector.734" = type { %"class.WTF::Vector.737" }
%"class.WTF::Vector.737" = type { %"class.WTF::VectorBuffer.738" }
%"class.WTF::VectorBuffer.738" = type { %"class.WTF::VectorBufferBase.739" }
%"class.WTF::VectorBufferBase.739" = type { %"class.blink::Member.657"*, i32, i32 }
%"class.blink::HeapHashMap.741" = type { %"class.WTF::HashMap.744" }
%"class.WTF::HashMap.744" = type { %"class.WTF::HashTable.745" }
%"class.WTF::HashTable.745" = type <{ %"struct.WTF::KeyValuePair.747"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.747" = type { %"class.blink::PropertyHandle", %"class.blink::Member.981" }
%"class.blink::Member.981" = type { %"class.blink::MemberBase.982" }
%"class.blink::MemberBase.982" = type { %"struct.blink::CSSAnimationUpdate::NewTransition"* }
%"struct.blink::CSSAnimationUpdate::NewTransition" = type { i32 (...)**, %"class.blink::PropertyHandle", %class.scoped_refptr.231, %class.scoped_refptr.231, %class.scoped_refptr.231, double, %"class.blink::Member.563" }
%"class.WTF::HashSet.748" = type { %"class.WTF::HashTable.749" }
%"class.WTF::HashTable.749" = type <{ %"class.blink::PropertyHandle"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.752" = type { %"class.WTF::HashMap.755" }
%"class.WTF::HashMap.755" = type { %"class.WTF::HashTable.756" }
%"class.WTF::HashTable.756" = type <{ %"struct.WTF::KeyValuePair.758"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.758" = type { %"class.blink::PropertyHandle", %"class.blink::Member.971" }
%"class.blink::Member.971" = type { %"class.blink::MemberBase.972" }
%"class.blink::MemberBase.972" = type { %"class.blink::HeapVector.973"* }
%"class.blink::HeapVector.973" = type { %"class.WTF::Vector.976" }
%"class.WTF::Vector.976" = type { %"class.WTF::VectorBuffer.977" }
%"class.WTF::VectorBuffer.977" = type { %"class.WTF::VectorBufferBase.978", [8 x i8] }
%"class.WTF::VectorBufferBase.978" = type { %"class.blink::Member.958"*, i32, i32 }
%"class.blink::FontBuilder" = type <{ %"class.blink::Document"*, %"class.blink::TreeScope"*, %"class.blink::FontDescription", i32, [4 x i8] }>
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.760, %class.scoped_refptr.768, %class.scoped_refptr.778, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.790 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.759 }
%class.scoped_refptr.759 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.795", [4 x i8] }>
%"class.WTF::RefCounted.795" = type { %"class.base::RefCounted.796" }
%"class.base::RefCounted.796" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.760 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.766", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.761" }
%"class.WTF::Vector.761" = type { %"class.WTF::VectorBuffer.762" }
%"class.WTF::VectorBuffer.762" = type { %"class.WTF::VectorBufferBase.763" }
%"class.WTF::VectorBufferBase.763" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.766" = type { %"class.base::RefCounted.767" }
%"class.base::RefCounted.767" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.768 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.769", %"class.WTF::RefCounted.776", [4 x i8] }>
%"class.blink::FontSettings.769" = type { %"class.WTF::Vector.770" }
%"class.WTF::Vector.770" = type { %"class.WTF::VectorBuffer.771" }
%"class.WTF::VectorBuffer.771" = type { %"class.WTF::VectorBufferBase.772" }
%"class.WTF::VectorBufferBase.772" = type { %"class.blink::FontTagValuePair.773"*, i32, i32 }
%"class.blink::FontTagValuePair.773" = type { i32, float }
%"class.WTF::RefCounted.776" = type { %"class.base::RefCounted.777" }
%"class.base::RefCounted.777" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.778 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.779", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.787, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.779" = type { %"class.base::RefCounted.780" }
%"class.base::RefCounted.780" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.781" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.783 }
%union.anon.783 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.787 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.788", [4 x i8] }>
%"class.WTF::RefCounted.788" = type { %"class.base::RefCounted.789" }
%"class.base::RefCounted.789" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.790 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%"class.blink::PseudoElement" = type opaque
%"class.blink::ElementStyleResources" = type { %"class.blink::Element"*, %"class.WTF::HashSet.791", %"class.WTF::HashSet.791", float, %"class.blink::PseudoElement"* }
%"class.WTF::HashSet.791" = type { %"class.WTF::HashTable.792" }
%"class.WTF::HashTable.792" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Vector.929" = type { %"class.WTF::VectorBuffer.930" }
%"class.WTF::VectorBuffer.930" = type { %"class.WTF::VectorBufferBase.931", [32 x i8] }
%"class.WTF::VectorBufferBase.931" = type { %"class.blink::Member.932"*, i32, i32 }
%"class.blink::Member.932" = type { %"class.blink::MemberBase.933" }
%"class.blink::MemberBase.933" = type { %"class.blink::CSSValue"* }
%"class.blink::NonInterpolableList" = type { %"class.blink::NonInterpolableValue.base", %"class.WTF::Vector.942" }
%"class.blink::NonInterpolableValue.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.191" }>
%"class.blink::CSSValueList" = type { %"class.blink::CSSValue", %"class.blink::HeapVector.926" }
%"class.blink::HeapVector.926" = type { %"class.WTF::Vector.929" }
%"class.blink::UnderlyingValueOwner" = type { %"class.blink::UnderlyingValue", %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* }
%"class.blink::UnderlyingValue" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.948" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.949" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.blink::PairwiseInterpolationValue" = type { %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.184", %class.scoped_refptr.190 }
%"class.base::RepeatingCallback.950" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::InterpolationEnvironment" = type { i32 (...)**, %"class.blink::InterpolationTypesMap"* }
%"class.blink::InterpolationTypesMap" = type { i32 (...)** }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN5blink26ListInterpolationFunctions33InterpolableValuesKnownCompatibleEPKNS_17InterpolableValueES3_ = comdat any

$_ZN5blink30CSSCustomListInterpolationTypeD2Ev = comdat any

$_ZN5blink30CSSCustomListInterpolationTypeD0Ev = comdat any

$_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE = comdat any

$_ZNK5blink30CSSCustomListInterpolationType19MaybeConvertInitialERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE = comdat any

$_ZNK5blink30CSSCustomListInterpolationType19MaybeConvertInheritERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE = comdat any

$_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE = comdat any

$_ZNK5blink30CSSCustomListInterpolationType43MaybeConvertStandardPropertyUnderlyingValueERKNS_13ComputedStyleE = comdat any

$_ZNK5blink30CSSCustomListInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateE = comdat any

$_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm = comdat any

$_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv = comdat any

$_ZNK3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_ = comdat any

$_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink17InterpolationTypeD2Ev = comdat any

$_ZN5blink17InterpolationTypeD0Ev = comdat any

$_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ = comdat any

$_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd = comdat any

$_ZN5blink23UnderlyingLengthCheckerD0Ev = comdat any

$_ZNK5blink23UnderlyingLengthChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE = comdat any

$_ZN5blink17InterpolationType17ConversionCheckerD2Ev = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_23UnderlyingLengthCheckerENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink19NonInterpolableListD2Ev = comdat any

$_ZN5blink19NonInterpolableListD0Ev = comdat any

$_ZNK5blink19NonInterpolableList7GetTypeEv = comdat any

$_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFbPKN5blink17InterpolableValueES6_EJEEES7_E3RunEPNS0_13BindStateBaseES6_S6_ = comdat any

$_ZN4base8internal9BindStateIPFbPKN5blink17InterpolableValueES5_EJEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink17InterpolationTypeEKFNS3_26PairwiseInterpolationValueEONS3_18InterpolationValueES7_EJN3WTF17UnretainedWrapperINS3_20CSSInterpolationTypeEEEEEEFS5_S7_S7_EE3RunEPNS0_13BindStateBaseES7_S7_ = comdat any

$_ZN4base8internal9BindStateIMN5blink17InterpolationTypeEKFNS2_26PairwiseInterpolationValueEONS2_18InterpolationValueES6_EJN3WTF17UnretainedWrapperINS2_20CSSInterpolationTypeEEEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFbPKN5blink20NonInterpolableValueES6_EJEEES7_E3RunEPNS0_13BindStateBaseES6_S6_ = comdat any

$_ZN4base8internal9BindStateIPFbPKN5blink20NonInterpolableValueES5_EJEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink17InterpolationTypeE = comdat any

$_ZTVN5blink23UnderlyingLengthCheckerE = comdat any

$_ZTVN5blink19NonInterpolableListE = comdat any

@_ZTVN5blink30CSSCustomListInterpolationTypeE = hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CSSCustomListInterpolationType"*)* @_ZN5blink30CSSCustomListInterpolationTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSCustomListInterpolationType"*)* @_ZN5blink30CSSCustomListInterpolationTypeD0Ev to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.193"*)* @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.193"*)* @_ZNK5blink20CSSInterpolationType18MaybeConvertSingleERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSD_14default_deleteISG_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::CSSCustomListInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink30CSSCustomListInterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::InterpolationEnvironment"*)* @_ZNK5blink20CSSInterpolationType27MaybeConvertUnderlyingValueERKNS_24InterpolationEnvironmentE to i8*), i8* bitcast (void (%"class.blink::CSSCustomListInterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)* @_ZNK5blink30CSSCustomListInterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd to i8*), i8* bitcast (void (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)* @_ZNK5blink20CSSInterpolationType5ApplyERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_24InterpolationEnvironmentE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSCustomListInterpolationType"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.193"*)* @_ZNK5blink30CSSCustomListInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSCustomListInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.193"*)* @_ZNK5blink30CSSCustomListInterpolationType19MaybeConvertInitialERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSCustomListInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.193"*)* @_ZNK5blink30CSSCustomListInterpolationType19MaybeConvertInheritERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSCustomListInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.193"*)* @_ZNK5blink30CSSCustomListInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEE to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::CSSCustomListInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)* @_ZNK5blink30CSSCustomListInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*, i32, %"class.WTF::Vector.193"*)* @_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSCustomListInterpolationType"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink30CSSCustomListInterpolationType43MaybeConvertStandardPropertyUnderlyingValueERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::CSSCustomListInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)* @_ZNK5blink30CSSCustomListInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateE to i8*)] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.2 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.3 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.4 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.5 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.6 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.7 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.9 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.11 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink20CSSInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink17InterpolationTypeE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InterpolationType"*)* @_ZN5blink17InterpolationTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::InterpolationType"*)* @_ZN5blink17InterpolationTypeD0Ev to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.193"*)* @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)* @_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN5blink23UnderlyingLengthCheckerE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InterpolationType::ConversionChecker"*)* @_ZN5blink17InterpolationType17ConversionCheckerD2Ev to i8*), i8* bitcast (void (%"class.blink::UnderlyingLengthChecker"*)* @_ZN5blink23UnderlyingLengthCheckerD0Ev to i8*), i8* bitcast (i1 (%"class.blink::UnderlyingLengthChecker"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink23UnderlyingLengthChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE to i8*)] }, comdat, align 8
@.str.12 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv = private unnamed_addr constant [185 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::InterpolationType::ConversionChecker, std::__1::default_delete<blink::InterpolationType::ConversionChecker> >]\00", align 1
@_ZTVN5blink16InterpolableListE = external unnamed_addr constant { [20 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [147 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::InterpolableValue, std::__1::default_delete<blink::InterpolableValue> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink20NonInterpolableValueEEEEPKcv = private unnamed_addr constant [96 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<const blink::NonInterpolableValue>]\00", align 1
@_ZTVN5blink19NonInterpolableListE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::NonInterpolableList"*)* @_ZN5blink19NonInterpolableListD2Ev to i8*), i8* bitcast (void (%"class.blink::NonInterpolableList"*)* @_ZN5blink19NonInterpolableListD0Ev to i8*), i8* bitcast (i8* (%"class.blink::NonInterpolableList"*)* @_ZNK5blink19NonInterpolableList7GetTypeEv to i8*)] }, comdat, align 8
@_ZN5blink19NonInterpolableList12static_type_E = external local_unnamed_addr global i8*, align 8
@_ZTVN5blink20UnderlyingValueOwnerE = external unnamed_addr constant { [6 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink30CSSCustomListInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSCustomListInterpolationType"*, %"struct.blink::InterpolationValue"* nocapture readonly dereferenceable(16), %"class.WTF::Vector.193"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::Vector.942", align 8
  %6 = alloca %"struct.blink::InterpolationValue", align 8
  %7 = alloca %"class.std::__1::unique_ptr.199", align 8
  %8 = alloca %"struct.blink::InterpolationValue", align 8
  %9 = alloca %"class.WTF::Vector.193", align 8
  %10 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %10, align 8
  %12 = icmp eq %"class.blink::InterpolableValue"* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.blink::InterpolableValue"* %11 to %"class.blink::InterpolableList"*
  %15 = getelementptr inbounds %"class.blink::InterpolableList", %"class.blink::InterpolableList"* %14, i64 0, i32 1, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  br label %17

17:                                               ; preds = %4, %13
  %18 = phi i32 [ %16, %13 ], [ 0, %4 ]
  %19 = zext i32 %18 to i64
  %20 = bitcast %"class.std::__1::unique_ptr.199"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  %21 = tail call noalias i8* @malloc(i64 24) #10
  %22 = bitcast i8* %21 to i32 (...)***
  %23 = getelementptr inbounds i8, i8* %21, i64 8
  %24 = bitcast i8* %23 to %"class.blink::InterpolationType"**
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %24, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink23UnderlyingLengthCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %25 = getelementptr inbounds i8, i8* %21, i64 16
  %26 = bitcast i8* %25 to i32*
  store i32 %18, i32* %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.199"* %7, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::unique_ptr.199"* %7 to i8**
  store i8* %21, i8** %28, align 8
  %29 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %3, i64 0, i32 0, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %30, %32
  br i1 %33, label %43, label %34, !prof !2

34:                                               ; preds = %17
  %35 = ptrtoint i8* %21 to i64
  %36 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %3, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.std::__1::unique_ptr.196"*, %"class.std::__1::unique_ptr.196"** %36, align 8
  %38 = zext i32 %30 to i64
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.196"* %37, i64 %38
  store %"class.blink::UnderlyingLengthChecker"* null, %"class.blink::UnderlyingLengthChecker"** %27, align 8
  %40 = bitcast %"class.std::__1::unique_ptr.196"* %39 to i64*
  store i64 %35, i64* %40, align 8
  %41 = load i32, i32* %29, align 4
  %42 = add i32 %41, 1
  store i32 %42, i32* %29, align 4
  br label %44

43:                                               ; preds = %17
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_23UnderlyingLengthCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.193"* %3, %"class.std::__1::unique_ptr.199"* nonnull dereferenceable(8) %7) #10
  br label %44

44:                                               ; preds = %34, %43
  %45 = load %"class.blink::UnderlyingLengthChecker"*, %"class.blink::UnderlyingLengthChecker"** %27, align 8
  store %"class.blink::UnderlyingLengthChecker"* null, %"class.blink::UnderlyingLengthChecker"** %27, align 8
  %46 = icmp eq %"class.blink::UnderlyingLengthChecker"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %44
  %48 = bitcast %"class.blink::UnderlyingLengthChecker"* %45 to void (%"class.blink::UnderlyingLengthChecker"*)***
  %49 = load void (%"class.blink::UnderlyingLengthChecker"*)**, void (%"class.blink::UnderlyingLengthChecker"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::UnderlyingLengthChecker"*)*, void (%"class.blink::UnderlyingLengthChecker"*)** %49, i64 1
  %51 = load void (%"class.blink::UnderlyingLengthChecker"*)*, void (%"class.blink::UnderlyingLengthChecker"*)** %50, align 8
  call void %51(%"class.blink::UnderlyingLengthChecker"* nonnull %45) #10
  br label %52

52:                                               ; preds = %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  %53 = icmp eq i32 %18, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %52
  %55 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #10
  br label %315

56:                                               ; preds = %52
  %57 = bitcast %"struct.blink::InterpolationValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #10
  %58 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 16, i1 false) #10
  %60 = bitcast %"class.WTF::Vector.193"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #10
  %61 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %9, i64 0, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %9, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 16, i1 false) #10
  %63 = call noalias i8* @malloc(i64 24) #10, !noalias !3
  %64 = bitcast i8* %63 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %64, align 8, !noalias !3
  %65 = getelementptr inbounds i8, i8* %63, i64 8
  %66 = bitcast i8* %65 to %"class.std::__1::unique_ptr.184"**
  store %"class.std::__1::unique_ptr.184"* null, %"class.std::__1::unique_ptr.184"** %66, align 8, !noalias !3
  %67 = getelementptr inbounds i8, i8* %63, i64 16
  %68 = bitcast i8* %67 to i32*
  store i32 0, i32* %68, align 8, !noalias !3
  %69 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64 %19) #10, !noalias !3
  %70 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %69, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #10, !noalias !3
  %71 = ptrtoint i8* %70 to i64
  %72 = bitcast i8* %65 to i64*
  store atomic i64 %71, i64* %72 monotonic, align 8, !noalias !3
  %73 = lshr i64 %69, 3
  %74 = trunc i64 %73 to i32
  store i32 %74, i32* %68, align 8, !noalias !3
  %75 = shl nuw nsw i64 %19, 3
  %76 = getelementptr inbounds i8, i8* %63, i64 20
  %77 = bitcast i8* %76 to i32*
  store i32 %18, i32* %77, align 4, !noalias !3
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 %75, i1 false) #10, !noalias !3
  %78 = ptrtoint i8* %63 to i64
  %79 = bitcast %"class.WTF::Vector.942"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #10, !noalias !3
  %80 = getelementptr inbounds %"class.WTF::Vector.942", %"class.WTF::Vector.942"* %5, i64 0, i32 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.WTF::Vector.942", %"class.WTF::Vector.942"* %5, i64 0, i32 0, i32 0, i32 1
  %82 = getelementptr inbounds %"class.WTF::Vector.942", %"class.WTF::Vector.942"* %5, i64 0, i32 0, i32 0, i32 2
  %83 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm(i64 %19) #10, !noalias !3
  %84 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %83, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink20NonInterpolableValueEEEEPKcv, i64 0, i64 0)) #10, !noalias !3
  %85 = ptrtoint i8* %84 to i64
  %86 = bitcast %"class.WTF::Vector.942"* %5 to i64*
  store atomic i64 %85, i64* %86 monotonic, align 8, !noalias !3
  %87 = lshr i64 %83, 3
  %88 = trunc i64 %87 to i32
  store i32 %88, i32* %81, align 8, !noalias !3
  store i32 %18, i32* %82, align 4, !noalias !3
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 %75, i1 false) #10, !noalias !3
  %89 = bitcast %"struct.blink::InterpolationValue"* %6 to i8*
  %90 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %91 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %6, i64 0, i32 1
  %92 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %91, i64 0, i32 0
  %93 = getelementptr inbounds %"class.blink::CSSCustomListInterpolationType", %"class.blink::CSSCustomListInterpolationType"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %94 = bitcast i8* %65 to %"class.WTF::Vector.937"*
  %95 = bitcast %class.scoped_refptr.190* %91 to i64*
  %96 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  %97 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %6, i64 0, i32 1, i32 0
  br label %100

98:                                               ; preds = %167
  %99 = icmp eq i32 %169, %18
  br i1 %99, label %170, label %100

100:                                              ; preds = %98, %56
  %101 = phi i32 [ 0, %56 ], [ %169, %98 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #10, !noalias !3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 16, i1 false) #10, !noalias !3
  %102 = load %"class.blink::CSSInterpolationType"*, %"class.blink::CSSInterpolationType"** %93, align 8, !noalias !6
  %103 = bitcast %"class.blink::CSSInterpolationType"* %102 to void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.193"*)***
  %104 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.193"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.193"*)*** %103, align 8, !noalias !6
  %105 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.193"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.193"*)** %104, i64 8
  %106 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.193"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.193"*)** %105, align 8, !noalias !6
  call void %106(%"struct.blink::InterpolationValue"* nonnull sret %6, %"class.blink::CSSInterpolationType"* %102, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %8, %"class.WTF::Vector.193"* nonnull dereferenceable(16) %9) #10, !noalias !3
  %107 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %90, align 8, !noalias !3
  %108 = icmp eq %"class.blink::InterpolableValue"* %107, null
  br i1 %108, label %109, label %110

109:                                              ; preds = %100
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 16, i1 false) #10, !alias.scope !3
  br label %142

110:                                              ; preds = %100
  %111 = ptrtoint %"class.blink::InterpolableValue"* %107 to i64
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %90, align 8, !noalias !3
  %112 = call dereferenceable(8) %"class.std::__1::unique_ptr.184"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.937"* %94, i32 %101) #10, !noalias !3
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.184"* %112, i64 0, i32 0, i32 0, i32 0
  %114 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %113, align 8, !noalias !3
  %115 = bitcast %"class.std::__1::unique_ptr.184"* %112 to i64*
  store i64 %111, i64* %115, align 8, !noalias !3
  %116 = icmp eq %"class.blink::InterpolableValue"* %114, null
  br i1 %116, label %122, label %117

117:                                              ; preds = %110
  %118 = bitcast %"class.blink::InterpolableValue"* %114 to void (%"class.blink::InterpolableValue"*)***
  %119 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %118, align 8, !noalias !3
  %120 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %119, i64 1
  %121 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %120, align 8, !noalias !3
  call void %121(%"class.blink::InterpolableValue"* nonnull %114) #10, !noalias !3
  br label %122

122:                                              ; preds = %117, %110
  %123 = load i64, i64* %95, align 8, !noalias !3
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %92, align 8, !noalias !3
  %124 = call dereferenceable(8) %class.scoped_refptr.190* @_ZN3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.942"* nonnull %5, i32 %101) #10, !noalias !3
  %125 = bitcast %class.scoped_refptr.190* %124 to i64*
  %126 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %124, i64 0, i32 0
  %127 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %126, align 8, !noalias !3
  store i64 %123, i64* %125, align 8, !noalias !3
  %128 = icmp eq %"class.blink::NonInterpolableValue"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %127, i64 0, i32 1, i32 0
  %131 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %130, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %131) #10, !noalias !3
  %132 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %130, i64 0, i32 0, i32 0
  %133 = load i32, i32* %132, align 4, !noalias !3
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %142

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %130, i64 -2
  %137 = bitcast %"class.base::RefCounted.192"* %136 to %"class.blink::NonInterpolableValue"*
  %138 = bitcast %"class.base::RefCounted.192"* %136 to void (%"class.blink::NonInterpolableValue"*)***
  %139 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %138, align 8, !noalias !3
  %140 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %139, i64 1
  %141 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %140, align 8, !noalias !3
  call void %141(%"class.blink::NonInterpolableValue"* nonnull %137) #10, !noalias !3
  br label %142

142:                                              ; preds = %135, %129, %122, %109
  %143 = phi i32 [ 1, %109 ], [ 0, %122 ], [ 0, %129 ], [ 0, %135 ]
  %144 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %97, align 8, !noalias !3
  %145 = icmp eq %"class.blink::NonInterpolableValue"* %144, null
  br i1 %145, label %159, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %144, i64 0, i32 1, i32 0
  %148 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %147, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %148) #10, !noalias !3
  %149 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %147, i64 0, i32 0, i32 0
  %150 = load i32, i32* %149, align 4, !noalias !3
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %159

152:                                              ; preds = %146
  %153 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %147, i64 -2
  %154 = bitcast %"class.base::RefCounted.192"* %153 to %"class.blink::NonInterpolableValue"*
  %155 = bitcast %"class.base::RefCounted.192"* %153 to void (%"class.blink::NonInterpolableValue"*)***
  %156 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %155, align 8, !noalias !3
  %157 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %156, i64 1
  %158 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %157, align 8, !noalias !3
  call void %158(%"class.blink::NonInterpolableValue"* nonnull %154) #10, !noalias !3
  br label %159

159:                                              ; preds = %152, %146, %142
  %160 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %90, align 8, !noalias !3
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %90, align 8, !noalias !3
  %161 = icmp eq %"class.blink::InterpolableValue"* %160, null
  br i1 %161, label %167, label %162

162:                                              ; preds = %159
  %163 = bitcast %"class.blink::InterpolableValue"* %160 to void (%"class.blink::InterpolableValue"*)***
  %164 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %163, align 8, !noalias !3
  %165 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %164, i64 1
  %166 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %165, align 8, !noalias !3
  call void %166(%"class.blink::InterpolableValue"* nonnull %160) #10, !noalias !3
  br label %167

167:                                              ; preds = %162, %159
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #10, !noalias !3
  %168 = icmp eq i32 %143, 0
  %169 = add nuw i32 %101, 1
  br i1 %168, label %98, label %217

170:                                              ; preds = %98
  %171 = load i32, i32* %81, align 8, !noalias !3
  %172 = call noalias i8* @malloc(i64 32) #10, !noalias !3
  %173 = getelementptr inbounds i8, i8* %172, i64 8
  %174 = bitcast i8* %173 to i32*
  store i32 1, i32* %174, align 4, !noalias !3
  %175 = bitcast i8* %172 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink19NonInterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %175, align 8, !noalias !3
  %176 = getelementptr inbounds i8, i8* %172, i64 16
  %177 = bitcast i8* %176 to %class.scoped_refptr.190**
  store %class.scoped_refptr.190* null, %class.scoped_refptr.190** %177, align 8, !noalias !3
  %178 = getelementptr inbounds i8, i8* %172, i64 24
  %179 = bitcast i8* %178 to i32*
  store i32 0, i32* %179, align 8, !noalias !3
  %180 = icmp eq i32 %171, 0
  br i1 %180, label %190, label %181

181:                                              ; preds = %170
  %182 = zext i32 %171 to i64
  %183 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm(i64 %182) #10, !noalias !3
  %184 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %183, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink20NonInterpolableValueEEEEPKcv, i64 0, i64 0)) #10, !noalias !3
  %185 = ptrtoint i8* %184 to i64
  %186 = bitcast i8* %176 to i64*
  store atomic i64 %185, i64* %186 monotonic, align 8, !noalias !3
  %187 = lshr i64 %183, 3
  %188 = trunc i64 %187 to i32
  store i32 %188, i32* %179, align 8, !noalias !3
  %189 = bitcast i8* %184 to %class.scoped_refptr.190*
  br label %190

190:                                              ; preds = %181, %170
  %191 = phi %class.scoped_refptr.190* [ null, %170 ], [ %189, %181 ]
  %192 = load i32, i32* %82, align 4, !noalias !3
  %193 = getelementptr inbounds i8, i8* %172, i64 28
  %194 = bitcast i8* %193 to i32*
  store i32 %192, i32* %194, align 4, !noalias !3
  %195 = load %class.scoped_refptr.190*, %class.scoped_refptr.190** %80, align 8, !noalias !3
  %196 = zext i32 %192 to i64
  %197 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %195, i64 %196
  %198 = icmp eq i32 %192, 0
  br i1 %198, label %212, label %199

199:                                              ; preds = %190, %208
  %200 = phi %class.scoped_refptr.190* [ %209, %208 ], [ %191, %190 ]
  %201 = phi %class.scoped_refptr.190* [ %210, %208 ], [ %195, %190 ]
  %202 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %201, i64 0, i32 0
  %203 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %202, align 8, !noalias !3
  %204 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %200, i64 0, i32 0
  store %"class.blink::NonInterpolableValue"* %203, %"class.blink::NonInterpolableValue"** %204, align 8, !noalias !3
  %205 = icmp eq %"class.blink::NonInterpolableValue"* %203, null
  br i1 %205, label %208, label %206

206:                                              ; preds = %199
  %207 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %203, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %207) #10, !noalias !3
  br label %208

208:                                              ; preds = %206, %199
  %209 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %200, i64 1
  %210 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %201, i64 1
  %211 = icmp eq %class.scoped_refptr.190* %210, %197
  br i1 %211, label %212, label %199

212:                                              ; preds = %208, %190
  %213 = ptrtoint i8* %172 to i64
  %214 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %78, i64* %214, align 8, !alias.scope !3
  %215 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %216 = bitcast %class.scoped_refptr.190* %215 to i64*
  store i64 %213, i64* %216, align 8, !alias.scope !3
  br label %217

217:                                              ; preds = %167, %212
  %218 = phi i64 [ 0, %212 ], [ %78, %167 ]
  %219 = load %class.scoped_refptr.190*, %class.scoped_refptr.190** %80, align 8, !noalias !3
  %220 = icmp eq %class.scoped_refptr.190* %219, null
  br i1 %220, label %254, label %221, !prof !9

221:                                              ; preds = %217
  %222 = bitcast %class.scoped_refptr.190* %219 to i8*
  %223 = load i32, i32* %82, align 4, !noalias !3
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %252, label %225, !prof !2

225:                                              ; preds = %221
  %226 = zext i32 %223 to i64
  %227 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %219, i64 %226
  br label %228

228:                                              ; preds = %246, %225
  %229 = phi %class.scoped_refptr.190* [ %247, %246 ], [ %219, %225 ]
  %230 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %229, i64 0, i32 0
  %231 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %230, align 8, !noalias !3
  %232 = icmp eq %"class.blink::NonInterpolableValue"* %231, null
  br i1 %232, label %246, label %233

233:                                              ; preds = %228
  %234 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %231, i64 0, i32 1, i32 0
  %235 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %234, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %235) #10, !noalias !3
  %236 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %234, i64 0, i32 0, i32 0
  %237 = load i32, i32* %236, align 4, !noalias !3
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %246

239:                                              ; preds = %233
  %240 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %234, i64 -2
  %241 = bitcast %"class.base::RefCounted.192"* %240 to %"class.blink::NonInterpolableValue"*
  %242 = bitcast %"class.base::RefCounted.192"* %240 to void (%"class.blink::NonInterpolableValue"*)***
  %243 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %242, align 8, !noalias !3
  %244 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %243, i64 1
  %245 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %244, align 8, !noalias !3
  call void %245(%"class.blink::NonInterpolableValue"* nonnull %241) #10, !noalias !3
  br label %246

246:                                              ; preds = %239, %233, %228
  %247 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %229, i64 1
  %248 = icmp eq %class.scoped_refptr.190* %247, %227
  br i1 %248, label %249, label %228

249:                                              ; preds = %246
  store i32 0, i32* %82, align 4, !noalias !3
  %250 = bitcast %"class.WTF::Vector.942"* %5 to i8**
  %251 = load i8*, i8** %250, align 8, !noalias !3
  br label %252

252:                                              ; preds = %249, %221
  %253 = phi i8* [ %251, %249 ], [ %222, %221 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %253) #10, !noalias !3
  store %class.scoped_refptr.190* null, %class.scoped_refptr.190** %80, align 8, !noalias !3
  br label %254

254:                                              ; preds = %252, %217
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #10, !noalias !3
  %255 = icmp eq i64 %218, 0
  br i1 %255, label %262, label %256

256:                                              ; preds = %254
  %257 = inttoptr i64 %218 to %"class.blink::InterpolableList"*
  %258 = inttoptr i64 %218 to void (%"class.blink::InterpolableList"*)***
  %259 = load void (%"class.blink::InterpolableList"*)**, void (%"class.blink::InterpolableList"*)*** %258, align 8, !noalias !3
  %260 = getelementptr inbounds void (%"class.blink::InterpolableList"*)*, void (%"class.blink::InterpolableList"*)** %259, i64 1
  %261 = load void (%"class.blink::InterpolableList"*)*, void (%"class.blink::InterpolableList"*)** %260, align 8, !noalias !3
  call void %261(%"class.blink::InterpolableList"* nonnull %257) #10, !noalias !3
  br label %262

262:                                              ; preds = %254, %256
  %263 = load %"class.std::__1::unique_ptr.196"*, %"class.std::__1::unique_ptr.196"** %61, align 8
  %264 = icmp eq %"class.std::__1::unique_ptr.196"* %263, null
  br i1 %264, label %290, label %265, !prof !9

265:                                              ; preds = %262
  %266 = bitcast %"class.std::__1::unique_ptr.196"* %263 to i8*
  %267 = load i32, i32* %62, align 4
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %288, label %269, !prof !2

269:                                              ; preds = %265
  %270 = zext i32 %267 to i64
  %271 = getelementptr inbounds %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.196"* %263, i64 %270
  br label %272

272:                                              ; preds = %282, %269
  %273 = phi %"class.std::__1::unique_ptr.196"* [ %283, %282 ], [ %263, %269 ]
  %274 = getelementptr inbounds %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.196"* %273, i64 0, i32 0, i32 0, i32 0
  %275 = load %"class.blink::InterpolationType::ConversionChecker"*, %"class.blink::InterpolationType::ConversionChecker"** %274, align 8
  store %"class.blink::InterpolationType::ConversionChecker"* null, %"class.blink::InterpolationType::ConversionChecker"** %274, align 8
  %276 = icmp eq %"class.blink::InterpolationType::ConversionChecker"* %275, null
  br i1 %276, label %282, label %277

277:                                              ; preds = %272
  %278 = bitcast %"class.blink::InterpolationType::ConversionChecker"* %275 to void (%"class.blink::InterpolationType::ConversionChecker"*)***
  %279 = load void (%"class.blink::InterpolationType::ConversionChecker"*)**, void (%"class.blink::InterpolationType::ConversionChecker"*)*** %278, align 8
  %280 = getelementptr inbounds void (%"class.blink::InterpolationType::ConversionChecker"*)*, void (%"class.blink::InterpolationType::ConversionChecker"*)** %279, i64 1
  %281 = load void (%"class.blink::InterpolationType::ConversionChecker"*)*, void (%"class.blink::InterpolationType::ConversionChecker"*)** %280, align 8
  call void %281(%"class.blink::InterpolationType::ConversionChecker"* nonnull %275) #10
  br label %282

282:                                              ; preds = %277, %272
  %283 = getelementptr inbounds %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.196"* %273, i64 1
  %284 = icmp eq %"class.std::__1::unique_ptr.196"* %283, %271
  br i1 %284, label %285, label %272

285:                                              ; preds = %282
  store i32 0, i32* %62, align 4
  %286 = bitcast %"class.WTF::Vector.193"* %9 to i8**
  %287 = load i8*, i8** %286, align 8
  br label %288

288:                                              ; preds = %285, %265
  %289 = phi i8* [ %287, %285 ], [ %266, %265 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %289) #10
  store %"class.std::__1::unique_ptr.196"* null, %"class.std::__1::unique_ptr.196"** %61, align 8
  br label %290

290:                                              ; preds = %262, %288
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #10
  %291 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %59, align 8
  %292 = icmp eq %"class.blink::NonInterpolableValue"* %291, null
  br i1 %292, label %306, label %293

293:                                              ; preds = %290
  %294 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %291, i64 0, i32 1, i32 0
  %295 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %294, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %295) #10
  %296 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %294, i64 0, i32 0, i32 0
  %297 = load i32, i32* %296, align 4
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %306

299:                                              ; preds = %293
  %300 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %294, i64 -2
  %301 = bitcast %"class.base::RefCounted.192"* %300 to %"class.blink::NonInterpolableValue"*
  %302 = bitcast %"class.base::RefCounted.192"* %300 to void (%"class.blink::NonInterpolableValue"*)***
  %303 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %302, align 8
  %304 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %303, i64 1
  %305 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %304, align 8
  call void %305(%"class.blink::NonInterpolableValue"* nonnull %301) #10
  br label %306

306:                                              ; preds = %299, %293, %290
  %307 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %58, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %58, align 8
  %308 = icmp eq %"class.blink::InterpolableValue"* %307, null
  br i1 %308, label %314, label %309

309:                                              ; preds = %306
  %310 = bitcast %"class.blink::InterpolableValue"* %307 to void (%"class.blink::InterpolableValue"*)***
  %311 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %310, align 8
  %312 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %311, i64 1
  %313 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %312, align 8
  call void %313(%"class.blink::InterpolableValue"* nonnull %307) #10
  br label %314

314:                                              ; preds = %306, %309
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #10
  br label %315

315:                                              ; preds = %314, %54
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink30CSSCustomListInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSCustomListInterpolationType"*, %"class.blink::CSSValue"* dereferenceable(3), %"class.blink::StyleResolverState"*, %"class.WTF::Vector.193"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::Vector.942", align 8
  %7 = alloca %"struct.blink::InterpolationValue", align 8
  %8 = alloca %"class.WTF::Vector.193", align 8
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %10 = load i8, i8* %9, align 1
  %11 = icmp ult i8 %10, 52
  %12 = icmp eq %"class.blink::CSSValue"* %2, null
  %13 = or i1 %12, %11
  br i1 %13, label %14, label %16

14:                                               ; preds = %5
  %15 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #10
  br label %264

16:                                               ; preds = %5
  %17 = bitcast %"class.WTF::Vector.193"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %8, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %8, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 16, i1 false) #10
  %20 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 6, i32 2
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  %24 = tail call noalias i8* @malloc(i64 24) #10, !noalias !10
  %25 = bitcast i8* %24 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8, !noalias !10
  %26 = getelementptr inbounds i8, i8* %24, i64 8
  br i1 %23, label %27, label %32

27:                                               ; preds = %16
  %28 = ptrtoint i8* %24 to i64
  %29 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #10, !noalias !13
  store i64 %28, i64* %29, align 8, !alias.scope !13
  %30 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %31 = bitcast %class.scoped_refptr.190* %30 to i64*
  store i64 0, i64* %31, align 8, !alias.scope !13
  br label %235

32:                                               ; preds = %16
  %33 = bitcast i8* %26 to %"class.std::__1::unique_ptr.184"**
  store %"class.std::__1::unique_ptr.184"* null, %"class.std::__1::unique_ptr.184"** %33, align 8, !noalias !10
  %34 = getelementptr inbounds i8, i8* %24, i64 16
  %35 = bitcast i8* %34 to i32*
  store i32 0, i32* %35, align 8, !noalias !10
  %36 = zext i32 %22 to i64
  %37 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64 %36) #10, !noalias !10
  %38 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %37, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #10, !noalias !10
  %39 = ptrtoint i8* %38 to i64
  %40 = bitcast i8* %26 to i64*
  store atomic i64 %39, i64* %40 monotonic, align 8, !noalias !10
  %41 = lshr i64 %37, 3
  %42 = trunc i64 %41 to i32
  store i32 %42, i32* %35, align 8, !noalias !10
  %43 = shl nuw nsw i64 %36, 3
  %44 = getelementptr inbounds i8, i8* %24, i64 20
  %45 = bitcast i8* %44 to i32*
  store i32 %22, i32* %45, align 4, !noalias !10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 %43, i1 false) #10, !noalias !10
  %46 = ptrtoint i8* %24 to i64
  %47 = bitcast %"class.WTF::Vector.942"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #10, !noalias !10
  %48 = getelementptr inbounds %"class.WTF::Vector.942", %"class.WTF::Vector.942"* %6, i64 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.WTF::Vector.942", %"class.WTF::Vector.942"* %6, i64 0, i32 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.WTF::Vector.942", %"class.WTF::Vector.942"* %6, i64 0, i32 0, i32 0, i32 2
  %51 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm(i64 %36) #10, !noalias !10
  %52 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %51, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink20NonInterpolableValueEEEEPKcv, i64 0, i64 0)) #10, !noalias !10
  %53 = ptrtoint i8* %52 to i64
  %54 = bitcast %"class.WTF::Vector.942"* %6 to i64*
  store atomic i64 %53, i64* %54 monotonic, align 8, !noalias !10
  %55 = lshr i64 %51, 3
  %56 = trunc i64 %55 to i32
  store i32 %56, i32* %49, align 8, !noalias !10
  store i32 %22, i32* %50, align 4, !noalias !10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 %43, i1 false) #10, !noalias !10
  %57 = bitcast %"struct.blink::InterpolationValue"* %7 to i8*
  %58 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %7, i64 0, i32 1
  %60 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %59, i64 0, i32 0
  %61 = getelementptr inbounds %"class.blink::CSSCustomListInterpolationType", %"class.blink::CSSCustomListInterpolationType"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 2, i32 2
  %63 = bitcast i8* %62 to %"class.WTF::Vector.929"*
  %64 = bitcast i8* %26 to %"class.WTF::Vector.937"*
  %65 = bitcast %class.scoped_refptr.190* %59 to i64*
  %66 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  %67 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %7, i64 0, i32 1, i32 0
  br label %70

68:                                               ; preds = %140
  %69 = icmp eq i32 %142, %22
  br i1 %69, label %143, label %70

70:                                               ; preds = %68, %32
  %71 = phi i32 [ 0, %32 ], [ %142, %68 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #10, !noalias !10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 16, i1 false) #10, !noalias !10
  %72 = load %"class.blink::CSSInterpolationType"*, %"class.blink::CSSInterpolationType"** %61, align 8, !noalias !16
  %73 = call dereferenceable(8) %"class.blink::Member.932"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.929"* %63, i32 %71) #10, !noalias !16
  %74 = getelementptr inbounds %"class.blink::Member.932", %"class.blink::Member.932"* %73, i64 0, i32 0, i32 0
  %75 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %74, align 8, !noalias !16
  %76 = bitcast %"class.blink::CSSInterpolationType"* %72 to void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.193"*)***
  %77 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.193"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.193"*)*** %76, align 8, !noalias !16
  %78 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.193"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.193"*)** %77, i64 11
  %79 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.193"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.193"*)** %78, align 8, !noalias !16
  call void %79(%"struct.blink::InterpolationValue"* nonnull sret %7, %"class.blink::CSSInterpolationType"* %72, %"class.blink::CSSValue"* dereferenceable(3) %75, %"class.blink::StyleResolverState"* %3, %"class.WTF::Vector.193"* nonnull dereferenceable(16) %8) #10, !noalias !10
  %80 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %58, align 8, !noalias !10
  %81 = icmp eq %"class.blink::InterpolableValue"* %80, null
  br i1 %81, label %82, label %83

82:                                               ; preds = %70
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #10, !alias.scope !10
  br label %115

83:                                               ; preds = %70
  %84 = ptrtoint %"class.blink::InterpolableValue"* %80 to i64
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %58, align 8, !noalias !10
  %85 = call dereferenceable(8) %"class.std::__1::unique_ptr.184"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.937"* %64, i32 %71) #10, !noalias !10
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.184"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %86, align 8, !noalias !10
  %88 = bitcast %"class.std::__1::unique_ptr.184"* %85 to i64*
  store i64 %84, i64* %88, align 8, !noalias !10
  %89 = icmp eq %"class.blink::InterpolableValue"* %87, null
  br i1 %89, label %95, label %90

90:                                               ; preds = %83
  %91 = bitcast %"class.blink::InterpolableValue"* %87 to void (%"class.blink::InterpolableValue"*)***
  %92 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %91, align 8, !noalias !10
  %93 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %92, i64 1
  %94 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %93, align 8, !noalias !10
  call void %94(%"class.blink::InterpolableValue"* nonnull %87) #10, !noalias !10
  br label %95

95:                                               ; preds = %90, %83
  %96 = load i64, i64* %65, align 8, !noalias !10
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %60, align 8, !noalias !10
  %97 = call dereferenceable(8) %class.scoped_refptr.190* @_ZN3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.942"* nonnull %6, i32 %71) #10, !noalias !10
  %98 = bitcast %class.scoped_refptr.190* %97 to i64*
  %99 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %97, i64 0, i32 0
  %100 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %99, align 8, !noalias !10
  store i64 %96, i64* %98, align 8, !noalias !10
  %101 = icmp eq %"class.blink::NonInterpolableValue"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %95
  %103 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %100, i64 0, i32 1, i32 0
  %104 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %103, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %104) #10, !noalias !10
  %105 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %103, i64 0, i32 0, i32 0
  %106 = load i32, i32* %105, align 4, !noalias !10
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %115

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %103, i64 -2
  %110 = bitcast %"class.base::RefCounted.192"* %109 to %"class.blink::NonInterpolableValue"*
  %111 = bitcast %"class.base::RefCounted.192"* %109 to void (%"class.blink::NonInterpolableValue"*)***
  %112 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %111, align 8, !noalias !10
  %113 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %112, i64 1
  %114 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %113, align 8, !noalias !10
  call void %114(%"class.blink::NonInterpolableValue"* nonnull %110) #10, !noalias !10
  br label %115

115:                                              ; preds = %108, %102, %95, %82
  %116 = phi i32 [ 1, %82 ], [ 0, %95 ], [ 0, %102 ], [ 0, %108 ]
  %117 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %67, align 8, !noalias !10
  %118 = icmp eq %"class.blink::NonInterpolableValue"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %117, i64 0, i32 1, i32 0
  %121 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %120, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %121) #10, !noalias !10
  %122 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %120, i64 0, i32 0, i32 0
  %123 = load i32, i32* %122, align 4, !noalias !10
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %132

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %120, i64 -2
  %127 = bitcast %"class.base::RefCounted.192"* %126 to %"class.blink::NonInterpolableValue"*
  %128 = bitcast %"class.base::RefCounted.192"* %126 to void (%"class.blink::NonInterpolableValue"*)***
  %129 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %128, align 8, !noalias !10
  %130 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %129, i64 1
  %131 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %130, align 8, !noalias !10
  call void %131(%"class.blink::NonInterpolableValue"* nonnull %127) #10, !noalias !10
  br label %132

132:                                              ; preds = %125, %119, %115
  %133 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %58, align 8, !noalias !10
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %58, align 8, !noalias !10
  %134 = icmp eq %"class.blink::InterpolableValue"* %133, null
  br i1 %134, label %140, label %135

135:                                              ; preds = %132
  %136 = bitcast %"class.blink::InterpolableValue"* %133 to void (%"class.blink::InterpolableValue"*)***
  %137 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %136, align 8, !noalias !10
  %138 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %137, i64 1
  %139 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %138, align 8, !noalias !10
  call void %139(%"class.blink::InterpolableValue"* nonnull %133) #10, !noalias !10
  br label %140

140:                                              ; preds = %135, %132
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #10, !noalias !10
  %141 = icmp eq i32 %116, 0
  %142 = add nuw i32 %71, 1
  br i1 %141, label %68, label %190

143:                                              ; preds = %68
  %144 = load i32, i32* %49, align 8, !noalias !10
  %145 = call noalias i8* @malloc(i64 32) #10, !noalias !10
  %146 = getelementptr inbounds i8, i8* %145, i64 8
  %147 = bitcast i8* %146 to i32*
  store i32 1, i32* %147, align 4, !noalias !10
  %148 = bitcast i8* %145 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink19NonInterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %148, align 8, !noalias !10
  %149 = getelementptr inbounds i8, i8* %145, i64 16
  %150 = bitcast i8* %149 to %class.scoped_refptr.190**
  store %class.scoped_refptr.190* null, %class.scoped_refptr.190** %150, align 8, !noalias !10
  %151 = getelementptr inbounds i8, i8* %145, i64 24
  %152 = bitcast i8* %151 to i32*
  store i32 0, i32* %152, align 8, !noalias !10
  %153 = icmp eq i32 %144, 0
  br i1 %153, label %163, label %154

154:                                              ; preds = %143
  %155 = zext i32 %144 to i64
  %156 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm(i64 %155) #10, !noalias !10
  %157 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %156, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink20NonInterpolableValueEEEEPKcv, i64 0, i64 0)) #10, !noalias !10
  %158 = ptrtoint i8* %157 to i64
  %159 = bitcast i8* %149 to i64*
  store atomic i64 %158, i64* %159 monotonic, align 8, !noalias !10
  %160 = lshr i64 %156, 3
  %161 = trunc i64 %160 to i32
  store i32 %161, i32* %152, align 8, !noalias !10
  %162 = bitcast i8* %157 to %class.scoped_refptr.190*
  br label %163

163:                                              ; preds = %154, %143
  %164 = phi %class.scoped_refptr.190* [ null, %143 ], [ %162, %154 ]
  %165 = load i32, i32* %50, align 4, !noalias !10
  %166 = getelementptr inbounds i8, i8* %145, i64 28
  %167 = bitcast i8* %166 to i32*
  store i32 %165, i32* %167, align 4, !noalias !10
  %168 = load %class.scoped_refptr.190*, %class.scoped_refptr.190** %48, align 8, !noalias !10
  %169 = zext i32 %165 to i64
  %170 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %168, i64 %169
  %171 = icmp eq i32 %165, 0
  br i1 %171, label %185, label %172

172:                                              ; preds = %163, %181
  %173 = phi %class.scoped_refptr.190* [ %182, %181 ], [ %164, %163 ]
  %174 = phi %class.scoped_refptr.190* [ %183, %181 ], [ %168, %163 ]
  %175 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %174, i64 0, i32 0
  %176 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %175, align 8, !noalias !10
  %177 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %173, i64 0, i32 0
  store %"class.blink::NonInterpolableValue"* %176, %"class.blink::NonInterpolableValue"** %177, align 8, !noalias !10
  %178 = icmp eq %"class.blink::NonInterpolableValue"* %176, null
  br i1 %178, label %181, label %179

179:                                              ; preds = %172
  %180 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %176, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %180) #10, !noalias !10
  br label %181

181:                                              ; preds = %179, %172
  %182 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %173, i64 1
  %183 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %174, i64 1
  %184 = icmp eq %class.scoped_refptr.190* %183, %170
  br i1 %184, label %185, label %172

185:                                              ; preds = %181, %163
  %186 = ptrtoint i8* %145 to i64
  %187 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %46, i64* %187, align 8, !alias.scope !10
  %188 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %189 = bitcast %class.scoped_refptr.190* %188 to i64*
  store i64 %186, i64* %189, align 8, !alias.scope !10
  br label %190

190:                                              ; preds = %140, %185
  %191 = phi i64 [ 0, %185 ], [ %46, %140 ]
  %192 = load %class.scoped_refptr.190*, %class.scoped_refptr.190** %48, align 8, !noalias !10
  %193 = icmp eq %class.scoped_refptr.190* %192, null
  br i1 %193, label %227, label %194, !prof !9

194:                                              ; preds = %190
  %195 = bitcast %class.scoped_refptr.190* %192 to i8*
  %196 = load i32, i32* %50, align 4, !noalias !10
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %225, label %198, !prof !2

198:                                              ; preds = %194
  %199 = zext i32 %196 to i64
  %200 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %192, i64 %199
  br label %201

201:                                              ; preds = %219, %198
  %202 = phi %class.scoped_refptr.190* [ %220, %219 ], [ %192, %198 ]
  %203 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %202, i64 0, i32 0
  %204 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %203, align 8, !noalias !10
  %205 = icmp eq %"class.blink::NonInterpolableValue"* %204, null
  br i1 %205, label %219, label %206

206:                                              ; preds = %201
  %207 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %204, i64 0, i32 1, i32 0
  %208 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %207, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %208) #10, !noalias !10
  %209 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %207, i64 0, i32 0, i32 0
  %210 = load i32, i32* %209, align 4, !noalias !10
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %219

212:                                              ; preds = %206
  %213 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %207, i64 -2
  %214 = bitcast %"class.base::RefCounted.192"* %213 to %"class.blink::NonInterpolableValue"*
  %215 = bitcast %"class.base::RefCounted.192"* %213 to void (%"class.blink::NonInterpolableValue"*)***
  %216 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %215, align 8, !noalias !10
  %217 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %216, i64 1
  %218 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %217, align 8, !noalias !10
  call void %218(%"class.blink::NonInterpolableValue"* nonnull %214) #10, !noalias !10
  br label %219

219:                                              ; preds = %212, %206, %201
  %220 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %202, i64 1
  %221 = icmp eq %class.scoped_refptr.190* %220, %200
  br i1 %221, label %222, label %201

222:                                              ; preds = %219
  store i32 0, i32* %50, align 4, !noalias !10
  %223 = bitcast %"class.WTF::Vector.942"* %6 to i8**
  %224 = load i8*, i8** %223, align 8, !noalias !10
  br label %225

225:                                              ; preds = %222, %194
  %226 = phi i8* [ %224, %222 ], [ %195, %194 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %226) #10, !noalias !10
  store %class.scoped_refptr.190* null, %class.scoped_refptr.190** %48, align 8, !noalias !10
  br label %227

227:                                              ; preds = %225, %190
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #10, !noalias !10
  %228 = icmp eq i64 %191, 0
  br i1 %228, label %235, label %229

229:                                              ; preds = %227
  %230 = inttoptr i64 %191 to %"class.blink::InterpolableList"*
  %231 = inttoptr i64 %191 to void (%"class.blink::InterpolableList"*)***
  %232 = load void (%"class.blink::InterpolableList"*)**, void (%"class.blink::InterpolableList"*)*** %231, align 8, !noalias !10
  %233 = getelementptr inbounds void (%"class.blink::InterpolableList"*)*, void (%"class.blink::InterpolableList"*)** %232, i64 1
  %234 = load void (%"class.blink::InterpolableList"*)*, void (%"class.blink::InterpolableList"*)** %233, align 8, !noalias !10
  call void %234(%"class.blink::InterpolableList"* nonnull %230) #10, !noalias !10
  br label %235

235:                                              ; preds = %27, %227, %229
  %236 = load %"class.std::__1::unique_ptr.196"*, %"class.std::__1::unique_ptr.196"** %18, align 8
  %237 = icmp eq %"class.std::__1::unique_ptr.196"* %236, null
  br i1 %237, label %263, label %238, !prof !9

238:                                              ; preds = %235
  %239 = bitcast %"class.std::__1::unique_ptr.196"* %236 to i8*
  %240 = load i32, i32* %19, align 4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %261, label %242, !prof !2

242:                                              ; preds = %238
  %243 = zext i32 %240 to i64
  %244 = getelementptr inbounds %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.196"* %236, i64 %243
  br label %245

245:                                              ; preds = %255, %242
  %246 = phi %"class.std::__1::unique_ptr.196"* [ %256, %255 ], [ %236, %242 ]
  %247 = getelementptr inbounds %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.196"* %246, i64 0, i32 0, i32 0, i32 0
  %248 = load %"class.blink::InterpolationType::ConversionChecker"*, %"class.blink::InterpolationType::ConversionChecker"** %247, align 8
  store %"class.blink::InterpolationType::ConversionChecker"* null, %"class.blink::InterpolationType::ConversionChecker"** %247, align 8
  %249 = icmp eq %"class.blink::InterpolationType::ConversionChecker"* %248, null
  br i1 %249, label %255, label %250

250:                                              ; preds = %245
  %251 = bitcast %"class.blink::InterpolationType::ConversionChecker"* %248 to void (%"class.blink::InterpolationType::ConversionChecker"*)***
  %252 = load void (%"class.blink::InterpolationType::ConversionChecker"*)**, void (%"class.blink::InterpolationType::ConversionChecker"*)*** %251, align 8
  %253 = getelementptr inbounds void (%"class.blink::InterpolationType::ConversionChecker"*)*, void (%"class.blink::InterpolationType::ConversionChecker"*)** %252, i64 1
  %254 = load void (%"class.blink::InterpolationType::ConversionChecker"*)*, void (%"class.blink::InterpolationType::ConversionChecker"*)** %253, align 8
  call void %254(%"class.blink::InterpolationType::ConversionChecker"* nonnull %248) #10
  br label %255

255:                                              ; preds = %250, %245
  %256 = getelementptr inbounds %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.196"* %246, i64 1
  %257 = icmp eq %"class.std::__1::unique_ptr.196"* %256, %244
  br i1 %257, label %258, label %245

258:                                              ; preds = %255
  store i32 0, i32* %19, align 4
  %259 = bitcast %"class.WTF::Vector.193"* %8 to i8**
  %260 = load i8*, i8** %259, align 8
  br label %261

261:                                              ; preds = %258, %238
  %262 = phi i8* [ %260, %258 ], [ %239, %238 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %262) #10
  store %"class.std::__1::unique_ptr.196"* null, %"class.std::__1::unique_ptr.196"** %18, align 8
  br label %263

263:                                              ; preds = %235, %261
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #10
  br label %264

264:                                              ; preds = %263, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZNK5blink30CSSCustomListInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE(%"class.blink::CSSCustomListInterpolationType"* nocapture readonly, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"* dereferenceable(600)) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.blink::InterpolableValue"* %1 to %"class.blink::InterpolableList"*
  %6 = bitcast %"class.blink::NonInterpolableValue"* %2 to i8* (%"class.blink::NonInterpolableValue"*)***
  %7 = load i8* (%"class.blink::NonInterpolableValue"*)**, i8* (%"class.blink::NonInterpolableValue"*)*** %6, align 8
  %8 = getelementptr inbounds i8* (%"class.blink::NonInterpolableValue"*)*, i8* (%"class.blink::NonInterpolableValue"*)** %7, i64 2
  %9 = load i8* (%"class.blink::NonInterpolableValue"*)*, i8* (%"class.blink::NonInterpolableValue"*)** %8, align 8
  %10 = tail call i8* %9(%"class.blink::NonInterpolableValue"* %2) #10
  %11 = load i8*, i8** @_ZN5blink19NonInterpolableList12static_type_E, align 8
  %12 = icmp eq i8* %10, %11
  %13 = bitcast %"class.blink::NonInterpolableValue"* %2 to %"class.blink::NonInterpolableList"*
  %14 = select i1 %12, %"class.blink::NonInterpolableList"* %13, %"class.blink::NonInterpolableList"* null
  %15 = getelementptr inbounds %"class.blink::CSSCustomListInterpolationType", %"class.blink::CSSCustomListInterpolationType"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 2
  %18 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64 56) #10
  %19 = bitcast i8* %18 to %"class.blink::CSSValueList"*
  %20 = zext i1 %17 to i32
  tail call void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"* %19, i32 %20) #10
  %21 = getelementptr inbounds i8, i8* %18, i64 -4
  %22 = bitcast i8* %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = or i16 %23, 1
  store atomic i16 %24, i16* %22 release, align 2
  %25 = getelementptr inbounds %"class.blink::InterpolableList", %"class.blink::InterpolableList"* %5, i64 0, i32 1, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %41, label %28

28:                                               ; preds = %4
  %29 = icmp eq %"class.blink::NonInterpolableList"* %14, null
  %30 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %14, i64 0, i32 1
  %31 = getelementptr inbounds %"class.blink::CSSCustomListInterpolationType", %"class.blink::CSSCustomListInterpolationType"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 1
  %33 = bitcast %"class.blink::InterpolableValue"* %32 to %"class.WTF::Vector.937"*
  %34 = getelementptr inbounds i8, i8* %18, i64 8
  %35 = getelementptr inbounds i8, i8* %18, i64 20
  %36 = bitcast i8* %35 to i32*
  %37 = getelementptr inbounds i8, i8* %18, i64 16
  %38 = bitcast i8* %37 to i32*
  %39 = bitcast i8* %34 to %"class.blink::Member.932"**
  %40 = bitcast i8* %34 to %"class.WTF::Vector.929"*
  br label %43

41:                                               ; preds = %79, %4
  %42 = bitcast i8* %18 to %"class.blink::CSSValue"*
  ret %"class.blink::CSSValue"* %42

43:                                               ; preds = %28, %79
  %44 = phi i64 [ 0, %28 ], [ %80, %79 ]
  %45 = trunc i64 %44 to i32
  br i1 %29, label %50, label %46

46:                                               ; preds = %43
  %47 = tail call dereferenceable(8) %class.scoped_refptr.190* @_ZNK3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.942"* %30, i32 %45) #10
  %48 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %47, i64 0, i32 0
  %49 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %48, align 8
  br label %50

50:                                               ; preds = %43, %46
  %51 = phi %"class.blink::NonInterpolableValue"* [ %49, %46 ], [ null, %43 ]
  %52 = load %"class.blink::CSSInterpolationType"*, %"class.blink::CSSInterpolationType"** %31, align 8
  %53 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.184"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.937"* %33, i32 %45) #10
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.184"* %53, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %54, align 8
  %56 = bitcast %"class.blink::CSSInterpolationType"* %52 to %"class.blink::CSSValue"* (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)***
  %57 = load %"class.blink::CSSValue"* (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)**, %"class.blink::CSSValue"* (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)*** %56, align 8
  %58 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)** %57, i64 12
  %59 = load %"class.blink::CSSValue"* (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)** %58, align 8
  %60 = tail call %"class.blink::CSSValue"* %59(%"class.blink::CSSInterpolationType"* %52, %"class.blink::InterpolableValue"* dereferenceable(8) %55, %"class.blink::NonInterpolableValue"* %51, %"class.blink::StyleResolverState"* dereferenceable(600) %3) #10
  %61 = load i32, i32* %36, align 4
  %62 = load i32, i32* %38, align 8
  %63 = icmp eq i32 %61, %62
  br i1 %63, label %78, label %64, !prof !2

64:                                               ; preds = %50
  %65 = load %"class.blink::Member.932"*, %"class.blink::Member.932"** %39, align 8
  %66 = zext i32 %61 to i64
  %67 = getelementptr inbounds %"class.blink::Member.932", %"class.blink::Member.932"* %65, i64 %66
  %68 = ptrtoint %"class.blink::CSSValue"* %60 to i64
  %69 = bitcast %"class.blink::Member.932"* %67 to i64*
  store atomic i64 %68, i64* %69 monotonic, align 8
  %70 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %60, i64 0, i32 0
  %74 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %73) #10
  br label %75

75:                                               ; preds = %72, %64
  %76 = load i32, i32* %36, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %36, align 4
  br label %79

78:                                               ; preds = %50
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.929"* %40, %"class.blink::CSSValue"* dereferenceable(3) %60) #10
  br label %79

79:                                               ; preds = %75, %78
  %80 = add nuw nsw i64 %44, 1
  %81 = load i32, i32* %25, align 4
  %82 = zext i32 %81 to i64
  %83 = icmp ult i64 %80, %82
  br i1 %83, label %43, label %41
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink30CSSCustomListInterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd(%"class.blink::CSSCustomListInterpolationType"*, %"class.blink::UnderlyingValueOwner"* dereferenceable(40), double, %"struct.blink::InterpolationValue"* dereferenceable(16), double) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::RepeatingCallback", align 8
  %7 = alloca %"class.base::RepeatingCallback.948", align 8
  %8 = alloca %"class.base::RepeatingCallback.949", align 8
  %9 = getelementptr inbounds %"class.blink::CSSCustomListInterpolationType", %"class.blink::CSSCustomListInterpolationType"* %0, i64 0, i32 0, i32 0
  %10 = tail call i8* @_Znwm(i64 48) #11, !noalias !19
  %11 = bitcast i8* %10 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %11, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFbPKN5blink17InterpolableValueES6_EJEEES7_E3RunEPNS0_13BindStateBaseES6_S6_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFbPKN5blink17InterpolableValueES5_EJEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !19
  %12 = getelementptr inbounds i8, i8* %10, i64 32
  %13 = bitcast i8* %12 to i64*
  store i64 ptrtoint (i1 (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)* @_ZN5blink26ListInterpolationFunctions33InterpolableValuesKnownCompatibleEPKNS_17InterpolableValueES3_ to i64), i64* %13, align 8, !noalias !19
  %14 = bitcast %"class.base::RepeatingCallback"* %6 to i8**
  store i8* %10, i8** %14, align 8, !alias.scope !19
  %15 = tail call i8* @_Znwm(i64 48) #11, !noalias !26
  %16 = bitcast i8* %15 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %16, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFbPKN5blink20NonInterpolableValueES6_EJEEES7_E3RunEPNS0_13BindStateBaseES6_S6_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFbPKN5blink20NonInterpolableValueES5_EJEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !26
  %17 = getelementptr inbounds i8, i8* %15, i64 32
  %18 = bitcast i8* %17 to i64*
  store i64 ptrtoint (i1 (%"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"*)* @_ZN5blink26ListInterpolationFunctions29VerifyNoNonInterpolableValuesEPKNS_20NonInterpolableValueES3_ to i64), i64* %18, align 8, !noalias !26
  %19 = bitcast %"class.base::RepeatingCallback.948"* %7 to i8**
  store i8* %15, i8** %19, align 8, !alias.scope !26
  %20 = getelementptr inbounds %"class.blink::CSSCustomListInterpolationType", %"class.blink::CSSCustomListInterpolationType"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = bitcast %"class.blink::CSSInterpolationType"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = tail call i8* @_Znwm(i64 56) #11, !noalias !35
  %24 = bitcast i8* %23 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %24, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.blink::UnderlyingValue"*, double, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZNK5blink30CSSCustomListInterpolationType9CompositeERNS3_20UnderlyingValueOwnerEdRKNS3_18InterpolationValueEdE3$_2JN3WTF17UnretainedWrapperINS3_20CSSInterpolationTypeEEEdEEEFvRNS3_15UnderlyingValueEdRKNS3_17InterpolableValueEPKNS3_20NonInterpolableValueEEE3RunEPNS0_13BindStateBaseESH_dSK_SN_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZNK5blink30CSSCustomListInterpolationType9CompositeERNS2_20UnderlyingValueOwnerEdRKNS2_18InterpolationValueEdE3$_2JN3WTF17UnretainedWrapperINS2_20CSSInterpolationTypeEEEdEE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !35
  %25 = getelementptr inbounds i8, i8* %23, i64 40
  %26 = bitcast i8* %25 to i64*
  store i64 %22, i64* %26, align 8, !noalias !35
  %27 = getelementptr inbounds i8, i8* %23, i64 48
  %28 = bitcast i8* %27 to double*
  store double %4, double* %28, align 8, !noalias !35
  %29 = bitcast %"class.base::RepeatingCallback.949"* %8 to i8**
  store i8* %23, i8** %29, align 8, !alias.scope !35
  call void @_ZN5blink26ListInterpolationFunctions9CompositeERNS_20UnderlyingValueOwnerEdRKNS_17InterpolationTypeERKNS_18InterpolationValueENS0_22LengthMatchingStrategyEN4base17RepeatingCallbackIFbPKNS_17InterpolableValueESE_EEENSB_IFbPKNS_20NonInterpolableValueESJ_EEENSB_IFvRNS_15UnderlyingValueEdRSD_SJ_EEE(%"class.blink::UnderlyingValueOwner"* dereferenceable(40) %1, double %2, %"class.blink::InterpolationType"* dereferenceable(32) %9, %"struct.blink::InterpolationValue"* dereferenceable(16) %3, i32 0, %"class.base::RepeatingCallback"* nonnull %6, %"class.base::RepeatingCallback.948"* nonnull %7, %"class.base::RepeatingCallback.949"* nonnull %8) #10
  %30 = getelementptr inbounds %"class.base::RepeatingCallback.949", %"class.base::RepeatingCallback.949"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #10
  %31 = getelementptr inbounds %"class.base::RepeatingCallback.948", %"class.base::RepeatingCallback.948"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #10
  %32 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %32) #10
  ret void
}

declare void @_ZN5blink26ListInterpolationFunctions9CompositeERNS_20UnderlyingValueOwnerEdRKNS_17InterpolationTypeERKNS_18InterpolationValueENS0_22LengthMatchingStrategyEN4base17RepeatingCallbackIFbPKNS_17InterpolableValueESE_EEENSB_IFbPKNS_20NonInterpolableValueESJ_EEENSB_IFvRNS_15UnderlyingValueEdRSD_SJ_EEE(%"class.blink::UnderlyingValueOwner"* dereferenceable(40), double, %"class.blink::InterpolationType"* dereferenceable(32), %"struct.blink::InterpolationValue"* dereferenceable(16), i32, %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback.948"*, %"class.base::RepeatingCallback.949"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink26ListInterpolationFunctions33InterpolableValuesKnownCompatibleEPKNS_17InterpolableValueES3_(%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*) #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink30CSSCustomListInterpolationType45GetNonInterpolableValuesAreCompatibleCallbackEv(%"class.base::RepeatingCallback.948"* noalias nocapture sret, %"class.blink::CSSCustomListInterpolationType"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 48) #11, !noalias !42
  %4 = bitcast i8* %3 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %4, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFbPKN5blink20NonInterpolableValueES6_EJEEES7_E3RunEPNS0_13BindStateBaseES6_S6_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFbPKN5blink20NonInterpolableValueES5_EJEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !42
  %5 = getelementptr inbounds i8, i8* %3, i64 32
  %6 = bitcast i8* %5 to i64*
  store i64 ptrtoint (i1 (%"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"*)* @_ZN5blink26ListInterpolationFunctions29VerifyNoNonInterpolableValuesEPKNS_20NonInterpolableValueES3_ to i64), i64* %6, align 8, !noalias !42
  %7 = bitcast %"class.base::RepeatingCallback.948"* %0 to i8**
  store i8* %3, i8** %7, align 8, !alias.scope !42
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink30CSSCustomListInterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.blink::CSSCustomListInterpolationType"* nocapture readonly, %"struct.blink::InterpolationValue"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RepeatingCallback.950", align 8
  %6 = getelementptr inbounds %"class.blink::CSSCustomListInterpolationType", %"class.blink::CSSCustomListInterpolationType"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = bitcast %"class.blink::CSSInterpolationType"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i8* @_Znwm(i64 56) #11, !noalias !49
  %10 = bitcast i8* %9 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %10, void ()* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.base::internal::BindStateBase"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink17InterpolationTypeEKFNS3_26PairwiseInterpolationValueEONS3_18InterpolationValueES7_EJN3WTF17UnretainedWrapperINS3_20CSSInterpolationTypeEEEEEEFS5_S7_S7_EE3RunEPNS0_13BindStateBaseES7_S7_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink17InterpolationTypeEKFNS2_26PairwiseInterpolationValueEONS2_18InterpolationValueES6_EJN3WTF17UnretainedWrapperINS2_20CSSInterpolationTypeEEEEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !49
  %11 = getelementptr inbounds i8, i8* %9, i64 32
  %12 = bitcast i8* %11 to <2 x i64>*
  store <2 x i64> <i64 33, i64 0>, <2 x i64>* %12, align 8, !noalias !49
  %13 = getelementptr inbounds i8, i8* %9, i64 48
  %14 = bitcast i8* %13 to i64*
  store i64 %8, i64* %14, align 8, !noalias !49
  %15 = bitcast %"class.base::RepeatingCallback.950"* %5 to i8**
  store i8* %9, i8** %15, align 8, !alias.scope !49
  call void @_ZN5blink26ListInterpolationFunctions17MaybeMergeSinglesEONS_18InterpolationValueES2_NS0_22LengthMatchingStrategyEN4base17RepeatingCallbackIFNS_26PairwiseInterpolationValueES2_S2_EEE(%"struct.blink::PairwiseInterpolationValue"* sret %0, %"struct.blink::InterpolationValue"* dereferenceable(16) %2, %"struct.blink::InterpolationValue"* dereferenceable(16) %3, i32 0, %"class.base::RepeatingCallback.950"* nonnull %5) #10
  %16 = getelementptr inbounds %"class.base::RepeatingCallback.950", %"class.base::RepeatingCallback.950"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %16) #10
  ret void
}

declare void @_ZN5blink26ListInterpolationFunctions17MaybeMergeSinglesEONS_18InterpolationValueES2_NS0_22LengthMatchingStrategyEN4base17RepeatingCallbackIFNS_26PairwiseInterpolationValueES2_S2_EEE(%"struct.blink::PairwiseInterpolationValue"* sret, %"struct.blink::InterpolationValue"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16), i32, %"class.base::RepeatingCallback.950"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink26ListInterpolationFunctions29VerifyNoNonInterpolableValuesEPKNS_20NonInterpolableValueES3_(%"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"*) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30CSSCustomListInterpolationTypeD2Ev(%"class.blink::CSSCustomListInterpolationType"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSCustomListInterpolationType", %"class.blink::CSSCustomListInterpolationType"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30CSSCustomListInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSCustomListInterpolationType", %"class.blink::CSSCustomListInterpolationType"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::CSSInterpolationType"*, %"class.blink::CSSInterpolationType"** %3, align 8
  store %"class.blink::CSSInterpolationType"* null, %"class.blink::CSSInterpolationType"** %3, align 8
  %5 = icmp eq %"class.blink::CSSInterpolationType"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::CSSInterpolationType"* %4 to void (%"class.blink::CSSInterpolationType"*)***
  %8 = load void (%"class.blink::CSSInterpolationType"*)**, void (%"class.blink::CSSInterpolationType"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::CSSInterpolationType"*)*, void (%"class.blink::CSSInterpolationType"*)** %8, i64 1
  %10 = load void (%"class.blink::CSSInterpolationType"*)*, void (%"class.blink::CSSInterpolationType"*)** %9, align 8
  tail call void %10(%"class.blink::CSSInterpolationType"* nonnull %4) #10
  br label %11

11:                                               ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink20CSSInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.blink::CSSCustomListInterpolationType", %"class.blink::CSSCustomListInterpolationType"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %13 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %12, align 8
  %14 = icmp eq %"class.blink::PersistentNode"* %13, null
  br i1 %14, label %34, label %15

15:                                               ; preds = %11
  %16 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %17 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %16, i64 0, i32 1
  %18 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %17) #10
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %22, !prof !2

20:                                               ; preds = %15
  %21 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %17, i8* %21) #10
  br label %22

22:                                               ; preds = %20, %15
  %23 = phi i8* [ %21, %20 ], [ %18, %15 ]
  %24 = bitcast i8* %23 to %"class.blink::ThreadState"**
  %25 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %25, i64 0, i32 4, i32 0, i32 0, i32 0
  %27 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %26, align 8
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %12, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %27, i64 0, i32 0, i32 0
  %30 = bitcast %"class.blink::PersistentRegion"* %27 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.blink::PersistentNode"* %28 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %28, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %33, align 8
  store %"class.blink::PersistentNode"* %28, %"class.blink::PersistentNode"** %29, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %12, align 8
  br label %34

34:                                               ; preds = %22, %11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %35 = getelementptr inbounds %"class.blink::CSSCustomListInterpolationType", %"class.blink::CSSCustomListInterpolationType"* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #10
  br label %51

51:                                               ; preds = %34, %47, %50
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30CSSCustomListInterpolationTypeD0Ev(%"class.blink::CSSCustomListInterpolationType"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSCustomListInterpolationType", %"class.blink::CSSCustomListInterpolationType"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30CSSCustomListInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSCustomListInterpolationType", %"class.blink::CSSCustomListInterpolationType"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::CSSInterpolationType"*, %"class.blink::CSSInterpolationType"** %3, align 8
  store %"class.blink::CSSInterpolationType"* null, %"class.blink::CSSInterpolationType"** %3, align 8
  %5 = icmp eq %"class.blink::CSSInterpolationType"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::CSSInterpolationType"* %4 to void (%"class.blink::CSSInterpolationType"*)***
  %8 = load void (%"class.blink::CSSInterpolationType"*)**, void (%"class.blink::CSSInterpolationType"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::CSSInterpolationType"*)*, void (%"class.blink::CSSInterpolationType"*)** %8, i64 1
  %10 = load void (%"class.blink::CSSInterpolationType"*)*, void (%"class.blink::CSSInterpolationType"*)** %9, align 8
  tail call void %10(%"class.blink::CSSInterpolationType"* nonnull %4) #10
  br label %11

11:                                               ; preds = %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink20CSSInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.blink::CSSCustomListInterpolationType", %"class.blink::CSSCustomListInterpolationType"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %13 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %12, align 8
  %14 = icmp eq %"class.blink::PersistentNode"* %13, null
  br i1 %14, label %34, label %15

15:                                               ; preds = %11
  %16 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %17 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %16, i64 0, i32 1
  %18 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %17) #10
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %22, !prof !2

20:                                               ; preds = %15
  %21 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %17, i8* %21) #10
  br label %22

22:                                               ; preds = %20, %15
  %23 = phi i8* [ %21, %20 ], [ %18, %15 ]
  %24 = bitcast i8* %23 to %"class.blink::ThreadState"**
  %25 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %25, i64 0, i32 4, i32 0, i32 0, i32 0
  %27 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %26, align 8
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %12, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %27, i64 0, i32 0, i32 0
  %30 = bitcast %"class.blink::PersistentRegion"* %27 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.blink::PersistentNode"* %28 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %28, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %33, align 8
  store %"class.blink::PersistentNode"* %28, %"class.blink::PersistentNode"** %29, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %12, align 8
  br label %34

34:                                               ; preds = %22, %11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %35 = getelementptr inbounds %"class.blink::CSSCustomListInterpolationType", %"class.blink::CSSCustomListInterpolationType"* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #10
  br label %51

51:                                               ; preds = %34, %47, %50
  %52 = bitcast %"class.blink::CSSCustomListInterpolationType"* %0 to i8*
  tail call void @free(i8* %52) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16), %"class.WTF::Vector.193"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %8 = alloca %"struct.blink::InterpolationValue", align 8
  %9 = alloca %"struct.blink::InterpolationValue", align 8
  %10 = bitcast %"struct.blink::InterpolationValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 1, i32 0
  %13 = bitcast %"class.blink::InterpolationType"* %1 to void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.193"*)***
  %14 = bitcast %"struct.blink::InterpolationValue"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  %15 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.193"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.193"*)*** %13, align 8
  %16 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.193"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.193"*)** %15, i64 3
  %17 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.193"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.193"*)** %16, align 8
  call void %17(%"struct.blink::InterpolationValue"* nonnull sret %8, %"class.blink::InterpolationType"* %1, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %2, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %4, %"struct.blink::InterpolationValue"* dereferenceable(16) %5, %"class.WTF::Vector.193"* dereferenceable(16) %6) #10
  %18 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %11, align 8
  %19 = icmp eq %"class.blink::InterpolableValue"* %18, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %7
  %21 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #10
  br label %64

22:                                               ; preds = %7
  %23 = bitcast %"struct.blink::InterpolationValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #10
  %24 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %9, i64 0, i32 1, i32 0
  %26 = bitcast %"struct.blink::InterpolationValue"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false)
  %27 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.193"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.193"*)*** %13, align 8
  %28 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.193"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.193"*)** %27, i64 3
  %29 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.193"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.193"*)** %28, align 8
  call void %29(%"struct.blink::InterpolationValue"* nonnull sret %9, %"class.blink::InterpolationType"* %1, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %3, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %4, %"struct.blink::InterpolationValue"* dereferenceable(16) %5, %"class.WTF::Vector.193"* dereferenceable(16) %6) #10
  %30 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  %31 = icmp eq %"class.blink::InterpolableValue"* %30, null
  br i1 %31, label %32, label %34

32:                                               ; preds = %22
  %33 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #10
  br label %39

34:                                               ; preds = %22
  %35 = bitcast %"class.blink::InterpolationType"* %1 to void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)***
  %36 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)**, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)** %36, i64 4
  %38 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)** %37, align 8
  call void %38(%"struct.blink::PairwiseInterpolationValue"* sret %0, %"class.blink::InterpolationType"* %1, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %8, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %9) #10
  br label %39

39:                                               ; preds = %34, %32
  %40 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %25, align 8
  %41 = icmp eq %"class.blink::NonInterpolableValue"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %40, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %43, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %44) #10
  %45 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %43, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %55

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %43, i64 -2
  %50 = bitcast %"class.base::RefCounted.192"* %49 to %"class.blink::NonInterpolableValue"*
  %51 = bitcast %"class.base::RefCounted.192"* %49 to void (%"class.blink::NonInterpolableValue"*)***
  %52 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %52, i64 1
  %54 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %53, align 8
  call void %54(%"class.blink::NonInterpolableValue"* nonnull %50) #10
  br label %55

55:                                               ; preds = %48, %42, %39
  %56 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %24, align 8
  %57 = icmp eq %"class.blink::InterpolableValue"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %55
  %59 = bitcast %"class.blink::InterpolableValue"* %56 to void (%"class.blink::InterpolableValue"*)***
  %60 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %60, i64 1
  %62 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %61, align 8
  call void %62(%"class.blink::InterpolableValue"* nonnull %56) #10
  br label %63

63:                                               ; preds = %55, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #10
  br label %64

64:                                               ; preds = %63, %20
  %65 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %12, align 8
  %66 = icmp eq %"class.blink::NonInterpolableValue"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %65, i64 0, i32 1, i32 0
  %69 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %68, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %69) #10
  %70 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %68, i64 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %80

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %68, i64 -2
  %75 = bitcast %"class.base::RefCounted.192"* %74 to %"class.blink::NonInterpolableValue"*
  %76 = bitcast %"class.base::RefCounted.192"* %74 to void (%"class.blink::NonInterpolableValue"*)***
  %77 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %77, i64 1
  %79 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %78, align 8
  call void %79(%"class.blink::NonInterpolableValue"* nonnull %75) #10
  br label %80

80:                                               ; preds = %73, %67, %64
  %81 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %11, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %11, align 8
  %82 = icmp eq %"class.blink::InterpolableValue"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = bitcast %"class.blink::InterpolableValue"* %81 to void (%"class.blink::InterpolableValue"*)***
  %85 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %85, i64 1
  %87 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %86, align 8
  call void %87(%"class.blink::InterpolableValue"* nonnull %81) #10
  br label %88

88:                                               ; preds = %80, %83
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  ret void
}

declare void @_ZNK5blink20CSSInterpolationType18MaybeConvertSingleERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSD_14default_deleteISG_EEEELj0ENSB_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* sret, %"class.blink::CSSInterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16), %"class.WTF::Vector.193"* dereferenceable(16)) unnamed_addr #2

declare void @_ZNK5blink20CSSInterpolationType27MaybeConvertUnderlyingValueERKNS_24InterpolationEnvironmentE(%"struct.blink::InterpolationValue"* sret, %"class.blink::CSSInterpolationType"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16)) unnamed_addr #2

declare void @_ZNK5blink20CSSInterpolationType5ApplyERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_24InterpolationEnvironmentE(%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink30CSSCustomListInterpolationType19MaybeConvertInitialERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias sret, %"class.blink::CSSCustomListInterpolationType"*, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.WTF::Vector.193"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink30CSSCustomListInterpolationType19MaybeConvertInheritERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias sret, %"class.blink::CSSCustomListInterpolationType"*, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.WTF::Vector.193"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias sret, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"* dereferenceable(16), i32, %"class.WTF::Vector.193"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %"struct.blink::InterpolationValue"* %2 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %7, align 8
  %10 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 1, i32 0
  %11 = bitcast %"struct.blink::InterpolationValue"* %0 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %11, align 8
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink30CSSCustomListInterpolationType43MaybeConvertStandardPropertyUnderlyingValueERKNS_13ComputedStyleE(%"struct.blink::InterpolationValue"* noalias sret, %"class.blink::CSSCustomListInterpolationType"*, %"class.blink::ComputedStyle"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink30CSSCustomListInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateE(%"class.blink::CSSCustomListInterpolationType"*, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"* dereferenceable(600)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #10
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #10
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 7
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #10
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* %34, i8* %35) #10
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #10
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #10
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !2

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #10
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

declare void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"*, i32) unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSValue"*
  tail call void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr.190* @_ZNK3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.942"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.942", %"class.WTF::Vector.942"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.942", %"class.WTF::Vector.942"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr.190*, %class.scoped_refptr.190** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %24, i64 %25
  ret %class.scoped_refptr.190* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.929"*, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.929", %"class.WTF::Vector.929"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.929"* %0, i32 %5) #10
  %6 = getelementptr inbounds %"class.WTF::Vector.929", %"class.WTF::Vector.929"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.932"*, %"class.blink::Member.932"** %6, align 8
  %8 = load i32, i32* %3, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Member.932", %"class.blink::Member.932"* %7, i64 %9
  %11 = ptrtoint %"class.blink::CSSValue"* %1 to i64
  %12 = bitcast %"class.blink::Member.932"* %10 to i64*
  store atomic i64 %11, i64* %12 monotonic, align 8
  %13 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 0
  %17 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %16) #10
  br label %18

18:                                               ; preds = %2, %15
  %19 = load i32, i32* %3, align 4
  %20 = add i32 %19, 1
  store i32 %20, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.929"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.929", %"class.WTF::Vector.929"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0), i8* %15, i8* %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #10
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.929"* %0, i32 %27)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.929"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.929", %"class.WTF::Vector.929"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %75, !prof !9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.929", %"class.WTF::Vector.929"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.932"*, %"class.blink::Member.932"** %8, align 8
  %10 = icmp eq %"class.blink::Member.932"* %9, null
  br i1 %10, label %11, label %30

11:                                               ; preds = %7
  %12 = icmp ugt i32 %1, 4
  br i1 %12, label %13, label %26

13:                                               ; preds = %11
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = bitcast %"class.WTF::Vector.929"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = trunc i64 %16 to i32
  store i32 %20, i32* %4, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %75, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #10
  br label %75

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.WTF::Vector.929", %"class.WTF::Vector.929"* %0, i64 0, i32 0, i32 1, i64 0
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector.929"* %0 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  store i32 4, i32* %4, align 8
  br label %75

30:                                               ; preds = %7
  %31 = getelementptr inbounds %"class.WTF::Vector.929", %"class.WTF::Vector.929"* %0, i64 0, i32 0, i32 1, i64 0
  %32 = bitcast i8* %31 to %"class.blink::Member.932"*
  %33 = icmp eq %"class.blink::Member.932"* %9, %32
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = icmp ult i32 %1, 5
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = zext i32 %1 to i64
  %38 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %37) #10
  %39 = load %"class.blink::Member.932"*, %"class.blink::Member.932"** %8, align 8
  %40 = icmp eq %"class.blink::Member.932"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %34, %36
  %42 = phi i64 [ %38, %36 ], [ 32, %34 ]
  %43 = phi %"class.blink::Member.932"* [ %39, %36 ], [ %9, %34 ]
  %44 = bitcast %"class.blink::Member.932"* %43 to i8*
  %45 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %44, i64 %42) #10
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = lshr i64 %42, 3
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %4, align 8
  br label %75

49:                                               ; preds = %30, %36, %41
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #10
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !2

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #10
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 6
  %61 = load i8, i8* %60, align 8, !range !56
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 16
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %71, label %67

67:                                               ; preds = %56, %63
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 13
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %63, %67
  %72 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0)) #10
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #10
  br label %74

74:                                               ; preds = %67, %71
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.929"* %0, i32 %1)
  br label %75

75:                                               ; preds = %46, %26, %23, %13, %2, %74
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.929"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %43

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.929", %"class.WTF::Vector.929"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Member.932"*, %"class.blink::Member.932"** %5, align 8
  %7 = icmp eq %"class.blink::Member.932"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.929", %"class.WTF::Vector.929"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::Member.932"*
  %10 = icmp eq %"class.blink::Member.932"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.929"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.929", %"class.WTF::Vector.929"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %102

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.929", %"class.WTF::Vector.929"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.WTF::Vector.929", %"class.WTF::Vector.929"* %0, i64 0, i32 0
  %21 = ptrtoint i8* %8 to i64
  %22 = bitcast %"class.WTF::Vector.929"* %0 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.929", %"class.WTF::Vector.929"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %23, align 8
  %24 = icmp eq i8* %8, null
  %25 = bitcast %"class.blink::Member.932"* %6 to i8*
  %26 = shl nuw nsw i64 %19, 3
  br i1 %24, label %42, label %27, !prof !2

27:                                               ; preds = %16
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %8, i8* nonnull %25, i64 %26) #10
  %28 = icmp eq i32 %18, 0
  br i1 %28, label %42, label %29

29:                                               ; preds = %27, %39
  %30 = phi i64 [ %32, %39 ], [ %19, %27 ]
  %31 = phi %"class.blink::Member.932"* [ %40, %39 ], [ %9, %27 ]
  %32 = add nsw i64 %30, -1
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.blink::Member.932"* %31 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #10
  br label %39

39:                                               ; preds = %35, %29
  %40 = getelementptr inbounds %"class.blink::Member.932", %"class.blink::Member.932"* %31, i64 1
  %41 = icmp eq i64 %32, 0
  br i1 %41, label %42, label %29

42:                                               ; preds = %39, %16, %27
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %25, i64 %26) #10
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.930"* %20, %"class.blink::Member.932"* %6) #10
  br label %102

43:                                               ; preds = %2
  %44 = zext i32 %1 to i64
  %45 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %44) #10
  %46 = lshr i64 %45, 3
  %47 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %46) #10
  %48 = ptrtoint %"class.blink::HeapVectorBacking"* %47 to i64
  %49 = getelementptr inbounds %"class.WTF::Vector.929", %"class.WTF::Vector.929"* %0, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::Member.932"*, %"class.blink::Member.932"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::Vector.929", %"class.WTF::Vector.929"* %0, i64 0, i32 0, i32 0, i32 2
  %52 = icmp ne %"class.blink::HeapVectorBacking"* %47, null
  %53 = icmp ne %"class.blink::Member.932"* %50, null
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %81, !prof !9

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.WTF::Vector.929", %"class.WTF::Vector.929"* %0, i64 0, i32 0, i32 1, i64 0
  %57 = bitcast i8* %56 to %"class.blink::Member.932"*
  %58 = icmp ne %"class.blink::Member.932"* %50, %57
  %59 = load i32, i32* %51, align 4
  %60 = zext i32 %59 to i64
  %61 = bitcast %"class.blink::Member.932"* %50 to i8*
  %62 = shl nuw nsw i64 %60, 3
  %63 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %63, i8* nonnull %61, i64 %62) #10
  %64 = icmp eq i32 %59, 0
  %65 = or i1 %58, %64
  br i1 %65, label %81, label %66

66:                                               ; preds = %55
  %67 = bitcast %"class.blink::HeapVectorBacking"* %47 to %"class.blink::Member.932"*
  br label %68

68:                                               ; preds = %66, %78
  %69 = phi i64 [ %71, %78 ], [ %60, %66 ]
  %70 = phi %"class.blink::Member.932"* [ %79, %78 ], [ %67, %66 ]
  %71 = add nsw i64 %69, -1
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.blink::Member.932"* %70 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #10
  br label %78

78:                                               ; preds = %74, %68
  %79 = getelementptr inbounds %"class.blink::Member.932", %"class.blink::Member.932"* %70, i64 1
  %80 = icmp eq i64 %71, 0
  br i1 %80, label %81, label %68

81:                                               ; preds = %78, %43, %55
  %82 = bitcast %"class.WTF::Vector.929"* %0 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = load i32, i32* %51, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %83, i64 %86) #10
  %87 = load %"class.blink::Member.932"*, %"class.blink::Member.932"** %49, align 8
  %88 = getelementptr inbounds %"class.WTF::Vector.929", %"class.WTF::Vector.929"* %0, i64 0, i32 0, i32 1, i64 0
  %89 = bitcast i8* %88 to %"class.blink::Member.932"*
  %90 = icmp eq %"class.blink::Member.932"* %87, %89
  br i1 %90, label %93, label %91, !prof !9

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.WTF::Vector.929", %"class.WTF::Vector.929"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.930"* %92, %"class.blink::Member.932"* %87) #10
  br label %93

93:                                               ; preds = %81, %91
  %94 = bitcast %"class.WTF::Vector.929"* %0 to i64*
  store atomic i64 %48, i64* %94 monotonic, align 8
  %95 = trunc i64 %46 to i32
  %96 = getelementptr inbounds %"class.WTF::Vector.929", %"class.WTF::Vector.929"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %95, i32* %96, align 8
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  %101 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %100) #10
  br label %102

102:                                              ; preds = %99, %93, %42, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.9, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.11, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #10
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #10
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 4
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #10
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* %34, i8* %35) #10
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #10
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #10
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !2

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #10
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.932"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %39, %25
  %28 = phi i64 [ 0, %25 ], [ %40, %39 ]
  %29 = getelementptr inbounds %"class.blink::Member.932", %"class.blink::Member.932"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.932"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to %"class.blink::CSSValue"*
  %35 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %34, i64 0, i32 0
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, i8* %35, i8* %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #10
  br label %39

39:                                               ; preds = %33, %27
  %40 = add nuw nsw i64 %28, 1
  %41 = icmp eq i64 %40, %23
  br i1 %41, label %42, label %27

42:                                               ; preds = %39, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.930"*, %"class.blink::Member.932"*) local_unnamed_addr #5 comdat align 2 {
  %3 = bitcast %"class.blink::Member.932"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #10
  ret void
}

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr.184"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.937"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.937", %"class.WTF::Vector.937"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.937", %"class.WTF::Vector.937"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.184"*, %"class.std::__1::unique_ptr.184"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.184"* %24, i64 %25
  ret %"class.std::__1::unique_ptr.184"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationTypeD2Ev(%"class.blink::InterpolationType"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolationType", %"class.blink::InterpolationType"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InterpolationType", %"class.blink::InterpolationType"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #10
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationTypeD0Ev(%"class.blink::InterpolationType"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"struct.blink::InterpolationValue"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %5, align 8
  %8 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"struct.blink::InterpolationValue"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %8, align 8
  %11 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i64*
  store i64 %7, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr.184"* %12 to i64*
  store i64 %10, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 2
  %15 = bitcast %class.scoped_refptr.190* %14 to i64*
  store i64 0, i64* %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd(%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"* dereferenceable(40), double, %"struct.blink::InterpolationValue"* dereferenceable(16), double) unnamed_addr #0 comdat align 2 {
  %6 = tail call dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"* %1) #10
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %7, align 8
  %9 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %9, align 8
  %11 = bitcast %"class.blink::InterpolableValue"* %8 to void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)***
  %12 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %12, i64 14
  %14 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %13, align 8
  tail call void %14(%"class.blink::InterpolableValue"* %8, double %2, %"class.blink::InterpolableValue"* dereferenceable(8) %10) #10
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23UnderlyingLengthCheckerD0Ev(%"class.blink::UnderlyingLengthChecker"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::UnderlyingLengthChecker"* %0 to i8*
  tail call void @free(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23UnderlyingLengthChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE(%"class.blink::UnderlyingLengthChecker"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::UnderlyingLengthChecker", %"class.blink::UnderlyingLengthChecker"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %6, align 8
  %8 = icmp eq %"class.blink::InterpolableValue"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::InterpolableValue"* %7 to %"class.blink::InterpolableList"*
  %11 = getelementptr inbounds %"class.blink::InterpolableList", %"class.blink::InterpolableList"* %10, i64 0, i32 1, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %3, %9
  %14 = phi i32 [ %12, %9 ], [ 0, %3 ]
  %15 = icmp eq i32 %5, %14
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationType17ConversionCheckerD2Ev(%"class.blink::InterpolationType::ConversionChecker"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_23UnderlyingLengthCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.193"*, %"class.std::__1::unique_ptr.199"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.196"*, %"class.std::__1::unique_ptr.196"** %16, align 8
  br i1 %15, label %18, label %45, !prof !9

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.196"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([185 x i8], [185 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.193"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.196"*, %"class.std::__1::unique_ptr.196"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.196"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.196"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !9

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #10
  %36 = bitcast %"class.WTF::Vector.193"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  %40 = bitcast %"class.WTF::Vector.193"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.196"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.196"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.196"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.199"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.199"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::UnderlyingLengthChecker"* null, %"class.blink::UnderlyingLengthChecker"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.196"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.12, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.12, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.12, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr.184"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.937"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.937", %"class.WTF::Vector.937"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.937", %"class.WTF::Vector.937"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.184"*, %"class.std::__1::unique_ptr.184"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.184"* %24, i64 %25
  ret %"class.std::__1::unique_ptr.184"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr.190* @_ZN3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.942"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.942", %"class.WTF::Vector.942"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.942", %"class.WTF::Vector.942"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr.190*, %class.scoped_refptr.190** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %24, i64 %25
  ret %class.scoped_refptr.190* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19NonInterpolableListD2Ev(%"class.blink::NonInterpolableList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink19NonInterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::Vector.942", %"class.WTF::Vector.942"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %class.scoped_refptr.190*, %class.scoped_refptr.190** %4, align 8
  %6 = icmp eq %class.scoped_refptr.190* %5, null
  br i1 %6, label %41, label %7, !prof !9

7:                                                ; preds = %1
  %8 = bitcast %class.scoped_refptr.190* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %39, label %12, !prof !2

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %5, i64 %13
  br label %15

15:                                               ; preds = %33, %12
  %16 = phi %class.scoped_refptr.190* [ %34, %33 ], [ %5, %12 ]
  %17 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %16, i64 0, i32 0
  %18 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %17, align 8
  %19 = icmp eq %"class.blink::NonInterpolableValue"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %18, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %21, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %22) #10
  %23 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %21, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %21, i64 -2
  %28 = bitcast %"class.base::RefCounted.192"* %27 to %"class.blink::NonInterpolableValue"*
  %29 = bitcast %"class.base::RefCounted.192"* %27 to void (%"class.blink::NonInterpolableValue"*)***
  %30 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %30, i64 1
  %32 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %31, align 8
  tail call void %32(%"class.blink::NonInterpolableValue"* nonnull %28) #10
  br label %33

33:                                               ; preds = %26, %20, %15
  %34 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %16, i64 1
  %35 = icmp eq %class.scoped_refptr.190* %34, %14
  br i1 %35, label %36, label %15

36:                                               ; preds = %33
  store i32 0, i32* %9, align 4
  %37 = bitcast %"class.WTF::Vector.942"* %3 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %7
  %40 = phi i8* [ %38, %36 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #10
  store %class.scoped_refptr.190* null, %class.scoped_refptr.190** %4, align 8
  br label %41

41:                                               ; preds = %1, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19NonInterpolableListD0Ev(%"class.blink::NonInterpolableList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink19NonInterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::Vector.942", %"class.WTF::Vector.942"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %class.scoped_refptr.190*, %class.scoped_refptr.190** %4, align 8
  %6 = icmp eq %class.scoped_refptr.190* %5, null
  br i1 %6, label %41, label %7, !prof !9

7:                                                ; preds = %1
  %8 = bitcast %class.scoped_refptr.190* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %39, label %12, !prof !2

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %5, i64 %13
  br label %15

15:                                               ; preds = %33, %12
  %16 = phi %class.scoped_refptr.190* [ %34, %33 ], [ %5, %12 ]
  %17 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %16, i64 0, i32 0
  %18 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %17, align 8
  %19 = icmp eq %"class.blink::NonInterpolableValue"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %18, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %21, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %22) #10
  %23 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %21, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %21, i64 -2
  %28 = bitcast %"class.base::RefCounted.192"* %27 to %"class.blink::NonInterpolableValue"*
  %29 = bitcast %"class.base::RefCounted.192"* %27 to void (%"class.blink::NonInterpolableValue"*)***
  %30 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %30, i64 1
  %32 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %31, align 8
  tail call void %32(%"class.blink::NonInterpolableValue"* nonnull %28) #10
  br label %33

33:                                               ; preds = %26, %20, %15
  %34 = getelementptr inbounds %class.scoped_refptr.190, %class.scoped_refptr.190* %16, i64 1
  %35 = icmp eq %class.scoped_refptr.190* %34, %14
  br i1 %35, label %36, label %15

36:                                               ; preds = %33
  store i32 0, i32* %9, align 4
  %37 = bitcast %"class.WTF::Vector.942"* %3 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %7
  %40 = phi i8* [ %38, %36 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #10
  br label %41

41:                                               ; preds = %1, %39
  %42 = bitcast %"class.blink::NonInterpolableList"* %0 to i8*
  tail call void @free(i8* %42) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink19NonInterpolableList7GetTypeEv(%"class.blink::NonInterpolableList"*) unnamed_addr #0 comdat align 2 {
  %2 = load i8*, i8** @_ZN5blink19NonInterpolableList12static_type_E, align 8
  ret i8* %2
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.932"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.929"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.929", %"class.WTF::Vector.929"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.929", %"class.WTF::Vector.929"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.932"*, %"class.blink::Member.932"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.932", %"class.blink::Member.932"* %24, i64 %25
  ret %"class.blink::Member.932"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal7InvokerINS0_9BindStateIPFbPKN5blink17InterpolableValueES6_EJEEES7_E3RunEPNS0_13BindStateBaseES6_S6_(%"class.base::internal::BindStateBase"*, %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to i1 (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)**
  %6 = load i1 (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*, i1 (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::InterpolableValue"* %1, %"class.blink::InterpolableValue"* %2) #10
  ret i1 %7
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFbPKN5blink17InterpolableValueES5_EJEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZNK5blink30CSSCustomListInterpolationType9CompositeERNS3_20UnderlyingValueOwnerEdRKNS3_18InterpolationValueEdE3$_2JN3WTF17UnretainedWrapperINS3_20CSSInterpolationTypeEEEdEEEFvRNS3_15UnderlyingValueEdRKNS3_17InterpolableValueEPKNS3_20NonInterpolableValueEEE3RunEPNS0_13BindStateBaseESH_dSK_SN_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.blink::UnderlyingValue"* dereferenceable(8), double, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*) #0 align 2 {
  %6 = alloca %"class.blink::UnderlyingValueOwner", align 8
  %7 = alloca %"struct.blink::InterpolationValue", align 8
  %8 = alloca %"struct.blink::InterpolationValue", align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to %"class.blink::CSSInterpolationType"**
  %11 = load %"class.blink::CSSInterpolationType"*, %"class.blink::CSSInterpolationType"** %10, align 8
  %12 = getelementptr inbounds void ()*, void ()** %9, i64 1
  %13 = bitcast void ()** %12 to double*
  %14 = load double, double* %13, align 8
  %15 = bitcast %"class.blink::UnderlyingValueOwner"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %6, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %6, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %6, i64 0, i32 2, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink20UnderlyingValueOwnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %20 = bitcast %"class.blink::InterpolationType"** %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 32, i1 false) #10
  %21 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %11, i64 0, i32 0
  %22 = bitcast %"struct.blink::InterpolationValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #10
  %23 = bitcast %"class.blink::UnderlyingValue"* %1 to %"class.blink::InterpolableValue"* (%"class.blink::UnderlyingValue"*)***
  %24 = load %"class.blink::InterpolableValue"* (%"class.blink::UnderlyingValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::UnderlyingValue"*)*** %23, align 8
  %25 = load %"class.blink::InterpolableValue"* (%"class.blink::UnderlyingValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::UnderlyingValue"*)** %24, align 8
  %26 = tail call dereferenceable(8) %"class.blink::InterpolableValue"* %25(%"class.blink::UnderlyingValue"* %1) #10
  %27 = bitcast %"class.blink::InterpolableValue"* %26 to %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)***
  %28 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %28, i64 16
  %30 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %29, align 8
  %31 = tail call %"class.blink::InterpolableValue"* %30(%"class.blink::InterpolableValue"* %26) #10
  %32 = bitcast %"class.blink::UnderlyingValue"* %1 to %"class.blink::NonInterpolableValue"* (%"class.blink::UnderlyingValue"*)***
  %33 = load %"class.blink::NonInterpolableValue"* (%"class.blink::UnderlyingValue"*)**, %"class.blink::NonInterpolableValue"* (%"class.blink::UnderlyingValue"*)*** %32, align 8
  %34 = getelementptr inbounds %"class.blink::NonInterpolableValue"* (%"class.blink::UnderlyingValue"*)*, %"class.blink::NonInterpolableValue"* (%"class.blink::UnderlyingValue"*)** %33, i64 2
  %35 = load %"class.blink::NonInterpolableValue"* (%"class.blink::UnderlyingValue"*)*, %"class.blink::NonInterpolableValue"* (%"class.blink::UnderlyingValue"*)** %34, align 8
  %36 = tail call %"class.blink::NonInterpolableValue"* %35(%"class.blink::UnderlyingValue"* %1) #10
  %37 = icmp eq %"class.blink::NonInterpolableValue"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %5
  %39 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %36, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %39) #10
  br label %40

40:                                               ; preds = %38, %5
  %41 = ptrtoint %"class.blink::InterpolableValue"* %31 to i64
  %42 = ptrtoint %"class.blink::NonInterpolableValue"* %36 to i64
  %43 = bitcast %"struct.blink::InterpolationValue"* %7 to i64*
  store i64 %41, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %7, i64 0, i32 1
  %45 = bitcast %class.scoped_refptr.190* %44 to i64*
  store i64 %42, i64* %45, align 8
  call void @_ZN5blink20UnderlyingValueOwner3SetERKNS_17InterpolationTypeEONS_18InterpolationValueE(%"class.blink::UnderlyingValueOwner"* nonnull %6, %"class.blink::InterpolationType"* dereferenceable(32) %21, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %7) #10
  %46 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %7, i64 0, i32 1, i32 0
  %47 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %46, align 8
  %48 = icmp eq %"class.blink::NonInterpolableValue"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %40
  %50 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %47, i64 0, i32 1, i32 0
  %51 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %50, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %51) #10
  %52 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %50, i64 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %62

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %50, i64 -2
  %57 = bitcast %"class.base::RefCounted.192"* %56 to %"class.blink::NonInterpolableValue"*
  %58 = bitcast %"class.base::RefCounted.192"* %56 to void (%"class.blink::NonInterpolableValue"*)***
  %59 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %59, i64 1
  %61 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %60, align 8
  call void %61(%"class.blink::NonInterpolableValue"* nonnull %57) #10
  br label %62

62:                                               ; preds = %55, %49, %40
  %63 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %63, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %63, align 8
  %65 = icmp eq %"class.blink::InterpolableValue"* %64, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %62
  %67 = bitcast %"class.blink::InterpolableValue"* %64 to void (%"class.blink::InterpolableValue"*)***
  %68 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %68, i64 1
  %70 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %69, align 8
  call void %70(%"class.blink::InterpolableValue"* nonnull %64) #10
  br label %71

71:                                               ; preds = %66, %62
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #10
  %72 = bitcast %"struct.blink::InterpolationValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #10
  %73 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 1, i32 0
  %75 = bitcast %"class.blink::InterpolableValue"* %3 to %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)***
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 16, i1 false) #10
  %76 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*** %75, align 8
  %77 = getelementptr inbounds %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %76, i64 16
  %78 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %77, align 8
  %79 = call %"class.blink::InterpolableValue"* %78(%"class.blink::InterpolableValue"* %3) #10
  %80 = icmp eq %"class.blink::NonInterpolableValue"* %4, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %71
  %82 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %4, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %82) #10
  br label %83

83:                                               ; preds = %81, %71
  %84 = ptrtoint %"class.blink::InterpolableValue"* %79 to i64
  %85 = ptrtoint %"class.blink::NonInterpolableValue"* %4 to i64
  %86 = bitcast %"struct.blink::InterpolationValue"* %8 to i64*
  store i64 %84, i64* %86, align 8
  %87 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 1
  %88 = bitcast %class.scoped_refptr.190* %87 to i64*
  store i64 %85, i64* %88, align 8
  %89 = bitcast %"class.blink::CSSInterpolationType"* %11 to void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)***
  %90 = load void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)**, void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)*, void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)** %90, i64 6
  %92 = load void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)*, void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)** %91, align 8
  call void %92(%"class.blink::InterpolationType"* %21, %"class.blink::UnderlyingValueOwner"* nonnull dereferenceable(40) %6, double %2, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %8, double %14) #10
  %93 = call dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZNK5blink20UnderlyingValueOwner5ValueEv(%"class.blink::UnderlyingValueOwner"* nonnull %6) #10
  %94 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %93, i64 0, i32 0, i32 0, i32 0, i32 0
  %95 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %94, align 8, !noalias !57
  %96 = icmp eq %"class.blink::InterpolableValue"* %95, null
  br i1 %96, label %103, label %97

97:                                               ; preds = %83
  %98 = bitcast %"class.blink::InterpolableValue"* %95 to %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)***
  %99 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*** %98, align 8, !noalias !57
  %100 = getelementptr inbounds %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %99, i64 16
  %101 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %100, align 8, !noalias !57
  %102 = call %"class.blink::InterpolableValue"* %101(%"class.blink::InterpolableValue"* nonnull %95) #10, !noalias !57
  br label %103

103:                                              ; preds = %97, %83
  %104 = phi %"class.blink::InterpolableValue"* [ %102, %97 ], [ null, %83 ]
  %105 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %93, i64 0, i32 1, i32 0
  %106 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %105, align 8, !noalias !57
  %107 = icmp eq %"class.blink::NonInterpolableValue"* %106, null
  br i1 %107, label %126, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %106, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %109) #10, !noalias !57
  %110 = bitcast %"class.blink::UnderlyingValue"* %1 to void (%"class.blink::UnderlyingValue"*, %"class.blink::InterpolableValue"*)***
  %111 = load void (%"class.blink::UnderlyingValue"*, %"class.blink::InterpolableValue"*)**, void (%"class.blink::UnderlyingValue"*, %"class.blink::InterpolableValue"*)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.blink::UnderlyingValue"*, %"class.blink::InterpolableValue"*)*, void (%"class.blink::UnderlyingValue"*, %"class.blink::InterpolableValue"*)** %111, i64 1
  %113 = load void (%"class.blink::UnderlyingValue"*, %"class.blink::InterpolableValue"*)*, void (%"class.blink::UnderlyingValue"*, %"class.blink::InterpolableValue"*)** %112, align 8
  call void %113(%"class.blink::UnderlyingValue"* %1, %"class.blink::InterpolableValue"* %104) #10
  %114 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %106, i64 0, i32 1, i32 0
  %115 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %114, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %115) #10
  %116 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %114, i64 0, i32 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %131

119:                                              ; preds = %108
  %120 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %114, i64 -2
  %121 = bitcast %"class.base::RefCounted.192"* %120 to %"class.blink::NonInterpolableValue"*
  %122 = bitcast %"class.base::RefCounted.192"* %120 to void (%"class.blink::NonInterpolableValue"*)***
  %123 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %122, align 8
  %124 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %123, i64 1
  %125 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %124, align 8
  call void %125(%"class.blink::NonInterpolableValue"* nonnull %121) #10
  br label %131

126:                                              ; preds = %103
  %127 = bitcast %"class.blink::UnderlyingValue"* %1 to void (%"class.blink::UnderlyingValue"*, %"class.blink::InterpolableValue"*)***
  %128 = load void (%"class.blink::UnderlyingValue"*, %"class.blink::InterpolableValue"*)**, void (%"class.blink::UnderlyingValue"*, %"class.blink::InterpolableValue"*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.blink::UnderlyingValue"*, %"class.blink::InterpolableValue"*)*, void (%"class.blink::UnderlyingValue"*, %"class.blink::InterpolableValue"*)** %128, i64 1
  %130 = load void (%"class.blink::UnderlyingValue"*, %"class.blink::InterpolableValue"*)*, void (%"class.blink::UnderlyingValue"*, %"class.blink::InterpolableValue"*)** %129, align 8
  call void %130(%"class.blink::UnderlyingValue"* %1, %"class.blink::InterpolableValue"* %104) #10
  br label %131

131:                                              ; preds = %126, %119, %108
  %132 = call %"class.blink::NonInterpolableValue"* @_ZNK5blink20UnderlyingValueOwner23GetNonInterpolableValueEv(%"class.blink::UnderlyingValueOwner"* nonnull %6) #10
  %133 = icmp eq %"class.blink::NonInterpolableValue"* %132, null
  br i1 %133, label %136, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %132, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %135) #10
  br label %136

136:                                              ; preds = %134, %131
  %137 = bitcast %"class.blink::UnderlyingValue"* %1 to void (%"class.blink::UnderlyingValue"*, %"class.blink::NonInterpolableValue"*)***
  %138 = load void (%"class.blink::UnderlyingValue"*, %"class.blink::NonInterpolableValue"*)**, void (%"class.blink::UnderlyingValue"*, %"class.blink::NonInterpolableValue"*)*** %137, align 8
  %139 = getelementptr inbounds void (%"class.blink::UnderlyingValue"*, %"class.blink::NonInterpolableValue"*)*, void (%"class.blink::UnderlyingValue"*, %"class.blink::NonInterpolableValue"*)** %138, i64 3
  %140 = load void (%"class.blink::UnderlyingValue"*, %"class.blink::NonInterpolableValue"*)*, void (%"class.blink::UnderlyingValue"*, %"class.blink::NonInterpolableValue"*)** %139, align 8
  call void %140(%"class.blink::UnderlyingValue"* %1, %"class.blink::NonInterpolableValue"* %132) #10
  %141 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %74, align 8
  %142 = icmp eq %"class.blink::NonInterpolableValue"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %136
  %144 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %141, i64 0, i32 1, i32 0
  %145 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %144, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %145) #10
  %146 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %144, i64 0, i32 0, i32 0
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %156

149:                                              ; preds = %143
  %150 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %144, i64 -2
  %151 = bitcast %"class.base::RefCounted.192"* %150 to %"class.blink::NonInterpolableValue"*
  %152 = bitcast %"class.base::RefCounted.192"* %150 to void (%"class.blink::NonInterpolableValue"*)***
  %153 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %152, align 8
  %154 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %153, i64 1
  %155 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %154, align 8
  call void %155(%"class.blink::NonInterpolableValue"* nonnull %151) #10
  br label %156

156:                                              ; preds = %149, %143, %136
  %157 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %73, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %73, align 8
  %158 = icmp eq %"class.blink::InterpolableValue"* %157, null
  br i1 %158, label %164, label %159

159:                                              ; preds = %156
  %160 = bitcast %"class.blink::InterpolableValue"* %157 to void (%"class.blink::InterpolableValue"*)***
  %161 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %160, align 8
  %162 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %161, i64 1
  %163 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %162, align 8
  call void %163(%"class.blink::InterpolableValue"* nonnull %157) #10
  br label %164

164:                                              ; preds = %159, %156
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink20UnderlyingValueOwnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %165 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %19, align 8
  %166 = icmp eq %"class.blink::NonInterpolableValue"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %164
  %168 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %165, i64 0, i32 1, i32 0
  %169 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %168, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %169) #10
  %170 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %168, i64 0, i32 0, i32 0
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %180

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.base::RefCounted.192", %"class.base::RefCounted.192"* %168, i64 -2
  %175 = bitcast %"class.base::RefCounted.192"* %174 to %"class.blink::NonInterpolableValue"*
  %176 = bitcast %"class.base::RefCounted.192"* %174 to void (%"class.blink::NonInterpolableValue"*)***
  %177 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %176, align 8
  %178 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %177, i64 1
  %179 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %178, align 8
  call void %179(%"class.blink::NonInterpolableValue"* nonnull %175) #10
  br label %180

180:                                              ; preds = %173, %167, %164
  %181 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %18, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %18, align 8
  %182 = icmp eq %"class.blink::InterpolableValue"* %181, null
  br i1 %182, label %188, label %183

183:                                              ; preds = %180
  %184 = bitcast %"class.blink::InterpolableValue"* %181 to void (%"class.blink::InterpolableValue"*)***
  %185 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %184, align 8
  %186 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %185, i64 1
  %187 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %186, align 8
  call void %187(%"class.blink::InterpolableValue"* nonnull %181) #10
  br label %188

188:                                              ; preds = %180, %183
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #10
  ret void
}

declare void @_ZN5blink20UnderlyingValueOwner3SetERKNS_17InterpolationTypeEONS_18InterpolationValueE(%"class.blink::UnderlyingValueOwner"*, %"class.blink::InterpolationType"* dereferenceable(32), %"struct.blink::InterpolationValue"* dereferenceable(16)) local_unnamed_addr #2

declare dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZNK5blink20UnderlyingValueOwner5ValueEv(%"class.blink::UnderlyingValueOwner"*) local_unnamed_addr #2

declare %"class.blink::NonInterpolableValue"* @_ZNK5blink20UnderlyingValueOwner23GetNonInterpolableValueEv(%"class.blink::UnderlyingValueOwner"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZNK5blink30CSSCustomListInterpolationType9CompositeERNS2_20UnderlyingValueOwnerEdRKNS2_18InterpolationValueEdE3$_2JN3WTF17UnretainedWrapperINS2_20CSSInterpolationTypeEEEdEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink17InterpolationTypeEKFNS3_26PairwiseInterpolationValueEONS3_18InterpolationValueES7_EJN3WTF17UnretainedWrapperINS3_20CSSInterpolationTypeEEEEEEFS5_S7_S7_EE3RunEPNS0_13BindStateBaseES7_S7_(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.base::internal::BindStateBase"*, %"struct.blink::InterpolationValue"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %1, i64 1
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %1, i64 1, i32 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i8**
  %8 = load i8*, i8** %7, align 8, !noalias !60
  %9 = bitcast %"class.base::internal::BindStateBase"* %5 to i64*
  %10 = load i64, i64* %9, align 8, !noalias !63
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %1, i64 1, i32 1
  %12 = bitcast void ()** %11 to i64*
  %13 = load i64, i64* %12, align 8, !noalias !63
  %14 = getelementptr inbounds i8, i8* %8, i64 %13
  %15 = bitcast i8* %14 to %"class.blink::InterpolationType"*
  %16 = and i64 %10, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %4
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %10, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)**
  %24 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)** %23, align 8
  br label %27

25:                                               ; preds = %4
  %26 = inttoptr i64 %10 to void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*
  br label %27

27:                                               ; preds = %18, %25
  %28 = phi void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* [ %24, %18 ], [ %26, %25 ]
  tail call void %28(%"struct.blink::PairwiseInterpolationValue"* sret %0, %"class.blink::InterpolationType"* %15, %"struct.blink::InterpolationValue"* dereferenceable(16) %2, %"struct.blink::InterpolationValue"* dereferenceable(16) %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink17InterpolationTypeEKFNS2_26PairwiseInterpolationValueEONS2_18InterpolationValueES6_EJN3WTF17UnretainedWrapperINS2_20CSSInterpolationTypeEEEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal7InvokerINS0_9BindStateIPFbPKN5blink20NonInterpolableValueES6_EJEEES7_E3RunEPNS0_13BindStateBaseES6_S6_(%"class.base::internal::BindStateBase"*, %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"*) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to i1 (%"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"*)**
  %6 = load i1 (%"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"*)*, i1 (%"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::NonInterpolableValue"* %1, %"class.blink::NonInterpolableValue"* %2) #10
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFbPKN5blink20NonInterpolableValueES5_EJEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink26ListInterpolationFunctions10CreateListIZNKS_30CSSCustomListInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEEE3$_0EES3_jT_: argument 0"}
!5 = distinct !{!5, !"_ZN5blink26ListInterpolationFunctions10CreateListIZNKS_30CSSCustomListInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEEE3$_0EES3_jT_"}
!6 = !{!7, !4}
!7 = distinct !{!7, !8, !"_ZZNK5blink30CSSCustomListInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEEENK3$_0clEm: argument 0"}
!8 = distinct !{!8, !"_ZZNK5blink30CSSCustomListInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEEENK3$_0clEm"}
!9 = !{!"branch_weights", i32 2000, i32 1}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN5blink26ListInterpolationFunctions10CreateListIZNKS_30CSSCustomListInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSB_14default_deleteISE_EEEELj0ENS9_18PartitionAllocatorEEEE3$_1EENS_18InterpolationValueEjT_: argument 0"}
!12 = distinct !{!12, !"_ZN5blink26ListInterpolationFunctions10CreateListIZNKS_30CSSCustomListInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSB_14default_deleteISE_EEEELj0ENS9_18PartitionAllocatorEEEE3$_1EENS_18InterpolationValueEjT_"}
!13 = !{!14, !11}
!14 = distinct !{!14, !15, !"_ZN5blink26ListInterpolationFunctions15CreateEmptyListEv: argument 0"}
!15 = distinct !{!15, !"_ZN5blink26ListInterpolationFunctions15CreateEmptyListEv"}
!16 = !{!17, !11}
!17 = distinct !{!17, !18, !"_ZZNK5blink30CSSCustomListInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEEENK3$_1clEm: argument 0"}
!18 = distinct !{!18, !"_ZZNK5blink30CSSCustomListInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEEENK3$_1clEm"}
!19 = !{!20, !22, !24}
!20 = distinct !{!20, !21, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbPKN5blink17InterpolableValueES6_EJEEEDcOT0_DpOT1_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbPKN5blink17InterpolableValueES6_EJEEEDcOT0_DpOT1_"}
!22 = distinct !{!22, !23, !"_ZN4base13BindRepeatingIRPFbPKN5blink17InterpolableValueES4_EJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!23 = distinct !{!23, !"_ZN4base13BindRepeatingIRPFbPKN5blink17InterpolableValueES4_EJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!24 = distinct !{!24, !25, !"_ZN3WTF13BindRepeatingIPFbPKN5blink17InterpolableValueES4_EJES5_EEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!25 = distinct !{!25, !"_ZN3WTF13BindRepeatingIPFbPKN5blink17InterpolableValueES4_EJES5_EEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!26 = !{!27, !29, !31, !33}
!27 = distinct !{!27, !28, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbPKN5blink20NonInterpolableValueES6_EJEEEDcOT0_DpOT1_: argument 0"}
!28 = distinct !{!28, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbPKN5blink20NonInterpolableValueES6_EJEEEDcOT0_DpOT1_"}
!29 = distinct !{!29, !30, !"_ZN4base13BindRepeatingIRPFbPKN5blink20NonInterpolableValueES4_EJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!30 = distinct !{!30, !"_ZN4base13BindRepeatingIRPFbPKN5blink20NonInterpolableValueES4_EJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!31 = distinct !{!31, !32, !"_ZN3WTF13BindRepeatingIPFbPKN5blink20NonInterpolableValueES4_EJES5_EEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!32 = distinct !{!32, !"_ZN3WTF13BindRepeatingIPFbPKN5blink20NonInterpolableValueES4_EJES5_EEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!33 = distinct !{!33, !34, !"_ZNK5blink30CSSCustomListInterpolationType45GetNonInterpolableValuesAreCompatibleCallbackEv: argument 0"}
!34 = distinct !{!34, !"_ZNK5blink30CSSCustomListInterpolationType45GetNonInterpolableValuesAreCompatibleCallbackEv"}
!35 = !{!36, !38, !40}
!36 = distinct !{!36, !37, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERZNK5blink30CSSCustomListInterpolationType9CompositeERNS3_20UnderlyingValueOwnerEdRKNS3_18InterpolationValueEdE3$_2JN3WTF17UnretainedWrapperINS3_20CSSInterpolationTypeEEERdEEEDcOT0_DpOT1_: argument 0"}
!37 = distinct !{!37, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERZNK5blink30CSSCustomListInterpolationType9CompositeERNS3_20UnderlyingValueOwnerEdRKNS3_18InterpolationValueEdE3$_2JN3WTF17UnretainedWrapperINS3_20CSSInterpolationTypeEEERdEEEDcOT0_DpOT1_"}
!38 = distinct !{!38, !39, !"_ZN4base13BindRepeatingIRZNK5blink30CSSCustomListInterpolationType9CompositeERNS1_20UnderlyingValueOwnerEdRKNS1_18InterpolationValueEdE3$_2JN3WTF17UnretainedWrapperINS1_20CSSInterpolationTypeEEERdEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!39 = distinct !{!39, !"_ZN4base13BindRepeatingIRZNK5blink30CSSCustomListInterpolationType9CompositeERNS1_20UnderlyingValueOwnerEdRKNS1_18InterpolationValueEdE3$_2JN3WTF17UnretainedWrapperINS1_20CSSInterpolationTypeEEERdEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!40 = distinct !{!40, !41, !"_ZN3WTF13BindRepeatingIZNK5blink30CSSCustomListInterpolationType9CompositeERNS1_20UnderlyingValueOwnerEdRKNS1_18InterpolationValueEdE3$_2JNS_17UnretainedWrapperINS1_20CSSInterpolationTypeEEERdEFvRNS1_15UnderlyingValueEdRKNS1_17InterpolableValueEPKNS1_20NonInterpolableValueEEEEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!41 = distinct !{!41, !"_ZN3WTF13BindRepeatingIZNK5blink30CSSCustomListInterpolationType9CompositeERNS1_20UnderlyingValueOwnerEdRKNS1_18InterpolationValueEdE3$_2JNS_17UnretainedWrapperINS1_20CSSInterpolationTypeEEERdEFvRNS1_15UnderlyingValueEdRKNS1_17InterpolableValueEPKNS1_20NonInterpolableValueEEEEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!42 = !{!43, !45, !47}
!43 = distinct !{!43, !44, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbPKN5blink20NonInterpolableValueES6_EJEEEDcOT0_DpOT1_: argument 0"}
!44 = distinct !{!44, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbPKN5blink20NonInterpolableValueES6_EJEEEDcOT0_DpOT1_"}
!45 = distinct !{!45, !46, !"_ZN4base13BindRepeatingIRPFbPKN5blink20NonInterpolableValueES4_EJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!46 = distinct !{!46, !"_ZN4base13BindRepeatingIRPFbPKN5blink20NonInterpolableValueES4_EJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!47 = distinct !{!47, !48, !"_ZN3WTF13BindRepeatingIPFbPKN5blink20NonInterpolableValueES4_EJES5_EEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!48 = distinct !{!48, !"_ZN3WTF13BindRepeatingIPFbPKN5blink20NonInterpolableValueES4_EJES5_EEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!49 = !{!50, !52, !54}
!50 = distinct !{!50, !51, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink17InterpolationTypeEKFNS3_26PairwiseInterpolationValueEONS3_18InterpolationValueES7_EJN3WTF17UnretainedWrapperINS3_20CSSInterpolationTypeEEEEEEDcOT0_DpOT1_: argument 0"}
!51 = distinct !{!51, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink17InterpolationTypeEKFNS3_26PairwiseInterpolationValueEONS3_18InterpolationValueES7_EJN3WTF17UnretainedWrapperINS3_20CSSInterpolationTypeEEEEEEDcOT0_DpOT1_"}
!52 = distinct !{!52, !53, !"_ZN4base13BindRepeatingIRMN5blink17InterpolationTypeEKFNS1_26PairwiseInterpolationValueEONS1_18InterpolationValueES5_EJN3WTF17UnretainedWrapperINS1_20CSSInterpolationTypeEEEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!53 = distinct !{!53, !"_ZN4base13BindRepeatingIRMN5blink17InterpolationTypeEKFNS1_26PairwiseInterpolationValueEONS1_18InterpolationValueES5_EJN3WTF17UnretainedWrapperINS1_20CSSInterpolationTypeEEEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
!54 = distinct !{!54, !55, !"_ZN3WTF13BindRepeatingIMN5blink17InterpolationTypeEKFNS1_26PairwiseInterpolationValueEONS1_18InterpolationValueES5_EJNS_17UnretainedWrapperINS1_20CSSInterpolationTypeEEEEFS3_S5_S5_EEEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!55 = distinct !{!55, !"_ZN3WTF13BindRepeatingIMN5blink17InterpolationTypeEKFNS1_26PairwiseInterpolationValueEONS1_18InterpolationValueES5_EJNS_17UnretainedWrapperINS1_20CSSInterpolationTypeEEEEFS3_S5_S5_EEEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!56 = !{i8 0, i8 2}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZNK5blink18InterpolationValue5CloneEv: argument 0"}
!59 = distinct !{!59, !"_ZNK5blink18InterpolationValue5CloneEv"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZN4base8internal7InvokerINS0_9BindStateIMN5blink17InterpolationTypeEKFNS3_26PairwiseInterpolationValueEONS3_18InterpolationValueES7_EJN3WTF17UnretainedWrapperINS3_20CSSInterpolationTypeEEEEEEFS5_S7_S7_EE7RunImplIRKS9_RKNSt3__15tupleIJSD_EEEJLm0EEEES5_OT_OT0_NSK_16integer_sequenceImJXspT1_EEEES7_S7_: argument 0"}
!62 = distinct !{!62, !"_ZN4base8internal7InvokerINS0_9BindStateIMN5blink17InterpolationTypeEKFNS3_26PairwiseInterpolationValueEONS3_18InterpolationValueES7_EJN3WTF17UnretainedWrapperINS3_20CSSInterpolationTypeEEEEEEFS5_S7_S7_EE7RunImplIRKS9_RKNSt3__15tupleIJSD_EEEJLm0EEEES5_OT_OT0_NSK_16integer_sequenceImJXspT1_EEEES7_S7_"}
!63 = !{!64, !61}
!64 = distinct !{!64, !65, !"_ZN4base8internal12InvokeHelperILb0EN5blink26PairwiseInterpolationValueEE8MakeItSoIRKMNS2_17InterpolationTypeEKFS3_ONS2_18InterpolationValueES8_EJPNS2_20CSSInterpolationTypeES7_S7_EEES3_OT_DpOT0_: argument 0"}
!65 = distinct !{!65, !"_ZN4base8internal12InvokeHelperILb0EN5blink26PairwiseInterpolationValueEE8MakeItSoIRKMNS2_17InterpolationTypeEKFS3_ONS2_18InterpolationValueES8_EJPNS2_20CSSInterpolationTypeES7_S7_EEES3_OT_DpOT0_"}
