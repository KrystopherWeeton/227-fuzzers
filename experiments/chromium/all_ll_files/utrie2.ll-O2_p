; ModuleID = '../../third_party/icu/source/common/utrie2.cpp'
source_filename = "../../third_party/icu/source/common/utrie2.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UTrie2 = type { i16*, i16*, i32*, i32, i32, i16, i16, i32, i32, i32, i32, i8*, i32, i8, i8, i16, %struct.UNewTrie2* }
%struct.UNewTrie2 = type { [544 x i32], [35488 x i32], i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [34852 x i32] }
%"class.icu_69::BackwardUTrie2StringIterator" = type { %"class.icu_69::UTrie2StringIterator.base", i16* }
%"class.icu_69::UTrie2StringIterator.base" = type <{ %struct.UTrie2*, i16*, i16*, i32 }>
%"class.icu_69::ForwardUTrie2StringIterator" = type { %"class.icu_69::UTrie2StringIterator.base", i16* }

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @utrie2_get32_69(%struct.UTrie2* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 1
  %4 = load i16*, i16** %3, align 8
  %5 = icmp eq i16* %4, null
  br i1 %5, label %69, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 0
  %8 = load i16*, i16** %7, align 8
  %9 = icmp ult i32 %1, 55296
  br i1 %9, label %10, label %19

10:                                               ; preds = %6
  %11 = lshr i32 %1, 5
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds i16, i16* %8, i64 %12
  %14 = load i16, i16* %13, align 2
  %15 = zext i16 %14 to i32
  %16 = shl nuw nsw i32 %15, 2
  %17 = and i32 %1, 31
  %18 = add nuw nsw i32 %16, %17
  br label %63

19:                                               ; preds = %6
  %20 = icmp ult i32 %1, 65536
  br i1 %20, label %21, label %33

21:                                               ; preds = %19
  %22 = icmp slt i32 %1, 56320
  %23 = select i1 %22, i32 320, i32 0
  %24 = lshr i32 %1, 5
  %25 = add nuw nsw i32 %23, %24
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %8, i64 %26
  %28 = load i16, i16* %27, align 2
  %29 = zext i16 %28 to i32
  %30 = shl nuw nsw i32 %29, 2
  %31 = and i32 %1, 31
  %32 = add nuw nsw i32 %30, %31
  br label %63

33:                                               ; preds = %19
  %34 = icmp ugt i32 %1, 1114111
  br i1 %34, label %35, label %39

35:                                               ; preds = %33
  %36 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 3
  %37 = load i32, i32* %36, align 8
  %38 = add nsw i32 %37, 128
  br label %63

39:                                               ; preds = %33
  %40 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 9
  %41 = load i32, i32* %40, align 4
  %42 = icmp sgt i32 %41, %1
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 10
  %45 = load i32, i32* %44, align 8
  br label %63

46:                                               ; preds = %39
  %47 = lshr i32 %1, 11
  %48 = add nuw nsw i32 %47, 2080
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i16, i16* %8, i64 %49
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i32
  %53 = lshr i32 %1, 5
  %54 = and i32 %53, 63
  %55 = add nuw nsw i32 %54, %52
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i16, i16* %8, i64 %56
  %58 = load i16, i16* %57, align 2
  %59 = zext i16 %58 to i32
  %60 = shl nuw nsw i32 %59, 2
  %61 = and i32 %1, 31
  %62 = add nuw nsw i32 %60, %61
  br label %63

63:                                               ; preds = %21, %43, %46, %35, %10
  %64 = phi i32 [ %18, %10 ], [ %32, %21 ], [ %38, %35 ], [ %45, %43 ], [ %62, %46 ]
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i16, i16* %8, i64 %65
  %67 = load i16, i16* %66, align 2
  %68 = zext i16 %67 to i32
  br label %178

69:                                               ; preds = %2
  %70 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 2
  %71 = load i32*, i32** %70, align 8
  %72 = icmp eq i32* %71, null
  br i1 %72, label %135, label %73

73:                                               ; preds = %69
  %74 = icmp ult i32 %1, 55296
  br i1 %74, label %75, label %86

75:                                               ; preds = %73
  %76 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 0
  %77 = load i16*, i16** %76, align 8
  %78 = lshr i32 %1, 5
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds i16, i16* %77, i64 %79
  %81 = load i16, i16* %80, align 2
  %82 = zext i16 %81 to i32
  %83 = shl nuw nsw i32 %82, 2
  %84 = and i32 %1, 31
  %85 = add nuw nsw i32 %83, %84
  br label %130

86:                                               ; preds = %73
  %87 = icmp ult i32 %1, 65536
  br i1 %87, label %88, label %102

88:                                               ; preds = %86
  %89 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 0
  %90 = load i16*, i16** %89, align 8
  %91 = icmp slt i32 %1, 56320
  %92 = select i1 %91, i32 320, i32 0
  %93 = lshr i32 %1, 5
  %94 = add nuw nsw i32 %92, %93
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds i16, i16* %90, i64 %95
  %97 = load i16, i16* %96, align 2
  %98 = zext i16 %97 to i32
  %99 = shl nuw nsw i32 %98, 2
  %100 = and i32 %1, 31
  %101 = add nuw nsw i32 %99, %100
  br label %130

102:                                              ; preds = %86
  %103 = icmp ugt i32 %1, 1114111
  br i1 %103, label %130, label %104

104:                                              ; preds = %102
  %105 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 9
  %106 = load i32, i32* %105, align 4
  %107 = icmp sgt i32 %106, %1
  br i1 %107, label %111, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 10
  %110 = load i32, i32* %109, align 8
  br label %130

111:                                              ; preds = %104
  %112 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 0
  %113 = load i16*, i16** %112, align 8
  %114 = lshr i32 %1, 11
  %115 = add nuw nsw i32 %114, 2080
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds i16, i16* %113, i64 %116
  %118 = load i16, i16* %117, align 2
  %119 = zext i16 %118 to i32
  %120 = lshr i32 %1, 5
  %121 = and i32 %120, 63
  %122 = add nuw nsw i32 %121, %119
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds i16, i16* %113, i64 %123
  %125 = load i16, i16* %124, align 2
  %126 = zext i16 %125 to i32
  %127 = shl nuw nsw i32 %126, 2
  %128 = and i32 %1, 31
  %129 = add nuw nsw i32 %127, %128
  br label %130

130:                                              ; preds = %88, %108, %111, %102, %75
  %131 = phi i32 [ %85, %75 ], [ %101, %88 ], [ 128, %102 ], [ %110, %108 ], [ %129, %111 ]
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i32, i32* %71, i64 %132
  %134 = load i32, i32* %133, align 4
  br label %178

135:                                              ; preds = %69
  %136 = icmp ugt i32 %1, 1114111
  br i1 %136, label %137, label %140

137:                                              ; preds = %135
  %138 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 8
  %139 = load i32, i32* %138, align 8
  br label %178

140:                                              ; preds = %135
  %141 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 16
  %142 = load %struct.UNewTrie2*, %struct.UNewTrie2** %141, align 8
  %143 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %142, i64 0, i32 11
  %144 = load i32, i32* %143, align 8
  %145 = icmp sgt i32 %144, %1
  br i1 %145, label %150, label %146

146:                                              ; preds = %140
  %147 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %142, i64 0, i32 7
  %148 = load i32, i32* %147, align 8
  %149 = add nsw i32 %148, -4
  br label %171

150:                                              ; preds = %140
  %151 = and i32 %1, -1024
  %152 = icmp eq i32 %151, 55296
  br i1 %152, label %153, label %156

153:                                              ; preds = %150
  %154 = lshr i32 %1, 5
  %155 = add nuw nsw i32 %154, 320
  br label %164

156:                                              ; preds = %150
  %157 = lshr i32 %1, 11
  %158 = zext i32 %157 to i64
  %159 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %142, i64 0, i32 0, i64 %158
  %160 = load i32, i32* %159, align 4
  %161 = lshr i32 %1, 5
  %162 = and i32 %161, 63
  %163 = add nsw i32 %160, %162
  br label %164

164:                                              ; preds = %156, %153
  %165 = phi i32 [ %155, %153 ], [ %163, %156 ]
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %142, i64 0, i32 1, i64 %166
  %168 = load i32, i32* %167, align 4
  %169 = and i32 %1, 31
  %170 = add nsw i32 %168, %169
  br label %171

171:                                              ; preds = %146, %164
  %172 = phi i32 [ %149, %146 ], [ %170, %164 ]
  %173 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %142, i64 0, i32 2
  %174 = load i32*, i32** %173, align 8
  %175 = sext i32 %172 to i64
  %176 = getelementptr inbounds i32, i32* %174, i64 %175
  %177 = load i32, i32* %176, align 4
  br label %178

178:                                              ; preds = %171, %137, %130, %63
  %179 = phi i32 [ %68, %63 ], [ %134, %130 ], [ %139, %137 ], [ %177, %171 ]
  ret i32 %179
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @utrie2_get32FromLeadSurrogateCodeUnit_69(%struct.UTrie2* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = and i32 %1, -1024
  %4 = icmp eq i32 %3, 55296
  br i1 %4, label %8, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 8
  %7 = load i32, i32* %6, align 8
  br label %65

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 1
  %10 = load i16*, i16** %9, align 8
  %11 = icmp eq i16* %10, null
  br i1 %11, label %27, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 0
  %14 = load i16*, i16** %13, align 8
  %15 = ashr i32 %1, 5
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i16, i16* %14, i64 %16
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = shl nuw nsw i32 %19, 2
  %21 = and i32 %1, 31
  %22 = add nuw nsw i32 %20, %21
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds i16, i16* %14, i64 %23
  %25 = load i16, i16* %24, align 2
  %26 = zext i16 %25 to i32
  br label %65

27:                                               ; preds = %8
  %28 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 2
  %29 = load i32*, i32** %28, align 8
  %30 = icmp eq i32* %29, null
  br i1 %30, label %45, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = ashr i32 %1, 5
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %33, i64 %35
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i32
  %39 = shl nuw nsw i32 %38, 2
  %40 = and i32 %1, 31
  %41 = add nuw nsw i32 %39, %40
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i32, i32* %29, i64 %42
  %44 = load i32, i32* %43, align 4
  br label %65

45:                                               ; preds = %27
  %46 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 16
  %47 = load %struct.UNewTrie2*, %struct.UNewTrie2** %46, align 8
  %48 = ashr i32 %1, 11
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %47, i64 0, i32 0, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = lshr i32 %1, 5
  %53 = and i32 %52, 63
  %54 = add nsw i32 %51, %53
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %47, i64 0, i32 1, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %47, i64 0, i32 2
  %59 = load i32*, i32** %58, align 8
  %60 = and i32 %1, 31
  %61 = add nsw i32 %57, %60
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i32, i32* %59, i64 %62
  %64 = load i32, i32* %63, align 4
  br label %65

65:                                               ; preds = %45, %31, %12, %5
  %66 = phi i32 [ %26, %12 ], [ %44, %31 ], [ %64, %45 ], [ %7, %5 ]
  ret i32 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @utrie2_internalU8NextIndex_69(%struct.UTrie2* nocapture readonly, i32, i8*, i8*) local_unnamed_addr #1 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #7
  store i32 0, i32* %5, align 4
  %7 = ptrtoint i8* %3 to i64
  %8 = ptrtoint i8* %2 to i64
  %9 = sub i64 %7, %8
  %10 = icmp slt i64 %9, 8
  %11 = trunc i64 %9 to i32
  %12 = select i1 %10, i32 %11, i32 7
  %13 = call i32 @utf8_nextCharSafeBody_69(i8* %2, i32* nonnull %5, i32 %12, i32 %1, i8 signext -1) #7
  %14 = load i32, i32* %5, align 4
  %15 = icmp ult i32 %13, 55296
  br i1 %15, label %16, label %27

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 0
  %18 = load i16*, i16** %17, align 8
  %19 = lshr i32 %13, 5
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds i16, i16* %18, i64 %20
  %22 = load i16, i16* %21, align 2
  %23 = zext i16 %22 to i32
  %24 = shl nuw nsw i32 %23, 2
  %25 = and i32 %13, 31
  %26 = add nuw nsw i32 %24, %25
  br label %79

27:                                               ; preds = %4
  %28 = icmp ult i32 %13, 65536
  br i1 %28, label %29, label %43

29:                                               ; preds = %27
  %30 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 0
  %31 = load i16*, i16** %30, align 8
  %32 = icmp slt i32 %13, 56320
  %33 = select i1 %32, i32 320, i32 0
  %34 = lshr i32 %13, 5
  %35 = add nuw nsw i32 %33, %34
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %31, i64 %36
  %38 = load i16, i16* %37, align 2
  %39 = zext i16 %38 to i32
  %40 = shl nuw nsw i32 %39, 2
  %41 = and i32 %13, 31
  %42 = add nuw nsw i32 %40, %41
  br label %79

43:                                               ; preds = %27
  %44 = icmp ugt i32 %13, 1114111
  br i1 %44, label %45, label %53

45:                                               ; preds = %43
  %46 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 2
  %47 = load i32*, i32** %46, align 8
  %48 = icmp eq i32* %47, null
  br i1 %48, label %49, label %79

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = add i32 %51, 128
  br label %79

53:                                               ; preds = %43
  %54 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 9
  %55 = load i32, i32* %54, align 4
  %56 = icmp sgt i32 %55, %13
  br i1 %56, label %60, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 10
  %59 = load i32, i32* %58, align 8
  br label %79

60:                                               ; preds = %53
  %61 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 0
  %62 = load i16*, i16** %61, align 8
  %63 = lshr i32 %13, 11
  %64 = add nuw nsw i32 %63, 2080
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds i16, i16* %62, i64 %65
  %67 = load i16, i16* %66, align 2
  %68 = zext i16 %67 to i32
  %69 = lshr i32 %13, 5
  %70 = and i32 %69, 63
  %71 = add nuw nsw i32 %70, %68
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i16, i16* %62, i64 %72
  %74 = load i16, i16* %73, align 2
  %75 = zext i16 %74 to i32
  %76 = shl nuw nsw i32 %75, 2
  %77 = and i32 %13, 31
  %78 = add nuw nsw i32 %76, %77
  br label %79

79:                                               ; preds = %16, %29, %45, %49, %57, %60
  %80 = phi i32 [ %26, %16 ], [ %42, %29 ], [ %59, %57 ], [ %78, %60 ], [ %52, %49 ], [ 128, %45 ]
  %81 = shl i32 %80, 3
  %82 = or i32 %81, %14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #7
  ret i32 %82
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @utf8_nextCharSafeBody_69(i8*, i32*, i32, i32, i8 signext) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @utrie2_internalU8PrevIndex_69(%struct.UTrie2* nocapture readonly, i32, i8*, i8*) local_unnamed_addr #1 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #7
  store i32 -1431655766, i32* %5, align 4
  %7 = ptrtoint i8* %3 to i64
  %8 = ptrtoint i8* %2 to i64
  %9 = sub i64 %7, %8
  %10 = icmp slt i64 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  %12 = trunc i64 %9 to i32
  store i32 %12, i32* %5, align 4
  br label %15

13:                                               ; preds = %4
  store i32 7, i32* %5, align 4
  %14 = getelementptr inbounds i8, i8* %3, i64 -7
  br label %15

15:                                               ; preds = %13, %11
  %16 = phi i8* [ %2, %11 ], [ %14, %13 ]
  %17 = phi i32 [ %12, %11 ], [ 7, %13 ]
  %18 = call i32 @utf8_prevCharSafeBody_69(i8* %16, i32 0, i32* nonnull %5, i32 %1, i8 signext -1) #7
  %19 = load i32, i32* %5, align 4
  %20 = sub nsw i32 %17, %19
  store i32 %20, i32* %5, align 4
  %21 = icmp ult i32 %18, 55296
  br i1 %21, label %22, label %33

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = lshr i32 %18, 5
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %24, i64 %26
  %28 = load i16, i16* %27, align 2
  %29 = zext i16 %28 to i32
  %30 = shl nuw nsw i32 %29, 2
  %31 = and i32 %18, 31
  %32 = add nuw nsw i32 %30, %31
  br label %85

33:                                               ; preds = %15
  %34 = icmp ult i32 %18, 65536
  br i1 %34, label %35, label %49

35:                                               ; preds = %33
  %36 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 0
  %37 = load i16*, i16** %36, align 8
  %38 = icmp slt i32 %18, 56320
  %39 = select i1 %38, i32 320, i32 0
  %40 = lshr i32 %18, 5
  %41 = add nuw nsw i32 %39, %40
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i16, i16* %37, i64 %42
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = shl nuw nsw i32 %45, 2
  %47 = and i32 %18, 31
  %48 = add nuw nsw i32 %46, %47
  br label %85

49:                                               ; preds = %33
  %50 = icmp ugt i32 %18, 1114111
  br i1 %50, label %51, label %59

51:                                               ; preds = %49
  %52 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 2
  %53 = load i32*, i32** %52, align 8
  %54 = icmp eq i32* %53, null
  br i1 %54, label %55, label %85

55:                                               ; preds = %51
  %56 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 3
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 128
  br label %85

59:                                               ; preds = %49
  %60 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 9
  %61 = load i32, i32* %60, align 4
  %62 = icmp sgt i32 %61, %18
  br i1 %62, label %66, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 10
  %65 = load i32, i32* %64, align 8
  br label %85

66:                                               ; preds = %59
  %67 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 0
  %68 = load i16*, i16** %67, align 8
  %69 = lshr i32 %18, 11
  %70 = add nuw nsw i32 %69, 2080
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds i16, i16* %68, i64 %71
  %73 = load i16, i16* %72, align 2
  %74 = zext i16 %73 to i32
  %75 = lshr i32 %18, 5
  %76 = and i32 %75, 63
  %77 = add nuw nsw i32 %76, %74
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds i16, i16* %68, i64 %78
  %80 = load i16, i16* %79, align 2
  %81 = zext i16 %80 to i32
  %82 = shl nuw nsw i32 %81, 2
  %83 = and i32 %18, 31
  %84 = add nuw nsw i32 %82, %83
  br label %85

85:                                               ; preds = %22, %35, %51, %55, %63, %66
  %86 = phi i32 [ %32, %22 ], [ %48, %35 ], [ %65, %63 ], [ %84, %66 ], [ %58, %55 ], [ 128, %51 ]
  %87 = shl i32 %86, 3
  %88 = or i32 %87, %20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #7
  ret i32 %88
}

declare i32 @utf8_prevCharSafeBody_69(i8*, i32, i32*, i32, i8 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UTrie2* @utrie2_openFromSerialized_69(i32, i8*, i32, i32*, i32* nocapture) local_unnamed_addr #1 {
  %6 = alloca { i16*, i16*, i32* }, align 8
  %7 = alloca [28 x i8], align 4
  %8 = bitcast { i16*, i16*, i32* }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8)
  %9 = getelementptr inbounds [28 x i8], [28 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %9)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %9, i8 -86, i64 28, i1 false)
  %10 = load i32, i32* %4, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %133

12:                                               ; preds = %5
  %13 = icmp slt i32 %2, 1
  br i1 %13, label %20, label %14

14:                                               ; preds = %12
  %15 = ptrtoint i8* %1 to i64
  %16 = and i64 %15, 3
  %17 = icmp ne i64 %16, 0
  %18 = icmp ugt i32 %0, 1
  %19 = or i1 %18, %17
  br i1 %19, label %20, label %21

20:                                               ; preds = %14, %12
  store i32 1, i32* %4, align 4
  br label %133

21:                                               ; preds = %14
  %22 = icmp slt i32 %2, 16
  br i1 %22, label %23, label %24

23:                                               ; preds = %21
  store i32 3, i32* %4, align 4
  br label %133

24:                                               ; preds = %21
  %25 = bitcast i8* %1 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 1416784178
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  store i32 3, i32* %4, align 4
  br label %133

29:                                               ; preds = %24
  %30 = getelementptr inbounds i8, i8* %1, i64 4
  %31 = bitcast i8* %30 to i16*
  %32 = load i16, i16* %31, align 4
  %33 = and i16 %32, 15
  %34 = zext i16 %33 to i32
  %35 = icmp eq i32 %34, %0
  br i1 %35, label %37, label %36

36:                                               ; preds = %29
  store i32 3, i32* %4, align 4
  br label %133

37:                                               ; preds = %29
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %9, i8 0, i64 28, i1 false)
  %38 = getelementptr inbounds i8, i8* %1, i64 6
  %39 = bitcast i8* %38 to i16*
  %40 = load i16, i16* %39, align 2
  %41 = zext i16 %40 to i32
  %42 = getelementptr inbounds i8, i8* %1, i64 8
  %43 = bitcast i8* %42 to i16*
  %44 = load i16, i16* %43, align 4
  %45 = zext i16 %44 to i32
  %46 = shl nuw nsw i32 %45, 2
  %47 = getelementptr inbounds i8, i8* %1, i64 10
  %48 = bitcast i8* %47 to i16*
  %49 = load i16, i16* %48, align 2
  %50 = getelementptr inbounds i8, i8* %1, i64 12
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 4
  %53 = getelementptr inbounds i8, i8* %1, i64 14
  %54 = bitcast i8* %53 to i16*
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = shl nuw nsw i32 %56, 11
  %58 = icmp eq i32 %0, 0
  %59 = add nsw i32 %41, -4
  %60 = select i1 %58, i32 %59, i32 -4
  %61 = add nsw i32 %60, %46
  %62 = shl nuw nsw i32 %41, 1
  %63 = add nuw nsw i32 %62, 16
  %64 = select i1 %58, i32 3, i32 4
  %65 = shl nuw nsw i32 %45, %64
  %66 = add nuw nsw i32 %63, %65
  %67 = icmp sgt i32 %66, %2
  br i1 %67, label %68, label %69

68:                                               ; preds = %37
  store i32 3, i32* %4, align 4
  br label %133

69:                                               ; preds = %37
  %70 = tail call noalias i8* @uprv_malloc_69(i64 80) #8
  %71 = bitcast i8* %70 to %struct.UTrie2*
  %72 = icmp eq i8* %70, null
  br i1 %72, label %73, label %74

73:                                               ; preds = %69
  store i32 7, i32* %4, align 4
  br label %133

74:                                               ; preds = %69
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %70, i8* nonnull align 8 %8, i64 24, i1 false)
  %75 = getelementptr inbounds i8, i8* %70, i64 24
  %76 = bitcast i8* %75 to i32*
  store i32 %41, i32* %76, align 8
  %77 = getelementptr inbounds i8, i8* %70, i64 28
  %78 = bitcast i8* %77 to i32*
  store i32 %46, i32* %78, align 4
  %79 = getelementptr inbounds i8, i8* %70, i64 32
  %80 = bitcast i8* %79 to i16*
  store i16 %49, i16* %80, align 8
  %81 = getelementptr inbounds i8, i8* %70, i64 34
  %82 = bitcast i8* %81 to i16*
  store i16 %52, i16* %82, align 2
  %83 = getelementptr inbounds i8, i8* %70, i64 36
  %84 = bitcast i8* %83 to i64*
  store i64 0, i64* %84, align 4
  %85 = getelementptr inbounds i8, i8* %70, i64 44
  %86 = bitcast i8* %85 to i32*
  store i32 %57, i32* %86, align 4
  %87 = getelementptr inbounds i8, i8* %70, i64 48
  %88 = bitcast i8* %87 to i32*
  store i32 %61, i32* %88, align 8
  %89 = getelementptr inbounds i8, i8* %70, i64 52
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %89, i8* nonnull align 4 %9, i64 28, i1 false)
  %90 = getelementptr inbounds i8, i8* %70, i64 56
  %91 = bitcast i8* %90 to i8**
  store i8* %1, i8** %91, align 8
  %92 = getelementptr inbounds i8, i8* %70, i64 64
  %93 = bitcast i8* %92 to i32*
  store i32 %66, i32* %93, align 8
  %94 = getelementptr inbounds i8, i8* %70, i64 68
  store i8 0, i8* %94, align 4
  %95 = getelementptr inbounds i8, i8* %1, i64 16
  %96 = bitcast i8* %95 to i16*
  %97 = bitcast i8* %70 to i8**
  store i8* %95, i8** %97, align 8
  %98 = zext i16 %40 to i64
  %99 = getelementptr inbounds i16, i16* %96, i64 %98
  switch i32 %0, label %126 [
    i32 0, label %100
    i32 1, label %113
  ]

100:                                              ; preds = %74
  %101 = getelementptr inbounds i8, i8* %70, i64 8
  %102 = bitcast i8* %101 to i16**
  store i16* %99, i16** %102, align 8
  %103 = getelementptr inbounds i8, i8* %70, i64 16
  %104 = bitcast i8* %103 to i32**
  store i32* null, i32** %104, align 8
  %105 = zext i16 %52 to i64
  %106 = getelementptr inbounds i16, i16* %96, i64 %105
  %107 = load i16, i16* %106, align 2
  %108 = zext i16 %107 to i32
  %109 = bitcast i8* %83 to i32*
  store i32 %108, i32* %109, align 4
  %110 = getelementptr inbounds i16, i16* %99, i64 128
  %111 = load i16, i16* %110, align 2
  %112 = zext i16 %111 to i32
  br label %127

113:                                              ; preds = %74
  %114 = getelementptr inbounds i8, i8* %70, i64 8
  %115 = bitcast i8* %114 to i16**
  store i16* null, i16** %115, align 8
  %116 = bitcast i16* %99 to i32*
  %117 = getelementptr inbounds i8, i8* %70, i64 16
  %118 = bitcast i8* %117 to i16**
  store i16* %99, i16** %118, align 8
  %119 = zext i16 %52 to i64
  %120 = getelementptr inbounds i32, i32* %116, i64 %119
  %121 = load i32, i32* %120, align 4
  %122 = bitcast i8* %83 to i32*
  store i32 %121, i32* %122, align 4
  %123 = getelementptr inbounds i16, i16* %99, i64 256
  %124 = bitcast i16* %123 to i32*
  %125 = load i32, i32* %124, align 4
  br label %127

126:                                              ; preds = %74
  store i32 3, i32* %4, align 4
  br label %133

127:                                              ; preds = %113, %100
  %128 = phi i32 [ %125, %113 ], [ %112, %100 ]
  %129 = getelementptr inbounds i8, i8* %70, i64 40
  %130 = bitcast i8* %129 to i32*
  store i32 %128, i32* %130, align 8
  %131 = icmp eq i32* %3, null
  br i1 %131, label %133, label %132

132:                                              ; preds = %127
  store i32 %66, i32* %3, align 4
  br label %133

133:                                              ; preds = %132, %127, %5, %126, %73, %68, %36, %28, %23, %20
  %134 = phi %struct.UTrie2* [ null, %20 ], [ null, %23 ], [ null, %28 ], [ null, %36 ], [ null, %68 ], [ null, %73 ], [ null, %126 ], [ null, %5 ], [ %71, %127 ], [ %71, %132 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8)
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %9)
  ret %struct.UTrie2* %134
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UTrie2* @utrie2_openDummy_69(i32, i32, i32, i32* nocapture) local_unnamed_addr #1 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %304

7:                                                ; preds = %4
  %8 = icmp ugt i32 %0, 1
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  store i32 1, i32* %3, align 4
  br label %304

10:                                               ; preds = %7
  %11 = icmp eq i32 %0, 0
  %12 = select i1 %11, i32 4632, i32 5024
  %13 = tail call noalias i8* @uprv_malloc_69(i64 80) #8
  %14 = bitcast i8* %13 to %struct.UTrie2*
  %15 = icmp eq i8* %13, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %10
  store i32 7, i32* %3, align 4
  br label %304

17:                                               ; preds = %10
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 80, i1 false)
  %18 = zext i32 %12 to i64
  %19 = tail call noalias i8* @uprv_malloc_69(i64 %18) #8
  %20 = getelementptr inbounds i8, i8* %13, i64 56
  %21 = bitcast i8* %20 to i8**
  store i8* %19, i8** %21, align 8
  %22 = icmp eq i8* %19, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %17
  tail call void @uprv_free_69(i8* nonnull %13) #7
  store i32 7, i32* %3, align 4
  br label %304

24:                                               ; preds = %17
  %25 = getelementptr inbounds i8, i8* %13, i64 64
  %26 = bitcast i8* %25 to i32*
  store i32 %12, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %13, i64 68
  store i8 1, i8* %27, align 4
  %28 = select i1 %11, i32 2112, i32 0
  %29 = getelementptr inbounds i8, i8* %13, i64 24
  %30 = bitcast i8* %29 to i32*
  store i32 2112, i32* %30, align 8
  %31 = getelementptr inbounds i8, i8* %13, i64 28
  %32 = bitcast i8* %31 to i32*
  store i32 196, i32* %32, align 4
  %33 = getelementptr inbounds i8, i8* %13, i64 32
  %34 = bitcast i8* %33 to i16*
  store i16 0, i16* %34, align 8
  %35 = trunc i32 %28 to i16
  %36 = getelementptr inbounds i8, i8* %13, i64 34
  %37 = bitcast i8* %36 to i16*
  store i16 %35, i16* %37, align 2
  %38 = getelementptr inbounds i8, i8* %13, i64 36
  %39 = bitcast i8* %38 to i32*
  store i32 %1, i32* %39, align 4
  %40 = getelementptr inbounds i8, i8* %13, i64 40
  %41 = bitcast i8* %40 to i32*
  store i32 %2, i32* %41, align 8
  %42 = getelementptr inbounds i8, i8* %13, i64 44
  %43 = bitcast i8* %42 to i32*
  store i32 0, i32* %43, align 4
  %44 = add nuw nsw i32 %28, 192
  %45 = getelementptr inbounds i8, i8* %13, i64 48
  %46 = bitcast i8* %45 to i32*
  store i32 %44, i32* %46, align 8
  %47 = bitcast i8* %19 to i32*
  store i32 1416784178, i32* %47, align 4
  %48 = trunc i32 %0 to i16
  %49 = getelementptr inbounds i8, i8* %19, i64 4
  %50 = bitcast i8* %49 to i16*
  store i16 %48, i16* %50, align 4
  %51 = getelementptr inbounds i8, i8* %19, i64 6
  %52 = bitcast i8* %51 to i16*
  store i16 2112, i16* %52, align 2
  %53 = getelementptr inbounds i8, i8* %19, i64 8
  %54 = bitcast i8* %53 to i16*
  store i16 49, i16* %54, align 4
  %55 = getelementptr inbounds i8, i8* %19, i64 10
  %56 = bitcast i8* %55 to i16*
  store i16 0, i16* %56, align 2
  %57 = getelementptr inbounds i8, i8* %19, i64 12
  %58 = bitcast i8* %57 to i16*
  store i16 %35, i16* %58, align 4
  %59 = getelementptr inbounds i8, i8* %19, i64 14
  %60 = bitcast i8* %59 to i16*
  store i16 0, i16* %60, align 2
  %61 = getelementptr inbounds i8, i8* %19, i64 16
  %62 = bitcast i8* %61 to i16*
  %63 = bitcast i8* %13 to i8**
  store i8* %61, i8** %63, align 8
  %64 = lshr exact i32 %28, 2
  %65 = trunc i32 %64 to i16
  %66 = getelementptr i8, i8* %19, i64 4176
  %67 = bitcast i8* %66 to i16*
  %68 = insertelement <8 x i16> undef, i16 %65, i32 0
  %69 = shufflevector <8 x i16> %68, <8 x i16> undef, <8 x i32> zeroinitializer
  %70 = insertelement <8 x i16> undef, i16 %65, i32 0
  %71 = shufflevector <8 x i16> %70, <8 x i16> undef, <8 x i32> zeroinitializer
  br label %72

72:                                               ; preds = %72, %24
  %73 = phi i64 [ 0, %24 ], [ %98, %72 ]
  %74 = getelementptr i16, i16* %62, i64 %73
  %75 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %69, <8 x i16>* %75, align 2
  %76 = getelementptr i16, i16* %74, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %77, align 2
  %78 = add nuw nsw i64 %73, 16
  %79 = getelementptr i16, i16* %62, i64 %78
  %80 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %69, <8 x i16>* %80, align 2
  %81 = getelementptr i16, i16* %79, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %82, align 2
  %83 = add nuw nsw i64 %73, 32
  %84 = getelementptr i16, i16* %62, i64 %83
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %69, <8 x i16>* %85, align 2
  %86 = getelementptr i16, i16* %84, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %87, align 2
  %88 = add nuw nsw i64 %73, 48
  %89 = getelementptr i16, i16* %62, i64 %88
  %90 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %69, <8 x i16>* %90, align 2
  %91 = getelementptr i16, i16* %89, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %92, align 2
  %93 = add nuw nsw i64 %73, 64
  %94 = getelementptr i16, i16* %62, i64 %93
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %69, <8 x i16>* %95, align 2
  %96 = getelementptr i16, i16* %94, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %97, align 2
  %98 = add nuw nsw i64 %73, 80
  %99 = icmp eq i64 %98, 2080
  br i1 %99, label %100, label %72, !llvm.loop !2

100:                                              ; preds = %72
  %101 = or i16 %35, 128
  %102 = getelementptr inbounds i8, i8* %19, i64 4178
  %103 = bitcast i8* %102 to i16*
  store i16 %101, i16* %67, align 2
  store i16 %101, i16* %103, align 2
  %104 = getelementptr inbounds i8, i8* %19, i64 4180
  %105 = getelementptr inbounds i8, i8* %19, i64 4196
  %106 = bitcast i8* %105 to i16*
  %107 = insertelement <8 x i16> undef, i16 %35, i32 0
  %108 = shufflevector <8 x i16> %107, <8 x i16> undef, <8 x i32> zeroinitializer
  %109 = bitcast i8* %104 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %109, align 2
  %110 = getelementptr inbounds i8, i8* %19, i64 4198
  %111 = bitcast i8* %110 to i16*
  store i16 %35, i16* %106, align 2
  %112 = getelementptr inbounds i8, i8* %19, i64 4200
  %113 = bitcast i8* %112 to i16*
  store i16 %35, i16* %111, align 2
  %114 = getelementptr inbounds i8, i8* %19, i64 4202
  %115 = bitcast i8* %114 to i16*
  store i16 %35, i16* %113, align 2
  %116 = getelementptr inbounds i8, i8* %19, i64 4204
  %117 = bitcast i8* %116 to i16*
  store i16 %35, i16* %115, align 2
  %118 = getelementptr inbounds i8, i8* %19, i64 4206
  %119 = bitcast i8* %118 to i16*
  store i16 %35, i16* %117, align 2
  %120 = getelementptr inbounds i8, i8* %19, i64 4208
  store i16 %35, i16* %119, align 2
  %121 = getelementptr inbounds i8, i8* %19, i64 4224
  %122 = bitcast i8* %120 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %122, align 2
  %123 = getelementptr inbounds i8, i8* %19, i64 4240
  %124 = bitcast i8* %121 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %124, align 2
  switch i32 %0, label %303 [
    i32 0, label %125
    i32 1, label %193
  ]

125:                                              ; preds = %100
  %126 = getelementptr inbounds i8, i8* %13, i64 8
  %127 = bitcast i8* %126 to i8**
  store i8* %123, i8** %127, align 8
  %128 = getelementptr inbounds i8, i8* %13, i64 16
  %129 = bitcast i8* %128 to i32**
  store i32* null, i32** %129, align 8
  %130 = trunc i32 %1 to i16
  %131 = insertelement <8 x i16> undef, i16 %130, i32 0
  %132 = shufflevector <8 x i16> %131, <8 x i16> undef, <8 x i32> zeroinitializer
  %133 = insertelement <8 x i16> undef, i16 %130, i32 0
  %134 = shufflevector <8 x i16> %133, <8 x i16> undef, <8 x i32> zeroinitializer
  %135 = getelementptr i8, i8* %19, i64 4496
  %136 = bitcast i8* %123 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %136, align 2
  %137 = getelementptr i8, i8* %19, i64 4256
  %138 = bitcast i8* %137 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %138, align 2
  %139 = getelementptr i8, i8* %19, i64 4272
  %140 = bitcast i8* %139 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %140, align 2
  %141 = getelementptr i8, i8* %19, i64 4288
  %142 = bitcast i8* %141 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %142, align 2
  %143 = getelementptr i8, i8* %19, i64 4304
  %144 = bitcast i8* %143 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %144, align 2
  %145 = getelementptr i8, i8* %19, i64 4320
  %146 = bitcast i8* %145 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %146, align 2
  %147 = getelementptr i8, i8* %19, i64 4336
  %148 = bitcast i8* %147 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %148, align 2
  %149 = getelementptr i8, i8* %19, i64 4352
  %150 = bitcast i8* %149 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %150, align 2
  %151 = getelementptr i8, i8* %19, i64 4368
  %152 = bitcast i8* %151 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %152, align 2
  %153 = getelementptr i8, i8* %19, i64 4384
  %154 = bitcast i8* %153 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %154, align 2
  %155 = getelementptr i8, i8* %19, i64 4400
  %156 = bitcast i8* %155 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %156, align 2
  %157 = getelementptr i8, i8* %19, i64 4416
  %158 = bitcast i8* %157 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %158, align 2
  %159 = getelementptr i8, i8* %19, i64 4432
  %160 = bitcast i8* %159 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %160, align 2
  %161 = getelementptr i8, i8* %19, i64 4448
  %162 = bitcast i8* %161 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %162, align 2
  %163 = getelementptr i8, i8* %19, i64 4464
  %164 = bitcast i8* %163 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %164, align 2
  %165 = getelementptr i8, i8* %19, i64 4480
  %166 = bitcast i8* %165 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %166, align 2
  %167 = trunc i32 %2 to i16
  %168 = getelementptr inbounds i8, i8* %19, i64 4512
  %169 = insertelement <8 x i16> undef, i16 %167, i32 0
  %170 = shufflevector <8 x i16> %169, <8 x i16> undef, <8 x i32> zeroinitializer
  %171 = bitcast i8* %135 to <8 x i16>*
  store <8 x i16> %170, <8 x i16>* %171, align 2
  %172 = getelementptr inbounds i8, i8* %19, i64 4528
  %173 = bitcast i8* %168 to <8 x i16>*
  store <8 x i16> %170, <8 x i16>* %173, align 2
  %174 = getelementptr inbounds i8, i8* %19, i64 4544
  %175 = bitcast i8* %172 to <8 x i16>*
  store <8 x i16> %170, <8 x i16>* %175, align 2
  %176 = getelementptr inbounds i8, i8* %19, i64 4560
  %177 = bitcast i8* %174 to <8 x i16>*
  store <8 x i16> %170, <8 x i16>* %177, align 2
  %178 = getelementptr inbounds i8, i8* %19, i64 4576
  %179 = bitcast i8* %176 to <8 x i16>*
  store <8 x i16> %170, <8 x i16>* %179, align 2
  %180 = getelementptr inbounds i8, i8* %19, i64 4592
  %181 = bitcast i8* %178 to <8 x i16>*
  store <8 x i16> %170, <8 x i16>* %181, align 2
  %182 = getelementptr inbounds i8, i8* %19, i64 4608
  %183 = bitcast i8* %180 to <8 x i16>*
  store <8 x i16> %170, <8 x i16>* %183, align 2
  %184 = getelementptr inbounds i8, i8* %19, i64 4624
  %185 = bitcast i8* %184 to i16*
  %186 = bitcast i8* %182 to <8 x i16>*
  store <8 x i16> %170, <8 x i16>* %186, align 2
  %187 = getelementptr inbounds i8, i8* %19, i64 4626
  %188 = bitcast i8* %187 to i16*
  store i16 %130, i16* %185, align 2
  %189 = getelementptr inbounds i8, i8* %19, i64 4628
  %190 = bitcast i8* %189 to i16*
  store i16 %130, i16* %188, align 2
  %191 = getelementptr inbounds i8, i8* %19, i64 4630
  %192 = bitcast i8* %191 to i16*
  store i16 %130, i16* %190, align 2
  store i16 %130, i16* %192, align 2
  br label %304

193:                                              ; preds = %100
  %194 = getelementptr inbounds i8, i8* %13, i64 8
  %195 = bitcast i8* %194 to i16**
  store i16* null, i16** %195, align 8
  %196 = getelementptr inbounds i8, i8* %13, i64 16
  %197 = bitcast i8* %196 to i8**
  store i8* %123, i8** %197, align 8
  %198 = insertelement <4 x i32> undef, i32 %1, i32 0
  %199 = shufflevector <4 x i32> %198, <4 x i32> undef, <4 x i32> zeroinitializer
  %200 = insertelement <4 x i32> undef, i32 %1, i32 0
  %201 = shufflevector <4 x i32> %200, <4 x i32> undef, <4 x i32> zeroinitializer
  %202 = getelementptr i8, i8* %19, i64 4752
  %203 = bitcast i8* %123 to <4 x i32>*
  store <4 x i32> %199, <4 x i32>* %203, align 4
  %204 = getelementptr i8, i8* %19, i64 4256
  %205 = bitcast i8* %204 to <4 x i32>*
  store <4 x i32> %201, <4 x i32>* %205, align 4
  %206 = getelementptr i8, i8* %19, i64 4272
  %207 = bitcast i8* %206 to <4 x i32>*
  store <4 x i32> %199, <4 x i32>* %207, align 4
  %208 = getelementptr i8, i8* %19, i64 4288
  %209 = bitcast i8* %208 to <4 x i32>*
  store <4 x i32> %201, <4 x i32>* %209, align 4
  %210 = getelementptr i8, i8* %19, i64 4304
  %211 = bitcast i8* %210 to <4 x i32>*
  store <4 x i32> %199, <4 x i32>* %211, align 4
  %212 = getelementptr i8, i8* %19, i64 4320
  %213 = bitcast i8* %212 to <4 x i32>*
  store <4 x i32> %201, <4 x i32>* %213, align 4
  %214 = getelementptr i8, i8* %19, i64 4336
  %215 = bitcast i8* %214 to <4 x i32>*
  store <4 x i32> %199, <4 x i32>* %215, align 4
  %216 = getelementptr i8, i8* %19, i64 4352
  %217 = bitcast i8* %216 to <4 x i32>*
  store <4 x i32> %201, <4 x i32>* %217, align 4
  %218 = getelementptr i8, i8* %19, i64 4368
  %219 = bitcast i8* %218 to <4 x i32>*
  store <4 x i32> %199, <4 x i32>* %219, align 4
  %220 = getelementptr i8, i8* %19, i64 4384
  %221 = bitcast i8* %220 to <4 x i32>*
  store <4 x i32> %201, <4 x i32>* %221, align 4
  %222 = getelementptr i8, i8* %19, i64 4400
  %223 = bitcast i8* %222 to <4 x i32>*
  store <4 x i32> %199, <4 x i32>* %223, align 4
  %224 = getelementptr i8, i8* %19, i64 4416
  %225 = bitcast i8* %224 to <4 x i32>*
  store <4 x i32> %201, <4 x i32>* %225, align 4
  %226 = getelementptr i8, i8* %19, i64 4432
  %227 = bitcast i8* %226 to <4 x i32>*
  store <4 x i32> %199, <4 x i32>* %227, align 4
  %228 = getelementptr i8, i8* %19, i64 4448
  %229 = bitcast i8* %228 to <4 x i32>*
  store <4 x i32> %201, <4 x i32>* %229, align 4
  %230 = getelementptr i8, i8* %19, i64 4464
  %231 = bitcast i8* %230 to <4 x i32>*
  store <4 x i32> %199, <4 x i32>* %231, align 4
  %232 = getelementptr i8, i8* %19, i64 4480
  %233 = bitcast i8* %232 to <4 x i32>*
  store <4 x i32> %201, <4 x i32>* %233, align 4
  %234 = getelementptr i8, i8* %19, i64 4496
  %235 = bitcast i8* %234 to <4 x i32>*
  store <4 x i32> %199, <4 x i32>* %235, align 4
  %236 = getelementptr i8, i8* %19, i64 4512
  %237 = bitcast i8* %236 to <4 x i32>*
  store <4 x i32> %201, <4 x i32>* %237, align 4
  %238 = getelementptr i8, i8* %19, i64 4528
  %239 = bitcast i8* %238 to <4 x i32>*
  store <4 x i32> %199, <4 x i32>* %239, align 4
  %240 = getelementptr i8, i8* %19, i64 4544
  %241 = bitcast i8* %240 to <4 x i32>*
  store <4 x i32> %201, <4 x i32>* %241, align 4
  %242 = getelementptr i8, i8* %19, i64 4560
  %243 = bitcast i8* %242 to <4 x i32>*
  store <4 x i32> %199, <4 x i32>* %243, align 4
  %244 = getelementptr i8, i8* %19, i64 4576
  %245 = bitcast i8* %244 to <4 x i32>*
  store <4 x i32> %201, <4 x i32>* %245, align 4
  %246 = getelementptr i8, i8* %19, i64 4592
  %247 = bitcast i8* %246 to <4 x i32>*
  store <4 x i32> %199, <4 x i32>* %247, align 4
  %248 = getelementptr i8, i8* %19, i64 4608
  %249 = bitcast i8* %248 to <4 x i32>*
  store <4 x i32> %201, <4 x i32>* %249, align 4
  %250 = getelementptr i8, i8* %19, i64 4624
  %251 = bitcast i8* %250 to <4 x i32>*
  store <4 x i32> %199, <4 x i32>* %251, align 4
  %252 = getelementptr i8, i8* %19, i64 4640
  %253 = bitcast i8* %252 to <4 x i32>*
  store <4 x i32> %201, <4 x i32>* %253, align 4
  %254 = getelementptr i8, i8* %19, i64 4656
  %255 = bitcast i8* %254 to <4 x i32>*
  store <4 x i32> %199, <4 x i32>* %255, align 4
  %256 = getelementptr i8, i8* %19, i64 4672
  %257 = bitcast i8* %256 to <4 x i32>*
  store <4 x i32> %201, <4 x i32>* %257, align 4
  %258 = getelementptr i8, i8* %19, i64 4688
  %259 = bitcast i8* %258 to <4 x i32>*
  store <4 x i32> %199, <4 x i32>* %259, align 4
  %260 = getelementptr i8, i8* %19, i64 4704
  %261 = bitcast i8* %260 to <4 x i32>*
  store <4 x i32> %201, <4 x i32>* %261, align 4
  %262 = getelementptr i8, i8* %19, i64 4720
  %263 = bitcast i8* %262 to <4 x i32>*
  store <4 x i32> %199, <4 x i32>* %263, align 4
  %264 = getelementptr i8, i8* %19, i64 4736
  %265 = bitcast i8* %264 to <4 x i32>*
  store <4 x i32> %201, <4 x i32>* %265, align 4
  %266 = getelementptr inbounds i8, i8* %19, i64 4768
  %267 = insertelement <4 x i32> undef, i32 %2, i32 0
  %268 = shufflevector <4 x i32> %267, <4 x i32> undef, <4 x i32> zeroinitializer
  %269 = bitcast i8* %202 to <4 x i32>*
  store <4 x i32> %268, <4 x i32>* %269, align 4
  %270 = getelementptr inbounds i8, i8* %19, i64 4784
  %271 = bitcast i8* %266 to <4 x i32>*
  store <4 x i32> %268, <4 x i32>* %271, align 4
  %272 = getelementptr inbounds i8, i8* %19, i64 4800
  %273 = bitcast i8* %270 to <4 x i32>*
  store <4 x i32> %268, <4 x i32>* %273, align 4
  %274 = getelementptr inbounds i8, i8* %19, i64 4816
  %275 = bitcast i8* %272 to <4 x i32>*
  store <4 x i32> %268, <4 x i32>* %275, align 4
  %276 = getelementptr inbounds i8, i8* %19, i64 4832
  %277 = bitcast i8* %274 to <4 x i32>*
  store <4 x i32> %268, <4 x i32>* %277, align 4
  %278 = getelementptr inbounds i8, i8* %19, i64 4848
  %279 = bitcast i8* %276 to <4 x i32>*
  store <4 x i32> %268, <4 x i32>* %279, align 4
  %280 = getelementptr inbounds i8, i8* %19, i64 4864
  %281 = bitcast i8* %278 to <4 x i32>*
  store <4 x i32> %268, <4 x i32>* %281, align 4
  %282 = getelementptr inbounds i8, i8* %19, i64 4880
  %283 = bitcast i8* %280 to <4 x i32>*
  store <4 x i32> %268, <4 x i32>* %283, align 4
  %284 = getelementptr inbounds i8, i8* %19, i64 4896
  %285 = bitcast i8* %282 to <4 x i32>*
  store <4 x i32> %268, <4 x i32>* %285, align 4
  %286 = getelementptr inbounds i8, i8* %19, i64 4912
  %287 = bitcast i8* %284 to <4 x i32>*
  store <4 x i32> %268, <4 x i32>* %287, align 4
  %288 = getelementptr inbounds i8, i8* %19, i64 4928
  %289 = bitcast i8* %286 to <4 x i32>*
  store <4 x i32> %268, <4 x i32>* %289, align 4
  %290 = getelementptr inbounds i8, i8* %19, i64 4944
  %291 = bitcast i8* %288 to <4 x i32>*
  store <4 x i32> %268, <4 x i32>* %291, align 4
  %292 = getelementptr inbounds i8, i8* %19, i64 4960
  %293 = bitcast i8* %290 to <4 x i32>*
  store <4 x i32> %268, <4 x i32>* %293, align 4
  %294 = getelementptr inbounds i8, i8* %19, i64 4976
  %295 = bitcast i8* %292 to <4 x i32>*
  store <4 x i32> %268, <4 x i32>* %295, align 4
  %296 = getelementptr inbounds i8, i8* %19, i64 4992
  %297 = bitcast i8* %294 to <4 x i32>*
  store <4 x i32> %268, <4 x i32>* %297, align 4
  %298 = getelementptr inbounds i8, i8* %19, i64 5008
  %299 = bitcast i8* %296 to <4 x i32>*
  store <4 x i32> %268, <4 x i32>* %299, align 4
  %300 = insertelement <4 x i32> undef, i32 %1, i32 0
  %301 = shufflevector <4 x i32> %300, <4 x i32> undef, <4 x i32> zeroinitializer
  %302 = bitcast i8* %298 to <4 x i32>*
  store <4 x i32> %301, <4 x i32>* %302, align 4
  br label %304

303:                                              ; preds = %100
  store i32 1, i32* %3, align 4
  br label %304

304:                                              ; preds = %193, %125, %4, %303, %23, %16, %9
  %305 = phi %struct.UTrie2* [ null, %9 ], [ null, %16 ], [ null, %23 ], [ null, %303 ], [ null, %4 ], [ %14, %125 ], [ %14, %193 ]
  ret %struct.UTrie2* %305
}

declare void @uprv_free_69(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @utrie2_close_69(%struct.UTrie2*) local_unnamed_addr #1 {
  %2 = icmp eq %struct.UTrie2* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 13
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 11
  %9 = load i8*, i8** %8, align 8
  tail call void @uprv_free_69(i8* %9) #7
  br label %10

10:                                               ; preds = %3, %7
  %11 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 16
  %12 = load %struct.UNewTrie2*, %struct.UNewTrie2** %11, align 8
  %13 = icmp eq %struct.UNewTrie2* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %12, i64 0, i32 2
  %16 = bitcast i32** %15 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @uprv_free_69(i8* %17) #7
  %18 = bitcast %struct.UNewTrie2** %11 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void @uprv_free_69(i8* %19) #7
  br label %20

20:                                               ; preds = %10, %14
  %21 = bitcast %struct.UTrie2* %0 to i8*
  tail call void @uprv_free_69(i8* nonnull %21) #7
  br label %22

22:                                               ; preds = %1, %20
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i8 @utrie2_isFrozen_69(%struct.UTrie2* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 16
  %3 = load %struct.UNewTrie2*, %struct.UNewTrie2** %2, align 8
  %4 = icmp eq %struct.UNewTrie2* %3, null
  %5 = zext i1 %4 to i8
  ret i8 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @utrie2_serialize_69(%struct.UTrie2* readonly, i8*, i32, i32* nocapture) local_unnamed_addr #1 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %37

7:                                                ; preds = %4
  %8 = icmp eq %struct.UTrie2* %0, null
  br i1 %8, label %27, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 11
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %27, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 16
  %15 = load %struct.UNewTrie2*, %struct.UNewTrie2** %14, align 8
  %16 = icmp ne %struct.UNewTrie2* %15, null
  %17 = icmp slt i32 %2, 0
  %18 = or i1 %17, %16
  br i1 %18, label %27, label %19

19:                                               ; preds = %13
  %20 = icmp sgt i32 %2, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %19
  %22 = icmp eq i8* %1, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %21
  %24 = ptrtoint i8* %1 to i64
  %25 = and i64 %24, 3
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %23, %21, %13, %9, %7
  store i32 1, i32* %3, align 4
  br label %37

28:                                               ; preds = %23, %19
  %29 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 12
  %30 = load i32, i32* %29, align 8
  %31 = icmp sgt i32 %30, %2
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = sext i32 %30 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* nonnull align 1 %11, i64 %33, i1 false)
  br label %35

34:                                               ; preds = %28
  store i32 15, i32* %3, align 4
  br label %35

35:                                               ; preds = %34, %32
  %36 = load i32, i32* %29, align 8
  br label %37

37:                                               ; preds = %4, %35, %27
  %38 = phi i32 [ 0, %27 ], [ %36, %35 ], [ 0, %4 ]
  ret i32 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden void @utrie2_enum_69(%struct.UTrie2* nocapture readonly, i32 (i8*, i32)*, i8 (i8*, i32, i32, i32)*, i8*) local_unnamed_addr #1 {
  tail call fastcc void @_ZL14enumEitherTriePK6UTrie2iiPFjPKvjEPFaS3_iijES3_(%struct.UTrie2* %0, i32 0, i32 1114112, i32 (i8*, i32)* %1, i8 (i8*, i32, i32, i32)* %2, i8* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL14enumEitherTriePK6UTrie2iiPFjPKvjEPFaS3_iijES3_(%struct.UTrie2* nocapture readonly, i32, i32, i32 (i8*, i32)*, i8 (i8*, i32, i32, i32)*, i8*) unnamed_addr #1 {
  %7 = icmp eq i8 (i8*, i32, i32, i32)* %4, null
  br i1 %7, label %251, label %8

8:                                                ; preds = %6
  %9 = icmp eq i32 (i8*, i32)* %3, null
  %10 = select i1 %9, i32 (i8*, i32)* @_ZL13enumSameValuePKvj, i32 (i8*, i32)* %3
  %11 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 16
  %12 = load %struct.UNewTrie2*, %struct.UNewTrie2** %11, align 8
  %13 = icmp eq %struct.UNewTrie2* %12, null
  br i1 %13, label %14, label %24

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 2
  %18 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 5
  %19 = load i16, i16* %18, align 8
  %20 = zext i16 %19 to i32
  %21 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 6
  %22 = load i16, i16* %21, align 2
  %23 = zext i16 %22 to i32
  br label %30

24:                                               ; preds = %8
  %25 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %12, i64 0, i32 2
  %26 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %12, i64 0, i32 9
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %12, i64 0, i32 10
  %29 = load i32, i32* %28, align 4
  br label %30

30:                                               ; preds = %24, %14
  %31 = phi i32** [ %17, %14 ], [ %25, %24 ]
  %32 = phi i16* [ %16, %14 ], [ null, %24 ]
  %33 = phi i32 [ %20, %14 ], [ %27, %24 ]
  %34 = phi i32 [ %23, %14 ], [ %29, %24 ]
  %35 = load i32*, i32** %31, align 8
  %36 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 9
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 7
  %39 = load i32, i32* %38, align 4
  %40 = tail call i32 %10(i8* %5, i32 %39) #7
  %41 = icmp slt i32 %1, %2
  %42 = icmp sgt i32 %37, %1
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %202

44:                                               ; preds = %30
  %45 = icmp eq i16* %32, null
  %46 = icmp slt i32 %2, 57344
  %47 = select i1 %46, i32 %2, i32 57344
  %48 = icmp slt i32 %2, 56320
  %49 = select i1 %48, i32 %2, i32 56320
  %50 = icmp eq i32* %35, null
  br label %51

51:                                               ; preds = %44, %193
  %52 = phi i32 [ -1, %44 ], [ %198, %193 ]
  %53 = phi i32 [ -1, %44 ], [ %197, %193 ]
  %54 = phi i32 [ %1, %44 ], [ %196, %193 ]
  %55 = phi i32 [ %1, %44 ], [ %195, %193 ]
  %56 = phi i32 [ 0, %44 ], [ %194, %193 ]
  %57 = add nsw i32 %55, 2048
  %58 = icmp sgt i32 %57, %2
  %59 = select i1 %58, i32 %2, i32 %57
  %60 = icmp slt i32 %55, 65536
  br i1 %60, label %61, label %71

61:                                               ; preds = %51
  %62 = and i32 %55, -2048
  %63 = icmp eq i32 %62, 55296
  br i1 %63, label %66, label %64

64:                                               ; preds = %61
  %65 = ashr i32 %55, 5
  br label %91

66:                                               ; preds = %61
  %67 = and i32 %55, 1024
  %68 = icmp eq i32 %67, 0
  %69 = select i1 %68, i32 2048, i32 1728
  %70 = select i1 %68, i32 %49, i32 %47
  br label %91

71:                                               ; preds = %51
  br i1 %45, label %79, label %72

72:                                               ; preds = %71
  %73 = lshr i32 %55, 11
  %74 = add nuw nsw i32 %73, 2080
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds i16, i16* %32, i64 %75
  %77 = load i16, i16* %76, align 2
  %78 = zext i16 %77 to i32
  br label %85

79:                                               ; preds = %71
  %80 = load %struct.UNewTrie2*, %struct.UNewTrie2** %11, align 8
  %81 = lshr i32 %55, 11
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %80, i64 0, i32 0, i64 %82
  %84 = load i32, i32* %83, align 4
  br label %85

85:                                               ; preds = %79, %72
  %86 = phi i32 [ %78, %72 ], [ %84, %79 ]
  %87 = icmp eq i32 %86, %53
  %88 = sub nsw i32 %55, %54
  %89 = icmp sgt i32 %88, 2047
  %90 = and i1 %89, %87
  br i1 %90, label %193, label %91

91:                                               ; preds = %66, %85, %64
  %92 = phi i32 [ %65, %64 ], [ %86, %85 ], [ %69, %66 ]
  %93 = phi i32 [ %59, %64 ], [ %59, %85 ], [ %70, %66 ]
  %94 = icmp eq i32 %92, %33
  br i1 %94, label %95, label %103

95:                                               ; preds = %91
  %96 = icmp eq i32 %56, %40
  br i1 %96, label %193, label %97

97:                                               ; preds = %95
  %98 = icmp sgt i32 %55, %54
  br i1 %98, label %99, label %193

99:                                               ; preds = %97
  %100 = add nsw i32 %55, -1
  %101 = tail call signext i8 %4(i8* %5, i32 %54, i32 %100, i32 %56) #7
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %251, label %193

103:                                              ; preds = %91
  %104 = lshr i32 %55, 5
  %105 = and i32 %104, 63
  %106 = xor i32 %93, %55
  %107 = icmp ult i32 %106, 2048
  %108 = lshr i32 %93, 5
  %109 = and i32 %108, 63
  %110 = select i1 %107, i32 %109, i32 64
  %111 = icmp ult i32 %105, %110
  br i1 %111, label %112, label %193

112:                                              ; preds = %103
  %113 = and i32 %104, 63
  %114 = zext i32 %113 to i64
  %115 = sext i32 %92 to i64
  %116 = zext i32 %110 to i64
  br label %117

117:                                              ; preds = %186, %112
  %118 = phi i64 [ %114, %112 ], [ %191, %186 ]
  %119 = phi i32 [ %52, %112 ], [ %190, %186 ]
  %120 = phi i32 [ %54, %112 ], [ %189, %186 ]
  %121 = phi i32 [ %55, %112 ], [ %188, %186 ]
  %122 = phi i32 [ %56, %112 ], [ %187, %186 ]
  br i1 %45, label %129, label %123

123:                                              ; preds = %117
  %124 = add nsw i64 %118, %115
  %125 = getelementptr inbounds i16, i16* %32, i64 %124
  %126 = load i16, i16* %125, align 2
  %127 = zext i16 %126 to i32
  %128 = shl nuw nsw i32 %127, 2
  br label %134

129:                                              ; preds = %117
  %130 = load %struct.UNewTrie2*, %struct.UNewTrie2** %11, align 8
  %131 = add nsw i64 %118, %115
  %132 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %130, i64 0, i32 1, i64 %131
  %133 = load i32, i32* %132, align 4
  br label %134

134:                                              ; preds = %129, %123
  %135 = phi i32 [ %128, %123 ], [ %133, %129 ]
  %136 = icmp eq i32 %135, %119
  %137 = sub nsw i32 %121, %120
  %138 = icmp sgt i32 %137, 31
  %139 = and i1 %138, %136
  br i1 %139, label %140, label %142

140:                                              ; preds = %134
  %141 = add nsw i32 %121, 32
  br label %186

142:                                              ; preds = %134
  %143 = icmp eq i32 %135, %34
  br i1 %143, label %146, label %144

144:                                              ; preds = %142
  %145 = sext i32 %135 to i64
  br label %157

146:                                              ; preds = %142
  %147 = icmp eq i32 %122, %40
  br i1 %147, label %154, label %148

148:                                              ; preds = %146
  %149 = icmp sgt i32 %121, %120
  br i1 %149, label %150, label %154

150:                                              ; preds = %148
  %151 = add nsw i32 %121, -1
  %152 = tail call signext i8 %4(i8* %5, i32 %120, i32 %151, i32 %122) #7
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %251, label %154

154:                                              ; preds = %148, %150, %146
  %155 = phi i32 [ %120, %146 ], [ %121, %150 ], [ %121, %148 ]
  %156 = add nsw i32 %121, 32
  br label %186

157:                                              ; preds = %180, %144
  %158 = phi i64 [ 0, %144 ], [ %184, %180 ]
  %159 = phi i32 [ %120, %144 ], [ %182, %180 ]
  %160 = phi i32 [ %121, %144 ], [ %183, %180 ]
  %161 = phi i32 [ %122, %144 ], [ %181, %180 ]
  %162 = add nsw i64 %158, %145
  br i1 %50, label %166, label %163

163:                                              ; preds = %157
  %164 = getelementptr inbounds i32, i32* %35, i64 %162
  %165 = load i32, i32* %164, align 4
  br label %170

166:                                              ; preds = %157
  %167 = getelementptr inbounds i16, i16* %32, i64 %162
  %168 = load i16, i16* %167, align 2
  %169 = zext i16 %168 to i32
  br label %170

170:                                              ; preds = %166, %163
  %171 = phi i32 [ %165, %163 ], [ %169, %166 ]
  %172 = tail call i32 %10(i8* %5, i32 %171) #7
  %173 = icmp eq i32 %172, %161
  br i1 %173, label %180, label %174

174:                                              ; preds = %170
  %175 = icmp slt i32 %159, %160
  br i1 %175, label %176, label %180

176:                                              ; preds = %174
  %177 = add nsw i32 %160, -1
  %178 = tail call signext i8 %4(i8* %5, i32 %159, i32 %177, i32 %161) #7
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %251, label %180

180:                                              ; preds = %174, %176, %170
  %181 = phi i32 [ %161, %170 ], [ %172, %176 ], [ %172, %174 ]
  %182 = phi i32 [ %159, %170 ], [ %160, %176 ], [ %160, %174 ]
  %183 = add nsw i32 %160, 1
  %184 = add nuw nsw i64 %158, 1
  %185 = icmp eq i64 %184, 32
  br i1 %185, label %186, label %157

186:                                              ; preds = %180, %154, %140
  %187 = phi i32 [ %122, %140 ], [ %40, %154 ], [ %181, %180 ]
  %188 = phi i32 [ %141, %140 ], [ %156, %154 ], [ %183, %180 ]
  %189 = phi i32 [ %120, %140 ], [ %155, %154 ], [ %182, %180 ]
  %190 = phi i32 [ %119, %140 ], [ %34, %154 ], [ %135, %180 ]
  %191 = add nuw nsw i64 %118, 1
  %192 = icmp eq i64 %191, %116
  br i1 %192, label %193, label %117

193:                                              ; preds = %186, %103, %97, %99, %95, %85
  %194 = phi i32 [ %56, %85 ], [ %40, %95 ], [ %40, %99 ], [ %40, %97 ], [ %56, %103 ], [ %187, %186 ]
  %195 = phi i32 [ %57, %85 ], [ %57, %95 ], [ %57, %99 ], [ %57, %97 ], [ %55, %103 ], [ %188, %186 ]
  %196 = phi i32 [ %54, %85 ], [ %54, %95 ], [ %55, %99 ], [ %55, %97 ], [ %54, %103 ], [ %189, %186 ]
  %197 = phi i32 [ %53, %85 ], [ %33, %95 ], [ %33, %99 ], [ %33, %97 ], [ %92, %103 ], [ %92, %186 ]
  %198 = phi i32 [ %52, %85 ], [ %52, %95 ], [ %34, %99 ], [ %34, %97 ], [ %52, %103 ], [ %190, %186 ]
  %199 = icmp slt i32 %195, %2
  %200 = icmp slt i32 %195, %37
  %201 = and i1 %199, %200
  br i1 %201, label %51, label %202

202:                                              ; preds = %193, %30
  %203 = phi i32 [ 0, %30 ], [ %194, %193 ]
  %204 = phi i32 [ %1, %30 ], [ %195, %193 ]
  %205 = phi i32 [ %1, %30 ], [ %196, %193 ]
  %206 = phi i1 [ %41, %30 ], [ %199, %193 ]
  %207 = icmp sgt i32 %204, %2
  %208 = xor i1 %206, true
  %209 = or i1 %207, %208
  %210 = select i1 %207, i32 %2, i32 %204
  br i1 %209, label %245, label %211

211:                                              ; preds = %202
  %212 = icmp eq i16* %32, null
  br i1 %212, label %225, label %213

213:                                              ; preds = %211
  %214 = icmp eq i32* %35, null
  %215 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 10
  %216 = load i32, i32* %215, align 8
  %217 = sext i32 %216 to i64
  br i1 %214, label %221, label %218

218:                                              ; preds = %213
  %219 = getelementptr inbounds i32, i32* %35, i64 %217
  %220 = load i32, i32* %219, align 4
  br label %235

221:                                              ; preds = %213
  %222 = getelementptr inbounds i16, i16* %32, i64 %217
  %223 = load i16, i16* %222, align 2
  %224 = zext i16 %223 to i32
  br label %235

225:                                              ; preds = %211
  %226 = load %struct.UNewTrie2*, %struct.UNewTrie2** %11, align 8
  %227 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %226, i64 0, i32 2
  %228 = load i32*, i32** %227, align 8
  %229 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %226, i64 0, i32 7
  %230 = load i32, i32* %229, align 8
  %231 = add nsw i32 %230, -4
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds i32, i32* %228, i64 %232
  %234 = load i32, i32* %233, align 4
  br label %235

235:                                              ; preds = %218, %221, %225
  %236 = phi i32 [ %234, %225 ], [ %220, %218 ], [ %224, %221 ]
  %237 = tail call i32 %10(i8* %5, i32 %236) #7
  %238 = icmp eq i32 %237, %203
  br i1 %238, label %245, label %239

239:                                              ; preds = %235
  %240 = icmp sgt i32 %204, %205
  br i1 %240, label %241, label %245

241:                                              ; preds = %239
  %242 = add nsw i32 %204, -1
  %243 = tail call signext i8 %4(i8* %5, i32 %205, i32 %242, i32 %203) #7
  %244 = icmp eq i8 %243, 0
  br i1 %244, label %251, label %245

245:                                              ; preds = %239, %241, %235, %202
  %246 = phi i32 [ %203, %202 ], [ %203, %235 ], [ %237, %241 ], [ %237, %239 ]
  %247 = phi i32 [ %210, %202 ], [ %2, %235 ], [ %2, %241 ], [ %2, %239 ]
  %248 = phi i32 [ %205, %202 ], [ %205, %235 ], [ %204, %241 ], [ %204, %239 ]
  %249 = add nsw i32 %247, -1
  %250 = tail call signext i8 %4(i8* %5, i32 %248, i32 %249, i32 %246) #7
  br label %251

251:                                              ; preds = %99, %150, %176, %241, %6, %245
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @utrie2_enumForLeadSurrogate_69(%struct.UTrie2* nocapture readonly, i32, i32 (i8*, i32)*, i8 (i8*, i32, i32, i32)*, i8*) local_unnamed_addr #1 {
  %6 = and i32 %1, -1024
  %7 = icmp eq i32 %6, 55296
  br i1 %7, label %8, label %12

8:                                                ; preds = %5
  %9 = shl i32 %1, 10
  %10 = add i32 %9, -56557568
  %11 = add i32 %9, -56556544
  tail call fastcc void @_ZL14enumEitherTriePK6UTrie2iiPFjPKvjEPFaS3_iijES3_(%struct.UTrie2* %0, i32 %10, i32 %11, i32 (i8*, i32)* %2, i8 (i8*, i32, i32, i32)* %3, i8* %4)
  br label %12

12:                                               ; preds = %5, %8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i16 @_ZN6icu_6928BackwardUTrie2StringIterator10previous16Ev(%"class.icu_69::BackwardUTrie2StringIterator"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::BackwardUTrie2StringIterator", %"class.icu_69::BackwardUTrie2StringIterator"* %0, i64 0, i32 0, i32 1
  %3 = bitcast i16** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.icu_69::BackwardUTrie2StringIterator", %"class.icu_69::BackwardUTrie2StringIterator"* %0, i64 0, i32 0, i32 2
  %6 = bitcast i16** %5 to i64*
  store i64 %4, i64* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::BackwardUTrie2StringIterator", %"class.icu_69::BackwardUTrie2StringIterator"* %0, i64 0, i32 1
  %8 = load i16*, i16** %7, align 8
  %9 = inttoptr i64 %4 to i16*
  %10 = icmp ult i16* %8, %9
  br i1 %10, label %18, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.icu_69::BackwardUTrie2StringIterator", %"class.icu_69::BackwardUTrie2StringIterator"* %0, i64 0, i32 0, i32 3
  store i32 -1, i32* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::BackwardUTrie2StringIterator", %"class.icu_69::BackwardUTrie2StringIterator"* %0, i64 0, i32 0, i32 0
  %14 = load %struct.UTrie2*, %struct.UTrie2** %13, align 8
  %15 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %14, i64 0, i32 8
  %16 = load i32, i32* %15, align 8
  %17 = trunc i32 %16 to i16
  br label %89

18:                                               ; preds = %1
  %19 = getelementptr inbounds i16, i16* %9, i64 -1
  store i16* %19, i16** %2, align 8
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i32
  %22 = getelementptr inbounds %"class.icu_69::BackwardUTrie2StringIterator", %"class.icu_69::BackwardUTrie2StringIterator"* %0, i64 0, i32 0, i32 3
  store i32 %21, i32* %22, align 8
  %23 = and i32 %21, 64512
  %24 = icmp ne i32 %23, 56320
  %25 = icmp eq i16* %19, %8
  %26 = or i1 %25, %24
  br i1 %26, label %33, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds i16, i16* %9, i64 -2
  %29 = load i16, i16* %28, align 2
  %30 = zext i16 %29 to i32
  %31 = and i32 %30, 64512
  %32 = icmp eq i32 %31, 55296
  br i1 %32, label %51, label %33

33:                                               ; preds = %18, %27
  %34 = getelementptr inbounds %"class.icu_69::BackwardUTrie2StringIterator", %"class.icu_69::BackwardUTrie2StringIterator"* %0, i64 0, i32 0, i32 0
  %35 = load %struct.UTrie2*, %struct.UTrie2** %34, align 8
  %36 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %35, i64 0, i32 0
  %37 = load i16*, i16** %36, align 8
  %38 = icmp eq i32 %23, 55296
  %39 = select i1 %38, i32 320, i32 0
  %40 = lshr i32 %21, 5
  %41 = add nuw nsw i32 %39, %40
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i16, i16* %37, i64 %42
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = shl nuw nsw i32 %45, 2
  %47 = and i32 %21, 31
  %48 = add nuw nsw i32 %46, %47
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i16, i16* %37, i64 %49
  br label %86

51:                                               ; preds = %27
  store i16* %28, i16** %2, align 8
  %52 = shl nuw nsw i32 %30, 10
  %53 = add nuw nsw i32 %21, -56613888
  %54 = add nsw i32 %53, %52
  store i32 %54, i32* %22, align 8
  %55 = getelementptr inbounds %"class.icu_69::BackwardUTrie2StringIterator", %"class.icu_69::BackwardUTrie2StringIterator"* %0, i64 0, i32 0, i32 0
  %56 = load %struct.UTrie2*, %struct.UTrie2** %55, align 8
  %57 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %56, i64 0, i32 0
  %58 = load i16*, i16** %57, align 8
  %59 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %56, i64 0, i32 9
  %60 = load i32, i32* %59, align 4
  %61 = icmp slt i32 %54, %60
  br i1 %61, label %65, label %62

62:                                               ; preds = %51
  %63 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %56, i64 0, i32 10
  %64 = load i32, i32* %63, align 8
  br label %82

65:                                               ; preds = %51
  %66 = ashr i32 %54, 11
  %67 = add nsw i32 %66, 2080
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i16, i16* %58, i64 %68
  %70 = load i16, i16* %69, align 2
  %71 = zext i16 %70 to i32
  %72 = lshr i32 %54, 5
  %73 = and i32 %72, 63
  %74 = add nuw nsw i32 %73, %71
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds i16, i16* %58, i64 %75
  %77 = load i16, i16* %76, align 2
  %78 = zext i16 %77 to i32
  %79 = shl nuw nsw i32 %78, 2
  %80 = and i32 %54, 31
  %81 = add nuw nsw i32 %79, %80
  br label %82

82:                                               ; preds = %65, %62
  %83 = phi i32 [ %64, %62 ], [ %81, %65 ]
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i16, i16* %58, i64 %84
  br label %86

86:                                               ; preds = %82, %33
  %87 = phi i16* [ %50, %33 ], [ %85, %82 ]
  %88 = load i16, i16* %87, align 2
  br label %89

89:                                               ; preds = %86, %11
  %90 = phi i16 [ %17, %11 ], [ %88, %86 ]
  ret i16 %90
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i16 @_ZN6icu_6927ForwardUTrie2StringIterator6next16Ev(%"class.icu_69::ForwardUTrie2StringIterator"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::ForwardUTrie2StringIterator", %"class.icu_69::ForwardUTrie2StringIterator"* %0, i64 0, i32 0, i32 2
  %3 = bitcast i16** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.icu_69::ForwardUTrie2StringIterator", %"class.icu_69::ForwardUTrie2StringIterator"* %0, i64 0, i32 0, i32 1
  %6 = bitcast i16** %5 to i64*
  store i64 %4, i64* %6, align 8
  %7 = inttoptr i64 %4 to i16*
  %8 = getelementptr inbounds %"class.icu_69::ForwardUTrie2StringIterator", %"class.icu_69::ForwardUTrie2StringIterator"* %0, i64 0, i32 1
  %9 = load i16*, i16** %8, align 8
  %10 = icmp eq i16* %9, %7
  br i1 %10, label %11, label %18

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.icu_69::ForwardUTrie2StringIterator", %"class.icu_69::ForwardUTrie2StringIterator"* %0, i64 0, i32 0, i32 3
  store i32 -1, i32* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::ForwardUTrie2StringIterator", %"class.icu_69::ForwardUTrie2StringIterator"* %0, i64 0, i32 0, i32 0
  %14 = load %struct.UTrie2*, %struct.UTrie2** %13, align 8
  %15 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %14, i64 0, i32 8
  %16 = load i32, i32* %15, align 8
  %17 = trunc i32 %16 to i16
  br label %102

18:                                               ; preds = %1
  %19 = getelementptr inbounds i16, i16* %7, i64 1
  store i16* %19, i16** %2, align 8
  %20 = load i16, i16* %7, align 2
  %21 = zext i16 %20 to i32
  %22 = getelementptr inbounds %"class.icu_69::ForwardUTrie2StringIterator", %"class.icu_69::ForwardUTrie2StringIterator"* %0, i64 0, i32 0, i32 3
  store i32 %21, i32* %22, align 8
  %23 = and i32 %21, 64512
  %24 = icmp eq i32 %23, 55296
  br i1 %24, label %40, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.icu_69::ForwardUTrie2StringIterator", %"class.icu_69::ForwardUTrie2StringIterator"* %0, i64 0, i32 0, i32 0
  %27 = load %struct.UTrie2*, %struct.UTrie2** %26, align 8
  %28 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %27, i64 0, i32 0
  %29 = load i16*, i16** %28, align 8
  %30 = lshr i32 %21, 5
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i16, i16* %29, i64 %31
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  %35 = shl nuw nsw i32 %34, 2
  %36 = and i32 %21, 31
  %37 = add nuw nsw i32 %35, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i16, i16* %29, i64 %38
  br label %99

40:                                               ; preds = %18
  %41 = icmp eq i16* %19, %9
  br i1 %41, label %47, label %42

42:                                               ; preds = %40
  %43 = load i16, i16* %19, align 2
  %44 = zext i16 %43 to i32
  %45 = and i32 %44, 64512
  %46 = icmp eq i32 %45, 56320
  br i1 %46, label %63, label %47

47:                                               ; preds = %42, %40
  %48 = getelementptr inbounds %"class.icu_69::ForwardUTrie2StringIterator", %"class.icu_69::ForwardUTrie2StringIterator"* %0, i64 0, i32 0, i32 0
  %49 = load %struct.UTrie2*, %struct.UTrie2** %48, align 8
  %50 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %49, i64 0, i32 0
  %51 = load i16*, i16** %50, align 8
  %52 = lshr i32 %21, 5
  %53 = add nuw nsw i32 %52, 320
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds i16, i16* %51, i64 %54
  %56 = load i16, i16* %55, align 2
  %57 = zext i16 %56 to i32
  %58 = shl nuw nsw i32 %57, 2
  %59 = and i32 %21, 31
  %60 = add nuw nsw i32 %58, %59
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds i16, i16* %51, i64 %61
  br label %99

63:                                               ; preds = %42
  %64 = getelementptr inbounds i16, i16* %7, i64 2
  store i16* %64, i16** %2, align 8
  %65 = shl nuw nsw i32 %21, 10
  %66 = add nsw i32 %65, -56613888
  %67 = add nsw i32 %66, %44
  store i32 %67, i32* %22, align 8
  %68 = getelementptr inbounds %"class.icu_69::ForwardUTrie2StringIterator", %"class.icu_69::ForwardUTrie2StringIterator"* %0, i64 0, i32 0, i32 0
  %69 = load %struct.UTrie2*, %struct.UTrie2** %68, align 8
  %70 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %69, i64 0, i32 0
  %71 = load i16*, i16** %70, align 8
  %72 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %69, i64 0, i32 9
  %73 = load i32, i32* %72, align 4
  %74 = icmp slt i32 %67, %73
  br i1 %74, label %78, label %75

75:                                               ; preds = %63
  %76 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %69, i64 0, i32 10
  %77 = load i32, i32* %76, align 8
  br label %95

78:                                               ; preds = %63
  %79 = ashr i32 %67, 11
  %80 = add nsw i32 %79, 2080
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i16, i16* %71, i64 %81
  %83 = load i16, i16* %82, align 2
  %84 = zext i16 %83 to i32
  %85 = lshr i32 %67, 5
  %86 = and i32 %85, 63
  %87 = add nuw nsw i32 %86, %84
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds i16, i16* %71, i64 %88
  %90 = load i16, i16* %89, align 2
  %91 = zext i16 %90 to i32
  %92 = shl nuw nsw i32 %91, 2
  %93 = and i32 %67, 31
  %94 = add nuw nsw i32 %92, %93
  br label %95

95:                                               ; preds = %78, %75
  %96 = phi i32 [ %77, %75 ], [ %94, %78 ]
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i16, i16* %71, i64 %97
  br label %99

99:                                               ; preds = %47, %95, %25
  %100 = phi i16* [ %62, %47 ], [ %98, %95 ], [ %39, %25 ]
  %101 = load i16, i16* %100, align 2
  br label %102

102:                                              ; preds = %99, %11
  %103 = phi i16 [ %17, %11 ], [ %101, %99 ]
  ret i16 %103
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZL13enumSameValuePKvj(i8* nocapture readnone, i32 returned) unnamed_addr #6 {
  ret i32 %1
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind allocsize(0) }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
