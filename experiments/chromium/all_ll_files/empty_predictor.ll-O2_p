; ModuleID = '../../ui/base/prediction/empty_predictor.cc'
source_filename = "../../ui/base/prediction/empty_predictor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::EmptyPredictor" = type { %"class.ui::InputPredictor", %"class.absl::optional" }
%"class.ui::InputPredictor" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.ui::InputPredictor::InputData" }
%"struct.ui::InputPredictor::InputData" = type { %"class.gfx::PointF", %"class.base::TimeTicks" }
%"class.gfx::PointF" = type { float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }

@_ZTVN2ui14EmptyPredictorE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::EmptyPredictor"*)* @_ZN2ui14EmptyPredictorD2Ev to i8*), i8* bitcast (void (%"class.ui::EmptyPredictor"*)* @_ZN2ui14EmptyPredictorD0Ev to i8*), i8* bitcast (i8* (%"class.ui::EmptyPredictor"*)* @_ZNK2ui14EmptyPredictor7GetNameEv to i8*), i8* bitcast (void (%"class.ui::EmptyPredictor"*)* @_ZN2ui14EmptyPredictor5ResetEv to i8*), i8* bitcast (void (%"class.ui::EmptyPredictor"*, %"struct.ui::InputPredictor::InputData"*)* @_ZN2ui14EmptyPredictor6UpdateERKNS_14InputPredictor9InputDataE to i8*), i8* bitcast (i1 (%"class.ui::EmptyPredictor"*)* @_ZNK2ui14EmptyPredictor13HasPredictionEv to i8*), i8* bitcast (%"struct.ui::InputPredictor::InputData"* (%"class.ui::EmptyPredictor"*, i64, i64)* @_ZN2ui14EmptyPredictor18GeneratePredictionEN4base9TimeTicksENS1_9TimeDeltaE to i8*), i8* bitcast (i64 (%"class.ui::EmptyPredictor"*)* @_ZNK2ui14EmptyPredictor12TimeIntervalEv to i8*)] }, align 8
@_ZN8features19kPredictorNameEmptyE = external constant [0 x i8], align 1

@_ZN2ui14EmptyPredictorC1Ev = hidden unnamed_addr alias void (%"class.ui::EmptyPredictor"*), void (%"class.ui::EmptyPredictor"*)* @_ZN2ui14EmptyPredictorC2Ev
@_ZN2ui14EmptyPredictorD1Ev = hidden unnamed_addr alias void (%"class.ui::EmptyPredictor"*), void (%"class.ui::EmptyPredictor"*)* @_ZN2ui14EmptyPredictorD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui14EmptyPredictorC2Ev(%"class.ui::EmptyPredictor"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::EmptyPredictor", %"class.ui::EmptyPredictor"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2ui14EmptyPredictorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::EmptyPredictor", %"class.ui::EmptyPredictor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui14EmptyPredictorD2Ev(%"class.ui::EmptyPredictor"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14EmptyPredictorD0Ev(%"class.ui::EmptyPredictor"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::EmptyPredictor"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK2ui14EmptyPredictor7GetNameEv(%"class.ui::EmptyPredictor"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8features19kPredictorNameEmptyE, i64 0, i64 0)
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui14EmptyPredictor5ResetEv(%"class.ui::EmptyPredictor"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::EmptyPredictor", %"class.ui::EmptyPredictor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14EmptyPredictor6UpdateERKNS_14InputPredictor9InputDataE(%"class.ui::EmptyPredictor"* nocapture, %"struct.ui::InputPredictor::InputData"* nocapture readonly dereferenceable(16)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.ui::EmptyPredictor", %"class.ui::EmptyPredictor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.ui::EmptyPredictor", %"class.ui::EmptyPredictor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = bitcast %"struct.ui::InputPredictor::InputData"* %7 to i8*
  %9 = bitcast %"struct.ui::InputPredictor::InputData"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false) #9
  br label %14

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.ui::EmptyPredictor", %"class.ui::EmptyPredictor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %union.anon* %11 to i8*
  %13 = bitcast %"struct.ui::InputPredictor::InputData"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false) #9
  store i8 1, i8* %3, align 8
  br label %14

14:                                               ; preds = %6, %10
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui14EmptyPredictor13HasPredictionEv(%"class.ui::EmptyPredictor"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.ui::EmptyPredictor", %"class.ui::EmptyPredictor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.ui::InputPredictor::InputData"* @_ZN2ui14EmptyPredictor18GeneratePredictionEN4base9TimeTicksENS1_9TimeDeltaE(%"class.ui::EmptyPredictor"*, i64, i64) unnamed_addr #2 align 2 {
  %4 = bitcast %"class.ui::EmptyPredictor"* %0 to i1 (%"class.ui::EmptyPredictor"*)***
  %5 = load i1 (%"class.ui::EmptyPredictor"*)**, i1 (%"class.ui::EmptyPredictor"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.ui::EmptyPredictor"*)*, i1 (%"class.ui::EmptyPredictor"*)** %5, i64 5
  %7 = load i1 (%"class.ui::EmptyPredictor"*)*, i1 (%"class.ui::EmptyPredictor"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.ui::EmptyPredictor"* %0) #9
  br i1 %8, label %9, label %19

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.ui::EmptyPredictor", %"class.ui::EmptyPredictor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %9
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #10
  unreachable

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.ui::EmptyPredictor", %"class.ui::EmptyPredictor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %16 = tail call i8* @_Znwm(i64 16) #8
  %17 = bitcast i8* %16 to %"struct.ui::InputPredictor::InputData"*
  %18 = bitcast %"struct.ui::InputPredictor::InputData"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %16, i8* align 8 %18, i64 16, i1 false) #9
  br label %19

19:                                               ; preds = %3, %14
  %20 = phi %"struct.ui::InputPredictor::InputData"* [ %17, %14 ], [ null, %3 ]
  ret %"struct.ui::InputPredictor::InputData"* %20
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK2ui14EmptyPredictor12TimeIntervalEv(%"class.ui::EmptyPredictor"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i64 8000
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
