; ModuleID = '../../components/content_capture/common/content_capture_data.cc'
source_filename = "../../components/content_capture/common/content_capture_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.content_capture::ContentCaptureData" = type { i64, %"class.std::__1::basic_string", %"class.gfx::Rect", %"class.std::__1::vector" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.content_capture::ContentCaptureData"*, %"struct.content_capture::ContentCaptureData"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.content_capture::ContentCaptureData"* }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN15content_capture18ContentCaptureDataENS_9allocatorIS2_EEEC2ERKS5_ = comdat any

$_ZNSt3__113__vector_baseIN15content_capture18ContentCaptureDataENS_9allocatorIS2_EEE17__destruct_at_endEPS2_ = comdat any

@_ZN15content_capture18ContentCaptureDataC1Ev = hidden unnamed_addr alias void (%"struct.content_capture::ContentCaptureData"*), void (%"struct.content_capture::ContentCaptureData"*)* @_ZN15content_capture18ContentCaptureDataC2Ev
@_ZN15content_capture18ContentCaptureDataC1ERKS0_ = hidden unnamed_addr alias void (%"struct.content_capture::ContentCaptureData"*, %"struct.content_capture::ContentCaptureData"*), void (%"struct.content_capture::ContentCaptureData"*, %"struct.content_capture::ContentCaptureData"*)* @_ZN15content_capture18ContentCaptureDataC2ERKS0_
@_ZN15content_capture18ContentCaptureDataD1Ev = hidden unnamed_addr alias void (%"struct.content_capture::ContentCaptureData"*), void (%"struct.content_capture::ContentCaptureData"*)* @_ZN15content_capture18ContentCaptureDataD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15content_capture18ContentCaptureDataC2Ev(%"struct.content_capture::ContentCaptureData"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.content_capture::ContentCaptureData"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 72, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15content_capture18ContentCaptureDataC2ERKS0_(%"struct.content_capture::ContentCaptureData"*, %"struct.content_capture::ContentCaptureData"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %1, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %1, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #7
  br label %190

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i16*, i16** %16, align 8
  %18 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp ult i64 %19, 11
  br i1 %20, label %21, label %26

21:                                               ; preds = %15
  %22 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  %23 = trunc i64 %19 to i8
  %24 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  store i8 %23, i8* %25, align 1
  br label %43

26:                                               ; preds = %15
  %27 = icmp ugt i64 %19, 9223372036854775791
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %29) #8
  unreachable

30:                                               ; preds = %26
  %31 = add nuw nsw i64 %19, 8
  %32 = and i64 %31, -8
  %33 = icmp slt i64 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  tail call void @abort() #8
  unreachable

35:                                               ; preds = %30
  %36 = shl i64 %32, 1
  %37 = tail call i8* @_Znwm(i64 %36) #9
  %38 = bitcast i8* %37 to i16*
  %39 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  store i8* %37, i8** %39, align 8
  %40 = or i64 %32, -9223372036854775808
  %41 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %19, i64* %42, align 8
  br label %43

43:                                               ; preds = %35, %21
  %44 = phi i16* [ %22, %21 ], [ %38, %35 ]
  %45 = add nuw nsw i64 %19, 1
  %46 = add i64 %19, 1
  %47 = icmp ult i64 %46, 16
  br i1 %47, label %137, label %48

48:                                               ; preds = %43
  %49 = add i64 %19, 1
  %50 = getelementptr i16, i16* %44, i64 %49
  %51 = getelementptr i16, i16* %17, i64 %49
  %52 = icmp ult i16* %44, %51
  %53 = icmp ult i16* %17, %50
  %54 = and i1 %52, %53
  br i1 %54, label %137, label %55

55:                                               ; preds = %48
  %56 = and i64 %46, -16
  %57 = sub i64 %45, %56
  %58 = getelementptr i16, i16* %17, i64 %56
  %59 = getelementptr i16, i16* %44, i64 %56
  %60 = add i64 %56, -16
  %61 = lshr exact i64 %60, 4
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 3
  %64 = icmp ult i64 %60, 48
  br i1 %64, label %116, label %65

65:                                               ; preds = %55
  %66 = sub nsw i64 %62, %63
  br label %67

67:                                               ; preds = %67, %65
  %68 = phi i64 [ 0, %65 ], [ %113, %67 ]
  %69 = phi i64 [ %66, %65 ], [ %114, %67 ]
  %70 = getelementptr i16, i16* %17, i64 %68
  %71 = getelementptr i16, i16* %44, i64 %68
  %72 = bitcast i16* %70 to <8 x i16>*
  %73 = load <8 x i16>, <8 x i16>* %72, align 2, !alias.scope !2
  %74 = getelementptr i16, i16* %70, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  %76 = load <8 x i16>, <8 x i16>* %75, align 2, !alias.scope !2
  %77 = bitcast i16* %71 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %77, align 2, !alias.scope !5, !noalias !2
  %78 = getelementptr i16, i16* %71, i64 8
  %79 = bitcast i16* %78 to <8 x i16>*
  store <8 x i16> %76, <8 x i16>* %79, align 2, !alias.scope !5, !noalias !2
  %80 = or i64 %68, 16
  %81 = getelementptr i16, i16* %17, i64 %80
  %82 = getelementptr i16, i16* %44, i64 %80
  %83 = bitcast i16* %81 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !2
  %85 = getelementptr i16, i16* %81, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !2
  %88 = bitcast i16* %82 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %88, align 2, !alias.scope !5, !noalias !2
  %89 = getelementptr i16, i16* %82, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %90, align 2, !alias.scope !5, !noalias !2
  %91 = or i64 %68, 32
  %92 = getelementptr i16, i16* %17, i64 %91
  %93 = getelementptr i16, i16* %44, i64 %91
  %94 = bitcast i16* %92 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !2
  %96 = getelementptr i16, i16* %92, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !2
  %99 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %99, align 2, !alias.scope !5, !noalias !2
  %100 = getelementptr i16, i16* %93, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %101, align 2, !alias.scope !5, !noalias !2
  %102 = or i64 %68, 48
  %103 = getelementptr i16, i16* %17, i64 %102
  %104 = getelementptr i16, i16* %44, i64 %102
  %105 = bitcast i16* %103 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !2
  %107 = getelementptr i16, i16* %103, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !2
  %110 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %110, align 2, !alias.scope !5, !noalias !2
  %111 = getelementptr i16, i16* %104, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %112, align 2, !alias.scope !5, !noalias !2
  %113 = add i64 %68, 64
  %114 = add i64 %69, -4
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %67, !llvm.loop !7

116:                                              ; preds = %67, %55
  %117 = phi i64 [ 0, %55 ], [ %113, %67 ]
  %118 = icmp eq i64 %63, 0
  br i1 %118, label %135, label %119

119:                                              ; preds = %116, %119
  %120 = phi i64 [ %132, %119 ], [ %117, %116 ]
  %121 = phi i64 [ %133, %119 ], [ %63, %116 ]
  %122 = getelementptr i16, i16* %17, i64 %120
  %123 = getelementptr i16, i16* %44, i64 %120
  %124 = bitcast i16* %122 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !2
  %126 = getelementptr i16, i16* %122, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !2
  %129 = bitcast i16* %123 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %129, align 2, !alias.scope !5, !noalias !2
  %130 = getelementptr i16, i16* %123, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %131, align 2, !alias.scope !5, !noalias !2
  %132 = add i64 %120, 16
  %133 = add i64 %121, -1
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %119, !llvm.loop !9

135:                                              ; preds = %119, %116
  %136 = icmp eq i64 %46, %56
  br i1 %136, label %190, label %137

137:                                              ; preds = %135, %48, %43
  %138 = phi i64 [ %45, %48 ], [ %45, %43 ], [ %57, %135 ]
  %139 = phi i16* [ %17, %48 ], [ %17, %43 ], [ %58, %135 ]
  %140 = phi i16* [ %44, %48 ], [ %44, %43 ], [ %59, %135 ]
  %141 = add i64 %138, -1
  %142 = and i64 %138, 7
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %155, label %144

144:                                              ; preds = %137, %144
  %145 = phi i64 [ %150, %144 ], [ %138, %137 ]
  %146 = phi i16* [ %152, %144 ], [ %139, %137 ]
  %147 = phi i16* [ %151, %144 ], [ %140, %137 ]
  %148 = phi i64 [ %153, %144 ], [ %142, %137 ]
  %149 = load i16, i16* %146, align 2
  store i16 %149, i16* %147, align 2
  %150 = add i64 %145, -1
  %151 = getelementptr inbounds i16, i16* %147, i64 1
  %152 = getelementptr inbounds i16, i16* %146, i64 1
  %153 = add i64 %148, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %144, !llvm.loop !11

155:                                              ; preds = %144, %137
  %156 = phi i64 [ %138, %137 ], [ %150, %144 ]
  %157 = phi i16* [ %139, %137 ], [ %152, %144 ]
  %158 = phi i16* [ %140, %137 ], [ %151, %144 ]
  %159 = icmp ult i64 %141, 7
  br i1 %159, label %190, label %160

160:                                              ; preds = %155, %160
  %161 = phi i64 [ %186, %160 ], [ %156, %155 ]
  %162 = phi i16* [ %188, %160 ], [ %157, %155 ]
  %163 = phi i16* [ %187, %160 ], [ %158, %155 ]
  %164 = load i16, i16* %162, align 2
  store i16 %164, i16* %163, align 2
  %165 = getelementptr inbounds i16, i16* %163, i64 1
  %166 = getelementptr inbounds i16, i16* %162, i64 1
  %167 = load i16, i16* %166, align 2
  store i16 %167, i16* %165, align 2
  %168 = getelementptr inbounds i16, i16* %163, i64 2
  %169 = getelementptr inbounds i16, i16* %162, i64 2
  %170 = load i16, i16* %169, align 2
  store i16 %170, i16* %168, align 2
  %171 = getelementptr inbounds i16, i16* %163, i64 3
  %172 = getelementptr inbounds i16, i16* %162, i64 3
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %163, i64 4
  %175 = getelementptr inbounds i16, i16* %162, i64 4
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %163, i64 5
  %178 = getelementptr inbounds i16, i16* %162, i64 5
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %163, i64 6
  %181 = getelementptr inbounds i16, i16* %162, i64 6
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %163, i64 7
  %184 = getelementptr inbounds i16, i16* %162, i64 7
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = add i64 %161, -8
  %187 = getelementptr inbounds i16, i16* %163, i64 8
  %188 = getelementptr inbounds i16, i16* %162, i64 8
  %189 = icmp eq i64 %186, 0
  br i1 %189, label %190, label %160, !llvm.loop !12

190:                                              ; preds = %155, %160, %135, %12
  %191 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %0, i64 0, i32 2
  %192 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %1, i64 0, i32 2
  %193 = bitcast %"class.gfx::Rect"* %191 to i8*
  %194 = bitcast %"class.gfx::Rect"* %192 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %193, i8* align 8 %194, i64 16, i1 false)
  %195 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %0, i64 0, i32 3
  %196 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %1, i64 0, i32 3
  tail call void @_ZNSt3__16vectorIN15content_capture18ContentCaptureDataENS_9allocatorIS2_EEEC2ERKS5_(%"class.std::__1::vector"* %195, %"class.std::__1::vector"* dereferenceable(24) %196)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN15content_capture18ContentCaptureDataENS_9allocatorIS2_EEEC2ERKS5_(%"class.std::__1::vector"*, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #7
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.content_capture::ContentCaptureData"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 72
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %42, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 256204778801521550
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #8
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #9
  %18 = bitcast i8* %17 to %"struct.content_capture::ContentCaptureData"*
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %20 = bitcast %"struct.content_capture::ContentCaptureData"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %18, i64 %10
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.content_capture::ContentCaptureData"* %22, %"struct.content_capture::ContentCaptureData"** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %25 = load %"struct.content_capture::ContentCaptureData"*, %"struct.content_capture::ContentCaptureData"** %24, align 8
  %26 = load %"struct.content_capture::ContentCaptureData"*, %"struct.content_capture::ContentCaptureData"** %4, align 8
  %27 = bitcast %"struct.content_capture::ContentCaptureData"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"struct.content_capture::ContentCaptureData"* %25, %26
  br i1 %29, label %40, label %30

30:                                               ; preds = %16
  %31 = bitcast i8* %17 to %"struct.content_capture::ContentCaptureData"*
  br label %32

32:                                               ; preds = %30, %32
  %33 = phi %"struct.content_capture::ContentCaptureData"* [ %35, %32 ], [ %25, %30 ]
  %34 = phi %"struct.content_capture::ContentCaptureData"* [ %36, %32 ], [ %31, %30 ]
  tail call void @_ZN15content_capture18ContentCaptureDataC2ERKS0_(%"struct.content_capture::ContentCaptureData"* %34, %"struct.content_capture::ContentCaptureData"* dereferenceable(72) %33) #7
  %35 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %33, i64 1
  %36 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %34, i64 1
  %37 = icmp eq %"struct.content_capture::ContentCaptureData"* %35, %26
  br i1 %37, label %38, label %32

38:                                               ; preds = %32
  %39 = ptrtoint %"struct.content_capture::ContentCaptureData"* %36 to i64
  br label %40

40:                                               ; preds = %38, %16
  %41 = phi i64 [ %39, %38 ], [ %28, %16 ]
  store i64 %41, i64* %27, align 8
  br label %42

42:                                               ; preds = %2, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15content_capture18ContentCaptureDataD2Ev(%"struct.content_capture::ContentCaptureData"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %0, i64 0, i32 3, i32 0
  %3 = getelementptr inbounds %"class.std::__1::__vector_base", %"class.std::__1::__vector_base"* %2, i64 0, i32 0
  %4 = load %"struct.content_capture::ContentCaptureData"*, %"struct.content_capture::ContentCaptureData"** %3, align 8
  %5 = icmp eq %"struct.content_capture::ContentCaptureData"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  tail call void @_ZNSt3__113__vector_baseIN15content_capture18ContentCaptureDataENS_9allocatorIS2_EEE17__destruct_at_endEPS2_(%"class.std::__1::__vector_base"* %2, %"struct.content_capture::ContentCaptureData"* nonnull %4) #7
  %7 = bitcast %"class.std::__1::__vector_base"* %2 to i8**
  %8 = load i8*, i8** %7, align 8
  tail call void @_ZdlPv(i8* %8) #9
  br label %9

9:                                                ; preds = %1, %6
  %10 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %0, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %9
  %16 = bitcast %"class.std::__1::basic_string"* %10 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #9
  br label %18

18:                                               ; preds = %9, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK15content_capture18ContentCaptureDataeqERKS0_(%"struct.content_capture::ContentCaptureData"* nocapture readonly, %"struct.content_capture::ContentCaptureData"* nocapture readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %105

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %1, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = icmp eq i64 %18, %26
  br i1 %27, label %28, label %105

28:                                               ; preds = %8
  %29 = icmp eq i64 %18, 0
  br i1 %29, label %51, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = bitcast %"class.std::__1::basic_string"* %10 to i16*
  %34 = select i1 %22, i16* %32, i16* %33
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %9 to i16*
  %38 = select i1 %14, i16* %36, i16* %37
  br label %39

39:                                               ; preds = %46, %30
  %40 = phi i64 [ %47, %46 ], [ %18, %30 ]
  %41 = phi i16* [ %49, %46 ], [ %34, %30 ]
  %42 = phi i16* [ %48, %46 ], [ %38, %30 ]
  %43 = load i16, i16* %42, align 2
  %44 = load i16, i16* %41, align 2
  %45 = icmp eq i16 %44, %43
  br i1 %45, label %46, label %105

46:                                               ; preds = %39
  %47 = add i64 %40, -1
  %48 = getelementptr inbounds i16, i16* %42, i64 1
  %49 = getelementptr inbounds i16, i16* %41, i64 1
  %50 = icmp eq i64 %47, 0
  br i1 %50, label %51, label %39

51:                                               ; preds = %46, %28
  %52 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %0, i64 0, i32 2, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %1, i64 0, i32 2, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %53, %55
  br i1 %56, label %57, label %105

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %0, i64 0, i32 2, i32 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %1, i64 0, i32 2, i32 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %59, %61
  br i1 %62, label %63, label %105

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %0, i64 0, i32 2, i32 1, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %1, i64 0, i32 2, i32 1, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %65, %67
  br i1 %68, label %69, label %105

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %0, i64 0, i32 2, i32 1, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %1, i64 0, i32 2, i32 1, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %71, %73
  br i1 %74, label %75, label %105

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %0, i64 0, i32 3
  %77 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %1, i64 0, i32 3
  %78 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %0, i64 0, i32 3, i32 0, i32 1
  %79 = bitcast %"struct.content_capture::ContentCaptureData"** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.std::__1::vector"* %76 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = sub i64 %80, %82
  %84 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %1, i64 0, i32 3, i32 0, i32 1
  %85 = bitcast %"struct.content_capture::ContentCaptureData"** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.std::__1::vector"* %77 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = sub i64 %86, %88
  %90 = icmp eq i64 %83, %89
  %91 = inttoptr i64 %82 to %"struct.content_capture::ContentCaptureData"*
  %92 = inttoptr i64 %80 to %"struct.content_capture::ContentCaptureData"*
  br i1 %90, label %93, label %105

93:                                               ; preds = %75
  %94 = icmp eq %"struct.content_capture::ContentCaptureData"* %91, %92
  br i1 %94, label %105, label %95

95:                                               ; preds = %93
  %96 = inttoptr i64 %88 to %"struct.content_capture::ContentCaptureData"*
  br label %97

97:                                               ; preds = %95, %101
  %98 = phi %"struct.content_capture::ContentCaptureData"* [ %102, %101 ], [ %91, %95 ]
  %99 = phi %"struct.content_capture::ContentCaptureData"* [ %103, %101 ], [ %96, %95 ]
  %100 = tail call zeroext i1 @_ZNK15content_capture18ContentCaptureDataeqERKS0_(%"struct.content_capture::ContentCaptureData"* %98, %"struct.content_capture::ContentCaptureData"* dereferenceable(72) %99) #7
  br i1 %100, label %101, label %105

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %98, i64 1
  %103 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %99, i64 1
  %104 = icmp eq %"struct.content_capture::ContentCaptureData"* %102, %92
  br i1 %104, label %105, label %97

105:                                              ; preds = %39, %97, %101, %93, %51, %63, %57, %75, %8, %69, %2
  %106 = phi i1 [ false, %69 ], [ false, %2 ], [ false, %8 ], [ false, %75 ], [ false, %57 ], [ false, %63 ], [ false, %51 ], [ true, %93 ], [ false, %97 ], [ true, %101 ], [ false, %39 ]
  ret i1 %106
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__vector_baseIN15content_capture18ContentCaptureDataENS_9allocatorIS2_EEE17__destruct_at_endEPS2_(%"class.std::__1::__vector_base"*, %"struct.content_capture::ContentCaptureData"*) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__vector_base", %"class.std::__1::__vector_base"* %0, i64 0, i32 1
  %4 = load %"struct.content_capture::ContentCaptureData"*, %"struct.content_capture::ContentCaptureData"** %3, align 8
  %5 = icmp eq %"struct.content_capture::ContentCaptureData"* %4, %1
  br i1 %5, label %27, label %6

6:                                                ; preds = %2, %25
  %7 = phi %"struct.content_capture::ContentCaptureData"* [ %8, %25 ], [ %4, %2 ]
  %8 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %7, i64 -1
  %9 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %7, i64 -1, i32 3, i32 0
  %10 = getelementptr inbounds %"class.std::__1::__vector_base", %"class.std::__1::__vector_base"* %9, i64 0, i32 0
  %11 = load %"struct.content_capture::ContentCaptureData"*, %"struct.content_capture::ContentCaptureData"** %10, align 8
  %12 = icmp eq %"struct.content_capture::ContentCaptureData"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %6
  tail call void @_ZNSt3__113__vector_baseIN15content_capture18ContentCaptureDataENS_9allocatorIS2_EEE17__destruct_at_endEPS2_(%"class.std::__1::__vector_base"* %9, %"struct.content_capture::ContentCaptureData"* nonnull %11) #7
  %14 = bitcast %"class.std::__1::__vector_base"* %9 to i8**
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #9
  br label %16

16:                                               ; preds = %13, %6
  %17 = getelementptr inbounds %"struct.content_capture::ContentCaptureData", %"struct.content_capture::ContentCaptureData"* %7, i64 -1, i32 1
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %18, i64 0, i32 1, i32 1
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = bitcast %"class.std::__1::basic_string"* %17 to i8**
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #9
  br label %25

25:                                               ; preds = %16, %22
  %26 = icmp eq %"struct.content_capture::ContentCaptureData"* %8, %1
  br i1 %26, label %27, label %6

27:                                               ; preds = %25, %2
  store %"struct.content_capture::ContentCaptureData"* %1, %"struct.content_capture::ContentCaptureData"** %3, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
