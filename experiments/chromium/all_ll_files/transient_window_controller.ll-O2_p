; ModuleID = '../../ui/wm/core/transient_window_controller.cc'
source_filename = "../../ui/wm/core/transient_window_controller.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.wm::TransientWindowController" = type { %"class.aura::client::TransientWindowClient", %"class.base::ObserverList" }
%"class.aura::client::TransientWindowClient" = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.aura::Window" = type opaque
%"class.wm::TransientWindowManager" = type { %"class.aura::WindowObserver", %"class.aura::Window"*, %"class.aura::Window"*, %"class.std::__1::vector.7", %"class.aura::Window"*, i8, i8, i8, i8, [4 x i8], %"class.base::ObserverList.14" }
%"class.aura::WindowObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"class.aura::Window"**, %"class.aura::Window"**, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.aura::Window"** }
%"class.base::ObserverList.14" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.15", i64, i32, [4 x i8] }>
%"class.base::LinkedList.15" = type { %"class.base::LinkNode.16" }
%"class.base::LinkNode.16" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.aura::client::TransientWindowClientObserver" = type { i32 (...)** }

@_ZN2wm25TransientWindowController9instance_E = hidden local_unnamed_addr global %"class.wm::TransientWindowController"* null, align 8
@_ZTVN2wm25TransientWindowControllerE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.wm::TransientWindowController"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZN2wm25TransientWindowController17AddTransientChildEPN4aura6WindowES3_ to i8*), i8* bitcast (void (%"class.wm::TransientWindowController"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZN2wm25TransientWindowController20RemoveTransientChildEPN4aura6WindowES3_ to i8*), i8* bitcast (%"class.aura::Window"* (%"class.wm::TransientWindowController"*, %"class.aura::Window"*)* @_ZN2wm25TransientWindowController18GetTransientParentEPN4aura6WindowE to i8*), i8* bitcast (%"class.aura::Window"* (%"class.wm::TransientWindowController"*, %"class.aura::Window"*)* @_ZN2wm25TransientWindowController18GetTransientParentEPKN4aura6WindowE to i8*), i8* bitcast (void (%"class.std::__1::vector.7"*, %"class.wm::TransientWindowController"*, %"class.aura::Window"*)* @_ZN2wm25TransientWindowController20GetTransientChildrenEPKN4aura6WindowE to i8*), i8* bitcast (void (%"class.wm::TransientWindowController"*, %"class.aura::client::TransientWindowClientObserver"*)* @_ZN2wm25TransientWindowController11AddObserverEPN4aura6client29TransientWindowClientObserverE to i8*), i8* bitcast (void (%"class.wm::TransientWindowController"*, %"class.aura::client::TransientWindowClientObserver"*)* @_ZN2wm25TransientWindowController14RemoveObserverEPN4aura6client29TransientWindowClientObserverE to i8*), i8* bitcast (void (%"class.wm::TransientWindowController"*)* @_ZN2wm25TransientWindowControllerD2Ev to i8*), i8* bitcast (void (%"class.wm::TransientWindowController"*)* @_ZN2wm25TransientWindowControllerD0Ev to i8*)] }, align 8

@_ZN2wm25TransientWindowControllerC1Ev = hidden unnamed_addr alias void (%"class.wm::TransientWindowController"*), void (%"class.wm::TransientWindowController"*)* @_ZN2wm25TransientWindowControllerC2Ev
@_ZN2wm25TransientWindowControllerD1Ev = hidden unnamed_addr alias void (%"class.wm::TransientWindowController"*), void (%"class.wm::TransientWindowController"*)* @_ZN2wm25TransientWindowControllerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm25TransientWindowControllerC2Ev(%"class.wm::TransientWindowController"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2wm25TransientWindowControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %0, i64 0, i32 1
  %4 = bitcast %"class.base::ObserverList"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #7
  %5 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %5, %"class.base::internal::LinkNodeBase"* %5, %"class.base::internal::LinkNodeBase"* %5) #7
  %6 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %0, i64 0, i32 1, i32 2
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %0, i64 0, i32 1, i32 3
  store i32 0, i32* %7, align 8
  store %"class.wm::TransientWindowController"* %0, %"class.wm::TransientWindowController"** @_ZN2wm25TransientWindowController9instance_E, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm25TransientWindowControllerD2Ev(%"class.wm::TransientWindowController"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2wm25TransientWindowControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  store %"class.wm::TransientWindowController"* null, %"class.wm::TransientWindowController"** @_ZN2wm25TransientWindowController9instance_E, align 8
  %3 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast %"class.base::internal::LinkNodeBase"** %3 to %"class.base::LinkNode"**
  %5 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %0, i64 0, i32 1, i32 1, i32 0
  %6 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %4, align 8
  %7 = icmp eq %"class.base::LinkNode"* %6, %5
  br i1 %7, label %20, label %8

8:                                                ; preds = %1, %17
  %9 = phi %"class.base::LinkNode"* [ %18, %17 ], [ %6, %1 ]
  %10 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %9, i64 1
  %11 = bitcast %"class.base::LinkNode"* %10 to %"class.base::ObserverList"**
  %12 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  %13 = icmp eq %"class.base::ObserverList"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %11, align 8
  %15 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %9, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %15) #7
  %16 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %4, align 8
  br label %17

17:                                               ; preds = %14, %8
  %18 = phi %"class.base::LinkNode"* [ %9, %8 ], [ %16, %14 ]
  %19 = icmp eq %"class.base::LinkNode"* %18, %5
  br i1 %19, label %20, label %8

20:                                               ; preds = %17, %1
  %21 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %21, align 8
  %23 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %22 to i64
  %26 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %27 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %22 to i8*
  tail call void @_ZdlPv(i8* %28) #8
  br label %29

29:                                               ; preds = %20, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm25TransientWindowControllerD0Ev(%"class.wm::TransientWindowController"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2wm25TransientWindowControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  store %"class.wm::TransientWindowController"* null, %"class.wm::TransientWindowController"** @_ZN2wm25TransientWindowController9instance_E, align 8
  %3 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast %"class.base::internal::LinkNodeBase"** %3 to %"class.base::LinkNode"**
  %5 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %0, i64 0, i32 1, i32 1, i32 0
  %6 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %4, align 8
  %7 = icmp eq %"class.base::LinkNode"* %6, %5
  br i1 %7, label %20, label %8

8:                                                ; preds = %1, %17
  %9 = phi %"class.base::LinkNode"* [ %18, %17 ], [ %6, %1 ]
  %10 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %9, i64 1
  %11 = bitcast %"class.base::LinkNode"* %10 to %"class.base::ObserverList"**
  %12 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  %13 = icmp eq %"class.base::ObserverList"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %11, align 8
  %15 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %9, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %15) #7
  %16 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %4, align 8
  br label %17

17:                                               ; preds = %14, %8
  %18 = phi %"class.base::LinkNode"* [ %9, %8 ], [ %16, %14 ]
  %19 = icmp eq %"class.base::LinkNode"* %18, %5
  br i1 %19, label %20, label %8

20:                                               ; preds = %17, %1
  %21 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %21, align 8
  %23 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %22 to i64
  %26 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %27 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %22 to i8*
  tail call void @_ZdlPv(i8* %28) #8
  br label %29

29:                                               ; preds = %20, %24
  %30 = bitcast %"class.wm::TransientWindowController"* %0 to i8*
  tail call void @_ZdlPv(i8* %30) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm25TransientWindowController17AddTransientChildEPN4aura6WindowES3_(%"class.wm::TransientWindowController"* nocapture readnone, %"class.aura::Window"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.wm::TransientWindowManager"* @_ZN2wm22TransientWindowManager11GetOrCreateEPN4aura6WindowE(%"class.aura::Window"* %1) #7
  tail call void @_ZN2wm22TransientWindowManager17AddTransientChildEPN4aura6WindowE(%"class.wm::TransientWindowManager"* %4, %"class.aura::Window"* %2) #7
  ret void
}

declare %"class.wm::TransientWindowManager"* @_ZN2wm22TransientWindowManager11GetOrCreateEPN4aura6WindowE(%"class.aura::Window"*) local_unnamed_addr #2

declare void @_ZN2wm22TransientWindowManager17AddTransientChildEPN4aura6WindowE(%"class.wm::TransientWindowManager"*, %"class.aura::Window"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm25TransientWindowController20RemoveTransientChildEPN4aura6WindowES3_(%"class.wm::TransientWindowController"* nocapture readnone, %"class.aura::Window"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.wm::TransientWindowManager"* @_ZN2wm22TransientWindowManager11GetOrCreateEPN4aura6WindowE(%"class.aura::Window"* %1) #7
  tail call void @_ZN2wm22TransientWindowManager20RemoveTransientChildEPN4aura6WindowE(%"class.wm::TransientWindowManager"* %4, %"class.aura::Window"* %2) #7
  ret void
}

declare void @_ZN2wm22TransientWindowManager20RemoveTransientChildEPN4aura6WindowE(%"class.wm::TransientWindowManager"*, %"class.aura::Window"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.aura::Window"* @_ZN2wm25TransientWindowController18GetTransientParentEPN4aura6WindowE(%"class.wm::TransientWindowController"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.wm::TransientWindowController"* %0 to %"class.aura::Window"* (%"class.wm::TransientWindowController"*, %"class.aura::Window"*)***
  %4 = load %"class.aura::Window"* (%"class.wm::TransientWindowController"*, %"class.aura::Window"*)**, %"class.aura::Window"* (%"class.wm::TransientWindowController"*, %"class.aura::Window"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.aura::Window"* (%"class.wm::TransientWindowController"*, %"class.aura::Window"*)*, %"class.aura::Window"* (%"class.wm::TransientWindowController"*, %"class.aura::Window"*)** %4, i64 3
  %6 = load %"class.aura::Window"* (%"class.wm::TransientWindowController"*, %"class.aura::Window"*)*, %"class.aura::Window"* (%"class.wm::TransientWindowController"*, %"class.aura::Window"*)** %5, align 8
  %7 = tail call %"class.aura::Window"* %6(%"class.wm::TransientWindowController"* %0, %"class.aura::Window"* %1) #7
  ret %"class.aura::Window"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.aura::Window"* @_ZN2wm25TransientWindowController18GetTransientParentEPKN4aura6WindowE(%"class.wm::TransientWindowController"* nocapture readnone, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = tail call %"class.wm::TransientWindowManager"* @_ZN2wm22TransientWindowManager11GetIfExistsEPKN4aura6WindowE(%"class.aura::Window"* %1) #7
  %4 = icmp eq %"class.wm::TransientWindowManager"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %3, i64 0, i32 2
  %7 = load %"class.aura::Window"*, %"class.aura::Window"** %6, align 8
  br label %8

8:                                                ; preds = %2, %5
  %9 = phi %"class.aura::Window"* [ %7, %5 ], [ null, %2 ]
  ret %"class.aura::Window"* %9
}

declare %"class.wm::TransientWindowManager"* @_ZN2wm22TransientWindowManager11GetIfExistsEPKN4aura6WindowE(%"class.aura::Window"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm25TransientWindowController20GetTransientChildrenEPKN4aura6WindowE(%"class.std::__1::vector.7"* noalias sret, %"class.wm::TransientWindowController"* nocapture readnone, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.wm::TransientWindowManager"* @_ZN2wm22TransientWindowManager11GetIfExistsEPKN4aura6WindowE(%"class.aura::Window"* %2) #7
  %5 = icmp eq %"class.wm::TransientWindowManager"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = bitcast %"class.std::__1::vector.7"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #7
  br label %46

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %4, i64 0, i32 3
  %10 = bitcast %"class.std::__1::vector.7"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #7
  %11 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %4, i64 0, i32 3, i32 0, i32 1
  %12 = bitcast %"class.aura::Window"*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.7"* %9 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 3
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %46, label %19

19:                                               ; preds = %8
  %20 = icmp ugt i64 %17, 2305843009213693951
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector.7"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %22) #9
  unreachable

23:                                               ; preds = %19
  %24 = tail call i8* @_Znwm(i64 %16) #8
  %25 = bitcast i8* %24 to %"class.aura::Window"**
  %26 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 1
  %27 = bitcast %"class.aura::Window"*** %26 to i8**
  store i8* %24, i8** %27, align 8
  %28 = bitcast %"class.std::__1::vector.7"* %0 to i8**
  store i8* %24, i8** %28, align 8
  %29 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %25, i64 %17
  %30 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.aura::Window"** %29, %"class.aura::Window"*** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %9, i64 0, i32 0, i32 0
  %32 = load %"class.aura::Window"**, %"class.aura::Window"*** %31, align 8
  %33 = load i64, i64* %12, align 8
  %34 = bitcast %"class.aura::Window"*** %26 to i64*
  %35 = ptrtoint i8* %24 to i64
  %36 = ptrtoint %"class.aura::Window"** %32 to i64
  %37 = sub i64 %33, %36
  %38 = icmp sgt i64 %37, 0
  br i1 %38, label %39, label %44

39:                                               ; preds = %23
  %40 = lshr exact i64 %37, 3
  %41 = bitcast %"class.aura::Window"** %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 8 %41, i64 %37, i1 false) #7
  %42 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %25, i64 %40
  %43 = ptrtoint %"class.aura::Window"** %42 to i64
  br label %44

44:                                               ; preds = %39, %23
  %45 = phi i64 [ %43, %39 ], [ %35, %23 ]
  store i64 %45, i64* %34, align 8
  br label %46

46:                                               ; preds = %44, %8, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm25TransientWindowController11AddObserverEPN4aura6client29TransientWindowClientObserverE(%"class.wm::TransientWindowController"*, %"class.aura::client::TransientWindowClientObserver"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %0, i64 0, i32 1
  %4 = icmp eq %"class.aura::client::TransientWindowClientObserver"* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %"class.aura::client::TransientWindowClientObserver"* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %0, i64 0, i32 1, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %"class.aura::client::TransientWindowClientObserver"* %1 to i64
  %32 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #9
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #9
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #8
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #7
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #8
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm25TransientWindowController14RemoveObserverEPN4aura6client29TransientWindowClientObserverE(%"class.wm::TransientWindowController"*, %"class.aura::client::TransientWindowClientObserver"* readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.aura::client::TransientWindowClientObserver"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %0, i64 0, i32 1, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode"**
  %32 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %31, align 8
  %33 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %0, i64 0, i32 1, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #7
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #2

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
