; ModuleID = '../../third_party/blink/renderer/core/html/parser/html_tree_builder.cc'
source_filename = "../../third_party/blink/renderer/core/html/parser/html_tree_builder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.17 }
%class.scoped_refptr.17 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::MathMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::SVGQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.WTF::HashMap.1361" = type { %"class.WTF::HashTable.1362" }
%"class.WTF::HashTable.1362" = type <{ %"struct.WTF::KeyValuePair.1365"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1365" = type { %"class.WTF::AtomicString", %"class.blink::QualifiedName" }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.187", i32, [4 x i8], %"class.std::__1::unique_ptr.323", %"class.std::__1::unique_ptr.323", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.329", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.334", %"class.std::__1::unique_ptr.340", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.352", %"class.std::__1::unique_ptr.358", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.365", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.202", %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.252", %"class.std::__1::unique_ptr.259", %"class.std::__1::unique_ptr.259", %"class.std::__1::unique_ptr.266", %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.280", %"class.std::__1::unique_ptr.303", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.223" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.223" = type { %"struct.std::__1::__atomic_base.224" }
%"struct.std::__1::__atomic_base.224" = type { %"struct.std::__1::__atomic_base.225" }
%"struct.std::__1::__atomic_base.225" = type { %"struct.std::__1::__cxx_atomic_impl.226" }
%"struct.std::__1::__cxx_atomic_impl.226" = type { %"struct.std::__1::__cxx_atomic_base_impl.227" }
%"struct.std::__1::__cxx_atomic_base_impl.227" = type { i64 }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::Worklist.234"* }
%"class.blink::Worklist.234" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.223" }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::Worklist.241"* }
%"class.blink::Worklist.241" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.223" }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::Worklist.248"* }
%"class.blink::Worklist.248" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.223" }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.blink::Worklist.255"* }
%"class.blink::Worklist.255" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.223" }
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.blink::Worklist.262"* }
%"class.blink::Worklist.262" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.223" }
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.blink::Worklist.269"* }
%"class.blink::Worklist.269" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.223" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.blink::Worklist.276"* }
%"class.blink::Worklist.276" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.223" }
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.283", %"class.std::__1::__compressed_pair.290", %"class.std::__1::__compressed_pair.295", %"class.std::__1::__compressed_pair.297", [4 x i8] }>
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285", %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { i64 }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { float }
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.306", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.315" }
%"class.WTF::Vector.315" = type { %"class.WTF::VectorBuffer.316" }
%"class.WTF::VectorBuffer.316" = type { %"class.WTF::VectorBufferBase.317" }
%"class.WTF::VectorBufferBase.317" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.329" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.332" }
%"class.WTF::VectorBuffer.332" = type { %"class.WTF::VectorBufferBase.333" }
%"class.WTF::VectorBufferBase.333" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.346" }
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.234"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.241"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.248"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.255"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.262"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.453" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.358" = type { %"class.std::__1::__compressed_pair.359" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.364 }
%class.scoped_refptr.364 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.365" = type { %"struct.std::__1::__atomic_base.366" }
%"struct.std::__1::__atomic_base.366" = type { %"struct.std::__1::__cxx_atomic_impl.367" }
%"struct.std::__1::__cxx_atomic_impl.367" = type { %"struct.std::__1::__cxx_atomic_base_impl.368" }
%"struct.std::__1::__cxx_atomic_base_impl.368" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.391" }
%"struct.std::__1::atomic.391" = type { %"struct.std::__1::__atomic_base.392" }
%"struct.std::__1::__atomic_base.392" = type { %"struct.std::__1::__atomic_base.393" }
%"struct.std::__1::__atomic_base.393" = type { %"struct.std::__1::__cxx_atomic_impl.394" }
%"struct.std::__1::__cxx_atomic_impl.394" = type { %"struct.std::__1::__cxx_atomic_base_impl.395" }
%"struct.std::__1::__cxx_atomic_base_impl.395" = type { i32 }
%"class.blink::HTMLTreeBuilder" = type <{ i8, [7 x i8], %"class.blink::HTMLTreeBuilder::FragmentParsingContext", %"class.blink::HTMLConstructionSite", i32, i32, %"class.WTF::Vector.91", %"class.WTF::StringBuilder", i8, i8, [6 x i8], %"class.blink::Member.96", %"class.blink::Member.64", %"class.WTF::TextPosition", %"class.blink::HTMLParserOptions", [6 x i8] }>
%"class.blink::HTMLTreeBuilder::FragmentParsingContext" = type { %"class.blink::Member", %"class.blink::Member.10" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::DocumentFragment"* }
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.2", %"class.blink::Member.2" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.2", %"class.blink::Member.4", %"class.blink::Member.2", %"class.blink::Member.2", %"class.blink::Member.6" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.14", %"class.blink::Member.22", %"class.blink::Member.4", %"class.blink::Member.460", %"class.blink::Member.460", %"class.blink::Member.480", %"class.blink::Member.482", %"class.blink::Member.484", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.486", %"class.blink::HeapVector.488" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.22" = type { %"class.blink::MemberBase.23" }
%"class.blink::MemberBase.23" = type { %"class.blink::Document"* }
%"class.blink::Member.460" = type { %"class.blink::MemberBase.461" }
%"class.blink::MemberBase.461" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.464" }
%"class.blink::HeapHashMap.464" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.467" }
%"class.WTF::HashTable.467" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.469" }
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.64", i32, %"class.blink::HeapVector.473" }
%"class.blink::HeapVector.473" = type { %"class.WTF::Vector.476" }
%"class.WTF::Vector.476" = type { %"class.WTF::VectorBuffer.477" }
%"class.WTF::VectorBuffer.477" = type { %"class.WTF::VectorBufferBase.478" }
%"class.WTF::VectorBufferBase.478" = type { %"class.blink::Member.64"*, i32, i32 }
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.44" }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::HeapHashMap.46"* }
%"class.blink::HeapHashMap.46" = type opaque
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.488" = type { %"class.WTF::Vector.491" }
%"class.WTF::Vector.491" = type { %"class.WTF::VectorBuffer.492" }
%"class.WTF::VectorBuffer.492" = type { %"class.WTF::VectorBufferBase.493" }
%"class.WTF::VectorBufferBase.493" = type { %"class.blink::Member.494"*, i32, i32 }
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.496", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.498, %"class.WTF::Vector.499", %"class.WTF::Vector.499", %"class.blink::Member.2", %"class.blink::Member.504", %"class.blink::HeapHashSet.508", %"class.blink::Member.22", %"class.WTF::HashSet.515", %"class.WTF::TextPosition", %"class.blink::Member.519", %"class.blink::HeapVector.521", %"class.blink::Member.528" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.496" = type { %"class.blink::MemberBase.497" }
%"class.blink::MemberBase.497" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.498 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.499" = type { %"class.WTF::VectorBuffer.500" }
%"class.WTF::VectorBuffer.500" = type { %"class.WTF::VectorBufferBase.501" }
%"class.WTF::VectorBufferBase.501" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.504" = type { %"class.blink::MemberBase.505" }
%"class.blink::MemberBase.505" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.506" }
%"class.blink::Member.506" = type { %"class.blink::MemberBase.507" }
%"class.blink::MemberBase.507" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.508" = type { %"class.WTF::HashSet.511" }
%"class.WTF::HashSet.511" = type { %"class.WTF::HashTable.512" }
%"class.WTF::HashTable.512" = type <{ %"class.blink::WeakMember.514"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.514" = type { %"class.blink::MemberBase.5" }
%"class.WTF::HashSet.515" = type { %"class.WTF::HashTable.516" }
%"class.WTF::HashTable.516" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.521" = type { %"class.WTF::Vector.524" }
%"class.WTF::Vector.524" = type { %"class.WTF::VectorBuffer.525" }
%"class.WTF::VectorBuffer.525" = type { %"class.WTF::VectorBufferBase.526" }
%"class.WTF::VectorBufferBase.526" = type { %"class.blink::Member.504"*, i32, i32 }
%"class.blink::Member.528" = type { %"class.blink::MemberBase.529" }
%"class.blink::MemberBase.529" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::Node"* }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::HTMLStackItem"* }
%"class.blink::HTMLStackItem" = type <{ %"class.blink::Member.14", %"class.WTF::AtomicString", %"class.WTF::Vector", %"class.WTF::AtomicString", i8, [7 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::HTMLConstructionSite" = type <{ %"class.blink::Member.18", %"class.blink::Member.22", %"class.blink::Member.14", %"class.blink::Member.10", %"class.blink::Member.24", %"class.blink::HTMLElementStack", %"class.blink::HTMLFormattingElementList", %"class.blink::HeapVector.73", %"class.blink::HTMLConstructionSite::PendingText", i32, i8, i8, i8, i8 }>
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::HTMLParserReentryPermit"* }
%"class.blink::HTMLParserReentryPermit" = type <{ i32, i8, [3 x i8] }>
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type { %"class.blink::HTMLElement", %"class.blink::FormSubmission::Attributes", %"class.blink::Member.42", %"class.blink::RadioButtonGroupScope", %"class.blink::HeapVector", %"class.blink::HeapVector.54", i32, i8, i8, i8, i8 }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.26" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.30", %"class.blink::Member.32", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.30" = type { %"class.WTF::SingleThreadedBitField.31" }
%"class.WTF::SingleThreadedBitField.31" = type { i32 }
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.34 }
%class.scoped_refptr.34 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.35", %"class.WTF::AtomicString", %"class.WTF::Vector.37" }
%"class.WTF::RefCounted.35" = type { %"class.base::RefCounted.36" }
%"class.base::RefCounted.36" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.37" = type { %"class.WTF::VectorBuffer.38" }
%"class.WTF::VectorBuffer.38" = type { %"class.WTF::VectorBufferBase.39", [32 x i8] }
%"class.WTF::VectorBufferBase.39" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::FormSubmission::Attributes" = type { i32, i8, %"class.WTF::String", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::String" }
%"class.blink::Member.42" = type { %"class.blink::MemberBase.43" }
%"class.blink::MemberBase.43" = type { %"class.blink::HeapHashMap"* }
%"class.blink::HeapHashMap" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.49" }
%"class.WTF::Vector.49" = type { %"class.WTF::VectorBuffer.50" }
%"class.WTF::VectorBuffer.50" = type { %"class.WTF::VectorBufferBase.51" }
%"class.WTF::VectorBufferBase.51" = type { %"class.blink::Member.52"*, i32, i32 }
%"class.blink::Member.52" = type opaque
%"class.blink::HeapVector.54" = type { %"class.WTF::Vector.57" }
%"class.WTF::Vector.57" = type { %"class.WTF::VectorBuffer.58" }
%"class.WTF::VectorBuffer.58" = type { %"class.WTF::VectorBufferBase.59" }
%"class.WTF::VectorBufferBase.59" = type { %"class.blink::Member.60"*, i32, i32 }
%"class.blink::Member.60" = type opaque
%"class.blink::HTMLElementStack" = type <{ %"class.blink::Member.62", %"class.blink::Member.14", %"class.blink::Member.64", %"class.blink::Member.64", i32, [4 x i8] }>
%"class.blink::Member.62" = type { %"class.blink::MemberBase.63" }
%"class.blink::MemberBase.63" = type { %"class.blink::HTMLElementStack::ElementRecord"* }
%"class.blink::HTMLElementStack::ElementRecord" = type { %"class.blink::Member.10", %"class.blink::Member.62" }
%"class.blink::HTMLFormattingElementList" = type { %"class.blink::HeapVector.66" }
%"class.blink::HeapVector.66" = type { %"class.WTF::Vector.69" }
%"class.WTF::Vector.69" = type { %"class.WTF::VectorBuffer.70" }
%"class.WTF::VectorBuffer.70" = type { %"class.WTF::VectorBufferBase.71" }
%"class.WTF::VectorBufferBase.71" = type { %"class.blink::HTMLFormattingElementList::Entry"*, i32, i32 }
%"class.blink::HTMLFormattingElementList::Entry" = type { %"class.blink::Member.10" }
%"class.blink::HeapVector.73" = type { %"class.WTF::Vector.76" }
%"class.WTF::Vector.76" = type { %"class.WTF::VectorBuffer.77" }
%"class.WTF::VectorBuffer.77" = type { %"class.WTF::VectorBufferBase.78", [40 x i8] }
%"class.WTF::VectorBufferBase.78" = type { %"struct.blink::HTMLConstructionSiteTask"*, i32, i32 }
%"struct.blink::HTMLConstructionSiteTask" = type <{ i32, [4 x i8], %"class.blink::Member.14", %"class.blink::Member.2", %"class.blink::Member.2", i8, [7 x i8] }>
%"class.blink::HTMLConstructionSite::PendingText" = type <{ %"class.blink::Member.14", %"class.blink::Member.2", %"class.WTF::StringBuilder", i32, [4 x i8] }>
%"class.WTF::Vector.91" = type { %"class.WTF::VectorBuffer.92" }
%"class.WTF::VectorBuffer.92" = type { %"class.WTF::VectorBufferBase.93" }
%"class.WTF::VectorBufferBase.93" = type { i32*, i32, i32 }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon, i32, i8, i8, [2 x i8] }>
%union.anon = type { %"class.WTF::Vector.81" }
%"class.WTF::Vector.81" = type { %"class.WTF::VectorBuffer.82" }
%"class.WTF::VectorBuffer.82" = type { %"class.WTF::VectorBufferBase.83", [16 x i8] }
%"class.WTF::VectorBufferBase.83" = type { i8*, i32, i32 }
%"class.blink::Member.96" = type { %"class.blink::MemberBase.97" }
%"class.blink::MemberBase.97" = type { %"class.blink::HTMLDocumentParser"* }
%"class.blink::Member.64" = type { %"class.blink::MemberBase.65" }
%"class.blink::MemberBase.65" = type { %"class.blink::Element"* }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::HTMLParserOptions" = type { i8, i8 }
%"class.blink::HTMLDocumentParser" = type { %"class.blink::ScriptableDocumentParser", %"class.blink::HTMLParserScriptRunnerHost", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::HTMLParserOptions", %"class.blink::HTMLInputStream", %"class.blink::Member.18", %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.156", %"class.blink::Member.163", %"class.blink::Member.165", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.167", %class.scoped_refptr.390, %"class.blink::Member.396", %"class.WTF::TextPosition", %"class.std::__1::unique_ptr.398", %"class.WTF::Deque.425", %"class.base::WeakPtr", %"class.blink::Member.437", %"class.blink::Member.439", %"class.WTF::Vector.170", %"class.std::__1::unique_ptr.441", %"class.std::__1::unique_ptr.447", %"class.blink::CompactHTMLToken"*, i32, i8, i8, i8, i32, i32, i8, i8, i8, i8, %"class.blink::ThreadScheduler"* }
%"class.blink::ScriptableDocumentParser" = type { %"class.blink::DecodedDataDocumentParser", %"class.blink::Member.127", i8, i32 }
%"class.blink::DecodedDataDocumentParser" = type { %"class.blink::DocumentParser", i8, %"class.std::__1::unique_ptr" }
%"class.blink::DocumentParser" = type { %"class.blink::NameClient", i32, i8, %"class.blink::Member.22", %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::TextResourceDecoder" = type { %"class.blink::TextResourceDecoderOptions", %"class.WTF::TextEncoding", %"class.std::__1::unique_ptr.107", i32, %"class.WTF::Vector.113", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.118" }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.103" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::KURL"* }
%"class.WTF::TextEncoding" = type { i8* }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.WTF::TextCodec"* }
%"class.WTF::TextCodec" = type { i32 (...)** }
%"class.WTF::Vector.113" = type { %"class.WTF::VectorBuffer.114" }
%"class.WTF::VectorBuffer.114" = type { %"class.WTF::VectorBufferBase.115" }
%"class.WTF::VectorBufferBase.115" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.blink::HTMLMetaCharsetParser"* }
%"class.blink::HTMLMetaCharsetParser" = type opaque
%"class.blink::Member.127" = type { %"class.blink::MemberBase.128" }
%"class.blink::MemberBase.128" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type opaque
%"class.blink::HTMLParserScriptRunnerHost" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::HTMLInputStream" = type { %"class.blink::SegmentedString", %"class.blink::SegmentedString"* }
%"class.blink::SegmentedString" = type <{ %"class.blink::SegmentedSubstring", i32, i32, i32, [4 x i8], %"class.WTF::Deque", i8, i8, [6 x i8] }>
%"class.blink::SegmentedSubstring" = type { %union.anon.129, i8*, i8*, i8, i8, %"class.WTF::String" }
%union.anon.129 = type { i8* }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::SegmentedSubstring, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::SegmentedSubstring, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.132" }
%"class.WTF::VectorBuffer.132" = type { %"class.WTF::VectorBufferBase.133" }
%"class.WTF::VectorBufferBase.133" = type { %"class.blink::SegmentedSubstring"*, i32, i32 }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.blink::HTMLToken"* }
%"class.blink::HTMLToken" = type { i32, %"class.blink::HTMLToken::Attribute::Range", i32, %class.LiteralBuffer, i16, i8, %"class.WTF::Vector.137", %"class.blink::HTMLToken::Attribute"*, %"class.std::__1::unique_ptr.143" }
%"class.blink::HTMLToken::Attribute::Range" = type { i32, i32 }
%class.LiteralBuffer = type { i16*, i16*, i16*, [256 x i16] }
%"class.WTF::Vector.137" = type { %"class.WTF::VectorBuffer.138" }
%"class.WTF::VectorBuffer.138" = type { %"class.WTF::VectorBufferBase.139", [1920 x i8] }
%"class.WTF::VectorBufferBase.139" = type { %"class.blink::HTMLToken::Attribute"*, i32, i32 }
%"class.blink::HTMLToken::Attribute" = type { %class.LiteralBuffer.140, %class.LiteralBuffer.140, %"class.blink::HTMLToken::Attribute::Range", %"class.blink::HTMLToken::Attribute::Range" }
%class.LiteralBuffer.140 = type { i16*, i16*, i16*, [32 x i16] }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::DoctypeData"* }
%"class.blink::DoctypeData" = type <{ i8, i8, [6 x i8], %"class.WTF::Vector.146", %"class.WTF::Vector.146", i8, [7 x i8] }>
%"class.WTF::Vector.146" = type { %"class.WTF::VectorBuffer.147" }
%"class.WTF::VectorBuffer.147" = type { %"class.WTF::VectorBufferBase.88" }
%"class.WTF::VectorBufferBase.88" = type { i16*, i32, i32 }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::HTMLTokenizer"* }
%"class.blink::HTMLTokenizer" = type <{ i32, i8, i8, [2 x i8], %"class.blink::HTMLToken"*, i16, [6 x i8], %"class.blink::InputStreamPreprocessor", %class.LiteralBuffer.140, %class.LiteralBuffer.159, %class.LiteralBuffer.159, %"class.blink::HTMLParserOptions", [6 x i8] }>
%"class.blink::InputStreamPreprocessor" = type <{ %"class.blink::HTMLTokenizer"*, i8, [7 x i8] }>
%class.LiteralBuffer.159 = type { i8*, i8*, i8*, [32 x i8] }
%"class.blink::Member.163" = type { %"class.blink::MemberBase.164" }
%"class.blink::MemberBase.164" = type { %"class.blink::HTMLParserScriptRunner"* }
%"class.blink::HTMLParserScriptRunner" = type opaque
%"class.blink::Member.165" = type { %"class.blink::MemberBase.166" }
%"class.blink::MemberBase.166" = type { %"class.blink::HTMLTreeBuilder"* }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::HTMLPreloadScanner"* }
%"class.blink::HTMLPreloadScanner" = type { %"class.blink::TokenPreloadScanner", %"class.blink::SegmentedString", %"class.blink::HTMLToken", %"class.std::__1::unique_ptr.156" }
%"class.blink::TokenPreloadScanner" = type { %"class.blink::CSSPreloadScanner", %"class.blink::KURL", %"class.blink::KURL", %class.scoped_refptr.182, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::TokenPreloadScanner::PictureData", i64, %"class.std::__1::unique_ptr.183", %"class.blink::Persistent", %"class.blink::ClientHintsPreferences", i32, i8, i8, %"class.WTF::Vector.382" }
%"class.blink::CSSPreloadScanner" = type { i32, [4 x i8], %"class.WTF::StringBuilder", %"class.WTF::StringBuilder", i32, %"class.WTF::Vector.170"*, %"class.blink::KURL"*, %"class.blink::PreloadRequest::ExclusionInfo"* }
%"class.blink::PreloadRequest::ExclusionInfo" = type { i32 (...)**, %"class.WTF::RefCounted.176", %"class.blink::KURL", %"class.WTF::HashSet.178", %"class.WTF::HashSet.178" }
%"class.WTF::RefCounted.176" = type { %"class.base::RefCounted.177" }
%"class.base::RefCounted.177" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashSet.178" = type { %"class.WTF::HashTable.179" }
%"class.WTF::HashTable.179" = type <{ %"class.blink::KURL"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.182 = type { %"class.blink::PreloadRequest::ExclusionInfo"* }
%"struct.blink::TokenPreloadScanner::PictureData" = type <{ %"class.WTF::String", float, i8, i8, [2 x i8] }>
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.blink::CachedDocumentParameters"* }
%"struct.blink::CachedDocumentParameters" = type { i8, [3 x i8], %"class.blink::Length", i8, i8, i32, i32, i32, %"class.blink::WeakPersistent", %"class.blink::WeakPersistent.369", %"class.WTF::HashSet.371" }
%"class.blink::Length" = type <{ %union.anon.186, i8, i8, i8, i8 }>
%union.anon.186 = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::LazyLoadImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::WeakPersistent.369" = type { %"class.blink::PersistentBase.370" }
%"class.blink::PersistentBase.370" = type { %"class.blink::SubresourceRedirectOriginsPreloader"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SubresourceRedirectOriginsPreloader" = type opaque
%"class.WTF::HashSet.371" = type { %"class.WTF::HashTable.372" }
%"class.WTF::HashTable.372" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.378" }
%"class.blink::PersistentBase.378" = type { %"class.blink::MediaValuesCached"*, %"class.blink::PersistentNodePtr.381" }
%"class.blink::MediaValuesCached" = type { %"class.blink::MediaValues", %"struct.blink::MediaValuesCached::MediaValuesCachedData" }
%"class.blink::MediaValues" = type { i32 (...)** }
%"struct.blink::MediaValuesCached::MediaValuesCachedData" = type <{ double, double, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, [5 x i8], %"class.WTF::String", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, [4 x i8] }>
%"class.blink::PersistentNodePtr.381" = type { %"class.blink::PersistentNode"* }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.WTF::Vector.382" = type { %"class.WTF::VectorBuffer.383" }
%"class.WTF::VectorBuffer.383" = type { %"class.WTF::VectorBufferBase.384" }
%"class.WTF::VectorBufferBase.384" = type { %"struct.blink::TokenPreloadScanner::Checkpoint"*, i32, i32 }
%"struct.blink::TokenPreloadScanner::Checkpoint" = type { %"class.blink::KURL", i8, i8, i64, %class.scoped_refptr.182 }
%class.scoped_refptr.390 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.391" }
%"class.blink::Member.396" = type { %"class.blink::MemberBase.397" }
%"class.blink::MemberBase.397" = type { %"class.blink::HTMLParserScheduler"* }
%"class.blink::HTMLParserScheduler" = type opaque
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"struct.blink::HTMLDocumentParser::TokenizedChunk"* }
%"struct.blink::HTMLDocumentParser::TokenizedChunk" = type { %"class.WTF::Vector.401", %"class.WTF::Vector.170", %"class.absl::optional", i32, %"class.WTF::Vector.417", i32, i32, i8, i32 }
%"class.WTF::Vector.401" = type { %"class.WTF::VectorBuffer.402" }
%"class.WTF::VectorBuffer.402" = type { %"class.WTF::VectorBufferBase.403" }
%"class.WTF::VectorBufferBase.403" = type { %"class.blink::CompactHTMLToken"*, i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.411 }
%union.anon.411 = type { %"struct.blink::ViewportDescription" }
%"struct.blink::ViewportDescription" = type { i32, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, i8, float, float, i8, i8, i8, i8, %"class.absl::optional.412" }
%"class.absl::optional.412" = type { %"class.absl::optional_internal::optional_data.413" }
%"class.absl::optional_internal::optional_data.413" = type { %"class.absl::optional_internal::optional_data_base.414" }
%"class.absl::optional_internal::optional_data_base.414" = type { %"class.absl::optional_internal::optional_data_dtor_base.415" }
%"class.absl::optional_internal::optional_data_dtor_base.415" = type { i8, %union.anon.416 }
%union.anon.416 = type { i32 }
%"class.WTF::Vector.417" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.419", [4 x i8] }>
%"class.WTF::VectorBufferBase.419" = type { i32*, i32, i32 }
%"class.WTF::Deque.425" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::HTMLDocumentParser::TokenizedChunk, std::__1::default_delete<blink::HTMLDocumentParser::TokenizedChunk> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::HTMLDocumentParser::TokenizedChunk, std::__1::default_delete<blink::HTMLDocumentParser::TokenizedChunk> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.428" }
%"class.WTF::VectorBuffer.428" = type { %"class.WTF::VectorBufferBase.429" }
%"class.WTF::VectorBufferBase.429" = type { %"class.std::__1::unique_ptr.398"*, i32, i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.430 }
%class.scoped_refptr.430 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.431", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.431" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.432" }
%"struct.std::__1::atomic.432" = type { %"struct.std::__1::__atomic_base.433" }
%"struct.std::__1::__atomic_base.433" = type { %"struct.std::__1::__atomic_base.434" }
%"struct.std::__1::__atomic_base.434" = type { %"struct.std::__1::__cxx_atomic_impl.435" }
%"struct.std::__1::__cxx_atomic_impl.435" = type { %"struct.std::__1::__cxx_atomic_base_impl.436" }
%"struct.std::__1::__cxx_atomic_base_impl.436" = type { i8 }
%"class.blink::Member.437" = type { %"class.blink::MemberBase.438" }
%"class.blink::MemberBase.438" = type { %"class.blink::HTMLResourcePreloader"* }
%"class.blink::HTMLResourcePreloader" = type opaque
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::HTMLDocumentParserState"* }
%"class.blink::HTMLDocumentParserState" = type opaque
%"class.WTF::Vector.170" = type { %"class.WTF::VectorBuffer.171" }
%"class.WTF::VectorBuffer.171" = type { %"class.WTF::VectorBufferBase.172" }
%"class.WTF::VectorBufferBase.172" = type { %"class.std::__1::unique_ptr.173"*, i32, i32 }
%"class.std::__1::unique_ptr.173" = type opaque
%"class.std::__1::unique_ptr.441" = type { %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.blink::HTMLParserMetrics"* }
%"class.blink::HTMLParserMetrics" = type opaque
%"class.std::__1::unique_ptr.447" = type { %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"class.base::ElapsedTimer"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::CompactHTMLToken" = type { i8, %"class.WTF::String", %"class.WTF::Vector.404", %"class.WTF::TextPosition" }
%"class.WTF::Vector.404" = type { %"class.WTF::VectorBuffer.405" }
%"class.WTF::VectorBuffer.405" = type { %"class.WTF::VectorBufferBase.406" }
%"class.WTF::VectorBufferBase.406" = type { %"struct.blink::CompactHTMLToken::Attribute"*, i32, i32 }
%"struct.blink::CompactHTMLToken::Attribute" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::ThreadScheduler" = type { i32 (...)** }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.538", %"class.WTF::Vector.538", i8, i32, %"class.blink::Member.545", %"class.blink::Member.547", %"class.blink::Member.549", %"class.blink::Member.551", %"class.blink::Member.553", %"class.blink::Member.555", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.557", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.563", %"class.blink::Member.565", %"class.blink::Member.494", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.568", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.473", %"class.blink::Member.64", %"class.blink::Member.591", %"class.blink::Member.64", %"class.blink::Member.64", %"class.blink::Member.64", %"class.blink::UserActionElementSet", %"class.blink::Member.600", double, double, i64, i64, %"class.blink::HeapHashSet.602", %"class.blink::HeapHashSet.609", i16, i8, %"class.blink::Member.616", %"class.blink::Member.618", %"class.blink::Member.620", %"class.blink::Member.622", %"class.blink::TextLinkColors", %"class.blink::Member.624", i8, [7 x i8], %"class.blink::HeapHashMap.626", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.64", %"class.WTF::Vector.633", %"class.blink::Member.638", %"class.blink::Member.640", i8, %"class.blink::Member.64", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.642", %"class.blink::HeapVector.644", %"class.std::__1::unique_ptr.652", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.658", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.671", %"class.WTF::Vector.673", i8, i8, %"class.std::__1::unique_ptr.678", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.473", %"class.blink::HeapVector.684", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.692", i8, i32, %"class.blink::Member.694", %"class.blink::Member.696", %"class.blink::Member.698", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.700", %"class.WTF::HashMap.702", %"class.blink::Member.707", %"class.blink::Member.709", %"class.blink::Member.711", %"class.blink::Member.713", %"class.blink::Member.22", %"class.blink::Member.22", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.715", i8, i32, %"class.blink::Member.722", %"class.blink::Member.724", i32, %"class.blink::Member.726", %"class.blink::Member.728", %"class.blink::Member.730", %"class.std::__1::unique_ptr.732", i64, %"class.std::__1::unique_ptr.738", i32, i32, %"class.blink::Member.744", %"class.blink::Member.746", %"class.blink::Member.748", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.750", %"class.WTF::Vector.752", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.757", %"class.blink::Member.764", %"class.std::__1::unique_ptr.766", %"class.blink::Member.772", i8, i8, %"class.WTF::String", %"class.blink::Member.774", i8, [7 x i8], %"class.blink::HeapHashMap.776", %"class.blink::HeapObserverSet", %"class.blink::Member.790", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.792", i32, i8, i8, %"class.blink::WeakMember.794", %"class.blink::Member.795" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.531" }
%"class.blink::HeapHashMap.531" = type { %"class.WTF::HashMap.534" }
%"class.WTF::HashMap.534" = type { %"class.WTF::HashTable.535" }
%"class.WTF::HashTable.535" = type <{ %"struct.WTF::KeyValuePair.537"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.537" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.538" = type { %"class.WTF::VectorBuffer.539" }
%"class.WTF::VectorBuffer.539" = type { %"class.WTF::VectorBufferBase.540" }
%"class.WTF::VectorBufferBase.540" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.541 }
%class.scoped_refptr.541 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.542", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.542" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.545" = type { %"class.blink::MemberBase.546" }
%"class.blink::MemberBase.546" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.547" = type { %"class.blink::MemberBase.548" }
%"class.blink::MemberBase.548" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1116", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1178", i32, i8, [3 x i8], %"class.blink::HeapVector.1180", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1188", %"class.blink::Member.1190", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1199", %"class.blink::Member.1318", %"class.blink::Member.1320", i8, [7 x i8] }>
%"class.blink::Supplementable.1116" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1117" }
%"class.blink::HeapHashMap.1117" = type { %"class.WTF::HashMap.1120" }
%"class.WTF::HashMap.1120" = type { %"class.WTF::HashTable.1121" }
%"class.WTF::HashTable.1121" = type <{ %"struct.WTF::KeyValuePair.1123"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1123" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1132" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1124" }
%"class.blink::HeapObserverSet.1124" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1125" }
%"class.blink::HeapHashSet.1125" = type { %"class.WTF::HashSet.1128" }
%"class.WTF::HashSet.1128" = type { %"class.WTF::HashTable.1129" }
%"class.WTF::HashTable.1129" = type <{ %"class.blink::WeakMember.1131"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1131" = type opaque
%"class.blink::Supplementable.1132" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1133" }
%"class.blink::HeapHashMap.1133" = type { %"class.WTF::HashMap.1136" }
%"class.WTF::HashMap.1136" = type { %"class.WTF::HashTable.1137" }
%"class.WTF::HashTable.1137" = type <{ %"struct.WTF::KeyValuePair.1139"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1139" = type { i8*, %"class.blink::Member.1337" }
%"class.blink::Member.1337" = type { %"class.blink::MemberBase.1338" }
%"class.blink::MemberBase.1338" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1339" }
%"class.blink::Member.1339" = type { %"class.blink::MemberBase.1340" }
%"class.blink::MemberBase.1340" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1140, %"class.std::__1::unique_ptr.1141", %"class.std::__1::unique_ptr.1141", %"class.std::__1::unique_ptr.1168", %"class.std::__1::unique_ptr.1168", %"class.blink::Member.547", i32, [4 x i8], %"class.WTF::HashSet.1174", i32, i32 }
%class.scoped_refptr.1140 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1114", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.930", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.935 }
%"class.WTF::RefCounted.1114" = type { %"class.base::RefCounted.1115" }
%"class.base::RefCounted.1115" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.930" = type { %"class.absl::optional_internal::optional_data.931" }
%"class.absl::optional_internal::optional_data.931" = type { %"class.absl::optional_internal::optional_data_base.932" }
%"class.absl::optional_internal::optional_data_base.932" = type { %"class.absl::optional_internal::optional_data_dtor_base.933" }
%"class.absl::optional_internal::optional_data_dtor_base.933" = type { i8, %union.anon.934 }
%union.anon.934 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.935 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1141" = type { %"class.std::__1::__compressed_pair.1142" }
%"class.std::__1::__compressed_pair.1142" = type { %"struct.std::__1::__compressed_pair_elem.1143" }
%"struct.std::__1::__compressed_pair_elem.1143" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.1144", %"class.std::__1::map.1155", %"class.std::__1::map.1164"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.930" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.906" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.907" }
%"struct.std::__1::__compressed_pair_elem.907" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.908 }
%union.anon.908 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map.1144" = type { %"class.std::__1::__tree.1145" }
%"class.std::__1::__tree.1145" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1146", %"class.std::__1::__compressed_pair.1150" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1146" = type { %"struct.std::__1::__compressed_pair_elem.852" }
%"struct.std::__1::__compressed_pair_elem.852" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1150" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"class.std::__1::map.1155" = type { %"class.std::__1::__tree.1156" }
%"class.std::__1::__tree.1156" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1157", %"class.std::__1::__compressed_pair.1161" }
%"class.std::__1::__compressed_pair.1157" = type { %"struct.std::__1::__compressed_pair_elem.852" }
%"class.std::__1::__compressed_pair.1161" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"class.std::__1::map.1164" = type opaque
%"class.std::__1::unique_ptr.1168" = type { %"class.std::__1::__compressed_pair.1169" }
%"class.std::__1::__compressed_pair.1169" = type { %"struct.std::__1::__compressed_pair_elem.1170" }
%"struct.std::__1::__compressed_pair_elem.1170" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1174" = type { %"class.WTF::HashTable.1175" }
%"class.WTF::HashTable.1175" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1178" = type { %"class.blink::MemberBase.1179" }
%"class.blink::MemberBase.1179" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1180" = type { %"class.WTF::Vector.1183" }
%"class.WTF::Vector.1183" = type { %"class.WTF::VectorBuffer.1184" }
%"class.WTF::VectorBuffer.1184" = type { %"class.WTF::VectorBufferBase.1185" }
%"class.WTF::VectorBufferBase.1185" = type { %"class.blink::Member.1186"*, i32, i32 }
%"class.blink::Member.1186" = type opaque
%"class.blink::Member.1188" = type { %"class.blink::MemberBase.1189" }
%"class.blink::MemberBase.1189" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1190" = type { %"class.blink::MemberBase.1191" }
%"class.blink::MemberBase.1191" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1192", i32, i32 }
%"class.blink::HeapHashMap.1192" = type { %"class.WTF::HashMap.1195" }
%"class.WTF::HashMap.1195" = type { %"class.WTF::HashTable.1196" }
%"class.WTF::HashTable.1196" = type <{ %"struct.WTF::KeyValuePair.1198"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1198" = type opaque
%"class.std::__1::unique_ptr.1199" = type { %"class.std::__1::__compressed_pair.1200" }
%"class.std::__1::__compressed_pair.1200" = type { %"struct.std::__1::__compressed_pair_elem.1201" }
%"struct.std::__1::__compressed_pair_elem.1201" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1202" }
%"class.std::__1::unique_ptr.1202" = type { %"class.std::__1::__compressed_pair.1203" }
%"class.std::__1::__compressed_pair.1203" = type { %"struct.std::__1::__compressed_pair_elem.1204" }
%"struct.std::__1::__compressed_pair_elem.1204" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1205" }
%"class.WTF::Vector.1205" = type { %"class.WTF::VectorBuffer.1206" }
%"class.WTF::VectorBuffer.1206" = type { %"class.WTF::VectorBufferBase.1207" }
%"class.WTF::VectorBufferBase.1207" = type { %"class.mojo::StructPtr.1208"*, i32, i32 }
%"class.mojo::StructPtr.1208" = type { %"class.std::__1::unique_ptr.1209" }
%"class.std::__1::unique_ptr.1209" = type { %"class.std::__1::__compressed_pair.1210" }
%"class.std::__1::__compressed_pair.1210" = type { %"struct.std::__1::__compressed_pair_elem.1211" }
%"struct.std::__1::__compressed_pair_elem.1211" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1212", %"class.WTF::HashMap.1219", %"class.WTF::HashMap.1224", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.1229", i8, %"class.WTF::Vector.922", i32, %"class.mojo::StructPtr.1230", %"class.WTF::Vector.922" }
%"class.mojo::StructPtr.1212" = type { %"class.std::__1::unique_ptr.1213" }
%"class.std::__1::unique_ptr.1213" = type { %"class.std::__1::__compressed_pair.1214" }
%"class.std::__1::__compressed_pair.1214" = type { %"struct.std::__1::__compressed_pair_elem.1215" }
%"struct.std::__1::__compressed_pair_elem.1215" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1219" = type { %"class.WTF::HashTable.1220" }
%"class.WTF::HashTable.1220" = type <{ %"struct.WTF::KeyValuePair.1223"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1223" = type opaque
%"class.WTF::HashMap.1224" = type { %"class.WTF::HashTable.1225" }
%"class.WTF::HashTable.1225" = type <{ %"struct.WTF::KeyValuePair.1228"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1228" = type opaque
%"class.mojo::InlinedStructPtr.1229" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1230" = type { %"class.std::__1::unique_ptr.1231" }
%"class.std::__1::unique_ptr.1231" = type { %"class.std::__1::__compressed_pair.1232" }
%"class.std::__1::__compressed_pair.1232" = type { %"struct.std::__1::__compressed_pair_elem.1233" }
%"struct.std::__1::__compressed_pair_elem.1233" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.922", i8, i8, [6 x i8] }>
%"class.WTF::Vector.922" = type { %"class.WTF::VectorBuffer.923" }
%"class.WTF::VectorBuffer.923" = type { %"class.WTF::VectorBufferBase.924" }
%"class.WTF::VectorBufferBase.924" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1309" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1245", i32 }>
%"class.std::__1::unique_ptr.1245" = type { %"class.std::__1::__compressed_pair.1246" }
%"class.std::__1::__compressed_pair.1246" = type { %"struct.std::__1::__compressed_pair_elem.1247" }
%"struct.std::__1::__compressed_pair_elem.1247" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1248", %"class.absl::optional.973", %"class.absl::optional.1249", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1262", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1284", %"class.std::__1::map.1295", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1304", i8, %class.scoped_refptr.1254, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1305" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1248" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.973" = type { %"class.absl::optional_internal::optional_data.974" }
%"class.absl::optional_internal::optional_data.974" = type { %"class.absl::optional_internal::optional_data_base.975" }
%"class.absl::optional_internal::optional_data_base.975" = type { %"class.absl::optional_internal::optional_data_dtor_base.976" }
%"class.absl::optional_internal::optional_data_dtor_base.976" = type { i8, %union.anon.977 }
%union.anon.977 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1249" = type { %"class.absl::optional_internal::optional_data.1250" }
%"class.absl::optional_internal::optional_data.1250" = type { %"class.absl::optional_internal::optional_data_base.1251" }
%"class.absl::optional_internal::optional_data_base.1251" = type { %"class.absl::optional_internal::optional_data_dtor_base.1252" }
%"class.absl::optional_internal::optional_data_dtor_base.1252" = type { i8, %union.anon.1253 }
%union.anon.1253 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1254, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1255" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1255" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.589 }
%class.scoped_refptr.589 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1260 }
%class.scoped_refptr.1260 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1322", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1254, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1322" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1261 }
%class.scoped_refptr.1261 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1262" = type { %"class.std::__1::__compressed_pair.1263" }
%"class.std::__1::__compressed_pair.1263" = type { %"struct.std::__1::__compressed_pair_elem.1264" }
%"struct.std::__1::__compressed_pair_elem.1264" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1265", %class.scoped_refptr.1266 }
%"class.base::RepeatingCallback.1265" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1266 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1267", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1267" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1271", %"class.std::__1::unique_ptr.1277", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1283" }
%"class.std::__1::unique_ptr.1271" = type { %"class.std::__1::__compressed_pair.1272" }
%"class.std::__1::__compressed_pair.1272" = type { %"struct.std::__1::__compressed_pair_elem.1273" }
%"struct.std::__1::__compressed_pair_elem.1273" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1277" = type { %"class.std::__1::__compressed_pair.1278" }
%"class.std::__1::__compressed_pair.1278" = type { %"struct.std::__1::__compressed_pair_elem.1279" }
%"struct.std::__1::__compressed_pair_elem.1279" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1283" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1284" = type { %"class.std::__1::__tree.1285" }
%"class.std::__1::__tree.1285" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1286", %"class.std::__1::__compressed_pair.1290" }
%"class.std::__1::__compressed_pair.1286" = type { %"struct.std::__1::__compressed_pair_elem.852" }
%"class.std::__1::__compressed_pair.1290" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"class.std::__1::map.1295" = type { %"class.std::__1::__tree.1296" }
%"class.std::__1::__tree.1296" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1297", %"class.std::__1::__compressed_pair.1301" }
%"class.std::__1::__compressed_pair.1297" = type { %"struct.std::__1::__compressed_pair_elem.852" }
%"class.std::__1::__compressed_pair.1301" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"class.base::OnceCallback.1304" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1254 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1305" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1309" = type { %"class.std::__1::__compressed_pair.1310" }
%"class.std::__1::__compressed_pair.1310" = type { %"struct.std::__1::__compressed_pair_elem.1311" }
%"struct.std::__1::__compressed_pair_elem.1311" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.810", %"class.blink::Member.811", %"class.blink::Member.813", %"class.blink::Member.815", %class.scoped_refptr.390, %class.scoped_refptr.390, %"class.blink::Member.817", %"class.blink::Member.819", %"class.blink::Member.825", %"class.blink::Member.829", %"class.blink::Member.877", %"class.blink::HeapHashMap.879", %"class.blink::HeapHashSet.886", %"class.blink::HeapHashSet.886", %"class.blink::HeapHashMap.1065", %"class.blink::HeapVector.1072", %"class.blink::Member.1080", %"class.blink::HeapTaskRunnerTimer.1082", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1084", %"class.WTF::Vector.1091", %"class.blink::HeapHashSet.1097", %"class.blink::HeapHashSet.1097", %"class.std::__1::unique_ptr.1103", %"class.base::WeakPtr.871", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.1111", i8, i8, %"class.base::WeakPtrFactory.1113" }
%"class.blink::ThreadState::PrefinalizerRegistration.810" = type { i8 }
%"class.blink::Member.811" = type { %"class.blink::MemberBase.812" }
%"class.blink::MemberBase.812" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.813" = type { %"class.blink::MemberBase.814" }
%"class.blink::MemberBase.814" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.815" = type { %"class.blink::MemberBase.816" }
%"class.blink::MemberBase.816" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%"class.blink::Member.817" = type { %"class.blink::MemberBase.818" }
%"class.blink::MemberBase.818" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.819" = type { %"class.blink::MemberBase.820" }
%"class.blink::MemberBase.820" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.823" }
%"class.blink::Member.823" = type { %"class.blink::MemberBase.824" }
%"class.blink::MemberBase.824" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.825" = type { %"class.blink::MemberBase.826" }
%"class.blink::MemberBase.826" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.829" = type { %"class.blink::MemberBase.830" }
%"class.blink::MemberBase.830" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.833", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.835", %"class.WTF::HashSet.840", i8, [3 x i8], i32, %"class.blink::HeapHashMap.844", %"class.std::__1::map", %"class.std::__1::map.859", %"class.std::__1::unique_ptr.868", %"class.blink::Member.819", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.875", %"class.mojo::InlinedStructPtr", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.833" = type { %"class.blink::MemberBase.834" }
%"class.blink::MemberBase.834" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.835" = type { %"class.WTF::HashTable.836" }
%"class.WTF::HashTable.836" = type <{ %"struct.WTF::KeyValuePair.839"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.839" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.840" = type { %"class.WTF::HashTable.841" }
%"class.WTF::HashTable.841" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.844" = type { %"class.WTF::HashMap.847" }
%"class.WTF::HashMap.847" = type { %"class.WTF::HashTable.848" }
%"class.WTF::HashTable.848" = type <{ %"struct.WTF::KeyValuePair.850"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.850" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.851", %"class.std::__1::__compressed_pair.856" }
%"class.std::__1::__compressed_pair.851" = type { %"struct.std::__1::__compressed_pair_elem.852" }
%"class.std::__1::__compressed_pair.856" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"class.std::__1::map.859" = type { %"class.std::__1::__tree.860" }
%"class.std::__1::__tree.860" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.865" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.852" }
%"class.std::__1::__compressed_pair.865" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"class.std::__1::unique_ptr.868" = type { %"class.std::__1::__compressed_pair.869" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.870" }
%"struct.std::__1::__compressed_pair_elem.870" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.871", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.875" = type { %"class.blink::MemberBase.876" }
%"class.blink::MemberBase.876" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.877" = type { %"class.blink::MemberBase.878" }
%"class.blink::MemberBase.878" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.879" = type { %"class.WTF::HashMap.882" }
%"class.WTF::HashMap.882" = type { %"class.WTF::HashTable.883" }
%"class.WTF::HashTable.883" = type <{ %"struct.WTF::KeyValuePair.885"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.885" = type opaque
%"class.blink::HeapHashSet.886" = type { %"class.WTF::HashSet.889" }
%"class.WTF::HashSet.889" = type { %"class.WTF::HashTable.890" }
%"class.WTF::HashTable.890" = type <{ %"class.blink::WeakMember.892"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.892" = type { %"class.blink::MemberBase.893" }
%"class.blink::MemberBase.893" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.896", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.927", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.1029", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.1045", %"class.blink::ResourceResponse", %class.scoped_refptr.1047, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.896" = type { %"class.absl::optional_internal::optional_data.897" }
%"class.absl::optional_internal::optional_data.897" = type { %"class.absl::optional_internal::optional_data_base.898" }
%"class.absl::optional_internal::optional_data_base.898" = type { %"class.absl::optional_internal::optional_data_dtor_base.899" }
%"class.absl::optional_internal::optional_data_dtor_base.899" = type { i8, %union.anon.900 }
%union.anon.900 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.901", i8, %"class.absl::optional.912", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.901" = type { %"class.absl::optional_internal::optional_data.902" }
%"class.absl::optional_internal::optional_data.902" = type { %"class.absl::optional_internal::optional_data_base.903" }
%"class.absl::optional_internal::optional_data_base.903" = type { %"class.absl::optional_internal::optional_data_dtor_base.904" }
%"class.absl::optional_internal::optional_data_dtor_base.904" = type { i8, [7 x i8], %union.anon.905 }
%union.anon.905 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.912" = type { %"class.absl::optional_internal::optional_data.913" }
%"class.absl::optional_internal::optional_data.913" = type { %"class.absl::optional_internal::optional_data_base.914" }
%"class.absl::optional_internal::optional_data_base.914" = type { %"class.absl::optional_internal::optional_data_dtor_base.915" }
%"class.absl::optional_internal::optional_data_dtor_base.915" = type { i8, %union.anon.916 }
%union.anon.916 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.917", %"class.WTF::Vector.922" }
%"class.WTF::Vector.917" = type { %"class.WTF::VectorBuffer.918" }
%"class.WTF::VectorBuffer.918" = type { %"class.WTF::VectorBufferBase.919" }
%"class.WTF::VectorBufferBase.919" = type { i32*, i32, i32 }
%"class.WTF::Vector.927" = type { %"class.WTF::VectorBuffer.928" }
%"class.WTF::VectorBuffer.928" = type { %"class.WTF::VectorBufferBase.929" }
%"class.WTF::VectorBufferBase.929" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1025" }
%"class.WTF::HashMap.1025" = type { %"class.WTF::HashTable.1026" }
%"class.WTF::HashTable.1026" = type <{ %"struct.WTF::KeyValuePair.1028"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1028" = type <{ %"class.blink::WeakMember.1354", i32, [4 x i8] }>
%"class.blink::WeakMember.1354" = type { %"class.blink::MemberBase.1355" }
%"class.blink::MemberBase.1355" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type opaque
%"class.blink::HeapHashSet.1029" = type { %"class.WTF::HashSet.1032" }
%"class.WTF::HashSet.1032" = type { %"class.WTF::HashTable.1033" }
%"class.WTF::HashTable.1033" = type <{ %"class.blink::WeakMember.1035"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1035" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.1036", i8, i8, %class.scoped_refptr.571, %class.scoped_refptr.1041, %class.scoped_refptr.1043 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.1036" = type { %"class.WTF::HashTable.1037" }
%"class.WTF::HashTable.1037" = type <{ %"struct.std::__1::pair.1040"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.1040" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.571 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.572", i32, i32, %"class.blink::Persistent.574" }
%"class.WTF::RefCounted.572" = type { %"class.base::RefCounted.573" }
%"class.base::RefCounted.573" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.574" = type { %"class.blink::PersistentBase.575" }
%"class.blink::PersistentBase.575" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.381" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.578" }
%"class.blink::HeapHashMap.578" = type { %"class.WTF::HashMap.581" }
%"class.WTF::HashMap.581" = type { %"class.WTF::HashTable.582" }
%"class.WTF::HashTable.582" = type <{ %"struct.WTF::KeyValuePair.584"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.584" = type { %"class.blink::WeakMember.585", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.585" = type { %"class.blink::MemberBase.586" }
%"class.blink::MemberBase.586" = type { %"class.blink::ScriptWrappable"* }
%class.scoped_refptr.1041 = type { %"class.base::RefCountedData.1042"* }
%"class.base::RefCountedData.1042" = type opaque
%class.scoped_refptr.1043 = type { %"class.base::RefCountedData.1044"* }
%"class.base::RefCountedData.1044" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.989" }
%"class.base::time_internal::TimeBase.989" = type { i64 }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.935, %class.scoped_refptr.935, %class.scoped_refptr.935, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.941, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.953", %"class.absl::optional.958", %"class.absl::optional.968", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.978", %"class.absl::optional.968", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.968", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.978", %"class.absl::optional.983", i8, %class.scoped_refptr.988 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.936" }
%"class.WTF::HashMap.936" = type { %"class.WTF::HashTable.937" }
%"class.WTF::HashTable.937" = type <{ %"struct.WTF::KeyValuePair.940"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.940" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.941 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.942", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.951, i8, %"class.url::Origin" }
%"class.base::RefCounted.942" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector.943" }
%"class.std::__1::vector.943" = type { %"class.std::__1::__vector_base.944" }
%"class.std::__1::__vector_base.944" = type { %"class.std::__1::unique_ptr.945"*, %"class.std::__1::unique_ptr.945"*, %"class.std::__1::__compressed_pair.946" }
%"class.std::__1::unique_ptr.945" = type { %"class.std::__1::__compressed_pair.1341" }
%"class.std::__1::__compressed_pair.1341" = type { %"struct.std::__1::__compressed_pair_elem.1342" }
%"struct.std::__1::__compressed_pair_elem.1342" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.946" = type { %"struct.std::__1::__compressed_pair_elem.947" }
%"struct.std::__1::__compressed_pair_elem.947" = type { %"class.std::__1::unique_ptr.945"* }
%class.scoped_refptr.951 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.952", [4 x i8] }>
%"class.base::RefCountedThreadSafe.952" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.953" = type { %"class.absl::optional_internal::optional_data.954" }
%"class.absl::optional_internal::optional_data.954" = type { %"class.absl::optional_internal::optional_data_base.955" }
%"class.absl::optional_internal::optional_data_base.955" = type { %"class.absl::optional_internal::optional_data_dtor_base.956" }
%"class.absl::optional_internal::optional_data_dtor_base.956" = type { i8, %union.anon.957 }
%union.anon.957 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.958" = type { %"class.absl::optional_internal::optional_data.959" }
%"class.absl::optional_internal::optional_data.959" = type { %"class.absl::optional_internal::optional_data_base.960" }
%"class.absl::optional_internal::optional_data_base.960" = type { %"class.absl::optional_internal::optional_data_dtor_base.961" }
%"class.absl::optional_internal::optional_data_dtor_base.961" = type { i8, %union.anon.962 }
%union.anon.962 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.963", %"class.WTF::Vector.922", %"class.WTF::String" }
%"class.WTF::Vector.963" = type { %"class.WTF::VectorBuffer.964" }
%"class.WTF::VectorBuffer.964" = type { %"class.WTF::VectorBufferBase.965" }
%"class.WTF::VectorBufferBase.965" = type { %class.scoped_refptr.935*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.973", %"class.absl::optional.973" }
%"class.absl::optional.968" = type { %"class.absl::optional_internal::optional_data.969" }
%"class.absl::optional_internal::optional_data.969" = type { %"class.absl::optional_internal::optional_data_base.970" }
%"class.absl::optional_internal::optional_data_base.970" = type { %"class.absl::optional_internal::optional_data_dtor_base.971" }
%"class.absl::optional_internal::optional_data_dtor_base.971" = type { i8, %union.anon.972 }
%union.anon.972 = type { %"class.WTF::String" }
%"class.absl::optional.978" = type { %"class.absl::optional_internal::optional_data.979" }
%"class.absl::optional_internal::optional_data.979" = type { %"class.absl::optional_internal::optional_data_base.980" }
%"class.absl::optional_internal::optional_data_base.980" = type { %"class.absl::optional_internal::optional_data_dtor_base.981" }
%"class.absl::optional_internal::optional_data_dtor_base.981" = type { i8, %union.anon.982 }
%union.anon.982 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.983" = type { %"class.absl::optional_internal::optional_data.984" }
%"class.absl::optional_internal::optional_data.984" = type { %"class.absl::optional_internal::optional_data_base.985" }
%"class.absl::optional_internal::optional_data_base.985" = type { %"class.absl::optional_internal::optional_data_dtor_base.986" }
%"class.absl::optional_internal::optional_data_dtor_base.986" = type { i8, %union.anon.987 }
%union.anon.987 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.988 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.1346", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.1346" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1347" }
%"class.std::__1::vector.1347" = type { %"class.std::__1::__vector_base.1348" }
%"class.std::__1::__vector_base.1348" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1349" }
%"class.std::__1::__compressed_pair.1349" = type { %"struct.std::__1::__compressed_pair_elem.1350" }
%"struct.std::__1::__compressed_pair_elem.1350" = type { i32* }
%"class.blink::Member.1045" = type { %"class.blink::MemberBase.1046" }
%"class.blink::MemberBase.1046" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.990", %class.scoped_refptr.1004, %class.scoped_refptr.1005, %"struct.blink::CacheControlHeader", %"class.absl::optional.973", %"class.absl::optional.1006", %"class.absl::optional.1006", %"class.absl::optional.1006", i64, %"class.blink::KURL", %"class.WTF::Vector.1011", %"class.WTF::String", %"class.WTF::Vector.922", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.978", %"class.WTF::Vector.922", %"class.blink::KURL", %"class.absl::optional.1016" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.990" = type { %"class.absl::optional_internal::optional_data.991" }
%"class.absl::optional_internal::optional_data.991" = type { %"class.absl::optional_internal::optional_data_base.992" }
%"class.absl::optional_internal::optional_data_base.992" = type { %"class.absl::optional_internal::optional_data_dtor_base.993" }
%"class.absl::optional_internal::optional_data_dtor_base.993" = type { i8, %union.anon.994 }
%union.anon.994 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.922", %"class.WTF::String", i64, i64, %"class.WTF::Vector.995", %"class.WTF::Vector.999" }
%"class.WTF::Vector.995" = type { %"class.WTF::VectorBuffer.996" }
%"class.WTF::VectorBuffer.996" = type { %"class.WTF::VectorBufferBase.39" }
%"class.WTF::Vector.999" = type { %"class.WTF::VectorBuffer.1000" }
%"class.WTF::VectorBuffer.1000" = type { %"class.WTF::VectorBufferBase.1001" }
%"class.WTF::VectorBufferBase.1001" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1004 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1005 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.1006" = type { %"class.absl::optional_internal::optional_data.1007" }
%"class.absl::optional_internal::optional_data.1007" = type { %"class.absl::optional_internal::optional_data_base.1008" }
%"class.absl::optional_internal::optional_data_base.1008" = type { %"class.absl::optional_internal::optional_data_dtor_base.1009" }
%"class.absl::optional_internal::optional_data_dtor_base.1009" = type { i8, %union.anon.1010 }
%union.anon.1010 = type { %"class.base::Time" }
%"class.WTF::Vector.1011" = type { %"class.WTF::VectorBuffer.1012" }
%"class.WTF::VectorBuffer.1012" = type { %"class.WTF::VectorBufferBase.1013" }
%"class.WTF::VectorBufferBase.1013" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.1016" = type { %"class.absl::optional_internal::optional_data.1017" }
%"class.absl::optional_internal::optional_data.1017" = type { %"class.absl::optional_internal::optional_data_base.1018" }
%"class.absl::optional_internal::optional_data_base.1018" = type { %"class.absl::optional_internal::optional_data_dtor_base.1019" }
%"class.absl::optional_internal::optional_data_dtor_base.1019" = type { i8, %union.anon.1020 }
%union.anon.1020 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.1047 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1048", i64, %"class.WTF::Vector.113", %"class.WTF::Vector.1050" }
%"class.WTF::RefCounted.1048" = type { %"class.base::RefCounted.1049" }
%"class.base::RefCounted.1049" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1050" = type { %"class.WTF::VectorBuffer.1051" }
%"class.WTF::VectorBuffer.1051" = type { %"class.WTF::VectorBufferBase.1052" }
%"class.WTF::VectorBufferBase.1052" = type { %"class.std::__1::unique_ptr.1053"*, i32, i32 }
%"class.std::__1::unique_ptr.1053" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.1056" }
%"class.std::__1::__tree.1056" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1057", %"class.std::__1::__compressed_pair.1061" }
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.852" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"class.blink::HeapHashMap.1065" = type { %"class.WTF::HashMap.1068" }
%"class.WTF::HashMap.1068" = type { %"class.WTF::HashTable.1069" }
%"class.WTF::HashTable.1069" = type <{ %"struct.WTF::KeyValuePair.1071"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1071" = type opaque
%"class.blink::HeapVector.1072" = type { %"class.WTF::Vector.1075" }
%"class.WTF::Vector.1075" = type { %"class.WTF::VectorBuffer.1076" }
%"class.WTF::VectorBuffer.1076" = type { %"class.WTF::VectorBufferBase.1077" }
%"class.WTF::VectorBufferBase.1077" = type { %"class.blink::Member.1078"*, i32, i32 }
%"class.blink::Member.1078" = type { %"class.blink::MemberBase.893" }
%"class.blink::Member.1080" = type { %"class.blink::MemberBase.1081" }
%"class.blink::MemberBase.1081" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer.1082" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1083", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.390, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1083" = type { %"class.blink::MemberBase.550" }
%"class.blink::HeapHashMap.1084" = type { %"class.WTF::HashMap.1087" }
%"class.WTF::HashMap.1087" = type { %"class.WTF::HashTable.1088" }
%"class.WTF::HashTable.1088" = type <{ %"struct.WTF::KeyValuePair.1090"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1090" = type opaque
%"class.WTF::Vector.1091" = type { %"class.WTF::VectorBuffer.1092" }
%"class.WTF::VectorBuffer.1092" = type { %"class.WTF::VectorBufferBase.1093" }
%"class.WTF::VectorBufferBase.1093" = type { %class.scoped_refptr.1094*, i32, i32 }
%class.scoped_refptr.1094 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.1097" = type { %"class.WTF::HashSet.1100" }
%"class.WTF::HashSet.1100" = type { %"class.WTF::HashTable.1101" }
%"class.WTF::HashTable.1101" = type <{ %"class.blink::Member.1045"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1103" = type { %"class.std::__1::__compressed_pair.1104" }
%"class.std::__1::__compressed_pair.1104" = type { %"struct.std::__1::__compressed_pair_elem.1105" }
%"struct.std::__1::__compressed_pair_elem.1105" = type { %"class.WTF::HashSet.371"* }
%"class.base::WeakPtr.871" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1109" }
%"class.blink::Member.1109" = type { %"class.blink::MemberBase.1110" }
%"class.blink::MemberBase.1110" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1113" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.551" = type { %"class.blink::MemberBase.552" }
%"class.blink::MemberBase.552" = type { %"class.blink::DocumentParser"* }
%"class.blink::Member.553" = type { %"class.blink::MemberBase.554" }
%"class.blink::MemberBase.554" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.555" = type { %"class.blink::MemberBase.556" }
%"class.blink::MemberBase.556" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.557" = type { %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.563" = type { %"class.blink::MemberBase.564" }
%"class.blink::MemberBase.564" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.565" = type { %"class.blink::MemberBase.566" }
%"class.blink::MemberBase.566" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.567 }
%class.scoped_refptr.567 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.568" = type { %"class.WTF::VectorBuffer.569" }
%"class.WTF::VectorBuffer.569" = type { %"class.WTF::VectorBufferBase.570" }
%"class.WTF::VectorBufferBase.570" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.571 }
%"class.blink::Member.591" = type { %"class.blink::MemberBase.592" }
%"class.blink::MemberBase.592" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.593" }
%"class.blink::HeapHashMap.593" = type { %"class.WTF::HashMap.596" }
%"class.WTF::HashMap.596" = type { %"class.WTF::HashTable.597" }
%"class.WTF::HashTable.597" = type <{ %"struct.WTF::KeyValuePair.599"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.599" = type opaque
%"class.blink::Member.600" = type { %"class.blink::MemberBase.601" }
%"class.blink::MemberBase.601" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.602" = type { %"class.WTF::HashSet.605" }
%"class.WTF::HashSet.605" = type { %"class.WTF::HashTable.606" }
%"class.WTF::HashTable.606" = type <{ %"class.blink::WeakMember.608"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.608" = type opaque
%"class.blink::HeapHashSet.609" = type { %"class.WTF::HashSet.612" }
%"class.WTF::HashSet.612" = type { %"class.WTF::HashTable.613" }
%"class.WTF::HashTable.613" = type <{ %"class.blink::WeakMember.615"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.615" = type opaque
%"class.blink::Member.616" = type { %"class.blink::MemberBase.617" }
%"class.blink::MemberBase.617" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.618" = type { %"class.blink::MemberBase.619" }
%"class.blink::MemberBase.619" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.620" = type { %"class.blink::MemberBase.621" }
%"class.blink::MemberBase.621" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.4", %"class.blink::HeapVector.488" }
%"class.blink::Member.622" = type { %"class.blink::MemberBase.623" }
%"class.blink::MemberBase.623" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.624" = type { %"class.blink::MemberBase.625" }
%"class.blink::MemberBase.625" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.626" = type { %"class.WTF::HashMap.629" }
%"class.WTF::HashMap.629" = type { %"class.WTF::HashTable.630" }
%"class.WTF::HashTable.630" = type <{ %"struct.WTF::KeyValuePair.632"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.632" = type opaque
%"class.WTF::Vector.633" = type { %"class.WTF::VectorBuffer.634" }
%"class.WTF::VectorBuffer.634" = type { %"class.WTF::VectorBufferBase.635" }
%"class.WTF::VectorBufferBase.635" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.638" = type { %"class.blink::MemberBase.639" }
%"class.blink::MemberBase.639" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.640" = type { %"class.blink::MemberBase.641" }
%"class.blink::MemberBase.641" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.642" = type { %"class.blink::MemberBase.643" }
%"class.blink::MemberBase.643" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.644" = type { %"class.WTF::Vector.647" }
%"class.WTF::Vector.647" = type { %"class.WTF::VectorBuffer.648" }
%"class.WTF::VectorBuffer.648" = type { %"class.WTF::VectorBufferBase.649" }
%"class.WTF::VectorBufferBase.649" = type { %"class.blink::Member.650"*, i32, i32 }
%"class.blink::Member.650" = type opaque
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.658" = type { %"class.WTF::HashSet.661" }
%"class.WTF::HashSet.661" = type { %"class.WTF::HashTable.662" }
%"class.WTF::HashTable.662" = type <{ %"class.blink::WeakMember.664"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.664" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.665", i32, [4 x i8] }>
%"class.WTF::Vector.665" = type { %"class.WTF::VectorBuffer.666" }
%"class.WTF::VectorBuffer.666" = type { %"class.WTF::VectorBufferBase.667" }
%"class.WTF::VectorBufferBase.667" = type { %"struct.std::__1::pair.668"*, i32, i32 }
%"struct.std::__1::pair.668" = type opaque
%"class.blink::Member.671" = type { %"class.blink::MemberBase.672" }
%"class.blink::MemberBase.672" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.673" = type { %"class.WTF::VectorBuffer.674" }
%"class.WTF::VectorBuffer.674" = type { %"class.WTF::VectorBufferBase.675" }
%"class.WTF::VectorBufferBase.675" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.678" = type { %"class.std::__1::__compressed_pair.679" }
%"class.std::__1::__compressed_pair.679" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"struct.std::__1::__compressed_pair_elem.680" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.684" = type { %"class.WTF::Vector.687" }
%"class.WTF::Vector.687" = type { %"class.WTF::VectorBuffer.688" }
%"class.WTF::VectorBuffer.688" = type { %"class.WTF::VectorBufferBase.689" }
%"class.WTF::VectorBufferBase.689" = type { %"class.blink::Member.690"*, i32, i32 }
%"class.blink::Member.690" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.22" }
%"class.blink::Member.692" = type { %"class.blink::MemberBase.693" }
%"class.blink::MemberBase.693" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.694" = type { %"class.blink::MemberBase.695" }
%"class.blink::MemberBase.695" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.696" = type { %"class.blink::MemberBase.697" }
%"class.blink::MemberBase.697" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.698" = type { %"class.blink::MemberBase.699" }
%"class.blink::MemberBase.699" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.700" = type { %"class.blink::MemberBase.701" }
%"class.blink::MemberBase.701" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.702" = type { %"class.WTF::HashTable.703" }
%"class.WTF::HashTable.703" = type <{ %"struct.WTF::KeyValuePair.706"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.706" = type opaque
%"class.blink::Member.707" = type { %"class.blink::MemberBase.708" }
%"class.blink::MemberBase.708" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.709" = type { %"class.blink::MemberBase.710" }
%"class.blink::MemberBase.710" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.711" = type { %"class.blink::MemberBase.712" }
%"class.blink::MemberBase.712" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.713" = type { %"class.blink::MemberBase.714" }
%"class.blink::MemberBase.714" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.590", { i64, i64 } }
%"class.blink::WeakMember.590" = type { %"class.blink::MemberBase.23" }
%"class.blink::HeapHashSet.715" = type { %"class.WTF::HashSet.718" }
%"class.WTF::HashSet.718" = type { %"class.WTF::HashTable.719" }
%"class.WTF::HashTable.719" = type <{ %"class.blink::Member.721"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.721" = type opaque
%"class.blink::Member.722" = type { %"class.blink::MemberBase.723" }
%"class.blink::MemberBase.723" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.724" = type { %"class.blink::MemberBase.725" }
%"class.blink::MemberBase.725" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.726" = type { %"class.blink::MemberBase.727" }
%"class.blink::MemberBase.727" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.728" = type { %"class.blink::MemberBase.729" }
%"class.blink::MemberBase.729" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.730" = type { %"class.blink::MemberBase.731" }
%"class.blink::MemberBase.731" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.732" = type { %"class.std::__1::__compressed_pair.733" }
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"struct.std::__1::__compressed_pair_elem.734" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.744" = type { %"class.blink::MemberBase.745" }
%"class.blink::MemberBase.745" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.746" = type { %"class.blink::MemberBase.747" }
%"class.blink::MemberBase.747" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.748" = type { %"class.blink::MemberBase.749" }
%"class.blink::MemberBase.749" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.750" = type { %"class.blink::MemberBase.751" }
%"class.blink::MemberBase.751" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.WTF::Vector.752" = type { %"class.WTF::VectorBuffer.753" }
%"class.WTF::VectorBuffer.753" = type { %"class.WTF::VectorBufferBase.754" }
%"class.WTF::VectorBufferBase.754" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.757" = type { %"class.WTF::HashMap.760" }
%"class.WTF::HashMap.760" = type { %"class.WTF::HashTable.761" }
%"class.WTF::HashTable.761" = type <{ %"struct.WTF::KeyValuePair.763"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.763" = type opaque
%"class.blink::Member.764" = type { %"class.blink::MemberBase.765" }
%"class.blink::MemberBase.765" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.772" = type { %"class.blink::MemberBase.773" }
%"class.blink::MemberBase.773" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.774" = type { %"class.blink::MemberBase.775" }
%"class.blink::MemberBase.775" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.776" = type { %"class.WTF::HashMap.779" }
%"class.WTF::HashMap.779" = type { %"class.WTF::HashTable.780" }
%"class.WTF::HashTable.780" = type <{ %"struct.WTF::KeyValuePair.782"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.782" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.783" }
%"class.blink::HeapHashSet.783" = type { %"class.WTF::HashSet.786" }
%"class.WTF::HashSet.786" = type { %"class.WTF::HashTable.787" }
%"class.WTF::HashTable.787" = type <{ %"class.blink::WeakMember.789"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.789" = type opaque
%"class.blink::Member.790" = type { %"class.blink::MemberBase.791" }
%"class.blink::MemberBase.791" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.792" = type { %"class.blink::MemberBase.793" }
%"class.blink::MemberBase.793" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.22", %"class.blink::HeapHashSet.799", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.806", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.799" = type { %"class.WTF::HashSet.802" }
%"class.WTF::HashSet.802" = type { %"class.WTF::HashTable.803" }
%"class.WTF::HashTable.803" = type <{ %"class.blink::Member.805"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.805" = type opaque
%"class.blink::HeapTaskRunnerTimer.806" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.807", { i64, i64 } }
%"class.blink::WeakMember.807" = type { %"class.blink::MemberBase.793" }
%"class.blink::WeakMember.794" = type { %"class.blink::MemberBase.3" }
%"class.blink::Member.795" = type { %"class.blink::MemberBase.796" }
%"class.blink::MemberBase.796" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::AtomicHTMLToken" = type { i32, %"class.WTF::AtomicString", %"class.WTF::String", %"class.std::__1::unique_ptr.143", i8, i8, %"class.WTF::Vector" }
%"class.absl::optional.1323" = type { %"class.absl::optional_internal::optional_data.1324" }
%"class.absl::optional_internal::optional_data.1324" = type { %"class.absl::optional_internal::optional_data_base.1325" }
%"class.absl::optional_internal::optional_data_base.1325" = type { %"class.absl::optional_internal::optional_data_dtor_base.1326" }
%"class.absl::optional_internal::optional_data_dtor_base.1326" = type { i8, %union.anon.1327 }
%union.anon.1327 = type { %"class.blink::RuntimeCallTimerScope" }
%"class.blink::RuntimeCallTimerScope" = type { %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallTimer" }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::HTMLTreeBuilder::CharacterTokenBuffer" = type { %class.scoped_refptr, i32, i32 }
%"class.blink::HTMLFormControlElement" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8, [3 x i8] }>
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.1333", %"class.blink::Member.24", %"class.blink::Member.1335", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.1333" = type { %"class.blink::MemberBase.1334" }
%"class.blink::MemberBase.1334" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.1335" = type { %"class.blink::MemberBase.1336" }
%"class.blink::MemberBase.1336" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.1328" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.1328" = type { %"class.v8::TracedReference.1329" }
%"class.v8::TracedReference.1329" = type { %"class.v8::BasicTracedReference.1330" }
%"class.v8::BasicTracedReference.1330" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.WTF::StringAppend.1990" = type { %"class.WTF::StringAppend.1991", i8* }
%"class.WTF::StringAppend.1991" = type { i8*, %"class.WTF::String" }
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.1387", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.1399", %"class.WTF::Vector.1401" }
%"class.std::__1::unique_ptr.1387" = type { %"class.std::__1::__compressed_pair.1388" }
%"class.std::__1::__compressed_pair.1388" = type { %"struct.std::__1::__compressed_pair_elem.1389" }
%"struct.std::__1::__compressed_pair_elem.1389" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.1390", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1390" = type { %"class.std::__1::__compressed_pair.1391" }
%"class.std::__1::__compressed_pair.1391" = type { %"struct.std::__1::__compressed_pair_elem.1392" }
%"struct.std::__1::__compressed_pair_elem.1392" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.1399" = type { %"class.blink::MemberBase.1400" }
%"class.blink::MemberBase.1400" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1444", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1452", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1481", %"class.blink::FrameLoader", %"class.blink::Member.1498", %"class.blink::Member.64", %"class.blink::Member.1500", %"class.blink::Member.1502", %"class.blink::Member.1504", %"class.blink::Member.1506", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1508", %class.scoped_refptr.1510, %"class.blink::Member.1511", %"class.blink::Member.1513", %"class.blink::Member.1515", %"class.blink::Member.1517", %"class.blink::Member.1519", %"class.blink::Member.1521", %"class.blink::Member.1523", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1525", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1629", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1635", %"class.std::__1::unique_ptr.1636", %"class.absl::optional.978", i32, [4 x i8], %"class.std::__1::unique_ptr.1642", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1660", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1679", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1693", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1701", %"class.blink::Member.1703", %"class.blink::Member.1705", %"class.blink::Member.1707", %"class.mojo::StructPtr.1710", %"class.blink::Member.1718", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1720", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1410", %"class.blink::Member.1412", %"class.blink::Member.1414", i8, i32, i8, i32, %"class.blink::Member.1416", %"class.blink::Member.1418", %"class.blink::FrameLifecycle", %"class.blink::Member.1408", %"class.blink::Member.1408", %"class.blink::Member.1408", %"class.blink::Member.1408", %"class.blink::Member.1408", %"class.blink::Member.1408", %"class.blink::Member.1420", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1430", i8, %"class.base::UnguessableToken", %"class.absl::optional.1432", %"class.absl::optional.978", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1408", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1410" = type { %"class.blink::MemberBase.1411" }
%"class.blink::MemberBase.1411" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1412" = type { %"class.blink::MemberBase.1413" }
%"class.blink::MemberBase.1413" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1414" = type { %"class.blink::MemberBase.1415" }
%"class.blink::MemberBase.1415" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type opaque
%"class.blink::Member.1416" = type { %"class.blink::MemberBase.1417" }
%"class.blink::MemberBase.1417" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.1418" = type { %"class.blink::MemberBase.1419" }
%"class.blink::MemberBase.1419" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1408" = type { %"class.blink::MemberBase.1409" }
%"class.blink::MemberBase.1409" = type { %"class.blink::Frame"* }
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1400" }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1408", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.1421" }
%"class.base::internal::flat_tree.1421" = type { %"class.std::__1::vector.1422" }
%"class.std::__1::vector.1422" = type { %"class.std::__1::__vector_base.1423" }
%"class.std::__1::__vector_base.1423" = type { %"struct.std::__1::pair.1424"*, %"struct.std::__1::pair.1424"*, %"class.std::__1::__compressed_pair.1425" }
%"struct.std::__1::pair.1424" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1425" = type { %"struct.std::__1::__compressed_pair_elem.1426" }
%"struct.std::__1::__compressed_pair_elem.1426" = type { %"struct.std::__1::pair.1424"* }
%"class.blink::Member.1430" = type { %"class.blink::MemberBase.1431" }
%"class.blink::MemberBase.1431" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1432" = type { %"class.absl::optional_internal::optional_data.1433" }
%"class.absl::optional_internal::optional_data.1433" = type { %"class.absl::optional_internal::optional_data_base.1434" }
%"class.absl::optional_internal::optional_data_base.1434" = type { %"class.absl::optional_internal::optional_data_dtor_base.1435" }
%"class.absl::optional_internal::optional_data_dtor_base.1435" = type { i8, %union.anon.1436 }
%union.anon.1436 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1437" }
%"class.blink::HeapHashSet.1437" = type { %"class.WTF::HashSet.1440" }
%"class.WTF::HashSet.1440" = type { %"class.WTF::HashTable.1441" }
%"class.WTF::HashTable.1441" = type <{ %"class.blink::WeakMember.1443"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1443" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1444" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1445" }
%"class.blink::HeapHashMap.1445" = type { %"class.WTF::HashMap.1448" }
%"class.WTF::HashMap.1448" = type { %"class.WTF::HashTable.1449" }
%"class.WTF::HashTable.1449" = type <{ %"struct.WTF::KeyValuePair.1451"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1451" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1452" = type { %"class.std::__1::__compressed_pair.1453" }
%"class.std::__1::__compressed_pair.1453" = type { %"struct.std::__1::__compressed_pair_elem.1454" }
%"struct.std::__1::__compressed_pair_elem.1454" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1455", %"class.base::WeakPtrFactory.1460" }
%"class.WTF::HashMap.1455" = type { %"class.WTF::HashTable.1456" }
%"class.WTF::HashTable.1456" = type <{ %"struct.WTF::KeyValuePair.1459"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1459" = type opaque
%"class.base::WeakPtrFactory.1460" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1464" }
%"class.blink::Member.1464" = type { %"class.blink::MemberBase.1465" }
%"class.blink::MemberBase.1465" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1468" }
%"class.blink::WeakMember.1468" = type { %"class.blink::MemberBase.1469" }
%"class.blink::MemberBase.1469" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.1470", i64, %"class.std::__1::map.1471", i8*, i64, %"class.base::WeakPtrFactory.1480" }
%"class.base::RepeatingCallback.1470" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1471" = type { %"class.std::__1::__tree.1472" }
%"class.std::__1::__tree.1472" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1473", %"class.std::__1::__compressed_pair.1477" }
%"class.std::__1::__compressed_pair.1473" = type { %"struct.std::__1::__compressed_pair_elem.852" }
%"class.std::__1::__compressed_pair.1477" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"class.base::WeakPtrFactory.1480" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1481" = type { %"class.WTF::HashSet.1484" }
%"class.WTF::HashSet.1484" = type { %"class.WTF::HashTable.1485" }
%"class.WTF::HashTable.1485" = type <{ %"class.blink::WeakMember.1487"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1487" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1420", %"class.blink::Member.1488", %"class.blink::Member.1490", %"class.std::__1::unique_ptr.1492", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.371" }
%"class.blink::Member.1488" = type { %"class.blink::MemberBase.1489" }
%"class.blink::MemberBase.1489" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1490" = type { %"class.blink::MemberBase.1491" }
%"class.blink::MemberBase.1491" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1492" = type { %"class.std::__1::__compressed_pair.1493" }
%"class.std::__1::__compressed_pair.1493" = type { %"struct.std::__1::__compressed_pair_elem.1494" }
%"struct.std::__1::__compressed_pair_elem.1494" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1727", %"class.blink::Member.1420", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1732", i8, i32, %"class.blink::Color", %"class.absl::optional.1734", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1739", %"class.blink::Member.1741", %"class.blink::Member.1741", %"class.std::__1::unique_ptr.1744", i32, [4 x i8], %"class.WTF::HashSet.1747", %"class.blink::Member.1754", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1756", %"class.blink::HeapHashSet.1763", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1771", i8, %"class.blink::Member.1777", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1789", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1803", i8, %"class.std::__1::unique_ptr.1809", %"class.std::__1::unique_ptr.1925", %"class.WTF::Vector.1931", i32, %class.scoped_refptr.1936, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1937", %"class.blink::Member.1939", %"class.blink::Member.1941", %"class.blink::HeapHashSet.1943", %"class.blink::HeapHashSet.1950", %"class.std::__1::unique_ptr.1957", %"class.std::__1::unique_ptr.1963", %"class.WTF::Vector.538" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1727" = type { %"class.WTF::HashTable.1728" }
%"class.WTF::HashTable.1728" = type <{ %class.scoped_refptr.1731*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1731 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1732" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1733", { i64, i64 } }
%"class.blink::WeakMember.1733" = type { %"class.blink::MemberBase.1499" }
%"class.absl::optional.1734" = type { %"class.absl::optional_internal::optional_data.1735" }
%"class.absl::optional_internal::optional_data.1735" = type { %"class.absl::optional_internal::optional_data_base.1736" }
%"class.absl::optional_internal::optional_data_base.1736" = type { %"class.absl::optional_internal::optional_data_dtor_base.1737" }
%"class.absl::optional_internal::optional_data_dtor_base.1737" = type { i8, %union.anon.1738 }
%union.anon.1738 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1739" = type { %"class.blink::MemberBase.1740" }
%"class.blink::MemberBase.1740" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1741" = type { %"class.blink::MemberBase.1742" }
%"class.blink::MemberBase.1742" = type { %"class.blink::HeapHashSet.1743"* }
%"class.blink::HeapHashSet.1743" = type opaque
%"class.std::__1::unique_ptr.1744" = type { %"class.std::__1::__compressed_pair.1745" }
%"class.std::__1::__compressed_pair.1745" = type { %"struct.std::__1::__compressed_pair_elem.1746" }
%"struct.std::__1::__compressed_pair_elem.1746" = type { %"class.WTF::HashSet.1747"* }
%"class.WTF::HashSet.1747" = type { %"class.WTF::HashTable.1748" }
%"class.WTF::HashTable.1748" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1754" = type { %"class.blink::MemberBase.1755" }
%"class.blink::MemberBase.1755" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1756" = type { %"class.WTF::HashSet.1759" }
%"class.WTF::HashSet.1759" = type { %"class.WTF::HashTable.1760" }
%"class.WTF::HashTable.1760" = type <{ %"class.blink::Member.1762"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1762" = type opaque
%"class.blink::HeapHashSet.1763" = type { %"class.WTF::HashSet.1766" }
%"class.WTF::HashSet.1766" = type { %"class.WTF::HashTable.1767" }
%"class.WTF::HashTable.1767" = type <{ %"class.blink::Member.1769"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1769" = type { %"class.blink::MemberBase.1770" }
%"class.blink::MemberBase.1770" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1771" = type { %"class.std::__1::__compressed_pair.1772" }
%"class.std::__1::__compressed_pair.1772" = type { %"struct.std::__1::__compressed_pair_elem.1773" }
%"struct.std::__1::__compressed_pair_elem.1773" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1777" = type { %"class.blink::MemberBase.1778" }
%"class.blink::MemberBase.1778" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1781", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1781" = type { %"class.WTF::HashTable.1782" }
%"class.WTF::HashTable.1782" = type <{ %"struct.WTF::KeyValuePair.1784"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1784" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1785", i32, i32 }
%"class.WTF::Vector.1785" = type { %"class.WTF::VectorBuffer.1786" }
%"class.WTF::VectorBuffer.1786" = type { %"class.WTF::VectorBufferBase.1787" }
%"class.WTF::VectorBufferBase.1787" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1789" = type { %"class.WTF::LinkedHashSet.1792" }
%"class.WTF::LinkedHashSet.1792" = type { %"class.WTF::HashMap.1793", %"class.WTF::VectorBackedLinkedList.1797" }
%"class.WTF::HashMap.1793" = type { %"class.WTF::HashTable.1794" }
%"class.WTF::HashTable.1794" = type <{ %"struct.WTF::KeyValuePair.1796"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1796" = type opaque
%"class.WTF::VectorBackedLinkedList.1797" = type { %"class.WTF::Vector.1798", i32, i32 }
%"class.WTF::Vector.1798" = type { %"class.WTF::VectorBuffer.1799" }
%"class.WTF::VectorBuffer.1799" = type { %"class.WTF::VectorBufferBase.1800" }
%"class.WTF::VectorBufferBase.1800" = type { %"class.WTF::VectorBackedLinkedListNode.1801"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1801" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1803" = type { %"class.std::__1::__compressed_pair.1804" }
%"class.std::__1::__compressed_pair.1804" = type { %"struct.std::__1::__compressed_pair_elem.1805" }
%"struct.std::__1::__compressed_pair_elem.1805" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1809" = type { %"class.std::__1::__compressed_pair.1810" }
%"class.std::__1::__compressed_pair.1810" = type { %"struct.std::__1::__compressed_pair_elem.1811" }
%"struct.std::__1::__compressed_pair_elem.1811" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1812, %class.scoped_refptr.1812, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1902", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1907", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1812 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1813", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1820" }
%"class.WTF::RefCounted.1813" = type { %"class.base::RefCounted.1814" }
%"class.base::RefCounted.1814" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1815", i32, [4 x i8] }>
%"class.WTF::Vector.1815" = type { %"class.WTF::VectorBuffer.1816" }
%"class.WTF::VectorBuffer.1816" = type { %"class.WTF::VectorBufferBase.1817" }
%"class.WTF::VectorBufferBase.1817" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1820" = type { %"class.WTF::VectorBuffer.1821" }
%"class.WTF::VectorBuffer.1821" = type { %"class.WTF::VectorBufferBase.1822" }
%"class.WTF::VectorBufferBase.1822" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1826", %"class.std::__1::unique_ptr.1875", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1823, %class.scoped_refptr.1824, %class.scoped_refptr.1825 }
%class.scoped_refptr.1823 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1839", i8, i8, %class.scoped_refptr.1823, i32, i32 }
%"class.WTF::RefCounted.1839" = type { %"class.base::RefCounted.1840" }
%"class.base::RefCounted.1840" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1824 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1987" }
%"class.blink::PaintPropertyNode.1987" = type { %"class.WTF::RefCounted.1988", i8, i8, %class.scoped_refptr.1824, i32, i32 }
%"class.WTF::RefCounted.1988" = type { %"class.base::RefCounted.1989" }
%"class.base::RefCounted.1989" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1825 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1984" }
%"class.blink::PaintPropertyNode.1984" = type { %"class.WTF::RefCounted.1985", i8, i8, %class.scoped_refptr.1825, i32, i32 }
%"class.WTF::RefCounted.1985" = type { %"class.base::RefCounted.1986" }
%"class.base::RefCounted.1986" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1826" = type { %"class.std::__1::__compressed_pair.1827" }
%"class.std::__1::__compressed_pair.1827" = type { %"struct.std::__1::__compressed_pair_elem.1828" }
%"struct.std::__1::__compressed_pair_elem.1828" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1829", %"class.WTF::Vector.1834", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1829" = type { %"class.WTF::VectorBuffer.1830" }
%"class.WTF::VectorBuffer.1830" = type { %"class.WTF::VectorBufferBase.1831" }
%"class.WTF::VectorBufferBase.1831" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1834" = type { %"class.WTF::VectorBuffer.1835" }
%"class.WTF::VectorBuffer.1835" = type { %"class.WTF::VectorBufferBase.1836" }
%"class.WTF::VectorBufferBase.1836" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1854" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1847, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1848", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1841" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1841" = type { %"class.std::__1::__compressed_pair.1842" }
%"class.std::__1::__compressed_pair.1842" = type { %"struct.std::__1::__compressed_pair_elem.1843" }
%"struct.std::__1::__compressed_pair_elem.1843" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1847 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1969", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1969" = type { %"class.WTF::RefCounted.1970", i8, i8, %class.scoped_refptr.1847, i32, i32 }
%"class.WTF::RefCounted.1970" = type { %"class.base::RefCounted.1971" }
%"class.base::RefCounted.1971" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1972" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1972" = type { %"class.absl::optional_internal::optional_data.1973" }
%"class.absl::optional_internal::optional_data.1973" = type { %"class.absl::optional_internal::optional_data_base.1974" }
%"class.absl::optional_internal::optional_data_base.1974" = type { %"class.absl::optional_internal::optional_data_dtor_base.1975" }
%"class.absl::optional_internal::optional_data_dtor_base.1975" = type { i8, %union.anon.1976 }
%union.anon.1976 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1977", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1977" = type { %"class.std::__1::__vector_base.1978" }
%"class.std::__1::__vector_base.1978" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1979" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1979" = type { %"struct.std::__1::__compressed_pair_elem.1980" }
%"struct.std::__1::__compressed_pair_elem.1980" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1848" = type { %"class.std::__1::__compressed_pair.1849" }
%"class.std::__1::__compressed_pair.1849" = type { %"struct.std::__1::__compressed_pair_elem.1850" }
%"struct.std::__1::__compressed_pair_elem.1850" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1854" = type { %"class.std::__1::__compressed_pair.1855" }
%"class.std::__1::__compressed_pair.1855" = type { %"struct.std::__1::__compressed_pair_elem.1856" }
%"struct.std::__1::__compressed_pair_elem.1856" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1857", %"class.std::__1::unique_ptr.1863", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1857" = type { %"class.std::__1::__compressed_pair.1858" }
%"class.std::__1::__compressed_pair.1858" = type { %"struct.std::__1::__compressed_pair_elem.1859" }
%"struct.std::__1::__compressed_pair_elem.1859" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1863" = type { %"class.std::__1::__compressed_pair.1864" }
%"class.std::__1::__compressed_pair.1864" = type { %"struct.std::__1::__compressed_pair_elem.1865" }
%"struct.std::__1::__compressed_pair_elem.1865" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1875" = type { %"class.std::__1::__compressed_pair.1876" }
%"class.std::__1::__compressed_pair.1876" = type { %"struct.std::__1::__compressed_pair_elem.1877" }
%"struct.std::__1::__compressed_pair_elem.1877" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1878", %"class.absl::optional.1878" }
%"class.absl::optional.1878" = type { %"class.absl::optional_internal::optional_data.1879" }
%"class.absl::optional_internal::optional_data.1879" = type { %"class.absl::optional_internal::optional_data_base.1880" }
%"class.absl::optional_internal::optional_data_base.1880" = type { %"class.absl::optional_internal::optional_data_dtor_base.1881" }
%"class.absl::optional_internal::optional_data_dtor_base.1881" = type { i8, [3 x i8], %union.anon.1882 }
%union.anon.1882 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1820"*, %"class.absl::optional.1888", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1888" = type { %"class.absl::optional_internal::optional_data.1889" }
%"class.absl::optional_internal::optional_data.1889" = type { %"class.absl::optional_internal::optional_data_base.1890" }
%"class.absl::optional_internal::optional_data_base.1890" = type { %"class.absl::optional_internal::optional_data_dtor_base.1891" }
%"class.absl::optional_internal::optional_data_dtor_base.1891" = type { i8, %union.anon.1892 }
%union.anon.1892 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1893", %"class.WTF::Vector.1897" }
%"class.WTF::Vector.1893" = type { %"class.WTF::VectorBuffer.1894" }
%"class.WTF::VectorBuffer.1894" = type { %"class.WTF::VectorBufferBase.1403", [128 x i8] }
%"class.WTF::VectorBufferBase.1403" = type { i32*, i32, i32 }
%"class.WTF::Vector.1897" = type { %"class.WTF::VectorBuffer.1898" }
%"class.WTF::VectorBuffer.1898" = type { %"class.WTF::VectorBufferBase.1899", [128 x i8] }
%"class.WTF::VectorBufferBase.1899" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1902" = type { %"class.WTF::VectorBuffer.1903" }
%"class.WTF::VectorBuffer.1903" = type { %"class.WTF::VectorBufferBase.1904" }
%"class.WTF::VectorBufferBase.1904" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1907" = type { %"class.WTF::HashTable.1908" }
%"class.WTF::HashTable.1908" = type <{ %"struct.WTF::KeyValuePair.1911"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1911" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1912", %"class.WTF::Vector.1917" }
%"class.WTF::HashMap.1912" = type { %"class.WTF::HashTable.1913" }
%"class.WTF::HashTable.1913" = type <{ %"struct.WTF::KeyValuePair.1916"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1916" = type opaque
%"class.WTF::Vector.1917" = type { %"class.WTF::VectorBuffer.1918" }
%"class.WTF::VectorBuffer.1918" = type { %"class.WTF::VectorBufferBase.1919" }
%"class.WTF::VectorBufferBase.1919" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1925" = type { %"class.std::__1::__compressed_pair.1926" }
%"class.std::__1::__compressed_pair.1926" = type { %"struct.std::__1::__compressed_pair_elem.1927" }
%"struct.std::__1::__compressed_pair_elem.1927" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1931" = type { %"class.WTF::VectorBuffer.1932" }
%"class.WTF::VectorBuffer.1932" = type { %"class.WTF::VectorBufferBase.1933" }
%"class.WTF::VectorBufferBase.1933" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1936 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1937" = type { %"class.blink::MemberBase.1938" }
%"class.blink::MemberBase.1938" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1939" = type { %"class.blink::MemberBase.1940" }
%"class.blink::MemberBase.1940" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1941" = type { %"class.blink::MemberBase.1942" }
%"class.blink::MemberBase.1942" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1943" = type { %"class.WTF::HashSet.1946" }
%"class.WTF::HashSet.1946" = type { %"class.WTF::HashTable.1947" }
%"class.WTF::HashTable.1947" = type <{ %"class.blink::WeakMember.1949"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1949" = type opaque
%"class.blink::HeapHashSet.1950" = type { %"class.WTF::HashSet.1953" }
%"class.WTF::HashSet.1953" = type { %"class.WTF::HashTable.1954" }
%"class.WTF::HashTable.1954" = type <{ %"class.blink::WeakMember.1956"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1956" = type opaque
%"class.std::__1::unique_ptr.1957" = type { %"class.std::__1::__compressed_pair.1958" }
%"class.std::__1::__compressed_pair.1958" = type { %"struct.std::__1::__compressed_pair_elem.1959" }
%"struct.std::__1::__compressed_pair_elem.1959" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1963" = type { %"class.std::__1::__compressed_pair.1964" }
%"class.std::__1::__compressed_pair.1964" = type { %"struct.std::__1::__compressed_pair_elem.1965" }
%"struct.std::__1::__compressed_pair_elem.1965" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1006", i32, i32, i32, i8, [3 x i8] }>
%"class.blink::Member.1500" = type { %"class.blink::MemberBase.1501" }
%"class.blink::MemberBase.1501" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1502" = type { %"class.blink::MemberBase.1503" }
%"class.blink::MemberBase.1503" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1504" = type { %"class.blink::MemberBase.1505" }
%"class.blink::MemberBase.1505" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1506" = type { %"class.blink::MemberBase.1507" }
%"class.blink::MemberBase.1507" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1508" = type { %"class.blink::MemberBase.1509" }
%"class.blink::MemberBase.1509" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.1510 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1511" = type { %"class.blink::MemberBase.1512" }
%"class.blink::MemberBase.1512" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1513" = type { %"class.blink::MemberBase.1514" }
%"class.blink::MemberBase.1514" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1515" = type { %"class.blink::MemberBase.1516" }
%"class.blink::MemberBase.1516" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1517" = type { %"class.blink::MemberBase.1518" }
%"class.blink::MemberBase.1518" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1519" = type { %"class.blink::MemberBase.1520" }
%"class.blink::MemberBase.1520" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1521" = type { %"class.blink::MemberBase.1522" }
%"class.blink::MemberBase.1522" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1523" = type { %"class.blink::MemberBase.1524" }
%"class.blink::MemberBase.1524" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1525" = type { %"class.blink::Member.1526" }
%"class.blink::Member.1526" = type { %"class.blink::MemberBase.1527" }
%"class.blink::MemberBase.1527" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1623" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1530, %"class.std::__1::unique_ptr.1245", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1254, i32 }>
%class.scoped_refptr.1530 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1254, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1589", %"class.absl::optional.1594", %"class.absl::optional.1547", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1614", i8, [7 x i8], %class.scoped_refptr.1254, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1267" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1254, %"class.std::__1::unique_ptr.1531", %"class.absl::optional.1541", %"struct.std::__1::atomic.365", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1547", %"class.std::__1::unique_ptr.1552", i8, i64, %class.scoped_refptr.1586, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.1587", %"class.base::WeakPtrFactory.1588" }
%"class.std::__1::unique_ptr.1531" = type { %"class.std::__1::__compressed_pair.1532" }
%"class.std::__1::__compressed_pair.1532" = type { %"struct.std::__1::__compressed_pair_elem.1533" }
%"struct.std::__1::__compressed_pair_elem.1533" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1254, i8, %"class.mojo::ScopedHandleBase.1534", %class.scoped_refptr.1535, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1536", i8*, %"class.base::WeakPtrFactory.1537" }
%"class.mojo::ScopedHandleBase.1534" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1535 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.1536" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1537" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1541" = type { %"class.absl::optional_internal::optional_data.1542" }
%"class.absl::optional_internal::optional_data.1542" = type { %"class.absl::optional_internal::optional_data_base.1543" }
%"class.absl::optional_internal::optional_data_base.1543" = type { %"class.absl::optional_internal::optional_data_dtor_base.1544" }
%"class.absl::optional_internal::optional_data_dtor_base.1544" = type { i8, %union.anon.1545 }
%union.anon.1545 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1546", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1546" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.1552" = type { %"class.std::__1::__compressed_pair.1553" }
%"class.std::__1::__compressed_pair.1553" = type { %"struct.std::__1::__compressed_pair_elem.1554" }
%"struct.std::__1::__compressed_pair_elem.1554" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1555", i8, i64, %class.scoped_refptr.1556, %class.scoped_refptr.1581 }
%"class.base::RepeatingCallback.1555" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1556 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1557", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.1559", %"class.std::__1::map.1570", i8, [7 x i8] }>
%"class.base::RefCounted.1557" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1558 }
%class.scoped_refptr.1558 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.1559" = type { %"class.std::__1::__tree.1560" }
%"class.std::__1::__tree.1560" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1561", %"class.std::__1::__compressed_pair.1565" }
%"class.std::__1::__compressed_pair.1561" = type { %"struct.std::__1::__compressed_pair_elem.852" }
%"class.std::__1::__compressed_pair.1565" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"class.std::__1::map.1570" = type { %"class.std::__1::__tree.1571" }
%"class.std::__1::__tree.1571" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1572", %"class.std::__1::__compressed_pair.1576" }
%"class.std::__1::__compressed_pair.1572" = type { %"struct.std::__1::__compressed_pair_elem.852" }
%"class.std::__1::__compressed_pair.1576" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%class.scoped_refptr.1581 = type { %"class.base::RefCountedData.1582"* }
%"class.base::RefCountedData.1582" = type opaque
%class.scoped_refptr.1586 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.1587" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.1588" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1589" = type { %"class.absl::optional_internal::optional_data.1590" }
%"class.absl::optional_internal::optional_data.1590" = type { %"class.absl::optional_internal::optional_data_base.1591" }
%"class.absl::optional_internal::optional_data_base.1591" = type { %"class.absl::optional_internal::optional_data_dtor_base.1592" }
%"class.absl::optional_internal::optional_data_dtor_base.1592" = type { i8, %union.anon.1593 }
%union.anon.1593 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1594" = type { %"class.absl::optional_internal::optional_data.1595" }
%"class.absl::optional_internal::optional_data.1595" = type { %"class.absl::optional_internal::optional_data_base.1596" }
%"class.absl::optional_internal::optional_data_base.1596" = type { %"class.absl::optional_internal::optional_data_dtor_base.1597" }
%"class.absl::optional_internal::optional_data_dtor_base.1597" = type { i8, [7 x i8], %union.anon.1598 }
%union.anon.1598 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1547" = type { %"class.absl::optional_internal::optional_data.1548" }
%"class.absl::optional_internal::optional_data.1548" = type { %"class.absl::optional_internal::optional_data_base.1549" }
%"class.absl::optional_internal::optional_data_base.1549" = type { %"class.absl::optional_internal::optional_data_dtor_base.1550" }
%"class.absl::optional_internal::optional_data_dtor_base.1550" = type { i8, %union.anon.1551 }
%union.anon.1551 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.1599 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.1599 = type { %"class.std::__1::map.1602" }
%"class.std::__1::map.1602" = type { %"class.std::__1::__tree.1603" }
%"class.std::__1::__tree.1603" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1604", %"class.std::__1::__compressed_pair.1608" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.852" }
%"class.std::__1::__compressed_pair.1608" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1613"*, i64 }
%"class.std::__1::unique_ptr.1613" = type opaque
%"class.std::__1::map.1614" = type { %"class.std::__1::__tree.1615" }
%"class.std::__1::__tree.1615" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1616", %"class.std::__1::__compressed_pair.1620" }
%"class.std::__1::__compressed_pair.1616" = type { %"struct.std::__1::__compressed_pair_elem.852" }
%"class.std::__1::__compressed_pair.1620" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"class.std::__1::unique_ptr.1623" = type { %"class.std::__1::__compressed_pair.1624" }
%"class.std::__1::__compressed_pair.1624" = type { %"struct.std::__1::__compressed_pair_elem.1625" }
%"struct.std::__1::__compressed_pair_elem.1625" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1629" = type { %"class.std::__1::__compressed_pair.1630" }
%"class.std::__1::__compressed_pair.1630" = type { %"struct.std::__1::__compressed_pair_elem.1631" }
%"struct.std::__1::__compressed_pair_elem.1631" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.base::RepeatingCallback.1635" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1636" = type { %"class.std::__1::__compressed_pair.1637" }
%"class.std::__1::__compressed_pair.1637" = type { %"struct.std::__1::__compressed_pair_elem.1638" }
%"struct.std::__1::__compressed_pair_elem.1638" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1642" = type { %"class.std::__1::__compressed_pair.1643" }
%"class.std::__1::__compressed_pair.1643" = type { %"struct.std::__1::__compressed_pair_elem.1644" }
%"struct.std::__1::__compressed_pair_elem.1644" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1648" }
%"class.blink::Member.1648" = type { %"class.blink::MemberBase.1649" }
%"class.blink::MemberBase.1649" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1652" }
%"class.mojo::AssociatedRemote.1652" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1653" }
%"class.mojo::internal::AssociatedInterfacePtrState.1653" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1654" }
%"class.std::__1::unique_ptr.1654" = type { %"class.std::__1::__compressed_pair.1655" }
%"class.std::__1::__compressed_pair.1655" = type { %"struct.std::__1::__compressed_pair_elem.1656" }
%"struct.std::__1::__compressed_pair_elem.1656" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1660" = type { %"class.blink::Member.1661" }
%"class.blink::Member.1661" = type { %"class.blink::MemberBase.1662" }
%"class.blink::MemberBase.1662" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1665" }
%"class.mojo::AssociatedRemote.1665" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1666" }
%"class.mojo::internal::AssociatedInterfacePtrState.1666" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1667" }
%"class.std::__1::unique_ptr.1667" = type { %"class.std::__1::__compressed_pair.1668" }
%"class.std::__1::__compressed_pair.1668" = type { %"struct.std::__1::__compressed_pair_elem.1669" }
%"struct.std::__1::__compressed_pair_elem.1669" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1673" }
%"class.blink::Member.1673" = type { %"class.blink::MemberBase.1674" }
%"class.blink::MemberBase.1674" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1677", %"class.blink::Member.1420", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1677" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1678" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1245" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1678" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1679" = type { %"class.blink::Member.1680" }
%"class.blink::Member.1680" = type { %"class.blink::MemberBase.1681" }
%"class.blink::MemberBase.1681" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1684", %"class.blink::Member.1420", %"class.mojo::AssociatedReceiver.1685" }
%"class.blink::ThreadState::PrefinalizerRegistration.1684" = type { i8 }
%"class.mojo::AssociatedReceiver.1685" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1686" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1686" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1687" }
%"class.blink::Member.1687" = type { %"class.blink::MemberBase.1688" }
%"class.blink::MemberBase.1688" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1691", %"class.blink::Member.1420", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1691" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.1530, %"class.std::__1::unique_ptr.1245", %"class.base::WeakPtrFactory.1692" }
%"class.base::WeakPtrFactory.1692" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1693" = type { %"class.blink::Member.1694" }
%"class.blink::Member.1694" = type { %"class.blink::MemberBase.1695" }
%"class.blink::MemberBase.1695" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1698", %"class.blink::Member.1420", %"class.mojo::AssociatedReceiver.1699" }
%"class.blink::ThreadState::PrefinalizerRegistration.1698" = type { i8 }
%"class.mojo::AssociatedReceiver.1699" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1700" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1700" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1701" = type { %"class.blink::MemberBase.1702" }
%"class.blink::MemberBase.1702" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1703" = type { %"class.blink::MemberBase.1704" }
%"class.blink::MemberBase.1704" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1705" = type { %"class.blink::MemberBase.1706" }
%"class.blink::MemberBase.1706" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1707" = type { %"class.blink::MemberBase.1708" }
%"class.blink::MemberBase.1708" = type { %"class.blink::HeapHashMap.1709"* }
%"class.blink::HeapHashMap.1709" = type opaque
%"class.mojo::StructPtr.1710" = type { %"class.std::__1::unique_ptr.1711" }
%"class.std::__1::unique_ptr.1711" = type { %"class.std::__1::__compressed_pair.1712" }
%"class.std::__1::__compressed_pair.1712" = type { %"struct.std::__1::__compressed_pair_elem.1713" }
%"struct.std::__1::__compressed_pair_elem.1713" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1714", %"class.mojo::InlinedStructPtr" }
%"class.mojo::InlinedStructPtr.1714" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.blink::Member.1718" = type { %"class.blink::MemberBase.1719" }
%"class.blink::MemberBase.1719" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1720" = type { %"class.absl::optional_internal::optional_data.1721" }
%"class.absl::optional_internal::optional_data.1721" = type { %"class.absl::optional_internal::optional_data_base.1722" }
%"class.absl::optional_internal::optional_data_base.1722" = type { %"class.absl::optional_internal::optional_data_dtor_base.1723" }
%"class.absl::optional_internal::optional_data_dtor_base.1723" = type { i8, %union.anon.1724 }
%union.anon.1724 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.WTF::Vector.1401" = type { %"class.WTF::VectorBuffer.1402" }
%"class.WTF::VectorBuffer.1402" = type { %"class.WTF::VectorBufferBase.1403" }
%"class.blink::HTMLTemplateElement" = type <{ %"class.blink::HTMLElement", %"class.blink::Member.1331", i32, [4 x i8] }>
%"class.blink::Member.1331" = type { %"class.blink::MemberBase.1332" }
%"class.blink::MemberBase.1332" = type { %"class.blink::TemplateContentDocumentFragment"* }
%"class.blink::TemplateContentDocumentFragment" = type opaque
%"class.blink::HTMLFormattingElementList::Bookmark" = type { i8, %"class.blink::HTMLFormattingElementList::Entry"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.1381", %"class.WTF::AtomicString" }
%"class.WTF::StringAppend.1381" = type <{ %"class.WTF::AtomicString", i8, [7 x i8] }>
%"class.WTF::StringTypeAdapter.1382" = type { %"class.WTF::StringTypeAdapter.1383" }
%"class.WTF::StringTypeAdapter.1383" = type { %"class.WTF::StringView" }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::StringTypeAdapter.2009" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.2010" = type { %"class.WTF::StringTypeAdapter.1383" }

$_ZN5blink15HTMLTreeBuilder34ShouldProcessTokenInForeignContentEPNS_15AtomicHTMLTokenE = comdat any

$_ZN5blink15AtomicHTMLTokenD2Ev = comdat any

$_ZNK5blink13HTMLStackItem23IsNumberedHeaderElementEv = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZNK5blink13HTMLStackItem13IsSpecialNodeEv = comdat any

$_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer23TakeRemainingWhitespaceEv = comdat any

$_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm = comdat any

$_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF7HashMapINS_12AtomicStringEN5blink13QualifiedNameENS_16AtomicStringHashENS_10HashTraitsIS1_EENS5_IS3_EENS_18PartitionAllocatorEE2atERKS1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS1_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS2_IN5blink13QualifiedNameEEEEENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S6_EERS3_RKS6_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_ = comdat any

$_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS4_IN5blink13QualifiedNameEEEEENS_18PartitionAllocatorENS_12KeyValuePairIS5_S8_EEEEvRT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8ReinsertEOS5_ = comdat any

$_ZN3WTFplINS_12AtomicStringEcS1_EENS_12StringAppendINS2_IT_T0_EET1_EERKS5_S6_ = comdat any

$_ZN3WTF12StringAppendINS0_INS_12AtomicStringEcEES1_EC2ES2_S1_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEcEES1_EcvNS_6StringEEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEcEES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS_12AtomicStringEcE6lengthEv = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS1_RS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS2_IN5blink13QualifiedNameEEEEENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S6_EERS3_RS6_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS1_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS2_IN5blink13QualifiedNameEEEEENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S6_EERKS3_RKS6_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERA12_KcS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS2_IN5blink13QualifiedNameEEEEENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S6_EERA12_KcS6_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA125_KcEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS8_IPKcNS7_6StringEEESA_EEEEEPS1_DpOT_ = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN5blink10TraceTraitINS_13HTMLStackItemEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink13HTMLStackItemC2EPNS_13ContainerNodeENS0_8ItemTypeE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_13HTMLStackItemEEEPhm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_13HTMLStackItemEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_13HTMLStackItemEE7GetNameEPKv = comdat any

$_ZN5blink13HTMLStackItemD2Ev = comdat any

$_ZN3WTF6VectorIN5blink15HTMLTreeBuilder13InsertionModeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15HTMLTreeBuilder13InsertionModeEEEmm = comdat any

$_ZN5blink10TraceTraitINS_16DocumentFragmentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_18HTMLDocumentParserEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink15HTMLTreeBuilder13InsertionModeELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_13HTMLStackItemEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_13HTMLStackItemEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink10html_names5kPTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kHTMLTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kBaseTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kBasefontTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kBgsoundTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kCommandTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kLinkTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kMetaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kNoframesTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kScriptTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kStyleTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTitleTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kTemplateTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kBodyTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kFramesetTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kAddressTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kArticleTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kAsideTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names14kBlockquoteTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kCenterTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kDetailsTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kDirTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kDivTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kDlTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kFieldsetTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names14kFigcaptionTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kFigureTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kFooterTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kHeaderTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kHgroupTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kMainTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kMenuTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kNavTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kOlTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kSectionTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kSummaryTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kUlTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kPreTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kListingTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kFormTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kLiTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kDdTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kDtTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names13kPlaintextTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kButtonTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names5kATagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kNobrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kAppletTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kEmbedTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kObjectTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kMarqueeTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTableTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kImageTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kImgTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kAreaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kBrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kKeygenTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kWbrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kInputTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTypeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str = private unnamed_addr constant [7 x i8] c"hidden\00", align 1
@_ZN5blink10html_names9kParamTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kSourceTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTrackTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kHrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kTextareaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kXmpTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kIFrameTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kNoembedTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kNoscriptTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kSelectTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kOptgroupTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kOptionTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kRbTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kRTCTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kRubyTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kRtTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kRpTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink12mathml_names8kMathTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names13kNamespaceURIE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink9svg_names7kSVGTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names13kNamespaceURIE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names9kFrameTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kHeadTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kTrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names29kShadowrootdelegatesfocusAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names6kTdTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kThTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kCaptionTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kColgroupTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kColTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTbodyTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTheadTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTfootTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names5kBTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kBigTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kCodeTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kEmTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names5kITagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names5kSTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kSmallTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kSpanTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kStrongTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kStrikeTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kSubTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kSupTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kTtTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names5kUTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kVarTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kFontTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kColorAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kFaceAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kSizeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names10kScriptTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink10html_names17xhtmlNamespaceURIE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.1 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.2 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9AttributeEEEPKcv = private unnamed_addr constant [64 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Attribute]\00", align 1
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink10html_names6kH1TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kH2TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kH3TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kH4TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kH5TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kH6TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.3 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZZN5blinkL16AdjustAttributesIXadL_ZNS_12mathml_names8GetAttrsEvEELj25EEEvPNS_15AtomicHTMLTokenEE8case_map = internal unnamed_addr global %"class.WTF::HashMap.1361"* null, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapINS_12AtomicStringEN5blink13QualifiedNameENS_16AtomicStringHashENS_10HashTraitsIS2_EENS6_IS4_EENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [224 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::HashMap<WTF::AtomicString, blink::QualifiedName, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<blink::QualifiedName>, WTF::PartitionAllocator>]\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringEN5blink13QualifiedNameEEEEEPKcv = private unnamed_addr constant [106 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::AtomicString, blink::QualifiedName>]\00", align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink11g_null_nameE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZZN5blinkL23AdjustForeignAttributesEPNS_15AtomicHTMLTokenEE3map = internal unnamed_addr global %"class.WTF::HashMap.1361"* null, align 8
@_ZN3WTF12g_xlink_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF10g_xml_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF12g_xmlns_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink11xmlns_names10kXmlnsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.7 = private unnamed_addr constant [12 x i8] c"xmlns:xlink\00", align 1
@_ZN5blink11xmlns_names13kNamespaceURIE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.8 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.9 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZZN5blinkL16AdjustAttributesIXadL_ZNS_9svg_names8GetAttrsEvEELj203EEEvPNS_15AtomicHTMLTokenEE8case_map = internal unnamed_addr global %"class.WTF::HashMap.1361"* null, align 8
@_ZN5blink10html_names15kShadowrootAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.11 = private unnamed_addr constant [125 x i8] c"Found declarative shadowroot attribute on a template, but declarative Shadow DOM has not been enabled by includeShadowRoots.\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"open\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"closed\00", align 1
@.str.14 = private unnamed_addr constant [49 x i8] c"Invalid declarative shadowroot attribute value \22\00", align 1
@.str.15 = private unnamed_addr constant [45 x i8] c"\22. Valid values include \22open\22 and \22closed\22.\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ConsoleMessage]\00", align 1
@.str.16 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.17 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.18 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@_ZN5blink26RuntimeEnabledFeaturesBase34is_declarative_shadow_dom_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink12mathml_names6kMiTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names6kMoTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names6kMnTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names6kMsTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names9kMtextTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names17kAnnotationXmlTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink9svg_names17kForeignObjectTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names8kDescTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names9kTitleTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink12mathml_names10kMglyphTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink12mathml_names14kMalignmarkTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZZN5blinkL20AdjustSVGTagNameCaseEPNS_15AtomicHTMLTokenEE8case_map = internal unnamed_addr global %"class.WTF::HashMap.1361"* null, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13HTMLStackItemEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HTMLStackItem]\00", align 1
@_ZZN5blink11GCInfoTraitINS_13HTMLStackItemEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_13HTMLStackItemEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_13HTMLStackItemEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_13HTMLStackItemEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_13HTMLStackItemEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15HTMLTreeBuilder13InsertionModeEEEPKcv = private unnamed_addr constant [85 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HTMLTreeBuilder::InsertionMode]\00", align 1

@_ZN5blink15HTMLTreeBuilderC1EPNS_18HTMLDocumentParserERNS_8DocumentENS_19ParserContentPolicyERKNS_17HTMLParserOptionsEb = hidden unnamed_addr alias void (%"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLDocumentParser"*, %"class.blink::Document"*, i32, %"class.blink::HTMLParserOptions"*, i1), void (%"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLDocumentParser"*, %"class.blink::Document"*, i32, %"class.blink::HTMLParserOptions"*, i1)* @_ZN5blink15HTMLTreeBuilderC2EPNS_18HTMLDocumentParserERNS_8DocumentENS_19ParserContentPolicyERKNS_17HTMLParserOptionsEb
@_ZN5blink15HTMLTreeBuilderC1EPNS_18HTMLDocumentParserEPNS_16DocumentFragmentEPNS_7ElementENS_19ParserContentPolicyERKNS_17HTMLParserOptionsEb = hidden unnamed_addr alias void (%"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLDocumentParser"*, %"class.blink::DocumentFragment"*, %"class.blink::Element"*, i32, %"class.blink::HTMLParserOptions"*, i1), void (%"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLDocumentParser"*, %"class.blink::DocumentFragment"*, %"class.blink::Element"*, i32, %"class.blink::HTMLParserOptions"*, i1)* @_ZN5blink15HTMLTreeBuilderC2EPNS_18HTMLDocumentParserEPNS_16DocumentFragmentEPNS_7ElementENS_19ParserContentPolicyERKNS_17HTMLParserOptionsEb
@_ZN5blink15HTMLTreeBuilderD1Ev = hidden unnamed_addr alias void (%"class.blink::HTMLTreeBuilder"*), void (%"class.blink::HTMLTreeBuilder"*)* @_ZN5blink15HTMLTreeBuilderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilderC2EPNS_18HTMLDocumentParserERNS_8DocumentENS_19ParserContentPolicyERKNS_17HTMLParserOptionsEb(%"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLDocumentParser"*, %"class.blink::Document"* dereferenceable(2848), i32, %"class.blink::HTMLParserOptions"* nocapture readonly dereferenceable(2), i1 zeroext) unnamed_addr #0 align 2 {
  %7 = zext i1 %5 to i8
  %8 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 0
  store i8 1, i8* %8, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 2
  %10 = bitcast %"class.blink::HTMLTreeBuilder::FragmentParsingContext"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #13
  %11 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %1, i64 0, i32 5, i32 0, i32 0
  %13 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %12, align 8
  tail call void @_ZN5blink20HTMLConstructionSiteC1EPNS_23HTMLParserReentryPermitERNS_8DocumentENS_19ParserContentPolicyE(%"class.blink::HTMLConstructionSite"* %11, %"class.blink::HTMLParserReentryPermit"* %13, %"class.blink::Document"* dereferenceable(2848) %2, i32 %3) #13
  %14 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 7, i32 2
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 7, i32 3
  %17 = bitcast i32* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 33, i1 false)
  store i8 1, i8* %16, align 4
  %18 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 7, i32 4
  store i8 0, i8* %18, align 1
  %19 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 8
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 9
  store i8 %7, i8* %20, align 1
  %21 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 11, i32 0, i32 0
  store %"class.blink::HTMLDocumentParser"* %1, %"class.blink::HTMLDocumentParser"** %21, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 12, i32 0, i32 0
  store %"class.blink::Element"* null, %"class.blink::Element"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 13
  %24 = bitcast %"class.WTF::TextPosition"* %23 to i64*
  store i64 4294967294, i64* %24, align 8
  %25 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 14, i32 0
  %26 = bitcast %"class.blink::HTMLParserOptions"* %4 to i16*
  %27 = bitcast i8* %25 to i16*
  %28 = load i16, i16* %26, align 1
  store i16 %28, i16* %27, align 8
  ret void
}

declare void @_ZN5blink20HTMLConstructionSiteC1EPNS_23HTMLParserReentryPermitERNS_8DocumentENS_19ParserContentPolicyE(%"class.blink::HTMLConstructionSite"*, %"class.blink::HTMLParserReentryPermit"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilderC2EPNS_18HTMLDocumentParserEPNS_16DocumentFragmentEPNS_7ElementENS_19ParserContentPolicyERKNS_17HTMLParserOptionsEb(%"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLDocumentParser"*, %"class.blink::DocumentFragment"*, %"class.blink::Element"*, i32, %"class.blink::HTMLParserOptions"* nocapture readonly dereferenceable(2), i1 zeroext) unnamed_addr #0 align 2 {
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %2, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::Document"*, %"class.blink::Document"** %11, align 8
  %13 = zext i1 %6 to i8
  %14 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 0
  store i8 1, i8* %14, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 2
  %16 = bitcast %"class.blink::HTMLTreeBuilder::FragmentParsingContext"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #13
  %17 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %18 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %1, i64 0, i32 5, i32 0, i32 0
  %19 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %18, align 8
  tail call void @_ZN5blink20HTMLConstructionSiteC1EPNS_23HTMLParserReentryPermitERNS_8DocumentENS_19ParserContentPolicyE(%"class.blink::HTMLConstructionSite"* %17, %"class.blink::HTMLParserReentryPermit"* %19, %"class.blink::Document"* dereferenceable(2848) %12, i32 %4) #13
  %20 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  %21 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 7, i32 2
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 7, i32 3
  %23 = bitcast i32* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 33, i1 false) #13
  store i8 1, i8* %22, align 4
  %24 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 7, i32 4
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 8
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 9
  store i8 %13, i8* %26, align 1
  %27 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 11, i32 0, i32 0
  store %"class.blink::HTMLDocumentParser"* %1, %"class.blink::HTMLDocumentParser"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 12, i32 0, i32 0
  store %"class.blink::Element"* null, %"class.blink::Element"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 13
  %30 = bitcast %"class.WTF::TextPosition"* %29 to i64*
  store i64 4294967294, i64* %30, align 8
  %31 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 14, i32 0
  %32 = bitcast %"class.blink::HTMLParserOptions"* %5 to i16*
  %33 = bitcast i8* %31 to i16*
  %34 = load i16, i16* %32, align 1
  store i16 %34, i16* %33, align 8
  tail call void @_ZN5blink20HTMLConstructionSite19InitFragmentParsingEPNS_16DocumentFragmentEPNS_7ElementE(%"class.blink::HTMLConstructionSite"* %17, %"class.blink::DocumentFragment"* %2, %"class.blink::Element"* %3) #13
  %35 = ptrtoint %"class.blink::DocumentFragment"* %2 to i64
  %36 = bitcast %"class.blink::HTMLTreeBuilder::FragmentParsingContext"* %15 to i64*
  store atomic i64 %35, i64* %36 monotonic, align 8
  %37 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %7
  %40 = bitcast %"class.blink::DocumentFragment"* %2 to i8*
  %41 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %40) #13
  br label %42

42:                                               ; preds = %39, %7
  %43 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13HTMLStackItemEEEPhm(i64 48) #13
  %44 = bitcast i8* %43 to %"class.blink::HTMLStackItem"*
  %45 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %3, i64 0, i32 0
  tail call void @_ZN5blink13HTMLStackItemC2EPNS_13ContainerNodeENS0_8ItemTypeE(%"class.blink::HTMLStackItem"* %44, %"class.blink::ContainerNode"* %45, i32 0) #13
  %46 = getelementptr inbounds i8, i8* %43, i64 -4
  %47 = bitcast i8* %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = or i16 %48, 1
  store atomic i16 %49, i16* %47 release, align 2
  %50 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 2, i32 1
  %51 = ptrtoint i8* %43 to i64
  %52 = bitcast %"class.blink::Member.10"* %50 to i64*
  store atomic i64 %51, i64* %52 monotonic, align 8
  %53 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %42
  %56 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %43) #13
  br label %57

57:                                               ; preds = %42, %55
  %58 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %59 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13HTMLStackItemEEEPhm(i64 48) #13
  %60 = bitcast i8* %59 to %"class.blink::HTMLStackItem"*
  %61 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %2, i64 0, i32 0
  tail call void @_ZN5blink13HTMLStackItemC2EPNS_13ContainerNodeENS0_8ItemTypeE(%"class.blink::HTMLStackItem"* %60, %"class.blink::ContainerNode"* %61, i32 1) #13
  %62 = getelementptr inbounds i8, i8* %59, i64 -4
  %63 = bitcast i8* %62 to i16*
  %64 = load atomic i16, i16* %63 monotonic, align 2
  %65 = or i16 %64, 1
  store atomic i16 %65, i16* %63 release, align 2
  tail call void @_ZN5blink16HTMLElementStack12PushRootNodeEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack"* %58, %"class.blink::HTMLStackItem"* %60) #13
  %66 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE, align 8
  %67 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %3, i64 0, i32 0, i32 0
  %68 = icmp eq %"class.blink::Element"* %3, null
  br i1 %68, label %102, label %69

69:                                               ; preds = %57
  %70 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %3, i64 0, i32 0, i32 0, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = and i32 %71, 48
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %102

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %66, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %67, i64 1, i32 2
  %78 = bitcast %"class.blink::Member.2"* %77 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %79 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %79, i64 0, i32 3, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %76, i64 0, i32 3, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %81, %83
  br i1 %84, label %85, label %102

85:                                               ; preds = %74
  %86 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 6
  %87 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %87) #13
  store i32 6, i32* %8, align 4
  %88 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %89, %91
  br i1 %92, label %100, label %93, !prof !2

93:                                               ; preds = %85
  %94 = getelementptr inbounds %"class.WTF::Vector.91", %"class.WTF::Vector.91"* %86, i64 0, i32 0, i32 0, i32 0
  %95 = load i32*, i32** %94, align 8
  %96 = zext i32 %89 to i64
  %97 = getelementptr inbounds i32, i32* %95, i64 %96
  store i32 6, i32* %97, align 4
  %98 = load i32, i32* %88, align 4
  %99 = add i32 %98, 1
  store i32 %99, i32* %88, align 4
  br label %101

100:                                              ; preds = %85
  call void @_ZN3WTF6VectorIN5blink15HTMLTreeBuilder13InsertionModeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.91"* %86, i32* nonnull dereferenceable(4) %8) #13
  br label %101

101:                                              ; preds = %93, %100
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %87) #13
  br label %102

102:                                              ; preds = %57, %69, %101, %74
  call void @_ZN5blink15HTMLTreeBuilder31ResetInsertionModeAppropriatelyEv(%"class.blink::HTMLTreeBuilder"* %0)
  ret void
}

declare void @_ZN5blink20HTMLConstructionSite19InitFragmentParsingEPNS_16DocumentFragmentEPNS_7ElementE(%"class.blink::HTMLConstructionSite"*, %"class.blink::DocumentFragment"*, %"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder22FragmentParsingContext4InitEPNS_16DocumentFragmentEPNS_7ElementE(%"class.blink::HTMLTreeBuilder::FragmentParsingContext"* nocapture, %"class.blink::DocumentFragment"*, %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.blink::DocumentFragment"* %1 to i64
  %5 = bitcast %"class.blink::HTMLTreeBuilder::FragmentParsingContext"* %0 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::DocumentFragment"* %1 to i8*
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #13
  br label %11

11:                                               ; preds = %3, %8
  %12 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13HTMLStackItemEEEPhm(i64 48) #13
  %13 = bitcast i8* %12 to %"class.blink::HTMLStackItem"*
  %14 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0
  tail call void @_ZN5blink13HTMLStackItemC2EPNS_13ContainerNodeENS0_8ItemTypeE(%"class.blink::HTMLStackItem"* %13, %"class.blink::ContainerNode"* %14, i32 0) #13
  %15 = getelementptr inbounds i8, i8* %12, i64 -4
  %16 = bitcast i8* %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = or i16 %17, 1
  store atomic i16 %18, i16* %16 release, align 2
  %19 = getelementptr inbounds %"class.blink::HTMLTreeBuilder::FragmentParsingContext", %"class.blink::HTMLTreeBuilder::FragmentParsingContext"* %0, i64 0, i32 1
  %20 = ptrtoint i8* %12 to i64
  %21 = bitcast %"class.blink::Member.10"* %19 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %11
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %12) #13
  br label %26

26:                                               ; preds = %11, %24
  ret void
}

declare void @_ZN5blink16HTMLElementStack12PushRootNodeEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack"*, %"class.blink::HTMLStackItem"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder31ResetInsertionModeAppropriatelyEv(%"class.blink::HTMLTreeBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %3 = tail call %"class.blink::HTMLElementStack::ElementRecord"* @_ZNK5blink16HTMLElementStack9TopRecordEv(%"class.blink::HTMLElementStack"* %2) #13
  %4 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE to %"class.blink::QualifiedName"**), align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE to %"class.blink::QualifiedName"**), align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE to %"class.blink::QualifiedName"**), align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE to %"class.blink::QualifiedName"**), align 8
  %15 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE to %"class.blink::QualifiedName"**), align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE to %"class.blink::QualifiedName"**), align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE to %"class.blink::QualifiedName"**), align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kCaptionTagE to %"class.blink::QualifiedName"**), align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kColgroupTagE to %"class.blink::QualifiedName"**), align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE to %"class.blink::QualifiedName"**), align 8
  %27 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHeadTagE to %"class.blink::QualifiedName"**), align 8
  %29 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE to %"class.blink::QualifiedName"**), align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kFramesetTagE to %"class.blink::QualifiedName"**), align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %34, i64 0, i32 0, i32 0
  br label %36

36:                                               ; preds = %319, %1
  %37 = phi i8 [ 0, %1 ], [ %51, %319 ]
  %38 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %3, %1 ], [ %321, %319 ]
  %39 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %41, align 8
  %43 = tail call %"class.blink::ContainerNode"* @_ZNK5blink16HTMLElementStack8RootNodeEv(%"class.blink::HTMLElementStack"* %2) #13
  %44 = icmp eq %"class.blink::ContainerNode"* %42, %43
  br i1 %44, label %45, label %50

45:                                               ; preds = %36
  %46 = load %"class.blink::DocumentFragment"*, %"class.blink::DocumentFragment"** %4, align 8
  %47 = icmp eq %"class.blink::DocumentFragment"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %45
  %49 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %5, align 8
  br label %50

50:                                               ; preds = %45, %48, %36
  %51 = phi i8 [ 1, %48 ], [ 1, %45 ], [ %37, %36 ]
  %52 = phi %"class.blink::HTMLStackItem"* [ %49, %48 ], [ %40, %45 ], [ %40, %36 ]
  %53 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %54 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %52, i64 0, i32 1, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %53, i64 0, i32 3, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %55, %57
  br i1 %58, label %59, label %73

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %53, i64 0, i32 4, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %61, %63
  br i1 %64, label %65, label %73

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 6
  %67 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = add i32 %68, -1
  %70 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIN5blink15HTMLTreeBuilder13InsertionModeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.91"* %66, i32 %69) #13
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 %71, i32* %72, align 8
  br label %322

73:                                               ; preds = %50, %59
  %74 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %75 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 3, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %55, %76
  br i1 %77, label %78, label %133

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 4, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %80, %82
  br i1 %83, label %84, label %133

84:                                               ; preds = %78
  %85 = and i8 %51, 1
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %87, label %131

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %52, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %88, align 8
  %90 = tail call %"class.blink::ContainerNode"* @_ZNK5blink16HTMLElementStack8RootNodeEv(%"class.blink::HTMLElementStack"* %2) #13
  %91 = icmp eq %"class.blink::ContainerNode"* %89, %90
  br i1 %91, label %131, label %92

92:                                               ; preds = %87, %124
  %93 = phi %"class.blink::HTMLStackItem"* [ %111, %124 ], [ %52, %87 ]
  %94 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %109, %124 ], [ %38, %87 ]
  %95 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %96 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %93, i64 0, i32 1, i32 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %95, i64 0, i32 3, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %97, %99
  br i1 %100, label %101, label %107

101:                                              ; preds = %92
  %102 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %93, i64 0, i32 3, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %95, i64 0, i32 4, i32 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %103, %105
  br i1 %106, label %131, label %107

107:                                              ; preds = %92, %101
  %108 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %94, i64 0, i32 1, i32 0, i32 0
  %109 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %109, i64 0, i32 0, i32 0, i32 0
  %111 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %110, align 8
  %112 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %113 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %111, i64 0, i32 1, i32 0, i32 0, i32 0
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %115 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %112, i64 0, i32 3, i32 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %114, %116
  br i1 %117, label %118, label %124

118:                                              ; preds = %107
  %119 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %111, i64 0, i32 3, i32 0, i32 0, i32 0
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %112, i64 0, i32 4, i32 0, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %120, %122
  br i1 %123, label %129, label %124

124:                                              ; preds = %118, %107
  %125 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %111, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %125, align 8
  %127 = tail call %"class.blink::ContainerNode"* @_ZNK5blink16HTMLElementStack8RootNodeEv(%"class.blink::HTMLElementStack"* %2) #13
  %128 = icmp eq %"class.blink::ContainerNode"* %126, %127
  br i1 %128, label %131, label %92

129:                                              ; preds = %118
  %130 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 17, i32* %130, align 8
  br label %322

131:                                              ; preds = %124, %101, %87, %84
  %132 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 16, i32* %132, align 8
  br label %322

133:                                              ; preds = %73, %78
  %134 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %135 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %134, i64 0, i32 3, i32 0, i32 0, i32 0
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %55, %136
  br i1 %137, label %138, label %144

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %134, i64 0, i32 4, i32 0, i32 0, i32 0
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %140, %142
  br i1 %143, label %155, label %144

144:                                              ; preds = %133, %138
  %145 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %146 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %145, i64 0, i32 3, i32 0, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %55, %147
  br i1 %148, label %149, label %157

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %152 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %145, i64 0, i32 4, i32 0, i32 0, i32 0
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %151, %153
  br i1 %154, label %155, label %157

155:                                              ; preds = %149, %138
  %156 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 15, i32* %156, align 8
  br label %322

157:                                              ; preds = %144, %149
  %158 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %159 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %158, i64 0, i32 3, i32 0, i32 0, i32 0
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %55, %160
  br i1 %161, label %162, label %170

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %165 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %158, i64 0, i32 4, i32 0, i32 0, i32 0
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %164, %166
  br i1 %167, label %168, label %170

168:                                              ; preds = %162
  %169 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 14, i32* %169, align 8
  br label %322

170:                                              ; preds = %157, %162
  %171 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %172 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %171, i64 0, i32 3, i32 0, i32 0, i32 0
  %173 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %172, align 8
  %174 = icmp eq %"class.WTF::StringImpl"* %55, %173
  br i1 %174, label %175, label %181

175:                                              ; preds = %170
  %176 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  %178 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %171, i64 0, i32 4, i32 0, i32 0, i32 0
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %178, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %177, %179
  br i1 %180, label %203, label %181

181:                                              ; preds = %170, %175
  %182 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %183 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %182, i64 0, i32 3, i32 0, i32 0, i32 0
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %183, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %55, %184
  br i1 %185, label %186, label %192

186:                                              ; preds = %181
  %187 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %187, align 8
  %189 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %182, i64 0, i32 4, i32 0, i32 0, i32 0
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %189, align 8
  %191 = icmp eq %"class.WTF::StringImpl"* %188, %190
  br i1 %191, label %203, label %192

192:                                              ; preds = %181, %186
  %193 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %194 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %193, i64 0, i32 3, i32 0, i32 0, i32 0
  %195 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %194, align 8
  %196 = icmp eq %"class.WTF::StringImpl"* %55, %195
  br i1 %196, label %197, label %205

197:                                              ; preds = %192
  %198 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %199 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %198, align 8
  %200 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %193, i64 0, i32 4, i32 0, i32 0, i32 0
  %201 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %200, align 8
  %202 = icmp eq %"class.WTF::StringImpl"* %199, %201
  br i1 %202, label %203, label %205

203:                                              ; preds = %197, %186, %175
  %204 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 13, i32* %204, align 8
  br label %322

205:                                              ; preds = %192, %197
  %206 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %207 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %206, i64 0, i32 3, i32 0, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %55, %208
  br i1 %209, label %210, label %218

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %211, align 8
  %213 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %206, i64 0, i32 4, i32 0, i32 0, i32 0
  %214 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %213, align 8
  %215 = icmp eq %"class.WTF::StringImpl"* %212, %214
  br i1 %215, label %216, label %218

216:                                              ; preds = %210
  %217 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 11, i32* %217, align 8
  br label %322

218:                                              ; preds = %205, %210
  %219 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %25, align 8
  %220 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %219, i64 0, i32 3, i32 0, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %55, %221
  br i1 %222, label %223, label %231

223:                                              ; preds = %218
  %224 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  %226 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %219, i64 0, i32 4, i32 0, i32 0, i32 0
  %227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %226, align 8
  %228 = icmp eq %"class.WTF::StringImpl"* %225, %227
  br i1 %228, label %229, label %231

229:                                              ; preds = %223
  %230 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 12, i32* %230, align 8
  br label %322

231:                                              ; preds = %218, %223
  %232 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %233 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %232, i64 0, i32 3, i32 0, i32 0, i32 0
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %233, align 8
  %235 = icmp eq %"class.WTF::StringImpl"* %55, %234
  br i1 %235, label %236, label %244

236:                                              ; preds = %231
  %237 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  %239 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %232, i64 0, i32 4, i32 0, i32 0, i32 0
  %240 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %239, align 8
  %241 = icmp eq %"class.WTF::StringImpl"* %238, %240
  br i1 %241, label %242, label %244

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 9, i32* %243, align 8
  br label %322

244:                                              ; preds = %231, %236
  %245 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %246 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %245, i64 0, i32 3, i32 0, i32 0, i32 0
  %247 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %246, align 8
  %248 = icmp eq %"class.WTF::StringImpl"* %55, %247
  br i1 %248, label %249, label %270

249:                                              ; preds = %244
  %250 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %251 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %250, align 8
  %252 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %245, i64 0, i32 4, i32 0, i32 0, i32 0
  %253 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %252, align 8
  %254 = icmp eq %"class.WTF::StringImpl"* %251, %253
  br i1 %254, label %255, label %270

255:                                              ; preds = %249
  %256 = load %"class.blink::DocumentFragment"*, %"class.blink::DocumentFragment"** %4, align 8
  %257 = icmp eq %"class.blink::DocumentFragment"* %256, null
  br i1 %257, label %266, label %258

258:                                              ; preds = %255
  %259 = bitcast %"class.blink::HTMLStackItem"** %5 to %"class.blink::Element"***
  %260 = load %"class.blink::Element"**, %"class.blink::Element"*** %259, align 8
  %261 = load %"class.blink::Element"*, %"class.blink::Element"** %260, align 8
  %262 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %261, i64 0, i32 0
  %263 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %52, i64 0, i32 0, i32 0, i32 0
  %264 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %263, align 8
  %265 = icmp eq %"class.blink::ContainerNode"* %262, %264
  br i1 %265, label %268, label %266

266:                                              ; preds = %258, %255
  %267 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 3, i32* %267, align 8
  br label %322

268:                                              ; preds = %258
  %269 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 7, i32* %269, align 8
  br label %322

270:                                              ; preds = %244, %249
  %271 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %272 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %271, i64 0, i32 3, i32 0, i32 0, i32 0
  %273 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %272, align 8
  %274 = icmp eq %"class.WTF::StringImpl"* %55, %273
  br i1 %274, label %275, label %283

275:                                              ; preds = %270
  %276 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %277 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %276, align 8
  %278 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %271, i64 0, i32 4, i32 0, i32 0, i32 0
  %279 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %278, align 8
  %280 = icmp eq %"class.WTF::StringImpl"* %277, %279
  br i1 %280, label %281, label %283

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 7, i32* %282, align 8
  br label %322

283:                                              ; preds = %270, %275
  %284 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %285 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %284, i64 0, i32 3, i32 0, i32 0, i32 0
  %286 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %285, align 8
  %287 = icmp eq %"class.WTF::StringImpl"* %55, %286
  br i1 %287, label %288, label %296

288:                                              ; preds = %283
  %289 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %290 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %291 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %284, i64 0, i32 4, i32 0, i32 0, i32 0
  %292 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %291, align 8
  %293 = icmp eq %"class.WTF::StringImpl"* %290, %292
  br i1 %293, label %294, label %296

294:                                              ; preds = %288
  %295 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 19, i32* %295, align 8
  br label %322

296:                                              ; preds = %283, %288
  %297 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %298 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %297, i64 0, i32 3, i32 0, i32 0, i32 0
  %299 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %298, align 8
  %300 = icmp eq %"class.WTF::StringImpl"* %55, %299
  br i1 %300, label %301, label %314

301:                                              ; preds = %296
  %302 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %303 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %302, align 8
  %304 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %297, i64 0, i32 4, i32 0, i32 0, i32 0
  %305 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %304, align 8
  %306 = icmp eq %"class.WTF::StringImpl"* %303, %305
  br i1 %306, label %307, label %314

307:                                              ; preds = %301
  %308 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 3, i32 0, i32 0
  %309 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %308, align 8
  %310 = icmp eq %"class.blink::HTMLStackItem"* %309, null
  %311 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  br i1 %310, label %313, label %312

312:                                              ; preds = %307
  store i32 5, i32* %311, align 8
  br label %322

313:                                              ; preds = %307
  store i32 2, i32* %311, align 8
  br label %322

314:                                              ; preds = %296, %301
  %315 = and i8 %51, 1
  %316 = icmp eq i8 %315, 0
  br i1 %316, label %319, label %317

317:                                              ; preds = %314
  %318 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 7, i32* %318, align 8
  br label %322

319:                                              ; preds = %314
  %320 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %38, i64 0, i32 1, i32 0, i32 0
  %321 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %320, align 8
  br label %36

322:                                              ; preds = %65, %131, %129, %155, %168, %203, %216, %229, %242, %266, %268, %281, %294, %312, %313, %317
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilderD2Ev(%"class.blink::HTMLTreeBuilder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 7
  tail call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* %2) #13
  %3 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = icmp eq i32* %21, null
  %23 = bitcast i32* %21 to i8*
  br i1 %22, label %30, label %24, !prof !3

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28, !prof !2

28:                                               ; preds = %24
  store i32 0, i32* %25, align 4
  br label %29

29:                                               ; preds = %28, %24
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %23) #13
  store i32* null, i32** %20, align 8
  br label %30

30:                                               ; preds = %19, %29
  %31 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSiteD1Ev(%"class.blink::HTMLConstructionSite"* %31) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink20HTMLConstructionSiteD1Ev(%"class.blink::HTMLConstructionSite"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15HTMLTreeBuilder22FragmentParsingContext5TraceEPNS_7VisitorE(%"class.blink::HTMLTreeBuilder::FragmentParsingContext"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::HTMLTreeBuilder::FragmentParsingContext"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16DocumentFragmentEE5TraceEPNS_7VisitorEPKv) #13
  br label %12

12:                                               ; preds = %2, %6
  %13 = getelementptr inbounds %"class.blink::HTMLTreeBuilder::FragmentParsingContext", %"class.blink::HTMLTreeBuilder::FragmentParsingContext"* %0, i64 0, i32 1
  %14 = bitcast %"class.blink::Member.10"* %13 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = inttoptr i64 %15 to i8*
  %19 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %20 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %20, i64 5
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %1, i8* nonnull %18, i8* nonnull %18, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13HTMLStackItemEE5TraceEPNS_7VisitorEPKv) #13
  br label %23

23:                                               ; preds = %12, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15HTMLTreeBuilder5TraceEPNS_7VisitorE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::HTMLTreeBuilder::FragmentParsingContext"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16DocumentFragmentEE5TraceEPNS_7VisitorEPKv) #13
  br label %13

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 2, i32 1
  %15 = bitcast %"class.blink::Member.10"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13HTMLStackItemEE5TraceEPNS_7VisitorEPKv) #13
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZNK5blink20HTMLConstructionSite5TraceEPNS_7VisitorE(%"class.blink::HTMLConstructionSite"* %25, %"class.blink::Visitor"* %1) #13
  %26 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 11
  %27 = bitcast %"class.blink::Member.96"* %26 to i64*
  %28 = load atomic i64, i64* %27 monotonic, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %24
  %31 = inttoptr i64 %28 to i8*
  %32 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, i64 5
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, align 8
  tail call void %35(%"class.blink::Visitor"* %1, i8* nonnull %31, i8* nonnull %31, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18HTMLDocumentParserEE5TraceEPNS_7VisitorEPKv) #13
  br label %36

36:                                               ; preds = %24, %30
  %37 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 12
  %38 = bitcast %"class.blink::Member.64"* %37 to i64*
  %39 = load atomic i64, i64* %38 monotonic, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %36
  %42 = inttoptr i64 %39 to i8*
  %43 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, i64 5
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %45, align 8
  tail call void %46(%"class.blink::Visitor"* %1, i8* nonnull %42, i8* nonnull %42, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #13
  br label %47

47:                                               ; preds = %36, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder6DetachEv(%"class.blink::HTMLTreeBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite6DetachEv(%"class.blink::HTMLConstructionSite"* %2) #13
  ret void
}

declare void @_ZN5blink20HTMLConstructionSite6DetachEv(%"class.blink::HTMLConstructionSite"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink15HTMLTreeBuilder19TakeScriptToProcessERN3WTF12TextPositionE(%"class.blink::HTMLTreeBuilder"* nocapture, %"class.WTF::TextPosition"* nocapture dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 13
  %4 = bitcast %"class.WTF::TextPosition"* %3 to i64*
  %5 = bitcast %"class.WTF::TextPosition"* %1 to i64*
  %6 = load i64, i64* %4, align 4
  store i64 %6, i64* %5, align 4
  store i64 4294967294, i64* %4, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 12, i32 0
  %8 = getelementptr inbounds %"class.blink::MemberBase.65", %"class.blink::MemberBase.65"* %7, i64 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = bitcast %"class.blink::MemberBase.65"* %7 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  ret %"class.blink::Element"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder13ConstructTreeEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional.1323", align 8
  %4 = getelementptr inbounds %"class.absl::optional.1323", %"class.absl::optional.1323"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4) #13
  %5 = bitcast %"class.absl::optional.1323"* %3 to i64*
  store i64 -6148914691236517206, i64* %5, align 8
  store i8 0, i8* %4, align 8
  %6 = getelementptr inbounds %"class.absl::optional.1323", %"class.absl::optional.1323"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %union.anon.1327* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 48, i1 false) #13
  %8 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %25, label %10, !prof !3

10:                                               ; preds = %2
  %11 = tail call %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() #13
  %12 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %11) #13
  %13 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 3
  %14 = bitcast %"class.base::TickClock"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.absl::optional.1323", %"class.absl::optional.1323"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %12, %"class.blink::RuntimeCallStats"** %16, align 8
  %17 = getelementptr inbounds %"class.absl::optional.1323", %"class.absl::optional.1323"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %18 = getelementptr inbounds %"class.absl::optional.1323", %"class.absl::optional.1323"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %19 = getelementptr inbounds %"class.absl::optional.1323", %"class.absl::optional.1323"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %20 = bitcast i64* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #13
  %21 = bitcast %"class.base::TickClock"** %19 to i64*
  store i64 %15, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 2, i64 16
  %23 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 0
  %24 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %23, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallCounter"* %22, %"class.blink::RuntimeCallTimer"* %24) #13
  store %"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallTimer"** %23, align 8
  store i8 1, i8* %4, align 8
  br label %25

25:                                               ; preds = %2, %10
  %26 = call zeroext i1 @_ZN5blink15HTMLTreeBuilder34ShouldProcessTokenInForeignContentEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br i1 %26, label %27, label %28

27:                                               ; preds = %25
  call void @_ZN5blink15HTMLTreeBuilder28ProcessTokenInForeignContentEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %29

28:                                               ; preds = %25
  call void @_ZN5blink15HTMLTreeBuilder12ProcessTokenEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %29

29:                                               ; preds = %28, %27
  %30 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 11, i32 0, i32 0
  %31 = load %"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocumentParser"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %31, i64 0, i32 7, i32 0, i32 0, i32 0
  %33 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %32, align 8
  %34 = icmp eq %"class.blink::HTMLTokenizer"* %33, null
  br i1 %34, label %86, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5, i32 4
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %70, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %41 = load %"class.blink::DocumentFragment"*, %"class.blink::DocumentFragment"** %40, align 8
  %42 = icmp eq %"class.blink::DocumentFragment"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %45 = call zeroext i1 @_ZNK5blink16HTMLElementStack17HasOnlyOneElementEv(%"class.blink::HTMLElementStack"* %44) #13
  br i1 %45, label %46, label %48

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  br label %52

48:                                               ; preds = %43, %39
  %49 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0
  %50 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %50, i64 0, i32 0, i32 0, i32 0
  br label %52

52:                                               ; preds = %46, %48
  %53 = phi %"class.blink::HTMLStackItem"** [ %47, %46 ], [ %51, %48 ]
  %54 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %53, align 8
  %55 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %56 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %55, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %57, %59
  br i1 %60, label %70, label %61

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %54, i64 0, i32 4
  %63 = load i8, i8* %62, align 8, !range !4
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %70

65:                                               ; preds = %61
  %66 = call zeroext i1 @_ZN5blink16HTMLElementStack22IsHTMLIntegrationPointEPNS_13HTMLStackItemE(%"class.blink::HTMLStackItem"* %54) #13
  br i1 %66, label %70, label %67

67:                                               ; preds = %65
  %68 = call zeroext i1 @_ZN5blink16HTMLElementStack28IsMathMLTextIntegrationPointEPNS_13HTMLStackItemE(%"class.blink::HTMLStackItem"* %54) #13
  %69 = xor i1 %68, true
  br label %70

70:                                               ; preds = %61, %52, %65, %67, %35
  %71 = phi i1 [ false, %35 ], [ false, %65 ], [ false, %61 ], [ %69, %67 ], [ false, %52 ]
  %72 = load %"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocumentParser"** %30, align 8
  %73 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %72, i64 0, i32 7, i32 0, i32 0, i32 0
  %74 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, 8
  %78 = or i1 %71, %77
  %79 = zext i1 %78 to i8
  %80 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %74, i64 0, i32 1
  store i8 %79, i8* %80, align 4
  %81 = load %"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocumentParser"** %30, align 8
  %82 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %81, i64 0, i32 7, i32 0, i32 0, i32 0
  %83 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %82, align 8
  %84 = zext i1 %71 to i8
  %85 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %83, i64 0, i32 2
  store i8 %84, i8* %85, align 1
  br label %86

86:                                               ; preds = %29, %70
  %87 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  call void @_ZN5blink20HTMLConstructionSite18ExecuteQueuedTasksEv(%"class.blink::HTMLConstructionSite"* %87) #13
  %88 = load i8, i8* %4, align 8, !range !4
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %96, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.absl::optional.1323", %"class.absl::optional.1323"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %92 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %91, align 8
  %93 = getelementptr inbounds %"class.absl::optional.1323", %"class.absl::optional.1323"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %94 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %93) #13
  %95 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %92, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %94, %"class.blink::RuntimeCallTimer"** %95, align 8
  store i8 0, i8* %4, align 8
  br label %96

96:                                               ; preds = %86, %90
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink15HTMLTreeBuilder34ShouldProcessTokenInForeignContentEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %87, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.blink::DocumentFragment"*, %"class.blink::DocumentFragment"** %7, align 8
  %9 = icmp eq %"class.blink::DocumentFragment"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %12 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack17HasOnlyOneElementEv(%"class.blink::HTMLElementStack"* %11) #13
  br i1 %12, label %13, label %15

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  br label %19

15:                                               ; preds = %10, %6
  %16 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0
  %17 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %17, i64 0, i32 0, i32 0, i32 0
  br label %19

19:                                               ; preds = %13, %15
  %20 = phi %"class.blink::HTMLStackItem"** [ %14, %13 ], [ %18, %15 ]
  %21 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %20, align 8
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %23 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %24, %26
  br i1 %27, label %87, label %28

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %21, i64 0, i32 4
  %30 = load i8, i8* %29, align 8, !range !4
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %87

32:                                               ; preds = %28
  %33 = tail call zeroext i1 @_ZN5blink16HTMLElementStack28IsMathMLTextIntegrationPointEPNS_13HTMLStackItemE(%"class.blink::HTMLStackItem"* %21) #13
  br i1 %33, label %34, label %53

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  switch i32 %36, label %53 [
    i32 2, label %37
    i32 5, label %87
  ]

37:                                               ; preds = %34
  %38 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names10kMglyphTagE to %"class.blink::QualifiedName"**), align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %40, i64 0, i32 3, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %42, %44
  br i1 %45, label %53, label %46

46:                                               ; preds = %37
  %47 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names14kMalignmarkTagE to %"class.blink::QualifiedName"**), align 8
  %48 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %42, %51
  br i1 %52, label %53, label %87

53:                                               ; preds = %46, %37, %34, %32
  %54 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names17kAnnotationXmlTagE to %"class.blink::QualifiedName"**), align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %54, i64 0, i32 0, i32 0
  %56 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %21, i64 0, i32 1, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %58, %60
  br i1 %61, label %62, label %80

62:                                               ; preds = %53
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %64 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %56, i64 0, i32 4, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %63, %65
  br i1 %66, label %67, label %80

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = icmp eq i32 %69, 2
  br i1 %70, label %71, label %80

71:                                               ; preds = %67
  %72 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kSVGTagE to %"class.blink::QualifiedName"**), align 8
  %73 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 3, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %76, %78
  br i1 %79, label %87, label %80

80:                                               ; preds = %53, %71, %67, %62
  %81 = tail call zeroext i1 @_ZN5blink16HTMLElementStack22IsHTMLIntegrationPointEPNS_13HTMLStackItemE(%"class.blink::HTMLStackItem"* %21) #13
  %82 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 0
  %83 = load i32, i32* %82, align 8
  br i1 %81, label %84, label %85

84:                                               ; preds = %80
  switch i32 %83, label %85 [
    i32 2, label %87
    i32 5, label %87
  ]

85:                                               ; preds = %80, %84
  %86 = icmp ne i32 %83, 6
  br label %87

87:                                               ; preds = %46, %28, %84, %84, %34, %19, %71, %85, %2
  %88 = phi i1 [ false, %2 ], [ false, %28 ], [ false, %46 ], [ false, %71 ], [ false, %84 ], [ %86, %85 ], [ false, %19 ], [ false, %34 ], [ false, %84 ]
  ret i1 %88
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder28ProcessTokenInForeignContentEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 5
  %7 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  br i1 %6, label %8, label %68

8:                                                ; preds = %2
  %9 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %14, align 8
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %16 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %15, i64* %16, align 8
  br label %24

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 1
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %23 = bitcast i8** %22 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %23, align 8
  br label %24

24:                                               ; preds = %13, %17
  %25 = phi i32 [ %20, %17 ], [ 0, %13 ]
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %25, i32* %26, align 8
  call void @_ZN5blink20HTMLConstructionSite14InsertTextNodeERKN3WTF10StringViewENS_14WhitespaceModeE(%"class.blink::HTMLConstructionSite"* %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %3, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #13
  %27 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 0
  %28 = load i8, i8* %27, align 8, !range !4
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %658, label %30

30:                                               ; preds = %24
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %658, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %37 = bitcast %"class.WTF::StringImpl"* %36 to i8*
  %38 = zext i32 %35 to i64
  %39 = icmp eq i32 %35, 0
  br i1 %39, label %658, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 1
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %54, label %45

45:                                               ; preds = %40, %51
  %46 = phi i64 [ %52, %51 ], [ 0, %40 ]
  %47 = getelementptr inbounds i8, i8* %37, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = icmp ult i8 %48, 33
  br i1 %49, label %50, label %67

50:                                               ; preds = %45
  switch i8 %48, label %67 [
    i8 32, label %51
    i8 10, label %51
    i8 9, label %51
    i8 13, label %51
    i8 12, label %51
  ]

51:                                               ; preds = %50, %50, %50, %50, %50
  %52 = add nuw nsw i64 %46, 1
  %53 = icmp eq i64 %52, %38
  br i1 %53, label %658, label %45

54:                                               ; preds = %40
  %55 = bitcast %"class.WTF::StringImpl"* %36 to i16*
  br label %56

56:                                               ; preds = %64, %54
  %57 = phi i64 [ %65, %64 ], [ 0, %54 ]
  %58 = getelementptr inbounds i16, i16* %55, i64 %57
  %59 = load i16, i16* %58, align 2
  %60 = icmp ult i16 %59, 33
  br i1 %60, label %61, label %62

61:                                               ; preds = %56
  switch i16 %59, label %67 [
    i16 32, label %64
    i16 10, label %64
    i16 9, label %64
    i16 13, label %64
    i16 12, label %64
  ]

62:                                               ; preds = %56
  %63 = icmp eq i16 %59, -3
  br i1 %63, label %64, label %67

64:                                               ; preds = %62, %61, %61, %61, %61, %61
  %65 = add nuw nsw i64 %57, 1
  %66 = icmp eq i64 %65, %38
  br i1 %66, label %658, label %56

67:                                               ; preds = %50, %45, %62, %61
  store i8 0, i8* %27, align 8
  br label %658

68:                                               ; preds = %2
  %69 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 8, i32 2, i32 2
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %76

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 7, i32 0, i32 0, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %77, label %76

76:                                               ; preds = %72, %68
  tail call void @_ZN5blink20HTMLConstructionSite16FlushPendingTextENS_9FlushModeE(%"class.blink::HTMLConstructionSite"* %7, i32 0) #13
  tail call void @_ZN5blink20HTMLConstructionSite18ExecuteQueuedTasksEv(%"class.blink::HTMLConstructionSite"* %7) #13
  br label %77

77:                                               ; preds = %72, %76
  %78 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %79 = load %"class.blink::DocumentFragment"*, %"class.blink::DocumentFragment"** %78, align 8
  %80 = icmp eq %"class.blink::DocumentFragment"* %79, null
  br i1 %80, label %86, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %83 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack17HasOnlyOneElementEv(%"class.blink::HTMLElementStack"* %82) #13
  br i1 %83, label %84, label %86

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  br label %90

86:                                               ; preds = %81, %77
  %87 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0
  %88 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %88, i64 0, i32 0, i32 0, i32 0
  br label %90

90:                                               ; preds = %84, %86
  %91 = phi %"class.blink::HTMLStackItem"** [ %85, %84 ], [ %89, %86 ]
  %92 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %91, align 8
  %93 = load i32, i32* %4, align 8
  switch i32 %93, label %658 [
    i32 4, label %657
    i32 3, label %547
    i32 2, label %94
  ]

94:                                               ; preds = %90
  %95 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kBTagE to %"class.blink::QualifiedName"**), align 8
  %96 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %95, i64 0, i32 0, i32 0
  %97 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 3, i32 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %99, %101
  br i1 %102, label %513, label %103

103:                                              ; preds = %94
  %104 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kBigTagE to %"class.blink::QualifiedName"**), align 8
  %105 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %104, i64 0, i32 0, i32 0
  %106 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %106, i64 0, i32 3, i32 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %99, %108
  br i1 %109, label %513, label %110

110:                                              ; preds = %103
  %111 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names14kBlockquoteTagE to %"class.blink::QualifiedName"**), align 8
  %112 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %111, i64 0, i32 0, i32 0
  %113 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %113, i64 0, i32 3, i32 0, i32 0, i32 0
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %99, %115
  br i1 %116, label %513, label %117

117:                                              ; preds = %110
  %118 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE to %"class.blink::QualifiedName"**), align 8
  %119 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %118, i64 0, i32 0, i32 0
  %120 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %120, i64 0, i32 3, i32 0, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %99, %122
  br i1 %123, label %513, label %124

124:                                              ; preds = %117
  %125 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE to %"class.blink::QualifiedName"**), align 8
  %126 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %125, i64 0, i32 0, i32 0
  %127 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %127, i64 0, i32 3, i32 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %99, %129
  br i1 %130, label %513, label %131

131:                                              ; preds = %124
  %132 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kCenterTagE to %"class.blink::QualifiedName"**), align 8
  %133 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %132, i64 0, i32 0, i32 0
  %134 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %134, i64 0, i32 3, i32 0, i32 0, i32 0
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %99, %136
  br i1 %137, label %513, label %138

138:                                              ; preds = %131
  %139 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kCodeTagE to %"class.blink::QualifiedName"**), align 8
  %140 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %139, i64 0, i32 0, i32 0
  %141 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %141, i64 0, i32 3, i32 0, i32 0, i32 0
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %99, %143
  br i1 %144, label %513, label %145

145:                                              ; preds = %138
  %146 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kDdTagE to %"class.blink::QualifiedName"**), align 8
  %147 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %146, i64 0, i32 0, i32 0
  %148 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %147, align 8
  %149 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %148, i64 0, i32 3, i32 0, i32 0, i32 0
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %99, %150
  br i1 %151, label %513, label %152

152:                                              ; preds = %145
  %153 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kDivTagE to %"class.blink::QualifiedName"**), align 8
  %154 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %153, i64 0, i32 0, i32 0
  %155 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %154, align 8
  %156 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %155, i64 0, i32 3, i32 0, i32 0, i32 0
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %99, %157
  br i1 %158, label %513, label %159

159:                                              ; preds = %152
  %160 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kDlTagE to %"class.blink::QualifiedName"**), align 8
  %161 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %160, i64 0, i32 0, i32 0
  %162 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %162, i64 0, i32 3, i32 0, i32 0, i32 0
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %99, %164
  br i1 %165, label %513, label %166

166:                                              ; preds = %159
  %167 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kDtTagE to %"class.blink::QualifiedName"**), align 8
  %168 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %167, i64 0, i32 0, i32 0
  %169 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %168, align 8
  %170 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %169, i64 0, i32 3, i32 0, i32 0, i32 0
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %170, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %99, %171
  br i1 %172, label %513, label %173

173:                                              ; preds = %166
  %174 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kEmTagE to %"class.blink::QualifiedName"**), align 8
  %175 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %174, i64 0, i32 0, i32 0
  %176 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %175, align 8
  %177 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %176, i64 0, i32 3, i32 0, i32 0, i32 0
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %99, %178
  br i1 %179, label %513, label %180

180:                                              ; preds = %173
  %181 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kEmbedTagE to %"class.blink::QualifiedName"**), align 8
  %182 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %181, i64 0, i32 0, i32 0
  %183 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %182, align 8
  %184 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %183, i64 0, i32 3, i32 0, i32 0, i32 0
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %184, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %99, %185
  br i1 %186, label %513, label %187

187:                                              ; preds = %180
  %188 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH1TagE to %"class.blink::QualifiedName"**), align 8
  %189 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %188, i64 0, i32 0, i32 0
  %190 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %189, align 8
  %191 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %190, i64 0, i32 3, i32 0, i32 0, i32 0
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %191, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %99, %192
  br i1 %193, label %513, label %194

194:                                              ; preds = %187
  %195 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH2TagE to %"class.blink::QualifiedName"**), align 8
  %196 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %195, i64 0, i32 0, i32 0
  %197 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %196, align 8
  %198 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %197, i64 0, i32 3, i32 0, i32 0, i32 0
  %199 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %198, align 8
  %200 = icmp eq %"class.WTF::StringImpl"* %99, %199
  br i1 %200, label %513, label %201

201:                                              ; preds = %194
  %202 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH3TagE to %"class.blink::QualifiedName"**), align 8
  %203 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %202, i64 0, i32 0, i32 0
  %204 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %203, align 8
  %205 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %204, i64 0, i32 3, i32 0, i32 0, i32 0
  %206 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %205, align 8
  %207 = icmp eq %"class.WTF::StringImpl"* %99, %206
  br i1 %207, label %513, label %208

208:                                              ; preds = %201
  %209 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH4TagE to %"class.blink::QualifiedName"**), align 8
  %210 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %209, i64 0, i32 0, i32 0
  %211 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %210, align 8
  %212 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %211, i64 0, i32 3, i32 0, i32 0, i32 0
  %213 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %212, align 8
  %214 = icmp eq %"class.WTF::StringImpl"* %99, %213
  br i1 %214, label %513, label %215

215:                                              ; preds = %208
  %216 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH5TagE to %"class.blink::QualifiedName"**), align 8
  %217 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %216, i64 0, i32 0, i32 0
  %218 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %217, align 8
  %219 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %218, i64 0, i32 3, i32 0, i32 0, i32 0
  %220 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  %221 = icmp eq %"class.WTF::StringImpl"* %99, %220
  br i1 %221, label %513, label %222

222:                                              ; preds = %215
  %223 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH6TagE to %"class.blink::QualifiedName"**), align 8
  %224 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %223, i64 0, i32 0, i32 0
  %225 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %224, align 8
  %226 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %225, i64 0, i32 3, i32 0, i32 0, i32 0
  %227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %226, align 8
  %228 = icmp eq %"class.WTF::StringImpl"* %99, %227
  br i1 %228, label %513, label %229

229:                                              ; preds = %222
  %230 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHeadTagE to %"class.blink::QualifiedName"**), align 8
  %231 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %230, i64 0, i32 0, i32 0
  %232 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %231, align 8
  %233 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %232, i64 0, i32 3, i32 0, i32 0, i32 0
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %233, align 8
  %235 = icmp eq %"class.WTF::StringImpl"* %99, %234
  br i1 %235, label %513, label %236

236:                                              ; preds = %229
  %237 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kHrTagE to %"class.blink::QualifiedName"**), align 8
  %238 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %237, i64 0, i32 0, i32 0
  %239 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %238, align 8
  %240 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %239, i64 0, i32 3, i32 0, i32 0, i32 0
  %241 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %240, align 8
  %242 = icmp eq %"class.WTF::StringImpl"* %99, %241
  br i1 %242, label %513, label %243

243:                                              ; preds = %236
  %244 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kITagE to %"class.blink::QualifiedName"**), align 8
  %245 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %244, i64 0, i32 0, i32 0
  %246 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %245, align 8
  %247 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %246, i64 0, i32 3, i32 0, i32 0, i32 0
  %248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %247, align 8
  %249 = icmp eq %"class.WTF::StringImpl"* %99, %248
  br i1 %249, label %513, label %250

250:                                              ; preds = %243
  %251 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE to %"class.blink::QualifiedName"**), align 8
  %252 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %251, i64 0, i32 0, i32 0
  %253 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %252, align 8
  %254 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %253, i64 0, i32 3, i32 0, i32 0, i32 0
  %255 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %254, align 8
  %256 = icmp eq %"class.WTF::StringImpl"* %99, %255
  br i1 %256, label %513, label %257

257:                                              ; preds = %250
  %258 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kLiTagE to %"class.blink::QualifiedName"**), align 8
  %259 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %258, i64 0, i32 0, i32 0
  %260 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %259, align 8
  %261 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %260, i64 0, i32 3, i32 0, i32 0, i32 0
  %262 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %261, align 8
  %263 = icmp eq %"class.WTF::StringImpl"* %99, %262
  br i1 %263, label %513, label %264

264:                                              ; preds = %257
  %265 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kListingTagE to %"class.blink::QualifiedName"**), align 8
  %266 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %265, i64 0, i32 0, i32 0
  %267 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %266, align 8
  %268 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %267, i64 0, i32 3, i32 0, i32 0, i32 0
  %269 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %268, align 8
  %270 = icmp eq %"class.WTF::StringImpl"* %99, %269
  br i1 %270, label %513, label %271

271:                                              ; preds = %264
  %272 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMenuTagE to %"class.blink::QualifiedName"**), align 8
  %273 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %272, i64 0, i32 0, i32 0
  %274 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %273, align 8
  %275 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %274, i64 0, i32 3, i32 0, i32 0, i32 0
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  %277 = icmp eq %"class.WTF::StringImpl"* %99, %276
  br i1 %277, label %513, label %278

278:                                              ; preds = %271
  %279 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMetaTagE to %"class.blink::QualifiedName"**), align 8
  %280 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %279, i64 0, i32 0, i32 0
  %281 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %280, align 8
  %282 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %281, i64 0, i32 3, i32 0, i32 0, i32 0
  %283 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %282, align 8
  %284 = icmp eq %"class.WTF::StringImpl"* %99, %283
  br i1 %284, label %513, label %285

285:                                              ; preds = %278
  %286 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kNobrTagE to %"class.blink::QualifiedName"**), align 8
  %287 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %286, i64 0, i32 0, i32 0
  %288 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %287, align 8
  %289 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %288, i64 0, i32 3, i32 0, i32 0, i32 0
  %290 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %291 = icmp eq %"class.WTF::StringImpl"* %99, %290
  br i1 %291, label %513, label %292

292:                                              ; preds = %285
  %293 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kOlTagE to %"class.blink::QualifiedName"**), align 8
  %294 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %293, i64 0, i32 0, i32 0
  %295 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %294, align 8
  %296 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %295, i64 0, i32 3, i32 0, i32 0, i32 0
  %297 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %296, align 8
  %298 = icmp eq %"class.WTF::StringImpl"* %99, %297
  br i1 %298, label %513, label %299

299:                                              ; preds = %292
  %300 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kPTagE to %"class.blink::QualifiedName"**), align 8
  %301 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %300, i64 0, i32 0, i32 0
  %302 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %301, align 8
  %303 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %302, i64 0, i32 3, i32 0, i32 0, i32 0
  %304 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %303, align 8
  %305 = icmp eq %"class.WTF::StringImpl"* %99, %304
  br i1 %305, label %513, label %306

306:                                              ; preds = %299
  %307 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kPreTagE to %"class.blink::QualifiedName"**), align 8
  %308 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %307, i64 0, i32 0, i32 0
  %309 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %308, align 8
  %310 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %309, i64 0, i32 3, i32 0, i32 0, i32 0
  %311 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %310, align 8
  %312 = icmp eq %"class.WTF::StringImpl"* %99, %311
  br i1 %312, label %513, label %313

313:                                              ; preds = %306
  %314 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kRubyTagE to %"class.blink::QualifiedName"**), align 8
  %315 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %314, i64 0, i32 0, i32 0
  %316 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %315, align 8
  %317 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %316, i64 0, i32 3, i32 0, i32 0, i32 0
  %318 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %317, align 8
  %319 = icmp eq %"class.WTF::StringImpl"* %99, %318
  br i1 %319, label %513, label %320

320:                                              ; preds = %313
  %321 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kSTagE to %"class.blink::QualifiedName"**), align 8
  %322 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %321, i64 0, i32 0, i32 0
  %323 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %322, align 8
  %324 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %323, i64 0, i32 3, i32 0, i32 0, i32 0
  %325 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %324, align 8
  %326 = icmp eq %"class.WTF::StringImpl"* %99, %325
  br i1 %326, label %513, label %327

327:                                              ; preds = %320
  %328 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kSmallTagE to %"class.blink::QualifiedName"**), align 8
  %329 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %328, i64 0, i32 0, i32 0
  %330 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %329, align 8
  %331 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %330, i64 0, i32 3, i32 0, i32 0, i32 0
  %332 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %331, align 8
  %333 = icmp eq %"class.WTF::StringImpl"* %99, %332
  br i1 %333, label %513, label %334

334:                                              ; preds = %327
  %335 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSpanTagE to %"class.blink::QualifiedName"**), align 8
  %336 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %335, i64 0, i32 0, i32 0
  %337 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %336, align 8
  %338 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %337, i64 0, i32 3, i32 0, i32 0, i32 0
  %339 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %338, align 8
  %340 = icmp eq %"class.WTF::StringImpl"* %99, %339
  br i1 %340, label %513, label %341

341:                                              ; preds = %334
  %342 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kStrongTagE to %"class.blink::QualifiedName"**), align 8
  %343 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %342, i64 0, i32 0, i32 0
  %344 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %343, align 8
  %345 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %344, i64 0, i32 3, i32 0, i32 0, i32 0
  %346 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %345, align 8
  %347 = icmp eq %"class.WTF::StringImpl"* %99, %346
  br i1 %347, label %513, label %348

348:                                              ; preds = %341
  %349 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kStrikeTagE to %"class.blink::QualifiedName"**), align 8
  %350 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %350, align 8
  %352 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %351, i64 0, i32 3, i32 0, i32 0, i32 0
  %353 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %352, align 8
  %354 = icmp eq %"class.WTF::StringImpl"* %99, %353
  br i1 %354, label %513, label %355

355:                                              ; preds = %348
  %356 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kSubTagE to %"class.blink::QualifiedName"**), align 8
  %357 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %356, i64 0, i32 0, i32 0
  %358 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %357, align 8
  %359 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %358, i64 0, i32 3, i32 0, i32 0, i32 0
  %360 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %359, align 8
  %361 = icmp eq %"class.WTF::StringImpl"* %99, %360
  br i1 %361, label %513, label %362

362:                                              ; preds = %355
  %363 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kSupTagE to %"class.blink::QualifiedName"**), align 8
  %364 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %363, i64 0, i32 0, i32 0
  %365 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %364, align 8
  %366 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %365, i64 0, i32 3, i32 0, i32 0, i32 0
  %367 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %366, align 8
  %368 = icmp eq %"class.WTF::StringImpl"* %99, %367
  br i1 %368, label %513, label %369

369:                                              ; preds = %362
  %370 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE to %"class.blink::QualifiedName"**), align 8
  %371 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %370, i64 0, i32 0, i32 0
  %372 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %371, align 8
  %373 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %372, i64 0, i32 3, i32 0, i32 0, i32 0
  %374 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %373, align 8
  %375 = icmp eq %"class.WTF::StringImpl"* %99, %374
  br i1 %375, label %513, label %376

376:                                              ; preds = %369
  %377 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTtTagE to %"class.blink::QualifiedName"**), align 8
  %378 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %377, i64 0, i32 0, i32 0
  %379 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %378, align 8
  %380 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %379, i64 0, i32 3, i32 0, i32 0, i32 0
  %381 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %380, align 8
  %382 = icmp eq %"class.WTF::StringImpl"* %99, %381
  br i1 %382, label %513, label %383

383:                                              ; preds = %376
  %384 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kUTagE to %"class.blink::QualifiedName"**), align 8
  %385 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %384, i64 0, i32 0, i32 0
  %386 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %385, align 8
  %387 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %386, i64 0, i32 3, i32 0, i32 0, i32 0
  %388 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %387, align 8
  %389 = icmp eq %"class.WTF::StringImpl"* %99, %388
  br i1 %389, label %513, label %390

390:                                              ; preds = %383
  %391 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kUlTagE to %"class.blink::QualifiedName"**), align 8
  %392 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %391, i64 0, i32 0, i32 0
  %393 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %392, align 8
  %394 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %393, i64 0, i32 3, i32 0, i32 0, i32 0
  %395 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %394, align 8
  %396 = icmp eq %"class.WTF::StringImpl"* %99, %395
  br i1 %396, label %513, label %397

397:                                              ; preds = %390
  %398 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kVarTagE to %"class.blink::QualifiedName"**), align 8
  %399 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %398, i64 0, i32 0, i32 0
  %400 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %399, align 8
  %401 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %400, i64 0, i32 3, i32 0, i32 0, i32 0
  %402 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %401, align 8
  %403 = icmp eq %"class.WTF::StringImpl"* %99, %402
  br i1 %403, label %513, label %404

404:                                              ; preds = %397
  %405 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kFontTagE to %"class.blink::QualifiedName"**), align 8
  %406 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %405, i64 0, i32 0, i32 0
  %407 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %406, align 8
  %408 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %407, i64 0, i32 3, i32 0, i32 0, i32 0
  %409 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %408, align 8
  %410 = icmp eq %"class.WTF::StringImpl"* %99, %409
  br i1 %410, label %411, label %515

411:                                              ; preds = %404
  %412 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 6
  %413 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 6, i32 0, i32 0, i32 2
  %414 = load i32, i32* %413, align 4
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %515, label %416

416:                                              ; preds = %411
  %417 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kColorAttrE, align 8
  %418 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %417, i64 0, i32 0, i32 0
  br label %419

419:                                              ; preds = %438, %416
  %420 = phi i32 [ 0, %416 ], [ %439, %438 ]
  %421 = tail call dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %412, i32 %420) #13
  %422 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %421, i64 0, i32 0, i32 0, i32 0
  %423 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %422, align 8
  %424 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %418, align 8
  %425 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %423, %424
  br i1 %425, label %442, label %426

426:                                              ; preds = %419
  %427 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %423, i64 0, i32 3, i32 0, i32 0, i32 0
  %428 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %427, align 8
  %429 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %424, i64 0, i32 3, i32 0, i32 0, i32 0
  %430 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %429, align 8
  %431 = icmp eq %"class.WTF::StringImpl"* %428, %430
  br i1 %431, label %432, label %438

432:                                              ; preds = %426
  %433 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %423, i64 0, i32 4, i32 0, i32 0, i32 0
  %434 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %433, align 8
  %435 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %424, i64 0, i32 4, i32 0, i32 0, i32 0
  %436 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %435, align 8
  %437 = icmp eq %"class.WTF::StringImpl"* %434, %436
  br i1 %437, label %442, label %438

438:                                              ; preds = %432, %426
  %439 = add nuw i32 %420, 1
  %440 = load i32, i32* %413, align 4
  %441 = icmp ult i32 %439, %440
  br i1 %441, label %419, label %447

442:                                              ; preds = %419, %432
  %443 = tail call dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %412, i32 %420) #13
  %444 = icmp eq %"class.blink::Attribute"* %443, null
  br i1 %444, label %445, label %513

445:                                              ; preds = %442
  %446 = load i32, i32* %413, align 4
  br label %447

447:                                              ; preds = %438, %445
  %448 = phi i32 [ %446, %445 ], [ %440, %438 ]
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %515, label %450

450:                                              ; preds = %447
  %451 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kFaceAttrE, align 8
  %452 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %451, i64 0, i32 0, i32 0
  br label %453

453:                                              ; preds = %472, %450
  %454 = phi i32 [ 0, %450 ], [ %473, %472 ]
  %455 = tail call dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %412, i32 %454) #13
  %456 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %455, i64 0, i32 0, i32 0, i32 0
  %457 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %456, align 8
  %458 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %452, align 8
  %459 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %457, %458
  br i1 %459, label %476, label %460

460:                                              ; preds = %453
  %461 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %457, i64 0, i32 3, i32 0, i32 0, i32 0
  %462 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %461, align 8
  %463 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %458, i64 0, i32 3, i32 0, i32 0, i32 0
  %464 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %463, align 8
  %465 = icmp eq %"class.WTF::StringImpl"* %462, %464
  br i1 %465, label %466, label %472

466:                                              ; preds = %460
  %467 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %457, i64 0, i32 4, i32 0, i32 0, i32 0
  %468 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %467, align 8
  %469 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %458, i64 0, i32 4, i32 0, i32 0, i32 0
  %470 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %469, align 8
  %471 = icmp eq %"class.WTF::StringImpl"* %468, %470
  br i1 %471, label %476, label %472

472:                                              ; preds = %466, %460
  %473 = add nuw i32 %454, 1
  %474 = load i32, i32* %413, align 4
  %475 = icmp ult i32 %473, %474
  br i1 %475, label %453, label %481

476:                                              ; preds = %453, %466
  %477 = tail call dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %412, i32 %454) #13
  %478 = icmp eq %"class.blink::Attribute"* %477, null
  br i1 %478, label %479, label %513

479:                                              ; preds = %476
  %480 = load i32, i32* %413, align 4
  br label %481

481:                                              ; preds = %472, %479
  %482 = phi i32 [ %480, %479 ], [ %474, %472 ]
  %483 = icmp eq i32 %482, 0
  br i1 %483, label %515, label %484

484:                                              ; preds = %481
  %485 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kSizeAttrE, align 8
  %486 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %485, i64 0, i32 0, i32 0
  br label %487

487:                                              ; preds = %506, %484
  %488 = phi i32 [ 0, %484 ], [ %507, %506 ]
  %489 = tail call dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %412, i32 %488) #13
  %490 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %489, i64 0, i32 0, i32 0, i32 0
  %491 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %490, align 8
  %492 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %486, align 8
  %493 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %491, %492
  br i1 %493, label %510, label %494

494:                                              ; preds = %487
  %495 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %491, i64 0, i32 3, i32 0, i32 0, i32 0
  %496 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %495, align 8
  %497 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %492, i64 0, i32 3, i32 0, i32 0, i32 0
  %498 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %497, align 8
  %499 = icmp eq %"class.WTF::StringImpl"* %496, %498
  br i1 %499, label %500, label %506

500:                                              ; preds = %494
  %501 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %491, i64 0, i32 4, i32 0, i32 0, i32 0
  %502 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %501, align 8
  %503 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %492, i64 0, i32 4, i32 0, i32 0, i32 0
  %504 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %503, align 8
  %505 = icmp eq %"class.WTF::StringImpl"* %502, %504
  br i1 %505, label %510, label %506

506:                                              ; preds = %500, %494
  %507 = add nuw i32 %488, 1
  %508 = load i32, i32* %413, align 4
  %509 = icmp ult i32 %507, %508
  br i1 %509, label %487, label %515

510:                                              ; preds = %487, %500
  %511 = tail call dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %412, i32 %488) #13
  %512 = icmp eq %"class.blink::Attribute"* %511, null
  br i1 %512, label %515, label %513

513:                                              ; preds = %187, %194, %201, %208, %215, %510, %476, %442, %397, %390, %383, %376, %369, %362, %355, %348, %341, %334, %327, %320, %313, %306, %299, %292, %285, %278, %271, %264, %257, %250, %243, %236, %229, %222, %180, %173, %166, %159, %152, %145, %138, %131, %124, %117, %110, %103, %94
  %514 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  tail call void @_ZN5blink16HTMLElementStack33PopUntilForeignContentScopeMarkerEv(%"class.blink::HTMLElementStack"* %514) #13
  tail call void @_ZN5blink15HTMLTreeBuilder15ProcessStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %658

515:                                              ; preds = %506, %447, %411, %481, %510, %404
  %516 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %517 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %516, i64 0, i32 0, i32 0
  %518 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %517, align 8
  %519 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %520 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %518, i64 0, i32 3, i32 0, i32 0, i32 0
  %521 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %520, align 8
  %522 = icmp eq %"class.WTF::StringImpl"* %519, %521
  br i1 %522, label %523, label %529

523:                                              ; preds = %515
  %524 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 11, i32 0, i32 0
  %525 = load %"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocumentParser"** %524, align 8
  %526 = tail call i64 @_ZNK5blink18HTMLDocumentParser15GetTextPositionEv(%"class.blink::HTMLDocumentParser"* %525) #13
  %527 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 13
  %528 = bitcast %"class.WTF::TextPosition"* %527 to i64*
  store i64 %526, i64* %528, align 8
  br label %529

529:                                              ; preds = %523, %515
  %530 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %92, i64 0, i32 3
  %531 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink12mathml_names13kNamespaceURIE, align 8
  %532 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %530, i64 0, i32 0, i32 0, i32 0
  %533 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %532, align 8
  %534 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %531, i64 0, i32 0, i32 0, i32 0
  %535 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %534, align 8
  %536 = icmp eq %"class.WTF::StringImpl"* %533, %535
  br i1 %536, label %537, label %539

537:                                              ; preds = %529
  tail call fastcc void @_ZN5blinkL22AdjustMathMLAttributesEPNS_15AtomicHTMLTokenE(%"class.blink::AtomicHTMLToken"* %1)
  %538 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %532, align 8
  br label %539

539:                                              ; preds = %537, %529
  %540 = phi %"class.WTF::StringImpl"* [ %538, %537 ], [ %533, %529 ]
  %541 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink9svg_names13kNamespaceURIE, align 8
  %542 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %541, i64 0, i32 0, i32 0, i32 0
  %543 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %542, align 8
  %544 = icmp eq %"class.WTF::StringImpl"* %540, %543
  br i1 %544, label %545, label %546

545:                                              ; preds = %539
  tail call fastcc void @_ZN5blinkL20AdjustSVGTagNameCaseEPNS_15AtomicHTMLTokenE(%"class.blink::AtomicHTMLToken"* %1)
  tail call fastcc void @_ZN5blinkL19AdjustSVGAttributesEPNS_15AtomicHTMLTokenE(%"class.blink::AtomicHTMLToken"* %1)
  br label %546

546:                                              ; preds = %545, %539
  tail call fastcc void @_ZN5blinkL23AdjustForeignAttributesEPNS_15AtomicHTMLTokenE(%"class.blink::AtomicHTMLToken"* %1)
  tail call void @_ZN5blink20HTMLConstructionSite20InsertForeignElementEPNS_15AtomicHTMLTokenERKN3WTF12AtomicStringE(%"class.blink::HTMLConstructionSite"* %7, %"class.blink::AtomicHTMLToken"* %1, %"class.WTF::AtomicString"* dereferenceable(8) %530) #13
  br label %658

547:                                              ; preds = %90
  %548 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink9svg_names13kNamespaceURIE, align 8
  %549 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %92, i64 0, i32 3, i32 0, i32 0, i32 0
  %550 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %549, align 8
  %551 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %548, i64 0, i32 0, i32 0, i32 0
  %552 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %551, align 8
  %553 = icmp eq %"class.WTF::StringImpl"* %550, %552
  br i1 %553, label %554, label %555

554:                                              ; preds = %547
  tail call fastcc void @_ZN5blinkL20AdjustSVGTagNameCaseEPNS_15AtomicHTMLTokenE(%"class.blink::AtomicHTMLToken"* %1)
  br label %555

555:                                              ; preds = %554, %547
  %556 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %557 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %556, i64 0, i32 0, i32 0
  %558 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %557, align 8
  %559 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %560 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %559, align 8
  %561 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %558, i64 0, i32 3, i32 0, i32 0, i32 0
  %562 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %561, align 8
  %563 = icmp eq %"class.WTF::StringImpl"* %560, %562
  br i1 %563, label %564, label %596

564:                                              ; preds = %555
  %565 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0
  %566 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %565, align 8
  %567 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %566, i64 0, i32 0, i32 0, i32 0
  %568 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %567, align 8
  %569 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %568, i64 0, i32 1, i32 0, i32 0, i32 0
  %570 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %569, align 8
  %571 = icmp eq %"class.WTF::StringImpl"* %570, %560
  %572 = bitcast %"class.blink::HTMLStackItem"* %568 to %"class.blink::Element"**
  br i1 %571, label %573, label %596

573:                                              ; preds = %564
  %574 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %568, i64 0, i32 3, i32 0, i32 0, i32 0
  %575 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %574, align 8
  %576 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %558, i64 0, i32 4, i32 0, i32 0, i32 0
  %577 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %576, align 8
  %578 = icmp eq %"class.WTF::StringImpl"* %575, %577
  br i1 %578, label %579, label %596

579:                                              ; preds = %573
  %580 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 9
  %581 = load i32, i32* %580, align 8
  %582 = add i32 %581, -1
  %583 = icmp ult i32 %582, 2
  br i1 %583, label %584, label %594

584:                                              ; preds = %579
  %585 = load %"class.blink::Element"*, %"class.blink::Element"** %572, align 8
  %586 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 12
  %587 = ptrtoint %"class.blink::Element"* %585 to i64
  %588 = bitcast %"class.blink::Member.64"* %586 to i64*
  store atomic i64 %587, i64* %588 monotonic, align 8
  %589 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %590 = icmp eq i32 %589, 0
  br i1 %590, label %594, label %591

591:                                              ; preds = %584
  %592 = bitcast %"class.blink::Element"* %585 to i8*
  %593 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %592) #13
  br label %594

594:                                              ; preds = %591, %584, %579
  %595 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  tail call void @_ZN5blink16HTMLElementStack3PopEv(%"class.blink::HTMLElementStack"* %595) #13
  br label %658

596:                                              ; preds = %564, %573, %555
  %597 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE to %"class.blink::QualifiedName"**), align 8
  %598 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %597, i64 0, i32 0, i32 0
  %599 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %598, align 8
  %600 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %599, i64 0, i32 3, i32 0, i32 0, i32 0
  %601 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %600, align 8
  %602 = icmp eq %"class.WTF::StringImpl"* %560, %601
  br i1 %602, label %610, label %603

603:                                              ; preds = %596
  %604 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kPTagE to %"class.blink::QualifiedName"**), align 8
  %605 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %604, i64 0, i32 0, i32 0
  %606 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %605, align 8
  %607 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %606, i64 0, i32 3, i32 0, i32 0, i32 0
  %608 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %607, align 8
  %609 = icmp eq %"class.WTF::StringImpl"* %560, %608
  br i1 %609, label %610, label %612

610:                                              ; preds = %603, %596
  %611 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  tail call void @_ZN5blink16HTMLElementStack33PopUntilForeignContentScopeMarkerEv(%"class.blink::HTMLElementStack"* %611) #13
  tail call void @_ZN5blink15HTMLTreeBuilder13ProcessEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %658

612:                                              ; preds = %603
  %613 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0
  %614 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %613, align 8
  %615 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %614, i64 0, i32 0, i32 0, i32 0
  %616 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %615, align 8
  %617 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %618 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %616, i64 0, i32 3, i32 0, i32 0, i32 0
  %619 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %618, align 8
  %620 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %617, i64 0, i32 0, i32 0, i32 0
  %621 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %620, align 8
  %622 = icmp eq %"class.WTF::StringImpl"* %619, %621
  br i1 %622, label %656, label %623

623:                                              ; preds = %612
  %624 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %616, i64 0, i32 4
  %625 = load i8, i8* %624, align 8, !range !4
  %626 = icmp eq i8 %625, 0
  br i1 %626, label %627, label %656

627:                                              ; preds = %623
  %628 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %629 = tail call %"class.blink::HTMLElementStack::ElementRecord"* @_ZNK5blink16HTMLElementStack9TopRecordEv(%"class.blink::HTMLElementStack"* %628) #13
  %630 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %559, align 8
  %631 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %629, i64 0, i32 0, i32 0, i32 0
  %632 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %631, align 8
  br label %633

633:                                              ; preds = %652, %627
  %634 = phi %"class.blink::HTMLStackItem"* [ %632, %627 ], [ %647, %652 ]
  %635 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %629, %627 ], [ %645, %652 ]
  %636 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %634, i64 0, i32 1, i32 0, i32 0, i32 0
  %637 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %636, align 8
  %638 = icmp eq %"class.WTF::StringImpl"* %637, %630
  br i1 %638, label %639, label %643

639:                                              ; preds = %633
  %640 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %635 to %"class.blink::Element"***
  %641 = load %"class.blink::Element"**, %"class.blink::Element"*** %640, align 8
  %642 = load %"class.blink::Element"*, %"class.blink::Element"** %641, align 8
  tail call void @_ZN5blink16HTMLElementStack14PopUntilPoppedEPNS_7ElementE(%"class.blink::HTMLElementStack"* %628, %"class.blink::Element"* %642) #13
  br label %658

643:                                              ; preds = %633
  %644 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %635, i64 0, i32 1, i32 0, i32 0
  %645 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %644, align 8
  %646 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %645, i64 0, i32 0, i32 0, i32 0
  %647 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %646, align 8
  %648 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %647, i64 0, i32 3, i32 0, i32 0, i32 0
  %649 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %648, align 8
  %650 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %620, align 8
  %651 = icmp eq %"class.WTF::StringImpl"* %649, %650
  br i1 %651, label %656, label %652

652:                                              ; preds = %643
  %653 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %647, i64 0, i32 4
  %654 = load i8, i8* %653, align 8, !range !4
  %655 = icmp eq i8 %654, 0
  br i1 %655, label %633, label %656

656:                                              ; preds = %652, %643, %623, %612
  tail call void @_ZN5blink15HTMLTreeBuilder13ProcessEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %658

657:                                              ; preds = %90
  tail call void @_ZN5blink20HTMLConstructionSite13InsertCommentEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %7, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %658

658:                                              ; preds = %51, %64, %30, %33, %24, %513, %594, %610, %639, %90, %657, %656, %546, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder12ProcessTokenEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 5
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @_ZN5blink15HTMLTreeBuilder16ProcessCharacterEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %37

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 8, i32 2, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 7, i32 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %12, %7
  tail call void @_ZN5blink20HTMLConstructionSite16FlushPendingTextENS_9FlushModeE(%"class.blink::HTMLConstructionSite"* %8, i32 0) #13
  tail call void @_ZN5blink20HTMLConstructionSite18ExecuteQueuedTasksEv(%"class.blink::HTMLConstructionSite"* %8) #13
  br label %17

17:                                               ; preds = %12, %16
  %18 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 8
  store i8 0, i8* %18, align 8
  %19 = load i32, i32* %3, align 8
  switch i32 %19, label %37 [
    i32 6, label %36
    i32 4, label %28
    i32 1, label %20
    i32 2, label %26
    i32 3, label %27
  ]

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  br label %22

22:                                               ; preds = %25, %20
  %23 = load i32, i32* %21, align 8
  switch i32 %23, label %37 [
    i32 0, label %24
    i32 10, label %25
  ]

24:                                               ; preds = %22
  tail call void @_ZN5blink20HTMLConstructionSite13InsertDoctypeEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %8, %"class.blink::AtomicHTMLToken"* %1) #13
  store i32 1, i32* %21, align 8
  br label %37

25:                                               ; preds = %22
  tail call void @_ZN5blink15HTMLTreeBuilder21DefaultForInTableTextEv(%"class.blink::HTMLTreeBuilder"* %0) #13
  br label %22

26:                                               ; preds = %17
  tail call void @_ZN5blink15HTMLTreeBuilder15ProcessStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %37

27:                                               ; preds = %17
  tail call void @_ZN5blink15HTMLTreeBuilder13ProcessEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %37

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  br label %30

30:                                               ; preds = %34, %28
  %31 = load i32, i32* %29, align 8
  switch i32 %31, label %35 [
    i32 0, label %32
    i32 1, label %32
    i32 21, label %32
    i32 22, label %32
    i32 18, label %33
    i32 10, label %34
  ]

32:                                               ; preds = %30, %30, %30, %30
  tail call void @_ZN5blink20HTMLConstructionSite23InsertCommentOnDocumentEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %8, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %37

33:                                               ; preds = %30
  tail call void @_ZN5blink20HTMLConstructionSite30InsertCommentOnHTMLHtmlElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %8, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %37

34:                                               ; preds = %30
  tail call void @_ZN5blink15HTMLTreeBuilder21DefaultForInTableTextEv(%"class.blink::HTMLTreeBuilder"* %0) #13
  br label %30

35:                                               ; preds = %30
  tail call void @_ZN5blink20HTMLConstructionSite13InsertCommentEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %8, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %37

36:                                               ; preds = %17
  tail call void @_ZN5blink15HTMLTreeBuilder16ProcessEndOfFileEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %37

37:                                               ; preds = %22, %35, %33, %32, %24, %6, %17, %36, %27, %26
  ret void
}

declare zeroext i1 @_ZN5blink16HTMLElementStack22IsHTMLIntegrationPointEPNS_13HTMLStackItemE(%"class.blink::HTMLStackItem"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink16HTMLElementStack28IsMathMLTextIntegrationPointEPNS_13HTMLStackItemE(%"class.blink::HTMLStackItem"*) local_unnamed_addr #1

declare void @_ZN5blink20HTMLConstructionSite18ExecuteQueuedTasksEv(%"class.blink::HTMLConstructionSite"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder16ProcessCharacterEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer", align 8
  %4 = bitcast %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer", %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer", %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer", %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer"* %3, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 2, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer", %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer"* %3, i64 0, i32 1
  %10 = bitcast i32* %9 to i64*
  store i64 -6148914691236517206, i64* %10, align 8
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %5, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  store i32 0, i32* %6, align 8
  br label %38

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %14
  store i32 0, i32* %6, align 8
  br label %34

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #13
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !2

29:                                               ; preds = %20
  tail call void @llvm.trap() #13
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  store i32 0, i32* %6, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %19, %30
  %35 = phi %"class.WTF::StringImpl"* [ %11, %19 ], [ %32, %30 ]
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  br label %38

38:                                               ; preds = %13, %30, %34
  %39 = phi i32 [ %37, %34 ], [ 0, %30 ], [ 0, %13 ]
  store i32 %39, i32* %7, align 4
  call void @_ZN5blink15HTMLTreeBuilder22ProcessCharacterBufferERNS0_20CharacterTokenBufferE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer"* nonnull dereferenceable(16) %3)
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #13
  br label %55

55:                                               ; preds = %38, %51, %54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder19ProcessDoctypeTokenEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  br label %4

4:                                                ; preds = %8, %2
  %5 = load i32, i32* %3, align 8
  switch i32 %5, label %9 [
    i32 0, label %6
    i32 10, label %8
  ]

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite13InsertDoctypeEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %7, %"class.blink::AtomicHTMLToken"* %1) #13
  store i32 1, i32* %3, align 8
  br label %9

8:                                                ; preds = %4
  tail call void @_ZN5blink15HTMLTreeBuilder21DefaultForInTableTextEv(%"class.blink::HTMLTreeBuilder"* %0)
  br label %4

9:                                                ; preds = %4, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder15ProcessStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::AtomicHTMLToken", align 8
  %4 = alloca %"class.WTF::Vector", align 8
  %5 = alloca %"class.blink::AtomicHTMLToken", align 8
  %6 = alloca %"class.WTF::Vector", align 8
  %7 = alloca %"class.blink::AtomicHTMLToken", align 8
  %8 = alloca %"class.WTF::Vector", align 8
  %9 = alloca %"class.blink::AtomicHTMLToken", align 8
  %10 = alloca %"class.WTF::Vector", align 8
  %11 = alloca %"class.blink::AtomicHTMLToken", align 8
  %12 = alloca %"class.WTF::Vector", align 8
  %13 = alloca %"class.blink::AtomicHTMLToken", align 8
  %14 = alloca %"class.WTF::Vector", align 8
  %15 = alloca %"class.blink::AtomicHTMLToken", align 8
  %16 = alloca %"class.WTF::Vector", align 8
  %17 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  %18 = load i32, i32* %17, align 8
  switch i32 %18, label %1494 [
    i32 0, label %24
    i32 1, label %26
    i32 2, label %19
    i32 3, label %62
    i32 5, label %65
    i32 7, label %184
    i32 9, label %185
    i32 11, label %186
    i32 12, label %261
    i32 13, label %328
    i32 14, label %482
    i32 15, label %556
    i32 18, label %636
    i32 21, label %636
    i32 4, label %651
    i32 19, label %717
    i32 20, label %758
    i32 22, label %758
    i32 17, label %781
    i32 16, label %21
    i32 10, label %1382
    i32 6, label %1383
  ]

19:                                               ; preds = %2
  %20 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  br label %38

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  br label %910

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite27SetDefaultCompatibilityModeEv(%"class.blink::HTMLConstructionSite"* %25) #13
  store i32 1, i32* %17, align 8
  br label %26

26:                                               ; preds = %2, %24
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %28 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %29, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %31, %33
  br i1 %34, label %35, label %37

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite32InsertHTMLHtmlStartTagBeforeHTMLEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %36, %"class.blink::AtomicHTMLToken"* %1) #13
  store i32 2, i32* %17, align 8
  br label %1494

37:                                               ; preds = %26
  tail call void @_ZN5blink15HTMLTreeBuilder20DefaultForBeforeHTMLEv(%"class.blink::HTMLTreeBuilder"* %0)
  br label %38

38:                                               ; preds = %19, %37
  %39 = phi %"class.blink::QualifiedName"* [ %20, %19 ], [ %27, %37 ]
  %40 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %43, %45
  br i1 %46, label %47, label %52

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %49 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack22HasTemplateInHTMLScopeEv(%"class.blink::HTMLElementStack"* %48) #13
  br i1 %49, label %1494, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite28InsertHTMLHtmlStartTagInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %51, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %1494

52:                                               ; preds = %38
  %53 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHeadTagE to %"class.blink::QualifiedName"**), align 8
  %54 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %55, i64 0, i32 3, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %43, %57
  br i1 %58, label %59, label %61

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite21InsertHTMLHeadElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %60, %"class.blink::AtomicHTMLToken"* %1) #13
  store i32 3, i32* %17, align 8
  br label %1494

61:                                               ; preds = %52
  tail call void @_ZN5blink15HTMLTreeBuilder20DefaultForBeforeHeadEv(%"class.blink::HTMLTreeBuilder"* %0)
  br label %62

62:                                               ; preds = %2, %61
  %63 = tail call zeroext i1 @_ZN5blink15HTMLTreeBuilder24ProcessStartTagForInHeadEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br i1 %63, label %1494, label %64

64:                                               ; preds = %62
  tail call void @_ZN5blink15HTMLTreeBuilder16DefaultForInHeadEv(%"class.blink::HTMLTreeBuilder"* %0)
  br label %65

65:                                               ; preds = %2, %64
  %66 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %67 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %66, i64 0, i32 0, i32 0
  %68 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %68, i64 0, i32 3, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %70, %72
  br i1 %73, label %74, label %79

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %76 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack22HasTemplateInHTMLScopeEv(%"class.blink::HTMLElementStack"* %75) #13
  br i1 %76, label %1494, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite28InsertHTMLHtmlStartTagInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %78, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %1494

79:                                               ; preds = %65
  %80 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE to %"class.blink::QualifiedName"**), align 8
  %81 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %80, i64 0, i32 0, i32 0
  %82 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %82, i64 0, i32 3, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %70, %84
  br i1 %85, label %86, label %89

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 0
  store i8 0, i8* %87, align 8
  %88 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite21InsertHTMLBodyElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %88, %"class.blink::AtomicHTMLToken"* %1) #13
  store i32 7, i32* %17, align 8
  br label %1494

89:                                               ; preds = %79
  %90 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kFramesetTagE to %"class.blink::QualifiedName"**), align 8
  %91 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %90, i64 0, i32 0, i32 0
  %92 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %92, i64 0, i32 3, i32 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %70, %94
  br i1 %95, label %96, label %98

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %97, %"class.blink::AtomicHTMLToken"* %1) #13
  store i32 19, i32* %17, align 8
  br label %1494

98:                                               ; preds = %89
  %99 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBaseTagE to %"class.blink::QualifiedName"**), align 8
  %100 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %99, i64 0, i32 0, i32 0
  %101 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %101, i64 0, i32 3, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %70, %103
  br i1 %104, label %168, label %105

105:                                              ; preds = %98
  %106 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kBasefontTagE to %"class.blink::QualifiedName"**), align 8
  %107 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %106, i64 0, i32 0, i32 0
  %108 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %108, i64 0, i32 3, i32 0, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %70, %110
  br i1 %111, label %168, label %112

112:                                              ; preds = %105
  %113 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kBgsoundTagE to %"class.blink::QualifiedName"**), align 8
  %114 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %113, i64 0, i32 0, i32 0
  %115 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %115, i64 0, i32 3, i32 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %70, %117
  br i1 %118, label %168, label %119

119:                                              ; preds = %112
  %120 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kLinkTagE to %"class.blink::QualifiedName"**), align 8
  %121 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %120, i64 0, i32 0, i32 0
  %122 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %122, i64 0, i32 3, i32 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %70, %124
  br i1 %125, label %168, label %126

126:                                              ; preds = %119
  %127 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMetaTagE to %"class.blink::QualifiedName"**), align 8
  %128 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %127, i64 0, i32 0, i32 0
  %129 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %129, i64 0, i32 3, i32 0, i32 0, i32 0
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %132 = icmp eq %"class.WTF::StringImpl"* %70, %131
  br i1 %132, label %168, label %133

133:                                              ; preds = %126
  %134 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kNoframesTagE to %"class.blink::QualifiedName"**), align 8
  %135 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %134, i64 0, i32 0, i32 0
  %136 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %136, i64 0, i32 3, i32 0, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %70, %138
  br i1 %139, label %168, label %140

140:                                              ; preds = %133
  %141 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %142 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %141, i64 0, i32 0, i32 0
  %143 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %143, i64 0, i32 3, i32 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %70, %145
  br i1 %146, label %168, label %147

147:                                              ; preds = %140
  %148 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kStyleTagE to %"class.blink::QualifiedName"**), align 8
  %149 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %148, i64 0, i32 0, i32 0
  %150 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %149, align 8
  %151 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %150, i64 0, i32 3, i32 0, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %70, %152
  br i1 %153, label %168, label %154

154:                                              ; preds = %147
  %155 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %156 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %155, i64 0, i32 0, i32 0
  %157 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %156, align 8
  %158 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %157, i64 0, i32 3, i32 0, i32 0, i32 0
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %70, %159
  br i1 %160, label %168, label %161

161:                                              ; preds = %154
  %162 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTitleTagE to %"class.blink::QualifiedName"**), align 8
  %163 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %162, i64 0, i32 0, i32 0
  %164 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %163, align 8
  %165 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %164, i64 0, i32 3, i32 0, i32 0, i32 0
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %70, %166
  br i1 %167, label %168, label %176

168:                                              ; preds = %161, %154, %147, %140, %133, %126, %119, %112, %105, %98
  %169 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %170 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 3, i32 0, i32 0
  %171 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %170, align 8
  tail call void @_ZN5blink16HTMLElementStack19PushHTMLHeadElementEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack"* %169, %"class.blink::HTMLStackItem"* %171) #13
  %172 = tail call zeroext i1 @_ZN5blink15HTMLTreeBuilder24ProcessStartTagForInHeadEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  %173 = bitcast %"class.blink::HTMLStackItem"** %170 to %"class.blink::Element"***
  %174 = load %"class.blink::Element"**, %"class.blink::Element"*** %173, align 8
  %175 = load %"class.blink::Element"*, %"class.blink::Element"** %174, align 8
  tail call void @_ZN5blink16HTMLElementStack21RemoveHTMLHeadElementEPNS_7ElementE(%"class.blink::HTMLElementStack"* %169, %"class.blink::Element"* %175) #13
  br label %1494

176:                                              ; preds = %161
  %177 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHeadTagE to %"class.blink::QualifiedName"**), align 8
  %178 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %177, i64 0, i32 0, i32 0
  %179 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %178, align 8
  %180 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %179, i64 0, i32 3, i32 0, i32 0, i32 0
  %181 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %180, align 8
  %182 = icmp eq %"class.WTF::StringImpl"* %70, %181
  br i1 %182, label %1494, label %183

183:                                              ; preds = %176
  tail call void @_ZN5blink15HTMLTreeBuilder19DefaultForAfterHeadEv(%"class.blink::HTMLTreeBuilder"* %0)
  br label %184

184:                                              ; preds = %2, %183
  tail call void @_ZN5blink15HTMLTreeBuilder24ProcessStartTagForInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %1494

185:                                              ; preds = %2
  tail call void @_ZN5blink15HTMLTreeBuilder25ProcessStartTagForInTableEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %1494

186:                                              ; preds = %2
  %187 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kCaptionTagE to %"class.blink::QualifiedName"**), align 8
  %188 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %187, i64 0, i32 0, i32 0
  %189 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %188, align 8
  %190 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %189, i64 0, i32 3, i32 0, i32 0, i32 0
  %193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %192, align 8
  %194 = icmp eq %"class.WTF::StringImpl"* %191, %193
  br i1 %194, label %251, label %195

195:                                              ; preds = %186
  %196 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kColTagE to %"class.blink::QualifiedName"**), align 8
  %197 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %196, i64 0, i32 0, i32 0
  %198 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %197, align 8
  %199 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %198, i64 0, i32 3, i32 0, i32 0, i32 0
  %200 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %199, align 8
  %201 = icmp eq %"class.WTF::StringImpl"* %191, %200
  br i1 %201, label %251, label %202

202:                                              ; preds = %195
  %203 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kColgroupTagE to %"class.blink::QualifiedName"**), align 8
  %204 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %203, i64 0, i32 0, i32 0
  %205 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %204, align 8
  %206 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %205, i64 0, i32 3, i32 0, i32 0, i32 0
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %206, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %191, %207
  br i1 %208, label %251, label %209

209:                                              ; preds = %202
  %210 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE to %"class.blink::QualifiedName"**), align 8
  %211 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %210, i64 0, i32 0, i32 0
  %212 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %211, align 8
  %213 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %212, i64 0, i32 3, i32 0, i32 0, i32 0
  %214 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %213, align 8
  %215 = icmp eq %"class.WTF::StringImpl"* %191, %214
  br i1 %215, label %251, label %216

216:                                              ; preds = %209
  %217 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE to %"class.blink::QualifiedName"**), align 8
  %218 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %217, i64 0, i32 0, i32 0
  %219 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %218, align 8
  %220 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %219, i64 0, i32 3, i32 0, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %191, %221
  br i1 %222, label %251, label %223

223:                                              ; preds = %216
  %224 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE to %"class.blink::QualifiedName"**), align 8
  %225 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %224, i64 0, i32 0, i32 0
  %226 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %225, align 8
  %227 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %226, i64 0, i32 3, i32 0, i32 0, i32 0
  %228 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %227, align 8
  %229 = icmp eq %"class.WTF::StringImpl"* %191, %228
  br i1 %229, label %251, label %230

230:                                              ; preds = %223
  %231 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE to %"class.blink::QualifiedName"**), align 8
  %232 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %231, i64 0, i32 0, i32 0
  %233 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %232, align 8
  %234 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %233, i64 0, i32 3, i32 0, i32 0, i32 0
  %235 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %234, align 8
  %236 = icmp eq %"class.WTF::StringImpl"* %191, %235
  br i1 %236, label %251, label %237

237:                                              ; preds = %230
  %238 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE to %"class.blink::QualifiedName"**), align 8
  %239 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %238, i64 0, i32 0, i32 0
  %240 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %239, align 8
  %241 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %240, i64 0, i32 3, i32 0, i32 0, i32 0
  %242 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %241, align 8
  %243 = icmp eq %"class.WTF::StringImpl"* %191, %242
  br i1 %243, label %251, label %244

244:                                              ; preds = %237
  %245 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE to %"class.blink::QualifiedName"**), align 8
  %246 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %245, i64 0, i32 0, i32 0
  %247 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %246, align 8
  %248 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %247, i64 0, i32 3, i32 0, i32 0, i32 0
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %248, align 8
  %250 = icmp eq %"class.WTF::StringImpl"* %191, %249
  br i1 %250, label %251, label %260

251:                                              ; preds = %230, %209, %216, %186, %195, %244, %237, %223, %202
  %252 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %253 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %189, i64 0, i32 3
  %254 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %252, %"class.WTF::AtomicString"* dereferenceable(8) %253) #13
  br i1 %254, label %255, label %1494

255:                                              ; preds = %251
  %256 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite22GenerateImpliedEndTagsEv(%"class.blink::HTMLConstructionSite"* %256) #13
  %257 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %188, align 8
  %258 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %257, i64 0, i32 3
  tail call void @_ZN5blink16HTMLElementStack14PopUntilPoppedERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %252, %"class.WTF::AtomicString"* dereferenceable(8) %258) #13
  %259 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 6
  tail call void @_ZN5blink25HTMLFormattingElementList17ClearToLastMarkerEv(%"class.blink::HTMLFormattingElementList"* %259) #13
  store i32 9, i32* %17, align 8
  tail call void @_ZN5blink15HTMLTreeBuilder15ProcessStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %1494

260:                                              ; preds = %244
  tail call void @_ZN5blink15HTMLTreeBuilder24ProcessStartTagForInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %1494

261:                                              ; preds = %2
  %262 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %263 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %262, i64 0, i32 0, i32 0
  %264 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %263, align 8
  %265 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %266 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %265, align 8
  %267 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %264, i64 0, i32 3, i32 0, i32 0, i32 0
  %268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %267, align 8
  %269 = icmp eq %"class.WTF::StringImpl"* %266, %268
  br i1 %269, label %270, label %275

270:                                              ; preds = %261
  %271 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %272 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack22HasTemplateInHTMLScopeEv(%"class.blink::HTMLElementStack"* %271) #13
  br i1 %272, label %1494, label %273

273:                                              ; preds = %270
  %274 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite28InsertHTMLHtmlStartTagInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %274, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %1494

275:                                              ; preds = %261
  %276 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kColTagE to %"class.blink::QualifiedName"**), align 8
  %277 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %276, i64 0, i32 0, i32 0
  %278 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %277, align 8
  %279 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %278, i64 0, i32 3, i32 0, i32 0, i32 0
  %280 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %279, align 8
  %281 = icmp eq %"class.WTF::StringImpl"* %266, %280
  br i1 %281, label %282, label %284

282:                                              ; preds = %275
  %283 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite43InsertSelfClosingHTMLElementDestroyingTokenEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %283, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %1494

284:                                              ; preds = %275
  %285 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %286 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %285, i64 0, i32 0, i32 0
  %287 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %286, align 8
  %288 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %287, i64 0, i32 3, i32 0, i32 0, i32 0
  %289 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %288, align 8
  %290 = icmp eq %"class.WTF::StringImpl"* %266, %289
  br i1 %290, label %291, label %292

291:                                              ; preds = %284
  tail call void @_ZN5blink15HTMLTreeBuilder23ProcessTemplateStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %1494

292:                                              ; preds = %284
  %293 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %294 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %293, i64 0, i32 0, i32 0, i32 0
  %295 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %294, align 8
  %296 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %295, i64 0, i32 0, i32 0, i32 0
  %297 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %296, align 8
  %298 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %297, i64 0, i32 0, i32 0, i32 0
  %299 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %298, align 8
  %300 = tail call %"class.blink::ContainerNode"* @_ZNK5blink16HTMLElementStack8RootNodeEv(%"class.blink::HTMLElementStack"* %293) #13
  %301 = icmp eq %"class.blink::ContainerNode"* %299, %300
  br i1 %301, label %1494, label %302

302:                                              ; preds = %292
  %303 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0
  %304 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %303, align 8
  %305 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %304, i64 0, i32 0, i32 0, i32 0
  %306 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %305, align 8
  %307 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %306, i64 0, i32 0, i32 0, i32 0
  %308 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %307, align 8
  %309 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %308, i64 0, i32 0, i32 1
  %310 = load i32, i32* %309, align 8
  %311 = and i32 %310, 48
  %312 = icmp ne i32 %311, 0
  %313 = icmp eq %"class.blink::ContainerNode"* %308, null
  %314 = or i1 %313, %312
  br i1 %314, label %327, label %315

315:                                              ; preds = %302
  %316 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %308, i64 0, i32 0
  %317 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %285, i64 0, i32 0, i32 0
  %318 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %317, align 8
  %319 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %316, i64 1, i32 2
  %320 = bitcast %"class.blink::Member.2"* %319 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %321 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %320, align 8
  %322 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %321, i64 0, i32 3, i32 0, i32 0, i32 0
  %323 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %322, align 8
  %324 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %318, i64 0, i32 3, i32 0, i32 0, i32 0
  %325 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %324, align 8
  %326 = icmp eq %"class.WTF::StringImpl"* %323, %325
  br i1 %326, label %1494, label %327

327:                                              ; preds = %315, %302
  tail call void @_ZN5blink16HTMLElementStack3PopEv(%"class.blink::HTMLElementStack"* %293) #13
  store i32 9, i32* %17, align 8
  tail call void @_ZN5blink15HTMLTreeBuilder15ProcessStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %1494

328:                                              ; preds = %2
  %329 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE to %"class.blink::QualifiedName"**), align 8
  %330 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %329, i64 0, i32 0, i32 0
  %331 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %330, align 8
  %332 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %333 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %332, align 8
  %334 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %331, i64 0, i32 3, i32 0, i32 0, i32 0
  %335 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %334, align 8
  %336 = icmp eq %"class.WTF::StringImpl"* %333, %335
  br i1 %336, label %337, label %340

337:                                              ; preds = %328
  %338 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %339 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  tail call void @_ZN5blink16HTMLElementStack28PopUntilTableBodyScopeMarkerEv(%"class.blink::HTMLElementStack"* %339) #13
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %338, %"class.blink::AtomicHTMLToken"* %1) #13
  store i32 14, i32* %17, align 8
  br label %1494

340:                                              ; preds = %328
  %341 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE to %"class.blink::QualifiedName"**), align 8
  %342 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %341, i64 0, i32 0, i32 0
  %343 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %342, align 8
  %344 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %343, i64 0, i32 3, i32 0, i32 0, i32 0
  %345 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %344, align 8
  %346 = icmp eq %"class.WTF::StringImpl"* %333, %345
  br i1 %346, label %354, label %347

347:                                              ; preds = %340
  %348 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE to %"class.blink::QualifiedName"**), align 8
  %349 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %348, i64 0, i32 0, i32 0
  %350 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %349, align 8
  %351 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %350, i64 0, i32 3, i32 0, i32 0, i32 0
  %352 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %351, align 8
  %353 = icmp eq %"class.WTF::StringImpl"* %333, %352
  br i1 %353, label %354, label %423

354:                                              ; preds = %340, %347
  %355 = bitcast %"class.WTF::Vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %355) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %355, i8 0, i64 16, i1 false) #13
  %356 = bitcast %"class.blink::AtomicHTMLToken"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %356) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %356, i8 -86, i64 56, i1 false) #13
  %357 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %330, align 8
  %358 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %3, i64 0, i32 0
  store i32 2, i32* %358, align 8
  %359 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %357, i64 0, i32 3, i32 0, i32 0, i32 0
  %360 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %359, align 8
  %361 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %360, %"class.WTF::StringImpl"** %361, align 8
  %362 = icmp eq %"class.WTF::StringImpl"* %360, null
  br i1 %362, label %380, label %363

363:                                              ; preds = %354
  %364 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %365 = load atomic i32, i32* %364 monotonic, align 4
  %366 = and i32 %365, 2
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %368, label %380

368:                                              ; preds = %363
  %369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 0
  %370 = load i32, i32* %369, align 4
  %371 = zext i32 %370 to i33
  %372 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %371, i33 1) #13
  %373 = extractvalue { i33, i1 } %372, 1
  %374 = extractvalue { i33, i1 } %372, 0
  %375 = icmp slt i33 %374, 0
  %376 = or i1 %373, %375
  br i1 %376, label %377, label %378, !prof !2

377:                                              ; preds = %368
  tail call void @llvm.trap() #13
  unreachable

378:                                              ; preds = %368
  %379 = trunc i33 %374 to i32
  store i32 %379, i32* %369, align 4
  br label %380

380:                                              ; preds = %354, %363, %378
  %381 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %3, i64 0, i32 2, i32 0, i32 0
  %382 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %3, i64 0, i32 6
  %383 = bitcast %"class.WTF::StringImpl"** %381 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %383, i8 0, i64 18, i1 false) #13
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %382, %"class.WTF::Vector"* nonnull dereferenceable(16) %4) #13
  call void @_ZN5blink15HTMLTreeBuilder15ProcessStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* nonnull %3) #13
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %356) #13
  %384 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %385 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %384, align 8
  %386 = icmp eq %"class.blink::Attribute"* %385, null
  br i1 %386, label %422, label %387, !prof !3

387:                                              ; preds = %380
  %388 = bitcast %"class.blink::Attribute"* %385 to i8*
  %389 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  %390 = load i32, i32* %389, align 4
  %391 = icmp eq i32 %390, 0
  br i1 %391, label %420, label %392, !prof !2

392:                                              ; preds = %387
  %393 = zext i32 %390 to i64
  %394 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %385, i64 %393
  br label %395

395:                                              ; preds = %413, %392
  %396 = phi %"class.blink::Attribute"* [ %415, %413 ], [ %385, %392 ]
  %397 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %396, i64 0, i32 1, i32 0, i32 0, i32 0
  %398 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %397, align 8
  %399 = icmp eq %"class.WTF::StringImpl"* %398, null
  br i1 %399, label %413, label %400

400:                                              ; preds = %395
  %401 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %398, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %402 = load atomic i32, i32* %401 monotonic, align 4
  %403 = and i32 %402, 2
  %404 = icmp eq i32 %403, 0
  %405 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %398, i64 0, i32 0
  %406 = load i32, i32* %405, align 4
  br i1 %404, label %407, label %409

407:                                              ; preds = %400
  %408 = add i32 %406, -1
  store i32 %408, i32* %405, align 4
  br label %409

409:                                              ; preds = %407, %400
  %410 = phi i32 [ %408, %407 ], [ %406, %400 ]
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %412, label %413

412:                                              ; preds = %409
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %398) #13
  br label %413

413:                                              ; preds = %412, %409, %395
  %414 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %396, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %414) #13
  %415 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %396, i64 1
  %416 = icmp eq %"class.blink::Attribute"* %415, %394
  br i1 %416, label %417, label %395

417:                                              ; preds = %413
  store i32 0, i32* %389, align 4
  %418 = bitcast %"class.WTF::Vector"* %4 to i8**
  %419 = load i8*, i8** %418, align 8
  br label %420

420:                                              ; preds = %417, %387
  %421 = phi i8* [ %419, %417 ], [ %388, %387 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %421) #13
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %384, align 8
  br label %422

422:                                              ; preds = %380, %420
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %355) #13
  call void @_ZN5blink15HTMLTreeBuilder15ProcessStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %1494

423:                                              ; preds = %347
  %424 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kCaptionTagE to %"class.blink::QualifiedName"**), align 8
  %425 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %424, i64 0, i32 0, i32 0
  %426 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %425, align 8
  %427 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %426, i64 0, i32 3, i32 0, i32 0, i32 0
  %428 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %427, align 8
  %429 = icmp eq %"class.WTF::StringImpl"* %333, %428
  br i1 %429, label %465, label %430

430:                                              ; preds = %423
  %431 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kColTagE to %"class.blink::QualifiedName"**), align 8
  %432 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %431, i64 0, i32 0, i32 0
  %433 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %432, align 8
  %434 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %433, i64 0, i32 3, i32 0, i32 0, i32 0
  %435 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %434, align 8
  %436 = icmp eq %"class.WTF::StringImpl"* %333, %435
  br i1 %436, label %465, label %437

437:                                              ; preds = %430
  %438 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kColgroupTagE to %"class.blink::QualifiedName"**), align 8
  %439 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %438, i64 0, i32 0, i32 0
  %440 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %439, align 8
  %441 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %440, i64 0, i32 3, i32 0, i32 0, i32 0
  %442 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %441, align 8
  %443 = icmp eq %"class.WTF::StringImpl"* %333, %442
  br i1 %443, label %465, label %444

444:                                              ; preds = %437
  %445 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE to %"class.blink::QualifiedName"**), align 8
  %446 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %445, i64 0, i32 0, i32 0
  %447 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %446, align 8
  %448 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %447, i64 0, i32 3, i32 0, i32 0, i32 0
  %449 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %448, align 8
  %450 = icmp eq %"class.WTF::StringImpl"* %333, %449
  br i1 %450, label %465, label %451

451:                                              ; preds = %444
  %452 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE to %"class.blink::QualifiedName"**), align 8
  %453 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %452, i64 0, i32 0, i32 0
  %454 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %453, align 8
  %455 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %454, i64 0, i32 3, i32 0, i32 0, i32 0
  %456 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %455, align 8
  %457 = icmp eq %"class.WTF::StringImpl"* %333, %456
  br i1 %457, label %465, label %458

458:                                              ; preds = %451
  %459 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE to %"class.blink::QualifiedName"**), align 8
  %460 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %459, i64 0, i32 0, i32 0
  %461 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %460, align 8
  %462 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %461, i64 0, i32 3, i32 0, i32 0, i32 0
  %463 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %462, align 8
  %464 = icmp eq %"class.WTF::StringImpl"* %333, %463
  br i1 %464, label %465, label %481

465:                                              ; preds = %444, %451, %423, %430, %458, %437
  %466 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %467 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE to %"class.blink::QualifiedName"**), align 8
  %468 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"* %466, %"class.blink::QualifiedName"* dereferenceable(8) %467) #13
  br i1 %468, label %475, label %469

469:                                              ; preds = %465
  %470 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE to %"class.blink::QualifiedName"**), align 8
  %471 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"* %466, %"class.blink::QualifiedName"* dereferenceable(8) %470) #13
  br i1 %471, label %475, label %472

472:                                              ; preds = %469
  %473 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE to %"class.blink::QualifiedName"**), align 8
  %474 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"* %466, %"class.blink::QualifiedName"* dereferenceable(8) %473) #13
  br i1 %474, label %475, label %1494

475:                                              ; preds = %472, %469, %465
  tail call void @_ZN5blink16HTMLElementStack28PopUntilTableBodyScopeMarkerEv(%"class.blink::HTMLElementStack"* %466) #13
  %476 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0
  %477 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %476, align 8
  %478 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %477, i64 0, i32 0, i32 0, i32 0
  %479 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %478, align 8
  %480 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %479, i64 0, i32 1
  tail call void @_ZN5blink15HTMLTreeBuilder17ProcessFakeEndTagERKN3WTF12AtomicStringE(%"class.blink::HTMLTreeBuilder"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %480)
  tail call void @_ZN5blink15HTMLTreeBuilder15ProcessStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %1494

481:                                              ; preds = %458
  tail call void @_ZN5blink15HTMLTreeBuilder25ProcessStartTagForInTableEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %1494

482:                                              ; preds = %2
  %483 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE to %"class.blink::QualifiedName"**), align 8
  %484 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %483, i64 0, i32 0, i32 0
  %485 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %484, align 8
  %486 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %487 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %486, align 8
  %488 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %485, i64 0, i32 3, i32 0, i32 0, i32 0
  %489 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %488, align 8
  %490 = icmp eq %"class.WTF::StringImpl"* %487, %489
  br i1 %490, label %498, label %491

491:                                              ; preds = %482
  %492 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE to %"class.blink::QualifiedName"**), align 8
  %493 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %492, i64 0, i32 0, i32 0
  %494 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %493, align 8
  %495 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %494, i64 0, i32 3, i32 0, i32 0, i32 0
  %496 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %495, align 8
  %497 = icmp eq %"class.WTF::StringImpl"* %487, %496
  br i1 %497, label %498, label %502

498:                                              ; preds = %482, %491
  %499 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %500 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  tail call void @_ZN5blink16HTMLElementStack27PopUntilTableRowScopeMarkerEv(%"class.blink::HTMLElementStack"* %500) #13
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %499, %"class.blink::AtomicHTMLToken"* %1) #13
  store i32 15, i32* %17, align 8
  %501 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 6
  tail call void @_ZN5blink25HTMLFormattingElementList12AppendMarkerEv(%"class.blink::HTMLFormattingElementList"* %501) #13
  br label %1494

502:                                              ; preds = %491
  %503 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE to %"class.blink::QualifiedName"**), align 8
  %504 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %503, i64 0, i32 0, i32 0
  %505 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %504, align 8
  %506 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %505, i64 0, i32 3, i32 0, i32 0, i32 0
  %507 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %506, align 8
  %508 = icmp eq %"class.WTF::StringImpl"* %487, %507
  br i1 %508, label %551, label %509

509:                                              ; preds = %502
  %510 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kCaptionTagE to %"class.blink::QualifiedName"**), align 8
  %511 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %510, i64 0, i32 0, i32 0
  %512 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %511, align 8
  %513 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %512, i64 0, i32 3, i32 0, i32 0, i32 0
  %514 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %513, align 8
  %515 = icmp eq %"class.WTF::StringImpl"* %487, %514
  br i1 %515, label %551, label %516

516:                                              ; preds = %509
  %517 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kColTagE to %"class.blink::QualifiedName"**), align 8
  %518 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %517, i64 0, i32 0, i32 0
  %519 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %518, align 8
  %520 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %519, i64 0, i32 3, i32 0, i32 0, i32 0
  %521 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %520, align 8
  %522 = icmp eq %"class.WTF::StringImpl"* %487, %521
  br i1 %522, label %551, label %523

523:                                              ; preds = %516
  %524 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kColgroupTagE to %"class.blink::QualifiedName"**), align 8
  %525 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %524, i64 0, i32 0, i32 0
  %526 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %525, align 8
  %527 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %526, i64 0, i32 3, i32 0, i32 0, i32 0
  %528 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %527, align 8
  %529 = icmp eq %"class.WTF::StringImpl"* %487, %528
  br i1 %529, label %551, label %530

530:                                              ; preds = %523
  %531 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE to %"class.blink::QualifiedName"**), align 8
  %532 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %531, i64 0, i32 0, i32 0
  %533 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %532, align 8
  %534 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %533, i64 0, i32 3, i32 0, i32 0, i32 0
  %535 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %534, align 8
  %536 = icmp eq %"class.WTF::StringImpl"* %487, %535
  br i1 %536, label %551, label %537

537:                                              ; preds = %530
  %538 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE to %"class.blink::QualifiedName"**), align 8
  %539 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %538, i64 0, i32 0, i32 0
  %540 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %539, align 8
  %541 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %540, i64 0, i32 3, i32 0, i32 0, i32 0
  %542 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %541, align 8
  %543 = icmp eq %"class.WTF::StringImpl"* %487, %542
  br i1 %543, label %551, label %544

544:                                              ; preds = %537
  %545 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE to %"class.blink::QualifiedName"**), align 8
  %546 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %545, i64 0, i32 0, i32 0
  %547 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %546, align 8
  %548 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %547, i64 0, i32 3, i32 0, i32 0, i32 0
  %549 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %548, align 8
  %550 = icmp eq %"class.WTF::StringImpl"* %487, %549
  br i1 %550, label %551, label %555

551:                                              ; preds = %530, %537, %509, %516, %544, %523, %502
  %552 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %553 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"* %552, %"class.blink::QualifiedName"* dereferenceable(8) %503) #13
  br i1 %553, label %554, label %1494

554:                                              ; preds = %551
  tail call void @_ZN5blink16HTMLElementStack27PopUntilTableRowScopeMarkerEv(%"class.blink::HTMLElementStack"* %552) #13
  tail call void @_ZN5blink16HTMLElementStack3PopEv(%"class.blink::HTMLElementStack"* %552) #13
  store i32 13, i32* %17, align 8
  tail call void @_ZN5blink15HTMLTreeBuilder15ProcessStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %1494

555:                                              ; preds = %544
  tail call void @_ZN5blink15HTMLTreeBuilder25ProcessStartTagForInTableEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %1494

556:                                              ; preds = %2
  %557 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kCaptionTagE to %"class.blink::QualifiedName"**), align 8
  %558 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %557, i64 0, i32 0, i32 0
  %559 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %558, align 8
  %560 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %561 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %560, align 8
  %562 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %559, i64 0, i32 3, i32 0, i32 0, i32 0
  %563 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %562, align 8
  %564 = icmp eq %"class.WTF::StringImpl"* %561, %563
  br i1 %564, label %621, label %565

565:                                              ; preds = %556
  %566 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kColTagE to %"class.blink::QualifiedName"**), align 8
  %567 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %566, i64 0, i32 0, i32 0
  %568 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %567, align 8
  %569 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %568, i64 0, i32 3, i32 0, i32 0, i32 0
  %570 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %569, align 8
  %571 = icmp eq %"class.WTF::StringImpl"* %561, %570
  br i1 %571, label %621, label %572

572:                                              ; preds = %565
  %573 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kColgroupTagE to %"class.blink::QualifiedName"**), align 8
  %574 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %573, i64 0, i32 0, i32 0
  %575 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %574, align 8
  %576 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %575, i64 0, i32 3, i32 0, i32 0, i32 0
  %577 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %576, align 8
  %578 = icmp eq %"class.WTF::StringImpl"* %561, %577
  br i1 %578, label %621, label %579

579:                                              ; preds = %572
  %580 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE to %"class.blink::QualifiedName"**), align 8
  %581 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %580, i64 0, i32 0, i32 0
  %582 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %581, align 8
  %583 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %582, i64 0, i32 3, i32 0, i32 0, i32 0
  %584 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %583, align 8
  %585 = icmp eq %"class.WTF::StringImpl"* %561, %584
  br i1 %585, label %621, label %586

586:                                              ; preds = %579
  %587 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE to %"class.blink::QualifiedName"**), align 8
  %588 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %587, i64 0, i32 0, i32 0
  %589 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %588, align 8
  %590 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %589, i64 0, i32 3, i32 0, i32 0, i32 0
  %591 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %590, align 8
  %592 = icmp eq %"class.WTF::StringImpl"* %561, %591
  br i1 %592, label %621, label %593

593:                                              ; preds = %586
  %594 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE to %"class.blink::QualifiedName"**), align 8
  %595 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %594, i64 0, i32 0, i32 0
  %596 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %595, align 8
  %597 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %596, i64 0, i32 3, i32 0, i32 0, i32 0
  %598 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %597, align 8
  %599 = icmp eq %"class.WTF::StringImpl"* %561, %598
  br i1 %599, label %621, label %600

600:                                              ; preds = %593
  %601 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE to %"class.blink::QualifiedName"**), align 8
  %602 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %601, i64 0, i32 0, i32 0
  %603 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %602, align 8
  %604 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %603, i64 0, i32 3, i32 0, i32 0, i32 0
  %605 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %604, align 8
  %606 = icmp eq %"class.WTF::StringImpl"* %561, %605
  br i1 %606, label %621, label %607

607:                                              ; preds = %600
  %608 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE to %"class.blink::QualifiedName"**), align 8
  %609 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %608, i64 0, i32 0, i32 0
  %610 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %609, align 8
  %611 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %610, i64 0, i32 3, i32 0, i32 0, i32 0
  %612 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %611, align 8
  %613 = icmp eq %"class.WTF::StringImpl"* %561, %612
  br i1 %613, label %621, label %614

614:                                              ; preds = %607
  %615 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE to %"class.blink::QualifiedName"**), align 8
  %616 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %615, i64 0, i32 0, i32 0
  %617 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %616, align 8
  %618 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %617, i64 0, i32 3, i32 0, i32 0, i32 0
  %619 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %618, align 8
  %620 = icmp eq %"class.WTF::StringImpl"* %561, %619
  br i1 %620, label %621, label %635

621:                                              ; preds = %600, %607, %579, %556, %565, %614, %593, %586, %572
  %622 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %623 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE to %"class.blink::QualifiedName"**), align 8
  %624 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"* %622, %"class.blink::QualifiedName"* dereferenceable(8) %623) #13
  br i1 %624, label %628, label %625

625:                                              ; preds = %621
  %626 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE to %"class.blink::QualifiedName"**), align 8
  %627 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"* %622, %"class.blink::QualifiedName"* dereferenceable(8) %626) #13
  br i1 %627, label %628, label %1494

628:                                              ; preds = %625, %621
  %629 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"* %622, %"class.blink::QualifiedName"* dereferenceable(8) %623) #13
  %630 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE to %"class.blink::QualifiedName"**), align 8
  %631 = select i1 %629, %"class.blink::QualifiedName"* %623, %"class.blink::QualifiedName"* %630
  %632 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %631, i64 0, i32 0, i32 0
  %633 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %632, align 8
  %634 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %633, i64 0, i32 3
  tail call void @_ZN5blink15HTMLTreeBuilder17ProcessFakeEndTagERKN3WTF12AtomicStringE(%"class.blink::HTMLTreeBuilder"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %634) #13
  tail call void @_ZN5blink15HTMLTreeBuilder15ProcessStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %1494

635:                                              ; preds = %614
  tail call void @_ZN5blink15HTMLTreeBuilder24ProcessStartTagForInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %1494

636:                                              ; preds = %2, %2
  %637 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %638 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %637, i64 0, i32 0, i32 0
  %639 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %638, align 8
  %640 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %641 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %640, align 8
  %642 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %639, i64 0, i32 3, i32 0, i32 0, i32 0
  %643 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %642, align 8
  %644 = icmp eq %"class.WTF::StringImpl"* %641, %643
  br i1 %644, label %645, label %650

645:                                              ; preds = %636
  %646 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %647 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack22HasTemplateInHTMLScopeEv(%"class.blink::HTMLElementStack"* %646) #13
  br i1 %647, label %1494, label %648

648:                                              ; preds = %645
  %649 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite28InsertHTMLHtmlStartTagInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %649, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %1494

650:                                              ; preds = %636
  store i32 7, i32* %17, align 8
  tail call void @_ZN5blink15HTMLTreeBuilder15ProcessStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %1494

651:                                              ; preds = %2
  %652 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %653 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %652, i64 0, i32 0, i32 0
  %654 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %653, align 8
  %655 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %656 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %655, align 8
  %657 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %654, i64 0, i32 3, i32 0, i32 0, i32 0
  %658 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %657, align 8
  %659 = icmp eq %"class.WTF::StringImpl"* %656, %658
  br i1 %659, label %660, label %665

660:                                              ; preds = %651
  %661 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %662 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack22HasTemplateInHTMLScopeEv(%"class.blink::HTMLElementStack"* %661) #13
  br i1 %662, label %1494, label %663

663:                                              ; preds = %660
  %664 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite28InsertHTMLHtmlStartTagInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %664, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %1494

665:                                              ; preds = %651
  %666 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kBasefontTagE to %"class.blink::QualifiedName"**), align 8
  %667 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %666, i64 0, i32 0, i32 0
  %668 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %667, align 8
  %669 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %668, i64 0, i32 3, i32 0, i32 0, i32 0
  %670 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %669, align 8
  %671 = icmp eq %"class.WTF::StringImpl"* %656, %670
  br i1 %671, label %707, label %672

672:                                              ; preds = %665
  %673 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kBgsoundTagE to %"class.blink::QualifiedName"**), align 8
  %674 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %673, i64 0, i32 0, i32 0
  %675 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %674, align 8
  %676 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %675, i64 0, i32 3, i32 0, i32 0, i32 0
  %677 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %676, align 8
  %678 = icmp eq %"class.WTF::StringImpl"* %656, %677
  br i1 %678, label %707, label %679

679:                                              ; preds = %672
  %680 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kLinkTagE to %"class.blink::QualifiedName"**), align 8
  %681 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %680, i64 0, i32 0, i32 0
  %682 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %681, align 8
  %683 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %682, i64 0, i32 3, i32 0, i32 0, i32 0
  %684 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %683, align 8
  %685 = icmp eq %"class.WTF::StringImpl"* %656, %684
  br i1 %685, label %707, label %686

686:                                              ; preds = %679
  %687 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMetaTagE to %"class.blink::QualifiedName"**), align 8
  %688 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %687, i64 0, i32 0, i32 0
  %689 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %688, align 8
  %690 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %689, i64 0, i32 3, i32 0, i32 0, i32 0
  %691 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %690, align 8
  %692 = icmp eq %"class.WTF::StringImpl"* %656, %691
  br i1 %692, label %707, label %693

693:                                              ; preds = %686
  %694 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kNoframesTagE to %"class.blink::QualifiedName"**), align 8
  %695 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %694, i64 0, i32 0, i32 0
  %696 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %695, align 8
  %697 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %696, i64 0, i32 3, i32 0, i32 0, i32 0
  %698 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %697, align 8
  %699 = icmp eq %"class.WTF::StringImpl"* %656, %698
  br i1 %699, label %707, label %700

700:                                              ; preds = %693
  %701 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kStyleTagE to %"class.blink::QualifiedName"**), align 8
  %702 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %701, i64 0, i32 0, i32 0
  %703 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %702, align 8
  %704 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %703, i64 0, i32 3, i32 0, i32 0, i32 0
  %705 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %704, align 8
  %706 = icmp eq %"class.WTF::StringImpl"* %656, %705
  br i1 %706, label %707, label %709

707:                                              ; preds = %700, %693, %686, %679, %672, %665
  %708 = tail call zeroext i1 @_ZN5blink15HTMLTreeBuilder24ProcessStartTagForInHeadEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %1494

709:                                              ; preds = %700
  %710 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kNoscriptTagE to %"class.blink::QualifiedName"**), align 8
  %711 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %710, i64 0, i32 0, i32 0
  %712 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %711, align 8
  %713 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %712, i64 0, i32 3, i32 0, i32 0, i32 0
  %714 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %713, align 8
  %715 = icmp eq %"class.WTF::StringImpl"* %656, %714
  br i1 %715, label %1494, label %716

716:                                              ; preds = %709
  tail call void @_ZN5blink15HTMLTreeBuilder24DefaultForInHeadNoscriptEv(%"class.blink::HTMLTreeBuilder"* %0)
  tail call void @_ZN5blink15HTMLTreeBuilder12ProcessTokenEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %1494

717:                                              ; preds = %2
  %718 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %719 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %718, i64 0, i32 0, i32 0
  %720 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %719, align 8
  %721 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %722 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %721, align 8
  %723 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %720, i64 0, i32 3, i32 0, i32 0, i32 0
  %724 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %723, align 8
  %725 = icmp eq %"class.WTF::StringImpl"* %722, %724
  br i1 %725, label %726, label %731

726:                                              ; preds = %717
  %727 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %728 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack22HasTemplateInHTMLScopeEv(%"class.blink::HTMLElementStack"* %727) #13
  br i1 %728, label %1494, label %729

729:                                              ; preds = %726
  %730 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite28InsertHTMLHtmlStartTagInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %730, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %1494

731:                                              ; preds = %717
  %732 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kFramesetTagE to %"class.blink::QualifiedName"**), align 8
  %733 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %732, i64 0, i32 0, i32 0
  %734 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %733, align 8
  %735 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %734, i64 0, i32 3, i32 0, i32 0, i32 0
  %736 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %735, align 8
  %737 = icmp eq %"class.WTF::StringImpl"* %722, %736
  br i1 %737, label %738, label %740

738:                                              ; preds = %731
  %739 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %739, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %1494

740:                                              ; preds = %731
  %741 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kFrameTagE to %"class.blink::QualifiedName"**), align 8
  %742 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %741, i64 0, i32 0, i32 0
  %743 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %742, align 8
  %744 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %743, i64 0, i32 3, i32 0, i32 0, i32 0
  %745 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %744, align 8
  %746 = icmp eq %"class.WTF::StringImpl"* %722, %745
  br i1 %746, label %747, label %749

747:                                              ; preds = %740
  %748 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite43InsertSelfClosingHTMLElementDestroyingTokenEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %748, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %1494

749:                                              ; preds = %740
  %750 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kNoframesTagE to %"class.blink::QualifiedName"**), align 8
  %751 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %750, i64 0, i32 0, i32 0
  %752 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %751, align 8
  %753 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %752, i64 0, i32 3, i32 0, i32 0, i32 0
  %754 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %753, align 8
  %755 = icmp eq %"class.WTF::StringImpl"* %722, %754
  br i1 %755, label %756, label %1494

756:                                              ; preds = %749
  %757 = tail call zeroext i1 @_ZN5blink15HTMLTreeBuilder24ProcessStartTagForInHeadEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %1494

758:                                              ; preds = %2, %2
  %759 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %760 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %759, i64 0, i32 0, i32 0
  %761 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %760, align 8
  %762 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %763 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %762, align 8
  %764 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %761, i64 0, i32 3, i32 0, i32 0, i32 0
  %765 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %764, align 8
  %766 = icmp eq %"class.WTF::StringImpl"* %763, %765
  br i1 %766, label %767, label %772

767:                                              ; preds = %758
  %768 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %769 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack22HasTemplateInHTMLScopeEv(%"class.blink::HTMLElementStack"* %768) #13
  br i1 %769, label %1494, label %770

770:                                              ; preds = %767
  %771 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite28InsertHTMLHtmlStartTagInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %771, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %1494

772:                                              ; preds = %758
  %773 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kNoframesTagE to %"class.blink::QualifiedName"**), align 8
  %774 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %773, i64 0, i32 0, i32 0
  %775 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %774, align 8
  %776 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %775, i64 0, i32 3, i32 0, i32 0, i32 0
  %777 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %776, align 8
  %778 = icmp eq %"class.WTF::StringImpl"* %763, %777
  br i1 %778, label %779, label %1494

779:                                              ; preds = %772
  %780 = tail call zeroext i1 @_ZN5blink15HTMLTreeBuilder24ProcessStartTagForInHeadEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %1494

781:                                              ; preds = %2
  %782 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kCaptionTagE to %"class.blink::QualifiedName"**), align 8
  %783 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %782, i64 0, i32 0, i32 0
  %784 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %783, align 8
  %785 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %786 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %785, align 8
  %787 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %784, i64 0, i32 3, i32 0, i32 0, i32 0
  %788 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %787, align 8
  %789 = icmp eq %"class.WTF::StringImpl"* %786, %788
  br i1 %789, label %839, label %790

790:                                              ; preds = %781
  %791 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE to %"class.blink::QualifiedName"**), align 8
  %792 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %791, i64 0, i32 0, i32 0
  %793 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %792, align 8
  %794 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %793, i64 0, i32 3, i32 0, i32 0, i32 0
  %795 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %794, align 8
  %796 = icmp eq %"class.WTF::StringImpl"* %786, %795
  br i1 %796, label %839, label %797

797:                                              ; preds = %790
  %798 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE to %"class.blink::QualifiedName"**), align 8
  %799 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %798, i64 0, i32 0, i32 0
  %800 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %799, align 8
  %801 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %800, i64 0, i32 3, i32 0, i32 0, i32 0
  %802 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %801, align 8
  %803 = icmp eq %"class.WTF::StringImpl"* %786, %802
  br i1 %803, label %839, label %804

804:                                              ; preds = %797
  %805 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE to %"class.blink::QualifiedName"**), align 8
  %806 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %805, i64 0, i32 0, i32 0
  %807 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %806, align 8
  %808 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %807, i64 0, i32 3, i32 0, i32 0, i32 0
  %809 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %808, align 8
  %810 = icmp eq %"class.WTF::StringImpl"* %786, %809
  br i1 %810, label %839, label %811

811:                                              ; preds = %804
  %812 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE to %"class.blink::QualifiedName"**), align 8
  %813 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %812, i64 0, i32 0, i32 0
  %814 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %813, align 8
  %815 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %814, i64 0, i32 3, i32 0, i32 0, i32 0
  %816 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %815, align 8
  %817 = icmp eq %"class.WTF::StringImpl"* %786, %816
  br i1 %817, label %839, label %818

818:                                              ; preds = %811
  %819 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE to %"class.blink::QualifiedName"**), align 8
  %820 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %819, i64 0, i32 0, i32 0
  %821 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %820, align 8
  %822 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %821, i64 0, i32 3, i32 0, i32 0, i32 0
  %823 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %822, align 8
  %824 = icmp eq %"class.WTF::StringImpl"* %786, %823
  br i1 %824, label %839, label %825

825:                                              ; preds = %818
  %826 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE to %"class.blink::QualifiedName"**), align 8
  %827 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %826, i64 0, i32 0, i32 0
  %828 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %827, align 8
  %829 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %828, i64 0, i32 3, i32 0, i32 0, i32 0
  %830 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %829, align 8
  %831 = icmp eq %"class.WTF::StringImpl"* %786, %830
  br i1 %831, label %839, label %832

832:                                              ; preds = %825
  %833 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE to %"class.blink::QualifiedName"**), align 8
  %834 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %833, i64 0, i32 0, i32 0
  %835 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %834, align 8
  %836 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %835, i64 0, i32 3, i32 0, i32 0, i32 0
  %837 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %836, align 8
  %838 = icmp eq %"class.WTF::StringImpl"* %786, %837
  br i1 %838, label %839, label %910

839:                                              ; preds = %825, %797, %804, %832, %818, %811, %790, %781
  %840 = bitcast %"class.blink::AtomicHTMLToken"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %840) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %840, i8 -86, i64 56, i1 false)
  %841 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE to %"class.blink::QualifiedName"**), align 8
  %842 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %841, i64 0, i32 0, i32 0
  %843 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %842, align 8
  %844 = bitcast %"class.WTF::Vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %844) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %844, i8 0, i64 16, i1 false) #13
  %845 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %5, i64 0, i32 0
  store i32 3, i32* %845, align 8
  %846 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %843, i64 0, i32 3, i32 0, i32 0, i32 0
  %847 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %846, align 8
  %848 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %847, %"class.WTF::StringImpl"** %848, align 8
  %849 = icmp eq %"class.WTF::StringImpl"* %847, null
  br i1 %849, label %867, label %850

850:                                              ; preds = %839
  %851 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %847, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %852 = load atomic i32, i32* %851 monotonic, align 4
  %853 = and i32 %852, 2
  %854 = icmp eq i32 %853, 0
  br i1 %854, label %855, label %867

855:                                              ; preds = %850
  %856 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %847, i64 0, i32 0
  %857 = load i32, i32* %856, align 4
  %858 = zext i32 %857 to i33
  %859 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %858, i33 1) #13
  %860 = extractvalue { i33, i1 } %859, 1
  %861 = extractvalue { i33, i1 } %859, 0
  %862 = icmp slt i33 %861, 0
  %863 = or i1 %860, %862
  br i1 %863, label %864, label %865, !prof !2

864:                                              ; preds = %855
  tail call void @llvm.trap() #13
  unreachable

865:                                              ; preds = %855
  %866 = trunc i33 %861 to i32
  store i32 %866, i32* %856, align 4
  br label %867

867:                                              ; preds = %839, %850, %865
  %868 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %5, i64 0, i32 2, i32 0, i32 0
  %869 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %5, i64 0, i32 6
  %870 = bitcast %"class.WTF::StringImpl"** %868 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %870, i8 0, i64 18, i1 false) #13
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %869, %"class.WTF::Vector"* nonnull dereferenceable(16) %6) #13
  %871 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %872 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %871, align 8
  %873 = icmp eq %"class.blink::Attribute"* %872, null
  br i1 %873, label %909, label %874, !prof !3

874:                                              ; preds = %867
  %875 = bitcast %"class.blink::Attribute"* %872 to i8*
  %876 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  %877 = load i32, i32* %876, align 4
  %878 = icmp eq i32 %877, 0
  br i1 %878, label %907, label %879, !prof !2

879:                                              ; preds = %874
  %880 = zext i32 %877 to i64
  %881 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %872, i64 %880
  br label %882

882:                                              ; preds = %900, %879
  %883 = phi %"class.blink::Attribute"* [ %902, %900 ], [ %872, %879 ]
  %884 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %883, i64 0, i32 1, i32 0, i32 0, i32 0
  %885 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %884, align 8
  %886 = icmp eq %"class.WTF::StringImpl"* %885, null
  br i1 %886, label %900, label %887

887:                                              ; preds = %882
  %888 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %885, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %889 = load atomic i32, i32* %888 monotonic, align 4
  %890 = and i32 %889, 2
  %891 = icmp eq i32 %890, 0
  %892 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %885, i64 0, i32 0
  %893 = load i32, i32* %892, align 4
  br i1 %891, label %894, label %896

894:                                              ; preds = %887
  %895 = add i32 %893, -1
  store i32 %895, i32* %892, align 4
  br label %896

896:                                              ; preds = %894, %887
  %897 = phi i32 [ %895, %894 ], [ %893, %887 ]
  %898 = icmp eq i32 %897, 0
  br i1 %898, label %899, label %900

899:                                              ; preds = %896
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %885) #13
  br label %900

900:                                              ; preds = %899, %896, %882
  %901 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %883, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %901) #13
  %902 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %883, i64 1
  %903 = icmp eq %"class.blink::Attribute"* %902, %881
  br i1 %903, label %904, label %882

904:                                              ; preds = %900
  store i32 0, i32* %876, align 4
  %905 = bitcast %"class.WTF::Vector"* %6 to i8**
  %906 = load i8*, i8** %905, align 8
  br label %907

907:                                              ; preds = %904, %874
  %908 = phi i8* [ %906, %904 ], [ %875, %874 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %908) #13
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %871, align 8
  br label %909

909:                                              ; preds = %867, %907
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %844) #13
  call void @_ZN5blink15HTMLTreeBuilder13ProcessEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* nonnull %5)
  call void @_ZN5blink15HTMLTreeBuilder15ProcessStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %840) #13
  br label %1494

910:                                              ; preds = %21, %832
  %911 = phi %"class.WTF::StringImpl"* [ %23, %21 ], [ %786, %832 ]
  %912 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %913 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %912, i64 0, i32 0, i32 0
  %914 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %913, align 8
  %915 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %914, i64 0, i32 3, i32 0, i32 0, i32 0
  %916 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %915, align 8
  %917 = icmp eq %"class.WTF::StringImpl"* %911, %916
  br i1 %917, label %918, label %923

918:                                              ; preds = %910
  %919 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %920 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack22HasTemplateInHTMLScopeEv(%"class.blink::HTMLElementStack"* %919) #13
  br i1 %920, label %1494, label %921

921:                                              ; preds = %918
  %922 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite28InsertHTMLHtmlStartTagInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %922, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %1494

923:                                              ; preds = %910
  %924 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE to %"class.blink::QualifiedName"**), align 8
  %925 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %924, i64 0, i32 0, i32 0
  %926 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %925, align 8
  %927 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %926, i64 0, i32 3, i32 0, i32 0, i32 0
  %928 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %927, align 8
  %929 = icmp eq %"class.WTF::StringImpl"* %911, %928
  br i1 %929, label %930, label %1015

930:                                              ; preds = %923
  %931 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %932 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0
  %933 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %932, align 8
  %934 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %933, i64 0, i32 0, i32 0, i32 0
  %935 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %934, align 8
  %936 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %935, i64 0, i32 1, i32 0, i32 0, i32 0
  %937 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %936, align 8
  %938 = icmp eq %"class.WTF::StringImpl"* %937, %911
  br i1 %938, label %939, label %1014

939:                                              ; preds = %930
  %940 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %935, i64 0, i32 3, i32 0, i32 0, i32 0
  %941 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %940, align 8
  %942 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %926, i64 0, i32 4, i32 0, i32 0, i32 0
  %943 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %942, align 8
  %944 = icmp eq %"class.WTF::StringImpl"* %941, %943
  br i1 %944, label %945, label %1014

945:                                              ; preds = %939
  %946 = bitcast %"class.blink::AtomicHTMLToken"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %946) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %946, i8 -86, i64 56, i1 false)
  %947 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %925, align 8
  %948 = bitcast %"class.WTF::Vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %948) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %948, i8 0, i64 16, i1 false) #13
  %949 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %7, i64 0, i32 0
  store i32 3, i32* %949, align 8
  %950 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %947, i64 0, i32 3, i32 0, i32 0, i32 0
  %951 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %950, align 8
  %952 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %951, %"class.WTF::StringImpl"** %952, align 8
  %953 = icmp eq %"class.WTF::StringImpl"* %951, null
  br i1 %953, label %971, label %954

954:                                              ; preds = %945
  %955 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %951, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %956 = load atomic i32, i32* %955 monotonic, align 4
  %957 = and i32 %956, 2
  %958 = icmp eq i32 %957, 0
  br i1 %958, label %959, label %971

959:                                              ; preds = %954
  %960 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %951, i64 0, i32 0
  %961 = load i32, i32* %960, align 4
  %962 = zext i32 %961 to i33
  %963 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %962, i33 1) #13
  %964 = extractvalue { i33, i1 } %963, 1
  %965 = extractvalue { i33, i1 } %963, 0
  %966 = icmp slt i33 %965, 0
  %967 = or i1 %964, %966
  br i1 %967, label %968, label %969, !prof !2

968:                                              ; preds = %959
  tail call void @llvm.trap() #13
  unreachable

969:                                              ; preds = %959
  %970 = trunc i33 %965 to i32
  store i32 %970, i32* %960, align 4
  br label %971

971:                                              ; preds = %945, %954, %969
  %972 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %7, i64 0, i32 2, i32 0, i32 0
  %973 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %7, i64 0, i32 6
  %974 = bitcast %"class.WTF::StringImpl"** %972 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %974, i8 0, i64 18, i1 false) #13
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %973, %"class.WTF::Vector"* nonnull dereferenceable(16) %8) #13
  %975 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 0
  %976 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %975, align 8
  %977 = icmp eq %"class.blink::Attribute"* %976, null
  br i1 %977, label %1013, label %978, !prof !3

978:                                              ; preds = %971
  %979 = bitcast %"class.blink::Attribute"* %976 to i8*
  %980 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 2
  %981 = load i32, i32* %980, align 4
  %982 = icmp eq i32 %981, 0
  br i1 %982, label %1011, label %983, !prof !2

983:                                              ; preds = %978
  %984 = zext i32 %981 to i64
  %985 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %976, i64 %984
  br label %986

986:                                              ; preds = %1004, %983
  %987 = phi %"class.blink::Attribute"* [ %1006, %1004 ], [ %976, %983 ]
  %988 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %987, i64 0, i32 1, i32 0, i32 0, i32 0
  %989 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %988, align 8
  %990 = icmp eq %"class.WTF::StringImpl"* %989, null
  br i1 %990, label %1004, label %991

991:                                              ; preds = %986
  %992 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %989, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %993 = load atomic i32, i32* %992 monotonic, align 4
  %994 = and i32 %993, 2
  %995 = icmp eq i32 %994, 0
  %996 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %989, i64 0, i32 0
  %997 = load i32, i32* %996, align 4
  br i1 %995, label %998, label %1000

998:                                              ; preds = %991
  %999 = add i32 %997, -1
  store i32 %999, i32* %996, align 4
  br label %1000

1000:                                             ; preds = %998, %991
  %1001 = phi i32 [ %999, %998 ], [ %997, %991 ]
  %1002 = icmp eq i32 %1001, 0
  br i1 %1002, label %1003, label %1004

1003:                                             ; preds = %1000
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %989) #13
  br label %1004

1004:                                             ; preds = %1003, %1000, %986
  %1005 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %987, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %1005) #13
  %1006 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %987, i64 1
  %1007 = icmp eq %"class.blink::Attribute"* %1006, %985
  br i1 %1007, label %1008, label %986

1008:                                             ; preds = %1004
  store i32 0, i32* %980, align 4
  %1009 = bitcast %"class.WTF::Vector"* %8 to i8**
  %1010 = load i8*, i8** %1009, align 8
  br label %1011

1011:                                             ; preds = %1008, %978
  %1012 = phi i8* [ %1010, %1008 ], [ %979, %978 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1012) #13
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %975, align 8
  br label %1013

1013:                                             ; preds = %971, %1011
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %948) #13
  call void @_ZN5blink15HTMLTreeBuilder13ProcessEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* nonnull %7)
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %946) #13
  br label %1014

1014:                                             ; preds = %930, %1013, %939
  call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %931, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %1494

1015:                                             ; preds = %923
  %1016 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kOptgroupTagE to %"class.blink::QualifiedName"**), align 8
  %1017 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1016, i64 0, i32 0, i32 0
  %1018 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1017, align 8
  %1019 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1018, i64 0, i32 3, i32 0, i32 0, i32 0
  %1020 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1019, align 8
  %1021 = icmp eq %"class.WTF::StringImpl"* %911, %1020
  br i1 %1021, label %1022, label %1196

1022:                                             ; preds = %1015
  %1023 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %1024 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0
  %1025 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %1024, align 8
  %1026 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %1025, i64 0, i32 0, i32 0, i32 0
  %1027 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %1026, align 8
  %1028 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %1027, i64 0, i32 1, i32 0, i32 0, i32 0
  %1029 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1028, align 8
  %1030 = icmp eq %"class.WTF::StringImpl"* %1029, %928
  br i1 %1030, label %1031, label %1114

1031:                                             ; preds = %1022
  %1032 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %1027, i64 0, i32 3, i32 0, i32 0, i32 0
  %1033 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1032, align 8
  %1034 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %926, i64 0, i32 4, i32 0, i32 0, i32 0
  %1035 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1034, align 8
  %1036 = icmp eq %"class.WTF::StringImpl"* %1033, %1035
  br i1 %1036, label %1037, label %1114

1037:                                             ; preds = %1031
  %1038 = bitcast %"class.blink::AtomicHTMLToken"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1038) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1038, i8 -86, i64 56, i1 false)
  %1039 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %925, align 8
  %1040 = bitcast %"class.WTF::Vector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1040) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1040, i8 0, i64 16, i1 false) #13
  %1041 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %9, i64 0, i32 0
  store i32 3, i32* %1041, align 8
  %1042 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1039, i64 0, i32 3, i32 0, i32 0, i32 0
  %1043 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1042, align 8
  %1044 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1043, %"class.WTF::StringImpl"** %1044, align 8
  %1045 = icmp eq %"class.WTF::StringImpl"* %1043, null
  br i1 %1045, label %1063, label %1046

1046:                                             ; preds = %1037
  %1047 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1043, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1048 = load atomic i32, i32* %1047 monotonic, align 4
  %1049 = and i32 %1048, 2
  %1050 = icmp eq i32 %1049, 0
  br i1 %1050, label %1051, label %1063

1051:                                             ; preds = %1046
  %1052 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1043, i64 0, i32 0
  %1053 = load i32, i32* %1052, align 4
  %1054 = zext i32 %1053 to i33
  %1055 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1054, i33 1) #13
  %1056 = extractvalue { i33, i1 } %1055, 1
  %1057 = extractvalue { i33, i1 } %1055, 0
  %1058 = icmp slt i33 %1057, 0
  %1059 = or i1 %1056, %1058
  br i1 %1059, label %1060, label %1061, !prof !2

1060:                                             ; preds = %1051
  tail call void @llvm.trap() #13
  unreachable

1061:                                             ; preds = %1051
  %1062 = trunc i33 %1057 to i32
  store i32 %1062, i32* %1052, align 4
  br label %1063

1063:                                             ; preds = %1037, %1046, %1061
  %1064 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %9, i64 0, i32 2, i32 0, i32 0
  %1065 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %9, i64 0, i32 6
  %1066 = bitcast %"class.WTF::StringImpl"** %1064 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1066, i8 0, i64 18, i1 false) #13
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %1065, %"class.WTF::Vector"* nonnull dereferenceable(16) %10) #13
  %1067 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %10, i64 0, i32 0, i32 0, i32 0
  %1068 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %1067, align 8
  %1069 = icmp eq %"class.blink::Attribute"* %1068, null
  br i1 %1069, label %1105, label %1070, !prof !3

1070:                                             ; preds = %1063
  %1071 = bitcast %"class.blink::Attribute"* %1068 to i8*
  %1072 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %10, i64 0, i32 0, i32 0, i32 2
  %1073 = load i32, i32* %1072, align 4
  %1074 = icmp eq i32 %1073, 0
  br i1 %1074, label %1103, label %1075, !prof !2

1075:                                             ; preds = %1070
  %1076 = zext i32 %1073 to i64
  %1077 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1068, i64 %1076
  br label %1078

1078:                                             ; preds = %1096, %1075
  %1079 = phi %"class.blink::Attribute"* [ %1098, %1096 ], [ %1068, %1075 ]
  %1080 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1079, i64 0, i32 1, i32 0, i32 0, i32 0
  %1081 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1080, align 8
  %1082 = icmp eq %"class.WTF::StringImpl"* %1081, null
  br i1 %1082, label %1096, label %1083

1083:                                             ; preds = %1078
  %1084 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1081, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1085 = load atomic i32, i32* %1084 monotonic, align 4
  %1086 = and i32 %1085, 2
  %1087 = icmp eq i32 %1086, 0
  %1088 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1081, i64 0, i32 0
  %1089 = load i32, i32* %1088, align 4
  br i1 %1087, label %1090, label %1092

1090:                                             ; preds = %1083
  %1091 = add i32 %1089, -1
  store i32 %1091, i32* %1088, align 4
  br label %1092

1092:                                             ; preds = %1090, %1083
  %1093 = phi i32 [ %1091, %1090 ], [ %1089, %1083 ]
  %1094 = icmp eq i32 %1093, 0
  br i1 %1094, label %1095, label %1096

1095:                                             ; preds = %1092
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1081) #13
  br label %1096

1096:                                             ; preds = %1095, %1092, %1078
  %1097 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1079, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %1097) #13
  %1098 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1079, i64 1
  %1099 = icmp eq %"class.blink::Attribute"* %1098, %1077
  br i1 %1099, label %1100, label %1078

1100:                                             ; preds = %1096
  store i32 0, i32* %1072, align 4
  %1101 = bitcast %"class.WTF::Vector"* %10 to i8**
  %1102 = load i8*, i8** %1101, align 8
  br label %1103

1103:                                             ; preds = %1100, %1070
  %1104 = phi i8* [ %1102, %1100 ], [ %1071, %1070 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1104) #13
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %1067, align 8
  br label %1105

1105:                                             ; preds = %1063, %1103
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1040) #13
  call void @_ZN5blink15HTMLTreeBuilder13ProcessEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* nonnull %9)
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1038) #13
  %1106 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %1024, align 8
  %1107 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %1106, i64 0, i32 0, i32 0, i32 0
  %1108 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %1107, align 8
  %1109 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1017, align 8
  %1110 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %1108, i64 0, i32 1, i32 0, i32 0, i32 0
  %1111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1110, align 8
  %1112 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1109, i64 0, i32 3, i32 0, i32 0, i32 0
  %1113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1112, align 8
  br label %1114

1114:                                             ; preds = %1022, %1105, %1031
  %1115 = phi %"class.WTF::StringImpl"* [ %911, %1022 ], [ %1113, %1105 ], [ %911, %1031 ]
  %1116 = phi %"class.WTF::StringImpl"* [ %1029, %1022 ], [ %1111, %1105 ], [ %928, %1031 ]
  %1117 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %1018, %1022 ], [ %1109, %1105 ], [ %1018, %1031 ]
  %1118 = phi %"class.blink::HTMLStackItem"* [ %1027, %1022 ], [ %1108, %1105 ], [ %1027, %1031 ]
  %1119 = icmp eq %"class.WTF::StringImpl"* %1116, %1115
  br i1 %1119, label %1120, label %1195

1120:                                             ; preds = %1114
  %1121 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %1118, i64 0, i32 3, i32 0, i32 0, i32 0
  %1122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1121, align 8
  %1123 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1117, i64 0, i32 4, i32 0, i32 0, i32 0
  %1124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1123, align 8
  %1125 = icmp eq %"class.WTF::StringImpl"* %1122, %1124
  br i1 %1125, label %1126, label %1195

1126:                                             ; preds = %1120
  %1127 = bitcast %"class.blink::AtomicHTMLToken"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1127) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1127, i8 -86, i64 56, i1 false)
  %1128 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1017, align 8
  %1129 = bitcast %"class.WTF::Vector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1129) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1129, i8 0, i64 16, i1 false) #13
  %1130 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %11, i64 0, i32 0
  store i32 3, i32* %1130, align 8
  %1131 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1128, i64 0, i32 3, i32 0, i32 0, i32 0
  %1132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1131, align 8
  %1133 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1132, %"class.WTF::StringImpl"** %1133, align 8
  %1134 = icmp eq %"class.WTF::StringImpl"* %1132, null
  br i1 %1134, label %1152, label %1135

1135:                                             ; preds = %1126
  %1136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1137 = load atomic i32, i32* %1136 monotonic, align 4
  %1138 = and i32 %1137, 2
  %1139 = icmp eq i32 %1138, 0
  br i1 %1139, label %1140, label %1152

1140:                                             ; preds = %1135
  %1141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1132, i64 0, i32 0
  %1142 = load i32, i32* %1141, align 4
  %1143 = zext i32 %1142 to i33
  %1144 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1143, i33 1) #13
  %1145 = extractvalue { i33, i1 } %1144, 1
  %1146 = extractvalue { i33, i1 } %1144, 0
  %1147 = icmp slt i33 %1146, 0
  %1148 = or i1 %1145, %1147
  br i1 %1148, label %1149, label %1150, !prof !2

1149:                                             ; preds = %1140
  call void @llvm.trap() #13
  unreachable

1150:                                             ; preds = %1140
  %1151 = trunc i33 %1146 to i32
  store i32 %1151, i32* %1141, align 4
  br label %1152

1152:                                             ; preds = %1126, %1135, %1150
  %1153 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %11, i64 0, i32 2, i32 0, i32 0
  %1154 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %11, i64 0, i32 6
  %1155 = bitcast %"class.WTF::StringImpl"** %1153 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1155, i8 0, i64 18, i1 false) #13
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %1154, %"class.WTF::Vector"* nonnull dereferenceable(16) %12) #13
  %1156 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %12, i64 0, i32 0, i32 0, i32 0
  %1157 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %1156, align 8
  %1158 = icmp eq %"class.blink::Attribute"* %1157, null
  br i1 %1158, label %1194, label %1159, !prof !3

1159:                                             ; preds = %1152
  %1160 = bitcast %"class.blink::Attribute"* %1157 to i8*
  %1161 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %12, i64 0, i32 0, i32 0, i32 2
  %1162 = load i32, i32* %1161, align 4
  %1163 = icmp eq i32 %1162, 0
  br i1 %1163, label %1192, label %1164, !prof !2

1164:                                             ; preds = %1159
  %1165 = zext i32 %1162 to i64
  %1166 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1157, i64 %1165
  br label %1167

1167:                                             ; preds = %1185, %1164
  %1168 = phi %"class.blink::Attribute"* [ %1187, %1185 ], [ %1157, %1164 ]
  %1169 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1168, i64 0, i32 1, i32 0, i32 0, i32 0
  %1170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1169, align 8
  %1171 = icmp eq %"class.WTF::StringImpl"* %1170, null
  br i1 %1171, label %1185, label %1172

1172:                                             ; preds = %1167
  %1173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1174 = load atomic i32, i32* %1173 monotonic, align 4
  %1175 = and i32 %1174, 2
  %1176 = icmp eq i32 %1175, 0
  %1177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1170, i64 0, i32 0
  %1178 = load i32, i32* %1177, align 4
  br i1 %1176, label %1179, label %1181

1179:                                             ; preds = %1172
  %1180 = add i32 %1178, -1
  store i32 %1180, i32* %1177, align 4
  br label %1181

1181:                                             ; preds = %1179, %1172
  %1182 = phi i32 [ %1180, %1179 ], [ %1178, %1172 ]
  %1183 = icmp eq i32 %1182, 0
  br i1 %1183, label %1184, label %1185

1184:                                             ; preds = %1181
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1170) #13
  br label %1185

1185:                                             ; preds = %1184, %1181, %1167
  %1186 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1168, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %1186) #13
  %1187 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1168, i64 1
  %1188 = icmp eq %"class.blink::Attribute"* %1187, %1166
  br i1 %1188, label %1189, label %1167

1189:                                             ; preds = %1185
  store i32 0, i32* %1161, align 4
  %1190 = bitcast %"class.WTF::Vector"* %12 to i8**
  %1191 = load i8*, i8** %1190, align 8
  br label %1192

1192:                                             ; preds = %1189, %1159
  %1193 = phi i8* [ %1191, %1189 ], [ %1160, %1159 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1193) #13
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %1156, align 8
  br label %1194

1194:                                             ; preds = %1152, %1192
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1129) #13
  call void @_ZN5blink15HTMLTreeBuilder13ProcessEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* nonnull %11)
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1127) #13
  br label %1195

1195:                                             ; preds = %1114, %1194, %1120
  call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %1023, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %1494

1196:                                             ; preds = %1015
  %1197 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE to %"class.blink::QualifiedName"**), align 8
  %1198 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1197, i64 0, i32 0, i32 0
  %1199 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1198, align 8
  %1200 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1199, i64 0, i32 3, i32 0, i32 0, i32 0
  %1201 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1200, align 8
  %1202 = icmp eq %"class.WTF::StringImpl"* %911, %1201
  br i1 %1202, label %1203, label %1272

1203:                                             ; preds = %1196
  %1204 = bitcast %"class.blink::AtomicHTMLToken"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1204) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1204, i8 -86, i64 56, i1 false)
  %1205 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1198, align 8
  %1206 = bitcast %"class.WTF::Vector"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1206) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1206, i8 0, i64 16, i1 false) #13
  %1207 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %13, i64 0, i32 0
  store i32 3, i32* %1207, align 8
  %1208 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1205, i64 0, i32 3, i32 0, i32 0, i32 0
  %1209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1208, align 8
  %1210 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %13, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1209, %"class.WTF::StringImpl"** %1210, align 8
  %1211 = icmp eq %"class.WTF::StringImpl"* %1209, null
  br i1 %1211, label %1229, label %1212

1212:                                             ; preds = %1203
  %1213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1209, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1214 = load atomic i32, i32* %1213 monotonic, align 4
  %1215 = and i32 %1214, 2
  %1216 = icmp eq i32 %1215, 0
  br i1 %1216, label %1217, label %1229

1217:                                             ; preds = %1212
  %1218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1209, i64 0, i32 0
  %1219 = load i32, i32* %1218, align 4
  %1220 = zext i32 %1219 to i33
  %1221 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1220, i33 1) #13
  %1222 = extractvalue { i33, i1 } %1221, 1
  %1223 = extractvalue { i33, i1 } %1221, 0
  %1224 = icmp slt i33 %1223, 0
  %1225 = or i1 %1222, %1224
  br i1 %1225, label %1226, label %1227, !prof !2

1226:                                             ; preds = %1217
  tail call void @llvm.trap() #13
  unreachable

1227:                                             ; preds = %1217
  %1228 = trunc i33 %1223 to i32
  store i32 %1228, i32* %1218, align 4
  br label %1229

1229:                                             ; preds = %1203, %1212, %1227
  %1230 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %13, i64 0, i32 2, i32 0, i32 0
  %1231 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %13, i64 0, i32 6
  %1232 = bitcast %"class.WTF::StringImpl"** %1230 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1232, i8 0, i64 18, i1 false) #13
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %1231, %"class.WTF::Vector"* nonnull dereferenceable(16) %14) #13
  %1233 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %14, i64 0, i32 0, i32 0, i32 0
  %1234 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %1233, align 8
  %1235 = icmp eq %"class.blink::Attribute"* %1234, null
  br i1 %1235, label %1271, label %1236, !prof !3

1236:                                             ; preds = %1229
  %1237 = bitcast %"class.blink::Attribute"* %1234 to i8*
  %1238 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %14, i64 0, i32 0, i32 0, i32 2
  %1239 = load i32, i32* %1238, align 4
  %1240 = icmp eq i32 %1239, 0
  br i1 %1240, label %1269, label %1241, !prof !2

1241:                                             ; preds = %1236
  %1242 = zext i32 %1239 to i64
  %1243 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1234, i64 %1242
  br label %1244

1244:                                             ; preds = %1262, %1241
  %1245 = phi %"class.blink::Attribute"* [ %1264, %1262 ], [ %1234, %1241 ]
  %1246 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1245, i64 0, i32 1, i32 0, i32 0, i32 0
  %1247 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1246, align 8
  %1248 = icmp eq %"class.WTF::StringImpl"* %1247, null
  br i1 %1248, label %1262, label %1249

1249:                                             ; preds = %1244
  %1250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1247, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1251 = load atomic i32, i32* %1250 monotonic, align 4
  %1252 = and i32 %1251, 2
  %1253 = icmp eq i32 %1252, 0
  %1254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1247, i64 0, i32 0
  %1255 = load i32, i32* %1254, align 4
  br i1 %1253, label %1256, label %1258

1256:                                             ; preds = %1249
  %1257 = add i32 %1255, -1
  store i32 %1257, i32* %1254, align 4
  br label %1258

1258:                                             ; preds = %1256, %1249
  %1259 = phi i32 [ %1257, %1256 ], [ %1255, %1249 ]
  %1260 = icmp eq i32 %1259, 0
  br i1 %1260, label %1261, label %1262

1261:                                             ; preds = %1258
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1247) #13
  br label %1262

1262:                                             ; preds = %1261, %1258, %1244
  %1263 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1245, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %1263) #13
  %1264 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1245, i64 1
  %1265 = icmp eq %"class.blink::Attribute"* %1264, %1243
  br i1 %1265, label %1266, label %1244

1266:                                             ; preds = %1262
  store i32 0, i32* %1238, align 4
  %1267 = bitcast %"class.WTF::Vector"* %14 to i8**
  %1268 = load i8*, i8** %1267, align 8
  br label %1269

1269:                                             ; preds = %1266, %1236
  %1270 = phi i8* [ %1268, %1266 ], [ %1237, %1236 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1270) #13
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %1233, align 8
  br label %1271

1271:                                             ; preds = %1229, %1269
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1206) #13
  call void @_ZN5blink15HTMLTreeBuilder13ProcessEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* nonnull %13)
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1204) #13
  br label %1494

1272:                                             ; preds = %1196
  %1273 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE to %"class.blink::QualifiedName"**), align 8
  %1274 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1273, i64 0, i32 0, i32 0
  %1275 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1274, align 8
  %1276 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1275, i64 0, i32 3, i32 0, i32 0, i32 0
  %1277 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1276, align 8
  %1278 = icmp eq %"class.WTF::StringImpl"* %911, %1277
  br i1 %1278, label %1293, label %1279

1279:                                             ; preds = %1272
  %1280 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kKeygenTagE to %"class.blink::QualifiedName"**), align 8
  %1281 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1280, i64 0, i32 0, i32 0
  %1282 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1281, align 8
  %1283 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1282, i64 0, i32 3, i32 0, i32 0, i32 0
  %1284 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1283, align 8
  %1285 = icmp eq %"class.WTF::StringImpl"* %911, %1284
  br i1 %1285, label %1293, label %1286

1286:                                             ; preds = %1279
  %1287 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTextareaTagE to %"class.blink::QualifiedName"**), align 8
  %1288 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1287, i64 0, i32 0, i32 0
  %1289 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1288, align 8
  %1290 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1289, i64 0, i32 3, i32 0, i32 0, i32 0
  %1291 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1290, align 8
  %1292 = icmp eq %"class.WTF::StringImpl"* %911, %1291
  br i1 %1292, label %1293, label %1365

1293:                                             ; preds = %1286, %1279, %1272
  %1294 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %1295 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack13InSelectScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"* %1294, %"class.blink::QualifiedName"* dereferenceable(8) %1197) #13
  br i1 %1295, label %1296, label %1494

1296:                                             ; preds = %1293
  %1297 = bitcast %"class.blink::AtomicHTMLToken"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1297) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1297, i8 -86, i64 56, i1 false)
  %1298 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1198, align 8
  %1299 = bitcast %"class.WTF::Vector"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1299) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1299, i8 0, i64 16, i1 false) #13
  %1300 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %15, i64 0, i32 0
  store i32 3, i32* %1300, align 8
  %1301 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1298, i64 0, i32 3, i32 0, i32 0, i32 0
  %1302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1301, align 8
  %1303 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1302, %"class.WTF::StringImpl"** %1303, align 8
  %1304 = icmp eq %"class.WTF::StringImpl"* %1302, null
  br i1 %1304, label %1322, label %1305

1305:                                             ; preds = %1296
  %1306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1307 = load atomic i32, i32* %1306 monotonic, align 4
  %1308 = and i32 %1307, 2
  %1309 = icmp eq i32 %1308, 0
  br i1 %1309, label %1310, label %1322

1310:                                             ; preds = %1305
  %1311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1302, i64 0, i32 0
  %1312 = load i32, i32* %1311, align 4
  %1313 = zext i32 %1312 to i33
  %1314 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1313, i33 1) #13
  %1315 = extractvalue { i33, i1 } %1314, 1
  %1316 = extractvalue { i33, i1 } %1314, 0
  %1317 = icmp slt i33 %1316, 0
  %1318 = or i1 %1315, %1317
  br i1 %1318, label %1319, label %1320, !prof !2

1319:                                             ; preds = %1310
  tail call void @llvm.trap() #13
  unreachable

1320:                                             ; preds = %1310
  %1321 = trunc i33 %1316 to i32
  store i32 %1321, i32* %1311, align 4
  br label %1322

1322:                                             ; preds = %1296, %1305, %1320
  %1323 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %15, i64 0, i32 2, i32 0, i32 0
  %1324 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %15, i64 0, i32 6
  %1325 = bitcast %"class.WTF::StringImpl"** %1323 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1325, i8 0, i64 18, i1 false) #13
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %1324, %"class.WTF::Vector"* nonnull dereferenceable(16) %16) #13
  %1326 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %16, i64 0, i32 0, i32 0, i32 0
  %1327 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %1326, align 8
  %1328 = icmp eq %"class.blink::Attribute"* %1327, null
  br i1 %1328, label %1364, label %1329, !prof !3

1329:                                             ; preds = %1322
  %1330 = bitcast %"class.blink::Attribute"* %1327 to i8*
  %1331 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %16, i64 0, i32 0, i32 0, i32 2
  %1332 = load i32, i32* %1331, align 4
  %1333 = icmp eq i32 %1332, 0
  br i1 %1333, label %1362, label %1334, !prof !2

1334:                                             ; preds = %1329
  %1335 = zext i32 %1332 to i64
  %1336 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1327, i64 %1335
  br label %1337

1337:                                             ; preds = %1355, %1334
  %1338 = phi %"class.blink::Attribute"* [ %1357, %1355 ], [ %1327, %1334 ]
  %1339 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1338, i64 0, i32 1, i32 0, i32 0, i32 0
  %1340 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1339, align 8
  %1341 = icmp eq %"class.WTF::StringImpl"* %1340, null
  br i1 %1341, label %1355, label %1342

1342:                                             ; preds = %1337
  %1343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1340, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1344 = load atomic i32, i32* %1343 monotonic, align 4
  %1345 = and i32 %1344, 2
  %1346 = icmp eq i32 %1345, 0
  %1347 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1340, i64 0, i32 0
  %1348 = load i32, i32* %1347, align 4
  br i1 %1346, label %1349, label %1351

1349:                                             ; preds = %1342
  %1350 = add i32 %1348, -1
  store i32 %1350, i32* %1347, align 4
  br label %1351

1351:                                             ; preds = %1349, %1342
  %1352 = phi i32 [ %1350, %1349 ], [ %1348, %1342 ]
  %1353 = icmp eq i32 %1352, 0
  br i1 %1353, label %1354, label %1355

1354:                                             ; preds = %1351
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1340) #13
  br label %1355

1355:                                             ; preds = %1354, %1351, %1337
  %1356 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1338, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %1356) #13
  %1357 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1338, i64 1
  %1358 = icmp eq %"class.blink::Attribute"* %1357, %1336
  br i1 %1358, label %1359, label %1337

1359:                                             ; preds = %1355
  store i32 0, i32* %1331, align 4
  %1360 = bitcast %"class.WTF::Vector"* %16 to i8**
  %1361 = load i8*, i8** %1360, align 8
  br label %1362

1362:                                             ; preds = %1359, %1329
  %1363 = phi i8* [ %1361, %1359 ], [ %1330, %1329 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1363) #13
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %1326, align 8
  br label %1364

1364:                                             ; preds = %1322, %1362
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1299) #13
  call void @_ZN5blink15HTMLTreeBuilder13ProcessEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* nonnull %15)
  call void @_ZN5blink15HTMLTreeBuilder15ProcessStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1297) #13
  br label %1494

1365:                                             ; preds = %1286
  %1366 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %1367 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1366, i64 0, i32 0, i32 0
  %1368 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1367, align 8
  %1369 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1368, i64 0, i32 3, i32 0, i32 0, i32 0
  %1370 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1369, align 8
  %1371 = icmp eq %"class.WTF::StringImpl"* %911, %1370
  br i1 %1371, label %1372, label %1374

1372:                                             ; preds = %1365
  %1373 = tail call zeroext i1 @_ZN5blink15HTMLTreeBuilder24ProcessStartTagForInHeadEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %1494

1374:                                             ; preds = %1365
  %1375 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %1376 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1375, i64 0, i32 0, i32 0
  %1377 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1376, align 8
  %1378 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1377, i64 0, i32 3, i32 0, i32 0, i32 0
  %1379 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1378, align 8
  %1380 = icmp eq %"class.WTF::StringImpl"* %911, %1379
  br i1 %1380, label %1381, label %1494

1381:                                             ; preds = %1374
  tail call void @_ZN5blink15HTMLTreeBuilder23ProcessTemplateStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %1494

1382:                                             ; preds = %2
  tail call void @_ZN5blink15HTMLTreeBuilder21DefaultForInTableTextEv(%"class.blink::HTMLTreeBuilder"* %0)
  tail call void @_ZN5blink15HTMLTreeBuilder15ProcessStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %1494

1383:                                             ; preds = %2
  %1384 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %1385 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1384, i64 0, i32 0, i32 0
  %1386 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1385, align 8
  %1387 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %1388 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1387, align 8
  %1389 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1386, i64 0, i32 3, i32 0, i32 0, i32 0
  %1390 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1389, align 8
  %1391 = icmp eq %"class.WTF::StringImpl"* %1388, %1390
  br i1 %1391, label %1392, label %1393

1392:                                             ; preds = %1383
  tail call void @_ZN5blink15HTMLTreeBuilder23ProcessTemplateStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %1494

1393:                                             ; preds = %1383
  %1394 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kLinkTagE to %"class.blink::QualifiedName"**), align 8
  %1395 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1394, i64 0, i32 0, i32 0
  %1396 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1395, align 8
  %1397 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1396, i64 0, i32 3, i32 0, i32 0, i32 0
  %1398 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1397, align 8
  %1399 = icmp eq %"class.WTF::StringImpl"* %1388, %1398
  br i1 %1399, label %1421, label %1400

1400:                                             ; preds = %1393
  %1401 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %1402 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1401, i64 0, i32 0, i32 0
  %1403 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1402, align 8
  %1404 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1403, i64 0, i32 3, i32 0, i32 0, i32 0
  %1405 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1404, align 8
  %1406 = icmp eq %"class.WTF::StringImpl"* %1388, %1405
  br i1 %1406, label %1421, label %1407

1407:                                             ; preds = %1400
  %1408 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kStyleTagE to %"class.blink::QualifiedName"**), align 8
  %1409 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1408, i64 0, i32 0, i32 0
  %1410 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1409, align 8
  %1411 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1410, i64 0, i32 3, i32 0, i32 0, i32 0
  %1412 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1411, align 8
  %1413 = icmp eq %"class.WTF::StringImpl"* %1388, %1412
  br i1 %1413, label %1421, label %1414

1414:                                             ; preds = %1407
  %1415 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMetaTagE to %"class.blink::QualifiedName"**), align 8
  %1416 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1415, i64 0, i32 0, i32 0
  %1417 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1416, align 8
  %1418 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1417, i64 0, i32 3, i32 0, i32 0, i32 0
  %1419 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1418, align 8
  %1420 = icmp eq %"class.WTF::StringImpl"* %1388, %1419
  br i1 %1420, label %1421, label %1423

1421:                                             ; preds = %1414, %1407, %1400, %1393
  %1422 = tail call zeroext i1 @_ZN5blink15HTMLTreeBuilder24ProcessStartTagForInHeadEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %1494

1423:                                             ; preds = %1414
  %1424 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kColTagE to %"class.blink::QualifiedName"**), align 8
  %1425 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1424, i64 0, i32 0, i32 0
  %1426 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1425, align 8
  %1427 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1426, i64 0, i32 3, i32 0, i32 0, i32 0
  %1428 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1427, align 8
  %1429 = icmp eq %"class.WTF::StringImpl"* %1388, %1428
  br i1 %1429, label %1487, label %1430

1430:                                             ; preds = %1423
  %1431 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kCaptionTagE to %"class.blink::QualifiedName"**), align 8
  %1432 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1431, i64 0, i32 0, i32 0
  %1433 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1432, align 8
  %1434 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1433, i64 0, i32 3, i32 0, i32 0, i32 0
  %1435 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1434, align 8
  %1436 = icmp eq %"class.WTF::StringImpl"* %1388, %1435
  br i1 %1436, label %1487, label %1437

1437:                                             ; preds = %1430
  %1438 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kColgroupTagE to %"class.blink::QualifiedName"**), align 8
  %1439 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1438, i64 0, i32 0, i32 0
  %1440 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1439, align 8
  %1441 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1440, i64 0, i32 3, i32 0, i32 0, i32 0
  %1442 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1441, align 8
  %1443 = icmp eq %"class.WTF::StringImpl"* %1388, %1442
  br i1 %1443, label %1487, label %1444

1444:                                             ; preds = %1437
  %1445 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE to %"class.blink::QualifiedName"**), align 8
  %1446 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1445, i64 0, i32 0, i32 0
  %1447 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1446, align 8
  %1448 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1447, i64 0, i32 3, i32 0, i32 0, i32 0
  %1449 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1448, align 8
  %1450 = icmp eq %"class.WTF::StringImpl"* %1388, %1449
  br i1 %1450, label %1487, label %1451

1451:                                             ; preds = %1444
  %1452 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE to %"class.blink::QualifiedName"**), align 8
  %1453 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1452, i64 0, i32 0, i32 0
  %1454 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1453, align 8
  %1455 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1454, i64 0, i32 3, i32 0, i32 0, i32 0
  %1456 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1455, align 8
  %1457 = icmp eq %"class.WTF::StringImpl"* %1388, %1456
  br i1 %1457, label %1487, label %1458

1458:                                             ; preds = %1451
  %1459 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE to %"class.blink::QualifiedName"**), align 8
  %1460 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1459, i64 0, i32 0, i32 0
  %1461 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1460, align 8
  %1462 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1461, i64 0, i32 3, i32 0, i32 0, i32 0
  %1463 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1462, align 8
  %1464 = icmp eq %"class.WTF::StringImpl"* %1388, %1463
  br i1 %1464, label %1487, label %1465

1465:                                             ; preds = %1458
  %1466 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE to %"class.blink::QualifiedName"**), align 8
  %1467 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1466, i64 0, i32 0, i32 0
  %1468 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1467, align 8
  %1469 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1468, i64 0, i32 3, i32 0, i32 0, i32 0
  %1470 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1469, align 8
  %1471 = icmp eq %"class.WTF::StringImpl"* %1388, %1470
  br i1 %1471, label %1487, label %1472

1472:                                             ; preds = %1465
  %1473 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE to %"class.blink::QualifiedName"**), align 8
  %1474 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1473, i64 0, i32 0, i32 0
  %1475 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1474, align 8
  %1476 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1475, i64 0, i32 3, i32 0, i32 0, i32 0
  %1477 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1476, align 8
  %1478 = icmp eq %"class.WTF::StringImpl"* %1388, %1477
  br i1 %1478, label %1486, label %1479

1479:                                             ; preds = %1472
  %1480 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE to %"class.blink::QualifiedName"**), align 8
  %1481 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1480, i64 0, i32 0, i32 0
  %1482 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1481, align 8
  %1483 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1482, i64 0, i32 3, i32 0, i32 0, i32 0
  %1484 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1483, align 8
  %1485 = icmp eq %"class.WTF::StringImpl"* %1388, %1484
  br i1 %1485, label %1486, label %1487

1486:                                             ; preds = %1472, %1479
  br label %1487

1487:                                             ; preds = %1444, %1451, %1430, %1486, %1479, %1465, %1437, %1458, %1423
  %1488 = phi i32 [ 12, %1423 ], [ 9, %1458 ], [ 9, %1437 ], [ 13, %1465 ], [ 14, %1486 ], [ 7, %1479 ], [ 9, %1430 ], [ 9, %1451 ], [ 9, %1444 ]
  %1489 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 6
  %1490 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %1491 = load i32, i32* %1490, align 4
  %1492 = add i32 %1491, -1
  %1493 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIN5blink15HTMLTreeBuilder13InsertionModeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.91"* %1489, i32 %1492) #13
  store i32 %1488, i32* %1493, align 4
  store i32 %1488, i32* %17, align 8
  tail call void @_ZN5blink15HTMLTreeBuilder15ProcessStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %1494

1494:                                             ; preds = %292, %315, %921, %918, %772, %770, %767, %749, %729, %726, %709, %663, %660, %648, %645, %625, %551, %472, %273, %270, %251, %176, %77, %74, %50, %47, %1374, %1293, %62, %35, %59, %86, %96, %168, %255, %282, %291, %337, %422, %475, %498, %554, %628, %707, %738, %747, %756, %779, %909, %1014, %1195, %1271, %1364, %1372, %1381, %1392, %1421, %2, %1487, %1382, %716, %650, %635, %555, %481, %327, %260, %185, %184
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder13ProcessEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::AtomicHTMLToken", align 8
  %4 = alloca %"class.WTF::Vector", align 8
  %5 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %750 [
    i32 0, label %14
    i32 1, label %16
    i32 2, label %9
    i32 3, label %78
    i32 5, label %7
    i32 7, label %144
    i32 9, label %145
    i32 11, label %146
    i32 12, label %251
    i32 14, label %349
    i32 15, label %350
    i32 13, label %351
    i32 18, label %352
    i32 21, label %366
    i32 4, label %367
    i32 8, label %386
    i32 19, label %440
    i32 20, label %483
    i32 6, label %739
    i32 17, label %493
    i32 16, label %11
    i32 10, label %738
  ]

7:                                                ; preds = %2
  %8 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE to %"class.blink::QualifiedName"**), align 8
  br label %120

9:                                                ; preds = %2
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHeadTagE to %"class.blink::QualifiedName"**), align 8
  br label %47

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  br label %626

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite27SetDefaultCompatibilityModeEv(%"class.blink::HTMLConstructionSite"* %15) #13
  store i32 1, i32* %5, align 8
  br label %16

16:                                               ; preds = %2, %14
  %17 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHeadTagE to %"class.blink::QualifiedName"**), align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  br i1 %24, label %46, label %25

25:                                               ; preds = %16
  %26 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE to %"class.blink::QualifiedName"**), align 8
  %27 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %21, %30
  br i1 %31, label %46, label %32

32:                                               ; preds = %25
  %33 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %21, %37
  br i1 %38, label %46, label %39

39:                                               ; preds = %32
  %40 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE to %"class.blink::QualifiedName"**), align 8
  %41 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %40, i64 0, i32 0, i32 0
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 3, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %21, %44
  br i1 %45, label %46, label %750

46:                                               ; preds = %39, %32, %25, %16
  tail call void @_ZN5blink15HTMLTreeBuilder20DefaultForBeforeHTMLEv(%"class.blink::HTMLTreeBuilder"* %0)
  br label %47

47:                                               ; preds = %9, %46
  %48 = phi %"class.blink::QualifiedName"* [ %10, %9 ], [ %17, %46 ]
  %49 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %48, i64 0, i32 0, i32 0
  %50 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 3, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %52, %54
  br i1 %55, label %77, label %56

56:                                               ; preds = %47
  %57 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE to %"class.blink::QualifiedName"**), align 8
  %58 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %57, i64 0, i32 0, i32 0
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %52, %61
  br i1 %62, label %77, label %63

63:                                               ; preds = %56
  %64 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %65 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 3, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %52, %68
  br i1 %69, label %77, label %70

70:                                               ; preds = %63
  %71 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE to %"class.blink::QualifiedName"**), align 8
  %72 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %71, i64 0, i32 0, i32 0
  %73 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %73, i64 0, i32 3, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %52, %75
  br i1 %76, label %77, label %750

77:                                               ; preds = %70, %63, %56, %47
  tail call void @_ZN5blink15HTMLTreeBuilder20DefaultForBeforeHeadEv(%"class.blink::HTMLTreeBuilder"* %0)
  br label %78

78:                                               ; preds = %2, %77
  %79 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %80 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %79, i64 0, i32 0, i32 0
  %81 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %81, i64 0, i32 3, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %83, %85
  br i1 %86, label %87, label %89

87:                                               ; preds = %78
  %88 = tail call zeroext i1 @_ZN5blink15HTMLTreeBuilder21ProcessTemplateEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* undef)
  br label %750

89:                                               ; preds = %78
  %90 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHeadTagE to %"class.blink::QualifiedName"**), align 8
  %91 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %90, i64 0, i32 0, i32 0
  %92 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %92, i64 0, i32 3, i32 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %83, %94
  br i1 %95, label %96, label %98

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  tail call void @_ZN5blink16HTMLElementStack18PopHTMLHeadElementEv(%"class.blink::HTMLElementStack"* %97) #13
  store i32 5, i32* %5, align 8
  br label %750

98:                                               ; preds = %89
  %99 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE to %"class.blink::QualifiedName"**), align 8
  %100 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %99, i64 0, i32 0, i32 0
  %101 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %101, i64 0, i32 3, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %83, %103
  br i1 %104, label %119, label %105

105:                                              ; preds = %98
  %106 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %107 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %106, i64 0, i32 0, i32 0
  %108 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %108, i64 0, i32 3, i32 0, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %83, %110
  br i1 %111, label %119, label %112

112:                                              ; preds = %105
  %113 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE to %"class.blink::QualifiedName"**), align 8
  %114 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %113, i64 0, i32 0, i32 0
  %115 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %115, i64 0, i32 3, i32 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %83, %117
  br i1 %118, label %119, label %750

119:                                              ; preds = %112, %105, %98
  tail call void @_ZN5blink15HTMLTreeBuilder16DefaultForInHeadEv(%"class.blink::HTMLTreeBuilder"* %0)
  br label %120

120:                                              ; preds = %7, %119
  %121 = phi %"class.blink::QualifiedName"* [ %8, %7 ], [ %99, %119 ]
  %122 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %121, i64 0, i32 0, i32 0
  %123 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %122, align 8
  %124 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %126 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %123, i64 0, i32 3, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %125, %127
  br i1 %128, label %143, label %129

129:                                              ; preds = %120
  %130 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %131 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %130, i64 0, i32 0, i32 0
  %132 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %131, align 8
  %133 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %132, i64 0, i32 3, i32 0, i32 0, i32 0
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %125, %134
  br i1 %135, label %143, label %136

136:                                              ; preds = %129
  %137 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE to %"class.blink::QualifiedName"**), align 8
  %138 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %137, i64 0, i32 0, i32 0
  %139 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %138, align 8
  %140 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %139, i64 0, i32 3, i32 0, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %125, %141
  br i1 %142, label %143, label %750

143:                                              ; preds = %136, %129, %120
  tail call void @_ZN5blink15HTMLTreeBuilder19DefaultForAfterHeadEv(%"class.blink::HTMLTreeBuilder"* %0)
  br label %144

144:                                              ; preds = %2, %143
  tail call void @_ZN5blink15HTMLTreeBuilder22ProcessEndTagForInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %750

145:                                              ; preds = %2
  tail call void @_ZN5blink15HTMLTreeBuilder23ProcessEndTagForInTableEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %750

146:                                              ; preds = %2
  %147 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kCaptionTagE to %"class.blink::QualifiedName"**), align 8
  %148 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %147, i64 0, i32 0, i32 0
  %149 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %148, align 8
  %150 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %152 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %149, i64 0, i32 3, i32 0, i32 0, i32 0
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %151, %153
  br i1 %154, label %155, label %164

155:                                              ; preds = %146
  %156 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %157 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %149, i64 0, i32 3
  %158 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %156, %"class.WTF::AtomicString"* dereferenceable(8) %157) #13
  br i1 %158, label %159, label %750

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite22GenerateImpliedEndTagsEv(%"class.blink::HTMLConstructionSite"* %160) #13
  %161 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %148, align 8
  %162 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %161, i64 0, i32 3
  tail call void @_ZN5blink16HTMLElementStack14PopUntilPoppedERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %156, %"class.WTF::AtomicString"* dereferenceable(8) %162) #13
  %163 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 6
  tail call void @_ZN5blink25HTMLFormattingElementList17ClearToLastMarkerEv(%"class.blink::HTMLFormattingElementList"* %163) #13
  store i32 9, i32* %5, align 8
  br label %750

164:                                              ; preds = %146
  %165 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE to %"class.blink::QualifiedName"**), align 8
  %166 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %165, i64 0, i32 0, i32 0
  %167 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %166, align 8
  %168 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %167, i64 0, i32 3, i32 0, i32 0, i32 0
  %169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %168, align 8
  %170 = icmp eq %"class.WTF::StringImpl"* %151, %169
  br i1 %170, label %171, label %180

171:                                              ; preds = %164
  %172 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %173 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %149, i64 0, i32 3
  %174 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %172, %"class.WTF::AtomicString"* dereferenceable(8) %173) #13
  br i1 %174, label %175, label %750

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite22GenerateImpliedEndTagsEv(%"class.blink::HTMLConstructionSite"* %176) #13
  %177 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %148, align 8
  %178 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %177, i64 0, i32 3
  tail call void @_ZN5blink16HTMLElementStack14PopUntilPoppedERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %172, %"class.WTF::AtomicString"* dereferenceable(8) %178) #13
  %179 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 6
  tail call void @_ZN5blink25HTMLFormattingElementList17ClearToLastMarkerEv(%"class.blink::HTMLFormattingElementList"* %179) #13
  store i32 9, i32* %5, align 8
  tail call void @_ZN5blink15HTMLTreeBuilder13ProcessEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %750

180:                                              ; preds = %164
  %181 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE to %"class.blink::QualifiedName"**), align 8
  %182 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %181, i64 0, i32 0, i32 0
  %183 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %182, align 8
  %184 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %183, i64 0, i32 3, i32 0, i32 0, i32 0
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %184, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %151, %185
  br i1 %186, label %750, label %187

187:                                              ; preds = %180
  %188 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kColTagE to %"class.blink::QualifiedName"**), align 8
  %189 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %188, i64 0, i32 0, i32 0
  %190 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %189, align 8
  %191 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %190, i64 0, i32 3, i32 0, i32 0, i32 0
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %191, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %151, %192
  br i1 %193, label %750, label %194

194:                                              ; preds = %187
  %195 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kColgroupTagE to %"class.blink::QualifiedName"**), align 8
  %196 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %195, i64 0, i32 0, i32 0
  %197 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %196, align 8
  %198 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %197, i64 0, i32 3, i32 0, i32 0, i32 0
  %199 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %198, align 8
  %200 = icmp eq %"class.WTF::StringImpl"* %151, %199
  br i1 %200, label %750, label %201

201:                                              ; preds = %194
  %202 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %203 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %202, i64 0, i32 0, i32 0
  %204 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %203, align 8
  %205 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %204, i64 0, i32 3, i32 0, i32 0, i32 0
  %206 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %205, align 8
  %207 = icmp eq %"class.WTF::StringImpl"* %151, %206
  br i1 %207, label %750, label %208

208:                                              ; preds = %201
  %209 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE to %"class.blink::QualifiedName"**), align 8
  %210 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %209, i64 0, i32 0, i32 0
  %211 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %210, align 8
  %212 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %211, i64 0, i32 3, i32 0, i32 0, i32 0
  %213 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %212, align 8
  %214 = icmp eq %"class.WTF::StringImpl"* %151, %213
  br i1 %214, label %750, label %215

215:                                              ; preds = %208
  %216 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE to %"class.blink::QualifiedName"**), align 8
  %217 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %216, i64 0, i32 0, i32 0
  %218 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %217, align 8
  %219 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %218, i64 0, i32 3, i32 0, i32 0, i32 0
  %220 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  %221 = icmp eq %"class.WTF::StringImpl"* %151, %220
  br i1 %221, label %750, label %222

222:                                              ; preds = %215
  %223 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE to %"class.blink::QualifiedName"**), align 8
  %224 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %223, i64 0, i32 0, i32 0
  %225 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %224, align 8
  %226 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %225, i64 0, i32 3, i32 0, i32 0, i32 0
  %227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %226, align 8
  %228 = icmp eq %"class.WTF::StringImpl"* %151, %227
  br i1 %228, label %750, label %229

229:                                              ; preds = %222
  %230 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE to %"class.blink::QualifiedName"**), align 8
  %231 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %230, i64 0, i32 0, i32 0
  %232 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %231, align 8
  %233 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %232, i64 0, i32 3, i32 0, i32 0, i32 0
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %233, align 8
  %235 = icmp eq %"class.WTF::StringImpl"* %151, %234
  br i1 %235, label %750, label %236

236:                                              ; preds = %229
  %237 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE to %"class.blink::QualifiedName"**), align 8
  %238 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %237, i64 0, i32 0, i32 0
  %239 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %238, align 8
  %240 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %239, i64 0, i32 3, i32 0, i32 0, i32 0
  %241 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %240, align 8
  %242 = icmp eq %"class.WTF::StringImpl"* %151, %241
  br i1 %242, label %750, label %243

243:                                              ; preds = %236
  %244 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE to %"class.blink::QualifiedName"**), align 8
  %245 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %244, i64 0, i32 0, i32 0
  %246 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %245, align 8
  %247 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %246, i64 0, i32 3, i32 0, i32 0, i32 0
  %248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %247, align 8
  %249 = icmp eq %"class.WTF::StringImpl"* %151, %248
  br i1 %249, label %750, label %250

250:                                              ; preds = %243
  tail call void @_ZN5blink15HTMLTreeBuilder22ProcessEndTagForInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %750

251:                                              ; preds = %2
  %252 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kColgroupTagE to %"class.blink::QualifiedName"**), align 8
  %253 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %252, i64 0, i32 0, i32 0
  %254 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %253, align 8
  %255 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %256 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %255, align 8
  %257 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %254, i64 0, i32 3, i32 0, i32 0, i32 0
  %258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %257, align 8
  %259 = icmp eq %"class.WTF::StringImpl"* %256, %258
  br i1 %259, label %260, label %297

260:                                              ; preds = %251
  %261 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %262 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %261, i64 0, i32 0, i32 0, i32 0
  %263 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %262, align 8
  %264 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %263, i64 0, i32 0, i32 0, i32 0
  %265 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %264, align 8
  %266 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %265, i64 0, i32 0, i32 0, i32 0
  %267 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %266, align 8
  %268 = tail call %"class.blink::ContainerNode"* @_ZNK5blink16HTMLElementStack8RootNodeEv(%"class.blink::HTMLElementStack"* %261) #13
  %269 = icmp eq %"class.blink::ContainerNode"* %267, %268
  br i1 %269, label %750, label %270

270:                                              ; preds = %260
  %271 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0
  %272 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %271, align 8
  %273 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %272, i64 0, i32 0, i32 0, i32 0
  %274 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %273, align 8
  %275 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %274, i64 0, i32 0, i32 0, i32 0
  %276 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %275, align 8
  %277 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %276, i64 0, i32 0, i32 1
  %278 = load i32, i32* %277, align 8
  %279 = and i32 %278, 48
  %280 = icmp ne i32 %279, 0
  %281 = icmp eq %"class.blink::ContainerNode"* %276, null
  %282 = or i1 %281, %280
  br i1 %282, label %296, label %283

283:                                              ; preds = %270
  %284 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %276, i64 0, i32 0
  %285 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE, align 8
  %286 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %285, i64 0, i32 0, i32 0, i32 0
  %287 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %286, align 8
  %288 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %284, i64 1, i32 2
  %289 = bitcast %"class.blink::Member.2"* %288 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %290 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %289, align 8
  %291 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %290, i64 0, i32 3, i32 0, i32 0, i32 0
  %292 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %291, align 8
  %293 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %287, i64 0, i32 3, i32 0, i32 0, i32 0
  %294 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %293, align 8
  %295 = icmp eq %"class.WTF::StringImpl"* %292, %294
  br i1 %295, label %750, label %296

296:                                              ; preds = %283, %270
  tail call void @_ZN5blink16HTMLElementStack3PopEv(%"class.blink::HTMLElementStack"* %261) #13
  store i32 9, i32* %5, align 8
  br label %750

297:                                              ; preds = %251
  %298 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kColTagE to %"class.blink::QualifiedName"**), align 8
  %299 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %298, i64 0, i32 0, i32 0
  %300 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %299, align 8
  %301 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %300, i64 0, i32 3, i32 0, i32 0, i32 0
  %302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %301, align 8
  %303 = icmp eq %"class.WTF::StringImpl"* %256, %302
  br i1 %303, label %750, label %304

304:                                              ; preds = %297
  %305 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %306 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %305, i64 0, i32 0, i32 0
  %307 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %306, align 8
  %308 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %307, i64 0, i32 3, i32 0, i32 0, i32 0
  %309 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %308, align 8
  %310 = icmp eq %"class.WTF::StringImpl"* %256, %309
  br i1 %310, label %311, label %313

311:                                              ; preds = %304
  %312 = tail call zeroext i1 @_ZN5blink15HTMLTreeBuilder21ProcessTemplateEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* undef)
  br label %750

313:                                              ; preds = %304
  %314 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %315 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %314, i64 0, i32 0, i32 0, i32 0
  %316 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %315, align 8
  %317 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %316, i64 0, i32 0, i32 0, i32 0
  %318 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %317, align 8
  %319 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %318, i64 0, i32 0, i32 0, i32 0
  %320 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %319, align 8
  %321 = tail call %"class.blink::ContainerNode"* @_ZNK5blink16HTMLElementStack8RootNodeEv(%"class.blink::HTMLElementStack"* %314) #13
  %322 = icmp eq %"class.blink::ContainerNode"* %320, %321
  br i1 %322, label %750, label %323

323:                                              ; preds = %313
  %324 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0
  %325 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %324, align 8
  %326 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %325, i64 0, i32 0, i32 0, i32 0
  %327 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %326, align 8
  %328 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %327, i64 0, i32 0, i32 0, i32 0
  %329 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %328, align 8
  %330 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %329, i64 0, i32 0, i32 1
  %331 = load i32, i32* %330, align 8
  %332 = and i32 %331, 48
  %333 = icmp ne i32 %332, 0
  %334 = icmp eq %"class.blink::ContainerNode"* %329, null
  %335 = or i1 %334, %333
  br i1 %335, label %348, label %336

336:                                              ; preds = %323
  %337 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %329, i64 0, i32 0
  %338 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %305, i64 0, i32 0, i32 0
  %339 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %338, align 8
  %340 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %337, i64 1, i32 2
  %341 = bitcast %"class.blink::Member.2"* %340 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %342 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %341, align 8
  %343 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %342, i64 0, i32 3, i32 0, i32 0, i32 0
  %344 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %343, align 8
  %345 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %339, i64 0, i32 3, i32 0, i32 0, i32 0
  %346 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %345, align 8
  %347 = icmp eq %"class.WTF::StringImpl"* %344, %346
  br i1 %347, label %750, label %348

348:                                              ; preds = %336, %323
  tail call void @_ZN5blink16HTMLElementStack3PopEv(%"class.blink::HTMLElementStack"* %314) #13
  store i32 9, i32* %5, align 8
  tail call void @_ZN5blink15HTMLTreeBuilder13ProcessEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %750

349:                                              ; preds = %2
  tail call void @_ZN5blink15HTMLTreeBuilder21ProcessEndTagForInRowEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %750

350:                                              ; preds = %2
  tail call void @_ZN5blink15HTMLTreeBuilder22ProcessEndTagForInCellEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %750

351:                                              ; preds = %2
  tail call void @_ZN5blink15HTMLTreeBuilder27ProcessEndTagForInTableBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %750

352:                                              ; preds = %2
  %353 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %354 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %353, i64 0, i32 0, i32 0
  %355 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %354, align 8
  %356 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %357 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %356, align 8
  %358 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %355, i64 0, i32 3, i32 0, i32 0, i32 0
  %359 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %358, align 8
  %360 = icmp eq %"class.WTF::StringImpl"* %357, %359
  br i1 %360, label %361, label %366

361:                                              ; preds = %352
  %362 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %363 = load %"class.blink::DocumentFragment"*, %"class.blink::DocumentFragment"** %362, align 8
  %364 = icmp eq %"class.blink::DocumentFragment"* %363, null
  br i1 %364, label %365, label %750

365:                                              ; preds = %361
  store i32 21, i32* %5, align 8
  br label %750

366:                                              ; preds = %352, %2
  store i32 7, i32* %5, align 8
  tail call void @_ZN5blink15HTMLTreeBuilder13ProcessEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %750

367:                                              ; preds = %2
  %368 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kNoscriptTagE to %"class.blink::QualifiedName"**), align 8
  %369 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %368, i64 0, i32 0, i32 0
  %370 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %369, align 8
  %371 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %372 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %371, align 8
  %373 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %370, i64 0, i32 3, i32 0, i32 0, i32 0
  %374 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %373, align 8
  %375 = icmp eq %"class.WTF::StringImpl"* %372, %374
  br i1 %375, label %376, label %378

376:                                              ; preds = %367
  %377 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  tail call void @_ZN5blink16HTMLElementStack3PopEv(%"class.blink::HTMLElementStack"* %377) #13
  store i32 3, i32* %5, align 8
  br label %750

378:                                              ; preds = %367
  %379 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE to %"class.blink::QualifiedName"**), align 8
  %380 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %379, i64 0, i32 0, i32 0
  %381 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %380, align 8
  %382 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %381, i64 0, i32 3, i32 0, i32 0, i32 0
  %383 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %382, align 8
  %384 = icmp eq %"class.WTF::StringImpl"* %372, %383
  br i1 %384, label %385, label %750

385:                                              ; preds = %378
  tail call void @_ZN5blink15HTMLTreeBuilder24DefaultForInHeadNoscriptEv(%"class.blink::HTMLTreeBuilder"* %0)
  tail call void @_ZN5blink15HTMLTreeBuilder12ProcessTokenEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %750

386:                                              ; preds = %2
  %387 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %388 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %387, i64 0, i32 0, i32 0
  %389 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %388, align 8
  %390 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %391 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %390, align 8
  %392 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %389, i64 0, i32 3, i32 0, i32 0, i32 0
  %393 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %392, align 8
  %394 = icmp eq %"class.WTF::StringImpl"* %391, %393
  br i1 %394, label %395, label %436

395:                                              ; preds = %386
  %396 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0
  %397 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %396, align 8
  %398 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %397, i64 0, i32 0, i32 0, i32 0
  %399 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %398, align 8
  %400 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %399, i64 0, i32 1, i32 0, i32 0, i32 0
  %401 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %400, align 8
  %402 = icmp eq %"class.WTF::StringImpl"* %401, %391
  %403 = bitcast %"class.blink::HTMLStackItem"* %399 to %"class.blink::Element"**
  br i1 %402, label %404, label %436

404:                                              ; preds = %395
  %405 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %399, i64 0, i32 3, i32 0, i32 0, i32 0
  %406 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %405, align 8
  %407 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %389, i64 0, i32 4, i32 0, i32 0, i32 0
  %408 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %407, align 8
  %409 = icmp eq %"class.WTF::StringImpl"* %406, %408
  br i1 %409, label %410, label %436

410:                                              ; preds = %404
  %411 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 9
  %412 = load i32, i32* %411, align 8
  %413 = add i32 %412, -1
  %414 = icmp ult i32 %413, 2
  br i1 %414, label %415, label %425

415:                                              ; preds = %410
  %416 = load %"class.blink::Element"*, %"class.blink::Element"** %403, align 8
  %417 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 12
  %418 = ptrtoint %"class.blink::Element"* %416 to i64
  %419 = bitcast %"class.blink::Member.64"* %417 to i64*
  store atomic i64 %418, i64* %419 monotonic, align 8
  %420 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %425, label %422

422:                                              ; preds = %415
  %423 = bitcast %"class.blink::Element"* %416 to i8*
  %424 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %423) #13
  br label %425

425:                                              ; preds = %422, %415, %410
  %426 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  tail call void @_ZN5blink16HTMLElementStack3PopEv(%"class.blink::HTMLElementStack"* %426) #13
  %427 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 5
  %428 = load i32, i32* %427, align 4
  store i32 %428, i32* %5, align 8
  %429 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 11, i32 0, i32 0
  %430 = load %"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocumentParser"** %429, align 8
  %431 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %430, i64 0, i32 7, i32 0, i32 0, i32 0
  %432 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %431, align 8
  %433 = icmp eq %"class.blink::HTMLTokenizer"* %432, null
  br i1 %433, label %750, label %434

434:                                              ; preds = %425
  %435 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %432, i64 0, i32 0
  store i32 0, i32* %435, align 8
  br label %750

436:                                              ; preds = %395, %404, %386
  %437 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  tail call void @_ZN5blink16HTMLElementStack3PopEv(%"class.blink::HTMLElementStack"* %437) #13
  %438 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 5
  %439 = load i32, i32* %438, align 4
  store i32 %439, i32* %5, align 8
  br label %750

440:                                              ; preds = %2
  %441 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kFramesetTagE to %"class.blink::QualifiedName"**), align 8
  %442 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %441, i64 0, i32 0, i32 0
  %443 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %442, align 8
  %444 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %445 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %444, align 8
  %446 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %443, i64 0, i32 3, i32 0, i32 0, i32 0
  %447 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %446, align 8
  %448 = icmp eq %"class.WTF::StringImpl"* %445, %447
  br i1 %448, label %449, label %750

449:                                              ; preds = %440
  %450 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %451 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %450, i64 0, i32 0, i32 0, i32 0
  %452 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %451, align 8
  %453 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %452, i64 0, i32 0, i32 0, i32 0
  %454 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %453, align 8
  %455 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %454, i64 0, i32 0, i32 0, i32 0
  %456 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %455, align 8
  %457 = tail call %"class.blink::ContainerNode"* @_ZNK5blink16HTMLElementStack8RootNodeEv(%"class.blink::HTMLElementStack"* %450) #13
  %458 = icmp eq %"class.blink::ContainerNode"* %456, %457
  br i1 %458, label %750, label %459

459:                                              ; preds = %449
  %460 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack22HasTemplateInHTMLScopeEv(%"class.blink::HTMLElementStack"* %450) #13
  br i1 %460, label %750, label %461

461:                                              ; preds = %459
  tail call void @_ZN5blink16HTMLElementStack3PopEv(%"class.blink::HTMLElementStack"* %450) #13
  %462 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %463 = load %"class.blink::DocumentFragment"*, %"class.blink::DocumentFragment"** %462, align 8
  %464 = icmp eq %"class.blink::DocumentFragment"* %463, null
  br i1 %464, label %465, label %750

465:                                              ; preds = %461
  %466 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0
  %467 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %466, align 8
  %468 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %467, i64 0, i32 0, i32 0, i32 0
  %469 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %468, align 8
  %470 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %442, align 8
  %471 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %469, i64 0, i32 1, i32 0, i32 0, i32 0
  %472 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %471, align 8
  %473 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %470, i64 0, i32 3, i32 0, i32 0, i32 0
  %474 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %473, align 8
  %475 = icmp eq %"class.WTF::StringImpl"* %472, %474
  br i1 %475, label %476, label %482

476:                                              ; preds = %465
  %477 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %469, i64 0, i32 3, i32 0, i32 0, i32 0
  %478 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %477, align 8
  %479 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %470, i64 0, i32 4, i32 0, i32 0, i32 0
  %480 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %479, align 8
  %481 = icmp eq %"class.WTF::StringImpl"* %478, %480
  br i1 %481, label %750, label %482

482:                                              ; preds = %465, %476
  store i32 20, i32* %5, align 8
  br label %750

483:                                              ; preds = %2
  %484 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %485 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %484, i64 0, i32 0, i32 0
  %486 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %485, align 8
  %487 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %488 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %487, align 8
  %489 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %486, i64 0, i32 3, i32 0, i32 0, i32 0
  %490 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %489, align 8
  %491 = icmp eq %"class.WTF::StringImpl"* %488, %490
  br i1 %491, label %492, label %750

492:                                              ; preds = %483
  store i32 22, i32* %5, align 8
  br label %750

493:                                              ; preds = %2
  %494 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1
  %495 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kCaptionTagE to %"class.blink::QualifiedName"**), align 8
  %496 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %495, i64 0, i32 0, i32 0
  %497 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %496, align 8
  %498 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %494, i64 0, i32 0, i32 0, i32 0
  %499 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %498, align 8
  %500 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %497, i64 0, i32 3, i32 0, i32 0, i32 0
  %501 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %500, align 8
  %502 = icmp eq %"class.WTF::StringImpl"* %499, %501
  br i1 %502, label %552, label %503

503:                                              ; preds = %493
  %504 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE to %"class.blink::QualifiedName"**), align 8
  %505 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %504, i64 0, i32 0, i32 0
  %506 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %505, align 8
  %507 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %506, i64 0, i32 3, i32 0, i32 0, i32 0
  %508 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %507, align 8
  %509 = icmp eq %"class.WTF::StringImpl"* %499, %508
  br i1 %509, label %552, label %510

510:                                              ; preds = %503
  %511 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE to %"class.blink::QualifiedName"**), align 8
  %512 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %511, i64 0, i32 0, i32 0
  %513 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %512, align 8
  %514 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %513, i64 0, i32 3, i32 0, i32 0, i32 0
  %515 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %514, align 8
  %516 = icmp eq %"class.WTF::StringImpl"* %499, %515
  br i1 %516, label %552, label %517

517:                                              ; preds = %510
  %518 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE to %"class.blink::QualifiedName"**), align 8
  %519 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %518, i64 0, i32 0, i32 0
  %520 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %519, align 8
  %521 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %520, i64 0, i32 3, i32 0, i32 0, i32 0
  %522 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %521, align 8
  %523 = icmp eq %"class.WTF::StringImpl"* %499, %522
  br i1 %523, label %552, label %524

524:                                              ; preds = %517
  %525 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE to %"class.blink::QualifiedName"**), align 8
  %526 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %525, i64 0, i32 0, i32 0
  %527 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %526, align 8
  %528 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %527, i64 0, i32 3, i32 0, i32 0, i32 0
  %529 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %528, align 8
  %530 = icmp eq %"class.WTF::StringImpl"* %499, %529
  br i1 %530, label %552, label %531

531:                                              ; preds = %524
  %532 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE to %"class.blink::QualifiedName"**), align 8
  %533 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %532, i64 0, i32 0, i32 0
  %534 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %533, align 8
  %535 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %534, i64 0, i32 3, i32 0, i32 0, i32 0
  %536 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %535, align 8
  %537 = icmp eq %"class.WTF::StringImpl"* %499, %536
  br i1 %537, label %552, label %538

538:                                              ; preds = %531
  %539 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE to %"class.blink::QualifiedName"**), align 8
  %540 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %539, i64 0, i32 0, i32 0
  %541 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %540, align 8
  %542 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %541, i64 0, i32 3, i32 0, i32 0, i32 0
  %543 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %542, align 8
  %544 = icmp eq %"class.WTF::StringImpl"* %499, %543
  br i1 %544, label %552, label %545

545:                                              ; preds = %538
  %546 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE to %"class.blink::QualifiedName"**), align 8
  %547 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %546, i64 0, i32 0, i32 0
  %548 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %547, align 8
  %549 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %548, i64 0, i32 3, i32 0, i32 0, i32 0
  %550 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %549, align 8
  %551 = icmp eq %"class.WTF::StringImpl"* %499, %550
  br i1 %551, label %552, label %626

552:                                              ; preds = %538, %510, %517, %545, %531, %524, %503, %493
  %553 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %554 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %553, %"class.WTF::AtomicString"* dereferenceable(8) %494) #13
  br i1 %554, label %555, label %750

555:                                              ; preds = %552
  %556 = bitcast %"class.blink::AtomicHTMLToken"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %556) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %556, i8 -86, i64 56, i1 false)
  %557 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE to %"class.blink::QualifiedName"**), align 8
  %558 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %557, i64 0, i32 0, i32 0
  %559 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %558, align 8
  %560 = bitcast %"class.WTF::Vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %560) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %560, i8 0, i64 16, i1 false) #13
  %561 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %3, i64 0, i32 0
  store i32 3, i32* %561, align 8
  %562 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %559, i64 0, i32 3, i32 0, i32 0, i32 0
  %563 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %562, align 8
  %564 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %563, %"class.WTF::StringImpl"** %564, align 8
  %565 = icmp eq %"class.WTF::StringImpl"* %563, null
  br i1 %565, label %583, label %566

566:                                              ; preds = %555
  %567 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %563, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %568 = load atomic i32, i32* %567 monotonic, align 4
  %569 = and i32 %568, 2
  %570 = icmp eq i32 %569, 0
  br i1 %570, label %571, label %583

571:                                              ; preds = %566
  %572 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %563, i64 0, i32 0
  %573 = load i32, i32* %572, align 4
  %574 = zext i32 %573 to i33
  %575 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %574, i33 1) #13
  %576 = extractvalue { i33, i1 } %575, 1
  %577 = extractvalue { i33, i1 } %575, 0
  %578 = icmp slt i33 %577, 0
  %579 = or i1 %576, %578
  br i1 %579, label %580, label %581, !prof !2

580:                                              ; preds = %571
  tail call void @llvm.trap() #13
  unreachable

581:                                              ; preds = %571
  %582 = trunc i33 %577 to i32
  store i32 %582, i32* %572, align 4
  br label %583

583:                                              ; preds = %555, %566, %581
  %584 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %3, i64 0, i32 2, i32 0, i32 0
  %585 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %3, i64 0, i32 6
  %586 = bitcast %"class.WTF::StringImpl"** %584 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %586, i8 0, i64 18, i1 false) #13
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %585, %"class.WTF::Vector"* nonnull dereferenceable(16) %4) #13
  %587 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %588 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %587, align 8
  %589 = icmp eq %"class.blink::Attribute"* %588, null
  br i1 %589, label %625, label %590, !prof !3

590:                                              ; preds = %583
  %591 = bitcast %"class.blink::Attribute"* %588 to i8*
  %592 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  %593 = load i32, i32* %592, align 4
  %594 = icmp eq i32 %593, 0
  br i1 %594, label %623, label %595, !prof !2

595:                                              ; preds = %590
  %596 = zext i32 %593 to i64
  %597 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %588, i64 %596
  br label %598

598:                                              ; preds = %616, %595
  %599 = phi %"class.blink::Attribute"* [ %618, %616 ], [ %588, %595 ]
  %600 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %599, i64 0, i32 1, i32 0, i32 0, i32 0
  %601 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %600, align 8
  %602 = icmp eq %"class.WTF::StringImpl"* %601, null
  br i1 %602, label %616, label %603

603:                                              ; preds = %598
  %604 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %601, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %605 = load atomic i32, i32* %604 monotonic, align 4
  %606 = and i32 %605, 2
  %607 = icmp eq i32 %606, 0
  %608 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %601, i64 0, i32 0
  %609 = load i32, i32* %608, align 4
  br i1 %607, label %610, label %612

610:                                              ; preds = %603
  %611 = add i32 %609, -1
  store i32 %611, i32* %608, align 4
  br label %612

612:                                              ; preds = %610, %603
  %613 = phi i32 [ %611, %610 ], [ %609, %603 ]
  %614 = icmp eq i32 %613, 0
  br i1 %614, label %615, label %616

615:                                              ; preds = %612
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %601) #13
  br label %616

616:                                              ; preds = %615, %612, %598
  %617 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %599, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %617) #13
  %618 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %599, i64 1
  %619 = icmp eq %"class.blink::Attribute"* %618, %597
  br i1 %619, label %620, label %598

620:                                              ; preds = %616
  store i32 0, i32* %592, align 4
  %621 = bitcast %"class.WTF::Vector"* %4 to i8**
  %622 = load i8*, i8** %621, align 8
  br label %623

623:                                              ; preds = %620, %590
  %624 = phi i8* [ %622, %620 ], [ %591, %590 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %624) #13
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %587, align 8
  br label %625

625:                                              ; preds = %583, %623
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %560) #13
  call void @_ZN5blink15HTMLTreeBuilder13ProcessEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* nonnull %3)
  call void @_ZN5blink15HTMLTreeBuilder13ProcessEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %556) #13
  br label %750

626:                                              ; preds = %11, %545
  %627 = phi %"class.WTF::StringImpl"* [ %13, %11 ], [ %499, %545 ]
  %628 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1
  %629 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kOptgroupTagE to %"class.blink::QualifiedName"**), align 8
  %630 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %629, i64 0, i32 0, i32 0
  %631 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %630, align 8
  %632 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %631, i64 0, i32 3, i32 0, i32 0, i32 0
  %633 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %632, align 8
  %634 = icmp eq %"class.WTF::StringImpl"* %627, %633
  br i1 %634, label %635, label %693

635:                                              ; preds = %626
  %636 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0
  %637 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %636, align 8
  %638 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %637, i64 0, i32 0, i32 0, i32 0
  %639 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %638, align 8
  %640 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE to %"class.blink::QualifiedName"**), align 8
  %641 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %640, i64 0, i32 0, i32 0
  %642 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %641, align 8
  %643 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %639, i64 0, i32 1, i32 0, i32 0, i32 0
  %644 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %643, align 8
  %645 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %642, i64 0, i32 3, i32 0, i32 0, i32 0
  %646 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %645, align 8
  %647 = icmp eq %"class.WTF::StringImpl"* %644, %646
  br i1 %647, label %648, label %675

648:                                              ; preds = %635
  %649 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %639, i64 0, i32 3, i32 0, i32 0, i32 0
  %650 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %649, align 8
  %651 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %642, i64 0, i32 4, i32 0, i32 0, i32 0
  %652 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %651, align 8
  %653 = icmp eq %"class.WTF::StringImpl"* %650, %652
  br i1 %653, label %654, label %675

654:                                              ; preds = %648
  %655 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %656 = tail call %"class.blink::HTMLStackItem"* @_ZNK5blink16HTMLElementStack11OneBelowTopEv(%"class.blink::HTMLElementStack"* %655) #13
  %657 = icmp eq %"class.blink::HTMLStackItem"* %656, null
  br i1 %657, label %675, label %658

658:                                              ; preds = %654
  %659 = tail call %"class.blink::HTMLStackItem"* @_ZNK5blink16HTMLElementStack11OneBelowTopEv(%"class.blink::HTMLElementStack"* %655) #13
  %660 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %630, align 8
  %661 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %659, i64 0, i32 1, i32 0, i32 0, i32 0
  %662 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %661, align 8
  %663 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %660, i64 0, i32 3, i32 0, i32 0, i32 0
  %664 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %663, align 8
  %665 = icmp eq %"class.WTF::StringImpl"* %662, %664
  br i1 %665, label %666, label %675

666:                                              ; preds = %658
  %667 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %659, i64 0, i32 3, i32 0, i32 0, i32 0
  %668 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %667, align 8
  %669 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %660, i64 0, i32 4, i32 0, i32 0, i32 0
  %670 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %669, align 8
  %671 = icmp eq %"class.WTF::StringImpl"* %668, %670
  br i1 %671, label %672, label %675

672:                                              ; preds = %666
  %673 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %641, align 8
  %674 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %673, i64 0, i32 3
  tail call void @_ZN5blink15HTMLTreeBuilder17ProcessFakeEndTagERKN3WTF12AtomicStringE(%"class.blink::HTMLTreeBuilder"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %674) #13
  br label %675

675:                                              ; preds = %658, %635, %654, %672, %666, %648
  %676 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %636, align 8
  %677 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %676, i64 0, i32 0, i32 0, i32 0
  %678 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %677, align 8
  %679 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %630, align 8
  %680 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %678, i64 0, i32 1, i32 0, i32 0, i32 0
  %681 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %680, align 8
  %682 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %679, i64 0, i32 3, i32 0, i32 0, i32 0
  %683 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %682, align 8
  %684 = icmp eq %"class.WTF::StringImpl"* %681, %683
  br i1 %684, label %685, label %750

685:                                              ; preds = %675
  %686 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %678, i64 0, i32 3, i32 0, i32 0, i32 0
  %687 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %686, align 8
  %688 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %679, i64 0, i32 4, i32 0, i32 0, i32 0
  %689 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %688, align 8
  %690 = icmp eq %"class.WTF::StringImpl"* %687, %689
  br i1 %690, label %691, label %750

691:                                              ; preds = %685
  %692 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  tail call void @_ZN5blink16HTMLElementStack3PopEv(%"class.blink::HTMLElementStack"* %692) #13
  br label %750

693:                                              ; preds = %626
  %694 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE to %"class.blink::QualifiedName"**), align 8
  %695 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %694, i64 0, i32 0, i32 0
  %696 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %695, align 8
  %697 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %696, i64 0, i32 3, i32 0, i32 0, i32 0
  %698 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %697, align 8
  %699 = icmp eq %"class.WTF::StringImpl"* %627, %698
  br i1 %699, label %700, label %716

700:                                              ; preds = %693
  %701 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0
  %702 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %701, align 8
  %703 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %702, i64 0, i32 0, i32 0, i32 0
  %704 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %703, align 8
  %705 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %704, i64 0, i32 1, i32 0, i32 0, i32 0
  %706 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %705, align 8
  %707 = icmp eq %"class.WTF::StringImpl"* %706, %627
  br i1 %707, label %708, label %750

708:                                              ; preds = %700
  %709 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %704, i64 0, i32 3, i32 0, i32 0, i32 0
  %710 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %709, align 8
  %711 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %696, i64 0, i32 4, i32 0, i32 0, i32 0
  %712 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %711, align 8
  %713 = icmp eq %"class.WTF::StringImpl"* %710, %712
  br i1 %713, label %714, label %750

714:                                              ; preds = %708
  %715 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  tail call void @_ZN5blink16HTMLElementStack3PopEv(%"class.blink::HTMLElementStack"* %715) #13
  br label %750

716:                                              ; preds = %693
  %717 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE to %"class.blink::QualifiedName"**), align 8
  %718 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %717, i64 0, i32 0, i32 0
  %719 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %718, align 8
  %720 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %719, i64 0, i32 3, i32 0, i32 0, i32 0
  %721 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %720, align 8
  %722 = icmp eq %"class.WTF::StringImpl"* %627, %721
  br i1 %722, label %723, label %729

723:                                              ; preds = %716
  %724 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %725 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack13InSelectScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %724, %"class.WTF::AtomicString"* dereferenceable(8) %628) #13
  br i1 %725, label %726, label %750

726:                                              ; preds = %723
  %727 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %718, align 8
  %728 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %727, i64 0, i32 3
  tail call void @_ZN5blink16HTMLElementStack14PopUntilPoppedERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %724, %"class.WTF::AtomicString"* dereferenceable(8) %728) #13
  tail call void @_ZN5blink15HTMLTreeBuilder31ResetInsertionModeAppropriatelyEv(%"class.blink::HTMLTreeBuilder"* %0)
  br label %750

729:                                              ; preds = %716
  %730 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %731 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %730, i64 0, i32 0, i32 0
  %732 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %731, align 8
  %733 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %732, i64 0, i32 3, i32 0, i32 0, i32 0
  %734 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %733, align 8
  %735 = icmp eq %"class.WTF::StringImpl"* %627, %734
  br i1 %735, label %736, label %750

736:                                              ; preds = %729
  %737 = tail call zeroext i1 @_ZN5blink15HTMLTreeBuilder21ProcessTemplateEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* undef)
  br label %750

738:                                              ; preds = %2
  tail call void @_ZN5blink15HTMLTreeBuilder21DefaultForInTableTextEv(%"class.blink::HTMLTreeBuilder"* %0)
  tail call void @_ZN5blink15HTMLTreeBuilder13ProcessEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %750

739:                                              ; preds = %2
  %740 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %741 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %740, i64 0, i32 0, i32 0
  %742 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %741, align 8
  %743 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %744 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %743, align 8
  %745 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %742, i64 0, i32 3, i32 0, i32 0, i32 0
  %746 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %745, align 8
  %747 = icmp eq %"class.WTF::StringImpl"* %744, %746
  br i1 %747, label %748, label %750

748:                                              ; preds = %739
  %749 = tail call zeroext i1 @_ZN5blink15HTMLTreeBuilder21ProcessTemplateEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* undef)
  br label %750

750:                                              ; preds = %39, %70, %112, %136, %361, %378, %461, %700, %675, %313, %336, %229, %208, %215, %723, %708, %685, %483, %459, %449, %297, %296, %283, %260, %180, %187, %194, %201, %222, %236, %243, %171, %159, %155, %482, %476, %425, %739, %729, %552, %625, %440, %434, %87, %96, %175, %311, %365, %376, %492, %691, %714, %726, %736, %748, %2, %738, %436, %385, %366, %351, %350, %349, %348, %250, %145, %144
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder14ProcessCommentEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  br label %4

4:                                                ; preds = %10, %2
  %5 = load i32, i32* %3, align 8
  switch i32 %5, label %11 [
    i32 0, label %6
    i32 1, label %6
    i32 21, label %6
    i32 22, label %6
    i32 18, label %8
    i32 10, label %10
  ]

6:                                                ; preds = %4, %4, %4, %4
  %7 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite23InsertCommentOnDocumentEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %7, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %13

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite30InsertCommentOnHTMLHtmlElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %9, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %13

10:                                               ; preds = %4
  tail call void @_ZN5blink15HTMLTreeBuilder21DefaultForInTableTextEv(%"class.blink::HTMLTreeBuilder"* %0)
  br label %4

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite13InsertCommentEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %12, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %13

13:                                               ; preds = %11, %8, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder16ProcessEndOfFileEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %5 = bitcast %"class.blink::HTMLElementStack"* %4 to %"class.blink::Element"****
  %6 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTextareaTagE, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 5
  br label %9

9:                                                ; preds = %24, %2
  %10 = load i32, i32* %3, align 8
  switch i32 %10, label %107 [
    i32 0, label %11
    i32 1, label %13
    i32 2, label %14
    i32 3, label %15
    i32 5, label %16
    i32 7, label %17
    i32 15, label %17
    i32 11, label %17
    i32 14, label %17
    i32 6, label %105
    i32 8, label %77
    i32 4, label %23
    i32 10, label %76
    i32 16, label %69
    i32 12, label %25
    i32 19, label %69
    i32 9, label %69
    i32 13, label %69
    i32 17, label %69
  ]

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite27SetDefaultCompatibilityModeEv(%"class.blink::HTMLConstructionSite"* %12) #13
  store i32 1, i32* %3, align 8
  br label %13

13:                                               ; preds = %9, %11
  tail call void @_ZN5blink15HTMLTreeBuilder20DefaultForBeforeHTMLEv(%"class.blink::HTMLTreeBuilder"* %0)
  br label %14

14:                                               ; preds = %9, %13
  tail call void @_ZN5blink15HTMLTreeBuilder20DefaultForBeforeHeadEv(%"class.blink::HTMLTreeBuilder"* %0)
  br label %15

15:                                               ; preds = %9, %14
  tail call void @_ZN5blink15HTMLTreeBuilder16DefaultForInHeadEv(%"class.blink::HTMLTreeBuilder"* %0)
  br label %16

16:                                               ; preds = %9, %15
  tail call void @_ZN5blink15HTMLTreeBuilder19DefaultForAfterHeadEv(%"class.blink::HTMLTreeBuilder"* %0)
  br label %17

17:                                               ; preds = %9, %9, %9, %9, %16
  %18 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %107, label %21

21:                                               ; preds = %17
  %22 = tail call zeroext i1 @_ZN5blink15HTMLTreeBuilder37ProcessEndOfFileForInTemplateContentsEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br i1 %22, label %109, label %107

23:                                               ; preds = %9
  tail call void @_ZN5blink15HTMLTreeBuilder24DefaultForInHeadNoscriptEv(%"class.blink::HTMLTreeBuilder"* %0)
  br label %24

24:                                               ; preds = %23, %76, %103
  br label %9

25:                                               ; preds = %9
  %26 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %4, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %30, align 8
  %32 = tail call %"class.blink::ContainerNode"* @_ZNK5blink16HTMLElementStack8RootNodeEv(%"class.blink::HTMLElementStack"* %4) #13
  %33 = icmp eq %"class.blink::ContainerNode"* %31, %32
  br i1 %33, label %109, label %34

34:                                               ; preds = %25
  %35 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %26, align 8
  %36 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %38, align 8
  %40 = tail call %"class.blink::ContainerNode"* @_ZNK5blink16HTMLElementStack8RootNodeEv(%"class.blink::HTMLElementStack"* %4) #13
  %41 = icmp eq %"class.blink::ContainerNode"* %39, %40
  br i1 %41, label %69, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0
  %44 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %48, i64 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = and i32 %50, 48
  %52 = icmp ne i32 %51, 0
  %53 = icmp eq %"class.blink::ContainerNode"* %48, null
  %54 = or i1 %53, %52
  br i1 %54, label %68, label %55

55:                                               ; preds = %42
  %56 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %48, i64 0, i32 0
  %57 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE, align 8
  %58 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %56, i64 1, i32 2
  %61 = bitcast %"class.blink::Member.2"* %60 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %64, %66
  br i1 %67, label %69, label %68

68:                                               ; preds = %55, %42
  tail call void @_ZN5blink16HTMLElementStack3PopEv(%"class.blink::HTMLElementStack"* %4) #13
  store i32 9, i32* %3, align 8
  br label %69

69:                                               ; preds = %9, %9, %9, %9, %9, %68, %55, %34
  %70 = tail call %"class.blink::ContainerNode"* @_ZNK5blink16HTMLElementStack8RootNodeEv(%"class.blink::HTMLElementStack"* %4) #13
  %71 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %107, label %74

74:                                               ; preds = %69
  %75 = tail call zeroext i1 @_ZN5blink15HTMLTreeBuilder37ProcessEndOfFileForInTemplateContentsEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br i1 %75, label %109, label %107

76:                                               ; preds = %9
  tail call void @_ZN5blink15HTMLTreeBuilder21DefaultForInTableTextEv(%"class.blink::HTMLTreeBuilder"* %0)
  br label %24

77:                                               ; preds = %9
  %78 = load %"class.blink::Element"***, %"class.blink::Element"**** %5, align 8
  %79 = load %"class.blink::Element"**, %"class.blink::Element"*** %78, align 8
  %80 = load %"class.blink::Element"*, %"class.blink::Element"** %79, align 8
  %81 = icmp eq %"class.blink::Element"* %80, null
  br i1 %81, label %103, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %80, i64 0, i32 0, i32 0, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = and i32 %84, 48
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %103

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %80, i64 0, i32 0, i32 0
  %89 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %90 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %88, i64 1, i32 2
  %91 = bitcast %"class.blink::Member.2"* %90 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %92 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %92, i64 0, i32 3, i32 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %89, i64 0, i32 3, i32 0, i32 0, i32 0
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %94, %96
  br i1 %97, label %98, label %103

98:                                               ; preds = %87
  %99 = bitcast %"class.blink::Element"* %80 to %"class.blink::HTMLFormControlElement"*
  %100 = getelementptr inbounds %"class.blink::HTMLFormControlElement", %"class.blink::HTMLFormControlElement"* %99, i64 0, i32 8
  %101 = load i8, i8* %100, align 4
  %102 = or i8 %101, 1
  store i8 %102, i8* %100, align 4
  br label %103

103:                                              ; preds = %82, %77, %98, %87
  tail call void @_ZN5blink16HTMLElementStack3PopEv(%"class.blink::HTMLElementStack"* %4) #13
  %104 = load i32, i32* %8, align 4
  store i32 %104, i32* %3, align 8
  br label %24

105:                                              ; preds = %9
  %106 = tail call zeroext i1 @_ZN5blink15HTMLTreeBuilder37ProcessEndOfFileForInTemplateContentsEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br i1 %106, label %109, label %107

107:                                              ; preds = %9, %105, %69, %74, %17, %21
  %108 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite16ProcessEndOfFileEv(%"class.blink::HTMLConstructionSite"* %108) #13
  br label %109

109:                                              ; preds = %105, %74, %25, %21, %107
  ret void
}

declare void @_ZN5blink20HTMLConstructionSite13InsertDoctypeEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder21DefaultForInTableTextEv(%"class.blink::HTMLTreeBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 7
  %5 = tail call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* %4) #13
  tail call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* %4) #13
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %57, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 1
  %11 = bitcast %"class.WTF::StringImpl"* %10 to i8*
  %12 = zext i32 %9 to i64
  %13 = icmp eq i32 %9, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = bitcast %"class.WTF::StringView"* %3 to i8*
  br label %62

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %16, %27
  %22 = phi i64 [ %28, %27 ], [ 0, %16 ]
  %23 = getelementptr inbounds i8, i8* %11, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = icmp ult i8 %24, 33
  br i1 %25, label %26, label %41

26:                                               ; preds = %21
  switch i8 %24, label %41 [
    i8 32, label %27
    i8 10, label %27
    i8 9, label %27
    i8 13, label %27
    i8 12, label %27
  ]

27:                                               ; preds = %26, %26, %26, %26, %26
  %28 = add nuw nsw i64 %22, 1
  %29 = icmp eq i64 %28, %12
  br i1 %29, label %55, label %21

30:                                               ; preds = %16
  %31 = bitcast %"class.WTF::StringImpl"* %10 to i16*
  br label %32

32:                                               ; preds = %38, %30
  %33 = phi i64 [ %39, %38 ], [ 0, %30 ]
  %34 = getelementptr inbounds i16, i16* %31, i64 %33
  %35 = load i16, i16* %34, align 2
  %36 = icmp ult i16 %35, 33
  br i1 %36, label %37, label %41

37:                                               ; preds = %32
  switch i16 %35, label %41 [
    i16 32, label %38
    i16 10, label %38
    i16 9, label %38
    i16 13, label %38
    i16 12, label %38
  ]

38:                                               ; preds = %37, %37, %37, %37, %37
  %39 = add nuw nsw i64 %33, 1
  %40 = icmp eq i64 %39, %12
  br i1 %40, label %55, label %32

41:                                               ; preds = %26, %21, %37, %32
  %42 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %43 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 11
  %44 = load i8, i8* %43, align 1, !range !4
  store i8 1, i8* %43, align 1
  tail call void @_ZN5blink20HTMLConstructionSite38ReconstructTheActiveFormattingElementsEv(%"class.blink::HTMLConstructionSite"* %42) #13
  %45 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #13
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %46, align 8
  %47 = load i32, i32* %8, align 4
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %49 = bitcast i8** %48 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %49, align 8
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %47, i32* %50, align 8
  call void @_ZN5blink20HTMLConstructionSite14InsertTextNodeERKN3WTF10StringViewENS_14WhitespaceModeE(%"class.blink::HTMLConstructionSite"* %42, %"class.WTF::StringView"* nonnull dereferenceable(24) %2, i32 1) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #13
  %51 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 0
  store i8 0, i8* %51, align 8
  %52 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 5
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 %53, i32* %54, align 8
  store i8 %44, i8* %43, align 1
  br label %76

55:                                               ; preds = %27, %38
  %56 = bitcast %"class.WTF::StringView"* %3 to i8*
  br label %62

57:                                               ; preds = %1
  %58 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #13
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %59, align 8
  %60 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %61 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %60, i64* %61, align 8
  br label %68

62:                                               ; preds = %55, %14
  %63 = phi i8* [ %56, %55 ], [ %15, %14 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #13
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %64, align 8
  %65 = load i32, i32* %8, align 4
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %67 = bitcast i8** %66 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %67, align 8
  br label %68

68:                                               ; preds = %57, %62
  %69 = phi i8* [ %63, %62 ], [ %58, %57 ]
  %70 = phi i32 [ %65, %62 ], [ 0, %57 ]
  %71 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %72 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %70, i32* %72, align 8
  call void @_ZN5blink20HTMLConstructionSite14InsertTextNodeERKN3WTF10StringViewENS_14WhitespaceModeE(%"class.blink::HTMLConstructionSite"* %71, %"class.WTF::StringView"* nonnull dereferenceable(24) %3, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #13
  %73 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 5
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 %74, i32* %75, align 8
  br label %76

76:                                               ; preds = %68, %41
  br i1 %6, label %90, label %77

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #13
  br label %90

90:                                               ; preds = %76, %86, %89
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder10ParseErrorEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* nocapture, %"class.blink::AtomicHTMLToken"* nocapture) local_unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder19ProcessFakeStartTagERKNS_13QualifiedNameERKN3WTF6VectorINS_9AttributeELj0ENS4_18PartitionAllocatorEEE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::QualifiedName"* nocapture readonly dereferenceable(8), %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::AtomicHTMLToken", align 8
  %5 = bitcast %"class.blink::AtomicHTMLToken"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 56, i1 false)
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %4, i64 0, i32 0
  store i32 2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %7, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #13
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %18
  tail call void @llvm.trap() #13
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %3, %13, %28
  %31 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %4, i64 0, i32 2, i32 0, i32 0
  %32 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %4, i64 0, i32 6
  %33 = bitcast %"class.WTF::StringImpl"** %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 18, i1 false) #13
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %32, %"class.WTF::Vector"* dereferenceable(16) %2) #13
  call void @_ZN5blink15HTMLTreeBuilder15ProcessStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* nonnull %4)
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 6
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %3, align 8
  %5 = icmp eq %"class.blink::Attribute"* %4, null
  br i1 %5, label %41, label %6, !prof !3

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::Attribute"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %39, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %4, i64 %12
  br label %14

14:                                               ; preds = %32, %11
  %15 = phi %"class.blink::Attribute"* [ %34, %32 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #13
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 0
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %33) #13
  %34 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 1
  %35 = icmp eq %"class.blink::Attribute"* %34, %13
  br i1 %35, label %36, label %14

36:                                               ; preds = %32
  store i32 0, i32* %8, align 4
  %37 = bitcast %"class.WTF::Vector"* %2 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %6
  %40 = phi i8* [ %38, %36 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #13
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %3, align 8
  br label %41

41:                                               ; preds = %1, %39
  %42 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %42, align 8
  store %"class.blink::DoctypeData"* null, %"class.blink::DoctypeData"** %42, align 8
  %44 = icmp eq %"class.blink::DoctypeData"* %43, null
  br i1 %44, label %69, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %43, i64 0, i32 4, i32 0, i32 0, i32 0
  %47 = load i16*, i16** %46, align 8
  %48 = icmp eq i16* %47, null
  %49 = bitcast i16* %47 to i8*
  br i1 %48, label %56, label %50, !prof !3

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %43, i64 0, i32 4, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %55, label %54, !prof !2

54:                                               ; preds = %50
  store i32 0, i32* %51, align 4
  br label %55

55:                                               ; preds = %54, %50
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %49) #13
  store i16* null, i16** %46, align 8
  br label %56

56:                                               ; preds = %55, %45
  %57 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load i16*, i16** %57, align 8
  %59 = icmp eq i16* %58, null
  %60 = bitcast i16* %58 to i8*
  br i1 %59, label %67, label %61, !prof !3

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %43, i64 0, i32 3, i32 0, i32 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %66, label %65, !prof !2

65:                                               ; preds = %61
  store i32 0, i32* %62, align 4
  br label %66

66:                                               ; preds = %65, %61
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %60) #13
  br label %67

67:                                               ; preds = %66, %56
  %68 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %43, i64 0, i32 0
  tail call void @free(i8* %68) #13
  br label %69

69:                                               ; preds = %41, %67
  %70 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #13
  br label %86

86:                                               ; preds = %69, %82, %85
  %87 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #13
  br label %103

103:                                              ; preds = %86, %99, %102
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder17ProcessFakeEndTagERKN3WTF12AtomicStringE(%"class.blink::HTMLTreeBuilder"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::AtomicHTMLToken", align 8
  %4 = alloca %"class.WTF::Vector", align 8
  %5 = bitcast %"class.blink::AtomicHTMLToken"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 56, i1 false)
  %6 = bitcast %"class.WTF::Vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #13
  %7 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %3, i64 0, i32 0
  store i32 3, i32* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #13
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #13
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %2, %12, %27
  %30 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %3, i64 0, i32 2, i32 0, i32 0
  %31 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %3, i64 0, i32 6
  %32 = bitcast %"class.WTF::StringImpl"** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 18, i1 false) #13
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %31, %"class.WTF::Vector"* nonnull dereferenceable(16) %4) #13
  %33 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %33, align 8
  %35 = icmp eq %"class.blink::Attribute"* %34, null
  br i1 %35, label %71, label %36, !prof !3

36:                                               ; preds = %29
  %37 = bitcast %"class.blink::Attribute"* %34 to i8*
  %38 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %69, label %41, !prof !2

41:                                               ; preds = %36
  %42 = zext i32 %39 to i64
  %43 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %34, i64 %42
  br label %44

44:                                               ; preds = %62, %41
  %45 = phi %"class.blink::Attribute"* [ %64, %62 ], [ %34, %41 ]
  %46 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %45, i64 0, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #13
  br label %62

62:                                               ; preds = %61, %58, %44
  %63 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %45, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %63) #13
  %64 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %45, i64 1
  %65 = icmp eq %"class.blink::Attribute"* %64, %43
  br i1 %65, label %66, label %44

66:                                               ; preds = %62
  store i32 0, i32* %38, align 4
  %67 = bitcast %"class.WTF::Vector"* %4 to i8**
  %68 = load i8*, i8** %67, align 8
  br label %69

69:                                               ; preds = %66, %36
  %70 = phi i8* [ %68, %66 ], [ %37, %36 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %70) #13
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %33, align 8
  br label %71

71:                                               ; preds = %29, %69
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  call void @_ZN5blink15HTMLTreeBuilder13ProcessEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* nonnull %3)
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder17ProcessFakeEndTagERKNS_13QualifiedNameE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::QualifiedName"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %4, i64 0, i32 3
  tail call void @_ZN5blink15HTMLTreeBuilder17ProcessFakeEndTagERKN3WTF12AtomicStringE(%"class.blink::HTMLTreeBuilder"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder34ProcessFakePEndTagIfPInButtonScopeEv(%"class.blink::HTMLTreeBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::AtomicHTMLToken", align 8
  %3 = alloca %"class.WTF::Vector", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kPTagE to %"class.blink::QualifiedName"**), align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %7, i64 0, i32 3
  %9 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack13InButtonScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %4, %"class.WTF::AtomicString"* dereferenceable(8) %8) #13
  br i1 %9, label %10, label %79

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::AtomicHTMLToken"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %11) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %13 = bitcast %"class.WTF::Vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16, i1 false) #13
  %14 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %2, i64 0, i32 0
  store i32 3, i32* %14, align 8
  %15 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %17, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %18, label %36, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %36

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i33
  %28 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %27, i33 1) #13
  %29 = extractvalue { i33, i1 } %28, 1
  %30 = extractvalue { i33, i1 } %28, 0
  %31 = icmp slt i33 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %33, label %34, !prof !2

33:                                               ; preds = %24
  tail call void @llvm.trap() #13
  unreachable

34:                                               ; preds = %24
  %35 = trunc i33 %30 to i32
  store i32 %35, i32* %25, align 4
  br label %36

36:                                               ; preds = %10, %19, %34
  %37 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %2, i64 0, i32 2, i32 0, i32 0
  %38 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %2, i64 0, i32 6
  %39 = bitcast %"class.WTF::StringImpl"** %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 18, i1 false) #13
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %38, %"class.WTF::Vector"* nonnull dereferenceable(16) %3) #13
  %40 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %40, align 8
  %42 = icmp eq %"class.blink::Attribute"* %41, null
  br i1 %42, label %78, label %43, !prof !3

43:                                               ; preds = %36
  %44 = bitcast %"class.blink::Attribute"* %41 to i8*
  %45 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %76, label %48, !prof !2

48:                                               ; preds = %43
  %49 = zext i32 %46 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %41, i64 %49
  br label %51

51:                                               ; preds = %69, %48
  %52 = phi %"class.blink::Attribute"* [ %71, %69 ], [ %41, %48 ]
  %53 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %52, i64 0, i32 1, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #13
  br label %69

69:                                               ; preds = %68, %65, %51
  %70 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %52, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %70) #13
  %71 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %52, i64 1
  %72 = icmp eq %"class.blink::Attribute"* %71, %50
  br i1 %72, label %73, label %51

73:                                               ; preds = %69
  store i32 0, i32* %45, align 4
  %74 = bitcast %"class.WTF::Vector"* %3 to i8**
  %75 = load i8*, i8** %74, align 8
  br label %76

76:                                               ; preds = %73, %43
  %77 = phi i8* [ %75, %73 ], [ %44, %43 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %77) #13
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %40, align 8
  br label %78

78:                                               ; preds = %36, %76
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #13
  call void @_ZN5blink15HTMLTreeBuilder13ProcessEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* nonnull %2)
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %11) #13
  br label %79

79:                                               ; preds = %1, %78
  ret void
}

declare zeroext i1 @_ZNK5blink16HTMLElementStack13InButtonScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder24ProcessStartTagForInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.blink::AtomicHTMLToken", align 8
  %6 = alloca %"class.WTF::Vector", align 8
  %7 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1
  %8 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %10, i64 0, i32 3, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %12, %14
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %18 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack22HasTemplateInHTMLScopeEv(%"class.blink::HTMLElementStack"* %17) #13
  br i1 %18, label %1311, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite28InsertHTMLHtmlStartTagInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %20, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %1311

21:                                               ; preds = %2
  %22 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBaseTagE to %"class.blink::QualifiedName"**), align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %24, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %12, %26
  br i1 %27, label %98, label %28

28:                                               ; preds = %21
  %29 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kBasefontTagE to %"class.blink::QualifiedName"**), align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %12, %33
  br i1 %34, label %98, label %35

35:                                               ; preds = %28
  %36 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kBgsoundTagE to %"class.blink::QualifiedName"**), align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %36, i64 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %12, %40
  br i1 %41, label %98, label %42

42:                                               ; preds = %35
  %43 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kCommandTagE to %"class.blink::QualifiedName"**), align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 3, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %12, %47
  br i1 %48, label %98, label %49

49:                                               ; preds = %42
  %50 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kLinkTagE to %"class.blink::QualifiedName"**), align 8
  %51 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %50, i64 0, i32 0, i32 0
  %52 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %12, %54
  br i1 %55, label %98, label %56

56:                                               ; preds = %49
  %57 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMetaTagE to %"class.blink::QualifiedName"**), align 8
  %58 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %57, i64 0, i32 0, i32 0
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %12, %61
  br i1 %62, label %98, label %63

63:                                               ; preds = %56
  %64 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kNoframesTagE to %"class.blink::QualifiedName"**), align 8
  %65 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 3, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %12, %68
  br i1 %69, label %98, label %70

70:                                               ; preds = %63
  %71 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %72 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %71, i64 0, i32 0, i32 0
  %73 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %73, i64 0, i32 3, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %12, %75
  br i1 %76, label %98, label %77

77:                                               ; preds = %70
  %78 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kStyleTagE to %"class.blink::QualifiedName"**), align 8
  %79 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %78, i64 0, i32 0, i32 0
  %80 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %80, i64 0, i32 3, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %12, %82
  br i1 %83, label %98, label %84

84:                                               ; preds = %77
  %85 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTitleTagE to %"class.blink::QualifiedName"**), align 8
  %86 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %85, i64 0, i32 0, i32 0
  %87 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %87, i64 0, i32 3, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %12, %89
  br i1 %90, label %98, label %91

91:                                               ; preds = %84
  %92 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %93 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %92, i64 0, i32 0, i32 0
  %94 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %94, i64 0, i32 3, i32 0, i32 0, i32 0
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %12, %96
  br i1 %97, label %98, label %100

98:                                               ; preds = %91, %84, %77, %70, %63, %56, %49, %42, %35, %28, %21
  %99 = tail call zeroext i1 @_ZN5blink15HTMLTreeBuilder24ProcessStartTagForInHeadEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %1311

100:                                              ; preds = %91
  %101 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE to %"class.blink::QualifiedName"**), align 8
  %102 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %101, i64 0, i32 0, i32 0
  %103 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %103, i64 0, i32 3, i32 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %12, %105
  br i1 %106, label %107, label %117

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %109 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %110 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack30SecondElementIsHTMLBodyElementEv(%"class.blink::HTMLElementStack"* %109) #13
  br i1 %110, label %111, label %1311

111:                                              ; preds = %107
  %112 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack17HasOnlyOneElementEv(%"class.blink::HTMLElementStack"* %109) #13
  br i1 %112, label %1311, label %113

113:                                              ; preds = %111
  %114 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack22HasTemplateInHTMLScopeEv(%"class.blink::HTMLElementStack"* %109) #13
  br i1 %114, label %1311, label %115

115:                                              ; preds = %113
  %116 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 0
  store i8 0, i8* %116, align 8
  tail call void @_ZN5blink20HTMLConstructionSite28InsertHTMLBodyStartTagInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %108, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %1311

117:                                              ; preds = %100
  %118 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kFramesetTagE to %"class.blink::QualifiedName"**), align 8
  %119 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %118, i64 0, i32 0, i32 0
  %120 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %120, i64 0, i32 3, i32 0, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %12, %122
  br i1 %123, label %124, label %183

124:                                              ; preds = %117
  %125 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %126 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %127 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack30SecondElementIsHTMLBodyElementEv(%"class.blink::HTMLElementStack"* %126) #13
  br i1 %127, label %128, label %1311

128:                                              ; preds = %124
  %129 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack17HasOnlyOneElementEv(%"class.blink::HTMLElementStack"* %126) #13
  br i1 %129, label %1311, label %130

130:                                              ; preds = %128
  %131 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 0
  %132 = load i8, i8* %131, align 8, !range !4
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %1311, label %134

134:                                              ; preds = %130
  %135 = tail call %"class.blink::Element"* @_ZNK5blink16HTMLElementStack11BodyElementEv(%"class.blink::HTMLElementStack"* %126) #13
  %136 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %135, i64 0, i32 0, i32 0
  %137 = bitcast %"class.blink::DummyExceptionStateForTesting"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %137) #13
  %138 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 0
  %139 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %139, align 8
  %140 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %140, align 2
  %141 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 2
  %142 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %143 = bitcast %"class.WTF::StringImpl"** %142 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 16, i1 false) #13
  %144 = bitcast i8** %141 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 36, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %138, align 8
  %145 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0
  call void @_ZN5blink4Node6removeERNS_14ExceptionStateE(%"class.blink::Node"* %136, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %145) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %138, align 8
  %146 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 4
  %147 = load i32, i32* %146, align 8
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %150, label %149

149:                                              ; preds = %134
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %145) #13
  br label %150

150:                                              ; preds = %134, %149
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %138, align 8
  %151 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %152 = load i64*, i64** %151, align 8
  %153 = icmp eq i64* %152, null
  br i1 %153, label %164, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 3
  %156 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %155, align 8
  %157 = bitcast %"class.v8::Isolate"* %156 to %"class.v8::internal::Isolate"*
  %158 = load i64, i64* %152, align 8
  %159 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %157, i64 %158) #13
  %160 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %156) #13
  br i1 %160, label %164, label %161

161:                                              ; preds = %154
  %162 = bitcast i64* %159 to %"class.v8::Value"*
  %163 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %156, %"class.v8::Value"* %162) #13
  br label %164

164:                                              ; preds = %161, %154, %150
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %164
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %176

174:                                              ; preds = %167
  %175 = add i32 %173, -1
  store i32 %175, i32* %172, align 4
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ %173, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #13
  br label %180

180:                                              ; preds = %164, %176, %179
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %137) #13
  %181 = call %"class.blink::Element"* @_ZNK5blink16HTMLElementStack11BodyElementEv(%"class.blink::HTMLElementStack"* %126) #13
  call void @_ZN5blink16HTMLElementStack8PopUntilEPNS_7ElementE(%"class.blink::HTMLElementStack"* %126, %"class.blink::Element"* %181) #13
  call void @_ZN5blink16HTMLElementStack18PopHTMLBodyElementEv(%"class.blink::HTMLElementStack"* %126) #13
  call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %125, %"class.blink::AtomicHTMLToken"* %1) #13
  %182 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 19, i32* %182, align 8
  br label %1311

183:                                              ; preds = %117
  %184 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kAddressTagE to %"class.blink::QualifiedName"**), align 8
  %185 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %184, i64 0, i32 0, i32 0
  %186 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %185, align 8
  %187 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %186, i64 0, i32 3, i32 0, i32 0, i32 0
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %187, align 8
  %189 = icmp eq %"class.WTF::StringImpl"* %12, %188
  br i1 %189, label %344, label %190

190:                                              ; preds = %183
  %191 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kArticleTagE to %"class.blink::QualifiedName"**), align 8
  %192 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %191, i64 0, i32 0, i32 0
  %193 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %192, align 8
  %194 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %193, i64 0, i32 3, i32 0, i32 0, i32 0
  %195 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %194, align 8
  %196 = icmp eq %"class.WTF::StringImpl"* %12, %195
  br i1 %196, label %344, label %197

197:                                              ; preds = %190
  %198 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kAsideTagE to %"class.blink::QualifiedName"**), align 8
  %199 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %198, i64 0, i32 0, i32 0
  %200 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %199, align 8
  %201 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %200, i64 0, i32 3, i32 0, i32 0, i32 0
  %202 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %201, align 8
  %203 = icmp eq %"class.WTF::StringImpl"* %12, %202
  br i1 %203, label %344, label %204

204:                                              ; preds = %197
  %205 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names14kBlockquoteTagE to %"class.blink::QualifiedName"**), align 8
  %206 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %205, i64 0, i32 0, i32 0
  %207 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %206, align 8
  %208 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %207, i64 0, i32 3, i32 0, i32 0, i32 0
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %208, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %12, %209
  br i1 %210, label %344, label %211

211:                                              ; preds = %204
  %212 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kCenterTagE to %"class.blink::QualifiedName"**), align 8
  %213 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %212, i64 0, i32 0, i32 0
  %214 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %213, align 8
  %215 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %214, i64 0, i32 3, i32 0, i32 0, i32 0
  %216 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %215, align 8
  %217 = icmp eq %"class.WTF::StringImpl"* %12, %216
  br i1 %217, label %344, label %218

218:                                              ; preds = %211
  %219 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kDetailsTagE to %"class.blink::QualifiedName"**), align 8
  %220 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %219, i64 0, i32 0, i32 0
  %221 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %220, align 8
  %222 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %221, i64 0, i32 3, i32 0, i32 0, i32 0
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  %224 = icmp eq %"class.WTF::StringImpl"* %12, %223
  br i1 %224, label %344, label %225

225:                                              ; preds = %218
  %226 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kDirTagE to %"class.blink::QualifiedName"**), align 8
  %227 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %226, i64 0, i32 0, i32 0
  %228 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %227, align 8
  %229 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %228, i64 0, i32 3, i32 0, i32 0, i32 0
  %230 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %229, align 8
  %231 = icmp eq %"class.WTF::StringImpl"* %12, %230
  br i1 %231, label %344, label %232

232:                                              ; preds = %225
  %233 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kDivTagE to %"class.blink::QualifiedName"**), align 8
  %234 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %233, i64 0, i32 0, i32 0
  %235 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %234, align 8
  %236 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %235, i64 0, i32 3, i32 0, i32 0, i32 0
  %237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %236, align 8
  %238 = icmp eq %"class.WTF::StringImpl"* %12, %237
  br i1 %238, label %344, label %239

239:                                              ; preds = %232
  %240 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kDlTagE to %"class.blink::QualifiedName"**), align 8
  %241 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %240, i64 0, i32 0, i32 0
  %242 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %241, align 8
  %243 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %242, i64 0, i32 3, i32 0, i32 0, i32 0
  %244 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %243, align 8
  %245 = icmp eq %"class.WTF::StringImpl"* %12, %244
  br i1 %245, label %344, label %246

246:                                              ; preds = %239
  %247 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kFieldsetTagE to %"class.blink::QualifiedName"**), align 8
  %248 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %248, align 8
  %250 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %249, i64 0, i32 3, i32 0, i32 0, i32 0
  %251 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %250, align 8
  %252 = icmp eq %"class.WTF::StringImpl"* %12, %251
  br i1 %252, label %344, label %253

253:                                              ; preds = %246
  %254 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names14kFigcaptionTagE to %"class.blink::QualifiedName"**), align 8
  %255 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %254, i64 0, i32 0, i32 0
  %256 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %255, align 8
  %257 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %256, i64 0, i32 3, i32 0, i32 0, i32 0
  %258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %257, align 8
  %259 = icmp eq %"class.WTF::StringImpl"* %12, %258
  br i1 %259, label %344, label %260

260:                                              ; preds = %253
  %261 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kFigureTagE to %"class.blink::QualifiedName"**), align 8
  %262 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %261, i64 0, i32 0, i32 0
  %263 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %262, align 8
  %264 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %263, i64 0, i32 3, i32 0, i32 0, i32 0
  %265 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %264, align 8
  %266 = icmp eq %"class.WTF::StringImpl"* %12, %265
  br i1 %266, label %344, label %267

267:                                              ; preds = %260
  %268 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kFooterTagE to %"class.blink::QualifiedName"**), align 8
  %269 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %268, i64 0, i32 0, i32 0
  %270 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %269, align 8
  %271 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %270, i64 0, i32 3, i32 0, i32 0, i32 0
  %272 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %271, align 8
  %273 = icmp eq %"class.WTF::StringImpl"* %12, %272
  br i1 %273, label %344, label %274

274:                                              ; preds = %267
  %275 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kHeaderTagE to %"class.blink::QualifiedName"**), align 8
  %276 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %275, i64 0, i32 0, i32 0
  %277 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %276, align 8
  %278 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %277, i64 0, i32 3, i32 0, i32 0, i32 0
  %279 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %278, align 8
  %280 = icmp eq %"class.WTF::StringImpl"* %12, %279
  br i1 %280, label %344, label %281

281:                                              ; preds = %274
  %282 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kHgroupTagE to %"class.blink::QualifiedName"**), align 8
  %283 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %282, i64 0, i32 0, i32 0
  %284 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %283, align 8
  %285 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %284, i64 0, i32 3, i32 0, i32 0, i32 0
  %286 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %285, align 8
  %287 = icmp eq %"class.WTF::StringImpl"* %12, %286
  br i1 %287, label %344, label %288

288:                                              ; preds = %281
  %289 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMainTagE to %"class.blink::QualifiedName"**), align 8
  %290 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %289, i64 0, i32 0, i32 0
  %291 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %290, align 8
  %292 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %291, i64 0, i32 3, i32 0, i32 0, i32 0
  %293 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %292, align 8
  %294 = icmp eq %"class.WTF::StringImpl"* %12, %293
  br i1 %294, label %344, label %295

295:                                              ; preds = %288
  %296 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMenuTagE to %"class.blink::QualifiedName"**), align 8
  %297 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %296, i64 0, i32 0, i32 0
  %298 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %297, align 8
  %299 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %298, i64 0, i32 3, i32 0, i32 0, i32 0
  %300 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %299, align 8
  %301 = icmp eq %"class.WTF::StringImpl"* %12, %300
  br i1 %301, label %344, label %302

302:                                              ; preds = %295
  %303 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kNavTagE to %"class.blink::QualifiedName"**), align 8
  %304 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %303, i64 0, i32 0, i32 0
  %305 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %304, align 8
  %306 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %305, i64 0, i32 3, i32 0, i32 0, i32 0
  %307 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %306, align 8
  %308 = icmp eq %"class.WTF::StringImpl"* %12, %307
  br i1 %308, label %344, label %309

309:                                              ; preds = %302
  %310 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kOlTagE to %"class.blink::QualifiedName"**), align 8
  %311 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %310, i64 0, i32 0, i32 0
  %312 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %311, align 8
  %313 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %312, i64 0, i32 3, i32 0, i32 0, i32 0
  %314 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %313, align 8
  %315 = icmp eq %"class.WTF::StringImpl"* %12, %314
  br i1 %315, label %344, label %316

316:                                              ; preds = %309
  %317 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kPTagE to %"class.blink::QualifiedName"**), align 8
  %318 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %317, i64 0, i32 0, i32 0
  %319 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %318, align 8
  %320 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %319, i64 0, i32 3, i32 0, i32 0, i32 0
  %321 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %320, align 8
  %322 = icmp eq %"class.WTF::StringImpl"* %12, %321
  br i1 %322, label %344, label %323

323:                                              ; preds = %316
  %324 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kSectionTagE to %"class.blink::QualifiedName"**), align 8
  %325 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %324, i64 0, i32 0, i32 0
  %326 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %325, align 8
  %327 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %326, i64 0, i32 3, i32 0, i32 0, i32 0
  %328 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %327, align 8
  %329 = icmp eq %"class.WTF::StringImpl"* %12, %328
  br i1 %329, label %344, label %330

330:                                              ; preds = %323
  %331 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kSummaryTagE to %"class.blink::QualifiedName"**), align 8
  %332 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %331, i64 0, i32 0, i32 0
  %333 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %332, align 8
  %334 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %333, i64 0, i32 3, i32 0, i32 0, i32 0
  %335 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %334, align 8
  %336 = icmp eq %"class.WTF::StringImpl"* %12, %335
  br i1 %336, label %344, label %337

337:                                              ; preds = %330
  %338 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kUlTagE to %"class.blink::QualifiedName"**), align 8
  %339 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %338, i64 0, i32 0, i32 0
  %340 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %339, align 8
  %341 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %340, i64 0, i32 3, i32 0, i32 0, i32 0
  %342 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %341, align 8
  %343 = icmp eq %"class.WTF::StringImpl"* %12, %342
  br i1 %343, label %344, label %346

344:                                              ; preds = %337, %330, %323, %316, %309, %302, %295, %288, %281, %274, %267, %260, %253, %246, %239, %232, %225, %218, %211, %204, %197, %190, %183
  tail call void @_ZN5blink15HTMLTreeBuilder34ProcessFakePEndTagIfPInButtonScopeEv(%"class.blink::HTMLTreeBuilder"* %0)
  %345 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %345, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %1311

346:                                              ; preds = %337
  %347 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH1TagE to %"class.blink::QualifiedName"**), align 8
  %348 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %347, i64 0, i32 0, i32 0
  %349 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %348, align 8
  %350 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %349, i64 0, i32 3, i32 0, i32 0, i32 0
  %351 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %350, align 8
  %352 = icmp eq %"class.WTF::StringImpl"* %12, %351
  br i1 %352, label %388, label %353

353:                                              ; preds = %346
  %354 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH2TagE to %"class.blink::QualifiedName"**), align 8
  %355 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %354, i64 0, i32 0, i32 0
  %356 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %355, align 8
  %357 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %356, i64 0, i32 3, i32 0, i32 0, i32 0
  %358 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %357, align 8
  %359 = icmp eq %"class.WTF::StringImpl"* %12, %358
  br i1 %359, label %388, label %360

360:                                              ; preds = %353
  %361 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH3TagE to %"class.blink::QualifiedName"**), align 8
  %362 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %361, i64 0, i32 0, i32 0
  %363 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %362, align 8
  %364 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %363, i64 0, i32 3, i32 0, i32 0, i32 0
  %365 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %364, align 8
  %366 = icmp eq %"class.WTF::StringImpl"* %12, %365
  br i1 %366, label %388, label %367

367:                                              ; preds = %360
  %368 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH4TagE to %"class.blink::QualifiedName"**), align 8
  %369 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %368, i64 0, i32 0, i32 0
  %370 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %369, align 8
  %371 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %370, i64 0, i32 3, i32 0, i32 0, i32 0
  %372 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %371, align 8
  %373 = icmp eq %"class.WTF::StringImpl"* %12, %372
  br i1 %373, label %388, label %374

374:                                              ; preds = %367
  %375 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH5TagE to %"class.blink::QualifiedName"**), align 8
  %376 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %375, i64 0, i32 0, i32 0
  %377 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %376, align 8
  %378 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %377, i64 0, i32 3, i32 0, i32 0, i32 0
  %379 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %378, align 8
  %380 = icmp eq %"class.WTF::StringImpl"* %12, %379
  br i1 %380, label %388, label %381

381:                                              ; preds = %374
  %382 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH6TagE to %"class.blink::QualifiedName"**), align 8
  %383 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %382, i64 0, i32 0, i32 0
  %384 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %383, align 8
  %385 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %384, i64 0, i32 3, i32 0, i32 0, i32 0
  %386 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %385, align 8
  %387 = icmp eq %"class.WTF::StringImpl"* %12, %386
  br i1 %387, label %388, label %398

388:                                              ; preds = %346, %353, %360, %367, %374, %381
  tail call void @_ZN5blink15HTMLTreeBuilder34ProcessFakePEndTagIfPInButtonScopeEv(%"class.blink::HTMLTreeBuilder"* %0)
  %389 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %390 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0
  %391 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %390, align 8
  %392 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %391, i64 0, i32 0, i32 0, i32 0
  %393 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %392, align 8
  %394 = tail call zeroext i1 @_ZNK5blink13HTMLStackItem23IsNumberedHeaderElementEv(%"class.blink::HTMLStackItem"* %393)
  br i1 %394, label %395, label %397

395:                                              ; preds = %388
  %396 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  tail call void @_ZN5blink16HTMLElementStack3PopEv(%"class.blink::HTMLElementStack"* %396) #13
  br label %397

397:                                              ; preds = %395, %388
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %389, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %1311

398:                                              ; preds = %381
  %399 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kPreTagE to %"class.blink::QualifiedName"**), align 8
  %400 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %399, i64 0, i32 0, i32 0
  %401 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %400, align 8
  %402 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %401, i64 0, i32 3, i32 0, i32 0, i32 0
  %403 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %402, align 8
  %404 = icmp eq %"class.WTF::StringImpl"* %12, %403
  br i1 %404, label %412, label %405

405:                                              ; preds = %398
  %406 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kListingTagE to %"class.blink::QualifiedName"**), align 8
  %407 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %406, i64 0, i32 0, i32 0
  %408 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %407, align 8
  %409 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %408, i64 0, i32 3, i32 0, i32 0, i32 0
  %410 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %409, align 8
  %411 = icmp eq %"class.WTF::StringImpl"* %12, %410
  br i1 %411, label %412, label %416

412:                                              ; preds = %405, %398
  tail call void @_ZN5blink15HTMLTreeBuilder34ProcessFakePEndTagIfPInButtonScopeEv(%"class.blink::HTMLTreeBuilder"* %0)
  %413 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %413, %"class.blink::AtomicHTMLToken"* %1) #13
  %414 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 8
  store i8 1, i8* %414, align 8
  %415 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 0
  store i8 0, i8* %415, align 8
  br label %1311

416:                                              ; preds = %405
  %417 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kFormTagE to %"class.blink::QualifiedName"**), align 8
  %418 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %417, i64 0, i32 0, i32 0
  %419 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %418, align 8
  %420 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %419, i64 0, i32 3, i32 0, i32 0, i32 0
  %421 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %420, align 8
  %422 = icmp eq %"class.WTF::StringImpl"* %12, %421
  br i1 %422, label %423, label %448

423:                                              ; preds = %416
  %424 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %425 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 4, i32 0, i32 0
  %426 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %425, align 8
  %427 = icmp eq %"class.blink::HTMLFormElement"* %426, null
  br i1 %427, label %447, label %428

428:                                              ; preds = %423
  %429 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %430 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack22HasTemplateInHTMLScopeEv(%"class.blink::HTMLElementStack"* %429) #13
  br i1 %430, label %447, label %431

431:                                              ; preds = %428
  %432 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0
  %433 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %432, align 8
  %434 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %433, i64 0, i32 0, i32 0, i32 0
  %435 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %434, align 8
  %436 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %435, i64 0, i32 0, i32 0, i32 0
  %437 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %436, align 8
  %438 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %437, i64 0, i32 0, i32 3, i32 0, i32 0
  %439 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %438, align 8
  %440 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %439, i64 0, i32 2, i32 0, i32 0
  %441 = load %"class.blink::Document"*, %"class.blink::Document"** %440, align 8
  %442 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %441, i64 0, i32 2
  %443 = bitcast %"class.blink::UseCounter"* %442 to void (%"class.blink::UseCounter"*, i32)***
  %444 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %443, align 8
  %445 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %444, i64 3
  %446 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %445, align 8
  tail call void %446(%"class.blink::UseCounter"* %442, i32 1972) #13
  br label %1311

447:                                              ; preds = %423, %428
  tail call void @_ZN5blink15HTMLTreeBuilder34ProcessFakePEndTagIfPInButtonScopeEv(%"class.blink::HTMLTreeBuilder"* %0)
  tail call void @_ZN5blink20HTMLConstructionSite21InsertHTMLFormElementEPNS_15AtomicHTMLTokenEb(%"class.blink::HTMLConstructionSite"* %424, %"class.blink::AtomicHTMLToken"* %1, i1 zeroext false) #13
  br label %1311

448:                                              ; preds = %416
  %449 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kLiTagE to %"class.blink::QualifiedName"**), align 8
  %450 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %449, i64 0, i32 0, i32 0
  %451 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %450, align 8
  %452 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %451, i64 0, i32 3, i32 0, i32 0, i32 0
  %453 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %452, align 8
  %454 = icmp eq %"class.WTF::StringImpl"* %12, %453
  br i1 %454, label %455, label %518

455:                                              ; preds = %448
  %456 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 0
  store i8 0, i8* %456, align 8
  %457 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %458 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %459 = tail call %"class.blink::HTMLElementStack::ElementRecord"* @_ZNK5blink16HTMLElementStack9TopRecordEv(%"class.blink::HTMLElementStack"* %458) #13
  br label %460

460:                                              ; preds = %514, %455
  %461 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %459, %455 ], [ %516, %514 ]
  %462 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %461, i64 0, i32 0, i32 0, i32 0
  %463 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %462, align 8
  %464 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %450, align 8
  %465 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %463, i64 0, i32 1, i32 0, i32 0, i32 0
  %466 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %465, align 8
  %467 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %464, i64 0, i32 3, i32 0, i32 0, i32 0
  %468 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %467, align 8
  %469 = icmp eq %"class.WTF::StringImpl"* %466, %468
  br i1 %469, label %470, label %478

470:                                              ; preds = %460
  %471 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %463, i64 0, i32 3, i32 0, i32 0, i32 0
  %472 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %471, align 8
  %473 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %464, i64 0, i32 4, i32 0, i32 0, i32 0
  %474 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %473, align 8
  %475 = icmp eq %"class.WTF::StringImpl"* %472, %474
  br i1 %475, label %476, label %478

476:                                              ; preds = %470
  %477 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %463, i64 0, i32 1
  tail call void @_ZN5blink15HTMLTreeBuilder17ProcessFakeEndTagERKN3WTF12AtomicStringE(%"class.blink::HTMLTreeBuilder"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %477) #13
  br label %517

478:                                              ; preds = %460, %470
  %479 = tail call zeroext i1 @_ZNK5blink13HTMLStackItem13IsSpecialNodeEv(%"class.blink::HTMLStackItem"* %463) #13
  br i1 %479, label %480, label %514

480:                                              ; preds = %478
  %481 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %185, align 8
  %482 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %465, align 8
  %483 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %481, i64 0, i32 3, i32 0, i32 0, i32 0
  %484 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %483, align 8
  %485 = icmp eq %"class.WTF::StringImpl"* %482, %484
  br i1 %485, label %486, label %492

486:                                              ; preds = %480
  %487 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %463, i64 0, i32 3, i32 0, i32 0, i32 0
  %488 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %487, align 8
  %489 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %481, i64 0, i32 4, i32 0, i32 0, i32 0
  %490 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %489, align 8
  %491 = icmp eq %"class.WTF::StringImpl"* %488, %490
  br i1 %491, label %514, label %492

492:                                              ; preds = %480, %486
  %493 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %234, align 8
  %494 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %493, i64 0, i32 3, i32 0, i32 0, i32 0
  %495 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %494, align 8
  %496 = icmp eq %"class.WTF::StringImpl"* %482, %495
  br i1 %496, label %497, label %503

497:                                              ; preds = %492
  %498 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %463, i64 0, i32 3, i32 0, i32 0, i32 0
  %499 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %498, align 8
  %500 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %493, i64 0, i32 4, i32 0, i32 0, i32 0
  %501 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %500, align 8
  %502 = icmp eq %"class.WTF::StringImpl"* %499, %501
  br i1 %502, label %514, label %503

503:                                              ; preds = %492, %497
  %504 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %318, align 8
  %505 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %504, i64 0, i32 3, i32 0, i32 0, i32 0
  %506 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %505, align 8
  %507 = icmp eq %"class.WTF::StringImpl"* %482, %506
  br i1 %507, label %508, label %517

508:                                              ; preds = %503
  %509 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %463, i64 0, i32 3, i32 0, i32 0, i32 0
  %510 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %509, align 8
  %511 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %504, i64 0, i32 4, i32 0, i32 0, i32 0
  %512 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %511, align 8
  %513 = icmp eq %"class.WTF::StringImpl"* %510, %512
  br i1 %513, label %514, label %517

514:                                              ; preds = %478, %486, %497, %508
  %515 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %461, i64 0, i32 1, i32 0, i32 0
  %516 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %515, align 8
  br label %460

517:                                              ; preds = %503, %508, %476
  tail call void @_ZN5blink15HTMLTreeBuilder34ProcessFakePEndTagIfPInButtonScopeEv(%"class.blink::HTMLTreeBuilder"* %0) #13
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %457, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %1311

518:                                              ; preds = %448
  %519 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kDdTagE to %"class.blink::QualifiedName"**), align 8
  %520 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %519, i64 0, i32 0, i32 0
  %521 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %520, align 8
  %522 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %521, i64 0, i32 3, i32 0, i32 0, i32 0
  %523 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %522, align 8
  %524 = icmp eq %"class.WTF::StringImpl"* %12, %523
  %525 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kDtTagE to %"class.blink::QualifiedName"**), align 8
  br i1 %524, label %532, label %526

526:                                              ; preds = %518
  %527 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %525, i64 0, i32 0, i32 0
  %528 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %527, align 8
  %529 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %528, i64 0, i32 3, i32 0, i32 0, i32 0
  %530 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %529, align 8
  %531 = icmp eq %"class.WTF::StringImpl"* %12, %530
  br i1 %531, label %532, label %607

532:                                              ; preds = %518, %526
  %533 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 0
  store i8 0, i8* %533, align 8
  %534 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %535 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %536 = tail call %"class.blink::HTMLElementStack::ElementRecord"* @_ZNK5blink16HTMLElementStack9TopRecordEv(%"class.blink::HTMLElementStack"* %535) #13
  %537 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %525, i64 0, i32 0, i32 0
  br label %538

538:                                              ; preds = %603, %532
  %539 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %536, %532 ], [ %605, %603 ]
  %540 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %539, i64 0, i32 0, i32 0, i32 0
  %541 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %540, align 8
  %542 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %520, align 8
  %543 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %541, i64 0, i32 1, i32 0, i32 0, i32 0
  %544 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %543, align 8
  %545 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %542, i64 0, i32 3, i32 0, i32 0, i32 0
  %546 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %545, align 8
  %547 = icmp eq %"class.WTF::StringImpl"* %544, %546
  br i1 %547, label %548, label %554

548:                                              ; preds = %538
  %549 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %541, i64 0, i32 3, i32 0, i32 0, i32 0
  %550 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %549, align 8
  %551 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %542, i64 0, i32 4, i32 0, i32 0, i32 0
  %552 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %551, align 8
  %553 = icmp eq %"class.WTF::StringImpl"* %550, %552
  br i1 %553, label %565, label %554

554:                                              ; preds = %548, %538
  %555 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %537, align 8
  %556 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %555, i64 0, i32 3, i32 0, i32 0, i32 0
  %557 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %556, align 8
  %558 = icmp eq %"class.WTF::StringImpl"* %544, %557
  br i1 %558, label %559, label %567

559:                                              ; preds = %554
  %560 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %541, i64 0, i32 3, i32 0, i32 0, i32 0
  %561 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %560, align 8
  %562 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %555, i64 0, i32 4, i32 0, i32 0, i32 0
  %563 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %562, align 8
  %564 = icmp eq %"class.WTF::StringImpl"* %561, %563
  br i1 %564, label %565, label %567

565:                                              ; preds = %548, %559
  %566 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %541, i64 0, i32 1
  tail call void @_ZN5blink15HTMLTreeBuilder17ProcessFakeEndTagERKN3WTF12AtomicStringE(%"class.blink::HTMLTreeBuilder"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %566) #13
  br label %606

567:                                              ; preds = %554, %559
  %568 = tail call zeroext i1 @_ZNK5blink13HTMLStackItem13IsSpecialNodeEv(%"class.blink::HTMLStackItem"* %541) #13
  br i1 %568, label %569, label %603

569:                                              ; preds = %567
  %570 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %185, align 8
  %571 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %543, align 8
  %572 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %570, i64 0, i32 3, i32 0, i32 0, i32 0
  %573 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %572, align 8
  %574 = icmp eq %"class.WTF::StringImpl"* %571, %573
  br i1 %574, label %575, label %581

575:                                              ; preds = %569
  %576 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %541, i64 0, i32 3, i32 0, i32 0, i32 0
  %577 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %576, align 8
  %578 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %570, i64 0, i32 4, i32 0, i32 0, i32 0
  %579 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %578, align 8
  %580 = icmp eq %"class.WTF::StringImpl"* %577, %579
  br i1 %580, label %603, label %581

581:                                              ; preds = %569, %575
  %582 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %234, align 8
  %583 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %582, i64 0, i32 3, i32 0, i32 0, i32 0
  %584 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %583, align 8
  %585 = icmp eq %"class.WTF::StringImpl"* %571, %584
  br i1 %585, label %586, label %592

586:                                              ; preds = %581
  %587 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %541, i64 0, i32 3, i32 0, i32 0, i32 0
  %588 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %587, align 8
  %589 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %582, i64 0, i32 4, i32 0, i32 0, i32 0
  %590 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %589, align 8
  %591 = icmp eq %"class.WTF::StringImpl"* %588, %590
  br i1 %591, label %603, label %592

592:                                              ; preds = %581, %586
  %593 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %318, align 8
  %594 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %593, i64 0, i32 3, i32 0, i32 0, i32 0
  %595 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %594, align 8
  %596 = icmp eq %"class.WTF::StringImpl"* %571, %595
  br i1 %596, label %597, label %606

597:                                              ; preds = %592
  %598 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %541, i64 0, i32 3, i32 0, i32 0, i32 0
  %599 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %598, align 8
  %600 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %593, i64 0, i32 4, i32 0, i32 0, i32 0
  %601 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %600, align 8
  %602 = icmp eq %"class.WTF::StringImpl"* %599, %601
  br i1 %602, label %603, label %606

603:                                              ; preds = %567, %575, %586, %597
  %604 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %539, i64 0, i32 1, i32 0, i32 0
  %605 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %604, align 8
  br label %538

606:                                              ; preds = %592, %597, %565
  tail call void @_ZN5blink15HTMLTreeBuilder34ProcessFakePEndTagIfPInButtonScopeEv(%"class.blink::HTMLTreeBuilder"* %0) #13
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %534, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %1311

607:                                              ; preds = %526
  %608 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names13kPlaintextTagE to %"class.blink::QualifiedName"**), align 8
  %609 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %608, i64 0, i32 0, i32 0
  %610 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %609, align 8
  %611 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %610, i64 0, i32 3, i32 0, i32 0, i32 0
  %612 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %611, align 8
  %613 = icmp eq %"class.WTF::StringImpl"* %12, %612
  br i1 %613, label %614, label %623

614:                                              ; preds = %607
  tail call void @_ZN5blink15HTMLTreeBuilder34ProcessFakePEndTagIfPInButtonScopeEv(%"class.blink::HTMLTreeBuilder"* %0)
  %615 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %615, %"class.blink::AtomicHTMLToken"* %1) #13
  %616 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 11, i32 0, i32 0
  %617 = load %"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocumentParser"** %616, align 8
  %618 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %617, i64 0, i32 7, i32 0, i32 0, i32 0
  %619 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %618, align 8
  %620 = icmp eq %"class.blink::HTMLTokenizer"* %619, null
  br i1 %620, label %1311, label %621

621:                                              ; preds = %614
  %622 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %619, i64 0, i32 0
  store i32 6, i32* %622, align 8
  br label %1311

623:                                              ; preds = %607
  %624 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kButtonTagE to %"class.blink::QualifiedName"**), align 8
  %625 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %624, i64 0, i32 0, i32 0
  %626 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %625, align 8
  %627 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %626, i64 0, i32 3, i32 0, i32 0, i32 0
  %628 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %627, align 8
  %629 = icmp eq %"class.WTF::StringImpl"* %12, %628
  br i1 %629, label %630, label %639

630:                                              ; preds = %623
  %631 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %632 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %633 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack7InScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"* %632, %"class.blink::QualifiedName"* dereferenceable(8) %624) #13
  br i1 %633, label %634, label %637

634:                                              ; preds = %630
  %635 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %625, align 8
  %636 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %635, i64 0, i32 3
  tail call void @_ZN5blink15HTMLTreeBuilder17ProcessFakeEndTagERKN3WTF12AtomicStringE(%"class.blink::HTMLTreeBuilder"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %636) #13
  tail call void @_ZN5blink15HTMLTreeBuilder15ProcessStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %1311

637:                                              ; preds = %630
  tail call void @_ZN5blink20HTMLConstructionSite38ReconstructTheActiveFormattingElementsEv(%"class.blink::HTMLConstructionSite"* %631) #13
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %631, %"class.blink::AtomicHTMLToken"* %1) #13
  %638 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 0
  store i8 0, i8* %638, align 8
  br label %1311

639:                                              ; preds = %623
  %640 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kATagE to %"class.blink::QualifiedName"**), align 8
  %641 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %640, i64 0, i32 0, i32 0
  %642 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %641, align 8
  %643 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %642, i64 0, i32 3, i32 0, i32 0, i32 0
  %644 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %643, align 8
  %645 = icmp eq %"class.WTF::StringImpl"* %12, %644
  br i1 %645, label %646, label %659

646:                                              ; preds = %639
  %647 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %648 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 6
  %649 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %642, i64 0, i32 3
  %650 = tail call %"class.blink::Element"* @_ZN5blink25HTMLFormattingElementList29ClosestElementInScopeWithNameERKN3WTF12AtomicStringE(%"class.blink::HTMLFormattingElementList"* %648, %"class.WTF::AtomicString"* dereferenceable(8) %649) #13
  %651 = icmp eq %"class.blink::Element"* %650, null
  br i1 %651, label %658, label %652

652:                                              ; preds = %646
  %653 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %641, align 8
  %654 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %653, i64 0, i32 3
  tail call void @_ZN5blink15HTMLTreeBuilder17ProcessFakeEndTagERKN3WTF12AtomicStringE(%"class.blink::HTMLTreeBuilder"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %654) #13
  tail call void @_ZN5blink25HTMLFormattingElementList6RemoveEPNS_7ElementE(%"class.blink::HTMLFormattingElementList"* %648, %"class.blink::Element"* nonnull %650) #13
  %655 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %656 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack8ContainsEPNS_7ElementE(%"class.blink::HTMLElementStack"* %655, %"class.blink::Element"* nonnull %650) #13
  br i1 %656, label %657, label %658

657:                                              ; preds = %652
  tail call void @_ZN5blink16HTMLElementStack6RemoveEPNS_7ElementE(%"class.blink::HTMLElementStack"* %655, %"class.blink::Element"* nonnull %650) #13
  br label %658

658:                                              ; preds = %646, %652, %657
  tail call void @_ZN5blink20HTMLConstructionSite38ReconstructTheActiveFormattingElementsEv(%"class.blink::HTMLConstructionSite"* %647) #13
  tail call void @_ZN5blink20HTMLConstructionSite23InsertFormattingElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %647, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %1311

659:                                              ; preds = %639
  %660 = tail call fastcc zeroext i1 @_ZN5blinkL31IsNonAnchorNonNobrFormattingTagERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8) %7)
  br i1 %660, label %661, label %663

661:                                              ; preds = %659
  %662 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite38ReconstructTheActiveFormattingElementsEv(%"class.blink::HTMLConstructionSite"* %662) #13
  tail call void @_ZN5blink20HTMLConstructionSite23InsertFormattingElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %662, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %1311

663:                                              ; preds = %659
  %664 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kNobrTagE to %"class.blink::QualifiedName"**), align 8
  %665 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %664, i64 0, i32 0, i32 0
  %666 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %665, align 8
  %667 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %666, i64 0, i32 3, i32 0, i32 0, i32 0
  %668 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %667, align 8
  %669 = icmp eq %"class.WTF::StringImpl"* %12, %668
  br i1 %669, label %670, label %678

670:                                              ; preds = %663
  %671 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite38ReconstructTheActiveFormattingElementsEv(%"class.blink::HTMLConstructionSite"* %671) #13
  %672 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %673 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack7InScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"* %672, %"class.blink::QualifiedName"* dereferenceable(8) %664) #13
  br i1 %673, label %674, label %677

674:                                              ; preds = %670
  %675 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %665, align 8
  %676 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %675, i64 0, i32 3
  tail call void @_ZN5blink15HTMLTreeBuilder17ProcessFakeEndTagERKN3WTF12AtomicStringE(%"class.blink::HTMLTreeBuilder"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %676) #13
  tail call void @_ZN5blink20HTMLConstructionSite38ReconstructTheActiveFormattingElementsEv(%"class.blink::HTMLConstructionSite"* %671) #13
  br label %677

677:                                              ; preds = %674, %670
  tail call void @_ZN5blink20HTMLConstructionSite23InsertFormattingElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %671, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %1311

678:                                              ; preds = %663
  %679 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kAppletTagE to %"class.blink::QualifiedName"**), align 8
  %680 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %679, i64 0, i32 0, i32 0
  %681 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %680, align 8
  %682 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %681, i64 0, i32 3, i32 0, i32 0, i32 0
  %683 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %682, align 8
  %684 = icmp eq %"class.WTF::StringImpl"* %12, %683
  br i1 %684, label %699, label %685

685:                                              ; preds = %678
  %686 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kEmbedTagE to %"class.blink::QualifiedName"**), align 8
  %687 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %686, i64 0, i32 0, i32 0
  %688 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %687, align 8
  %689 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %688, i64 0, i32 3, i32 0, i32 0, i32 0
  %690 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %689, align 8
  %691 = icmp eq %"class.WTF::StringImpl"* %12, %690
  br i1 %691, label %699, label %692

692:                                              ; preds = %685
  %693 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kObjectTagE to %"class.blink::QualifiedName"**), align 8
  %694 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %693, i64 0, i32 0, i32 0
  %695 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %694, align 8
  %696 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %695, i64 0, i32 3, i32 0, i32 0, i32 0
  %697 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %696, align 8
  %698 = icmp eq %"class.WTF::StringImpl"* %12, %697
  br i1 %698, label %699, label %704

699:                                              ; preds = %692, %685, %678
  %700 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 9
  %701 = load i32, i32* %700, align 8
  %702 = icmp eq i32 %701, 0
  br i1 %702, label %1311, label %703

703:                                              ; preds = %699
  br i1 %684, label %718, label %704

704:                                              ; preds = %692, %703
  %705 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kMarqueeTagE to %"class.blink::QualifiedName"**), align 8
  %706 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %705, i64 0, i32 0, i32 0
  %707 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %706, align 8
  %708 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %707, i64 0, i32 3, i32 0, i32 0, i32 0
  %709 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %708, align 8
  %710 = icmp eq %"class.WTF::StringImpl"* %12, %709
  br i1 %710, label %718, label %711

711:                                              ; preds = %704
  %712 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kObjectTagE to %"class.blink::QualifiedName"**), align 8
  %713 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %712, i64 0, i32 0, i32 0
  %714 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %713, align 8
  %715 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %714, i64 0, i32 3, i32 0, i32 0, i32 0
  %716 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %715, align 8
  %717 = icmp eq %"class.WTF::StringImpl"* %12, %716
  br i1 %717, label %718, label %722

718:                                              ; preds = %711, %704, %703
  %719 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite38ReconstructTheActiveFormattingElementsEv(%"class.blink::HTMLConstructionSite"* %719) #13
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %719, %"class.blink::AtomicHTMLToken"* %1) #13
  %720 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 6
  tail call void @_ZN5blink25HTMLFormattingElementList12AppendMarkerEv(%"class.blink::HTMLFormattingElementList"* %720) #13
  %721 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 0
  store i8 0, i8* %721, align 8
  br label %1311

722:                                              ; preds = %711
  %723 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE to %"class.blink::QualifiedName"**), align 8
  %724 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %723, i64 0, i32 0, i32 0
  %725 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %724, align 8
  %726 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %725, i64 0, i32 3, i32 0, i32 0, i32 0
  %727 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %726, align 8
  %728 = icmp eq %"class.WTF::StringImpl"* %12, %727
  br i1 %728, label %729, label %741

729:                                              ; preds = %722
  %730 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %731 = tail call zeroext i1 @_ZN5blink20HTMLConstructionSite12InQuirksModeEv(%"class.blink::HTMLConstructionSite"* %730) #13
  br i1 %731, label %738, label %732

732:                                              ; preds = %729
  %733 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %734 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack13InButtonScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"* %733, %"class.blink::QualifiedName"* dereferenceable(8) %317) #13
  br i1 %734, label %735, label %738

735:                                              ; preds = %732
  %736 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %318, align 8
  %737 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %736, i64 0, i32 3
  tail call void @_ZN5blink15HTMLTreeBuilder17ProcessFakeEndTagERKN3WTF12AtomicStringE(%"class.blink::HTMLTreeBuilder"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %737) #13
  br label %738

738:                                              ; preds = %735, %732, %729
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %730, %"class.blink::AtomicHTMLToken"* %1) #13
  %739 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 0
  store i8 0, i8* %739, align 8
  %740 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 9, i32* %740, align 8
  br label %1311

741:                                              ; preds = %722
  %742 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kImageTagE to %"class.blink::QualifiedName"**), align 8
  %743 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %742, i64 0, i32 0, i32 0
  %744 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %743, align 8
  %745 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %744, i64 0, i32 3, i32 0, i32 0, i32 0
  %746 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %745, align 8
  %747 = icmp eq %"class.WTF::StringImpl"* %12, %746
  br i1 %747, label %748, label %791

748:                                              ; preds = %741
  %749 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE to %"class.blink::QualifiedName"**), align 8
  %750 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %749, i64 0, i32 0, i32 0
  %751 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %750, align 8
  %752 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %751, i64 0, i32 3, i32 0, i32 0, i32 0
  %753 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %752, align 8
  %754 = icmp eq %"class.WTF::StringImpl"* %753, null
  br i1 %754, label %773, label %755

755:                                              ; preds = %748
  %756 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %753, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %757 = load atomic i32, i32* %756 monotonic, align 4
  %758 = and i32 %757, 2
  %759 = icmp eq i32 %758, 0
  br i1 %759, label %760, label %773

760:                                              ; preds = %755
  %761 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %753, i64 0, i32 0
  %762 = load i32, i32* %761, align 4
  %763 = zext i32 %762 to i33
  %764 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %763, i33 1) #13
  %765 = extractvalue { i33, i1 } %764, 1
  %766 = extractvalue { i33, i1 } %764, 0
  %767 = icmp slt i33 %766, 0
  %768 = or i1 %765, %767
  br i1 %768, label %769, label %770, !prof !2

769:                                              ; preds = %760
  tail call void @llvm.trap() #13
  unreachable

770:                                              ; preds = %760
  %771 = trunc i33 %766 to i32
  store i32 %771, i32* %761, align 4
  %772 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  br label %773

773:                                              ; preds = %770, %755, %748
  %774 = phi %"class.WTF::StringImpl"* [ %772, %770 ], [ %12, %755 ], [ %12, %748 ]
  %775 = ptrtoint %"class.WTF::StringImpl"* %753 to i64
  %776 = bitcast %"class.WTF::AtomicString"* %7 to i64*
  store i64 %775, i64* %776, align 8
  %777 = icmp eq %"class.WTF::StringImpl"* %774, null
  br i1 %777, label %791, label %778

778:                                              ; preds = %773
  %779 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %774, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %780 = load atomic i32, i32* %779 monotonic, align 4
  %781 = and i32 %780, 2
  %782 = icmp eq i32 %781, 0
  %783 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %774, i64 0, i32 0
  %784 = load i32, i32* %783, align 4
  br i1 %782, label %785, label %787

785:                                              ; preds = %778
  %786 = add i32 %784, -1
  store i32 %786, i32* %783, align 4
  br label %787

787:                                              ; preds = %785, %778
  %788 = phi i32 [ %786, %785 ], [ %784, %778 ]
  %789 = icmp eq i32 %788, 0
  br i1 %789, label %790, label %791

790:                                              ; preds = %787
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %774) #13
  br label %791

791:                                              ; preds = %790, %787, %773, %741
  %792 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kAreaTagE to %"class.blink::QualifiedName"**), align 8
  %793 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %792, i64 0, i32 0, i32 0
  %794 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %793, align 8
  %795 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %796 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %794, i64 0, i32 3, i32 0, i32 0, i32 0
  %797 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %796, align 8
  %798 = icmp eq %"class.WTF::StringImpl"* %795, %797
  br i1 %798, label %834, label %799

799:                                              ; preds = %791
  %800 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE to %"class.blink::QualifiedName"**), align 8
  %801 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %800, i64 0, i32 0, i32 0
  %802 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %801, align 8
  %803 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %802, i64 0, i32 3, i32 0, i32 0, i32 0
  %804 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %803, align 8
  %805 = icmp eq %"class.WTF::StringImpl"* %795, %804
  br i1 %805, label %834, label %806

806:                                              ; preds = %799
  %807 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kEmbedTagE to %"class.blink::QualifiedName"**), align 8
  %808 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %807, i64 0, i32 0, i32 0
  %809 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %808, align 8
  %810 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %809, i64 0, i32 3, i32 0, i32 0, i32 0
  %811 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %810, align 8
  %812 = icmp eq %"class.WTF::StringImpl"* %795, %811
  br i1 %812, label %834, label %813

813:                                              ; preds = %806
  %814 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE to %"class.blink::QualifiedName"**), align 8
  %815 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %814, i64 0, i32 0, i32 0
  %816 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %815, align 8
  %817 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %816, i64 0, i32 3, i32 0, i32 0, i32 0
  %818 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %817, align 8
  %819 = icmp eq %"class.WTF::StringImpl"* %795, %818
  br i1 %819, label %834, label %820

820:                                              ; preds = %813
  %821 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kKeygenTagE to %"class.blink::QualifiedName"**), align 8
  %822 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %821, i64 0, i32 0, i32 0
  %823 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %822, align 8
  %824 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %823, i64 0, i32 3, i32 0, i32 0, i32 0
  %825 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %824, align 8
  %826 = icmp eq %"class.WTF::StringImpl"* %795, %825
  br i1 %826, label %834, label %827

827:                                              ; preds = %820
  %828 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kWbrTagE to %"class.blink::QualifiedName"**), align 8
  %829 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %828, i64 0, i32 0, i32 0
  %830 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %829, align 8
  %831 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %830, i64 0, i32 3, i32 0, i32 0, i32 0
  %832 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %831, align 8
  %833 = icmp eq %"class.WTF::StringImpl"* %795, %832
  br i1 %833, label %834, label %837

834:                                              ; preds = %827, %820, %813, %806, %799, %791
  %835 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite38ReconstructTheActiveFormattingElementsEv(%"class.blink::HTMLConstructionSite"* %835) #13
  tail call void @_ZN5blink20HTMLConstructionSite43InsertSelfClosingHTMLElementDestroyingTokenEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %835, %"class.blink::AtomicHTMLToken"* %1) #13
  %836 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 0
  store i8 0, i8* %836, align 8
  br label %1311

837:                                              ; preds = %827
  %838 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE to %"class.blink::QualifiedName"**), align 8
  %839 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %838, i64 0, i32 0, i32 0
  %840 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %839, align 8
  %841 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %840, i64 0, i32 3, i32 0, i32 0, i32 0
  %842 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %841, align 8
  %843 = icmp eq %"class.WTF::StringImpl"* %795, %842
  br i1 %843, label %844, label %906

844:                                              ; preds = %837
  %845 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 6
  %846 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 6, i32 0, i32 0, i32 2
  %847 = load i32, i32* %846, align 4
  %848 = icmp eq i32 %847, 0
  br i1 %848, label %875, label %849

849:                                              ; preds = %844
  %850 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  %851 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %850, i64 0, i32 0, i32 0
  br label %852

852:                                              ; preds = %871, %849
  %853 = phi i32 [ 0, %849 ], [ %872, %871 ]
  %854 = tail call dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %845, i32 %853) #13
  %855 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %854, i64 0, i32 0, i32 0, i32 0
  %856 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %855, align 8
  %857 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %851, align 8
  %858 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %856, %857
  br i1 %858, label %877, label %859

859:                                              ; preds = %852
  %860 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %856, i64 0, i32 3, i32 0, i32 0, i32 0
  %861 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %860, align 8
  %862 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %857, i64 0, i32 3, i32 0, i32 0, i32 0
  %863 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %862, align 8
  %864 = icmp eq %"class.WTF::StringImpl"* %861, %863
  br i1 %864, label %865, label %871

865:                                              ; preds = %859
  %866 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %856, i64 0, i32 4, i32 0, i32 0, i32 0
  %867 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %866, align 8
  %868 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %857, i64 0, i32 4, i32 0, i32 0, i32 0
  %869 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %868, align 8
  %870 = icmp eq %"class.WTF::StringImpl"* %867, %869
  br i1 %870, label %877, label %871

871:                                              ; preds = %865, %859
  %872 = add nuw i32 %853, 1
  %873 = load i32, i32* %846, align 4
  %874 = icmp ult i32 %872, %873
  br i1 %874, label %852, label %875

875:                                              ; preds = %871, %844
  %876 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %876) #13
  br label %901

877:                                              ; preds = %852, %865
  %878 = tail call dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %845, i32 %853) #13
  %879 = icmp eq %"class.blink::Attribute"* %878, null
  %880 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %880) #13
  br i1 %879, label %901, label %881

881:                                              ; preds = %877
  %882 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %878, i64 0, i32 1, i32 0, i32 0, i32 0
  %883 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %882, align 8
  %884 = icmp eq %"class.WTF::StringImpl"* %883, null
  br i1 %884, label %885, label %889

885:                                              ; preds = %881
  %886 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %886, align 8
  %887 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %888 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %887, i64* %888, align 8
  br label %896

889:                                              ; preds = %881
  %890 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %883, %"class.WTF::StringImpl"** %890, align 8
  %891 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %883, i64 0, i32 1
  %892 = load i32, i32* %891, align 4
  %893 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %883, i64 1
  %894 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %895 = bitcast i8** %894 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %893, %"class.WTF::StringImpl"** %895, align 8
  br label %896

896:                                              ; preds = %885, %889
  %897 = phi i32 [ %892, %889 ], [ 0, %885 ]
  %898 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %897, i32* %898, align 8
  %899 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, [7 x i8]* nonnull dereferenceable(7) @.str)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %880) #13
  %900 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  call void @_ZN5blink20HTMLConstructionSite38ReconstructTheActiveFormattingElementsEv(%"class.blink::HTMLConstructionSite"* %900) #13
  call void @_ZN5blink20HTMLConstructionSite43InsertSelfClosingHTMLElementDestroyingTokenEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %900, %"class.blink::AtomicHTMLToken"* %1) #13
  br i1 %899, label %1311, label %904

901:                                              ; preds = %875, %877
  %902 = phi i8* [ %876, %875 ], [ %880, %877 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %902) #13
  %903 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite38ReconstructTheActiveFormattingElementsEv(%"class.blink::HTMLConstructionSite"* %903) #13
  tail call void @_ZN5blink20HTMLConstructionSite43InsertSelfClosingHTMLElementDestroyingTokenEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %903, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %904

904:                                              ; preds = %896, %901
  %905 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 0
  store i8 0, i8* %905, align 8
  br label %1311

906:                                              ; preds = %837
  %907 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kParamTagE to %"class.blink::QualifiedName"**), align 8
  %908 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %907, i64 0, i32 0, i32 0
  %909 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %908, align 8
  %910 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %909, i64 0, i32 3, i32 0, i32 0, i32 0
  %911 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %910, align 8
  %912 = icmp eq %"class.WTF::StringImpl"* %795, %911
  br i1 %912, label %927, label %913

913:                                              ; preds = %906
  %914 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSourceTagE to %"class.blink::QualifiedName"**), align 8
  %915 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %914, i64 0, i32 0, i32 0
  %916 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %915, align 8
  %917 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %916, i64 0, i32 3, i32 0, i32 0, i32 0
  %918 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %917, align 8
  %919 = icmp eq %"class.WTF::StringImpl"* %795, %918
  br i1 %919, label %927, label %920

920:                                              ; preds = %913
  %921 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTrackTagE to %"class.blink::QualifiedName"**), align 8
  %922 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %921, i64 0, i32 0, i32 0
  %923 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %922, align 8
  %924 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %923, i64 0, i32 3, i32 0, i32 0, i32 0
  %925 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %924, align 8
  %926 = icmp eq %"class.WTF::StringImpl"* %795, %925
  br i1 %926, label %927, label %929

927:                                              ; preds = %920, %913, %906
  %928 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite43InsertSelfClosingHTMLElementDestroyingTokenEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %928, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %1311

929:                                              ; preds = %920
  %930 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kHrTagE to %"class.blink::QualifiedName"**), align 8
  %931 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %930, i64 0, i32 0, i32 0
  %932 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %931, align 8
  %933 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %932, i64 0, i32 3, i32 0, i32 0, i32 0
  %934 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %933, align 8
  %935 = icmp eq %"class.WTF::StringImpl"* %795, %934
  br i1 %935, label %936, label %939

936:                                              ; preds = %929
  tail call void @_ZN5blink15HTMLTreeBuilder34ProcessFakePEndTagIfPInButtonScopeEv(%"class.blink::HTMLTreeBuilder"* %0)
  %937 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite43InsertSelfClosingHTMLElementDestroyingTokenEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %937, %"class.blink::AtomicHTMLToken"* %1) #13
  %938 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 0
  store i8 0, i8* %938, align 8
  br label %1311

939:                                              ; preds = %929
  %940 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTextareaTagE to %"class.blink::QualifiedName"**), align 8
  %941 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %940, i64 0, i32 0, i32 0
  %942 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %941, align 8
  %943 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %942, i64 0, i32 3, i32 0, i32 0, i32 0
  %944 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %943, align 8
  %945 = icmp eq %"class.WTF::StringImpl"* %795, %944
  br i1 %945, label %946, label %961

946:                                              ; preds = %939
  %947 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %947, %"class.blink::AtomicHTMLToken"* %1) #13
  %948 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 8
  store i8 1, i8* %948, align 8
  %949 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 11, i32 0, i32 0
  %950 = load %"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocumentParser"** %949, align 8
  %951 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %950, i64 0, i32 7, i32 0, i32 0, i32 0
  %952 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %951, align 8
  %953 = icmp eq %"class.blink::HTMLTokenizer"* %952, null
  br i1 %953, label %956, label %954

954:                                              ; preds = %946
  %955 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %952, i64 0, i32 0
  store i32 2, i32* %955, align 8
  br label %956

956:                                              ; preds = %946, %954
  %957 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  %958 = load i32, i32* %957, align 8
  %959 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 5
  store i32 %958, i32* %959, align 4
  %960 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 0
  store i8 0, i8* %960, align 8
  store i32 8, i32* %957, align 8
  br label %1311

961:                                              ; preds = %939
  %962 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kXmpTagE to %"class.blink::QualifiedName"**), align 8
  %963 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %962, i64 0, i32 0, i32 0
  %964 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %963, align 8
  %965 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %964, i64 0, i32 3, i32 0, i32 0, i32 0
  %966 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %965, align 8
  %967 = icmp eq %"class.WTF::StringImpl"* %795, %966
  br i1 %967, label %968, label %982

968:                                              ; preds = %961
  tail call void @_ZN5blink15HTMLTreeBuilder34ProcessFakePEndTagIfPInButtonScopeEv(%"class.blink::HTMLTreeBuilder"* %0)
  %969 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite38ReconstructTheActiveFormattingElementsEv(%"class.blink::HTMLConstructionSite"* %969) #13
  %970 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 0
  store i8 0, i8* %970, align 8
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %969, %"class.blink::AtomicHTMLToken"* %1) #13
  %971 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 11, i32 0, i32 0
  %972 = load %"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocumentParser"** %971, align 8
  %973 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %972, i64 0, i32 7, i32 0, i32 0, i32 0
  %974 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %973, align 8
  %975 = icmp eq %"class.blink::HTMLTokenizer"* %974, null
  br i1 %975, label %978, label %976

976:                                              ; preds = %968
  %977 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %974, i64 0, i32 0
  store i32 4, i32* %977, align 8
  br label %978

978:                                              ; preds = %968, %976
  %979 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  %980 = load i32, i32* %979, align 8
  %981 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 5
  store i32 %980, i32* %981, align 4
  store i32 8, i32* %979, align 8
  br label %1311

982:                                              ; preds = %961
  %983 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kIFrameTagE to %"class.blink::QualifiedName"**), align 8
  %984 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %983, i64 0, i32 0, i32 0
  %985 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %984, align 8
  %986 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %985, i64 0, i32 3, i32 0, i32 0, i32 0
  %987 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %986, align 8
  %988 = icmp eq %"class.WTF::StringImpl"* %795, %987
  br i1 %988, label %989, label %1003

989:                                              ; preds = %982
  %990 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 0
  store i8 0, i8* %990, align 8
  %991 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %991, %"class.blink::AtomicHTMLToken"* %1) #13
  %992 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 11, i32 0, i32 0
  %993 = load %"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocumentParser"** %992, align 8
  %994 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %993, i64 0, i32 7, i32 0, i32 0, i32 0
  %995 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %994, align 8
  %996 = icmp eq %"class.blink::HTMLTokenizer"* %995, null
  br i1 %996, label %999, label %997

997:                                              ; preds = %989
  %998 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %995, i64 0, i32 0
  store i32 4, i32* %998, align 8
  br label %999

999:                                              ; preds = %989, %997
  %1000 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  %1001 = load i32, i32* %1000, align 8
  %1002 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 5
  store i32 %1001, i32* %1002, align 4
  store i32 8, i32* %1000, align 8
  br label %1311

1003:                                             ; preds = %982
  %1004 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kNoembedTagE to %"class.blink::QualifiedName"**), align 8
  %1005 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1004, i64 0, i32 0, i32 0
  %1006 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1005, align 8
  %1007 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1006, i64 0, i32 3, i32 0, i32 0, i32 0
  %1008 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1007, align 8
  %1009 = icmp eq %"class.WTF::StringImpl"* %795, %1008
  br i1 %1009, label %1010, label %1023

1010:                                             ; preds = %1003
  %1011 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %1011, %"class.blink::AtomicHTMLToken"* %1) #13
  %1012 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 11, i32 0, i32 0
  %1013 = load %"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocumentParser"** %1012, align 8
  %1014 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %1013, i64 0, i32 7, i32 0, i32 0, i32 0
  %1015 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %1014, align 8
  %1016 = icmp eq %"class.blink::HTMLTokenizer"* %1015, null
  br i1 %1016, label %1019, label %1017

1017:                                             ; preds = %1010
  %1018 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %1015, i64 0, i32 0
  store i32 4, i32* %1018, align 8
  br label %1019

1019:                                             ; preds = %1010, %1017
  %1020 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  %1021 = load i32, i32* %1020, align 8
  %1022 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 5
  store i32 %1021, i32* %1022, align 4
  store i32 8, i32* %1020, align 8
  br label %1311

1023:                                             ; preds = %1003
  %1024 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kNoscriptTagE to %"class.blink::QualifiedName"**), align 8
  %1025 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1024, i64 0, i32 0, i32 0
  %1026 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1025, align 8
  %1027 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1026, i64 0, i32 3, i32 0, i32 0, i32 0
  %1028 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1027, align 8
  %1029 = icmp eq %"class.WTF::StringImpl"* %795, %1028
  br i1 %1029, label %1030, label %1047

1030:                                             ; preds = %1023
  %1031 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 14, i32 0
  %1032 = load i8, i8* %1031, align 8, !range !4
  %1033 = icmp eq i8 %1032, 0
  br i1 %1033, label %1047, label %1034

1034:                                             ; preds = %1030
  %1035 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %1035, %"class.blink::AtomicHTMLToken"* %1) #13
  %1036 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 11, i32 0, i32 0
  %1037 = load %"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocumentParser"** %1036, align 8
  %1038 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %1037, i64 0, i32 7, i32 0, i32 0, i32 0
  %1039 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %1038, align 8
  %1040 = icmp eq %"class.blink::HTMLTokenizer"* %1039, null
  br i1 %1040, label %1043, label %1041

1041:                                             ; preds = %1034
  %1042 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %1039, i64 0, i32 0
  store i32 4, i32* %1042, align 8
  br label %1043

1043:                                             ; preds = %1034, %1041
  %1044 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  %1045 = load i32, i32* %1044, align 8
  %1046 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 5
  store i32 %1045, i32* %1046, align 4
  store i32 8, i32* %1044, align 8
  br label %1311

1047:                                             ; preds = %1030, %1023
  %1048 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE to %"class.blink::QualifiedName"**), align 8
  %1049 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1048, i64 0, i32 0, i32 0
  %1050 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1049, align 8
  %1051 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1050, i64 0, i32 3, i32 0, i32 0, i32 0
  %1052 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1051, align 8
  %1053 = icmp eq %"class.WTF::StringImpl"* %795, %1052
  br i1 %1053, label %1054, label %1061

1054:                                             ; preds = %1047
  %1055 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite38ReconstructTheActiveFormattingElementsEv(%"class.blink::HTMLConstructionSite"* %1055) #13
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %1055, %"class.blink::AtomicHTMLToken"* %1) #13
  %1056 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 0
  store i8 0, i8* %1056, align 8
  %1057 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  %1058 = load i32, i32* %1057, align 8
  switch i32 %1058, label %1060 [
    i32 9, label %1059
    i32 11, label %1059
    i32 12, label %1059
    i32 13, label %1059
    i32 14, label %1059
    i32 15, label %1059
  ]

1059:                                             ; preds = %1054, %1054, %1054, %1054, %1054, %1054
  store i32 17, i32* %1057, align 8
  br label %1311

1060:                                             ; preds = %1054
  store i32 16, i32* %1057, align 8
  br label %1311

1061:                                             ; preds = %1047
  %1062 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kOptgroupTagE to %"class.blink::QualifiedName"**), align 8
  %1063 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1062, i64 0, i32 0, i32 0
  %1064 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1063, align 8
  %1065 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1064, i64 0, i32 3, i32 0, i32 0, i32 0
  %1066 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1065, align 8
  %1067 = icmp eq %"class.WTF::StringImpl"* %795, %1066
  %1068 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE to %"class.blink::QualifiedName"**), align 8
  %1069 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1068, i64 0, i32 0, i32 0
  %1070 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1069, align 8
  %1071 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1070, i64 0, i32 3, i32 0, i32 0, i32 0
  %1072 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1071, align 8
  br i1 %1067, label %1075, label %1073

1073:                                             ; preds = %1061
  %1074 = icmp eq %"class.WTF::StringImpl"* %795, %1072
  br i1 %1074, label %1075, label %1162

1075:                                             ; preds = %1061, %1073
  %1076 = phi %"class.WTF::StringImpl"* [ %795, %1073 ], [ %1072, %1061 ]
  %1077 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %1078 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0
  %1079 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %1078, align 8
  %1080 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %1079, i64 0, i32 0, i32 0, i32 0
  %1081 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %1080, align 8
  %1082 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1068, i64 0, i32 0, i32 0
  %1083 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %1081, i64 0, i32 1, i32 0, i32 0, i32 0
  %1084 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1083, align 8
  %1085 = icmp eq %"class.WTF::StringImpl"* %1084, %1076
  br i1 %1085, label %1086, label %1161

1086:                                             ; preds = %1075
  %1087 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %1081, i64 0, i32 3, i32 0, i32 0, i32 0
  %1088 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1087, align 8
  %1089 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1070, i64 0, i32 4, i32 0, i32 0, i32 0
  %1090 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1089, align 8
  %1091 = icmp eq %"class.WTF::StringImpl"* %1088, %1090
  br i1 %1091, label %1092, label %1161

1092:                                             ; preds = %1086
  %1093 = bitcast %"class.blink::AtomicHTMLToken"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1093) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1093, i8 -86, i64 56, i1 false)
  %1094 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1082, align 8
  %1095 = bitcast %"class.WTF::Vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1095) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1095, i8 0, i64 16, i1 false) #13
  %1096 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %5, i64 0, i32 0
  store i32 3, i32* %1096, align 8
  %1097 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1094, i64 0, i32 3, i32 0, i32 0, i32 0
  %1098 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1097, align 8
  %1099 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1098, %"class.WTF::StringImpl"** %1099, align 8
  %1100 = icmp eq %"class.WTF::StringImpl"* %1098, null
  br i1 %1100, label %1118, label %1101

1101:                                             ; preds = %1092
  %1102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1098, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1103 = load atomic i32, i32* %1102 monotonic, align 4
  %1104 = and i32 %1103, 2
  %1105 = icmp eq i32 %1104, 0
  br i1 %1105, label %1106, label %1118

1106:                                             ; preds = %1101
  %1107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1098, i64 0, i32 0
  %1108 = load i32, i32* %1107, align 4
  %1109 = zext i32 %1108 to i33
  %1110 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1109, i33 1) #13
  %1111 = extractvalue { i33, i1 } %1110, 1
  %1112 = extractvalue { i33, i1 } %1110, 0
  %1113 = icmp slt i33 %1112, 0
  %1114 = or i1 %1111, %1113
  br i1 %1114, label %1115, label %1116, !prof !2

1115:                                             ; preds = %1106
  tail call void @llvm.trap() #13
  unreachable

1116:                                             ; preds = %1106
  %1117 = trunc i33 %1112 to i32
  store i32 %1117, i32* %1107, align 4
  br label %1118

1118:                                             ; preds = %1092, %1101, %1116
  %1119 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %5, i64 0, i32 2, i32 0, i32 0
  %1120 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %5, i64 0, i32 6
  %1121 = bitcast %"class.WTF::StringImpl"** %1119 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1121, i8 0, i64 18, i1 false) #13
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %1120, %"class.WTF::Vector"* nonnull dereferenceable(16) %6) #13
  %1122 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %1123 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %1122, align 8
  %1124 = icmp eq %"class.blink::Attribute"* %1123, null
  br i1 %1124, label %1160, label %1125, !prof !3

1125:                                             ; preds = %1118
  %1126 = bitcast %"class.blink::Attribute"* %1123 to i8*
  %1127 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  %1128 = load i32, i32* %1127, align 4
  %1129 = icmp eq i32 %1128, 0
  br i1 %1129, label %1158, label %1130, !prof !2

1130:                                             ; preds = %1125
  %1131 = zext i32 %1128 to i64
  %1132 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1123, i64 %1131
  br label %1133

1133:                                             ; preds = %1151, %1130
  %1134 = phi %"class.blink::Attribute"* [ %1153, %1151 ], [ %1123, %1130 ]
  %1135 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1134, i64 0, i32 1, i32 0, i32 0, i32 0
  %1136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1135, align 8
  %1137 = icmp eq %"class.WTF::StringImpl"* %1136, null
  br i1 %1137, label %1151, label %1138

1138:                                             ; preds = %1133
  %1139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1140 = load atomic i32, i32* %1139 monotonic, align 4
  %1141 = and i32 %1140, 2
  %1142 = icmp eq i32 %1141, 0
  %1143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1136, i64 0, i32 0
  %1144 = load i32, i32* %1143, align 4
  br i1 %1142, label %1145, label %1147

1145:                                             ; preds = %1138
  %1146 = add i32 %1144, -1
  store i32 %1146, i32* %1143, align 4
  br label %1147

1147:                                             ; preds = %1145, %1138
  %1148 = phi i32 [ %1146, %1145 ], [ %1144, %1138 ]
  %1149 = icmp eq i32 %1148, 0
  br i1 %1149, label %1150, label %1151

1150:                                             ; preds = %1147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1136) #13
  br label %1151

1151:                                             ; preds = %1150, %1147, %1133
  %1152 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1134, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %1152) #13
  %1153 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1134, i64 1
  %1154 = icmp eq %"class.blink::Attribute"* %1153, %1132
  br i1 %1154, label %1155, label %1133

1155:                                             ; preds = %1151
  store i32 0, i32* %1127, align 4
  %1156 = bitcast %"class.WTF::Vector"* %6 to i8**
  %1157 = load i8*, i8** %1156, align 8
  br label %1158

1158:                                             ; preds = %1155, %1125
  %1159 = phi i8* [ %1157, %1155 ], [ %1126, %1125 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1159) #13
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %1122, align 8
  br label %1160

1160:                                             ; preds = %1118, %1158
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1095) #13
  call void @_ZN5blink15HTMLTreeBuilder13ProcessEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* nonnull %5)
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1093) #13
  br label %1161

1161:                                             ; preds = %1075, %1160, %1086
  call void @_ZN5blink20HTMLConstructionSite38ReconstructTheActiveFormattingElementsEv(%"class.blink::HTMLConstructionSite"* %1077) #13
  call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %1077, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %1311

1162:                                             ; preds = %1073
  %1163 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kRbTagE to %"class.blink::QualifiedName"**), align 8
  %1164 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1163, i64 0, i32 0, i32 0
  %1165 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1164, align 8
  %1166 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1165, i64 0, i32 3, i32 0, i32 0, i32 0
  %1167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1166, align 8
  %1168 = icmp eq %"class.WTF::StringImpl"* %795, %1167
  br i1 %1168, label %1176, label %1169

1169:                                             ; preds = %1162
  %1170 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kRTCTagE to %"class.blink::QualifiedName"**), align 8
  %1171 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1170, i64 0, i32 0, i32 0
  %1172 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1171, align 8
  %1173 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1172, i64 0, i32 3, i32 0, i32 0, i32 0
  %1174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1173, align 8
  %1175 = icmp eq %"class.WTF::StringImpl"* %795, %1174
  br i1 %1175, label %1176, label %1186

1176:                                             ; preds = %1169, %1162
  %1177 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %1178 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %1179 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kRubyTagE to %"class.blink::QualifiedName"**), align 8
  %1180 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1179, i64 0, i32 0, i32 0
  %1181 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1180, align 8
  %1182 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1181, i64 0, i32 3
  %1183 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack7InScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %1178, %"class.WTF::AtomicString"* dereferenceable(8) %1182) #13
  br i1 %1183, label %1184, label %1185

1184:                                             ; preds = %1176
  tail call void @_ZN5blink20HTMLConstructionSite22GenerateImpliedEndTagsEv(%"class.blink::HTMLConstructionSite"* %1177) #13
  br label %1185

1185:                                             ; preds = %1184, %1176
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %1177, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %1311

1186:                                             ; preds = %1169
  %1187 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kRtTagE to %"class.blink::QualifiedName"**), align 8
  %1188 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1187, i64 0, i32 0, i32 0
  %1189 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1188, align 8
  %1190 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1189, i64 0, i32 3, i32 0, i32 0, i32 0
  %1191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1190, align 8
  %1192 = icmp eq %"class.WTF::StringImpl"* %795, %1191
  br i1 %1192, label %1200, label %1193

1193:                                             ; preds = %1186
  %1194 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kRpTagE to %"class.blink::QualifiedName"**), align 8
  %1195 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1194, i64 0, i32 0, i32 0
  %1196 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1195, align 8
  %1197 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1196, i64 0, i32 3, i32 0, i32 0, i32 0
  %1198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1197, align 8
  %1199 = icmp eq %"class.WTF::StringImpl"* %795, %1198
  br i1 %1199, label %1200, label %1212

1200:                                             ; preds = %1193, %1186
  %1201 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %1202 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %1203 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kRubyTagE to %"class.blink::QualifiedName"**), align 8
  %1204 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1203, i64 0, i32 0, i32 0
  %1205 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1204, align 8
  %1206 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1205, i64 0, i32 3
  %1207 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack7InScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %1202, %"class.WTF::AtomicString"* dereferenceable(8) %1206) #13
  br i1 %1207, label %1208, label %1211

1208:                                             ; preds = %1200
  %1209 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1171, align 8
  %1210 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1209, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite35GenerateImpliedEndTagsWithExclusionERKN3WTF12AtomicStringE(%"class.blink::HTMLConstructionSite"* %1201, %"class.WTF::AtomicString"* dereferenceable(8) %1210) #13
  br label %1211

1211:                                             ; preds = %1208, %1200
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %1201, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %1311

1212:                                             ; preds = %1193
  %1213 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names8kMathTagE to %"class.blink::QualifiedName"**), align 8
  %1214 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1213, i64 0, i32 0, i32 0
  %1215 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1214, align 8
  %1216 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1215, i64 0, i32 3, i32 0, i32 0, i32 0
  %1217 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1216, align 8
  %1218 = icmp eq %"class.WTF::StringImpl"* %795, %1217
  br i1 %1218, label %1219, label %1222

1219:                                             ; preds = %1212
  %1220 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite38ReconstructTheActiveFormattingElementsEv(%"class.blink::HTMLConstructionSite"* %1220) #13
  tail call fastcc void @_ZN5blinkL22AdjustMathMLAttributesEPNS_15AtomicHTMLTokenE(%"class.blink::AtomicHTMLToken"* %1)
  tail call fastcc void @_ZN5blinkL23AdjustForeignAttributesEPNS_15AtomicHTMLTokenE(%"class.blink::AtomicHTMLToken"* %1)
  %1221 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink12mathml_names13kNamespaceURIE, align 8
  tail call void @_ZN5blink20HTMLConstructionSite20InsertForeignElementEPNS_15AtomicHTMLTokenERKN3WTF12AtomicStringE(%"class.blink::HTMLConstructionSite"* %1220, %"class.blink::AtomicHTMLToken"* %1, %"class.WTF::AtomicString"* dereferenceable(8) %1221) #13
  br label %1311

1222:                                             ; preds = %1212
  %1223 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kSVGTagE to %"class.blink::QualifiedName"**), align 8
  %1224 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1223, i64 0, i32 0, i32 0
  %1225 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1224, align 8
  %1226 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1225, i64 0, i32 3, i32 0, i32 0, i32 0
  %1227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1226, align 8
  %1228 = icmp eq %"class.WTF::StringImpl"* %795, %1227
  br i1 %1228, label %1229, label %1232

1229:                                             ; preds = %1222
  %1230 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite38ReconstructTheActiveFormattingElementsEv(%"class.blink::HTMLConstructionSite"* %1230) #13
  tail call fastcc void @_ZN5blinkL19AdjustSVGAttributesEPNS_15AtomicHTMLTokenE(%"class.blink::AtomicHTMLToken"* %1)
  tail call fastcc void @_ZN5blinkL23AdjustForeignAttributesEPNS_15AtomicHTMLTokenE(%"class.blink::AtomicHTMLToken"* %1)
  %1231 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink9svg_names13kNamespaceURIE, align 8
  tail call void @_ZN5blink20HTMLConstructionSite20InsertForeignElementEPNS_15AtomicHTMLTokenERKN3WTF12AtomicStringE(%"class.blink::HTMLConstructionSite"* %1230, %"class.blink::AtomicHTMLToken"* %1, %"class.WTF::AtomicString"* dereferenceable(8) %1231) #13
  br label %1311

1232:                                             ; preds = %1222
  %1233 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kCaptionTagE to %"class.blink::QualifiedName"**), align 8
  %1234 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1233, i64 0, i32 0, i32 0
  %1235 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1234, align 8
  %1236 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1235, i64 0, i32 3, i32 0, i32 0, i32 0
  %1237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1236, align 8
  %1238 = icmp eq %"class.WTF::StringImpl"* %795, %1237
  br i1 %1238, label %1311, label %1239

1239:                                             ; preds = %1232
  %1240 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kColTagE to %"class.blink::QualifiedName"**), align 8
  %1241 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1240, i64 0, i32 0, i32 0
  %1242 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1241, align 8
  %1243 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1242, i64 0, i32 3, i32 0, i32 0, i32 0
  %1244 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1243, align 8
  %1245 = icmp eq %"class.WTF::StringImpl"* %795, %1244
  br i1 %1245, label %1311, label %1246

1246:                                             ; preds = %1239
  %1247 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kColgroupTagE to %"class.blink::QualifiedName"**), align 8
  %1248 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1247, i64 0, i32 0, i32 0
  %1249 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1248, align 8
  %1250 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1249, i64 0, i32 3, i32 0, i32 0, i32 0
  %1251 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1250, align 8
  %1252 = icmp eq %"class.WTF::StringImpl"* %795, %1251
  br i1 %1252, label %1311, label %1253

1253:                                             ; preds = %1246
  %1254 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kFrameTagE to %"class.blink::QualifiedName"**), align 8
  %1255 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1254, i64 0, i32 0, i32 0
  %1256 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1255, align 8
  %1257 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1256, i64 0, i32 3, i32 0, i32 0, i32 0
  %1258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1257, align 8
  %1259 = icmp eq %"class.WTF::StringImpl"* %795, %1258
  br i1 %1259, label %1311, label %1260

1260:                                             ; preds = %1253
  %1261 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHeadTagE to %"class.blink::QualifiedName"**), align 8
  %1262 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1261, i64 0, i32 0, i32 0
  %1263 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1262, align 8
  %1264 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1263, i64 0, i32 3, i32 0, i32 0, i32 0
  %1265 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1264, align 8
  %1266 = icmp eq %"class.WTF::StringImpl"* %795, %1265
  br i1 %1266, label %1311, label %1267

1267:                                             ; preds = %1260
  %1268 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE to %"class.blink::QualifiedName"**), align 8
  %1269 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1268, i64 0, i32 0, i32 0
  %1270 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1269, align 8
  %1271 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1270, i64 0, i32 3, i32 0, i32 0, i32 0
  %1272 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1271, align 8
  %1273 = icmp eq %"class.WTF::StringImpl"* %795, %1272
  br i1 %1273, label %1311, label %1274

1274:                                             ; preds = %1267
  %1275 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE to %"class.blink::QualifiedName"**), align 8
  %1276 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1275, i64 0, i32 0, i32 0
  %1277 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1276, align 8
  %1278 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1277, i64 0, i32 3, i32 0, i32 0, i32 0
  %1279 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1278, align 8
  %1280 = icmp eq %"class.WTF::StringImpl"* %795, %1279
  br i1 %1280, label %1311, label %1281

1281:                                             ; preds = %1274
  %1282 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE to %"class.blink::QualifiedName"**), align 8
  %1283 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1282, i64 0, i32 0, i32 0
  %1284 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1283, align 8
  %1285 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1284, i64 0, i32 3, i32 0, i32 0, i32 0
  %1286 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1285, align 8
  %1287 = icmp eq %"class.WTF::StringImpl"* %795, %1286
  br i1 %1287, label %1311, label %1288

1288:                                             ; preds = %1281
  %1289 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE to %"class.blink::QualifiedName"**), align 8
  %1290 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1289, i64 0, i32 0, i32 0
  %1291 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1290, align 8
  %1292 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1291, i64 0, i32 3, i32 0, i32 0, i32 0
  %1293 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1292, align 8
  %1294 = icmp eq %"class.WTF::StringImpl"* %795, %1293
  br i1 %1294, label %1311, label %1295

1295:                                             ; preds = %1288
  %1296 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE to %"class.blink::QualifiedName"**), align 8
  %1297 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1296, i64 0, i32 0, i32 0
  %1298 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1297, align 8
  %1299 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1298, i64 0, i32 3, i32 0, i32 0, i32 0
  %1300 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1299, align 8
  %1301 = icmp eq %"class.WTF::StringImpl"* %795, %1300
  br i1 %1301, label %1311, label %1302

1302:                                             ; preds = %1295
  %1303 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE to %"class.blink::QualifiedName"**), align 8
  %1304 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1303, i64 0, i32 0, i32 0
  %1305 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1304, align 8
  %1306 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1305, i64 0, i32 3, i32 0, i32 0, i32 0
  %1307 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1306, align 8
  %1308 = icmp eq %"class.WTF::StringImpl"* %795, %1307
  br i1 %1308, label %1311, label %1309

1309:                                             ; preds = %1302
  %1310 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite38ReconstructTheActiveFormattingElementsEv(%"class.blink::HTMLConstructionSite"* %1310) #13
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %1310, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %1311

1311:                                             ; preds = %699, %896, %1288, %1267, %1274, %1232, %1239, %1246, %1253, %1260, %1281, %1295, %1302, %19, %16, %904, %130, %614, %1059, %1060, %621, %124, %128, %107, %111, %113, %1309, %1229, %1219, %1211, %1185, %1161, %1043, %1019, %999, %978, %956, %936, %927, %834, %738, %718, %677, %661, %658, %637, %634, %606, %517, %447, %431, %412, %397, %344, %180, %115, %98
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder28ProcessHtmlStartTagForInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %4 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack22HasTemplateInHTMLScopeEv(%"class.blink::HTMLElementStack"* %3) #13
  br i1 %4, label %7, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite28InsertHTMLHtmlStartTagInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %6, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %7

7:                                                ; preds = %2, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15HTMLTreeBuilder24ProcessStartTagForInHeadEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %5, i64 0, i32 3, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %7, %9
  br i1 %10, label %11, label %16

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %13 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack22HasTemplateInHTMLScopeEv(%"class.blink::HTMLElementStack"* %12) #13
  br i1 %13, label %176, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite28InsertHTMLHtmlStartTagInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %15, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %176

16:                                               ; preds = %2
  %17 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBaseTagE to %"class.blink::QualifiedName"**), align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %7, %21
  br i1 %22, label %58, label %23

23:                                               ; preds = %16
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kBasefontTagE to %"class.blink::QualifiedName"**), align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %7, %28
  br i1 %29, label %58, label %30

30:                                               ; preds = %23
  %31 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kBgsoundTagE to %"class.blink::QualifiedName"**), align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %7, %35
  br i1 %36, label %58, label %37

37:                                               ; preds = %30
  %38 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kCommandTagE to %"class.blink::QualifiedName"**), align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %40, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %7, %42
  br i1 %43, label %58, label %44

44:                                               ; preds = %37
  %45 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kLinkTagE to %"class.blink::QualifiedName"**), align 8
  %46 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %47, i64 0, i32 3, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %7, %49
  br i1 %50, label %58, label %51

51:                                               ; preds = %44
  %52 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMetaTagE to %"class.blink::QualifiedName"**), align 8
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %52, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %7, %56
  br i1 %57, label %58, label %60

58:                                               ; preds = %51, %44, %37, %30, %23, %16
  %59 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite43InsertSelfClosingHTMLElementDestroyingTokenEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %59, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %176

60:                                               ; preds = %51
  %61 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTitleTagE to %"class.blink::QualifiedName"**), align 8
  %62 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %61, i64 0, i32 0, i32 0
  %63 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %63, i64 0, i32 3, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %7, %65
  br i1 %66, label %67, label %80

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %68, %"class.blink::AtomicHTMLToken"* %1) #13
  %69 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 11, i32 0, i32 0
  %70 = load %"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocumentParser"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %70, i64 0, i32 7, i32 0, i32 0, i32 0
  %72 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %71, align 8
  %73 = icmp eq %"class.blink::HTMLTokenizer"* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %72, i64 0, i32 0
  store i32 2, i32* %75, align 8
  br label %76

76:                                               ; preds = %67, %74
  %77 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  %78 = load i32, i32* %77, align 8
  %79 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 5
  store i32 %78, i32* %79, align 4
  store i32 8, i32* %77, align 8
  br label %176

80:                                               ; preds = %60
  %81 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kNoscriptTagE to %"class.blink::QualifiedName"**), align 8
  %82 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %81, i64 0, i32 0, i32 0
  %83 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %83, i64 0, i32 3, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %7, %85
  br i1 %86, label %87, label %106

87:                                               ; preds = %80
  %88 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 14, i32 0
  %89 = load i8, i8* %88, align 8, !range !4
  %90 = icmp eq i8 %89, 0
  %91 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %91, %"class.blink::AtomicHTMLToken"* %1) #13
  br i1 %90, label %104, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 11, i32 0, i32 0
  %94 = load %"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocumentParser"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %94, i64 0, i32 7, i32 0, i32 0, i32 0
  %96 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %95, align 8
  %97 = icmp eq %"class.blink::HTMLTokenizer"* %96, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %96, i64 0, i32 0
  store i32 4, i32* %99, align 8
  br label %100

100:                                              ; preds = %92, %98
  %101 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  %102 = load i32, i32* %101, align 8
  %103 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 5
  store i32 %102, i32* %103, align 4
  store i32 8, i32* %101, align 8
  br label %176

104:                                              ; preds = %87
  %105 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 4, i32* %105, align 8
  br label %176

106:                                              ; preds = %80
  %107 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kNoframesTagE to %"class.blink::QualifiedName"**), align 8
  %108 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %107, i64 0, i32 0, i32 0
  %109 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %109, i64 0, i32 3, i32 0, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %7, %111
  br i1 %112, label %120, label %113

113:                                              ; preds = %106
  %114 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kStyleTagE to %"class.blink::QualifiedName"**), align 8
  %115 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %114, i64 0, i32 0, i32 0
  %116 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %116, i64 0, i32 3, i32 0, i32 0, i32 0
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %7, %118
  br i1 %119, label %120, label %133

120:                                              ; preds = %113, %106
  %121 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %121, %"class.blink::AtomicHTMLToken"* %1) #13
  %122 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 11, i32 0, i32 0
  %123 = load %"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocumentParser"** %122, align 8
  %124 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %123, i64 0, i32 7, i32 0, i32 0, i32 0
  %125 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %124, align 8
  %126 = icmp eq %"class.blink::HTMLTokenizer"* %125, null
  br i1 %126, label %129, label %127

127:                                              ; preds = %120
  %128 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %125, i64 0, i32 0
  store i32 4, i32* %128, align 8
  br label %129

129:                                              ; preds = %120, %127
  %130 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  %131 = load i32, i32* %130, align 8
  %132 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 5
  store i32 %131, i32* %132, align 4
  store i32 8, i32* %130, align 8
  br label %176

133:                                              ; preds = %113
  %134 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %135 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %134, i64 0, i32 0, i32 0
  %136 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %136, i64 0, i32 3, i32 0, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %7, %138
  br i1 %139, label %140, label %161

140:                                              ; preds = %133
  %141 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite19InsertScriptElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %141, %"class.blink::AtomicHTMLToken"* %1) #13
  %142 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 11, i32 0, i32 0
  %143 = load %"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocumentParser"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %143, i64 0, i32 7, i32 0, i32 0, i32 0
  %145 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %144, align 8
  %146 = icmp eq %"class.blink::HTMLTokenizer"* %145, null
  br i1 %146, label %150, label %147

147:                                              ; preds = %140
  %148 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %145, i64 0, i32 0
  store i32 5, i32* %148, align 8
  %149 = load %"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocumentParser"** %142, align 8
  br label %150

150:                                              ; preds = %140, %147
  %151 = phi %"class.blink::HTMLDocumentParser"* [ %143, %140 ], [ %149, %147 ]
  %152 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  %153 = load i32, i32* %152, align 8
  %154 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 5
  store i32 %153, i32* %154, align 4
  %155 = tail call i64 @_ZNK5blink18HTMLDocumentParser15GetTextPositionEv(%"class.blink::HTMLDocumentParser"* %151) #13
  %156 = trunc i64 %155 to i32
  %157 = lshr i64 %155, 32
  %158 = trunc i64 %157 to i32
  %159 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 13, i32 0, i32 0
  store i32 %156, i32* %159, align 8
  %160 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 13, i32 1, i32 0
  store i32 %158, i32* %160, align 4
  store i32 8, i32* %152, align 8
  br label %176

161:                                              ; preds = %133
  %162 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %163 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %162, i64 0, i32 0, i32 0
  %164 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %163, align 8
  %165 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %164, i64 0, i32 3, i32 0, i32 0, i32 0
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %7, %166
  br i1 %167, label %168, label %169

168:                                              ; preds = %161
  tail call void @_ZN5blink15HTMLTreeBuilder23ProcessTemplateStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %176

169:                                              ; preds = %161
  %170 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHeadTagE to %"class.blink::QualifiedName"**), align 8
  %171 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %170, i64 0, i32 0, i32 0
  %172 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %171, align 8
  %173 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %172, i64 0, i32 3, i32 0, i32 0, i32 0
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %175 = icmp eq %"class.WTF::StringImpl"* %7, %174
  ret i1 %175

176:                                              ; preds = %14, %11, %168, %150, %129, %104, %100, %76, %58
  ret i1 true
}

declare zeroext i1 @_ZNK5blink16HTMLElementStack30SecondElementIsHTMLBodyElementEv(%"class.blink::HTMLElementStack"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16HTMLElementStack17HasOnlyOneElementEv(%"class.blink::HTMLElementStack"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16HTMLElementStack22HasTemplateInHTMLScopeEv(%"class.blink::HTMLElementStack"*) local_unnamed_addr #1

declare void @_ZN5blink20HTMLConstructionSite28InsertHTMLBodyStartTagInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #1

declare %"class.blink::Element"* @_ZNK5blink16HTMLElementStack11BodyElementEv(%"class.blink::HTMLElementStack"*) local_unnamed_addr #1

declare void @_ZN5blink4Node6removeERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN5blink16HTMLElementStack8PopUntilEPNS_7ElementE(%"class.blink::HTMLElementStack"*, %"class.blink::Element"*) local_unnamed_addr #1

declare void @_ZN5blink16HTMLElementStack18PopHTMLBodyElementEv(%"class.blink::HTMLElementStack"*) local_unnamed_addr #1

declare void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13HTMLStackItem23IsNumberedHeaderElementEv(%"class.blink::HTMLStackItem"*) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH1TagE to %"class.blink::QualifiedName"**), align 8
  %3 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %4, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %6, %8
  br i1 %9, label %10, label %16

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %12, %14
  br i1 %15, label %81, label %16

16:                                               ; preds = %1, %10
  %17 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH2TagE to %"class.blink::QualifiedName"**), align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %6, %21
  br i1 %22, label %23, label %29

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 4, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %25, %27
  br i1 %28, label %81, label %29

29:                                               ; preds = %16, %23
  %30 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH3TagE to %"class.blink::QualifiedName"**), align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %6, %34
  br i1 %35, label %36, label %42

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 4, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %38, %40
  br i1 %41, label %81, label %42

42:                                               ; preds = %29, %36
  %43 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH4TagE to %"class.blink::QualifiedName"**), align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 3, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %6, %47
  br i1 %48, label %49, label %55

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 4, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %51, %53
  br i1 %54, label %81, label %55

55:                                               ; preds = %42, %49
  %56 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH5TagE to %"class.blink::QualifiedName"**), align 8
  %57 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %56, i64 0, i32 0, i32 0
  %58 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 3, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %6, %60
  br i1 %61, label %62, label %68

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 4, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %64, %66
  br i1 %67, label %81, label %68

68:                                               ; preds = %55, %62
  %69 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH6TagE to %"class.blink::QualifiedName"**), align 8
  %70 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %69, i64 0, i32 0, i32 0
  %71 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %71, i64 0, i32 3, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %6, %73
  br i1 %74, label %75, label %81

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %71, i64 0, i32 4, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %77, %79
  br label %81

81:                                               ; preds = %75, %68, %62, %49, %36, %23, %10
  %82 = phi i1 [ true, %62 ], [ true, %49 ], [ true, %36 ], [ true, %23 ], [ true, %10 ], [ false, %68 ], [ %80, %75 ]
  ret i1 %82
}

declare void @_ZN5blink16HTMLElementStack3PopEv(%"class.blink::HTMLElementStack"*) local_unnamed_addr #1

declare void @_ZN5blink20HTMLConstructionSite21InsertHTMLFormElementEPNS_15AtomicHTMLTokenEb(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*, i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16HTMLElementStack7InScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink20HTMLConstructionSite38ReconstructTheActiveFormattingElementsEv(%"class.blink::HTMLConstructionSite"*) local_unnamed_addr #1

declare %"class.blink::Element"* @_ZN5blink25HTMLFormattingElementList29ClosestElementInScopeWithNameERKN3WTF12AtomicStringE(%"class.blink::HTMLFormattingElementList"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink25HTMLFormattingElementList6RemoveEPNS_7ElementE(%"class.blink::HTMLFormattingElementList"*, %"class.blink::Element"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16HTMLElementStack8ContainsEPNS_7ElementE(%"class.blink::HTMLElementStack"*, %"class.blink::Element"*) local_unnamed_addr #1

declare void @_ZN5blink16HTMLElementStack6RemoveEPNS_7ElementE(%"class.blink::HTMLElementStack"*, %"class.blink::Element"*) local_unnamed_addr #1

declare void @_ZN5blink20HTMLConstructionSite23InsertFormattingElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal fastcc zeroext i1 @_ZN5blinkL31IsNonAnchorNonNobrFormattingTagERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) unnamed_addr #7 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kBTagE to %"class.blink::QualifiedName"**), align 8
  %3 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %4, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %6, %8
  br i1 %9, label %87, label %10

10:                                               ; preds = %1
  %11 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kBigTagE to %"class.blink::QualifiedName"**), align 8
  %12 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %13, i64 0, i32 3, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %6, %15
  br i1 %16, label %87, label %17

17:                                               ; preds = %10
  %18 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kCodeTagE to %"class.blink::QualifiedName"**), align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %6, %22
  br i1 %23, label %87, label %24

24:                                               ; preds = %17
  %25 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kEmTagE to %"class.blink::QualifiedName"**), align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %6, %29
  br i1 %30, label %87, label %31

31:                                               ; preds = %24
  %32 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kFontTagE to %"class.blink::QualifiedName"**), align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %6, %36
  br i1 %37, label %87, label %38

38:                                               ; preds = %31
  %39 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kITagE to %"class.blink::QualifiedName"**), align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %6, %43
  br i1 %44, label %87, label %45

45:                                               ; preds = %38
  %46 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kSTagE to %"class.blink::QualifiedName"**), align 8
  %47 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %48, i64 0, i32 3, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %6, %50
  br i1 %51, label %87, label %52

52:                                               ; preds = %45
  %53 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kSmallTagE to %"class.blink::QualifiedName"**), align 8
  %54 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %55, i64 0, i32 3, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %6, %57
  br i1 %58, label %87, label %59

59:                                               ; preds = %52
  %60 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kStrikeTagE to %"class.blink::QualifiedName"**), align 8
  %61 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %6, %64
  br i1 %65, label %87, label %66

66:                                               ; preds = %59
  %67 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kStrongTagE to %"class.blink::QualifiedName"**), align 8
  %68 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %67, i64 0, i32 0, i32 0
  %69 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %69, i64 0, i32 3, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %6, %71
  br i1 %72, label %87, label %73

73:                                               ; preds = %66
  %74 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTtTagE to %"class.blink::QualifiedName"**), align 8
  %75 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %74, i64 0, i32 0, i32 0
  %76 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %76, i64 0, i32 3, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %6, %78
  br i1 %79, label %87, label %80

80:                                               ; preds = %73
  %81 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kUTagE to %"class.blink::QualifiedName"**), align 8
  %82 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %81, i64 0, i32 0, i32 0
  %83 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %83, i64 0, i32 3, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %6, %85
  br label %87

87:                                               ; preds = %80, %73, %66, %59, %52, %45, %38, %31, %24, %17, %10, %1
  %88 = phi i1 [ true, %73 ], [ true, %66 ], [ true, %59 ], [ true, %52 ], [ true, %45 ], [ true, %38 ], [ true, %31 ], [ true, %24 ], [ true, %17 ], [ true, %10 ], [ true, %1 ], [ %86, %80 ]
  ret i1 %88
}

declare void @_ZN5blink25HTMLFormattingElementList12AppendMarkerEv(%"class.blink::HTMLFormattingElementList"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink20HTMLConstructionSite12InQuirksModeEv(%"class.blink::HTMLConstructionSite"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16HTMLElementStack13InButtonScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink20HTMLConstructionSite43InsertSelfClosingHTMLElementDestroyingTokenEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [7 x i8]* dereferenceable(7)) local_unnamed_addr #5 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 6
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %141, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %183, %14, %28, %141, %155, %169, %42, %59, %77, %93, %109, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %14 ], [ false, %28 ], [ false, %141 ], [ false, %155 ], [ false, %169 ], [ %196, %183 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  ret i1 %140

141:                                              ; preds = %28
  %142 = getelementptr inbounds i8, i8* %15, i64 2
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i64
  %145 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 2
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i64
  %151 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %150
  %152 = load i8, i8* %151, align 1
  %153 = sext i8 %152 to i32
  %154 = icmp eq i32 %147, %153
  br i1 %154, label %155, label %75

155:                                              ; preds = %141
  %156 = getelementptr inbounds i8, i8* %15, i64 3
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i64
  %159 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %158
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i32
  %162 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 3
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i64
  %165 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = sext i8 %166 to i32
  %168 = icmp eq i32 %161, %167
  br i1 %168, label %169, label %75

169:                                              ; preds = %155
  %170 = getelementptr inbounds i8, i8* %15, i64 4
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i64
  %173 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %172
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i32
  %176 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 4
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i64
  %179 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %178
  %180 = load i8, i8* %179, align 1
  %181 = sext i8 %180 to i32
  %182 = icmp eq i32 %175, %181
  br i1 %182, label %183, label %75

183:                                              ; preds = %169
  %184 = getelementptr inbounds i8, i8* %15, i64 5
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i64
  %187 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %186
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i32
  %190 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 5
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i64
  %193 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %192
  %194 = load i8, i8* %193, align 1
  %195 = sext i8 %194 to i32
  %196 = icmp eq i32 %189, %195
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder29ProcessGenericRawTextStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %3, %"class.blink::AtomicHTMLToken"* %1) #13
  %4 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 11, i32 0, i32 0
  %5 = load %"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocumentParser"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %5, i64 0, i32 7, i32 0, i32 0, i32 0
  %7 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %6, align 8
  %8 = icmp eq %"class.blink::HTMLTokenizer"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %7, i64 0, i32 0
  store i32 4, i32* %10, align 8
  br label %11

11:                                               ; preds = %2, %9
  %12 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 5
  store i32 %13, i32* %14, align 4
  store i32 8, i32* %12, align 8
  ret void
}

declare zeroext i1 @_ZNK5blink16HTMLElementStack7InScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink20HTMLConstructionSite22GenerateImpliedEndTagsEv(%"class.blink::HTMLConstructionSite"*) local_unnamed_addr #1

declare void @_ZN5blink20HTMLConstructionSite35GenerateImpliedEndTagsWithExclusionERKN3WTF12AtomicStringE(%"class.blink::HTMLConstructionSite"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL22AdjustMathMLAttributesEPNS_15AtomicHTMLTokenE(%"class.blink::AtomicHTMLToken"* nocapture readonly) unnamed_addr #0 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = alloca %"class.blink::QualifiedName", align 8
  %4 = load %"class.WTF::HashMap.1361"*, %"class.WTF::HashMap.1361"** @_ZZN5blinkL16AdjustAttributesIXadL_ZNS_12mathml_names8GetAttrsEvEELj25EEEvPNS_15AtomicHTMLTokenEE8case_map, align 8
  %5 = icmp eq %"class.WTF::HashMap.1361"* %4, null
  br i1 %5, label %6, label %50

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 24, i8* getelementptr inbounds ([224 x i8], [224 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapINS_12AtomicStringEN5blink13QualifiedNameENS_16AtomicStringHashENS_10HashTraitsIS2_EENS6_IS4_EENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #13
  store i8* %7, i8** bitcast (%"class.WTF::HashMap.1361"** @_ZZN5blinkL16AdjustAttributesIXadL_ZNS_12mathml_names8GetAttrsEvEELj25EEEvPNS_15AtomicHTMLTokenEE8case_map to i8**), align 8
  %8 = tail call %"class.blink::QualifiedName"** @_ZN5blink12mathml_names8GetAttrsEv() #13
  %9 = load %"class.WTF::HashMap.1361"*, %"class.WTF::HashMap.1361"** @_ZZN5blinkL16AdjustAttributesIXadL_ZNS_12mathml_names8GetAttrsEvEELj25EEEvPNS_15AtomicHTMLTokenEE8case_map, align 8
  %10 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.WTF::HashMap.1361", %"class.WTF::HashMap.1361"* %9, i64 0, i32 0
  br label %13

13:                                               ; preds = %43, %6
  %14 = phi i64 [ 0, %6 ], [ %44, %43 ]
  %15 = getelementptr inbounds %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %8, i64 %14
  %16 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %11, align 8
  %20 = call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"* %19) #13
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %11, align 8
  %21 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %19, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %20, %22
  br i1 %23, label %27, label %24

24:                                               ; preds = %13
  %25 = call { %"struct.WTF::KeyValuePair.1365"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS1_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.1362"* %12, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %2, %"class.blink::QualifiedName"* dereferenceable(8) %16) #13
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  br label %27

27:                                               ; preds = %24, %13
  %28 = phi %"class.WTF::StringImpl"* [ %26, %24 ], [ %20, %13 ]
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #13
  br label %43

43:                                               ; preds = %42, %39, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  %44 = add nuw nsw i64 %14, 1
  %45 = icmp eq i64 %44, 25
  br i1 %45, label %46, label %13

46:                                               ; preds = %43
  %47 = icmp eq %"class.blink::QualifiedName"** %8, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %46
  %49 = bitcast %"class.blink::QualifiedName"** %8 to i8*
  call void @_ZdaPv(i8* %49) #14
  br label %50

50:                                               ; preds = %48, %46, %1
  %51 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %52 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %52, i64 %55
  %57 = icmp eq i32 %54, 0
  br i1 %57, label %100, label %58

58:                                               ; preds = %50
  %59 = bitcast %"class.blink::QualifiedName"* %3 to i8*
  %60 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  br label %61

61:                                               ; preds = %97, %58
  %62 = phi %"class.blink::Attribute"* [ %52, %58 ], [ %98, %97 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #13
  %63 = load %"class.WTF::HashMap.1361"*, %"class.WTF::HashMap.1361"** @_ZZN5blinkL16AdjustAttributesIXadL_ZNS_12mathml_names8GetAttrsEvEELj25EEEvPNS_15AtomicHTMLTokenEE8case_map, align 8
  %64 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %62, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %65, i64 0, i32 3
  call void @_ZNK3WTF7HashMapINS_12AtomicStringEN5blink13QualifiedNameENS_16AtomicStringHashENS_10HashTraitsIS1_EENS5_IS3_EENS_18PartitionAllocatorEE2atERKS1_(%"class.blink::QualifiedName"* nonnull sret %3, %"class.WTF::HashMap.1361"* %63, %"class.WTF::AtomicString"* dereferenceable(8) %66) #13
  %67 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %60, align 8
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %67, i64 0, i32 3, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %97, label %71

71:                                               ; preds = %61
  %72 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %67, null
  br i1 %72, label %80, label %73

73:                                               ; preds = %71
  %74 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %67, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = and i32 %75, 16777216
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %67, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %79) #13
  br label %80

80:                                               ; preds = %78, %73, %71
  %81 = ptrtoint %"class.blink::QualifiedName::QualifiedNameImpl"* %67 to i64
  %82 = bitcast %"class.blink::Attribute"* %62 to i64*
  %83 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %64, align 8
  store i64 %81, i64* %82, align 8
  %84 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %83, null
  br i1 %84, label %97, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %83, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = and i32 %87, 16777216
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %97

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %83, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %91) #13
  %92 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %83, i64 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %90
  call void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"* nonnull %83) #13
  %96 = bitcast %"class.blink::QualifiedName::QualifiedNameImpl"* %83 to i8*
  call void @free(i8* %96) #13
  br label %97

97:                                               ; preds = %95, %90, %85, %80, %61
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #13
  %98 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %62, i64 1
  %99 = icmp eq %"class.blink::Attribute"* %98, %56
  br i1 %99, label %100, label %61

100:                                              ; preds = %97, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL23AdjustForeignAttributesEPNS_15AtomicHTMLTokenE(%"class.blink::AtomicHTMLToken"*) unnamed_addr #0 {
  %2 = alloca %"class.blink::QualifiedName", align 8
  %3 = alloca %"class.blink::QualifiedName", align 8
  %4 = load %"class.WTF::HashMap.1361"*, %"class.WTF::HashMap.1361"** @_ZZN5blinkL23AdjustForeignAttributesEPNS_15AtomicHTMLTokenEE3map, align 8
  %5 = icmp eq %"class.WTF::HashMap.1361"* %4, null
  br i1 %5, label %6, label %31

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 24, i8* getelementptr inbounds ([224 x i8], [224 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapINS_12AtomicStringEN5blink13QualifiedNameENS_16AtomicStringHashENS_10HashTraitsIS2_EENS6_IS4_EENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #13
  store i8* %7, i8** bitcast (%"class.WTF::HashMap.1361"** @_ZZN5blinkL23AdjustForeignAttributesEPNS_15AtomicHTMLTokenEE3map to i8**), align 8
  %8 = tail call %"class.blink::QualifiedName"** @_ZN5blink11xlink_names8GetAttrsEv() #13
  %9 = load %"class.WTF::HashMap.1361"*, %"class.WTF::HashMap.1361"** @_ZZN5blinkL23AdjustForeignAttributesEPNS_15AtomicHTMLTokenEE3map, align 8
  %10 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_xlink_atomE, align 8
  tail call fastcc void @_ZN5blinkL18AddNamesWithPrefixEPN3WTF7HashMapINS0_12AtomicStringENS_13QualifiedNameENS0_16AtomicStringHashENS0_10HashTraitsIS2_EENS5_IS3_EENS0_18PartitionAllocatorEEERKS2_PKPKS3_m(%"class.WTF::HashMap.1361"* %9, %"class.WTF::AtomicString"* dereferenceable(8) %10, %"class.blink::QualifiedName"** %8, i64 7)
  %11 = tail call %"class.blink::QualifiedName"** @_ZN5blink9xml_names8GetAttrsEv() #13
  %12 = load %"class.WTF::HashMap.1361"*, %"class.WTF::HashMap.1361"** @_ZZN5blinkL23AdjustForeignAttributesEPNS_15AtomicHTMLTokenEE3map, align 8
  %13 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF10g_xml_atomE, align 8
  tail call fastcc void @_ZN5blinkL18AddNamesWithPrefixEPN3WTF7HashMapINS0_12AtomicStringENS_13QualifiedNameENS0_16AtomicStringHashENS0_10HashTraitsIS2_EENS5_IS3_EENS0_18PartitionAllocatorEEERKS2_PKPKS3_m(%"class.WTF::HashMap.1361"* %12, %"class.WTF::AtomicString"* dereferenceable(8) %13, %"class.blink::QualifiedName"** %11, i64 2)
  %14 = load %"class.WTF::HashMap.1361"*, %"class.WTF::HashMap.1361"** @_ZZN5blinkL23AdjustForeignAttributesEPNS_15AtomicHTMLTokenEE3map, align 8
  %15 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_xmlns_atomE, align 8
  %16 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11xmlns_names10kXmlnsAttrE, align 8
  %17 = getelementptr inbounds %"class.WTF::HashMap.1361", %"class.WTF::HashMap.1361"* %14, i64 0, i32 0
  %18 = tail call { %"struct.WTF::KeyValuePair.1365"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS1_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.1362"* %17, %"class.WTF::AtomicString"* dereferenceable(8) %15, %"class.blink::QualifiedName"* dereferenceable(8) %16) #13
  %19 = load %"class.WTF::HashMap.1361"*, %"class.WTF::HashMap.1361"** @_ZZN5blinkL23AdjustForeignAttributesEPNS_15AtomicHTMLTokenEE3map, align 8
  %20 = bitcast %"class.blink::QualifiedName"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  %21 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink11xmlns_names13kNamespaceURIE, align 8
  call void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"* nonnull %2, %"class.WTF::AtomicString"* dereferenceable(8) %15, %"class.WTF::AtomicString"* dereferenceable(8) %10, %"class.WTF::AtomicString"* dereferenceable(8) %21) #13
  %22 = getelementptr inbounds %"class.WTF::HashMap.1361", %"class.WTF::HashMap.1361"* %19, i64 0, i32 0
  %23 = call { %"struct.WTF::KeyValuePair.1365"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERA12_KcS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.1362"* %22, [12 x i8]* nonnull dereferenceable(12) @.str.7, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %2) #13
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  %24 = icmp eq %"class.blink::QualifiedName"** %11, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %6
  %26 = bitcast %"class.blink::QualifiedName"** %11 to i8*
  call void @_ZdaPv(i8* %26) #14
  br label %27

27:                                               ; preds = %6, %25
  %28 = icmp eq %"class.blink::QualifiedName"** %8, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = bitcast %"class.blink::QualifiedName"** %8 to i8*
  call void @_ZdaPv(i8* %30) #14
  br label %31

31:                                               ; preds = %29, %27, %1
  %32 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 6
  %37 = bitcast %"class.blink::QualifiedName"* %3 to i8*
  %38 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  br label %40

39:                                               ; preds = %77, %31
  ret void

40:                                               ; preds = %35, %77
  %41 = phi i32 [ 0, %35 ], [ %78, %77 ]
  %42 = call dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %36, i32 %41)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #13
  %43 = load %"class.WTF::HashMap.1361"*, %"class.WTF::HashMap.1361"** @_ZZN5blinkL23AdjustForeignAttributesEPNS_15AtomicHTMLTokenEE3map, align 8
  %44 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %42, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 3
  call void @_ZNK3WTF7HashMapINS_12AtomicStringEN5blink13QualifiedNameENS_16AtomicStringHashENS_10HashTraitsIS1_EENS5_IS3_EENS_18PartitionAllocatorEE2atERKS1_(%"class.blink::QualifiedName"* nonnull sret %3, %"class.WTF::HashMap.1361"* %43, %"class.WTF::AtomicString"* dereferenceable(8) %46)
  %47 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %47, i64 0, i32 3, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %77, label %51

51:                                               ; preds = %40
  %52 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %47, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %47, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, 16777216
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %47, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %59) #13
  br label %60

60:                                               ; preds = %58, %53, %51
  %61 = ptrtoint %"class.blink::QualifiedName::QualifiedNameImpl"* %47 to i64
  %62 = bitcast %"class.blink::Attribute"* %42 to i64*
  %63 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  store i64 %61, i64* %62, align 8
  %64 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %63, null
  br i1 %64, label %77, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %63, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = and i32 %67, 16777216
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %63, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %71) #13
  %72 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %70
  call void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"* nonnull %63) #13
  %76 = bitcast %"class.blink::QualifiedName::QualifiedNameImpl"* %63 to i8*
  call void @free(i8* %76) #13
  br label %77

77:                                               ; preds = %75, %70, %65, %60, %40
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #13
  %78 = add nuw i32 %41, 1
  %79 = load i32, i32* %32, align 4
  %80 = icmp ult i32 %78, %79
  br i1 %80, label %40, label %39
}

declare void @_ZN5blink20HTMLConstructionSite20InsertForeignElementEPNS_15AtomicHTMLTokenERKN3WTF12AtomicStringE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL19AdjustSVGAttributesEPNS_15AtomicHTMLTokenE(%"class.blink::AtomicHTMLToken"* nocapture readonly) unnamed_addr #0 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = alloca %"class.blink::QualifiedName", align 8
  %4 = load %"class.WTF::HashMap.1361"*, %"class.WTF::HashMap.1361"** @_ZZN5blinkL16AdjustAttributesIXadL_ZNS_9svg_names8GetAttrsEvEELj203EEEvPNS_15AtomicHTMLTokenEE8case_map, align 8
  %5 = icmp eq %"class.WTF::HashMap.1361"* %4, null
  br i1 %5, label %6, label %50

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 24, i8* getelementptr inbounds ([224 x i8], [224 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapINS_12AtomicStringEN5blink13QualifiedNameENS_16AtomicStringHashENS_10HashTraitsIS2_EENS6_IS4_EENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #13
  store i8* %7, i8** bitcast (%"class.WTF::HashMap.1361"** @_ZZN5blinkL16AdjustAttributesIXadL_ZNS_9svg_names8GetAttrsEvEELj203EEEvPNS_15AtomicHTMLTokenEE8case_map to i8**), align 8
  %8 = tail call %"class.blink::QualifiedName"** @_ZN5blink9svg_names8GetAttrsEv() #13
  %9 = load %"class.WTF::HashMap.1361"*, %"class.WTF::HashMap.1361"** @_ZZN5blinkL16AdjustAttributesIXadL_ZNS_9svg_names8GetAttrsEvEELj203EEEvPNS_15AtomicHTMLTokenEE8case_map, align 8
  %10 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.WTF::HashMap.1361", %"class.WTF::HashMap.1361"* %9, i64 0, i32 0
  br label %13

13:                                               ; preds = %43, %6
  %14 = phi i64 [ 0, %6 ], [ %44, %43 ]
  %15 = getelementptr inbounds %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %8, i64 %14
  %16 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %11, align 8
  %20 = call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"* %19) #13
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %11, align 8
  %21 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %19, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %20, %22
  br i1 %23, label %27, label %24

24:                                               ; preds = %13
  %25 = call { %"struct.WTF::KeyValuePair.1365"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS1_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.1362"* %12, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %2, %"class.blink::QualifiedName"* dereferenceable(8) %16) #13
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  br label %27

27:                                               ; preds = %24, %13
  %28 = phi %"class.WTF::StringImpl"* [ %26, %24 ], [ %20, %13 ]
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #13
  br label %43

43:                                               ; preds = %42, %39, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  %44 = add nuw nsw i64 %14, 1
  %45 = icmp eq i64 %44, 203
  br i1 %45, label %46, label %13

46:                                               ; preds = %43
  %47 = icmp eq %"class.blink::QualifiedName"** %8, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %46
  %49 = bitcast %"class.blink::QualifiedName"** %8 to i8*
  call void @_ZdaPv(i8* %49) #14
  br label %50

50:                                               ; preds = %48, %46, %1
  %51 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %52 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %52, i64 %55
  %57 = icmp eq i32 %54, 0
  br i1 %57, label %100, label %58

58:                                               ; preds = %50
  %59 = bitcast %"class.blink::QualifiedName"* %3 to i8*
  %60 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  br label %61

61:                                               ; preds = %97, %58
  %62 = phi %"class.blink::Attribute"* [ %52, %58 ], [ %98, %97 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #13
  %63 = load %"class.WTF::HashMap.1361"*, %"class.WTF::HashMap.1361"** @_ZZN5blinkL16AdjustAttributesIXadL_ZNS_9svg_names8GetAttrsEvEELj203EEEvPNS_15AtomicHTMLTokenEE8case_map, align 8
  %64 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %62, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %65, i64 0, i32 3
  call void @_ZNK3WTF7HashMapINS_12AtomicStringEN5blink13QualifiedNameENS_16AtomicStringHashENS_10HashTraitsIS1_EENS5_IS3_EENS_18PartitionAllocatorEE2atERKS1_(%"class.blink::QualifiedName"* nonnull sret %3, %"class.WTF::HashMap.1361"* %63, %"class.WTF::AtomicString"* dereferenceable(8) %66) #13
  %67 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %60, align 8
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %67, i64 0, i32 3, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %97, label %71

71:                                               ; preds = %61
  %72 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %67, null
  br i1 %72, label %80, label %73

73:                                               ; preds = %71
  %74 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %67, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = and i32 %75, 16777216
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %67, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %79) #13
  br label %80

80:                                               ; preds = %78, %73, %71
  %81 = ptrtoint %"class.blink::QualifiedName::QualifiedNameImpl"* %67 to i64
  %82 = bitcast %"class.blink::Attribute"* %62 to i64*
  %83 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %64, align 8
  store i64 %81, i64* %82, align 8
  %84 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %83, null
  br i1 %84, label %97, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %83, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = and i32 %87, 16777216
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %97

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %83, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %91) #13
  %92 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %83, i64 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %90
  call void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"* nonnull %83) #13
  %96 = bitcast %"class.blink::QualifiedName::QualifiedNameImpl"* %83 to i8*
  call void @free(i8* %96) #13
  br label %97

97:                                               ; preds = %95, %90, %85, %80, %61
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #13
  %98 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %62, i64 1
  %99 = icmp eq %"class.blink::Attribute"* %98, %56
  br i1 %99, label %100, label %61

100:                                              ; preds = %97, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder23ProcessTemplateStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.WTF::StringAppend.1990", align 8
  %10 = alloca i32, align 4
  %11 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 6
  tail call void @_ZN5blink25HTMLFormattingElementList12AppendMarkerEv(%"class.blink::HTMLFormattingElementList"* %12) #13
  %13 = tail call dereferenceable(2848) %"class.blink::Document"* @_ZN5blink20HTMLConstructionSite27OwnerDocumentForCurrentNodeEv(%"class.blink::HTMLConstructionSite"* %11) #13
  %14 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 9
  %15 = load i8, i8* %14, align 1, !range !4
  %16 = icmp eq i8 %15, 0
  %17 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %13) #13
  %18 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_declarative_shadow_dom_enabled_E, align 1, !range !4
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %256, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 6
  %22 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 6, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %256, label %25

25:                                               ; preds = %20
  %26 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kShadowrootAttrE, align 8
  %27 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %26, i64 0, i32 0, i32 0
  br label %28

28:                                               ; preds = %47, %25
  %29 = phi i32 [ 0, %25 ], [ %48, %47 ]
  %30 = tail call dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %21, i32 %29) #13
  %31 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %34 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %32, %33
  br i1 %34, label %51, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %37, %39
  br i1 %40, label %41, label %47

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 4, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 4, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %43, %45
  br i1 %46, label %51, label %47

47:                                               ; preds = %41, %35
  %48 = add nuw i32 %29, 1
  %49 = load i32, i32* %22, align 4
  %50 = icmp ult i32 %48, %49
  br i1 %50, label %28, label %256

51:                                               ; preds = %41, %28
  %52 = tail call dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %21, i32 %29) #13
  br i1 %16, label %53, label %57

53:                                               ; preds = %51
  %54 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54) #13
  store i32 8, i32* %3, align 4
  %55 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #13
  store i32 2, i32* %4, align 4
  %56 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA125_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %4, [125 x i8]* nonnull dereferenceable(125) @.str.11) #13
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %13, %"class.blink::ConsoleMessage"* %56, i1 zeroext false) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54) #13
  br label %256

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %52, i64 0, i32 1, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %78, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %83

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i33
  %70 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %69, i33 1) #13
  %71 = extractvalue { i33, i1 } %70, 1
  %72 = extractvalue { i33, i1 } %70, 0
  %73 = icmp slt i33 %72, 0
  %74 = or i1 %71, %73
  br i1 %74, label %75, label %76, !prof !2

75:                                               ; preds = %66
  tail call void @llvm.trap() #13
  unreachable

76:                                               ; preds = %66
  %77 = trunc i33 %72 to i32
  store i32 %77, i32* %67, align 4
  br label %83

78:                                               ; preds = %57
  %79 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #13
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %80, align 8
  %81 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %82 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %81, i64* %82, align 8
  br label %91

83:                                               ; preds = %76, %61
  %84 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #13
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %85, align 8
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 1
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %90 = bitcast i8** %89 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %88, %"class.WTF::StringImpl"** %90, align 8
  br label %91

91:                                               ; preds = %83, %78
  %92 = phi i8* [ %84, %83 ], [ %79, %78 ]
  %93 = phi i32 [ %87, %83 ], [ 0, %78 ]
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %93, i32* %94, align 8
  %95 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, [5 x i8]* nonnull dereferenceable(5) @.str.12) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #13
  br i1 %95, label %241, label %96

96:                                               ; preds = %91
  %97 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #13
  br i1 %60, label %98, label %102

98:                                               ; preds = %96
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %99, align 8
  %100 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %101 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %100, i64* %101, align 8
  br label %109

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %103, align 8
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 1
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %108 = bitcast i8** %107 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %106, %"class.WTF::StringImpl"** %108, align 8
  br label %109

109:                                              ; preds = %102, %98
  %110 = phi i32 [ %105, %102 ], [ 0, %98 ]
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %110, i32* %111, align 8
  %112 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, [7 x i8]* nonnull dereferenceable(7) @.str.13) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #13
  br i1 %112, label %241, label %113

113:                                              ; preds = %109
  %114 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %114) #13
  store i32 8, i32* %7, align 4
  %115 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %115) #13
  store i32 2, i32* %8, align 4
  %116 = bitcast %"class.WTF::StringAppend.1990"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116) #13
  br i1 %60, label %192, label %117

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %134

124:                                              ; preds = %117
  %125 = zext i32 %123 to i33
  %126 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %125, i33 1) #13
  %127 = extractvalue { i33, i1 } %126, 1
  %128 = extractvalue { i33, i1 } %126, 0
  %129 = icmp slt i33 %128, 0
  %130 = or i1 %127, %129
  br i1 %130, label %131, label %132, !prof !2

131:                                              ; preds = %124
  call void @llvm.trap() #13
  unreachable

132:                                              ; preds = %124
  %133 = trunc i33 %128 to i32
  store i32 %133, i32* %122, align 4
  br label %134

134:                                              ; preds = %132, %117
  %135 = phi i32 [ %133, %132 ], [ %123, %117 ]
  %136 = load atomic i32, i32* %118 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %149

139:                                              ; preds = %134
  %140 = zext i32 %135 to i33
  %141 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %140, i33 1) #13
  %142 = extractvalue { i33, i1 } %141, 1
  %143 = extractvalue { i33, i1 } %141, 0
  %144 = icmp slt i33 %143, 0
  %145 = or i1 %142, %144
  br i1 %145, label %146, label %147, !prof !2

146:                                              ; preds = %139
  call void @llvm.trap() #13
  unreachable

147:                                              ; preds = %139
  %148 = trunc i33 %143 to i32
  store i32 %148, i32* %122, align 4
  br label %149

149:                                              ; preds = %147, %134
  %150 = phi i32 [ %148, %147 ], [ %135, %134 ]
  %151 = load atomic i32, i32* %118 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %156

154:                                              ; preds = %149
  %155 = add i32 %150, -1
  store i32 %155, i32* %122, align 4
  br label %156

156:                                              ; preds = %154, %149
  %157 = phi i32 [ %155, %154 ], [ %150, %149 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #13
  br label %160

160:                                              ; preds = %159, %156
  %161 = load atomic i32, i32* %118 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %175

164:                                              ; preds = %160
  %165 = load i32, i32* %122, align 4
  %166 = zext i32 %165 to i33
  %167 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %166, i33 1) #13
  %168 = extractvalue { i33, i1 } %167, 1
  %169 = extractvalue { i33, i1 } %167, 0
  %170 = icmp slt i33 %169, 0
  %171 = or i1 %168, %170
  br i1 %171, label %172, label %173, !prof !2

172:                                              ; preds = %164
  call void @llvm.trap() #13
  unreachable

173:                                              ; preds = %164
  %174 = trunc i33 %169 to i32
  store i32 %174, i32* %122, align 4
  br label %175

175:                                              ; preds = %173, %160
  %176 = bitcast %"class.WTF::StringAppend.1990"* %9 to i64*
  store i64 ptrtoint ([49 x i8]* @.str.14 to i64), i64* %176, align 8
  %177 = getelementptr inbounds %"class.WTF::StringAppend.1990", %"class.WTF::StringAppend.1990"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %177, align 8
  %178 = load atomic i32, i32* %118 monotonic, align 4
  %179 = and i32 %178, 2
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %196

181:                                              ; preds = %175
  %182 = load i32, i32* %122, align 4
  %183 = zext i32 %182 to i33
  %184 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %183, i33 1) #13
  %185 = extractvalue { i33, i1 } %184, 1
  %186 = extractvalue { i33, i1 } %184, 0
  %187 = icmp slt i33 %186, 0
  %188 = or i1 %185, %187
  br i1 %188, label %189, label %190, !prof !2

189:                                              ; preds = %181
  call void @llvm.trap() #13
  unreachable

190:                                              ; preds = %181
  %191 = trunc i33 %186 to i32
  store i32 %191, i32* %122, align 4
  br label %196

192:                                              ; preds = %113
  %193 = bitcast %"class.WTF::StringAppend.1990"* %9 to i64*
  store i64 ptrtoint ([49 x i8]* @.str.14 to i64), i64* %193, align 8
  %194 = getelementptr inbounds %"class.WTF::StringAppend.1990", %"class.WTF::StringAppend.1990"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %194, align 8
  %195 = getelementptr inbounds %"class.WTF::StringAppend.1990", %"class.WTF::StringAppend.1990"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15, i64 0, i64 0), i8** %195, align 8
  br label %208

196:                                              ; preds = %190, %175
  %197 = getelementptr inbounds %"class.WTF::StringAppend.1990", %"class.WTF::StringAppend.1990"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15, i64 0, i64 0), i8** %197, align 8
  %198 = load atomic i32, i32* %118 monotonic, align 4
  %199 = and i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = load i32, i32* %122, align 4
  br i1 %200, label %202, label %204

202:                                              ; preds = %196
  %203 = add i32 %201, -1
  store i32 %203, i32* %122, align 4
  br label %204

204:                                              ; preds = %202, %196
  %205 = phi i32 [ %203, %202 ], [ %201, %196 ]
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %204
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #13
  br label %208

208:                                              ; preds = %207, %204, %192
  %209 = phi %"class.WTF::StringImpl"** [ %194, %192 ], [ %177, %204 ], [ %177, %207 ]
  %210 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS8_IPKcNS7_6StringEEESA_EEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %7, i32* nonnull dereferenceable(4) %8, %"class.WTF::StringAppend.1990"* nonnull dereferenceable(24) %9) #13
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %13, %"class.blink::ConsoleMessage"* %210, i1 zeroext false) #13
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %209, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %226, label %213

213:                                              ; preds = %208
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  br i1 %217, label %220, label %222

220:                                              ; preds = %213
  %221 = add i32 %219, -1
  store i32 %221, i32* %218, align 4
  br label %222

222:                                              ; preds = %220, %213
  %223 = phi i32 [ %221, %220 ], [ %219, %213 ]
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %222
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #13
  br label %226

226:                                              ; preds = %225, %222, %208
  br i1 %60, label %240, label %227

227:                                              ; preds = %226
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load atomic i32, i32* %228 monotonic, align 4
  %230 = and i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %233 = load i32, i32* %232, align 4
  br i1 %231, label %234, label %236

234:                                              ; preds = %227
  %235 = add i32 %233, -1
  store i32 %235, i32* %232, align 4
  br label %236

236:                                              ; preds = %234, %227
  %237 = phi i32 [ %235, %234 ], [ %233, %227 ]
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %240

239:                                              ; preds = %236
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #13
  br label %240

240:                                              ; preds = %239, %236, %226
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %115) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %114) #13
  br label %241

241:                                              ; preds = %240, %109, %91
  %242 = phi i32 [ 0, %240 ], [ 1, %91 ], [ 2, %109 ]
  br i1 %60, label %256, label %243

243:                                              ; preds = %241
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load atomic i32, i32* %244 monotonic, align 4
  %246 = and i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %249 = load i32, i32* %248, align 4
  br i1 %247, label %250, label %252

250:                                              ; preds = %243
  %251 = add i32 %249, -1
  store i32 %251, i32* %248, align 4
  br label %252

252:                                              ; preds = %250, %243
  %253 = phi i32 [ %251, %250 ], [ %249, %243 ]
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %256

255:                                              ; preds = %252
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #13
  br label %256

256:                                              ; preds = %47, %2, %20, %53, %241, %252, %255
  %257 = phi i32 [ 0, %2 ], [ 0, %53 ], [ %242, %241 ], [ %242, %252 ], [ %242, %255 ], [ 0, %20 ], [ 0, %47 ]
  call void @_ZN5blink20HTMLConstructionSite25InsertHTMLTemplateElementEPNS_15AtomicHTMLTokenENS_25DeclarativeShadowRootTypeE(%"class.blink::HTMLConstructionSite"* %11, %"class.blink::AtomicHTMLToken"* %1, i32 %257) #13
  %258 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 0
  store i8 0, i8* %258, align 8
  %259 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 6
  %260 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %260) #13
  store i32 6, i32* %10, align 4
  %261 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %262 = load i32, i32* %261, align 4
  %263 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %264 = load i32, i32* %263, align 8
  %265 = icmp eq i32 %262, %264
  br i1 %265, label %273, label %266, !prof !2

266:                                              ; preds = %256
  %267 = getelementptr inbounds %"class.WTF::Vector.91", %"class.WTF::Vector.91"* %259, i64 0, i32 0, i32 0, i32 0
  %268 = load i32*, i32** %267, align 8
  %269 = zext i32 %262 to i64
  %270 = getelementptr inbounds i32, i32* %268, i64 %269
  store i32 6, i32* %270, align 4
  %271 = load i32, i32* %261, align 4
  %272 = add i32 %271, 1
  store i32 %272, i32* %261, align 4
  br label %274

273:                                              ; preds = %256
  call void @_ZN3WTF6VectorIN5blink15HTMLTreeBuilder13InsertionModeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.91"* %259, i32* nonnull dereferenceable(4) %10) #13
  br label %274

274:                                              ; preds = %266, %273
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %260) #13
  %275 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 6, i32* %275, align 8
  ret void
}

declare void @_ZN5blink20HTMLConstructionSite25InsertHTMLTemplateElementEPNS_15AtomicHTMLTokenENS_25DeclarativeShadowRootTypeE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*, i32) local_unnamed_addr #1

declare dereferenceable(2848) %"class.blink::Document"* @_ZN5blink20HTMLConstructionSite27OwnerDocumentForCurrentNodeEv(%"class.blink::HTMLConstructionSite"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15HTMLTreeBuilder21ProcessTemplateEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %4 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack22HasTemplateInHTMLScopeEv(%"class.blink::HTMLElementStack"* %3) #13
  br i1 %4, label %5, label %108

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite22GenerateImpliedEndTagsEv(%"class.blink::HTMLConstructionSite"* %6) #13
  %7 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %9, i64 0, i32 3
  tail call void @_ZN5blink16HTMLElementStack8PopUntilERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %3, %"class.WTF::AtomicString"* dereferenceable(8) %10) #13
  %11 = tail call %"class.blink::HTMLElementStack::ElementRecord"* @_ZNK5blink16HTMLElementStack9TopRecordEv(%"class.blink::HTMLElementStack"* %3) #13
  %12 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %12, align 8
  tail call void @_ZN5blink16HTMLElementStack3PopEv(%"class.blink::HTMLElementStack"* %3) #13
  %14 = tail call %"class.blink::HTMLElementStack::ElementRecord"* @_ZNK5blink16HTMLElementStack9TopRecordEv(%"class.blink::HTMLElementStack"* %3) #13
  %15 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 6
  tail call void @_ZN5blink25HTMLFormattingElementList17ClearToLastMarkerEv(%"class.blink::HTMLFormattingElementList"* %17) #13
  %18 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %19, -1
  store i32 %20, i32* %18, align 4
  tail call void @_ZN5blink15HTMLTreeBuilder31ResetInsertionModeAppropriatelyEv(%"class.blink::HTMLTreeBuilder"* %0)
  %21 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %16, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %22, i64 0, i32 0
  %24 = bitcast %"class.blink::ContainerNode"* %22 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %25 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %25, i64 10
  %27 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %26, align 8
  %28 = tail call %"class.blink::ExecutionContext"* %27(%"class.blink::Node"* %23) #13
  %29 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_declarative_shadow_dom_enabled_E, align 1, !range !4
  %30 = icmp ne i8 %29, 0
  %31 = icmp ne %"class.blink::HTMLStackItem"* %13, null
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %108

33:                                               ; preds = %5
  %34 = bitcast %"class.blink::HTMLStackItem"* %13 to %"class.blink::Element"**
  %35 = load %"class.blink::Element"*, %"class.blink::Element"** %34, align 8
  %36 = icmp eq %"class.blink::Element"* %35, null
  br i1 %36, label %56, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %35, i64 0, i32 0, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 48
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %56

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %35, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %7, i64 0, i32 0, i32 0
  %45 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 1, i32 2
  %47 = bitcast %"class.blink::Member.2"* %46 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %48 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %48, i64 0, i32 3, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 3, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %50, %52
  %54 = bitcast %"class.blink::Element"* %35 to %"class.blink::HTMLTemplateElement"*
  %55 = select i1 %53, %"class.blink::HTMLTemplateElement"* %54, %"class.blink::HTMLTemplateElement"* null
  br label %56

56:                                               ; preds = %33, %37, %42
  %57 = phi %"class.blink::HTMLTemplateElement"* [ %55, %42 ], [ null, %37 ], [ null, %33 ]
  %58 = getelementptr inbounds %"class.blink::HTMLTemplateElement", %"class.blink::HTMLTemplateElement"* %57, i64 0, i32 2
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %108, label %61

61:                                               ; preds = %56
  %62 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %21, align 8
  %63 = tail call %"class.blink::ContainerNode"* @_ZNK5blink16HTMLElementStack8RootNodeEv(%"class.blink::HTMLElementStack"* %3) #13
  %64 = icmp eq %"class.blink::ContainerNode"* %62, %63
  br i1 %64, label %65, label %66

65:                                               ; preds = %61
  store i32 0, i32* %58, align 8
  br label %108

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %13, i64 0, i32 2
  %68 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %13, i64 0, i32 2, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %101, label %71

71:                                               ; preds = %66
  %72 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names29kShadowrootdelegatesfocusAttrE, align 8
  %73 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %72, i64 0, i32 0, i32 0
  br label %74

74:                                               ; preds = %93, %71
  %75 = phi i32 [ 0, %71 ], [ %94, %93 ]
  %76 = tail call dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %67, i32 %75) #13
  %77 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %76, i64 0, i32 0, i32 0, i32 0
  %78 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %77, align 8
  %79 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %73, align 8
  %80 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %78, %79
  br i1 %80, label %97, label %81

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %78, i64 0, i32 3, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %79, i64 0, i32 3, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %83, %85
  br i1 %86, label %87, label %93

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %78, i64 0, i32 4, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %79, i64 0, i32 4, i32 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %89, %91
  br i1 %92, label %97, label %93

93:                                               ; preds = %87, %81
  %94 = add nuw i32 %75, 1
  %95 = load i32, i32* %68, align 4
  %96 = icmp ult i32 %94, %95
  br i1 %96, label %74, label %101

97:                                               ; preds = %87, %74
  %98 = tail call dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %67, i32 %75) #13
  %99 = icmp ne %"class.blink::Attribute"* %98, null
  %100 = zext i1 %99 to i32
  br label %101

101:                                              ; preds = %93, %66, %97
  %102 = phi i32 [ %100, %97 ], [ 0, %66 ], [ 0, %93 ]
  %103 = bitcast %"class.blink::HTMLStackItem"* %16 to %"class.blink::Element"**
  %104 = load %"class.blink::Element"*, %"class.blink::Element"** %103, align 8
  %105 = load i32, i32* %58, align 8
  %106 = icmp ne i32 %105, 1
  %107 = zext i1 %106 to i32
  tail call void @_ZN5blink7Element27AttachDeclarativeShadowRootEPNS_19HTMLTemplateElementENS_14ShadowRootTypeENS_15FocusDelegationENS_18SlotAssignmentModeE(%"class.blink::Element"* %104, %"class.blink::HTMLTemplateElement"* %57, i32 %107, i32 %102, i32 1) #13
  br label %108

108:                                              ; preds = %56, %2, %5, %65, %101
  %109 = phi i1 [ true, %56 ], [ true, %101 ], [ true, %65 ], [ true, %5 ], [ false, %2 ]
  ret i1 %109
}

declare void @_ZN5blink16HTMLElementStack8PopUntilERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::HTMLElementStack::ElementRecord"* @_ZNK5blink16HTMLElementStack9TopRecordEv(%"class.blink::HTMLElementStack"*) local_unnamed_addr #1

declare void @_ZN5blink25HTMLFormattingElementList17ClearToLastMarkerEv(%"class.blink::HTMLFormattingElementList"*) local_unnamed_addr #1

declare %"class.blink::ContainerNode"* @_ZNK5blink16HTMLElementStack8RootNodeEv(%"class.blink::HTMLElementStack"*) local_unnamed_addr #1

declare void @_ZN5blink7Element27AttachDeclarativeShadowRootEPNS_19HTMLTemplateElementENS_14ShadowRootTypeENS_15FocusDelegationENS_18SlotAssignmentModeE(%"class.blink::Element"*, %"class.blink::HTMLTemplateElement"*, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15HTMLTreeBuilder37ProcessEndOfFileForInTemplateContentsEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::AtomicHTMLToken", align 8
  %4 = alloca %"class.WTF::Vector", align 8
  %5 = bitcast %"class.blink::AtomicHTMLToken"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 56, i1 false)
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %9 = bitcast %"class.WTF::Vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #13
  %10 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %3, i64 0, i32 0
  store i32 3, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %8, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #13
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !2

29:                                               ; preds = %20
  tail call void @llvm.trap() #13
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %2, %15, %30
  %33 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %3, i64 0, i32 2, i32 0, i32 0
  %34 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %3, i64 0, i32 6
  %35 = bitcast %"class.WTF::StringImpl"** %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 18, i1 false) #13
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %34, %"class.WTF::Vector"* nonnull dereferenceable(16) %4) #13
  %36 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %36, align 8
  %38 = icmp eq %"class.blink::Attribute"* %37, null
  br i1 %38, label %74, label %39, !prof !3

39:                                               ; preds = %32
  %40 = bitcast %"class.blink::Attribute"* %37 to i8*
  %41 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %72, label %44, !prof !2

44:                                               ; preds = %39
  %45 = zext i32 %42 to i64
  %46 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 %45
  br label %47

47:                                               ; preds = %65, %44
  %48 = phi %"class.blink::Attribute"* [ %67, %65 ], [ %37, %44 ]
  %49 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %48, i64 0, i32 1, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #13
  br label %65

65:                                               ; preds = %64, %61, %47
  %66 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %48, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %66) #13
  %67 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %48, i64 1
  %68 = icmp eq %"class.blink::Attribute"* %67, %46
  br i1 %68, label %69, label %47

69:                                               ; preds = %65
  store i32 0, i32* %41, align 4
  %70 = bitcast %"class.WTF::Vector"* %4 to i8**
  %71 = load i8*, i8** %70, align 8
  br label %72

72:                                               ; preds = %69, %39
  %73 = phi i8* [ %71, %69 ], [ %40, %39 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %73) #13
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %36, align 8
  br label %74

74:                                               ; preds = %32, %72
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  %75 = call zeroext i1 @_ZN5blink15HTMLTreeBuilder21ProcessTemplateEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* undef)
  br i1 %75, label %76, label %77

76:                                               ; preds = %74
  call void @_ZN5blink15HTMLTreeBuilder16ProcessEndOfFileEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %77

77:                                               ; preds = %74, %76
  %78 = phi i1 [ true, %76 ], [ false, %74 ]
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #13
  ret i1 %78
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15HTMLTreeBuilder37ProcessColgroupEndTagForInColumnGroupEv(%"class.blink::HTMLTreeBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %3 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %7, align 8
  %9 = tail call %"class.blink::ContainerNode"* @_ZNK5blink16HTMLElementStack8RootNodeEv(%"class.blink::HTMLElementStack"* %2) #13
  %10 = icmp eq %"class.blink::ContainerNode"* %8, %9
  br i1 %10, label %39, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0
  %13 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %17, i64 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 48
  %21 = icmp ne i32 %20, 0
  %22 = icmp eq %"class.blink::ContainerNode"* %17, null
  %23 = or i1 %22, %21
  br i1 %23, label %37, label %24

24:                                               ; preds = %11
  %25 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %17, i64 0, i32 0
  %26 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE, align 8
  %27 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %25, i64 1, i32 2
  %30 = bitcast %"class.blink::Member.2"* %29 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %33, %35
  br i1 %36, label %39, label %37

37:                                               ; preds = %11, %24
  tail call void @_ZN5blink16HTMLElementStack3PopEv(%"class.blink::HTMLElementStack"* %2) #13
  %38 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 9, i32* %38, align 8
  br label %39

39:                                               ; preds = %1, %24, %37
  %40 = phi i1 [ true, %37 ], [ false, %24 ], [ false, %1 ]
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder12CloseTheCellEv(%"class.blink::HTMLTreeBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE to %"class.blink::QualifiedName"**), align 8
  %4 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"* %2, %"class.blink::QualifiedName"* dereferenceable(8) %3) #13
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE to %"class.blink::QualifiedName"**), align 8
  %6 = select i1 %4, %"class.blink::QualifiedName"* %3, %"class.blink::QualifiedName"* %5
  %7 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %8, i64 0, i32 3
  tail call void @_ZN5blink15HTMLTreeBuilder17ProcessFakeEndTagERKN3WTF12AtomicStringE(%"class.blink::HTMLTreeBuilder"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %9) #13
  ret void
}

declare zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder25ProcessStartTagForInTableEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::AtomicHTMLToken", align 8
  %4 = alloca %"class.blink::AtomicHTMLToken", align 8
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = alloca %"class.WTF::Vector", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kCaptionTagE to %"class.blink::QualifiedName"**), align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %10, i64 0, i32 3, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %12, %14
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %18 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  tail call void @_ZN5blink16HTMLElementStack24PopUntilTableScopeMarkerEv(%"class.blink::HTMLElementStack"* %18) #13
  %19 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 6
  tail call void @_ZN5blink25HTMLFormattingElementList12AppendMarkerEv(%"class.blink::HTMLFormattingElementList"* %19) #13
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %17, %"class.blink::AtomicHTMLToken"* %1) #13
  %20 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 11, i32* %20, align 8
  br label %348

21:                                               ; preds = %2
  %22 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kColgroupTagE to %"class.blink::QualifiedName"**), align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %24, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %12, %26
  br i1 %27, label %28, label %32

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %30 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  tail call void @_ZN5blink16HTMLElementStack24PopUntilTableScopeMarkerEv(%"class.blink::HTMLElementStack"* %30) #13
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %29, %"class.blink::AtomicHTMLToken"* %1) #13
  %31 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 12, i32* %31, align 8
  br label %348

32:                                               ; preds = %21
  %33 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kColTagE to %"class.blink::QualifiedName"**), align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %12, %37
  br i1 %38, label %39, label %108

39:                                               ; preds = %32
  %40 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 16, i1 false) #13
  %41 = bitcast %"class.blink::AtomicHTMLToken"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %41) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 56, i1 false) #13
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %43 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %3, i64 0, i32 0
  store i32 2, i32* %43, align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %46, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %47, label %65, label %48

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i33
  %57 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %56, i33 1) #13
  %58 = extractvalue { i33, i1 } %57, 1
  %59 = extractvalue { i33, i1 } %57, 0
  %60 = icmp slt i33 %59, 0
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %53
  tail call void @llvm.trap() #13
  unreachable

63:                                               ; preds = %53
  %64 = trunc i33 %59 to i32
  store i32 %64, i32* %54, align 4
  br label %65

65:                                               ; preds = %39, %48, %63
  %66 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %3, i64 0, i32 2, i32 0, i32 0
  %67 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %3, i64 0, i32 6
  %68 = bitcast %"class.WTF::StringImpl"** %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 18, i1 false) #13
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %67, %"class.WTF::Vector"* nonnull dereferenceable(16) %5) #13
  call void @_ZN5blink15HTMLTreeBuilder15ProcessStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* nonnull %3) #13
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %41) #13
  %69 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %69, align 8
  %71 = icmp eq %"class.blink::Attribute"* %70, null
  br i1 %71, label %107, label %72, !prof !3

72:                                               ; preds = %65
  %73 = bitcast %"class.blink::Attribute"* %70 to i8*
  %74 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %105, label %77, !prof !2

77:                                               ; preds = %72
  %78 = zext i32 %75 to i64
  %79 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %70, i64 %78
  br label %80

80:                                               ; preds = %98, %77
  %81 = phi %"class.blink::Attribute"* [ %100, %98 ], [ %70, %77 ]
  %82 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %81, i64 0, i32 1, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %85
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %85
  %95 = phi i32 [ %93, %92 ], [ %91, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #13
  br label %98

98:                                               ; preds = %97, %94, %80
  %99 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %81, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %99) #13
  %100 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %81, i64 1
  %101 = icmp eq %"class.blink::Attribute"* %100, %79
  br i1 %101, label %102, label %80

102:                                              ; preds = %98
  store i32 0, i32* %74, align 4
  %103 = bitcast %"class.WTF::Vector"* %5 to i8**
  %104 = load i8*, i8** %103, align 8
  br label %105

105:                                              ; preds = %102, %72
  %106 = phi i8* [ %104, %102 ], [ %73, %72 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %106) #13
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %69, align 8
  br label %107

107:                                              ; preds = %65, %105
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #13
  call void @_ZN5blink15HTMLTreeBuilder15ProcessStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %348

108:                                              ; preds = %32
  %109 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE to %"class.blink::QualifiedName"**), align 8
  %110 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %109, i64 0, i32 0, i32 0
  %111 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %111, i64 0, i32 3, i32 0, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %12, %113
  br i1 %114, label %129, label %115

115:                                              ; preds = %108
  %116 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE to %"class.blink::QualifiedName"**), align 8
  %117 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %116, i64 0, i32 0, i32 0
  %118 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %118, i64 0, i32 3, i32 0, i32 0, i32 0
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %12, %120
  br i1 %121, label %129, label %122

122:                                              ; preds = %115
  %123 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE to %"class.blink::QualifiedName"**), align 8
  %124 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %123, i64 0, i32 0, i32 0
  %125 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %124, align 8
  %126 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %125, i64 0, i32 3, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %12, %127
  br i1 %128, label %129, label %133

129:                                              ; preds = %108, %115, %122
  %130 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %131 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  tail call void @_ZN5blink16HTMLElementStack24PopUntilTableScopeMarkerEv(%"class.blink::HTMLElementStack"* %131) #13
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %130, %"class.blink::AtomicHTMLToken"* %1) #13
  %132 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 13, i32* %132, align 8
  br label %348

133:                                              ; preds = %122
  %134 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE to %"class.blink::QualifiedName"**), align 8
  %135 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %134, i64 0, i32 0, i32 0
  %136 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %136, i64 0, i32 3, i32 0, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %12, %138
  br i1 %139, label %154, label %140

140:                                              ; preds = %133
  %141 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE to %"class.blink::QualifiedName"**), align 8
  %142 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %141, i64 0, i32 0, i32 0
  %143 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %143, i64 0, i32 3, i32 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %12, %145
  br i1 %146, label %154, label %147

147:                                              ; preds = %140
  %148 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE to %"class.blink::QualifiedName"**), align 8
  %149 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %148, i64 0, i32 0, i32 0
  %150 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %149, align 8
  %151 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %150, i64 0, i32 3, i32 0, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %12, %152
  br i1 %153, label %154, label %223

154:                                              ; preds = %133, %147, %140
  %155 = bitcast %"class.WTF::Vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %155) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 0, i64 16, i1 false) #13
  %156 = bitcast %"class.blink::AtomicHTMLToken"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %156) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %156, i8 -86, i64 56, i1 false) #13
  %157 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %110, align 8
  %158 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %4, i64 0, i32 0
  store i32 2, i32* %158, align 8
  %159 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %157, i64 0, i32 3, i32 0, i32 0, i32 0
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %161 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %160, %"class.WTF::StringImpl"** %161, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %162, label %180, label %163

163:                                              ; preds = %154
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %180

168:                                              ; preds = %163
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  %171 = zext i32 %170 to i33
  %172 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %171, i33 1) #13
  %173 = extractvalue { i33, i1 } %172, 1
  %174 = extractvalue { i33, i1 } %172, 0
  %175 = icmp slt i33 %174, 0
  %176 = or i1 %173, %175
  br i1 %176, label %177, label %178, !prof !2

177:                                              ; preds = %168
  tail call void @llvm.trap() #13
  unreachable

178:                                              ; preds = %168
  %179 = trunc i33 %174 to i32
  store i32 %179, i32* %169, align 4
  br label %180

180:                                              ; preds = %154, %163, %178
  %181 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %4, i64 0, i32 2, i32 0, i32 0
  %182 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %4, i64 0, i32 6
  %183 = bitcast %"class.WTF::StringImpl"** %181 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %183, i8 0, i64 18, i1 false) #13
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %182, %"class.WTF::Vector"* nonnull dereferenceable(16) %6) #13
  call void @_ZN5blink15HTMLTreeBuilder15ProcessStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* nonnull %4) #13
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %156) #13
  %184 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %185 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %184, align 8
  %186 = icmp eq %"class.blink::Attribute"* %185, null
  br i1 %186, label %222, label %187, !prof !3

187:                                              ; preds = %180
  %188 = bitcast %"class.blink::Attribute"* %185 to i8*
  %189 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  %190 = load i32, i32* %189, align 4
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %220, label %192, !prof !2

192:                                              ; preds = %187
  %193 = zext i32 %190 to i64
  %194 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %185, i64 %193
  br label %195

195:                                              ; preds = %213, %192
  %196 = phi %"class.blink::Attribute"* [ %215, %213 ], [ %185, %192 ]
  %197 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %196, i64 0, i32 1, i32 0, i32 0, i32 0
  %198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %197, align 8
  %199 = icmp eq %"class.WTF::StringImpl"* %198, null
  br i1 %199, label %213, label %200

200:                                              ; preds = %195
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  br i1 %204, label %207, label %209

207:                                              ; preds = %200
  %208 = add i32 %206, -1
  store i32 %208, i32* %205, align 4
  br label %209

209:                                              ; preds = %207, %200
  %210 = phi i32 [ %208, %207 ], [ %206, %200 ]
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %209
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %198) #13
  br label %213

213:                                              ; preds = %212, %209, %195
  %214 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %196, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %214) #13
  %215 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %196, i64 1
  %216 = icmp eq %"class.blink::Attribute"* %215, %194
  br i1 %216, label %217, label %195

217:                                              ; preds = %213
  store i32 0, i32* %189, align 4
  %218 = bitcast %"class.WTF::Vector"* %6 to i8**
  %219 = load i8*, i8** %218, align 8
  br label %220

220:                                              ; preds = %217, %187
  %221 = phi i8* [ %219, %217 ], [ %188, %187 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %221) #13
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %184, align 8
  br label %222

222:                                              ; preds = %180, %220
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %155) #13
  call void @_ZN5blink15HTMLTreeBuilder15ProcessStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %348

223:                                              ; preds = %147
  %224 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE to %"class.blink::QualifiedName"**), align 8
  %225 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %224, i64 0, i32 0, i32 0
  %226 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %225, align 8
  %227 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %226, i64 0, i32 3, i32 0, i32 0, i32 0
  %228 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %227, align 8
  %229 = icmp eq %"class.WTF::StringImpl"* %12, %228
  br i1 %229, label %230, label %236

230:                                              ; preds = %223
  %231 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %232 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"* %231, %"class.blink::QualifiedName"* dereferenceable(8) %224) #13
  br i1 %232, label %233, label %348

233:                                              ; preds = %230
  %234 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %225, align 8
  %235 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %234, i64 0, i32 3
  tail call void @_ZN5blink16HTMLElementStack14PopUntilPoppedERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %231, %"class.WTF::AtomicString"* dereferenceable(8) %235) #13
  tail call void @_ZN5blink15HTMLTreeBuilder31ResetInsertionModeAppropriatelyEv(%"class.blink::HTMLTreeBuilder"* %0) #13
  tail call void @_ZN5blink15HTMLTreeBuilder15ProcessStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %348

236:                                              ; preds = %223
  %237 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kStyleTagE to %"class.blink::QualifiedName"**), align 8
  %238 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %237, i64 0, i32 0, i32 0
  %239 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %238, align 8
  %240 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %239, i64 0, i32 3, i32 0, i32 0, i32 0
  %241 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %240, align 8
  %242 = icmp eq %"class.WTF::StringImpl"* %12, %241
  br i1 %242, label %250, label %243

243:                                              ; preds = %236
  %244 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %245 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %244, i64 0, i32 0, i32 0
  %246 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %245, align 8
  %247 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %246, i64 0, i32 3, i32 0, i32 0, i32 0
  %248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %247, align 8
  %249 = icmp eq %"class.WTF::StringImpl"* %12, %248
  br i1 %249, label %250, label %252

250:                                              ; preds = %243, %236
  %251 = tail call zeroext i1 @_ZN5blink15HTMLTreeBuilder24ProcessStartTagForInHeadEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %348

252:                                              ; preds = %243
  %253 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE to %"class.blink::QualifiedName"**), align 8
  %254 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %253, i64 0, i32 0, i32 0
  %255 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %254, align 8
  %256 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %255, i64 0, i32 3, i32 0, i32 0, i32 0
  %257 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %256, align 8
  %258 = icmp eq %"class.WTF::StringImpl"* %12, %257
  br i1 %258, label %259, label %319

259:                                              ; preds = %252
  %260 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 6
  %261 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 6, i32 0, i32 0, i32 2
  %262 = load i32, i32* %261, align 4
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %290, label %264

264:                                              ; preds = %259
  %265 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  %266 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %265, i64 0, i32 0, i32 0
  br label %267

267:                                              ; preds = %286, %264
  %268 = phi i32 [ 0, %264 ], [ %287, %286 ]
  %269 = tail call dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %260, i32 %268) #13
  %270 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %269, i64 0, i32 0, i32 0, i32 0
  %271 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %270, align 8
  %272 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %266, align 8
  %273 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %271, %272
  br i1 %273, label %292, label %274

274:                                              ; preds = %267
  %275 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %271, i64 0, i32 3, i32 0, i32 0, i32 0
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  %277 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %272, i64 0, i32 3, i32 0, i32 0, i32 0
  %278 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %277, align 8
  %279 = icmp eq %"class.WTF::StringImpl"* %276, %278
  br i1 %279, label %280, label %286

280:                                              ; preds = %274
  %281 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %271, i64 0, i32 4, i32 0, i32 0, i32 0
  %282 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %281, align 8
  %283 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %272, i64 0, i32 4, i32 0, i32 0, i32 0
  %284 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %283, align 8
  %285 = icmp eq %"class.WTF::StringImpl"* %282, %284
  br i1 %285, label %292, label %286

286:                                              ; preds = %280, %274
  %287 = add nuw i32 %268, 1
  %288 = load i32, i32* %261, align 4
  %289 = icmp ult i32 %287, %288
  br i1 %289, label %267, label %290

290:                                              ; preds = %286, %259
  %291 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %291) #13
  br label %317

292:                                              ; preds = %267, %280
  %293 = tail call dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %260, i32 %268) #13
  %294 = icmp eq %"class.blink::Attribute"* %293, null
  %295 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %295) #13
  br i1 %294, label %317, label %296

296:                                              ; preds = %292
  %297 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %293, i64 0, i32 1, i32 0, i32 0, i32 0
  %298 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %297, align 8
  %299 = icmp eq %"class.WTF::StringImpl"* %298, null
  br i1 %299, label %300, label %304

300:                                              ; preds = %296
  %301 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %301, align 8
  %302 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %303 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %302, i64* %303, align 8
  br label %311

304:                                              ; preds = %296
  %305 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %298, %"class.WTF::StringImpl"** %305, align 8
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %298, i64 0, i32 1
  %307 = load i32, i32* %306, align 4
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %298, i64 1
  %309 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %310 = bitcast i8** %309 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %308, %"class.WTF::StringImpl"** %310, align 8
  br label %311

311:                                              ; preds = %300, %304
  %312 = phi i32 [ %307, %304 ], [ 0, %300 ]
  %313 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %312, i32* %313, align 8
  %314 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, [7 x i8]* nonnull dereferenceable(7) @.str)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %295) #13
  br i1 %314, label %315, label %319

315:                                              ; preds = %311
  %316 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  call void @_ZN5blink20HTMLConstructionSite43InsertSelfClosingHTMLElementDestroyingTokenEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %316, %"class.blink::AtomicHTMLToken"* %1) #13
  br label %348

317:                                              ; preds = %290, %292
  %318 = phi i8* [ %291, %290 ], [ %295, %292 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %318) #13
  br label %319

319:                                              ; preds = %317, %311, %252
  %320 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kFormTagE to %"class.blink::QualifiedName"**), align 8
  %321 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %320, i64 0, i32 0, i32 0
  %322 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %321, align 8
  %323 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %324 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %322, i64 0, i32 3, i32 0, i32 0, i32 0
  %325 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %324, align 8
  %326 = icmp eq %"class.WTF::StringImpl"* %323, %325
  br i1 %326, label %327, label %337

327:                                              ; preds = %319
  %328 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %329 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 4, i32 0, i32 0
  %330 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %329, align 8
  %331 = icmp eq %"class.blink::HTMLFormElement"* %330, null
  br i1 %331, label %335, label %332

332:                                              ; preds = %327
  %333 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %334 = call zeroext i1 @_ZNK5blink16HTMLElementStack22HasTemplateInHTMLScopeEv(%"class.blink::HTMLElementStack"* %333) #13
  br i1 %334, label %335, label %348

335:                                              ; preds = %327, %332
  call void @_ZN5blink20HTMLConstructionSite21InsertHTMLFormElementEPNS_15AtomicHTMLTokenEb(%"class.blink::HTMLConstructionSite"* %328, %"class.blink::AtomicHTMLToken"* %1, i1 zeroext true) #13
  %336 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  call void @_ZN5blink16HTMLElementStack3PopEv(%"class.blink::HTMLElementStack"* %336) #13
  br label %348

337:                                              ; preds = %319
  %338 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %339 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %338, i64 0, i32 0, i32 0
  %340 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %339, align 8
  %341 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %340, i64 0, i32 3, i32 0, i32 0, i32 0
  %342 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %341, align 8
  %343 = icmp eq %"class.WTF::StringImpl"* %323, %342
  br i1 %343, label %344, label %345

344:                                              ; preds = %337
  call void @_ZN5blink15HTMLTreeBuilder23ProcessTemplateStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %348

345:                                              ; preds = %337
  %346 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 11
  %347 = load i8, i8* %346, align 1, !range !4
  store i8 1, i8* %346, align 1
  call void @_ZN5blink15HTMLTreeBuilder24ProcessStartTagForInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  store i8 %347, i8* %346, align 1
  br label %348

348:                                              ; preds = %230, %315, %332, %345, %344, %335, %250, %233, %222, %129, %107, %28, %16
  ret void
}

declare void @_ZN5blink16HTMLElementStack24PopUntilTableScopeMarkerEv(%"class.blink::HTMLElementStack"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15HTMLTreeBuilder28ProcessTableEndTagForInTableEv(%"class.blink::HTMLTreeBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE to %"class.blink::QualifiedName"**), align 8
  %4 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"* %2, %"class.blink::QualifiedName"* dereferenceable(8) %3) #13
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %7, i64 0, i32 3
  tail call void @_ZN5blink16HTMLElementStack14PopUntilPoppedERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %2, %"class.WTF::AtomicString"* dereferenceable(8) %8) #13
  tail call void @_ZN5blink15HTMLTreeBuilder31ResetInsertionModeAppropriatelyEv(%"class.blink::HTMLTreeBuilder"* %0)
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ true, %5 ], [ false, %1 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder17DefaultForInitialEv(%"class.blink::HTMLTreeBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite27SetDefaultCompatibilityModeEv(%"class.blink::HTMLConstructionSite"* %2) #13
  %3 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 1, i32* %3, align 8
  ret void
}

declare void @_ZN5blink20HTMLConstructionSite32InsertHTMLHtmlStartTagBeforeHTMLEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder20DefaultForBeforeHTMLEv(%"class.blink::HTMLTreeBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::AtomicHTMLToken", align 8
  %3 = alloca %"class.WTF::Vector", align 8
  %4 = bitcast %"class.blink::AtomicHTMLToken"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 56, i1 false)
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = bitcast %"class.WTF::Vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #13
  %9 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %2, i64 0, i32 0
  store i32 2, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %7, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #13
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !2

28:                                               ; preds = %19
  tail call void @llvm.trap() #13
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %1, %14, %29
  %32 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %2, i64 0, i32 2, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %2, i64 0, i32 6
  %34 = bitcast %"class.WTF::StringImpl"** %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 18, i1 false) #13
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %33, %"class.WTF::Vector"* nonnull dereferenceable(16) %3) #13
  %35 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %35, align 8
  %37 = icmp eq %"class.blink::Attribute"* %36, null
  br i1 %37, label %73, label %38, !prof !3

38:                                               ; preds = %31
  %39 = bitcast %"class.blink::Attribute"* %36 to i8*
  %40 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %71, label %43, !prof !2

43:                                               ; preds = %38
  %44 = zext i32 %41 to i64
  %45 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 %44
  br label %46

46:                                               ; preds = %64, %43
  %47 = phi %"class.blink::Attribute"* [ %66, %64 ], [ %36, %43 ]
  %48 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 0, i32 1, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #13
  br label %64

64:                                               ; preds = %63, %60, %46
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %65) #13
  %66 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 1
  %67 = icmp eq %"class.blink::Attribute"* %66, %45
  br i1 %67, label %68, label %46

68:                                               ; preds = %64
  store i32 0, i32* %40, align 4
  %69 = bitcast %"class.WTF::Vector"* %3 to i8**
  %70 = load i8*, i8** %69, align 8
  br label %71

71:                                               ; preds = %68, %38
  %72 = phi i8* [ %70, %68 ], [ %39, %38 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %72) #13
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %35, align 8
  br label %73

73:                                               ; preds = %31, %71
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  %74 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  call void @_ZN5blink20HTMLConstructionSite32InsertHTMLHtmlStartTagBeforeHTMLEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %74, %"class.blink::AtomicHTMLToken"* nonnull %2) #13
  %75 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 2, i32* %75, align 8
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4) #13
  ret void
}

declare void @_ZN5blink20HTMLConstructionSite21InsertHTMLHeadElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder20DefaultForBeforeHeadEv(%"class.blink::HTMLTreeBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::AtomicHTMLToken", align 8
  %3 = alloca %"class.WTF::Vector", align 8
  %4 = bitcast %"class.blink::AtomicHTMLToken"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 56, i1 false)
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHeadTagE to %"class.blink::QualifiedName"**), align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = bitcast %"class.WTF::Vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #13
  %9 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %2, i64 0, i32 0
  store i32 2, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %7, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #13
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !2

28:                                               ; preds = %19
  tail call void @llvm.trap() #13
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %1, %14, %29
  %32 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %2, i64 0, i32 2, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %2, i64 0, i32 6
  %34 = bitcast %"class.WTF::StringImpl"** %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 18, i1 false) #13
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %33, %"class.WTF::Vector"* nonnull dereferenceable(16) %3) #13
  %35 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %35, align 8
  %37 = icmp eq %"class.blink::Attribute"* %36, null
  br i1 %37, label %73, label %38, !prof !3

38:                                               ; preds = %31
  %39 = bitcast %"class.blink::Attribute"* %36 to i8*
  %40 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %71, label %43, !prof !2

43:                                               ; preds = %38
  %44 = zext i32 %41 to i64
  %45 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 %44
  br label %46

46:                                               ; preds = %64, %43
  %47 = phi %"class.blink::Attribute"* [ %66, %64 ], [ %36, %43 ]
  %48 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 0, i32 1, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #13
  br label %64

64:                                               ; preds = %63, %60, %46
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %65) #13
  %66 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 1
  %67 = icmp eq %"class.blink::Attribute"* %66, %45
  br i1 %67, label %68, label %46

68:                                               ; preds = %64
  store i32 0, i32* %40, align 4
  %69 = bitcast %"class.WTF::Vector"* %3 to i8**
  %70 = load i8*, i8** %69, align 8
  br label %71

71:                                               ; preds = %68, %38
  %72 = phi i8* [ %70, %68 ], [ %39, %38 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %72) #13
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %35, align 8
  br label %73

73:                                               ; preds = %31, %71
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  call void @_ZN5blink15HTMLTreeBuilder15ProcessStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* nonnull %2)
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder16DefaultForInHeadEv(%"class.blink::HTMLTreeBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::AtomicHTMLToken", align 8
  %3 = alloca %"class.WTF::Vector", align 8
  %4 = bitcast %"class.blink::AtomicHTMLToken"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 56, i1 false)
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHeadTagE to %"class.blink::QualifiedName"**), align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = bitcast %"class.WTF::Vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #13
  %9 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %2, i64 0, i32 0
  store i32 3, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %7, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #13
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !2

28:                                               ; preds = %19
  tail call void @llvm.trap() #13
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %1, %14, %29
  %32 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %2, i64 0, i32 2, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %2, i64 0, i32 6
  %34 = bitcast %"class.WTF::StringImpl"** %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 18, i1 false) #13
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %33, %"class.WTF::Vector"* nonnull dereferenceable(16) %3) #13
  %35 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %35, align 8
  %37 = icmp eq %"class.blink::Attribute"* %36, null
  br i1 %37, label %73, label %38, !prof !3

38:                                               ; preds = %31
  %39 = bitcast %"class.blink::Attribute"* %36 to i8*
  %40 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %71, label %43, !prof !2

43:                                               ; preds = %38
  %44 = zext i32 %41 to i64
  %45 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 %44
  br label %46

46:                                               ; preds = %64, %43
  %47 = phi %"class.blink::Attribute"* [ %66, %64 ], [ %36, %43 ]
  %48 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 0, i32 1, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #13
  br label %64

64:                                               ; preds = %63, %60, %46
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %65) #13
  %66 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 1
  %67 = icmp eq %"class.blink::Attribute"* %66, %45
  br i1 %67, label %68, label %46

68:                                               ; preds = %64
  store i32 0, i32* %40, align 4
  %69 = bitcast %"class.WTF::Vector"* %3 to i8**
  %70 = load i8*, i8** %69, align 8
  br label %71

71:                                               ; preds = %68, %38
  %72 = phi i8* [ %70, %68 ], [ %39, %38 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %72) #13
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %35, align 8
  br label %73

73:                                               ; preds = %31, %71
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  call void @_ZN5blink15HTMLTreeBuilder13ProcessEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* nonnull %2)
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4) #13
  ret void
}

declare void @_ZN5blink20HTMLConstructionSite21InsertHTMLBodyElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #1

declare void @_ZN5blink16HTMLElementStack19PushHTMLHeadElementEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack"*, %"class.blink::HTMLStackItem"*) local_unnamed_addr #1

declare void @_ZN5blink16HTMLElementStack21RemoveHTMLHeadElementEPNS_7ElementE(%"class.blink::HTMLElementStack"*, %"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder19DefaultForAfterHeadEv(%"class.blink::HTMLTreeBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::AtomicHTMLToken", align 8
  %3 = alloca %"class.WTF::Vector", align 8
  %4 = bitcast %"class.blink::AtomicHTMLToken"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 56, i1 false)
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE to %"class.blink::QualifiedName"**), align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = bitcast %"class.WTF::Vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #13
  %9 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %2, i64 0, i32 0
  store i32 2, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %7, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #13
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !2

28:                                               ; preds = %19
  tail call void @llvm.trap() #13
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %1, %14, %29
  %32 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %2, i64 0, i32 2, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %2, i64 0, i32 6
  %34 = bitcast %"class.WTF::StringImpl"** %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 18, i1 false) #13
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %33, %"class.WTF::Vector"* nonnull dereferenceable(16) %3) #13
  %35 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %35, align 8
  %37 = icmp eq %"class.blink::Attribute"* %36, null
  br i1 %37, label %73, label %38, !prof !3

38:                                               ; preds = %31
  %39 = bitcast %"class.blink::Attribute"* %36 to i8*
  %40 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %71, label %43, !prof !2

43:                                               ; preds = %38
  %44 = zext i32 %41 to i64
  %45 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 %44
  br label %46

46:                                               ; preds = %64, %43
  %47 = phi %"class.blink::Attribute"* [ %66, %64 ], [ %36, %43 ]
  %48 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 0, i32 1, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #13
  br label %64

64:                                               ; preds = %63, %60, %46
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %65) #13
  %66 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 1
  %67 = icmp eq %"class.blink::Attribute"* %66, %45
  br i1 %67, label %68, label %46

68:                                               ; preds = %64
  store i32 0, i32* %40, align 4
  %69 = bitcast %"class.WTF::Vector"* %3 to i8**
  %70 = load i8*, i8** %69, align 8
  br label %71

71:                                               ; preds = %68, %38
  %72 = phi i8* [ %70, %68 ], [ %39, %38 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %72) #13
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %35, align 8
  br label %73

73:                                               ; preds = %31, %71
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  call void @_ZN5blink15HTMLTreeBuilder15ProcessStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* nonnull %2)
  %74 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 0
  store i8 1, i8* %74, align 8
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15HTMLTreeBuilder32ProcessCaptionEndTagForInCaptionEv(%"class.blink::HTMLTreeBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kCaptionTagE to %"class.blink::QualifiedName"**), align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %5, i64 0, i32 3
  %7 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %2, %"class.WTF::AtomicString"* dereferenceable(8) %6) #13
  br i1 %7, label %8, label %14

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite22GenerateImpliedEndTagsEv(%"class.blink::HTMLConstructionSite"* %9) #13
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %10, i64 0, i32 3
  tail call void @_ZN5blink16HTMLElementStack14PopUntilPoppedERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %2, %"class.WTF::AtomicString"* dereferenceable(8) %11) #13
  %12 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 6
  tail call void @_ZN5blink25HTMLFormattingElementList17ClearToLastMarkerEv(%"class.blink::HTMLFormattingElementList"* %12) #13
  %13 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 9, i32* %13, align 8
  br label %14

14:                                               ; preds = %1, %8
  %15 = phi i1 [ true, %8 ], [ false, %1 ]
  ret i1 %15
}

declare void @_ZN5blink16HTMLElementStack28PopUntilTableBodyScopeMarkerEv(%"class.blink::HTMLElementStack"*) local_unnamed_addr #1

declare void @_ZN5blink16HTMLElementStack27PopUntilTableRowScopeMarkerEv(%"class.blink::HTMLElementStack"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15HTMLTreeBuilder23ProcessTrEndTagForInRowEv(%"class.blink::HTMLTreeBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE to %"class.blink::QualifiedName"**), align 8
  %4 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"* %2, %"class.blink::QualifiedName"* dereferenceable(8) %3) #13
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  tail call void @_ZN5blink16HTMLElementStack27PopUntilTableRowScopeMarkerEv(%"class.blink::HTMLElementStack"* %2) #13
  tail call void @_ZN5blink16HTMLElementStack3PopEv(%"class.blink::HTMLElementStack"* %2) #13
  %6 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 13, i32* %6, align 8
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i1 [ true, %5 ], [ false, %1 ]
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder24DefaultForInHeadNoscriptEv(%"class.blink::HTMLTreeBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::AtomicHTMLToken", align 8
  %3 = alloca %"class.WTF::Vector", align 8
  %4 = bitcast %"class.blink::AtomicHTMLToken"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 56, i1 false)
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kNoscriptTagE to %"class.blink::QualifiedName"**), align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = bitcast %"class.WTF::Vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #13
  %9 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %2, i64 0, i32 0
  store i32 3, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %7, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #13
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !2

28:                                               ; preds = %19
  tail call void @llvm.trap() #13
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %1, %14, %29
  %32 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %2, i64 0, i32 2, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %2, i64 0, i32 6
  %34 = bitcast %"class.WTF::StringImpl"** %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 18, i1 false) #13
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %33, %"class.WTF::Vector"* nonnull dereferenceable(16) %3) #13
  %35 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %35, align 8
  %37 = icmp eq %"class.blink::Attribute"* %36, null
  br i1 %37, label %73, label %38, !prof !3

38:                                               ; preds = %31
  %39 = bitcast %"class.blink::Attribute"* %36 to i8*
  %40 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %71, label %43, !prof !2

43:                                               ; preds = %38
  %44 = zext i32 %41 to i64
  %45 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 %44
  br label %46

46:                                               ; preds = %64, %43
  %47 = phi %"class.blink::Attribute"* [ %66, %64 ], [ %36, %43 ]
  %48 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 0, i32 1, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #13
  br label %64

64:                                               ; preds = %63, %60, %46
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %65) #13
  %66 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 1
  %67 = icmp eq %"class.blink::Attribute"* %66, %45
  br i1 %67, label %68, label %46

68:                                               ; preds = %64
  store i32 0, i32* %40, align 4
  %69 = bitcast %"class.WTF::Vector"* %3 to i8**
  %70 = load i8*, i8** %69, align 8
  br label %71

71:                                               ; preds = %68, %38
  %72 = phi i8* [ %70, %68 ], [ %39, %38 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %72) #13
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %35, align 8
  br label %73

73:                                               ; preds = %31, %71
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  call void @_ZN5blink15HTMLTreeBuilder13ProcessEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* nonnull %2)
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4) #13
  ret void
}

declare zeroext i1 @_ZNK5blink16HTMLElementStack13InSelectScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink20HTMLConstructionSite28InsertHTMLHtmlStartTagInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15HTMLTreeBuilder26ProcessBodyEndTagForInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE to %"class.blink::QualifiedName"**), align 8
  %5 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %6, i64 0, i32 3
  %8 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack7InScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %3, %"class.WTF::AtomicString"* dereferenceable(8) %7) #13
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 18, i32* %10, align 8
  br label %11

11:                                               ; preds = %2, %9
  %12 = phi i1 [ true, %9 ], [ false, %2 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder30ProcessAnyOtherEndTagForInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %5 = tail call %"class.blink::HTMLElementStack::ElementRecord"* @_ZNK5blink16HTMLElementStack9TopRecordEv(%"class.blink::HTMLElementStack"* %4) #13
  %6 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %28, %2
  %11 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %5, %2 ], [ %30, %28 ]
  %12 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %13, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %15, %16
  br i1 %17, label %18, label %26

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %13, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %20, %21
  br i1 %22, label %23, label %26

23:                                               ; preds = %18
  tail call void @_ZN5blink20HTMLConstructionSite35GenerateImpliedEndTagsWithExclusionERKN3WTF12AtomicStringE(%"class.blink::HTMLConstructionSite"* %3, %"class.WTF::AtomicString"* dereferenceable(8) %6) #13
  %24 = bitcast %"class.blink::HTMLStackItem"* %13 to %"class.blink::Element"**
  %25 = load %"class.blink::Element"*, %"class.blink::Element"** %24, align 8
  tail call void @_ZN5blink16HTMLElementStack14PopUntilPoppedEPNS_7ElementE(%"class.blink::HTMLElementStack"* %4, %"class.blink::Element"* %25) #13
  br label %31

26:                                               ; preds = %10, %18
  %27 = tail call zeroext i1 @_ZNK5blink13HTMLStackItem13IsSpecialNodeEv(%"class.blink::HTMLStackItem"* %13)
  br i1 %27, label %31, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %11, i64 0, i32 1, i32 0, i32 0
  %30 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %29, align 8
  br label %10

31:                                               ; preds = %26, %23
  ret void
}

declare void @_ZN5blink16HTMLElementStack14PopUntilPoppedEPNS_7ElementE(%"class.blink::HTMLElementStack"*, %"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13HTMLStackItem13IsSpecialNodeEv(%"class.blink::HTMLStackItem"*) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names6kMiTagE to %"class.blink::QualifiedName"**), align 8
  %3 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %4, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %6, %8
  br i1 %9, label %10, label %16

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %12, %14
  br i1 %15, label %667, label %16

16:                                               ; preds = %1, %10
  %17 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names6kMoTagE to %"class.blink::QualifiedName"**), align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %6, %21
  br i1 %22, label %23, label %29

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 4, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %25, %27
  br i1 %28, label %667, label %29

29:                                               ; preds = %16, %23
  %30 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names6kMnTagE to %"class.blink::QualifiedName"**), align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %6, %34
  br i1 %35, label %36, label %42

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 4, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %38, %40
  br i1 %41, label %667, label %42

42:                                               ; preds = %29, %36
  %43 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names6kMsTagE to %"class.blink::QualifiedName"**), align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 3, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %6, %47
  br i1 %48, label %49, label %55

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 4, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %51, %53
  br i1 %54, label %667, label %55

55:                                               ; preds = %42, %49
  %56 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names9kMtextTagE to %"class.blink::QualifiedName"**), align 8
  %57 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %56, i64 0, i32 0, i32 0
  %58 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 3, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %6, %60
  br i1 %61, label %62, label %68

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 4, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %64, %66
  br i1 %67, label %667, label %68

68:                                               ; preds = %55, %62
  %69 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names17kAnnotationXmlTagE to %"class.blink::QualifiedName"**), align 8
  %70 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %69, i64 0, i32 0, i32 0
  %71 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %71, i64 0, i32 3, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %6, %73
  br i1 %74, label %75, label %81

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %71, i64 0, i32 4, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %77, %79
  br i1 %80, label %667, label %81

81:                                               ; preds = %68, %75
  %82 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names17kForeignObjectTagE to %"class.blink::QualifiedName"**), align 8
  %83 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %82, i64 0, i32 0, i32 0
  %84 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %84, i64 0, i32 3, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %6, %86
  br i1 %87, label %88, label %94

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %84, i64 0, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %90, %92
  br i1 %93, label %667, label %94

94:                                               ; preds = %81, %88
  %95 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names8kDescTagE to %"class.blink::QualifiedName"**), align 8
  %96 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %95, i64 0, i32 0, i32 0
  %97 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 3, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %6, %99
  br i1 %100, label %101, label %107

101:                                              ; preds = %94
  %102 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 4, i32 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %103, %105
  br i1 %106, label %667, label %107

107:                                              ; preds = %94, %101
  %108 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names9kTitleTagE to %"class.blink::QualifiedName"**), align 8
  %109 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %108, i64 0, i32 0, i32 0
  %110 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 3, i32 0, i32 0, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %6, %112
  br i1 %113, label %114, label %120

114:                                              ; preds = %107
  %115 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 4, i32 0, i32 0, i32 0
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %116, %118
  br i1 %119, label %667, label %120

120:                                              ; preds = %107, %114
  %121 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 4
  %122 = load i8, i8* %121, align 8, !range !4
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %667

124:                                              ; preds = %120
  %125 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %126 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %125, i64 0, i32 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %127, %129
  br i1 %130, label %131, label %667

131:                                              ; preds = %124
  %132 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kAddressTagE to %"class.blink::QualifiedName"**), align 8
  %133 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %132, i64 0, i32 0, i32 0
  %134 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %134, i64 0, i32 3, i32 0, i32 0, i32 0
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %6, %136
  br i1 %137, label %667, label %138

138:                                              ; preds = %131
  %139 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kAreaTagE to %"class.blink::QualifiedName"**), align 8
  %140 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %139, i64 0, i32 0, i32 0
  %141 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %141, i64 0, i32 3, i32 0, i32 0, i32 0
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %6, %143
  br i1 %144, label %667, label %145

145:                                              ; preds = %138
  %146 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kAppletTagE to %"class.blink::QualifiedName"**), align 8
  %147 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %146, i64 0, i32 0, i32 0
  %148 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %147, align 8
  %149 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %148, i64 0, i32 3, i32 0, i32 0, i32 0
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %6, %150
  br i1 %151, label %667, label %152

152:                                              ; preds = %145
  %153 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kArticleTagE to %"class.blink::QualifiedName"**), align 8
  %154 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %153, i64 0, i32 0, i32 0
  %155 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %154, align 8
  %156 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %155, i64 0, i32 3, i32 0, i32 0, i32 0
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %6, %157
  br i1 %158, label %667, label %159

159:                                              ; preds = %152
  %160 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kAsideTagE to %"class.blink::QualifiedName"**), align 8
  %161 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %160, i64 0, i32 0, i32 0
  %162 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %162, i64 0, i32 3, i32 0, i32 0, i32 0
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %6, %164
  br i1 %165, label %667, label %166

166:                                              ; preds = %159
  %167 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBaseTagE to %"class.blink::QualifiedName"**), align 8
  %168 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %167, i64 0, i32 0, i32 0
  %169 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %168, align 8
  %170 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %169, i64 0, i32 3, i32 0, i32 0, i32 0
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %170, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %6, %171
  br i1 %172, label %667, label %173

173:                                              ; preds = %166
  %174 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kBasefontTagE to %"class.blink::QualifiedName"**), align 8
  %175 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %174, i64 0, i32 0, i32 0
  %176 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %175, align 8
  %177 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %176, i64 0, i32 3, i32 0, i32 0, i32 0
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %6, %178
  br i1 %179, label %667, label %180

180:                                              ; preds = %173
  %181 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kBgsoundTagE to %"class.blink::QualifiedName"**), align 8
  %182 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %181, i64 0, i32 0, i32 0
  %183 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %182, align 8
  %184 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %183, i64 0, i32 3, i32 0, i32 0, i32 0
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %184, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %6, %185
  br i1 %186, label %667, label %187

187:                                              ; preds = %180
  %188 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names14kBlockquoteTagE to %"class.blink::QualifiedName"**), align 8
  %189 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %188, i64 0, i32 0, i32 0
  %190 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %189, align 8
  %191 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %190, i64 0, i32 3, i32 0, i32 0, i32 0
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %191, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %6, %192
  br i1 %193, label %667, label %194

194:                                              ; preds = %187
  %195 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE to %"class.blink::QualifiedName"**), align 8
  %196 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %195, i64 0, i32 0, i32 0
  %197 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %196, align 8
  %198 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %197, i64 0, i32 3, i32 0, i32 0, i32 0
  %199 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %198, align 8
  %200 = icmp eq %"class.WTF::StringImpl"* %6, %199
  br i1 %200, label %667, label %201

201:                                              ; preds = %194
  %202 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE to %"class.blink::QualifiedName"**), align 8
  %203 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %202, i64 0, i32 0, i32 0
  %204 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %203, align 8
  %205 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %204, i64 0, i32 3, i32 0, i32 0, i32 0
  %206 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %205, align 8
  %207 = icmp eq %"class.WTF::StringImpl"* %6, %206
  br i1 %207, label %667, label %208

208:                                              ; preds = %201
  %209 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kButtonTagE to %"class.blink::QualifiedName"**), align 8
  %210 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %209, i64 0, i32 0, i32 0
  %211 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %210, align 8
  %212 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %211, i64 0, i32 3, i32 0, i32 0, i32 0
  %213 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %212, align 8
  %214 = icmp eq %"class.WTF::StringImpl"* %6, %213
  br i1 %214, label %667, label %215

215:                                              ; preds = %208
  %216 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kCaptionTagE to %"class.blink::QualifiedName"**), align 8
  %217 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %216, i64 0, i32 0, i32 0
  %218 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %217, align 8
  %219 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %218, i64 0, i32 3, i32 0, i32 0, i32 0
  %220 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  %221 = icmp eq %"class.WTF::StringImpl"* %6, %220
  br i1 %221, label %667, label %222

222:                                              ; preds = %215
  %223 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kCenterTagE to %"class.blink::QualifiedName"**), align 8
  %224 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %223, i64 0, i32 0, i32 0
  %225 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %224, align 8
  %226 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %225, i64 0, i32 3, i32 0, i32 0, i32 0
  %227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %226, align 8
  %228 = icmp eq %"class.WTF::StringImpl"* %6, %227
  br i1 %228, label %667, label %229

229:                                              ; preds = %222
  %230 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kColTagE to %"class.blink::QualifiedName"**), align 8
  %231 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %230, i64 0, i32 0, i32 0
  %232 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %231, align 8
  %233 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %232, i64 0, i32 3, i32 0, i32 0, i32 0
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %233, align 8
  %235 = icmp eq %"class.WTF::StringImpl"* %6, %234
  br i1 %235, label %667, label %236

236:                                              ; preds = %229
  %237 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kColgroupTagE to %"class.blink::QualifiedName"**), align 8
  %238 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %237, i64 0, i32 0, i32 0
  %239 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %238, align 8
  %240 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %239, i64 0, i32 3, i32 0, i32 0, i32 0
  %241 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %240, align 8
  %242 = icmp eq %"class.WTF::StringImpl"* %6, %241
  br i1 %242, label %667, label %243

243:                                              ; preds = %236
  %244 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kCommandTagE to %"class.blink::QualifiedName"**), align 8
  %245 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %244, i64 0, i32 0, i32 0
  %246 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %245, align 8
  %247 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %246, i64 0, i32 3, i32 0, i32 0, i32 0
  %248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %247, align 8
  %249 = icmp eq %"class.WTF::StringImpl"* %6, %248
  br i1 %249, label %667, label %250

250:                                              ; preds = %243
  %251 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kDdTagE to %"class.blink::QualifiedName"**), align 8
  %252 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %251, i64 0, i32 0, i32 0
  %253 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %252, align 8
  %254 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %253, i64 0, i32 3, i32 0, i32 0, i32 0
  %255 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %254, align 8
  %256 = icmp eq %"class.WTF::StringImpl"* %6, %255
  br i1 %256, label %667, label %257

257:                                              ; preds = %250
  %258 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kDetailsTagE to %"class.blink::QualifiedName"**), align 8
  %259 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %258, i64 0, i32 0, i32 0
  %260 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %259, align 8
  %261 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %260, i64 0, i32 3, i32 0, i32 0, i32 0
  %262 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %261, align 8
  %263 = icmp eq %"class.WTF::StringImpl"* %6, %262
  br i1 %263, label %667, label %264

264:                                              ; preds = %257
  %265 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kDirTagE to %"class.blink::QualifiedName"**), align 8
  %266 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %265, i64 0, i32 0, i32 0
  %267 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %266, align 8
  %268 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %267, i64 0, i32 3, i32 0, i32 0, i32 0
  %269 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %268, align 8
  %270 = icmp eq %"class.WTF::StringImpl"* %6, %269
  br i1 %270, label %667, label %271

271:                                              ; preds = %264
  %272 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kDivTagE to %"class.blink::QualifiedName"**), align 8
  %273 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %272, i64 0, i32 0, i32 0
  %274 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %273, align 8
  %275 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %274, i64 0, i32 3, i32 0, i32 0, i32 0
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  %277 = icmp eq %"class.WTF::StringImpl"* %6, %276
  br i1 %277, label %667, label %278

278:                                              ; preds = %271
  %279 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kDlTagE to %"class.blink::QualifiedName"**), align 8
  %280 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %279, i64 0, i32 0, i32 0
  %281 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %280, align 8
  %282 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %281, i64 0, i32 3, i32 0, i32 0, i32 0
  %283 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %282, align 8
  %284 = icmp eq %"class.WTF::StringImpl"* %6, %283
  br i1 %284, label %667, label %285

285:                                              ; preds = %278
  %286 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kDtTagE to %"class.blink::QualifiedName"**), align 8
  %287 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %286, i64 0, i32 0, i32 0
  %288 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %287, align 8
  %289 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %288, i64 0, i32 3, i32 0, i32 0, i32 0
  %290 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %291 = icmp eq %"class.WTF::StringImpl"* %6, %290
  br i1 %291, label %667, label %292

292:                                              ; preds = %285
  %293 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kEmbedTagE to %"class.blink::QualifiedName"**), align 8
  %294 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %293, i64 0, i32 0, i32 0
  %295 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %294, align 8
  %296 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %295, i64 0, i32 3, i32 0, i32 0, i32 0
  %297 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %296, align 8
  %298 = icmp eq %"class.WTF::StringImpl"* %6, %297
  br i1 %298, label %667, label %299

299:                                              ; preds = %292
  %300 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kFieldsetTagE to %"class.blink::QualifiedName"**), align 8
  %301 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %300, i64 0, i32 0, i32 0
  %302 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %301, align 8
  %303 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %302, i64 0, i32 3, i32 0, i32 0, i32 0
  %304 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %303, align 8
  %305 = icmp eq %"class.WTF::StringImpl"* %6, %304
  br i1 %305, label %667, label %306

306:                                              ; preds = %299
  %307 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names14kFigcaptionTagE to %"class.blink::QualifiedName"**), align 8
  %308 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %307, i64 0, i32 0, i32 0
  %309 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %308, align 8
  %310 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %309, i64 0, i32 3, i32 0, i32 0, i32 0
  %311 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %310, align 8
  %312 = icmp eq %"class.WTF::StringImpl"* %6, %311
  br i1 %312, label %667, label %313

313:                                              ; preds = %306
  %314 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kFigureTagE to %"class.blink::QualifiedName"**), align 8
  %315 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %314, i64 0, i32 0, i32 0
  %316 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %315, align 8
  %317 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %316, i64 0, i32 3, i32 0, i32 0, i32 0
  %318 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %317, align 8
  %319 = icmp eq %"class.WTF::StringImpl"* %6, %318
  br i1 %319, label %667, label %320

320:                                              ; preds = %313
  %321 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kFooterTagE to %"class.blink::QualifiedName"**), align 8
  %322 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %321, i64 0, i32 0, i32 0
  %323 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %322, align 8
  %324 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %323, i64 0, i32 3, i32 0, i32 0, i32 0
  %325 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %324, align 8
  %326 = icmp eq %"class.WTF::StringImpl"* %6, %325
  br i1 %326, label %667, label %327

327:                                              ; preds = %320
  %328 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kFormTagE to %"class.blink::QualifiedName"**), align 8
  %329 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %328, i64 0, i32 0, i32 0
  %330 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %329, align 8
  %331 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %330, i64 0, i32 3, i32 0, i32 0, i32 0
  %332 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %331, align 8
  %333 = icmp eq %"class.WTF::StringImpl"* %6, %332
  br i1 %333, label %667, label %334

334:                                              ; preds = %327
  %335 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kFrameTagE to %"class.blink::QualifiedName"**), align 8
  %336 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %335, i64 0, i32 0, i32 0
  %337 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %336, align 8
  %338 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %337, i64 0, i32 3, i32 0, i32 0, i32 0
  %339 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %338, align 8
  %340 = icmp eq %"class.WTF::StringImpl"* %6, %339
  br i1 %340, label %667, label %341

341:                                              ; preds = %334
  %342 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kFramesetTagE to %"class.blink::QualifiedName"**), align 8
  %343 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %342, i64 0, i32 0, i32 0
  %344 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %343, align 8
  %345 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %344, i64 0, i32 3, i32 0, i32 0, i32 0
  %346 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %345, align 8
  %347 = icmp eq %"class.WTF::StringImpl"* %6, %346
  br i1 %347, label %667, label %348

348:                                              ; preds = %341
  %349 = tail call zeroext i1 @_ZNK5blink13HTMLStackItem23IsNumberedHeaderElementEv(%"class.blink::HTMLStackItem"* %0)
  br i1 %349, label %667, label %350

350:                                              ; preds = %348
  %351 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHeadTagE to %"class.blink::QualifiedName"**), align 8
  %352 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %351, i64 0, i32 0, i32 0
  %353 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %352, align 8
  %354 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %355 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %353, i64 0, i32 3, i32 0, i32 0, i32 0
  %356 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %355, align 8
  %357 = icmp eq %"class.WTF::StringImpl"* %354, %356
  br i1 %357, label %667, label %358

358:                                              ; preds = %350
  %359 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kHeaderTagE to %"class.blink::QualifiedName"**), align 8
  %360 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %359, i64 0, i32 0, i32 0
  %361 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %360, align 8
  %362 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %361, i64 0, i32 3, i32 0, i32 0, i32 0
  %363 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %362, align 8
  %364 = icmp eq %"class.WTF::StringImpl"* %354, %363
  br i1 %364, label %667, label %365

365:                                              ; preds = %358
  %366 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kHgroupTagE to %"class.blink::QualifiedName"**), align 8
  %367 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %366, i64 0, i32 0, i32 0
  %368 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %367, align 8
  %369 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %368, i64 0, i32 3, i32 0, i32 0, i32 0
  %370 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %369, align 8
  %371 = icmp eq %"class.WTF::StringImpl"* %354, %370
  br i1 %371, label %667, label %372

372:                                              ; preds = %365
  %373 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kHrTagE to %"class.blink::QualifiedName"**), align 8
  %374 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %373, i64 0, i32 0, i32 0
  %375 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %374, align 8
  %376 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %375, i64 0, i32 3, i32 0, i32 0, i32 0
  %377 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %376, align 8
  %378 = icmp eq %"class.WTF::StringImpl"* %354, %377
  br i1 %378, label %667, label %379

379:                                              ; preds = %372
  %380 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %381 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %380, i64 0, i32 0, i32 0
  %382 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %381, align 8
  %383 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %382, i64 0, i32 3, i32 0, i32 0, i32 0
  %384 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %383, align 8
  %385 = icmp eq %"class.WTF::StringImpl"* %354, %384
  br i1 %385, label %667, label %386

386:                                              ; preds = %379
  %387 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kIFrameTagE to %"class.blink::QualifiedName"**), align 8
  %388 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %387, i64 0, i32 0, i32 0
  %389 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %388, align 8
  %390 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %389, i64 0, i32 3, i32 0, i32 0, i32 0
  %391 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %390, align 8
  %392 = icmp eq %"class.WTF::StringImpl"* %354, %391
  br i1 %392, label %667, label %393

393:                                              ; preds = %386
  %394 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE to %"class.blink::QualifiedName"**), align 8
  %395 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %394, i64 0, i32 0, i32 0
  %396 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %395, align 8
  %397 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %396, i64 0, i32 3, i32 0, i32 0, i32 0
  %398 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %397, align 8
  %399 = icmp eq %"class.WTF::StringImpl"* %354, %398
  br i1 %399, label %667, label %400

400:                                              ; preds = %393
  %401 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE to %"class.blink::QualifiedName"**), align 8
  %402 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %401, i64 0, i32 0, i32 0
  %403 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %402, align 8
  %404 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %403, i64 0, i32 3, i32 0, i32 0, i32 0
  %405 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %404, align 8
  %406 = icmp eq %"class.WTF::StringImpl"* %354, %405
  br i1 %406, label %667, label %407

407:                                              ; preds = %400
  %408 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kLiTagE to %"class.blink::QualifiedName"**), align 8
  %409 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %408, i64 0, i32 0, i32 0
  %410 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %409, align 8
  %411 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %410, i64 0, i32 3, i32 0, i32 0, i32 0
  %412 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %411, align 8
  %413 = icmp eq %"class.WTF::StringImpl"* %354, %412
  br i1 %413, label %667, label %414

414:                                              ; preds = %407
  %415 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kLinkTagE to %"class.blink::QualifiedName"**), align 8
  %416 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %415, i64 0, i32 0, i32 0
  %417 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %416, align 8
  %418 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %417, i64 0, i32 3, i32 0, i32 0, i32 0
  %419 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %418, align 8
  %420 = icmp eq %"class.WTF::StringImpl"* %354, %419
  br i1 %420, label %667, label %421

421:                                              ; preds = %414
  %422 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kListingTagE to %"class.blink::QualifiedName"**), align 8
  %423 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %422, i64 0, i32 0, i32 0
  %424 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %423, align 8
  %425 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %424, i64 0, i32 3, i32 0, i32 0, i32 0
  %426 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %425, align 8
  %427 = icmp eq %"class.WTF::StringImpl"* %354, %426
  br i1 %427, label %667, label %428

428:                                              ; preds = %421
  %429 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMainTagE to %"class.blink::QualifiedName"**), align 8
  %430 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %429, i64 0, i32 0, i32 0
  %431 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %430, align 8
  %432 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %431, i64 0, i32 3, i32 0, i32 0, i32 0
  %433 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %432, align 8
  %434 = icmp eq %"class.WTF::StringImpl"* %354, %433
  br i1 %434, label %667, label %435

435:                                              ; preds = %428
  %436 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kMarqueeTagE to %"class.blink::QualifiedName"**), align 8
  %437 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %436, i64 0, i32 0, i32 0
  %438 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %437, align 8
  %439 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %438, i64 0, i32 3, i32 0, i32 0, i32 0
  %440 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %439, align 8
  %441 = icmp eq %"class.WTF::StringImpl"* %354, %440
  br i1 %441, label %667, label %442

442:                                              ; preds = %435
  %443 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMenuTagE to %"class.blink::QualifiedName"**), align 8
  %444 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %443, i64 0, i32 0, i32 0
  %445 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %444, align 8
  %446 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %445, i64 0, i32 3, i32 0, i32 0, i32 0
  %447 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %446, align 8
  %448 = icmp eq %"class.WTF::StringImpl"* %354, %447
  br i1 %448, label %667, label %449

449:                                              ; preds = %442
  %450 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMetaTagE to %"class.blink::QualifiedName"**), align 8
  %451 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %450, i64 0, i32 0, i32 0
  %452 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %451, align 8
  %453 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %452, i64 0, i32 3, i32 0, i32 0, i32 0
  %454 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %453, align 8
  %455 = icmp eq %"class.WTF::StringImpl"* %354, %454
  br i1 %455, label %667, label %456

456:                                              ; preds = %449
  %457 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kNavTagE to %"class.blink::QualifiedName"**), align 8
  %458 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %457, i64 0, i32 0, i32 0
  %459 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %458, align 8
  %460 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %459, i64 0, i32 3, i32 0, i32 0, i32 0
  %461 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %460, align 8
  %462 = icmp eq %"class.WTF::StringImpl"* %354, %461
  br i1 %462, label %667, label %463

463:                                              ; preds = %456
  %464 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kNoembedTagE to %"class.blink::QualifiedName"**), align 8
  %465 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %464, i64 0, i32 0, i32 0
  %466 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %465, align 8
  %467 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %466, i64 0, i32 3, i32 0, i32 0, i32 0
  %468 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %467, align 8
  %469 = icmp eq %"class.WTF::StringImpl"* %354, %468
  br i1 %469, label %667, label %470

470:                                              ; preds = %463
  %471 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kNoframesTagE to %"class.blink::QualifiedName"**), align 8
  %472 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %471, i64 0, i32 0, i32 0
  %473 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %472, align 8
  %474 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %473, i64 0, i32 3, i32 0, i32 0, i32 0
  %475 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %474, align 8
  %476 = icmp eq %"class.WTF::StringImpl"* %354, %475
  br i1 %476, label %667, label %477

477:                                              ; preds = %470
  %478 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kNoscriptTagE to %"class.blink::QualifiedName"**), align 8
  %479 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %478, i64 0, i32 0, i32 0
  %480 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %479, align 8
  %481 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %480, i64 0, i32 3, i32 0, i32 0, i32 0
  %482 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %481, align 8
  %483 = icmp eq %"class.WTF::StringImpl"* %354, %482
  br i1 %483, label %667, label %484

484:                                              ; preds = %477
  %485 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kObjectTagE to %"class.blink::QualifiedName"**), align 8
  %486 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %485, i64 0, i32 0, i32 0
  %487 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %486, align 8
  %488 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %487, i64 0, i32 3, i32 0, i32 0, i32 0
  %489 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %488, align 8
  %490 = icmp eq %"class.WTF::StringImpl"* %354, %489
  br i1 %490, label %667, label %491

491:                                              ; preds = %484
  %492 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kOlTagE to %"class.blink::QualifiedName"**), align 8
  %493 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %492, i64 0, i32 0, i32 0
  %494 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %493, align 8
  %495 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %494, i64 0, i32 3, i32 0, i32 0, i32 0
  %496 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %495, align 8
  %497 = icmp eq %"class.WTF::StringImpl"* %354, %496
  br i1 %497, label %667, label %498

498:                                              ; preds = %491
  %499 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kPTagE to %"class.blink::QualifiedName"**), align 8
  %500 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %499, i64 0, i32 0, i32 0
  %501 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %500, align 8
  %502 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %501, i64 0, i32 3, i32 0, i32 0, i32 0
  %503 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %502, align 8
  %504 = icmp eq %"class.WTF::StringImpl"* %354, %503
  br i1 %504, label %667, label %505

505:                                              ; preds = %498
  %506 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kParamTagE to %"class.blink::QualifiedName"**), align 8
  %507 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %506, i64 0, i32 0, i32 0
  %508 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %507, align 8
  %509 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %508, i64 0, i32 3, i32 0, i32 0, i32 0
  %510 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %509, align 8
  %511 = icmp eq %"class.WTF::StringImpl"* %354, %510
  br i1 %511, label %667, label %512

512:                                              ; preds = %505
  %513 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names13kPlaintextTagE to %"class.blink::QualifiedName"**), align 8
  %514 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %513, i64 0, i32 0, i32 0
  %515 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %514, align 8
  %516 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %515, i64 0, i32 3, i32 0, i32 0, i32 0
  %517 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %516, align 8
  %518 = icmp eq %"class.WTF::StringImpl"* %354, %517
  br i1 %518, label %667, label %519

519:                                              ; preds = %512
  %520 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kPreTagE to %"class.blink::QualifiedName"**), align 8
  %521 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %520, i64 0, i32 0, i32 0
  %522 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %521, align 8
  %523 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %522, i64 0, i32 3, i32 0, i32 0, i32 0
  %524 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %523, align 8
  %525 = icmp eq %"class.WTF::StringImpl"* %354, %524
  br i1 %525, label %667, label %526

526:                                              ; preds = %519
  %527 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %528 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %527, i64 0, i32 0, i32 0
  %529 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %528, align 8
  %530 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %529, i64 0, i32 3, i32 0, i32 0, i32 0
  %531 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %530, align 8
  %532 = icmp eq %"class.WTF::StringImpl"* %354, %531
  br i1 %532, label %667, label %533

533:                                              ; preds = %526
  %534 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kSectionTagE to %"class.blink::QualifiedName"**), align 8
  %535 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %534, i64 0, i32 0, i32 0
  %536 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %535, align 8
  %537 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %536, i64 0, i32 3, i32 0, i32 0, i32 0
  %538 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %537, align 8
  %539 = icmp eq %"class.WTF::StringImpl"* %354, %538
  br i1 %539, label %667, label %540

540:                                              ; preds = %533
  %541 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE to %"class.blink::QualifiedName"**), align 8
  %542 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %541, i64 0, i32 0, i32 0
  %543 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %542, align 8
  %544 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %543, i64 0, i32 3, i32 0, i32 0, i32 0
  %545 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %544, align 8
  %546 = icmp eq %"class.WTF::StringImpl"* %354, %545
  br i1 %546, label %667, label %547

547:                                              ; preds = %540
  %548 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kStyleTagE to %"class.blink::QualifiedName"**), align 8
  %549 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %548, i64 0, i32 0, i32 0
  %550 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %549, align 8
  %551 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %550, i64 0, i32 3, i32 0, i32 0, i32 0
  %552 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %551, align 8
  %553 = icmp eq %"class.WTF::StringImpl"* %354, %552
  br i1 %553, label %667, label %554

554:                                              ; preds = %547
  %555 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kSummaryTagE to %"class.blink::QualifiedName"**), align 8
  %556 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %555, i64 0, i32 0, i32 0
  %557 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %556, align 8
  %558 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %557, i64 0, i32 3, i32 0, i32 0, i32 0
  %559 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %558, align 8
  %560 = icmp eq %"class.WTF::StringImpl"* %354, %559
  br i1 %560, label %667, label %561

561:                                              ; preds = %554
  %562 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE to %"class.blink::QualifiedName"**), align 8
  %563 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %562, i64 0, i32 0, i32 0
  %564 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %563, align 8
  %565 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %564, i64 0, i32 3, i32 0, i32 0, i32 0
  %566 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %565, align 8
  %567 = icmp eq %"class.WTF::StringImpl"* %354, %566
  br i1 %567, label %667, label %568

568:                                              ; preds = %561
  %569 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE to %"class.blink::QualifiedName"**), align 8
  %570 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %569, i64 0, i32 0, i32 0
  %571 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %570, align 8
  %572 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %571, i64 0, i32 3, i32 0, i32 0, i32 0
  %573 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %572, align 8
  %574 = icmp eq %"class.WTF::StringImpl"* %354, %573
  br i1 %574, label %575, label %580

575:                                              ; preds = %568
  %576 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %577 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %571, i64 0, i32 4, i32 0, i32 0, i32 0
  %578 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %577, align 8
  %579 = icmp eq %"class.WTF::StringImpl"* %576, %578
  br i1 %579, label %667, label %580

580:                                              ; preds = %575, %568
  %581 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE to %"class.blink::QualifiedName"**), align 8
  %582 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %581, i64 0, i32 0, i32 0
  %583 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %582, align 8
  %584 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %583, i64 0, i32 3, i32 0, i32 0, i32 0
  %585 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %584, align 8
  %586 = icmp eq %"class.WTF::StringImpl"* %354, %585
  br i1 %586, label %587, label %592

587:                                              ; preds = %580
  %588 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %589 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %583, i64 0, i32 4, i32 0, i32 0, i32 0
  %590 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %589, align 8
  %591 = icmp eq %"class.WTF::StringImpl"* %588, %590
  br i1 %591, label %667, label %592

592:                                              ; preds = %587, %580
  %593 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE to %"class.blink::QualifiedName"**), align 8
  %594 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %593, i64 0, i32 0, i32 0
  %595 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %594, align 8
  %596 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %595, i64 0, i32 3, i32 0, i32 0, i32 0
  %597 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %596, align 8
  %598 = icmp eq %"class.WTF::StringImpl"* %354, %597
  br i1 %598, label %599, label %604

599:                                              ; preds = %592
  %600 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %601 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %595, i64 0, i32 4, i32 0, i32 0, i32 0
  %602 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %601, align 8
  %603 = icmp eq %"class.WTF::StringImpl"* %600, %602
  br i1 %603, label %667, label %604

604:                                              ; preds = %592, %599
  %605 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE to %"class.blink::QualifiedName"**), align 8
  %606 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %605, i64 0, i32 0, i32 0
  %607 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %606, align 8
  %608 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %607, i64 0, i32 3, i32 0, i32 0, i32 0
  %609 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %608, align 8
  %610 = icmp eq %"class.WTF::StringImpl"* %354, %609
  br i1 %610, label %667, label %611

611:                                              ; preds = %604
  %612 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %613 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %612, i64 0, i32 0, i32 0
  %614 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %613, align 8
  %615 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %614, i64 0, i32 3, i32 0, i32 0, i32 0
  %616 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %615, align 8
  %617 = icmp eq %"class.WTF::StringImpl"* %354, %616
  br i1 %617, label %667, label %618

618:                                              ; preds = %611
  %619 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTextareaTagE to %"class.blink::QualifiedName"**), align 8
  %620 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %619, i64 0, i32 0, i32 0
  %621 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %620, align 8
  %622 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %621, i64 0, i32 3, i32 0, i32 0, i32 0
  %623 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %622, align 8
  %624 = icmp eq %"class.WTF::StringImpl"* %354, %623
  br i1 %624, label %667, label %625

625:                                              ; preds = %618
  %626 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE to %"class.blink::QualifiedName"**), align 8
  %627 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %626, i64 0, i32 0, i32 0
  %628 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %627, align 8
  %629 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %628, i64 0, i32 3, i32 0, i32 0, i32 0
  %630 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %629, align 8
  %631 = icmp eq %"class.WTF::StringImpl"* %354, %630
  br i1 %631, label %667, label %632

632:                                              ; preds = %625
  %633 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTitleTagE to %"class.blink::QualifiedName"**), align 8
  %634 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %633, i64 0, i32 0, i32 0
  %635 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %634, align 8
  %636 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %635, i64 0, i32 3, i32 0, i32 0, i32 0
  %637 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %636, align 8
  %638 = icmp eq %"class.WTF::StringImpl"* %354, %637
  br i1 %638, label %667, label %639

639:                                              ; preds = %632
  %640 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE to %"class.blink::QualifiedName"**), align 8
  %641 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %640, i64 0, i32 0, i32 0
  %642 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %641, align 8
  %643 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %642, i64 0, i32 3, i32 0, i32 0, i32 0
  %644 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %643, align 8
  %645 = icmp eq %"class.WTF::StringImpl"* %354, %644
  br i1 %645, label %667, label %646

646:                                              ; preds = %639
  %647 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kUlTagE to %"class.blink::QualifiedName"**), align 8
  %648 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %647, i64 0, i32 0, i32 0
  %649 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %648, align 8
  %650 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %649, i64 0, i32 3, i32 0, i32 0, i32 0
  %651 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %650, align 8
  %652 = icmp eq %"class.WTF::StringImpl"* %354, %651
  br i1 %652, label %667, label %653

653:                                              ; preds = %646
  %654 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kWbrTagE to %"class.blink::QualifiedName"**), align 8
  %655 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %654, i64 0, i32 0, i32 0
  %656 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %655, align 8
  %657 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %656, i64 0, i32 3, i32 0, i32 0, i32 0
  %658 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %657, align 8
  %659 = icmp eq %"class.WTF::StringImpl"* %354, %658
  br i1 %659, label %667, label %660

660:                                              ; preds = %653
  %661 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kXmpTagE to %"class.blink::QualifiedName"**), align 8
  %662 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %661, i64 0, i32 0, i32 0
  %663 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %662, align 8
  %664 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %663, i64 0, i32 3, i32 0, i32 0, i32 0
  %665 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %664, align 8
  %666 = icmp eq %"class.WTF::StringImpl"* %354, %665
  br label %667

667:                                              ; preds = %120, %575, %587, %124, %131, %138, %145, %152, %159, %166, %173, %180, %187, %194, %201, %208, %215, %222, %229, %236, %243, %250, %257, %264, %271, %278, %285, %292, %299, %306, %313, %320, %327, %334, %341, %348, %350, %358, %365, %372, %379, %386, %393, %400, %407, %414, %421, %428, %435, %442, %449, %456, %463, %470, %477, %484, %491, %498, %505, %512, %519, %526, %533, %540, %547, %554, %561, %599, %604, %611, %618, %625, %632, %639, %646, %653, %660, %10, %23, %36, %49, %62, %75, %88, %101, %114
  %668 = phi i1 [ true, %114 ], [ true, %101 ], [ true, %88 ], [ true, %75 ], [ true, %62 ], [ true, %49 ], [ true, %36 ], [ true, %23 ], [ true, %10 ], [ true, %120 ], [ true, %653 ], [ true, %646 ], [ true, %639 ], [ true, %632 ], [ true, %625 ], [ true, %618 ], [ true, %611 ], [ true, %604 ], [ true, %599 ], [ true, %561 ], [ true, %554 ], [ true, %547 ], [ true, %540 ], [ true, %533 ], [ true, %526 ], [ true, %519 ], [ true, %512 ], [ true, %505 ], [ true, %498 ], [ true, %491 ], [ true, %484 ], [ true, %477 ], [ true, %470 ], [ true, %463 ], [ true, %456 ], [ true, %449 ], [ true, %442 ], [ true, %435 ], [ true, %428 ], [ true, %421 ], [ true, %414 ], [ true, %407 ], [ true, %400 ], [ true, %393 ], [ true, %386 ], [ true, %379 ], [ true, %372 ], [ true, %365 ], [ true, %358 ], [ true, %350 ], [ true, %348 ], [ true, %341 ], [ true, %334 ], [ true, %327 ], [ true, %320 ], [ true, %313 ], [ true, %306 ], [ true, %299 ], [ true, %292 ], [ true, %285 ], [ true, %278 ], [ true, %271 ], [ true, %264 ], [ true, %257 ], [ true, %250 ], [ true, %243 ], [ true, %236 ], [ true, %229 ], [ true, %222 ], [ true, %215 ], [ true, %208 ], [ true, %201 ], [ true, %194 ], [ true, %187 ], [ true, %180 ], [ true, %173 ], [ true, %166 ], [ true, %159 ], [ true, %152 ], [ true, %145 ], [ true, %138 ], [ true, %131 ], [ %666, %660 ], [ false, %124 ], [ true, %587 ], [ true, %575 ]
  ret i1 %668
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder21CallTheAdoptionAgencyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HTMLFormattingElementList::Bookmark", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 6
  %6 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %8 = getelementptr inbounds %"class.blink::HTMLFormattingElementList::Bookmark", %"class.blink::HTMLFormattingElementList::Bookmark"* %3, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::HTMLFormattingElementList::Bookmark", %"class.blink::HTMLFormattingElementList::Bookmark"* %3, i64 0, i32 1
  br label %10

10:                                               ; preds = %96, %2
  %11 = phi i32 [ 0, %2 ], [ %101, %96 ]
  %12 = call %"class.blink::Element"* @_ZN5blink25HTMLFormattingElementList29ClosestElementInScopeWithNameERKN3WTF12AtomicStringE(%"class.blink::HTMLFormattingElementList"* %5, %"class.WTF::AtomicString"* dereferenceable(8) %6) #13
  %13 = icmp eq %"class.blink::Element"* %12, null
  br i1 %13, label %14, label %40

14:                                               ; preds = %10
  %15 = call %"class.blink::HTMLElementStack::ElementRecord"* @_ZNK5blink16HTMLElementStack9TopRecordEv(%"class.blink::HTMLElementStack"* %7) #13
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %17, i64 0, i32 0, i32 0, i32 0
  br label %19

19:                                               ; preds = %37, %14
  %20 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %15, %14 ], [ %39, %37 ]
  %21 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %22, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %24, %25
  br i1 %26, label %27, label %35

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %22, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %29, %30
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  call void @_ZN5blink20HTMLConstructionSite35GenerateImpliedEndTagsWithExclusionERKN3WTF12AtomicStringE(%"class.blink::HTMLConstructionSite"* %4, %"class.WTF::AtomicString"* dereferenceable(8) %6) #13
  %33 = bitcast %"class.blink::HTMLStackItem"* %22 to %"class.blink::Element"**
  %34 = load %"class.blink::Element"*, %"class.blink::Element"** %33, align 8
  call void @_ZN5blink16HTMLElementStack14PopUntilPoppedEPNS_7ElementE(%"class.blink::HTMLElementStack"* %7, %"class.blink::Element"* %34) #13
  br label %103

35:                                               ; preds = %27, %19
  %36 = call zeroext i1 @_ZNK5blink13HTMLStackItem13IsSpecialNodeEv(%"class.blink::HTMLStackItem"* %22) #13
  br i1 %36, label %103, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %20, i64 0, i32 1, i32 0, i32 0
  %39 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %38, align 8
  br label %19

40:                                               ; preds = %10
  %41 = call zeroext i1 @_ZNK5blink16HTMLElementStack8ContainsEPNS_7ElementE(%"class.blink::HTMLElementStack"* %7, %"class.blink::Element"* nonnull %12) #13
  br i1 %41, label %42, label %44

42:                                               ; preds = %40
  %43 = call zeroext i1 @_ZNK5blink16HTMLElementStack7InScopeEPNS_7ElementE(%"class.blink::HTMLElementStack"* %7, %"class.blink::Element"* nonnull %12) #13
  br i1 %43, label %44, label %103

44:                                               ; preds = %42, %40
  %45 = call %"class.blink::HTMLElementStack::ElementRecord"* @_ZNK5blink16HTMLElementStack4FindEPNS_7ElementE(%"class.blink::HTMLElementStack"* %7, %"class.blink::Element"* nonnull %12) #13
  %46 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %45, null
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZN5blink25HTMLFormattingElementList6RemoveEPNS_7ElementE(%"class.blink::HTMLFormattingElementList"* %5, %"class.blink::Element"* nonnull %12) #13
  br label %103

48:                                               ; preds = %44
  %49 = call %"class.blink::HTMLElementStack::ElementRecord"* @_ZNK5blink16HTMLElementStack33FurthestBlockForFormattingElementEPNS_7ElementE(%"class.blink::HTMLElementStack"* %7, %"class.blink::Element"* nonnull %12) #13
  %50 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %49, null
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZN5blink16HTMLElementStack14PopUntilPoppedEPNS_7ElementE(%"class.blink::HTMLElementStack"* %7, %"class.blink::Element"* nonnull %12) #13
  call void @_ZN5blink25HTMLFormattingElementList6RemoveEPNS_7ElementE(%"class.blink::HTMLFormattingElementList"* %5, %"class.blink::Element"* nonnull %12) #13
  br label %103

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %45, i64 0, i32 1, i32 0, i32 0
  %54 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %55, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %57 = call { i8, %"class.blink::HTMLFormattingElementList::Entry"* } @_ZN5blink25HTMLFormattingElementList11BookmarkForEPNS_7ElementE(%"class.blink::HTMLFormattingElementList"* %5, %"class.blink::Element"* nonnull %12) #13
  %58 = extractvalue { i8, %"class.blink::HTMLFormattingElementList::Entry"* } %57, 0
  store i8 %58, i8* %8, align 8
  %59 = extractvalue { i8, %"class.blink::HTMLFormattingElementList::Entry"* } %57, 1
  store %"class.blink::HTMLFormattingElementList::Entry"* %59, %"class.blink::HTMLFormattingElementList::Entry"** %9, align 8
  %60 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %49, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %60, align 8
  %62 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %61 to %"class.blink::Element"***
  %63 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %61, i64 0, i32 1, i32 0, i32 0
  %64 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %63, align 8
  %65 = load %"class.blink::Element"**, %"class.blink::Element"*** %62, align 8
  %66 = load %"class.blink::Element"*, %"class.blink::Element"** %65, align 8
  %67 = call zeroext i1 @_ZN5blink25HTMLFormattingElementList8ContainsEPNS_7ElementE(%"class.blink::HTMLFormattingElementList"* %5, %"class.blink::Element"* %66) #13
  br i1 %67, label %71, label %68

68:                                               ; preds = %52
  %69 = load %"class.blink::Element"**, %"class.blink::Element"*** %62, align 8
  %70 = load %"class.blink::Element"*, %"class.blink::Element"** %69, align 8
  call void @_ZN5blink16HTMLElementStack6RemoveEPNS_7ElementE(%"class.blink::HTMLElementStack"* %7, %"class.blink::Element"* %70) #13
  br label %88

71:                                               ; preds = %52
  %72 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %61, %45
  br i1 %72, label %96, label %73

73:                                               ; preds = %71
  %74 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %61, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %74, align 8
  %76 = call %"class.blink::HTMLStackItem"* @_ZN5blink20HTMLConstructionSite27CreateElementFromSavedTokenEPNS_13HTMLStackItemE(%"class.blink::HTMLConstructionSite"* %4, %"class.blink::HTMLStackItem"* %75) #13
  %77 = load %"class.blink::Element"**, %"class.blink::Element"*** %62, align 8
  %78 = load %"class.blink::Element"*, %"class.blink::Element"** %77, align 8
  %79 = call %"class.blink::HTMLFormattingElementList::Entry"* @_ZN5blink25HTMLFormattingElementList4FindEPNS_7ElementE(%"class.blink::HTMLFormattingElementList"* %5, %"class.blink::Element"* %78) #13
  %80 = ptrtoint %"class.blink::HTMLStackItem"* %76 to i64
  %81 = bitcast %"class.blink::HTMLFormattingElementList::Entry"* %79 to i64*
  store atomic i64 %80, i64* %81 monotonic, align 8
  %82 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %87, label %84

84:                                               ; preds = %73
  %85 = bitcast %"class.blink::HTMLStackItem"* %76 to i8*
  %86 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %85) #13
  br label %87

87:                                               ; preds = %73, %84
  call void @_ZN5blink16HTMLElementStack13ElementRecord14ReplaceElementEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack::ElementRecord"* %61, %"class.blink::HTMLStackItem"* %76) #13
  store i8 1, i8* %8, align 8
  store %"class.blink::HTMLFormattingElementList::Entry"* %79, %"class.blink::HTMLFormattingElementList::Entry"** %9, align 8
  call void @_ZN5blink20HTMLConstructionSite8ReparentEPNS_16HTMLElementStack13ElementRecordES3_(%"class.blink::HTMLConstructionSite"* %4, %"class.blink::HTMLElementStack::ElementRecord"* %61, %"class.blink::HTMLElementStack::ElementRecord"* nonnull %49) #13
  br label %88

88:                                               ; preds = %87, %68
  %89 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %61, %87 ], [ %49, %68 ]
  %90 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %64 to %"class.blink::Element"***
  %91 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %64, i64 0, i32 1, i32 0, i32 0
  %92 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %91, align 8
  %93 = load %"class.blink::Element"**, %"class.blink::Element"*** %90, align 8
  %94 = load %"class.blink::Element"*, %"class.blink::Element"** %93, align 8
  %95 = call zeroext i1 @_ZN5blink25HTMLFormattingElementList8ContainsEPNS_7ElementE(%"class.blink::HTMLFormattingElementList"* %5, %"class.blink::Element"* %94) #13
  br i1 %95, label %107, label %104

96:                                               ; preds = %133, %155, %136, %107, %71
  %97 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %49, %71 ], [ %89, %107 ], [ %128, %136 ], [ %92, %155 ], [ %128, %133 ]
  call void @_ZN5blink20HTMLConstructionSite24InsertAlreadyParsedChildEPNS_13HTMLStackItemEPNS_16HTMLElementStack13ElementRecordE(%"class.blink::HTMLConstructionSite"* %4, %"class.blink::HTMLStackItem"* %56, %"class.blink::HTMLElementStack::ElementRecord"* %97) #13
  %98 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %45, i64 0, i32 0, i32 0, i32 0
  %99 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %98, align 8
  %100 = call %"class.blink::HTMLStackItem"* @_ZN5blink20HTMLConstructionSite27CreateElementFromSavedTokenEPNS_13HTMLStackItemE(%"class.blink::HTMLConstructionSite"* %4, %"class.blink::HTMLStackItem"* %99) #13
  call void @_ZN5blink20HTMLConstructionSite15TakeAllChildrenEPNS_13HTMLStackItemEPNS_16HTMLElementStack13ElementRecordE(%"class.blink::HTMLConstructionSite"* %4, %"class.blink::HTMLStackItem"* %100, %"class.blink::HTMLElementStack::ElementRecord"* nonnull %49) #13
  call void @_ZN5blink20HTMLConstructionSite8ReparentEPNS_16HTMLElementStack13ElementRecordEPNS_13HTMLStackItemE(%"class.blink::HTMLConstructionSite"* %4, %"class.blink::HTMLElementStack::ElementRecord"* nonnull %49, %"class.blink::HTMLStackItem"* %100) #13
  call void @_ZN5blink25HTMLFormattingElementList6SwapToEPNS_7ElementEPNS_13HTMLStackItemERKNS0_8BookmarkE(%"class.blink::HTMLFormattingElementList"* %5, %"class.blink::Element"* nonnull %12, %"class.blink::HTMLStackItem"* %100, %"class.blink::HTMLFormattingElementList::Bookmark"* nonnull dereferenceable(16) %3) #13
  call void @_ZN5blink16HTMLElementStack6RemoveEPNS_7ElementE(%"class.blink::HTMLElementStack"* %7, %"class.blink::Element"* nonnull %12) #13
  call void @_ZN5blink16HTMLElementStack11InsertAboveEPNS_13HTMLStackItemEPNS0_13ElementRecordE(%"class.blink::HTMLElementStack"* %7, %"class.blink::HTMLStackItem"* %100, %"class.blink::HTMLElementStack::ElementRecord"* nonnull %49) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  %101 = add nuw nsw i32 %11, 1
  %102 = icmp eq i32 %101, 8
  br i1 %102, label %103, label %10

103:                                              ; preds = %42, %96, %35, %32, %51, %47
  ret void

104:                                              ; preds = %88
  %105 = load %"class.blink::Element"**, %"class.blink::Element"*** %90, align 8
  %106 = load %"class.blink::Element"*, %"class.blink::Element"** %105, align 8
  call void @_ZN5blink16HTMLElementStack6RemoveEPNS_7ElementE(%"class.blink::HTMLElementStack"* %7, %"class.blink::Element"* %106) #13
  br label %127

107:                                              ; preds = %88
  %108 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %64, %45
  br i1 %108, label %96, label %109

109:                                              ; preds = %107
  %110 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %64, i64 0, i32 0, i32 0, i32 0
  %111 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %110, align 8
  %112 = call %"class.blink::HTMLStackItem"* @_ZN5blink20HTMLConstructionSite27CreateElementFromSavedTokenEPNS_13HTMLStackItemE(%"class.blink::HTMLConstructionSite"* %4, %"class.blink::HTMLStackItem"* %111) #13
  %113 = load %"class.blink::Element"**, %"class.blink::Element"*** %90, align 8
  %114 = load %"class.blink::Element"*, %"class.blink::Element"** %113, align 8
  %115 = call %"class.blink::HTMLFormattingElementList::Entry"* @_ZN5blink25HTMLFormattingElementList4FindEPNS_7ElementE(%"class.blink::HTMLFormattingElementList"* %5, %"class.blink::Element"* %114) #13
  %116 = ptrtoint %"class.blink::HTMLStackItem"* %112 to i64
  %117 = bitcast %"class.blink::HTMLFormattingElementList::Entry"* %115 to i64*
  store atomic i64 %116, i64* %117 monotonic, align 8
  %118 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %123, label %120

120:                                              ; preds = %109
  %121 = bitcast %"class.blink::HTMLStackItem"* %112 to i8*
  %122 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %121) #13
  br label %123

123:                                              ; preds = %120, %109
  call void @_ZN5blink16HTMLElementStack13ElementRecord14ReplaceElementEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack::ElementRecord"* %64, %"class.blink::HTMLStackItem"* %112) #13
  %124 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %89, %49
  br i1 %124, label %125, label %126

125:                                              ; preds = %123
  store i8 1, i8* %8, align 8
  store %"class.blink::HTMLFormattingElementList::Entry"* %115, %"class.blink::HTMLFormattingElementList::Entry"** %9, align 8
  br label %126

126:                                              ; preds = %125, %123
  call void @_ZN5blink20HTMLConstructionSite8ReparentEPNS_16HTMLElementStack13ElementRecordES3_(%"class.blink::HTMLConstructionSite"* %4, %"class.blink::HTMLElementStack::ElementRecord"* %64, %"class.blink::HTMLElementStack::ElementRecord"* %89) #13
  br label %127

127:                                              ; preds = %126, %104
  %128 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %64, %126 ], [ %89, %104 ]
  %129 = bitcast %"class.blink::HTMLElementStack::ElementRecord"* %92 to %"class.blink::Element"***
  %130 = load %"class.blink::Element"**, %"class.blink::Element"*** %129, align 8
  %131 = load %"class.blink::Element"*, %"class.blink::Element"** %130, align 8
  %132 = call zeroext i1 @_ZN5blink25HTMLFormattingElementList8ContainsEPNS_7ElementE(%"class.blink::HTMLFormattingElementList"* %5, %"class.blink::Element"* %131) #13
  br i1 %132, label %136, label %133

133:                                              ; preds = %127
  %134 = load %"class.blink::Element"**, %"class.blink::Element"*** %129, align 8
  %135 = load %"class.blink::Element"*, %"class.blink::Element"** %134, align 8
  call void @_ZN5blink16HTMLElementStack6RemoveEPNS_7ElementE(%"class.blink::HTMLElementStack"* %7, %"class.blink::Element"* %135) #13
  br label %96

136:                                              ; preds = %127
  %137 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %92, %45
  br i1 %137, label %96, label %138

138:                                              ; preds = %136
  %139 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %92, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %139, align 8
  %141 = call %"class.blink::HTMLStackItem"* @_ZN5blink20HTMLConstructionSite27CreateElementFromSavedTokenEPNS_13HTMLStackItemE(%"class.blink::HTMLConstructionSite"* %4, %"class.blink::HTMLStackItem"* %140) #13
  %142 = load %"class.blink::Element"**, %"class.blink::Element"*** %129, align 8
  %143 = load %"class.blink::Element"*, %"class.blink::Element"** %142, align 8
  %144 = call %"class.blink::HTMLFormattingElementList::Entry"* @_ZN5blink25HTMLFormattingElementList4FindEPNS_7ElementE(%"class.blink::HTMLFormattingElementList"* %5, %"class.blink::Element"* %143) #13
  %145 = ptrtoint %"class.blink::HTMLStackItem"* %141 to i64
  %146 = bitcast %"class.blink::HTMLFormattingElementList::Entry"* %144 to i64*
  store atomic i64 %145, i64* %146 monotonic, align 8
  %147 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %152, label %149

149:                                              ; preds = %138
  %150 = bitcast %"class.blink::HTMLStackItem"* %141 to i8*
  %151 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %150) #13
  br label %152

152:                                              ; preds = %149, %138
  call void @_ZN5blink16HTMLElementStack13ElementRecord14ReplaceElementEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack::ElementRecord"* %92, %"class.blink::HTMLStackItem"* %141) #13
  %153 = icmp eq %"class.blink::HTMLElementStack::ElementRecord"* %128, %49
  br i1 %153, label %154, label %155

154:                                              ; preds = %152
  store i8 1, i8* %8, align 8
  store %"class.blink::HTMLFormattingElementList::Entry"* %144, %"class.blink::HTMLFormattingElementList::Entry"** %9, align 8
  br label %155

155:                                              ; preds = %154, %152
  call void @_ZN5blink20HTMLConstructionSite8ReparentEPNS_16HTMLElementStack13ElementRecordES3_(%"class.blink::HTMLConstructionSite"* %4, %"class.blink::HTMLElementStack::ElementRecord"* %92, %"class.blink::HTMLElementStack::ElementRecord"* %128) #13
  br label %96
}

declare zeroext i1 @_ZNK5blink16HTMLElementStack7InScopeEPNS_7ElementE(%"class.blink::HTMLElementStack"*, %"class.blink::Element"*) local_unnamed_addr #1

declare %"class.blink::HTMLElementStack::ElementRecord"* @_ZNK5blink16HTMLElementStack4FindEPNS_7ElementE(%"class.blink::HTMLElementStack"*, %"class.blink::Element"*) local_unnamed_addr #1

declare %"class.blink::HTMLElementStack::ElementRecord"* @_ZNK5blink16HTMLElementStack33FurthestBlockForFormattingElementEPNS_7ElementE(%"class.blink::HTMLElementStack"*, %"class.blink::Element"*) local_unnamed_addr #1

declare { i8, %"class.blink::HTMLFormattingElementList::Entry"* } @_ZN5blink25HTMLFormattingElementList11BookmarkForEPNS_7ElementE(%"class.blink::HTMLFormattingElementList"*, %"class.blink::Element"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink25HTMLFormattingElementList8ContainsEPNS_7ElementE(%"class.blink::HTMLFormattingElementList"*, %"class.blink::Element"*) local_unnamed_addr #1

declare %"class.blink::HTMLStackItem"* @_ZN5blink20HTMLConstructionSite27CreateElementFromSavedTokenEPNS_13HTMLStackItemE(%"class.blink::HTMLConstructionSite"*, %"class.blink::HTMLStackItem"*) local_unnamed_addr #1

declare %"class.blink::HTMLFormattingElementList::Entry"* @_ZN5blink25HTMLFormattingElementList4FindEPNS_7ElementE(%"class.blink::HTMLFormattingElementList"*, %"class.blink::Element"*) local_unnamed_addr #1

declare void @_ZN5blink16HTMLElementStack13ElementRecord14ReplaceElementEPNS_13HTMLStackItemE(%"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLStackItem"*) local_unnamed_addr #1

declare void @_ZN5blink20HTMLConstructionSite8ReparentEPNS_16HTMLElementStack13ElementRecordES3_(%"class.blink::HTMLConstructionSite"*, %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"*) local_unnamed_addr #1

declare void @_ZN5blink20HTMLConstructionSite24InsertAlreadyParsedChildEPNS_13HTMLStackItemEPNS_16HTMLElementStack13ElementRecordE(%"class.blink::HTMLConstructionSite"*, %"class.blink::HTMLStackItem"*, %"class.blink::HTMLElementStack::ElementRecord"*) local_unnamed_addr #1

declare void @_ZN5blink20HTMLConstructionSite15TakeAllChildrenEPNS_13HTMLStackItemEPNS_16HTMLElementStack13ElementRecordE(%"class.blink::HTMLConstructionSite"*, %"class.blink::HTMLStackItem"*, %"class.blink::HTMLElementStack::ElementRecord"*) local_unnamed_addr #1

declare void @_ZN5blink20HTMLConstructionSite8ReparentEPNS_16HTMLElementStack13ElementRecordEPNS_13HTMLStackItemE(%"class.blink::HTMLConstructionSite"*, %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLStackItem"*) local_unnamed_addr #1

declare void @_ZN5blink25HTMLFormattingElementList6SwapToEPNS_7ElementEPNS_13HTMLStackItemERKNS0_8BookmarkE(%"class.blink::HTMLFormattingElementList"*, %"class.blink::Element"*, %"class.blink::HTMLStackItem"*, %"class.blink::HTMLFormattingElementList::Bookmark"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink16HTMLElementStack11InsertAboveEPNS_13HTMLStackItemEPNS0_13ElementRecordE(%"class.blink::HTMLElementStack"*, %"class.blink::HTMLStackItem"*, %"class.blink::HTMLElementStack::ElementRecord"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder27ProcessEndTagForInTableBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE to %"class.blink::QualifiedName"**), align 8
  %5 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %6, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %8, %10
  br i1 %11, label %26, label %12

12:                                               ; preds = %2
  %13 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE to %"class.blink::QualifiedName"**), align 8
  %14 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %8, %17
  br i1 %18, label %26, label %19

19:                                               ; preds = %12
  %20 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE to %"class.blink::QualifiedName"**), align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %22, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %8, %24
  br i1 %25, label %26, label %31

26:                                               ; preds = %2, %12, %19
  %27 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %28 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %27, %"class.WTF::AtomicString"* dereferenceable(8) %3) #13
  br i1 %28, label %29, label %108

29:                                               ; preds = %26
  tail call void @_ZN5blink16HTMLElementStack28PopUntilTableBodyScopeMarkerEv(%"class.blink::HTMLElementStack"* %27) #13
  tail call void @_ZN5blink16HTMLElementStack3PopEv(%"class.blink::HTMLElementStack"* %27) #13
  %30 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 9, i32* %30, align 8
  br label %108

31:                                               ; preds = %19
  %32 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE to %"class.blink::QualifiedName"**), align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %8, %36
  br i1 %37, label %38, label %51

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %40 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"* %39, %"class.blink::QualifiedName"* dereferenceable(8) %4) #13
  br i1 %40, label %45, label %41

41:                                               ; preds = %38
  %42 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"* %39, %"class.blink::QualifiedName"* dereferenceable(8) %20) #13
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"* %39, %"class.blink::QualifiedName"* dereferenceable(8) %13) #13
  br i1 %44, label %45, label %108

45:                                               ; preds = %43, %41, %38
  tail call void @_ZN5blink16HTMLElementStack28PopUntilTableBodyScopeMarkerEv(%"class.blink::HTMLElementStack"* %39) #13
  %46 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0
  %47 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %49, i64 0, i32 1
  tail call void @_ZN5blink15HTMLTreeBuilder17ProcessFakeEndTagERKN3WTF12AtomicStringE(%"class.blink::HTMLTreeBuilder"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %50)
  tail call void @_ZN5blink15HTMLTreeBuilder13ProcessEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %108

51:                                               ; preds = %31
  %52 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE to %"class.blink::QualifiedName"**), align 8
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %52, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %8, %56
  br i1 %57, label %108, label %58

58:                                               ; preds = %51
  %59 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kCaptionTagE to %"class.blink::QualifiedName"**), align 8
  %60 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %59, i64 0, i32 0, i32 0
  %61 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %61, i64 0, i32 3, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %8, %63
  br i1 %64, label %108, label %65

65:                                               ; preds = %58
  %66 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kColTagE to %"class.blink::QualifiedName"**), align 8
  %67 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %66, i64 0, i32 0, i32 0
  %68 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %68, i64 0, i32 3, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %8, %70
  br i1 %71, label %108, label %72

72:                                               ; preds = %65
  %73 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kColgroupTagE to %"class.blink::QualifiedName"**), align 8
  %74 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %73, i64 0, i32 0, i32 0
  %75 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %75, i64 0, i32 3, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %8, %77
  br i1 %78, label %108, label %79

79:                                               ; preds = %72
  %80 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %81 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %80, i64 0, i32 0, i32 0
  %82 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %82, i64 0, i32 3, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %8, %84
  br i1 %85, label %108, label %86

86:                                               ; preds = %79
  %87 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE to %"class.blink::QualifiedName"**), align 8
  %88 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %87, i64 0, i32 0, i32 0
  %89 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %89, i64 0, i32 3, i32 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %8, %91
  br i1 %92, label %108, label %93

93:                                               ; preds = %86
  %94 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE to %"class.blink::QualifiedName"**), align 8
  %95 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %94, i64 0, i32 0, i32 0
  %96 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %96, i64 0, i32 3, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %8, %98
  br i1 %99, label %108, label %100

100:                                              ; preds = %93
  %101 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE to %"class.blink::QualifiedName"**), align 8
  %102 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %101, i64 0, i32 0, i32 0
  %103 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %103, i64 0, i32 3, i32 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %8, %105
  br i1 %106, label %108, label %107

107:                                              ; preds = %100
  tail call void @_ZN5blink15HTMLTreeBuilder23ProcessEndTagForInTableEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %108

108:                                              ; preds = %86, %58, %65, %51, %72, %79, %93, %100, %43, %26, %107, %45, %29
  ret void
}

declare zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder23ProcessEndTagForInTableEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE to %"class.blink::QualifiedName"**), align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %5, i64 0, i32 3, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %7, %9
  br i1 %10, label %11, label %17

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %13 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"* %12, %"class.blink::QualifiedName"* dereferenceable(8) %3) #13
  br i1 %13, label %14, label %97

14:                                               ; preds = %11
  %15 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %15, i64 0, i32 3
  tail call void @_ZN5blink16HTMLElementStack14PopUntilPoppedERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %12, %"class.WTF::AtomicString"* dereferenceable(8) %16) #13
  tail call void @_ZN5blink15HTMLTreeBuilder31ResetInsertionModeAppropriatelyEv(%"class.blink::HTMLTreeBuilder"* %0) #13
  br label %97

17:                                               ; preds = %2
  %18 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE to %"class.blink::QualifiedName"**), align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %7, %22
  br i1 %23, label %97, label %24

24:                                               ; preds = %17
  %25 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kCaptionTagE to %"class.blink::QualifiedName"**), align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %7, %29
  br i1 %30, label %97, label %31

31:                                               ; preds = %24
  %32 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kColTagE to %"class.blink::QualifiedName"**), align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %7, %36
  br i1 %37, label %97, label %38

38:                                               ; preds = %31
  %39 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kColgroupTagE to %"class.blink::QualifiedName"**), align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %7, %43
  br i1 %44, label %97, label %45

45:                                               ; preds = %38
  %46 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %47 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %48, i64 0, i32 3, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %7, %50
  br i1 %51, label %97, label %52

52:                                               ; preds = %45
  %53 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE to %"class.blink::QualifiedName"**), align 8
  %54 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %55, i64 0, i32 3, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %7, %57
  br i1 %58, label %97, label %59

59:                                               ; preds = %52
  %60 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE to %"class.blink::QualifiedName"**), align 8
  %61 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %7, %64
  br i1 %65, label %97, label %66

66:                                               ; preds = %59
  %67 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE to %"class.blink::QualifiedName"**), align 8
  %68 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %67, i64 0, i32 0, i32 0
  %69 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %69, i64 0, i32 3, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %7, %71
  br i1 %72, label %97, label %73

73:                                               ; preds = %66
  %74 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE to %"class.blink::QualifiedName"**), align 8
  %75 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %74, i64 0, i32 0, i32 0
  %76 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %76, i64 0, i32 3, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %7, %78
  br i1 %79, label %97, label %80

80:                                               ; preds = %73
  %81 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE to %"class.blink::QualifiedName"**), align 8
  %82 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %81, i64 0, i32 0, i32 0
  %83 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %83, i64 0, i32 3, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %7, %85
  br i1 %86, label %97, label %87

87:                                               ; preds = %80
  %88 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE to %"class.blink::QualifiedName"**), align 8
  %89 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %88, i64 0, i32 0, i32 0
  %90 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %90, i64 0, i32 3, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %7, %92
  br i1 %93, label %97, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 11
  %96 = load i8, i8* %95, align 1, !range !4
  store i8 1, i8* %95, align 1
  tail call void @_ZN5blink15HTMLTreeBuilder22ProcessEndTagForInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  store i8 %96, i8* %95, align 1
  br label %97

97:                                               ; preds = %73, %52, %59, %24, %31, %17, %38, %45, %66, %80, %87, %14, %11, %94
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder21ProcessEndTagForInRowEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE to %"class.blink::QualifiedName"**), align 8
  %5 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %6, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %8, %10
  br i1 %11, label %12, label %17

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %14 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"* %13, %"class.blink::QualifiedName"* dereferenceable(8) %4) #13
  br i1 %14, label %15, label %106

15:                                               ; preds = %12
  tail call void @_ZN5blink16HTMLElementStack27PopUntilTableRowScopeMarkerEv(%"class.blink::HTMLElementStack"* %13) #13
  tail call void @_ZN5blink16HTMLElementStack3PopEv(%"class.blink::HTMLElementStack"* %13) #13
  %16 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 13, i32* %16, align 8
  br label %106

17:                                               ; preds = %2
  %18 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE to %"class.blink::QualifiedName"**), align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %8, %22
  br i1 %23, label %24, label %29

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %26 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"* %25, %"class.blink::QualifiedName"* dereferenceable(8) %4) #13
  br i1 %26, label %27, label %106

27:                                               ; preds = %24
  tail call void @_ZN5blink16HTMLElementStack27PopUntilTableRowScopeMarkerEv(%"class.blink::HTMLElementStack"* %25) #13
  tail call void @_ZN5blink16HTMLElementStack3PopEv(%"class.blink::HTMLElementStack"* %25) #13
  %28 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 13, i32* %28, align 8
  tail call void @_ZN5blink15HTMLTreeBuilder13ProcessEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %106

29:                                               ; preds = %17
  %30 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE to %"class.blink::QualifiedName"**), align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %8, %34
  br i1 %35, label %50, label %36

36:                                               ; preds = %29
  %37 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE to %"class.blink::QualifiedName"**), align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %37, i64 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %8, %41
  br i1 %42, label %50, label %43

43:                                               ; preds = %36
  %44 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE to %"class.blink::QualifiedName"**), align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %44, i64 0, i32 0, i32 0
  %46 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %8, %48
  br i1 %49, label %50, label %56

50:                                               ; preds = %29, %36, %43
  %51 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %52 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %51, %"class.WTF::AtomicString"* dereferenceable(8) %3) #13
  br i1 %52, label %53, label %106

53:                                               ; preds = %50
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %5, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3
  tail call void @_ZN5blink15HTMLTreeBuilder17ProcessFakeEndTagERKN3WTF12AtomicStringE(%"class.blink::HTMLTreeBuilder"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %55) #13
  tail call void @_ZN5blink15HTMLTreeBuilder13ProcessEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %106

56:                                               ; preds = %43
  %57 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE to %"class.blink::QualifiedName"**), align 8
  %58 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %57, i64 0, i32 0, i32 0
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %8, %61
  br i1 %62, label %106, label %63

63:                                               ; preds = %56
  %64 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kCaptionTagE to %"class.blink::QualifiedName"**), align 8
  %65 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 3, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %8, %68
  br i1 %69, label %106, label %70

70:                                               ; preds = %63
  %71 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kColTagE to %"class.blink::QualifiedName"**), align 8
  %72 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %71, i64 0, i32 0, i32 0
  %73 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %73, i64 0, i32 3, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %8, %75
  br i1 %76, label %106, label %77

77:                                               ; preds = %70
  %78 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kColgroupTagE to %"class.blink::QualifiedName"**), align 8
  %79 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %78, i64 0, i32 0, i32 0
  %80 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %80, i64 0, i32 3, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %8, %82
  br i1 %83, label %106, label %84

84:                                               ; preds = %77
  %85 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %86 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %85, i64 0, i32 0, i32 0
  %87 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %87, i64 0, i32 3, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %8, %89
  br i1 %90, label %106, label %91

91:                                               ; preds = %84
  %92 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE to %"class.blink::QualifiedName"**), align 8
  %93 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %92, i64 0, i32 0, i32 0
  %94 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %94, i64 0, i32 3, i32 0, i32 0, i32 0
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %8, %96
  br i1 %97, label %106, label %98

98:                                               ; preds = %91
  %99 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE to %"class.blink::QualifiedName"**), align 8
  %100 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %99, i64 0, i32 0, i32 0
  %101 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %101, i64 0, i32 3, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %8, %103
  br i1 %104, label %106, label %105

105:                                              ; preds = %98
  tail call void @_ZN5blink15HTMLTreeBuilder23ProcessEndTagForInTableEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %106

106:                                              ; preds = %91, %63, %70, %56, %77, %84, %98, %50, %24, %15, %12, %105, %53, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder22ProcessEndTagForInCellEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE to %"class.blink::QualifiedName"**), align 8
  %5 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %6, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %8, %10
  br i1 %11, label %19, label %12

12:                                               ; preds = %2
  %13 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE to %"class.blink::QualifiedName"**), align 8
  %14 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %8, %17
  br i1 %18, label %19, label %26

19:                                               ; preds = %2, %12
  %20 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %21 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %20, %"class.WTF::AtomicString"* dereferenceable(8) %3) #13
  br i1 %21, label %22, label %105

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite22GenerateImpliedEndTagsEv(%"class.blink::HTMLConstructionSite"* %23) #13
  tail call void @_ZN5blink16HTMLElementStack14PopUntilPoppedERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %20, %"class.WTF::AtomicString"* dereferenceable(8) %3) #13
  %24 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 6
  tail call void @_ZN5blink25HTMLFormattingElementList17ClearToLastMarkerEv(%"class.blink::HTMLFormattingElementList"* %24) #13
  %25 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 14, i32* %25, align 8
  br label %105

26:                                               ; preds = %12
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE to %"class.blink::QualifiedName"**), align 8
  %28 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %29, i64 0, i32 3, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %8, %31
  br i1 %32, label %105, label %33

33:                                               ; preds = %26
  %34 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kCaptionTagE to %"class.blink::QualifiedName"**), align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %8, %38
  br i1 %39, label %105, label %40

40:                                               ; preds = %33
  %41 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kColTagE to %"class.blink::QualifiedName"**), align 8
  %42 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %41, i64 0, i32 0, i32 0
  %43 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %8, %45
  br i1 %46, label %105, label %47

47:                                               ; preds = %40
  %48 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kColgroupTagE to %"class.blink::QualifiedName"**), align 8
  %49 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %48, i64 0, i32 0, i32 0
  %50 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 3, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %8, %52
  br i1 %53, label %105, label %54

54:                                               ; preds = %47
  %55 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %56 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %57, i64 0, i32 3, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %8, %59
  br i1 %60, label %105, label %61

61:                                               ; preds = %54
  %62 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE to %"class.blink::QualifiedName"**), align 8
  %63 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %62, i64 0, i32 0, i32 0
  %64 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %64, i64 0, i32 3, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %8, %66
  br i1 %67, label %96, label %68

68:                                               ; preds = %61
  %69 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE to %"class.blink::QualifiedName"**), align 8
  %70 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %69, i64 0, i32 0, i32 0
  %71 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %71, i64 0, i32 3, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %8, %73
  br i1 %74, label %96, label %75

75:                                               ; preds = %68
  %76 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE to %"class.blink::QualifiedName"**), align 8
  %77 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %76, i64 0, i32 0, i32 0
  %78 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %78, i64 0, i32 3, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %8, %80
  br i1 %81, label %96, label %82

82:                                               ; preds = %75
  %83 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE to %"class.blink::QualifiedName"**), align 8
  %84 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %83, i64 0, i32 0, i32 0
  %85 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %85, i64 0, i32 3, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %8, %87
  br i1 %88, label %96, label %89

89:                                               ; preds = %82
  %90 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE to %"class.blink::QualifiedName"**), align 8
  %91 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %90, i64 0, i32 0, i32 0
  %92 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %92, i64 0, i32 3, i32 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %8, %94
  br i1 %95, label %96, label %104

96:                                               ; preds = %75, %82, %89, %68, %61
  %97 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %98 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %97, %"class.WTF::AtomicString"* dereferenceable(8) %3) #13
  br i1 %98, label %99, label %105

99:                                               ; preds = %96
  %100 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack12InTableScopeERKNS_13QualifiedNameE(%"class.blink::HTMLElementStack"* %97, %"class.blink::QualifiedName"* dereferenceable(8) %13) #13
  %101 = select i1 %100, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, %"class.blink::QualifiedName::QualifiedNameImpl"** %5
  %102 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %102, i64 0, i32 3
  tail call void @_ZN5blink15HTMLTreeBuilder17ProcessFakeEndTagERKN3WTF12AtomicStringE(%"class.blink::HTMLTreeBuilder"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %103) #13
  tail call void @_ZN5blink15HTMLTreeBuilder13ProcessEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %105

104:                                              ; preds = %89
  tail call void @_ZN5blink15HTMLTreeBuilder22ProcessEndTagForInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %105

105:                                              ; preds = %33, %40, %96, %26, %47, %54, %19, %104, %99, %22
  ret void
}

declare void @_ZN5blink16HTMLElementStack14PopUntilPoppedERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder22ProcessEndTagForInBodyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::AtomicHTMLToken", align 8
  %4 = alloca %"class.blink::AtomicHTMLToken", align 8
  %5 = alloca %"class.blink::AtomicHTMLToken", align 8
  %6 = alloca %"class.WTF::Vector", align 8
  %7 = alloca %"class.WTF::Vector", align 8
  %8 = alloca %"class.WTF::Vector", align 8
  %9 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %1, i64 0, i32 1
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE to %"class.blink::QualifiedName"**), align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %14, %16
  br i1 %17, label %18, label %24

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 3
  %21 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack7InScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %19, %"class.WTF::AtomicString"* dereferenceable(8) %20) #13
  br i1 %21, label %22, label %621

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 18, i32* %23, align 8
  br label %621

24:                                               ; preds = %2
  %25 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE to %"class.blink::QualifiedName"**), align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %14, %29
  br i1 %30, label %31, label %107

31:                                               ; preds = %24
  %32 = bitcast %"class.blink::AtomicHTMLToken"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %32) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 56, i1 false)
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %34 = bitcast %"class.WTF::Vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 16, i1 false) #13
  %35 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %5, i64 0, i32 0
  store i32 3, i32* %35, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %38, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %39, label %57, label %40

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %57

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i33
  %49 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #13
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !2

54:                                               ; preds = %45
  tail call void @llvm.trap() #13
  unreachable

55:                                               ; preds = %45
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %46, align 4
  br label %57

57:                                               ; preds = %31, %40, %55
  %58 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %5, i64 0, i32 2, i32 0, i32 0
  %59 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %5, i64 0, i32 6
  %60 = bitcast %"class.WTF::StringImpl"** %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 18, i1 false) #13
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %59, %"class.WTF::Vector"* nonnull dereferenceable(16) %6) #13
  %61 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %61, align 8
  %63 = icmp eq %"class.blink::Attribute"* %62, null
  br i1 %63, label %99, label %64, !prof !3

64:                                               ; preds = %57
  %65 = bitcast %"class.blink::Attribute"* %62 to i8*
  %66 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %97, label %69, !prof !2

69:                                               ; preds = %64
  %70 = zext i32 %67 to i64
  %71 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %62, i64 %70
  br label %72

72:                                               ; preds = %90, %69
  %73 = phi %"class.blink::Attribute"* [ %92, %90 ], [ %62, %69 ]
  %74 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %73, i64 0, i32 1, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #13
  br label %90

90:                                               ; preds = %89, %86, %72
  %91 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %73, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %91) #13
  %92 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %73, i64 1
  %93 = icmp eq %"class.blink::Attribute"* %92, %71
  br i1 %93, label %94, label %72

94:                                               ; preds = %90
  store i32 0, i32* %66, align 4
  %95 = bitcast %"class.WTF::Vector"* %6 to i8**
  %96 = load i8*, i8** %95, align 8
  br label %97

97:                                               ; preds = %94, %64
  %98 = phi i8* [ %96, %94 ], [ %65, %64 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %98) #13
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %61, align 8
  br label %99

99:                                               ; preds = %57, %97
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #13
  %100 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %101 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %102 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %101, i64 0, i32 3
  %103 = call zeroext i1 @_ZNK5blink16HTMLElementStack7InScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %100, %"class.WTF::AtomicString"* dereferenceable(8) %102) #13
  br i1 %103, label %104, label %106

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  store i32 18, i32* %105, align 8
  call void @_ZN5blink15HTMLTreeBuilder13ProcessEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %106

106:                                              ; preds = %99, %104
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %32) #13
  br label %621

107:                                              ; preds = %24
  %108 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kAddressTagE to %"class.blink::QualifiedName"**), align 8
  %109 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %108, i64 0, i32 0, i32 0
  %110 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 3, i32 0, i32 0, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %14, %112
  br i1 %113, label %282, label %114

114:                                              ; preds = %107
  %115 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kArticleTagE to %"class.blink::QualifiedName"**), align 8
  %116 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %117, i64 0, i32 3, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %14, %119
  br i1 %120, label %282, label %121

121:                                              ; preds = %114
  %122 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kAsideTagE to %"class.blink::QualifiedName"**), align 8
  %123 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %122, i64 0, i32 0, i32 0
  %124 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %124, i64 0, i32 3, i32 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %14, %126
  br i1 %127, label %282, label %128

128:                                              ; preds = %121
  %129 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names14kBlockquoteTagE to %"class.blink::QualifiedName"**), align 8
  %130 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %131, i64 0, i32 3, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %14, %133
  br i1 %134, label %282, label %135

135:                                              ; preds = %128
  %136 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kButtonTagE to %"class.blink::QualifiedName"**), align 8
  %137 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %136, i64 0, i32 0, i32 0
  %138 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %137, align 8
  %139 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %138, i64 0, i32 3, i32 0, i32 0, i32 0
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %14, %140
  br i1 %141, label %282, label %142

142:                                              ; preds = %135
  %143 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kCenterTagE to %"class.blink::QualifiedName"**), align 8
  %144 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %145, i64 0, i32 3, i32 0, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %14, %147
  br i1 %148, label %282, label %149

149:                                              ; preds = %142
  %150 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kDetailsTagE to %"class.blink::QualifiedName"**), align 8
  %151 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %150, i64 0, i32 0, i32 0
  %152 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %151, align 8
  %153 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %152, i64 0, i32 3, i32 0, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %14, %154
  br i1 %155, label %282, label %156

156:                                              ; preds = %149
  %157 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kDirTagE to %"class.blink::QualifiedName"**), align 8
  %158 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %157, i64 0, i32 0, i32 0
  %159 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %158, align 8
  %160 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %159, i64 0, i32 3, i32 0, i32 0, i32 0
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %160, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %14, %161
  br i1 %162, label %282, label %163

163:                                              ; preds = %156
  %164 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kDivTagE to %"class.blink::QualifiedName"**), align 8
  %165 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %164, i64 0, i32 0, i32 0
  %166 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %165, align 8
  %167 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %166, i64 0, i32 3, i32 0, i32 0, i32 0
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %14, %168
  br i1 %169, label %282, label %170

170:                                              ; preds = %163
  %171 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kDlTagE to %"class.blink::QualifiedName"**), align 8
  %172 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %171, i64 0, i32 0, i32 0
  %173 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %172, align 8
  %174 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %173, i64 0, i32 3, i32 0, i32 0, i32 0
  %175 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %174, align 8
  %176 = icmp eq %"class.WTF::StringImpl"* %14, %175
  br i1 %176, label %282, label %177

177:                                              ; preds = %170
  %178 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kFieldsetTagE to %"class.blink::QualifiedName"**), align 8
  %179 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %178, i64 0, i32 0, i32 0
  %180 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %179, align 8
  %181 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %180, i64 0, i32 3, i32 0, i32 0, i32 0
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8
  %183 = icmp eq %"class.WTF::StringImpl"* %14, %182
  br i1 %183, label %282, label %184

184:                                              ; preds = %177
  %185 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names14kFigcaptionTagE to %"class.blink::QualifiedName"**), align 8
  %186 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %185, i64 0, i32 0, i32 0
  %187 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %186, align 8
  %188 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %187, i64 0, i32 3, i32 0, i32 0, i32 0
  %189 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %188, align 8
  %190 = icmp eq %"class.WTF::StringImpl"* %14, %189
  br i1 %190, label %282, label %191

191:                                              ; preds = %184
  %192 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kFigureTagE to %"class.blink::QualifiedName"**), align 8
  %193 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %192, i64 0, i32 0, i32 0
  %194 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %193, align 8
  %195 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %194, i64 0, i32 3, i32 0, i32 0, i32 0
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %195, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %14, %196
  br i1 %197, label %282, label %198

198:                                              ; preds = %191
  %199 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kFooterTagE to %"class.blink::QualifiedName"**), align 8
  %200 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %199, i64 0, i32 0, i32 0
  %201 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %200, align 8
  %202 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %201, i64 0, i32 3, i32 0, i32 0, i32 0
  %203 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %202, align 8
  %204 = icmp eq %"class.WTF::StringImpl"* %14, %203
  br i1 %204, label %282, label %205

205:                                              ; preds = %198
  %206 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kHeaderTagE to %"class.blink::QualifiedName"**), align 8
  %207 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %206, i64 0, i32 0, i32 0
  %208 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %207, align 8
  %209 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %208, i64 0, i32 3, i32 0, i32 0, i32 0
  %210 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %209, align 8
  %211 = icmp eq %"class.WTF::StringImpl"* %14, %210
  br i1 %211, label %282, label %212

212:                                              ; preds = %205
  %213 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kHgroupTagE to %"class.blink::QualifiedName"**), align 8
  %214 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %213, i64 0, i32 0, i32 0
  %215 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %214, align 8
  %216 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %215, i64 0, i32 3, i32 0, i32 0, i32 0
  %217 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %216, align 8
  %218 = icmp eq %"class.WTF::StringImpl"* %14, %217
  br i1 %218, label %282, label %219

219:                                              ; preds = %212
  %220 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kListingTagE to %"class.blink::QualifiedName"**), align 8
  %221 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %220, i64 0, i32 0, i32 0
  %222 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %221, align 8
  %223 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %222, i64 0, i32 3, i32 0, i32 0, i32 0
  %224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %223, align 8
  %225 = icmp eq %"class.WTF::StringImpl"* %14, %224
  br i1 %225, label %282, label %226

226:                                              ; preds = %219
  %227 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMainTagE to %"class.blink::QualifiedName"**), align 8
  %228 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %227, i64 0, i32 0, i32 0
  %229 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %228, align 8
  %230 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %229, i64 0, i32 3, i32 0, i32 0, i32 0
  %231 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %230, align 8
  %232 = icmp eq %"class.WTF::StringImpl"* %14, %231
  br i1 %232, label %282, label %233

233:                                              ; preds = %226
  %234 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMenuTagE to %"class.blink::QualifiedName"**), align 8
  %235 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %234, i64 0, i32 0, i32 0
  %236 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %235, align 8
  %237 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %236, i64 0, i32 3, i32 0, i32 0, i32 0
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  %239 = icmp eq %"class.WTF::StringImpl"* %14, %238
  br i1 %239, label %282, label %240

240:                                              ; preds = %233
  %241 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kNavTagE to %"class.blink::QualifiedName"**), align 8
  %242 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %241, i64 0, i32 0, i32 0
  %243 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %242, align 8
  %244 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %243, i64 0, i32 3, i32 0, i32 0, i32 0
  %245 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %244, align 8
  %246 = icmp eq %"class.WTF::StringImpl"* %14, %245
  br i1 %246, label %282, label %247

247:                                              ; preds = %240
  %248 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kOlTagE to %"class.blink::QualifiedName"**), align 8
  %249 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %248, i64 0, i32 0, i32 0
  %250 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %249, align 8
  %251 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %250, i64 0, i32 3, i32 0, i32 0, i32 0
  %252 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %251, align 8
  %253 = icmp eq %"class.WTF::StringImpl"* %14, %252
  br i1 %253, label %282, label %254

254:                                              ; preds = %247
  %255 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kPreTagE to %"class.blink::QualifiedName"**), align 8
  %256 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %255, i64 0, i32 0, i32 0
  %257 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %256, align 8
  %258 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %257, i64 0, i32 3, i32 0, i32 0, i32 0
  %259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %258, align 8
  %260 = icmp eq %"class.WTF::StringImpl"* %14, %259
  br i1 %260, label %282, label %261

261:                                              ; preds = %254
  %262 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kSectionTagE to %"class.blink::QualifiedName"**), align 8
  %263 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %262, i64 0, i32 0, i32 0
  %264 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %263, align 8
  %265 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %264, i64 0, i32 3, i32 0, i32 0, i32 0
  %266 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %265, align 8
  %267 = icmp eq %"class.WTF::StringImpl"* %14, %266
  br i1 %267, label %282, label %268

268:                                              ; preds = %261
  %269 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kSummaryTagE to %"class.blink::QualifiedName"**), align 8
  %270 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %269, i64 0, i32 0, i32 0
  %271 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %270, align 8
  %272 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %271, i64 0, i32 3, i32 0, i32 0, i32 0
  %273 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %272, align 8
  %274 = icmp eq %"class.WTF::StringImpl"* %14, %273
  br i1 %274, label %282, label %275

275:                                              ; preds = %268
  %276 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kUlTagE to %"class.blink::QualifiedName"**), align 8
  %277 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %276, i64 0, i32 0, i32 0
  %278 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %277, align 8
  %279 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %278, i64 0, i32 3, i32 0, i32 0, i32 0
  %280 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %279, align 8
  %281 = icmp eq %"class.WTF::StringImpl"* %14, %280
  br i1 %281, label %282, label %287

282:                                              ; preds = %275, %268, %261, %254, %247, %240, %233, %226, %219, %212, %205, %198, %191, %184, %177, %170, %163, %156, %149, %142, %135, %128, %121, %114, %107
  %283 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %284 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack7InScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %283, %"class.WTF::AtomicString"* dereferenceable(8) %9) #13
  br i1 %284, label %285, label %621

285:                                              ; preds = %282
  %286 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite22GenerateImpliedEndTagsEv(%"class.blink::HTMLConstructionSite"* %286) #13
  tail call void @_ZN5blink16HTMLElementStack14PopUntilPoppedERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %283, %"class.WTF::AtomicString"* dereferenceable(8) %9) #13
  br label %621

287:                                              ; preds = %275
  %288 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kFormTagE to %"class.blink::QualifiedName"**), align 8
  %289 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %288, i64 0, i32 0, i32 0
  %290 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %289, align 8
  %291 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %290, i64 0, i32 3, i32 0, i32 0, i32 0
  %292 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %291, align 8
  %293 = icmp eq %"class.WTF::StringImpl"* %14, %292
  br i1 %293, label %294, label %305

294:                                              ; preds = %287
  %295 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %296 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack22HasTemplateInHTMLScopeEv(%"class.blink::HTMLElementStack"* %295) #13
  br i1 %296, label %305, label %297

297:                                              ; preds = %294
  %298 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %299 = tail call %"class.blink::HTMLFormElement"* @_ZN5blink20HTMLConstructionSite8TakeFormEv(%"class.blink::HTMLConstructionSite"* %298) #13
  %300 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %299, i64 0, i32 0, i32 0
  %301 = icmp eq %"class.blink::HTMLFormElement"* %299, null
  br i1 %301, label %621, label %302

302:                                              ; preds = %297
  %303 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack7InScopeEPNS_7ElementE(%"class.blink::HTMLElementStack"* %295, %"class.blink::Element"* %300) #13
  br i1 %303, label %304, label %621

304:                                              ; preds = %302
  tail call void @_ZN5blink20HTMLConstructionSite22GenerateImpliedEndTagsEv(%"class.blink::HTMLConstructionSite"* %298) #13
  tail call void @_ZN5blink16HTMLElementStack6RemoveEPNS_7ElementE(%"class.blink::HTMLElementStack"* %295, %"class.blink::Element"* %300) #13
  br label %305

305:                                              ; preds = %304, %294, %287
  %306 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kPTagE to %"class.blink::QualifiedName"**), align 8
  %307 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %306, i64 0, i32 0, i32 0
  %308 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %307, align 8
  %309 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %310 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %308, i64 0, i32 3, i32 0, i32 0, i32 0
  %311 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %310, align 8
  %312 = icmp eq %"class.WTF::StringImpl"* %309, %311
  br i1 %312, label %313, label %387

313:                                              ; preds = %305
  %314 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %315 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack13InButtonScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %314, %"class.WTF::AtomicString"* dereferenceable(8) %9) #13
  br i1 %315, label %385, label %316

316:                                              ; preds = %313
  %317 = bitcast %"class.WTF::Vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %317) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %317, i8 0, i64 16, i1 false) #13
  %318 = bitcast %"class.blink::AtomicHTMLToken"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %318) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %318, i8 -86, i64 56, i1 false) #13
  %319 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %307, align 8
  %320 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %3, i64 0, i32 0
  store i32 2, i32* %320, align 8
  %321 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %319, i64 0, i32 3, i32 0, i32 0, i32 0
  %322 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %321, align 8
  %323 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %322, %"class.WTF::StringImpl"** %323, align 8
  %324 = icmp eq %"class.WTF::StringImpl"* %322, null
  br i1 %324, label %342, label %325

325:                                              ; preds = %316
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %322, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %327 = load atomic i32, i32* %326 monotonic, align 4
  %328 = and i32 %327, 2
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %342

330:                                              ; preds = %325
  %331 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %322, i64 0, i32 0
  %332 = load i32, i32* %331, align 4
  %333 = zext i32 %332 to i33
  %334 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %333, i33 1) #13
  %335 = extractvalue { i33, i1 } %334, 1
  %336 = extractvalue { i33, i1 } %334, 0
  %337 = icmp slt i33 %336, 0
  %338 = or i1 %335, %337
  br i1 %338, label %339, label %340, !prof !2

339:                                              ; preds = %330
  tail call void @llvm.trap() #13
  unreachable

340:                                              ; preds = %330
  %341 = trunc i33 %336 to i32
  store i32 %341, i32* %331, align 4
  br label %342

342:                                              ; preds = %316, %325, %340
  %343 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %3, i64 0, i32 2, i32 0, i32 0
  %344 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %3, i64 0, i32 6
  %345 = bitcast %"class.WTF::StringImpl"** %343 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %345, i8 0, i64 18, i1 false) #13
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %344, %"class.WTF::Vector"* nonnull dereferenceable(16) %7) #13
  call void @_ZN5blink15HTMLTreeBuilder15ProcessStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* nonnull %3) #13
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %318) #13
  %346 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 0
  %347 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %346, align 8
  %348 = icmp eq %"class.blink::Attribute"* %347, null
  br i1 %348, label %384, label %349, !prof !3

349:                                              ; preds = %342
  %350 = bitcast %"class.blink::Attribute"* %347 to i8*
  %351 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 2
  %352 = load i32, i32* %351, align 4
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %382, label %354, !prof !2

354:                                              ; preds = %349
  %355 = zext i32 %352 to i64
  %356 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %347, i64 %355
  br label %357

357:                                              ; preds = %375, %354
  %358 = phi %"class.blink::Attribute"* [ %377, %375 ], [ %347, %354 ]
  %359 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %358, i64 0, i32 1, i32 0, i32 0, i32 0
  %360 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %359, align 8
  %361 = icmp eq %"class.WTF::StringImpl"* %360, null
  br i1 %361, label %375, label %362

362:                                              ; preds = %357
  %363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %364 = load atomic i32, i32* %363 monotonic, align 4
  %365 = and i32 %364, 2
  %366 = icmp eq i32 %365, 0
  %367 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 0
  %368 = load i32, i32* %367, align 4
  br i1 %366, label %369, label %371

369:                                              ; preds = %362
  %370 = add i32 %368, -1
  store i32 %370, i32* %367, align 4
  br label %371

371:                                              ; preds = %369, %362
  %372 = phi i32 [ %370, %369 ], [ %368, %362 ]
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %375

374:                                              ; preds = %371
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %360) #13
  br label %375

375:                                              ; preds = %374, %371, %357
  %376 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %358, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %376) #13
  %377 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %358, i64 1
  %378 = icmp eq %"class.blink::Attribute"* %377, %356
  br i1 %378, label %379, label %357

379:                                              ; preds = %375
  store i32 0, i32* %351, align 4
  %380 = bitcast %"class.WTF::Vector"* %7 to i8**
  %381 = load i8*, i8** %380, align 8
  br label %382

382:                                              ; preds = %379, %349
  %383 = phi i8* [ %381, %379 ], [ %350, %349 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %383) #13
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %346, align 8
  br label %384

384:                                              ; preds = %342, %382
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %317) #13
  call void @_ZN5blink15HTMLTreeBuilder13ProcessEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %621

385:                                              ; preds = %313
  %386 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite35GenerateImpliedEndTagsWithExclusionERKN3WTF12AtomicStringE(%"class.blink::HTMLConstructionSite"* %386, %"class.WTF::AtomicString"* dereferenceable(8) %9) #13
  tail call void @_ZN5blink16HTMLElementStack14PopUntilPoppedERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %314, %"class.WTF::AtomicString"* dereferenceable(8) %9) #13
  br label %621

387:                                              ; preds = %305
  %388 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kLiTagE to %"class.blink::QualifiedName"**), align 8
  %389 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %388, i64 0, i32 0, i32 0
  %390 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %389, align 8
  %391 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %390, i64 0, i32 3, i32 0, i32 0, i32 0
  %392 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %391, align 8
  %393 = icmp eq %"class.WTF::StringImpl"* %309, %392
  br i1 %393, label %394, label %399

394:                                              ; preds = %387
  %395 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %396 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack15InListItemScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %395, %"class.WTF::AtomicString"* dereferenceable(8) %9) #13
  br i1 %396, label %397, label %621

397:                                              ; preds = %394
  %398 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite35GenerateImpliedEndTagsWithExclusionERKN3WTF12AtomicStringE(%"class.blink::HTMLConstructionSite"* %398, %"class.WTF::AtomicString"* dereferenceable(8) %9) #13
  tail call void @_ZN5blink16HTMLElementStack14PopUntilPoppedERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %395, %"class.WTF::AtomicString"* dereferenceable(8) %9) #13
  br label %621

399:                                              ; preds = %387
  %400 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kDdTagE to %"class.blink::QualifiedName"**), align 8
  %401 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %400, i64 0, i32 0, i32 0
  %402 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %401, align 8
  %403 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %402, i64 0, i32 3, i32 0, i32 0, i32 0
  %404 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %403, align 8
  %405 = icmp eq %"class.WTF::StringImpl"* %309, %404
  br i1 %405, label %413, label %406

406:                                              ; preds = %399
  %407 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kDtTagE to %"class.blink::QualifiedName"**), align 8
  %408 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %407, i64 0, i32 0, i32 0
  %409 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %408, align 8
  %410 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %409, i64 0, i32 3, i32 0, i32 0, i32 0
  %411 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %410, align 8
  %412 = icmp eq %"class.WTF::StringImpl"* %309, %411
  br i1 %412, label %413, label %418

413:                                              ; preds = %406, %399
  %414 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %415 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack7InScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %414, %"class.WTF::AtomicString"* dereferenceable(8) %9) #13
  br i1 %415, label %416, label %621

416:                                              ; preds = %413
  %417 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite35GenerateImpliedEndTagsWithExclusionERKN3WTF12AtomicStringE(%"class.blink::HTMLConstructionSite"* %417, %"class.WTF::AtomicString"* dereferenceable(8) %9) #13
  tail call void @_ZN5blink16HTMLElementStack14PopUntilPoppedERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %414, %"class.WTF::AtomicString"* dereferenceable(8) %9) #13
  br label %621

418:                                              ; preds = %406
  %419 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH1TagE to %"class.blink::QualifiedName"**), align 8
  %420 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %419, i64 0, i32 0, i32 0
  %421 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %420, align 8
  %422 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %421, i64 0, i32 3, i32 0, i32 0, i32 0
  %423 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %422, align 8
  %424 = icmp eq %"class.WTF::StringImpl"* %309, %423
  br i1 %424, label %460, label %425

425:                                              ; preds = %418
  %426 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH2TagE to %"class.blink::QualifiedName"**), align 8
  %427 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %426, i64 0, i32 0, i32 0
  %428 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %427, align 8
  %429 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %428, i64 0, i32 3, i32 0, i32 0, i32 0
  %430 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %429, align 8
  %431 = icmp eq %"class.WTF::StringImpl"* %309, %430
  br i1 %431, label %460, label %432

432:                                              ; preds = %425
  %433 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH3TagE to %"class.blink::QualifiedName"**), align 8
  %434 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %433, i64 0, i32 0, i32 0
  %435 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %434, align 8
  %436 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %435, i64 0, i32 3, i32 0, i32 0, i32 0
  %437 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %436, align 8
  %438 = icmp eq %"class.WTF::StringImpl"* %309, %437
  br i1 %438, label %460, label %439

439:                                              ; preds = %432
  %440 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH4TagE to %"class.blink::QualifiedName"**), align 8
  %441 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %440, i64 0, i32 0, i32 0
  %442 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %441, align 8
  %443 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %442, i64 0, i32 3, i32 0, i32 0, i32 0
  %444 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %443, align 8
  %445 = icmp eq %"class.WTF::StringImpl"* %309, %444
  br i1 %445, label %460, label %446

446:                                              ; preds = %439
  %447 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH5TagE to %"class.blink::QualifiedName"**), align 8
  %448 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %447, i64 0, i32 0, i32 0
  %449 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %448, align 8
  %450 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %449, i64 0, i32 3, i32 0, i32 0, i32 0
  %451 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %450, align 8
  %452 = icmp eq %"class.WTF::StringImpl"* %309, %451
  br i1 %452, label %460, label %453

453:                                              ; preds = %446
  %454 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH6TagE to %"class.blink::QualifiedName"**), align 8
  %455 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %454, i64 0, i32 0, i32 0
  %456 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %455, align 8
  %457 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %456, i64 0, i32 3, i32 0, i32 0, i32 0
  %458 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %457, align 8
  %459 = icmp eq %"class.WTF::StringImpl"* %309, %458
  br i1 %459, label %460, label %465

460:                                              ; preds = %418, %425, %432, %439, %446, %453
  %461 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %462 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack31HasNumberedHeaderElementInScopeEv(%"class.blink::HTMLElementStack"* %461) #13
  br i1 %462, label %463, label %621

463:                                              ; preds = %460
  %464 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite22GenerateImpliedEndTagsEv(%"class.blink::HTMLConstructionSite"* %464) #13
  tail call void @_ZN5blink16HTMLElementStack35PopUntilNumberedHeaderElementPoppedEv(%"class.blink::HTMLElementStack"* %461) #13
  br label %621

465:                                              ; preds = %453
  %466 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kATagE to %"class.blink::QualifiedName"**), align 8
  %467 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %466, i64 0, i32 0, i32 0
  %468 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %467, align 8
  %469 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %468, i64 0, i32 3, i32 0, i32 0, i32 0
  %470 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %469, align 8
  %471 = icmp eq %"class.WTF::StringImpl"* %309, %470
  br i1 %471, label %481, label %472

472:                                              ; preds = %465
  %473 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kNobrTagE to %"class.blink::QualifiedName"**), align 8
  %474 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %473, i64 0, i32 0, i32 0
  %475 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %474, align 8
  %476 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %475, i64 0, i32 3, i32 0, i32 0, i32 0
  %477 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %476, align 8
  %478 = icmp eq %"class.WTF::StringImpl"* %309, %477
  br i1 %478, label %481, label %479

479:                                              ; preds = %472
  %480 = tail call fastcc zeroext i1 @_ZN5blinkL31IsNonAnchorNonNobrFormattingTagERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8) %9) #13
  br i1 %480, label %481, label %482

481:                                              ; preds = %472, %465, %479
  tail call void @_ZN5blink15HTMLTreeBuilder21CallTheAdoptionAgencyEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* %1)
  br label %621

482:                                              ; preds = %479
  %483 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kAppletTagE to %"class.blink::QualifiedName"**), align 8
  %484 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %483, i64 0, i32 0, i32 0
  %485 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %484, align 8
  %486 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %485, i64 0, i32 3, i32 0, i32 0, i32 0
  %487 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %486, align 8
  %488 = icmp eq %"class.WTF::StringImpl"* %309, %487
  br i1 %488, label %503, label %489

489:                                              ; preds = %482
  %490 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kMarqueeTagE to %"class.blink::QualifiedName"**), align 8
  %491 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %490, i64 0, i32 0, i32 0
  %492 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %491, align 8
  %493 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %492, i64 0, i32 3, i32 0, i32 0, i32 0
  %494 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %493, align 8
  %495 = icmp eq %"class.WTF::StringImpl"* %309, %494
  br i1 %495, label %503, label %496

496:                                              ; preds = %489
  %497 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kObjectTagE to %"class.blink::QualifiedName"**), align 8
  %498 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %497, i64 0, i32 0, i32 0
  %499 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %498, align 8
  %500 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %499, i64 0, i32 3, i32 0, i32 0, i32 0
  %501 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %500, align 8
  %502 = icmp eq %"class.WTF::StringImpl"* %309, %501
  br i1 %502, label %503, label %509

503:                                              ; preds = %496, %489, %482
  %504 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %505 = tail call zeroext i1 @_ZNK5blink16HTMLElementStack7InScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %504, %"class.WTF::AtomicString"* dereferenceable(8) %9) #13
  br i1 %505, label %506, label %621

506:                                              ; preds = %503
  %507 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite22GenerateImpliedEndTagsEv(%"class.blink::HTMLConstructionSite"* %507) #13
  tail call void @_ZN5blink16HTMLElementStack14PopUntilPoppedERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"* %504, %"class.WTF::AtomicString"* dereferenceable(8) %9) #13
  %508 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 6
  tail call void @_ZN5blink25HTMLFormattingElementList17ClearToLastMarkerEv(%"class.blink::HTMLFormattingElementList"* %508) #13
  br label %621

509:                                              ; preds = %496
  %510 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE to %"class.blink::QualifiedName"**), align 8
  %511 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %510, i64 0, i32 0, i32 0
  %512 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %511, align 8
  %513 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %512, i64 0, i32 3, i32 0, i32 0, i32 0
  %514 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %513, align 8
  %515 = icmp eq %"class.WTF::StringImpl"* %309, %514
  br i1 %515, label %516, label %585

516:                                              ; preds = %509
  %517 = bitcast %"class.WTF::Vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %517) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %517, i8 0, i64 16, i1 false) #13
  %518 = bitcast %"class.blink::AtomicHTMLToken"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %518) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %518, i8 -86, i64 56, i1 false) #13
  %519 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %511, align 8
  %520 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %4, i64 0, i32 0
  store i32 2, i32* %520, align 8
  %521 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %519, i64 0, i32 3, i32 0, i32 0, i32 0
  %522 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %521, align 8
  %523 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %522, %"class.WTF::StringImpl"** %523, align 8
  %524 = icmp eq %"class.WTF::StringImpl"* %522, null
  br i1 %524, label %542, label %525

525:                                              ; preds = %516
  %526 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %522, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %527 = load atomic i32, i32* %526 monotonic, align 4
  %528 = and i32 %527, 2
  %529 = icmp eq i32 %528, 0
  br i1 %529, label %530, label %542

530:                                              ; preds = %525
  %531 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %522, i64 0, i32 0
  %532 = load i32, i32* %531, align 4
  %533 = zext i32 %532 to i33
  %534 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %533, i33 1) #13
  %535 = extractvalue { i33, i1 } %534, 1
  %536 = extractvalue { i33, i1 } %534, 0
  %537 = icmp slt i33 %536, 0
  %538 = or i1 %535, %537
  br i1 %538, label %539, label %540, !prof !2

539:                                              ; preds = %530
  tail call void @llvm.trap() #13
  unreachable

540:                                              ; preds = %530
  %541 = trunc i33 %536 to i32
  store i32 %541, i32* %531, align 4
  br label %542

542:                                              ; preds = %516, %525, %540
  %543 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %4, i64 0, i32 2, i32 0, i32 0
  %544 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %4, i64 0, i32 6
  %545 = bitcast %"class.WTF::StringImpl"** %543 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %545, i8 0, i64 18, i1 false) #13
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %544, %"class.WTF::Vector"* nonnull dereferenceable(16) %8) #13
  call void @_ZN5blink15HTMLTreeBuilder15ProcessStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* nonnull %4) #13
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %518) #13
  %546 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 0
  %547 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %546, align 8
  %548 = icmp eq %"class.blink::Attribute"* %547, null
  br i1 %548, label %584, label %549, !prof !3

549:                                              ; preds = %542
  %550 = bitcast %"class.blink::Attribute"* %547 to i8*
  %551 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 2
  %552 = load i32, i32* %551, align 4
  %553 = icmp eq i32 %552, 0
  br i1 %553, label %582, label %554, !prof !2

554:                                              ; preds = %549
  %555 = zext i32 %552 to i64
  %556 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %547, i64 %555
  br label %557

557:                                              ; preds = %575, %554
  %558 = phi %"class.blink::Attribute"* [ %577, %575 ], [ %547, %554 ]
  %559 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %558, i64 0, i32 1, i32 0, i32 0, i32 0
  %560 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %559, align 8
  %561 = icmp eq %"class.WTF::StringImpl"* %560, null
  br i1 %561, label %575, label %562

562:                                              ; preds = %557
  %563 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %560, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %564 = load atomic i32, i32* %563 monotonic, align 4
  %565 = and i32 %564, 2
  %566 = icmp eq i32 %565, 0
  %567 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %560, i64 0, i32 0
  %568 = load i32, i32* %567, align 4
  br i1 %566, label %569, label %571

569:                                              ; preds = %562
  %570 = add i32 %568, -1
  store i32 %570, i32* %567, align 4
  br label %571

571:                                              ; preds = %569, %562
  %572 = phi i32 [ %570, %569 ], [ %568, %562 ]
  %573 = icmp eq i32 %572, 0
  br i1 %573, label %574, label %575

574:                                              ; preds = %571
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %560) #13
  br label %575

575:                                              ; preds = %574, %571, %557
  %576 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %558, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %576) #13
  %577 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %558, i64 1
  %578 = icmp eq %"class.blink::Attribute"* %577, %556
  br i1 %578, label %579, label %557

579:                                              ; preds = %575
  store i32 0, i32* %551, align 4
  %580 = bitcast %"class.WTF::Vector"* %8 to i8**
  %581 = load i8*, i8** %580, align 8
  br label %582

582:                                              ; preds = %579, %549
  %583 = phi i8* [ %581, %579 ], [ %550, %549 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %583) #13
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %546, align 8
  br label %584

584:                                              ; preds = %542, %582
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %517) #13
  br label %621

585:                                              ; preds = %509
  %586 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE to %"class.blink::QualifiedName"**), align 8
  %587 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %586, i64 0, i32 0, i32 0
  %588 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %587, align 8
  %589 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %588, i64 0, i32 3, i32 0, i32 0, i32 0
  %590 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %589, align 8
  %591 = icmp eq %"class.WTF::StringImpl"* %309, %590
  br i1 %591, label %592, label %594

592:                                              ; preds = %585
  %593 = tail call zeroext i1 @_ZN5blink15HTMLTreeBuilder21ProcessTemplateEndTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %0, %"class.blink::AtomicHTMLToken"* undef)
  br label %621

594:                                              ; preds = %585
  %595 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %596 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %597 = tail call %"class.blink::HTMLElementStack::ElementRecord"* @_ZNK5blink16HTMLElementStack9TopRecordEv(%"class.blink::HTMLElementStack"* %596) #13
  %598 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10html_names17xhtmlNamespaceURIE, align 8
  %599 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %598, i64 0, i32 0, i32 0, i32 0
  br label %600

600:                                              ; preds = %618, %594
  %601 = phi %"class.blink::HTMLElementStack::ElementRecord"* [ %597, %594 ], [ %620, %618 ]
  %602 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %601, i64 0, i32 0, i32 0, i32 0
  %603 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %602, align 8
  %604 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %603, i64 0, i32 1, i32 0, i32 0, i32 0
  %605 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %604, align 8
  %606 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %607 = icmp eq %"class.WTF::StringImpl"* %605, %606
  br i1 %607, label %608, label %616

608:                                              ; preds = %600
  %609 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %603, i64 0, i32 3, i32 0, i32 0, i32 0
  %610 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %609, align 8
  %611 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %599, align 8
  %612 = icmp eq %"class.WTF::StringImpl"* %610, %611
  br i1 %612, label %613, label %616

613:                                              ; preds = %608
  tail call void @_ZN5blink20HTMLConstructionSite35GenerateImpliedEndTagsWithExclusionERKN3WTF12AtomicStringE(%"class.blink::HTMLConstructionSite"* %595, %"class.WTF::AtomicString"* dereferenceable(8) %9) #13
  %614 = bitcast %"class.blink::HTMLStackItem"* %603 to %"class.blink::Element"**
  %615 = load %"class.blink::Element"*, %"class.blink::Element"** %614, align 8
  tail call void @_ZN5blink16HTMLElementStack14PopUntilPoppedEPNS_7ElementE(%"class.blink::HTMLElementStack"* %596, %"class.blink::Element"* %615) #13
  br label %621

616:                                              ; preds = %608, %600
  %617 = tail call zeroext i1 @_ZNK5blink13HTMLStackItem13IsSpecialNodeEv(%"class.blink::HTMLStackItem"* %603) #13
  br i1 %617, label %621, label %618

618:                                              ; preds = %616
  %619 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %601, i64 0, i32 1, i32 0, i32 0
  %620 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %619, align 8
  br label %600

621:                                              ; preds = %616, %613, %503, %460, %413, %394, %302, %297, %282, %22, %18, %592, %584, %506, %481, %463, %416, %397, %385, %384, %285, %106
  ret void
}

declare %"class.blink::HTMLFormElement"* @_ZN5blink20HTMLConstructionSite8TakeFormEv(%"class.blink::HTMLConstructionSite"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16HTMLElementStack15InListItemScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16HTMLElementStack31HasNumberedHeaderElementInScopeEv(%"class.blink::HTMLElementStack"*) local_unnamed_addr #1

declare void @_ZN5blink16HTMLElementStack35PopUntilNumberedHeaderElementPoppedEv(%"class.blink::HTMLElementStack"*) local_unnamed_addr #1

declare void @_ZN5blink16HTMLElementStack18PopHTMLHeadElementEv(%"class.blink::HTMLElementStack"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16HTMLElementStack13InSelectScopeERKN3WTF12AtomicStringE(%"class.blink::HTMLElementStack"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink20HTMLConstructionSite23InsertCommentOnDocumentEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #1

declare void @_ZN5blink20HTMLConstructionSite30InsertCommentOnHTMLHtmlElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #1

declare void @_ZN5blink20HTMLConstructionSite13InsertCommentEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder22ProcessCharacterBufferERNS0_20CharacterTokenBufferE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 8
  %14 = getelementptr inbounds %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer", %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer"* %1, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer", %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer"* %1, i64 0, i32 1
  %16 = getelementptr inbounds %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer", %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer"* %1, i64 0, i32 2
  %17 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  %18 = bitcast %"class.WTF::StringView"* %9 to i8*
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  %22 = bitcast i8** %20 to i16**
  %23 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  %24 = bitcast %"class.WTF::StringView"* %9 to i64*
  %25 = bitcast %"class.WTF::StringView"* %7 to i8*
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %29 = bitcast i8** %27 to i16**
  %30 = bitcast %"class.WTF::StringView"* %7 to i64*
  %31 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5
  %32 = getelementptr inbounds %"class.blink::HTMLElementStack", %"class.blink::HTMLElementStack"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0
  %34 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE, align 8
  %35 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.WTF::StringView"* %9 to i8*
  %37 = bitcast %"class.WTF::StringView"* %7 to i8*
  br label %38

38:                                               ; preds = %655, %2
  %39 = load i8, i8* %13, align 8, !range !4
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %69, label %41

41:                                               ; preds = %38
  store i8 0, i8* %13, align 8
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %43 = load i32, i32* %15, align 8
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 1
  br i1 %47, label %55, label %49

49:                                               ; preds = %41
  %50 = bitcast %"class.WTF::StringImpl"* %48 to i8*
  %51 = zext i32 %43 to i64
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i16
  br label %60

55:                                               ; preds = %41
  %56 = bitcast %"class.WTF::StringImpl"* %48 to i16*
  %57 = zext i32 %43 to i64
  %58 = getelementptr inbounds i16, i16* %56, i64 %57
  %59 = load i16, i16* %58, align 2
  br label %60

60:                                               ; preds = %55, %49
  %61 = phi i16 [ %54, %49 ], [ %59, %55 ]
  %62 = icmp eq i16 %61, 10
  br i1 %62, label %63, label %65

63:                                               ; preds = %60
  %64 = add i32 %43, 1
  store i32 %64, i32* %15, align 8
  br label %65

65:                                               ; preds = %60, %63
  %66 = phi i32 [ %43, %60 ], [ %64, %63 ]
  %67 = load i32, i32* %16, align 4
  %68 = icmp eq i32 %66, %67
  br i1 %68, label %827, label %69

69:                                               ; preds = %38, %65
  %70 = load i32, i32* %17, align 8
  switch i32 %70, label %827 [
    i32 0, label %71
    i32 1, label %104
    i32 2, label %144
    i32 3, label %177
    i32 5, label %237
    i32 7, label %297
    i32 11, label %297
    i32 6, label %297
    i32 15, label %297
    i32 9, label %366
    i32 13, label %366
    i32 14, label %366
    i32 10, label %513
    i32 12, label %537
    i32 18, label %654
    i32 21, label %654
    i32 8, label %656
    i32 4, label %687
    i32 19, label %740
    i32 20, label %740
    i32 17, label %768
    i32 16, label %768
    i32 22, label %799
  ]

71:                                               ; preds = %69
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %73 = load i32, i32* %15, align 8
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 1
  %76 = bitcast %"class.WTF::StringImpl"* %75 to i8*
  %77 = bitcast %"class.WTF::StringImpl"* %75 to i16*
  br label %78

78:                                               ; preds = %95, %71
  %79 = phi i32 [ %96, %95 ], [ %73, %71 ]
  %80 = load atomic i32, i32* %74 monotonic, align 4
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  %83 = zext i32 %79 to i64
  br i1 %82, label %88, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds i8, i8* %76, i64 %83
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i16
  br label %91

88:                                               ; preds = %78
  %89 = getelementptr inbounds i16, i16* %77, i64 %83
  %90 = load i16, i16* %89, align 2
  br label %91

91:                                               ; preds = %88, %84
  %92 = phi i16 [ %87, %84 ], [ %90, %88 ]
  %93 = icmp ult i16 %92, 33
  br i1 %93, label %94, label %99

94:                                               ; preds = %91
  switch i16 %92, label %99 [
    i16 32, label %95
    i16 10, label %95
    i16 9, label %95
    i16 13, label %95
    i16 12, label %95
  ]

95:                                               ; preds = %94, %94, %94, %94, %94
  %96 = add i32 %79, 1
  store i32 %96, i32* %15, align 8
  %97 = load i32, i32* %16, align 4
  %98 = icmp eq i32 %96, %97
  br i1 %98, label %99, label %78

99:                                               ; preds = %91, %94, %95
  %100 = phi i32 [ %79, %91 ], [ %79, %94 ], [ %96, %95 ]
  %101 = load i32, i32* %16, align 4
  %102 = icmp eq i32 %100, %101
  br i1 %102, label %827, label %103

103:                                              ; preds = %99
  call void @_ZN5blink20HTMLConstructionSite27SetDefaultCompatibilityModeEv(%"class.blink::HTMLConstructionSite"* %23) #13
  store i32 1, i32* %17, align 8
  br label %104

104:                                              ; preds = %69, %103
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %106 = load i32, i32* %15, align 8
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 1
  %109 = bitcast %"class.WTF::StringImpl"* %108 to i8*
  %110 = bitcast %"class.WTF::StringImpl"* %108 to i16*
  br label %111

111:                                              ; preds = %128, %104
  %112 = phi i32 [ %129, %128 ], [ %106, %104 ]
  %113 = load atomic i32, i32* %107 monotonic, align 4
  %114 = and i32 %113, 1
  %115 = icmp eq i32 %114, 0
  %116 = zext i32 %112 to i64
  br i1 %115, label %121, label %117

117:                                              ; preds = %111
  %118 = getelementptr inbounds i8, i8* %109, i64 %116
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i16
  br label %124

121:                                              ; preds = %111
  %122 = getelementptr inbounds i16, i16* %110, i64 %116
  %123 = load i16, i16* %122, align 2
  br label %124

124:                                              ; preds = %121, %117
  %125 = phi i16 [ %120, %117 ], [ %123, %121 ]
  %126 = icmp ult i16 %125, 33
  br i1 %126, label %127, label %132

127:                                              ; preds = %124
  switch i16 %125, label %132 [
    i16 32, label %128
    i16 10, label %128
    i16 9, label %128
    i16 13, label %128
    i16 12, label %128
  ]

128:                                              ; preds = %127, %127, %127, %127, %127
  %129 = add i32 %112, 1
  store i32 %129, i32* %15, align 8
  %130 = load i32, i32* %16, align 4
  %131 = icmp eq i32 %129, %130
  br i1 %131, label %132, label %111

132:                                              ; preds = %124, %127, %128
  %133 = phi i32 [ %112, %124 ], [ %112, %127 ], [ %129, %128 ]
  %134 = load i32, i32* %16, align 4
  %135 = icmp eq i32 %133, %134
  br i1 %135, label %827, label %136

136:                                              ; preds = %132
  call void @_ZN5blink15HTMLTreeBuilder20DefaultForBeforeHTMLEv(%"class.blink::HTMLTreeBuilder"* %0)
  %137 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 11, i32 0, i32 0
  %138 = load %"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocumentParser"** %137, align 8
  %139 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %138, i64 0, i32 0, i32 0, i32 0, i32 1
  %140 = load i32, i32* %139, align 8
  %141 = icmp sgt i32 %140, 1
  br i1 %141, label %142, label %144

142:                                              ; preds = %136
  %143 = load i32, i32* %16, align 4
  store i32 %143, i32* %15, align 8
  br label %827

144:                                              ; preds = %69, %136
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %146 = load i32, i32* %15, align 8
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 1
  %149 = bitcast %"class.WTF::StringImpl"* %148 to i8*
  %150 = bitcast %"class.WTF::StringImpl"* %148 to i16*
  br label %151

151:                                              ; preds = %168, %144
  %152 = phi i32 [ %169, %168 ], [ %146, %144 ]
  %153 = load atomic i32, i32* %147 monotonic, align 4
  %154 = and i32 %153, 1
  %155 = icmp eq i32 %154, 0
  %156 = zext i32 %152 to i64
  br i1 %155, label %161, label %157

157:                                              ; preds = %151
  %158 = getelementptr inbounds i8, i8* %149, i64 %156
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i16
  br label %164

161:                                              ; preds = %151
  %162 = getelementptr inbounds i16, i16* %150, i64 %156
  %163 = load i16, i16* %162, align 2
  br label %164

164:                                              ; preds = %161, %157
  %165 = phi i16 [ %160, %157 ], [ %163, %161 ]
  %166 = icmp ult i16 %165, 33
  br i1 %166, label %167, label %172

167:                                              ; preds = %164
  switch i16 %165, label %172 [
    i16 32, label %168
    i16 10, label %168
    i16 9, label %168
    i16 13, label %168
    i16 12, label %168
  ]

168:                                              ; preds = %167, %167, %167, %167, %167
  %169 = add i32 %152, 1
  store i32 %169, i32* %15, align 8
  %170 = load i32, i32* %16, align 4
  %171 = icmp eq i32 %169, %170
  br i1 %171, label %172, label %151

172:                                              ; preds = %164, %167, %168
  %173 = phi i32 [ %152, %164 ], [ %152, %167 ], [ %169, %168 ]
  %174 = load i32, i32* %16, align 4
  %175 = icmp eq i32 %173, %174
  br i1 %175, label %827, label %176

176:                                              ; preds = %172
  call void @_ZN5blink15HTMLTreeBuilder20DefaultForBeforeHeadEv(%"class.blink::HTMLTreeBuilder"* %0)
  br label %177

177:                                              ; preds = %69, %176
  %178 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %178) #13
  %179 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %180 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %181 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %182 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %182, i8 -86, i64 24, i1 false)
  %183 = load i32, i32* %15, align 8, !noalias !5
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8, !noalias !5
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 1
  %187 = bitcast %"class.WTF::StringImpl"* %186 to i8*
  %188 = bitcast %"class.WTF::StringImpl"* %186 to i16*
  br label %189

189:                                              ; preds = %206, %177
  %190 = phi i32 [ %207, %206 ], [ %183, %177 ]
  %191 = load atomic i32, i32* %185 monotonic, align 4, !noalias !5
  %192 = and i32 %191, 1
  %193 = icmp eq i32 %192, 0
  %194 = zext i32 %190 to i64
  br i1 %193, label %199, label %195

195:                                              ; preds = %189
  %196 = getelementptr inbounds i8, i8* %187, i64 %194
  %197 = load i8, i8* %196, align 1, !noalias !5
  %198 = zext i8 %197 to i16
  br label %202

199:                                              ; preds = %189
  %200 = getelementptr inbounds i16, i16* %188, i64 %194
  %201 = load i16, i16* %200, align 2, !noalias !5
  br label %202

202:                                              ; preds = %199, %195
  %203 = phi i16 [ %198, %195 ], [ %201, %199 ]
  %204 = icmp ult i16 %203, 33
  br i1 %204, label %205, label %210

205:                                              ; preds = %202
  switch i16 %203, label %210 [
    i16 32, label %206
    i16 10, label %206
    i16 9, label %206
    i16 13, label %206
    i16 12, label %206
  ]

206:                                              ; preds = %205, %205, %205, %205, %205
  %207 = add i32 %190, 1
  store i32 %207, i32* %15, align 8, !noalias !5
  %208 = load i32, i32* %16, align 4, !noalias !5
  %209 = icmp eq i32 %207, %208
  br i1 %209, label %210, label %189

210:                                              ; preds = %206, %205, %202
  %211 = phi i32 [ %190, %202 ], [ %190, %205 ], [ %207, %206 ]
  %212 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %212, label %224, label %213

213:                                              ; preds = %210
  %214 = sub i32 %211, %183
  store i32 %214, i32* %181, align 8, !alias.scope !5
  store %"class.WTF::StringImpl"* %184, %"class.WTF::StringImpl"** %179, align 8, !alias.scope !5
  %215 = load atomic i32, i32* %185 monotonic, align 4, !noalias !5
  %216 = and i32 %215, 1
  %217 = icmp eq i32 %216, 0
  %218 = zext i32 %183 to i64
  br i1 %217, label %221, label %219

219:                                              ; preds = %213
  %220 = getelementptr inbounds i8, i8* %187, i64 %218
  store i8* %220, i8** %180, align 8, !alias.scope !5
  br label %227

221:                                              ; preds = %213
  %222 = getelementptr inbounds i16, i16* %188, i64 %218
  %223 = bitcast i8** %180 to i16**
  store i16* %222, i16** %223, align 8, !alias.scope !5
  br label %227

224:                                              ; preds = %210
  store i32 0, i32* %181, align 8, !alias.scope !5
  store i8* null, i8** %180, align 8, !alias.scope !5
  %225 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !5
  %226 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %225, i64* %226, align 8, !alias.scope !5
  br label %231

227:                                              ; preds = %219, %221
  %228 = icmp eq i32 %214, 0
  br i1 %228, label %231, label %229

229:                                              ; preds = %227
  call void @_ZN5blink20HTMLConstructionSite14InsertTextNodeERKN3WTF10StringViewENS_14WhitespaceModeE(%"class.blink::HTMLConstructionSite"* %23, %"class.WTF::StringView"* nonnull dereferenceable(24) %5, i32 2) #13
  %230 = load i32, i32* %15, align 8
  br label %231

231:                                              ; preds = %224, %229, %227
  %232 = phi i32 [ %211, %224 ], [ %230, %229 ], [ %211, %227 ]
  %233 = load i32, i32* %16, align 4
  %234 = icmp eq i32 %232, %233
  br i1 %234, label %236, label %235

235:                                              ; preds = %231
  call void @_ZN5blink15HTMLTreeBuilder16DefaultForInHeadEv(%"class.blink::HTMLTreeBuilder"* %0)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %178) #13
  br label %237

236:                                              ; preds = %231
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %178) #13
  br label %827

237:                                              ; preds = %69, %235
  %238 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %238) #13
  %239 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  %240 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %241 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %242 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %242, i8 -86, i64 24, i1 false)
  %243 = load i32, i32* %15, align 8, !noalias !10
  %244 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8, !noalias !10
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 1
  %247 = bitcast %"class.WTF::StringImpl"* %246 to i8*
  %248 = bitcast %"class.WTF::StringImpl"* %246 to i16*
  br label %249

249:                                              ; preds = %266, %237
  %250 = phi i32 [ %267, %266 ], [ %243, %237 ]
  %251 = load atomic i32, i32* %245 monotonic, align 4, !noalias !10
  %252 = and i32 %251, 1
  %253 = icmp eq i32 %252, 0
  %254 = zext i32 %250 to i64
  br i1 %253, label %259, label %255

255:                                              ; preds = %249
  %256 = getelementptr inbounds i8, i8* %247, i64 %254
  %257 = load i8, i8* %256, align 1, !noalias !10
  %258 = zext i8 %257 to i16
  br label %262

259:                                              ; preds = %249
  %260 = getelementptr inbounds i16, i16* %248, i64 %254
  %261 = load i16, i16* %260, align 2, !noalias !10
  br label %262

262:                                              ; preds = %259, %255
  %263 = phi i16 [ %258, %255 ], [ %261, %259 ]
  %264 = icmp ult i16 %263, 33
  br i1 %264, label %265, label %270

265:                                              ; preds = %262
  switch i16 %263, label %270 [
    i16 32, label %266
    i16 10, label %266
    i16 9, label %266
    i16 13, label %266
    i16 12, label %266
  ]

266:                                              ; preds = %265, %265, %265, %265, %265
  %267 = add i32 %250, 1
  store i32 %267, i32* %15, align 8, !noalias !10
  %268 = load i32, i32* %16, align 4, !noalias !10
  %269 = icmp eq i32 %267, %268
  br i1 %269, label %270, label %249

270:                                              ; preds = %266, %265, %262
  %271 = phi i32 [ %250, %262 ], [ %250, %265 ], [ %267, %266 ]
  %272 = icmp eq %"class.WTF::StringImpl"* %244, null
  br i1 %272, label %284, label %273

273:                                              ; preds = %270
  %274 = sub i32 %271, %243
  store i32 %274, i32* %241, align 8, !alias.scope !10
  store %"class.WTF::StringImpl"* %244, %"class.WTF::StringImpl"** %239, align 8, !alias.scope !10
  %275 = load atomic i32, i32* %245 monotonic, align 4, !noalias !10
  %276 = and i32 %275, 1
  %277 = icmp eq i32 %276, 0
  %278 = zext i32 %243 to i64
  br i1 %277, label %281, label %279

279:                                              ; preds = %273
  %280 = getelementptr inbounds i8, i8* %247, i64 %278
  store i8* %280, i8** %240, align 8, !alias.scope !10
  br label %287

281:                                              ; preds = %273
  %282 = getelementptr inbounds i16, i16* %248, i64 %278
  %283 = bitcast i8** %240 to i16**
  store i16* %282, i16** %283, align 8, !alias.scope !10
  br label %287

284:                                              ; preds = %270
  store i32 0, i32* %241, align 8, !alias.scope !10
  store i8* null, i8** %240, align 8, !alias.scope !10
  %285 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !10
  %286 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %285, i64* %286, align 8, !alias.scope !10
  br label %291

287:                                              ; preds = %279, %281
  %288 = icmp eq i32 %274, 0
  br i1 %288, label %291, label %289

289:                                              ; preds = %287
  call void @_ZN5blink20HTMLConstructionSite14InsertTextNodeERKN3WTF10StringViewENS_14WhitespaceModeE(%"class.blink::HTMLConstructionSite"* %23, %"class.WTF::StringView"* nonnull dereferenceable(24) %6, i32 2) #13
  %290 = load i32, i32* %15, align 8
  br label %291

291:                                              ; preds = %284, %289, %287
  %292 = phi i32 [ %271, %284 ], [ %290, %289 ], [ %271, %287 ]
  %293 = load i32, i32* %16, align 4
  %294 = icmp eq i32 %292, %293
  br i1 %294, label %296, label %295

295:                                              ; preds = %291
  call void @_ZN5blink15HTMLTreeBuilder19DefaultForAfterHeadEv(%"class.blink::HTMLTreeBuilder"* %0)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %238) #13
  br label %297

296:                                              ; preds = %291
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %238) #13
  br label %827

297:                                              ; preds = %69, %69, %69, %69, %295
  call void @_ZN5blink20HTMLConstructionSite38ReconstructTheActiveFormattingElementsEv(%"class.blink::HTMLConstructionSite"* %23) #13
  %298 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %298) #13
  %299 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %300 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %301 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %298, i8 -86, i64 24, i1 false) #13
  %302 = load i32, i32* %15, align 8, !noalias !15
  %303 = load i32, i32* %16, align 4, !noalias !15
  store i32 %303, i32* %15, align 8, !noalias !15
  %304 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8, !noalias !15
  %305 = icmp eq %"class.WTF::StringImpl"* %304, null
  br i1 %305, label %322, label %306

306:                                              ; preds = %297
  %307 = sub i32 %303, %302
  store i32 %307, i32* %301, align 8, !alias.scope !15
  store %"class.WTF::StringImpl"* %304, %"class.WTF::StringImpl"** %299, align 8, !alias.scope !15
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %304, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %309 = load atomic i32, i32* %308 monotonic, align 4, !noalias !15
  %310 = and i32 %309, 1
  %311 = icmp eq i32 %310, 0
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %304, i64 1
  br i1 %311, label %317, label %313

313:                                              ; preds = %306
  %314 = bitcast %"class.WTF::StringImpl"* %312 to i8*
  %315 = zext i32 %302 to i64
  %316 = getelementptr inbounds i8, i8* %314, i64 %315
  store i8* %316, i8** %300, align 8, !alias.scope !15
  br label %325

317:                                              ; preds = %306
  %318 = bitcast %"class.WTF::StringImpl"* %312 to i16*
  %319 = zext i32 %302 to i64
  %320 = getelementptr inbounds i16, i16* %318, i64 %319
  %321 = bitcast i8** %300 to i16**
  store i16* %320, i16** %321, align 8, !alias.scope !15
  br label %325

322:                                              ; preds = %297
  store i32 0, i32* %301, align 8, !alias.scope !15
  store i8* null, i8** %300, align 8, !alias.scope !15
  %323 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !15
  %324 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %323, i64* %324, align 8, !alias.scope !15
  br label %325

325:                                              ; preds = %322, %317, %313
  call void @_ZN5blink20HTMLConstructionSite14InsertTextNodeERKN3WTF10StringViewENS_14WhitespaceModeE(%"class.blink::HTMLConstructionSite"* %23, %"class.WTF::StringView"* nonnull dereferenceable(24) %4, i32 0) #13
  %326 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 0
  %327 = load i8, i8* %326, align 8, !range !4
  %328 = icmp eq i8 %327, 0
  br i1 %328, label %365, label %329

329:                                              ; preds = %325
  %330 = load i32, i32* %301, align 8
  %331 = zext i32 %330 to i64
  %332 = icmp eq i32 %330, 0
  br i1 %332, label %365, label %333

333:                                              ; preds = %329
  %334 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %299, align 8
  %335 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %334, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %336 = load atomic i32, i32* %335 monotonic, align 4
  %337 = and i32 %336, 1
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %350, label %339

339:                                              ; preds = %333
  %340 = load i8*, i8** %300, align 8
  br label %341

341:                                              ; preds = %347, %339
  %342 = phi i64 [ %348, %347 ], [ 0, %339 ]
  %343 = getelementptr inbounds i8, i8* %340, i64 %342
  %344 = load i8, i8* %343, align 1
  %345 = icmp ult i8 %344, 33
  br i1 %345, label %346, label %364

346:                                              ; preds = %341
  switch i8 %344, label %364 [
    i8 32, label %347
    i8 10, label %347
    i8 9, label %347
    i8 13, label %347
    i8 12, label %347
  ]

347:                                              ; preds = %346, %346, %346, %346, %346
  %348 = add nuw nsw i64 %342, 1
  %349 = icmp eq i64 %348, %331
  br i1 %349, label %365, label %341

350:                                              ; preds = %333
  %351 = bitcast i8** %300 to i16**
  %352 = load i16*, i16** %351, align 8
  br label %353

353:                                              ; preds = %361, %350
  %354 = phi i64 [ %362, %361 ], [ 0, %350 ]
  %355 = getelementptr inbounds i16, i16* %352, i64 %354
  %356 = load i16, i16* %355, align 2
  %357 = icmp ult i16 %356, 33
  br i1 %357, label %358, label %359

358:                                              ; preds = %353
  switch i16 %356, label %364 [
    i16 32, label %361
    i16 10, label %361
    i16 9, label %361
    i16 13, label %361
    i16 12, label %361
  ]

359:                                              ; preds = %353
  %360 = icmp eq i16 %356, -3
  br i1 %360, label %361, label %364

361:                                              ; preds = %359, %358, %358, %358, %358, %358
  %362 = add nuw nsw i64 %354, 1
  %363 = icmp eq i64 %362, %331
  br i1 %363, label %365, label %353

364:                                              ; preds = %346, %341, %359, %358
  store i8 0, i8* %326, align 8
  br label %365

365:                                              ; preds = %347, %361, %325, %329, %364
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %298) #13
  br label %827

366:                                              ; preds = %69, %69, %69
  %367 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %33, align 8
  %368 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %367, i64 0, i32 0, i32 0, i32 0
  %369 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %368, align 8
  %370 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %369, i64 0, i32 4
  %371 = load i8, i8* %370, align 8, !range !4
  %372 = icmp eq i8 %371, 0
  br i1 %372, label %373, label %442

373:                                              ; preds = %366
  %374 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE to %"class.blink::QualifiedName"**), align 8
  %375 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %374, i64 0, i32 0, i32 0
  %376 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %375, align 8
  %377 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %369, i64 0, i32 1, i32 0, i32 0, i32 0
  %378 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %377, align 8
  %379 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %376, i64 0, i32 3, i32 0, i32 0, i32 0
  %380 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %379, align 8
  %381 = icmp eq %"class.WTF::StringImpl"* %378, %380
  br i1 %381, label %382, label %388

382:                                              ; preds = %373
  %383 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %369, i64 0, i32 3, i32 0, i32 0, i32 0
  %384 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %383, align 8
  %385 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %376, i64 0, i32 4, i32 0, i32 0, i32 0
  %386 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %385, align 8
  %387 = icmp eq %"class.WTF::StringImpl"* %384, %386
  br i1 %387, label %440, label %388

388:                                              ; preds = %373, %382
  %389 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE to %"class.blink::QualifiedName"**), align 8
  %390 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %389, i64 0, i32 0, i32 0
  %391 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %390, align 8
  %392 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %391, i64 0, i32 3, i32 0, i32 0, i32 0
  %393 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %392, align 8
  %394 = icmp eq %"class.WTF::StringImpl"* %378, %393
  br i1 %394, label %395, label %401

395:                                              ; preds = %388
  %396 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %369, i64 0, i32 3, i32 0, i32 0, i32 0
  %397 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %396, align 8
  %398 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %391, i64 0, i32 4, i32 0, i32 0, i32 0
  %399 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %398, align 8
  %400 = icmp eq %"class.WTF::StringImpl"* %397, %399
  br i1 %400, label %440, label %401

401:                                              ; preds = %388, %395
  %402 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE to %"class.blink::QualifiedName"**), align 8
  %403 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %402, i64 0, i32 0, i32 0
  %404 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %403, align 8
  %405 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %404, i64 0, i32 3, i32 0, i32 0, i32 0
  %406 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %405, align 8
  %407 = icmp eq %"class.WTF::StringImpl"* %378, %406
  br i1 %407, label %408, label %414

408:                                              ; preds = %401
  %409 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %369, i64 0, i32 3, i32 0, i32 0, i32 0
  %410 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %409, align 8
  %411 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %404, i64 0, i32 4, i32 0, i32 0, i32 0
  %412 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %411, align 8
  %413 = icmp eq %"class.WTF::StringImpl"* %410, %412
  br i1 %413, label %440, label %414

414:                                              ; preds = %401, %408
  %415 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE to %"class.blink::QualifiedName"**), align 8
  %416 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %415, i64 0, i32 0, i32 0
  %417 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %416, align 8
  %418 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %417, i64 0, i32 3, i32 0, i32 0, i32 0
  %419 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %418, align 8
  %420 = icmp eq %"class.WTF::StringImpl"* %378, %419
  br i1 %420, label %421, label %427

421:                                              ; preds = %414
  %422 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %369, i64 0, i32 3, i32 0, i32 0, i32 0
  %423 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %422, align 8
  %424 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %417, i64 0, i32 4, i32 0, i32 0, i32 0
  %425 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %424, align 8
  %426 = icmp eq %"class.WTF::StringImpl"* %423, %425
  br i1 %426, label %440, label %427

427:                                              ; preds = %414, %421
  %428 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE to %"class.blink::QualifiedName"**), align 8
  %429 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %428, i64 0, i32 0, i32 0
  %430 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %429, align 8
  %431 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %430, i64 0, i32 3, i32 0, i32 0, i32 0
  %432 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %431, align 8
  %433 = icmp eq %"class.WTF::StringImpl"* %378, %432
  br i1 %433, label %434, label %442

434:                                              ; preds = %427
  %435 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %369, i64 0, i32 3, i32 0, i32 0, i32 0
  %436 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %435, align 8
  %437 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %430, i64 0, i32 4, i32 0, i32 0, i32 0
  %438 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %437, align 8
  %439 = icmp eq %"class.WTF::StringImpl"* %436, %438
  br i1 %439, label %440, label %442

440:                                              ; preds = %434, %421, %408, %395, %382
  %441 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 5
  store i32 %70, i32* %441, align 4
  store i32 10, i32* %17, align 8
  br label %513

442:                                              ; preds = %427, %434, %366
  %443 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3, i32 11
  %444 = load i8, i8* %443, align 1, !range !4
  store i8 1, i8* %443, align 1
  call void @_ZN5blink20HTMLConstructionSite38ReconstructTheActiveFormattingElementsEv(%"class.blink::HTMLConstructionSite"* %23) #13
  %445 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %445) #13
  %446 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %447 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %448 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %445, i8 -86, i64 24, i1 false) #13
  %449 = load i32, i32* %15, align 8, !noalias !18
  %450 = load i32, i32* %16, align 4, !noalias !18
  store i32 %450, i32* %15, align 8, !noalias !18
  %451 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8, !noalias !18
  %452 = icmp eq %"class.WTF::StringImpl"* %451, null
  br i1 %452, label %469, label %453

453:                                              ; preds = %442
  %454 = sub i32 %450, %449
  store i32 %454, i32* %448, align 8, !alias.scope !18
  store %"class.WTF::StringImpl"* %451, %"class.WTF::StringImpl"** %446, align 8, !alias.scope !18
  %455 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %451, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %456 = load atomic i32, i32* %455 monotonic, align 4, !noalias !18
  %457 = and i32 %456, 1
  %458 = icmp eq i32 %457, 0
  %459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %451, i64 1
  br i1 %458, label %464, label %460

460:                                              ; preds = %453
  %461 = bitcast %"class.WTF::StringImpl"* %459 to i8*
  %462 = zext i32 %449 to i64
  %463 = getelementptr inbounds i8, i8* %461, i64 %462
  store i8* %463, i8** %447, align 8, !alias.scope !18
  br label %472

464:                                              ; preds = %453
  %465 = bitcast %"class.WTF::StringImpl"* %459 to i16*
  %466 = zext i32 %449 to i64
  %467 = getelementptr inbounds i16, i16* %465, i64 %466
  %468 = bitcast i8** %447 to i16**
  store i16* %467, i16** %468, align 8, !alias.scope !18
  br label %472

469:                                              ; preds = %442
  store i32 0, i32* %448, align 8, !alias.scope !18
  store i8* null, i8** %447, align 8, !alias.scope !18
  %470 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !18
  %471 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %470, i64* %471, align 8, !alias.scope !18
  br label %472

472:                                              ; preds = %469, %464, %460
  call void @_ZN5blink20HTMLConstructionSite14InsertTextNodeERKN3WTF10StringViewENS_14WhitespaceModeE(%"class.blink::HTMLConstructionSite"* %23, %"class.WTF::StringView"* nonnull dereferenceable(24) %3, i32 0) #13
  %473 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 0
  %474 = load i8, i8* %473, align 8, !range !4
  %475 = icmp eq i8 %474, 0
  br i1 %475, label %512, label %476

476:                                              ; preds = %472
  %477 = load i32, i32* %448, align 8
  %478 = zext i32 %477 to i64
  %479 = icmp eq i32 %477, 0
  br i1 %479, label %512, label %480

480:                                              ; preds = %476
  %481 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %446, align 8
  %482 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %481, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %483 = load atomic i32, i32* %482 monotonic, align 4
  %484 = and i32 %483, 1
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %497, label %486

486:                                              ; preds = %480
  %487 = load i8*, i8** %447, align 8
  br label %488

488:                                              ; preds = %494, %486
  %489 = phi i64 [ %495, %494 ], [ 0, %486 ]
  %490 = getelementptr inbounds i8, i8* %487, i64 %489
  %491 = load i8, i8* %490, align 1
  %492 = icmp ult i8 %491, 33
  br i1 %492, label %493, label %511

493:                                              ; preds = %488
  switch i8 %491, label %511 [
    i8 32, label %494
    i8 10, label %494
    i8 9, label %494
    i8 13, label %494
    i8 12, label %494
  ]

494:                                              ; preds = %493, %493, %493, %493, %493
  %495 = add nuw nsw i64 %489, 1
  %496 = icmp eq i64 %495, %478
  br i1 %496, label %512, label %488

497:                                              ; preds = %480
  %498 = bitcast i8** %447 to i16**
  %499 = load i16*, i16** %498, align 8
  br label %500

500:                                              ; preds = %508, %497
  %501 = phi i64 [ %509, %508 ], [ 0, %497 ]
  %502 = getelementptr inbounds i16, i16* %499, i64 %501
  %503 = load i16, i16* %502, align 2
  %504 = icmp ult i16 %503, 33
  br i1 %504, label %505, label %506

505:                                              ; preds = %500
  switch i16 %503, label %511 [
    i16 32, label %508
    i16 10, label %508
    i16 9, label %508
    i16 13, label %508
    i16 12, label %508
  ]

506:                                              ; preds = %500
  %507 = icmp eq i16 %503, -3
  br i1 %507, label %508, label %511

508:                                              ; preds = %506, %505, %505, %505, %505, %505
  %509 = add nuw nsw i64 %501, 1
  %510 = icmp eq i64 %509, %478
  br i1 %510, label %512, label %500

511:                                              ; preds = %493, %488, %506, %505
  store i8 0, i8* %473, align 8
  br label %512

512:                                              ; preds = %494, %508, %472, %476, %511
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %445) #13
  store i8 %444, i8* %443, align 1
  br label %827

513:                                              ; preds = %69, %440
  %514 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 7
  %515 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %516 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %515, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %517 = load atomic i32, i32* %516 monotonic, align 4
  %518 = and i32 %517, 1
  %519 = icmp eq i32 %518, 0
  %520 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %515, i64 1
  br i1 %519, label %528, label %521

521:                                              ; preds = %513
  %522 = bitcast %"class.WTF::StringImpl"* %520 to i8*
  %523 = load i32, i32* %15, align 8
  %524 = zext i32 %523 to i64
  %525 = getelementptr inbounds i8, i8* %522, i64 %524
  %526 = load i32, i32* %16, align 4
  %527 = sub i32 %526, %523
  call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %514, i8* %525, i32 %527) #13
  br label %535

528:                                              ; preds = %513
  %529 = bitcast %"class.WTF::StringImpl"* %520 to i16*
  %530 = load i32, i32* %15, align 8
  %531 = zext i32 %530 to i64
  %532 = getelementptr inbounds i16, i16* %529, i64 %531
  %533 = load i32, i32* %16, align 4
  %534 = sub i32 %533, %530
  call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %514, i16* %532, i32 %534) #13
  br label %535

535:                                              ; preds = %521, %528
  %536 = load i32, i32* %16, align 4
  store i32 %536, i32* %15, align 8
  br label %827

537:                                              ; preds = %69
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 24, i1 false)
  %538 = load i32, i32* %15, align 8, !noalias !21
  %539 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8, !noalias !21
  %540 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %539, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %541 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %539, i64 1
  %542 = bitcast %"class.WTF::StringImpl"* %541 to i8*
  %543 = bitcast %"class.WTF::StringImpl"* %541 to i16*
  br label %544

544:                                              ; preds = %561, %537
  %545 = phi i32 [ %562, %561 ], [ %538, %537 ]
  %546 = load atomic i32, i32* %540 monotonic, align 4, !noalias !21
  %547 = and i32 %546, 1
  %548 = icmp eq i32 %547, 0
  %549 = zext i32 %545 to i64
  br i1 %548, label %554, label %550

550:                                              ; preds = %544
  %551 = getelementptr inbounds i8, i8* %542, i64 %549
  %552 = load i8, i8* %551, align 1, !noalias !21
  %553 = zext i8 %552 to i16
  br label %557

554:                                              ; preds = %544
  %555 = getelementptr inbounds i16, i16* %543, i64 %549
  %556 = load i16, i16* %555, align 2, !noalias !21
  br label %557

557:                                              ; preds = %554, %550
  %558 = phi i16 [ %553, %550 ], [ %556, %554 ]
  %559 = icmp ult i16 %558, 33
  br i1 %559, label %560, label %565

560:                                              ; preds = %557
  switch i16 %558, label %565 [
    i16 32, label %561
    i16 10, label %561
    i16 9, label %561
    i16 13, label %561
    i16 12, label %561
  ]

561:                                              ; preds = %560, %560, %560, %560, %560
  %562 = add i32 %545, 1
  store i32 %562, i32* %15, align 8, !noalias !21
  %563 = load i32, i32* %16, align 4, !noalias !21
  %564 = icmp eq i32 %562, %563
  br i1 %564, label %565, label %544

565:                                              ; preds = %561, %560, %557
  %566 = phi i32 [ %545, %557 ], [ %545, %560 ], [ %562, %561 ]
  %567 = icmp eq %"class.WTF::StringImpl"* %539, null
  br i1 %567, label %578, label %568

568:                                              ; preds = %565
  %569 = sub i32 %566, %538
  store i32 %569, i32* %28, align 8, !alias.scope !21
  store %"class.WTF::StringImpl"* %539, %"class.WTF::StringImpl"** %26, align 8, !alias.scope !21
  %570 = load atomic i32, i32* %540 monotonic, align 4, !noalias !21
  %571 = and i32 %570, 1
  %572 = icmp eq i32 %571, 0
  %573 = zext i32 %538 to i64
  br i1 %572, label %576, label %574

574:                                              ; preds = %568
  %575 = getelementptr inbounds i8, i8* %542, i64 %573
  store i8* %575, i8** %27, align 8, !alias.scope !21
  br label %580

576:                                              ; preds = %568
  %577 = getelementptr inbounds i16, i16* %543, i64 %573
  store i16* %577, i16** %29, align 8, !alias.scope !21
  br label %580

578:                                              ; preds = %565
  store i32 0, i32* %28, align 8, !alias.scope !21
  store i8* null, i8** %27, align 8, !alias.scope !21
  %579 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !21
  store i64 %579, i64* %30, align 8, !alias.scope !21
  br label %584

580:                                              ; preds = %574, %576
  %581 = icmp eq i32 %569, 0
  br i1 %581, label %584, label %582

582:                                              ; preds = %580
  call void @_ZN5blink20HTMLConstructionSite14InsertTextNodeERKN3WTF10StringViewENS_14WhitespaceModeE(%"class.blink::HTMLConstructionSite"* %23, %"class.WTF::StringView"* nonnull dereferenceable(24) %7, i32 2) #13
  %583 = load i32, i32* %15, align 8
  br label %584

584:                                              ; preds = %578, %582, %580
  %585 = phi i32 [ %566, %578 ], [ %583, %582 ], [ %566, %580 ]
  %586 = load i32, i32* %16, align 4
  %587 = icmp eq i32 %585, %586
  br i1 %587, label %653, label %588

588:                                              ; preds = %584
  %589 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %32, align 8
  %590 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %589, i64 0, i32 0, i32 0, i32 0
  %591 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %590, align 8
  %592 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %591, i64 0, i32 0, i32 0, i32 0
  %593 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %592, align 8
  %594 = call %"class.blink::ContainerNode"* @_ZNK5blink16HTMLElementStack8RootNodeEv(%"class.blink::HTMLElementStack"* %31) #13
  %595 = icmp eq %"class.blink::ContainerNode"* %593, %594
  br i1 %595, label %620, label %596

596:                                              ; preds = %588
  %597 = load %"class.blink::HTMLElementStack::ElementRecord"*, %"class.blink::HTMLElementStack::ElementRecord"** %33, align 8
  %598 = getelementptr inbounds %"class.blink::HTMLElementStack::ElementRecord", %"class.blink::HTMLElementStack::ElementRecord"* %597, i64 0, i32 0, i32 0, i32 0
  %599 = load %"class.blink::HTMLStackItem"*, %"class.blink::HTMLStackItem"** %598, align 8
  %600 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %599, i64 0, i32 0, i32 0, i32 0
  %601 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %600, align 8
  %602 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %601, i64 0, i32 0, i32 1
  %603 = load i32, i32* %602, align 8
  %604 = and i32 %603, 48
  %605 = icmp ne i32 %604, 0
  %606 = icmp eq %"class.blink::ContainerNode"* %601, null
  %607 = or i1 %606, %605
  br i1 %607, label %619, label %608

608:                                              ; preds = %596
  %609 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %601, i64 0, i32 0
  %610 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %611 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %609, i64 1, i32 2
  %612 = bitcast %"class.blink::Member.2"* %611 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %613 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %612, align 8
  %614 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %613, i64 0, i32 3, i32 0, i32 0, i32 0
  %615 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %614, align 8
  %616 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %610, i64 0, i32 3, i32 0, i32 0, i32 0
  %617 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %616, align 8
  %618 = icmp eq %"class.WTF::StringImpl"* %615, %617
  br i1 %618, label %620, label %619

619:                                              ; preds = %596, %608
  call void @_ZN5blink16HTMLElementStack3PopEv(%"class.blink::HTMLElementStack"* %31) #13
  store i32 9, i32* %17, align 8
  br label %652

620:                                              ; preds = %608, %588
  %621 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %622 = load i32, i32* %15, align 8
  %623 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %621, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %624 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %621, i64 1
  %625 = bitcast %"class.WTF::StringImpl"* %624 to i8*
  %626 = bitcast %"class.WTF::StringImpl"* %624 to i16*
  br label %627

627:                                              ; preds = %644, %620
  %628 = phi i32 [ %645, %644 ], [ %622, %620 ]
  %629 = load atomic i32, i32* %623 monotonic, align 4
  %630 = and i32 %629, 1
  %631 = icmp eq i32 %630, 0
  %632 = zext i32 %628 to i64
  br i1 %631, label %637, label %633

633:                                              ; preds = %627
  %634 = getelementptr inbounds i8, i8* %625, i64 %632
  %635 = load i8, i8* %634, align 1
  %636 = zext i8 %635 to i16
  br label %640

637:                                              ; preds = %627
  %638 = getelementptr inbounds i16, i16* %626, i64 %632
  %639 = load i16, i16* %638, align 2
  br label %640

640:                                              ; preds = %637, %633
  %641 = phi i16 [ %636, %633 ], [ %639, %637 ]
  %642 = icmp ult i16 %641, 33
  br i1 %642, label %643, label %644

643:                                              ; preds = %640
  switch i16 %641, label %644 [
    i16 32, label %648
    i16 10, label %648
    i16 9, label %648
    i16 13, label %648
    i16 12, label %648
  ]

644:                                              ; preds = %643, %640
  %645 = add i32 %628, 1
  store i32 %645, i32* %15, align 8
  %646 = load i32, i32* %16, align 4
  %647 = icmp eq i32 %645, %646
  br i1 %647, label %648, label %627

648:                                              ; preds = %643, %643, %643, %643, %643, %644
  %649 = phi i32 [ %628, %643 ], [ %628, %643 ], [ %628, %643 ], [ %628, %643 ], [ %628, %643 ], [ %645, %644 ]
  %650 = load i32, i32* %16, align 4
  %651 = icmp eq i32 %649, %650
  br i1 %651, label %653, label %652

652:                                              ; preds = %619, %648
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #13
  br label %655

653:                                              ; preds = %648, %584
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #13
  br label %827

654:                                              ; preds = %69, %69
  store i32 7, i32* %17, align 8
  br label %655

655:                                              ; preds = %654, %652, %738
  br label %38

656:                                              ; preds = %69
  %657 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %657) #13
  %658 = load i32, i32* %15, align 8, !noalias !26
  %659 = load i32, i32* %16, align 4, !noalias !26
  store i32 %659, i32* %15, align 8, !noalias !26
  %660 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8, !noalias !26
  %661 = icmp eq %"class.WTF::StringImpl"* %660, null
  %662 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  br i1 %661, label %682, label %663

663:                                              ; preds = %656
  %664 = sub i32 %659, %658
  store i32 %664, i32* %662, align 8, !alias.scope !26
  %665 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %660, %"class.WTF::StringImpl"** %665, align 8, !alias.scope !26
  %666 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %660, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %667 = load atomic i32, i32* %666 monotonic, align 4, !noalias !26
  %668 = and i32 %667, 1
  %669 = icmp eq i32 %668, 0
  %670 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %660, i64 1
  br i1 %669, label %676, label %671

671:                                              ; preds = %663
  %672 = bitcast %"class.WTF::StringImpl"* %670 to i8*
  %673 = zext i32 %658 to i64
  %674 = getelementptr inbounds i8, i8* %672, i64 %673
  %675 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* %674, i8** %675, align 8, !alias.scope !26
  br label %686

676:                                              ; preds = %663
  %677 = bitcast %"class.WTF::StringImpl"* %670 to i16*
  %678 = zext i32 %658 to i64
  %679 = getelementptr inbounds i16, i16* %677, i64 %678
  %680 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %681 = bitcast i8** %680 to i16**
  store i16* %679, i16** %681, align 8, !alias.scope !26
  br label %686

682:                                              ; preds = %656
  store i32 0, i32* %662, align 8, !alias.scope !26
  %683 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %683, align 8, !alias.scope !26
  %684 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !26
  %685 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %684, i64* %685, align 8, !alias.scope !26
  br label %686

686:                                              ; preds = %671, %676, %682
  call void @_ZN5blink20HTMLConstructionSite14InsertTextNodeERKN3WTF10StringViewENS_14WhitespaceModeE(%"class.blink::HTMLConstructionSite"* %23, %"class.WTF::StringView"* nonnull dereferenceable(24) %8, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %657) #13
  br label %827

687:                                              ; preds = %69
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false)
  %688 = load i32, i32* %15, align 8, !noalias !29
  %689 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8, !noalias !29
  %690 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %689, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %691 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %689, i64 1
  %692 = bitcast %"class.WTF::StringImpl"* %691 to i8*
  %693 = bitcast %"class.WTF::StringImpl"* %691 to i16*
  br label %694

694:                                              ; preds = %711, %687
  %695 = phi i32 [ %712, %711 ], [ %688, %687 ]
  %696 = load atomic i32, i32* %690 monotonic, align 4, !noalias !29
  %697 = and i32 %696, 1
  %698 = icmp eq i32 %697, 0
  %699 = zext i32 %695 to i64
  br i1 %698, label %704, label %700

700:                                              ; preds = %694
  %701 = getelementptr inbounds i8, i8* %692, i64 %699
  %702 = load i8, i8* %701, align 1, !noalias !29
  %703 = zext i8 %702 to i16
  br label %707

704:                                              ; preds = %694
  %705 = getelementptr inbounds i16, i16* %693, i64 %699
  %706 = load i16, i16* %705, align 2, !noalias !29
  br label %707

707:                                              ; preds = %704, %700
  %708 = phi i16 [ %703, %700 ], [ %706, %704 ]
  %709 = icmp ult i16 %708, 33
  br i1 %709, label %710, label %715

710:                                              ; preds = %707
  switch i16 %708, label %715 [
    i16 32, label %711
    i16 10, label %711
    i16 9, label %711
    i16 13, label %711
    i16 12, label %711
  ]

711:                                              ; preds = %710, %710, %710, %710, %710
  %712 = add i32 %695, 1
  store i32 %712, i32* %15, align 8, !noalias !29
  %713 = load i32, i32* %16, align 4, !noalias !29
  %714 = icmp eq i32 %712, %713
  br i1 %714, label %715, label %694

715:                                              ; preds = %711, %710, %707
  %716 = phi i32 [ %695, %707 ], [ %695, %710 ], [ %712, %711 ]
  %717 = icmp eq %"class.WTF::StringImpl"* %689, null
  br i1 %717, label %728, label %718

718:                                              ; preds = %715
  %719 = sub i32 %716, %688
  store i32 %719, i32* %21, align 8, !alias.scope !29
  store %"class.WTF::StringImpl"* %689, %"class.WTF::StringImpl"** %19, align 8, !alias.scope !29
  %720 = load atomic i32, i32* %690 monotonic, align 4, !noalias !29
  %721 = and i32 %720, 1
  %722 = icmp eq i32 %721, 0
  %723 = zext i32 %688 to i64
  br i1 %722, label %726, label %724

724:                                              ; preds = %718
  %725 = getelementptr inbounds i8, i8* %692, i64 %723
  store i8* %725, i8** %20, align 8, !alias.scope !29
  br label %730

726:                                              ; preds = %718
  %727 = getelementptr inbounds i16, i16* %693, i64 %723
  store i16* %727, i16** %22, align 8, !alias.scope !29
  br label %730

728:                                              ; preds = %715
  store i32 0, i32* %21, align 8, !alias.scope !29
  store i8* null, i8** %20, align 8, !alias.scope !29
  %729 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !29
  store i64 %729, i64* %24, align 8, !alias.scope !29
  br label %734

730:                                              ; preds = %724, %726
  %731 = icmp eq i32 %719, 0
  br i1 %731, label %734, label %732

732:                                              ; preds = %730
  call void @_ZN5blink20HTMLConstructionSite14InsertTextNodeERKN3WTF10StringViewENS_14WhitespaceModeE(%"class.blink::HTMLConstructionSite"* %23, %"class.WTF::StringView"* nonnull dereferenceable(24) %9, i32 2) #13
  %733 = load i32, i32* %15, align 8
  br label %734

734:                                              ; preds = %728, %732, %730
  %735 = phi i32 [ %716, %728 ], [ %733, %732 ], [ %716, %730 ]
  %736 = load i32, i32* %16, align 4
  %737 = icmp eq i32 %735, %736
  br i1 %737, label %739, label %738

738:                                              ; preds = %734
  call void @_ZN5blink15HTMLTreeBuilder24DefaultForInHeadNoscriptEv(%"class.blink::HTMLTreeBuilder"* %0)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #13
  br label %655

739:                                              ; preds = %734
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #13
  br label %827

740:                                              ; preds = %69, %69
  %741 = call %"class.WTF::StringImpl"* @_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer23TakeRemainingWhitespaceEv(%"class.blink::HTMLTreeBuilder::CharacterTokenBuffer"* %1)
  %742 = icmp eq %"class.WTF::StringImpl"* %741, null
  br i1 %742, label %827, label %743

743:                                              ; preds = %740
  %744 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %741, i64 0, i32 1
  %745 = load i32, i32* %744, align 4
  %746 = icmp eq i32 %745, 0
  br i1 %746, label %755, label %747

747:                                              ; preds = %743
  %748 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %748) #13
  %749 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %741, %"class.WTF::StringImpl"** %749, align 8
  %750 = load i32, i32* %744, align 4
  %751 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %741, i64 1
  %752 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %753 = bitcast i8** %752 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %751, %"class.WTF::StringImpl"** %753, align 8
  %754 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %750, i32* %754, align 8
  call void @_ZN5blink20HTMLConstructionSite14InsertTextNodeERKN3WTF10StringViewENS_14WhitespaceModeE(%"class.blink::HTMLConstructionSite"* %23, %"class.WTF::StringView"* nonnull dereferenceable(24) %10, i32 2) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %748) #13
  br label %755

755:                                              ; preds = %747, %743
  %756 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %741, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %757 = load atomic i32, i32* %756 monotonic, align 4
  %758 = and i32 %757, 2
  %759 = icmp eq i32 %758, 0
  %760 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %741, i64 0, i32 0
  %761 = load i32, i32* %760, align 4
  br i1 %759, label %762, label %764

762:                                              ; preds = %755
  %763 = add i32 %761, -1
  store i32 %763, i32* %760, align 4
  br label %764

764:                                              ; preds = %762, %755
  %765 = phi i32 [ %763, %762 ], [ %761, %755 ]
  %766 = icmp eq i32 %765, 0
  br i1 %766, label %767, label %827

767:                                              ; preds = %764
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %741) #13
  br label %827

768:                                              ; preds = %69, %69
  %769 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %769) #13
  %770 = load i32, i32* %15, align 8, !noalias !34
  %771 = load i32, i32* %16, align 4, !noalias !34
  store i32 %771, i32* %15, align 8, !noalias !34
  %772 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8, !noalias !34
  %773 = icmp eq %"class.WTF::StringImpl"* %772, null
  %774 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  br i1 %773, label %794, label %775

775:                                              ; preds = %768
  %776 = sub i32 %771, %770
  store i32 %776, i32* %774, align 8, !alias.scope !34
  %777 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %772, %"class.WTF::StringImpl"** %777, align 8, !alias.scope !34
  %778 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %772, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %779 = load atomic i32, i32* %778 monotonic, align 4, !noalias !34
  %780 = and i32 %779, 1
  %781 = icmp eq i32 %780, 0
  %782 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %772, i64 1
  br i1 %781, label %788, label %783

783:                                              ; preds = %775
  %784 = bitcast %"class.WTF::StringImpl"* %782 to i8*
  %785 = zext i32 %770 to i64
  %786 = getelementptr inbounds i8, i8* %784, i64 %785
  %787 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* %786, i8** %787, align 8, !alias.scope !34
  br label %798

788:                                              ; preds = %775
  %789 = bitcast %"class.WTF::StringImpl"* %782 to i16*
  %790 = zext i32 %770 to i64
  %791 = getelementptr inbounds i16, i16* %789, i64 %790
  %792 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %793 = bitcast i8** %792 to i16**
  store i16* %791, i16** %793, align 8, !alias.scope !34
  br label %798

794:                                              ; preds = %768
  store i32 0, i32* %774, align 8, !alias.scope !34
  %795 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %795, align 8, !alias.scope !34
  %796 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !34
  %797 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %796, i64* %797, align 8, !alias.scope !34
  br label %798

798:                                              ; preds = %783, %788, %794
  call void @_ZN5blink20HTMLConstructionSite14InsertTextNodeERKN3WTF10StringViewENS_14WhitespaceModeE(%"class.blink::HTMLConstructionSite"* %23, %"class.WTF::StringView"* nonnull dereferenceable(24) %11, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %769) #13
  br label %827

799:                                              ; preds = %69
  %800 = call %"class.WTF::StringImpl"* @_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer23TakeRemainingWhitespaceEv(%"class.blink::HTMLTreeBuilder::CharacterTokenBuffer"* %1)
  %801 = icmp eq %"class.WTF::StringImpl"* %800, null
  br i1 %801, label %827, label %802

802:                                              ; preds = %799
  %803 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %800, i64 0, i32 1
  %804 = load i32, i32* %803, align 4
  %805 = icmp eq i32 %804, 0
  br i1 %805, label %814, label %806

806:                                              ; preds = %802
  call void @_ZN5blink20HTMLConstructionSite38ReconstructTheActiveFormattingElementsEv(%"class.blink::HTMLConstructionSite"* %23) #13
  %807 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %807) #13
  %808 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %800, %"class.WTF::StringImpl"** %808, align 8
  %809 = load i32, i32* %803, align 4
  %810 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %800, i64 1
  %811 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %812 = bitcast i8** %811 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %810, %"class.WTF::StringImpl"** %812, align 8
  %813 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %809, i32* %813, align 8
  call void @_ZN5blink20HTMLConstructionSite14InsertTextNodeERKN3WTF10StringViewENS_14WhitespaceModeE(%"class.blink::HTMLConstructionSite"* %23, %"class.WTF::StringView"* nonnull dereferenceable(24) %12, i32 2) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %807) #13
  br label %814

814:                                              ; preds = %806, %802
  %815 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %800, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %816 = load atomic i32, i32* %815 monotonic, align 4
  %817 = and i32 %816, 2
  %818 = icmp eq i32 %817, 0
  %819 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %800, i64 0, i32 0
  %820 = load i32, i32* %819, align 4
  br i1 %818, label %821, label %823

821:                                              ; preds = %814
  %822 = add i32 %820, -1
  store i32 %822, i32* %819, align 4
  br label %823

823:                                              ; preds = %821, %814
  %824 = phi i32 [ %822, %821 ], [ %820, %814 ]
  %825 = icmp eq i32 %824, 0
  br i1 %825, label %826, label %827

826:                                              ; preds = %823
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %800) #13
  br label %827

827:                                              ; preds = %65, %69, %826, %823, %799, %767, %764, %740, %739, %653, %296, %236, %172, %132, %99, %142, %798, %686, %535, %512, %365
  ret void
}

declare void @_ZN5blink20HTMLConstructionSite14InsertTextNodeERKN3WTF10StringViewENS_14WhitespaceModeE(%"class.blink::HTMLConstructionSite"*, %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer23TakeRemainingWhitespaceEv(%"class.blink::HTMLTreeBuilder::CharacterTokenBuffer"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i8*, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer", %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer", %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  store i32 %6, i32* %3, align 8
  %7 = icmp ult i32 %4, %6
  br i1 %7, label %8, label %145

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer", %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 1
  %13 = bitcast %"class.WTF::StringImpl"* %12 to i8*
  %14 = bitcast %"class.WTF::StringImpl"* %12 to i16*
  %15 = zext i32 %4 to i64
  %16 = zext i32 %6 to i64
  br label %19

17:                                               ; preds = %38
  %18 = icmp eq i32 %39, 0
  br i1 %18, label %145, label %42

19:                                               ; preds = %38, %8
  %20 = phi i64 [ %15, %8 ], [ %40, %38 ]
  %21 = phi i32 [ 0, %8 ], [ %39, %38 ]
  %22 = load atomic i32, i32* %11 monotonic, align 4
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds i8, i8* %13, i64 %20
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i16
  br label %32

29:                                               ; preds = %19
  %30 = getelementptr inbounds i16, i16* %14, i64 %20
  %31 = load i16, i16* %30, align 2
  br label %32

32:                                               ; preds = %25, %29
  %33 = phi i16 [ %28, %25 ], [ %31, %29 ]
  %34 = icmp ult i16 %33, 33
  br i1 %34, label %35, label %38

35:                                               ; preds = %32
  switch i16 %33, label %38 [
    i16 32, label %36
    i16 10, label %36
    i16 9, label %36
    i16 13, label %36
    i16 12, label %36
  ]

36:                                               ; preds = %35, %35, %35, %35, %35
  %37 = add i32 %21, 1
  br label %38

38:                                               ; preds = %35, %32, %36
  %39 = phi i32 [ %37, %36 ], [ %21, %32 ], [ %21, %35 ]
  %40 = add nuw nsw i64 %20, 1
  %41 = icmp eq i64 %40, %16
  br i1 %41, label %17, label %19

42:                                               ; preds = %17
  %43 = sub i32 %4, %6
  %44 = icmp eq i32 %39, %43
  br i1 %44, label %45, label %50

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer", %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF10StringImpl9SubstringEjj(%"class.WTF::StringImpl"* %47, i32 %4, i32 %39) #13
  %49 = ptrtoint %"class.WTF::StringImpl"* %48 to i64
  br label %145

50:                                               ; preds = %42
  %51 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %2, align 8
  %52 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %39, i8** nonnull dereferenceable(8) %2) #13
  %53 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #13
  %54 = load i32, i32* %5, align 4
  %55 = icmp ult i32 %4, %54
  br i1 %55, label %56, label %63

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer", %"class.blink::HTMLTreeBuilder::CharacterTokenBuffer"* %0, i64 0, i32 0, i32 0
  %58 = icmp eq %"class.WTF::StringImpl"* %52, null
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 1
  %61 = bitcast %"class.WTF::StringImpl"* %60 to i8*
  %62 = zext i32 %4 to i64
  br label %104

63:                                               ; preds = %139, %50
  %64 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %145

69:                                               ; preds = %65, %63
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %71 = ptrtoint %"class.WTF::StringImpl"* %70 to i64
  %72 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %72, label %90, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %90

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #13
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !2

87:                                               ; preds = %78
  call void @llvm.trap() #13
  unreachable

88:                                               ; preds = %78
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %79, align 4
  br label %90

90:                                               ; preds = %69, %73, %88
  br i1 %64, label %145, label %91

91:                                               ; preds = %90
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %145

103:                                              ; preds = %100
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #13
  br label %145

104:                                              ; preds = %56, %139
  %105 = phi i32 [ %54, %56 ], [ %140, %139 ]
  %106 = phi i64 [ %62, %56 ], [ %142, %139 ]
  %107 = phi i32 [ 0, %56 ], [ %141, %139 ]
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 1
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 1
  br i1 %112, label %119, label %114

114:                                              ; preds = %104
  %115 = bitcast %"class.WTF::StringImpl"* %113 to i8*
  %116 = getelementptr inbounds i8, i8* %115, i64 %106
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i16
  br label %123

119:                                              ; preds = %104
  %120 = bitcast %"class.WTF::StringImpl"* %113 to i16*
  %121 = getelementptr inbounds i16, i16* %120, i64 %106
  %122 = load i16, i16* %121, align 2
  br label %123

123:                                              ; preds = %114, %119
  %124 = phi i16 [ %118, %114 ], [ %122, %119 ]
  %125 = icmp ult i16 %124, 33
  br i1 %125, label %126, label %139

126:                                              ; preds = %123
  switch i16 %124, label %139 [
    i16 32, label %127
    i16 10, label %127
    i16 9, label %127
    i16 13, label %127
    i16 12, label %127
  ]

127:                                              ; preds = %126, %126, %126, %126, %126
  %128 = trunc i16 %124 to i8
  %129 = add i32 %107, 1
  br i1 %58, label %134, label %130

130:                                              ; preds = %127
  %131 = load i32, i32* %59, align 4
  %132 = icmp eq i32 %131, 0
  %133 = select i1 %132, i8* null, i8* %61
  br label %134

134:                                              ; preds = %130, %127
  %135 = phi i8* [ null, %127 ], [ %133, %130 ]
  %136 = zext i32 %107 to i64
  %137 = getelementptr inbounds i8, i8* %135, i64 %136
  store i8 %128, i8* %137, align 1
  %138 = load i32, i32* %5, align 4
  br label %139

139:                                              ; preds = %126, %123, %134
  %140 = phi i32 [ %138, %134 ], [ %105, %123 ], [ %105, %126 ]
  %141 = phi i32 [ %129, %134 ], [ %107, %123 ], [ %107, %126 ]
  %142 = add nuw nsw i64 %106, 1
  %143 = zext i32 %140 to i64
  %144 = icmp ult i64 %142, %143
  br i1 %144, label %104, label %63

145:                                              ; preds = %1, %65, %103, %100, %90, %17, %45
  %146 = phi i64 [ %49, %45 ], [ 0, %17 ], [ %71, %90 ], [ %71, %100 ], [ %71, %103 ], [ %53, %65 ], [ 0, %1 ]
  %147 = inttoptr i64 %146 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %147
}

declare void @_ZN5blink20HTMLConstructionSite16ProcessEndOfFileEv(%"class.blink::HTMLConstructionSite"*) local_unnamed_addr #1

declare void @_ZN5blink20HTMLConstructionSite27SetDefaultCompatibilityModeEv(%"class.blink::HTMLConstructionSite"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder28ProcessGenericRCDATAStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite17InsertHTMLElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %3, %"class.blink::AtomicHTMLToken"* %1) #13
  %4 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 11, i32 0, i32 0
  %5 = load %"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocumentParser"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %5, i64 0, i32 7, i32 0, i32 0, i32 0
  %7 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %6, align 8
  %8 = icmp eq %"class.blink::HTMLTokenizer"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %7, i64 0, i32 0
  store i32 2, i32* %10, align 8
  br label %11

11:                                               ; preds = %2, %9
  %12 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 5
  store i32 %13, i32* %14, align 4
  store i32 8, i32* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder21ProcessScriptStartTagEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite19InsertScriptElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"* %3, %"class.blink::AtomicHTMLToken"* %1) #13
  %4 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 11, i32 0, i32 0
  %5 = load %"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocumentParser"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %5, i64 0, i32 7, i32 0, i32 0, i32 0
  %7 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %6, align 8
  %8 = icmp eq %"class.blink::HTMLTokenizer"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %7, i64 0, i32 0
  store i32 5, i32* %10, align 8
  %11 = load %"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocumentParser"** %4, align 8
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi %"class.blink::HTMLDocumentParser"* [ %5, %2 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 5
  store i32 %15, i32* %16, align 4
  %17 = tail call i64 @_ZNK5blink18HTMLDocumentParser15GetTextPositionEv(%"class.blink::HTMLDocumentParser"* %13) #13
  %18 = trunc i64 %17 to i32
  %19 = lshr i64 %17, 32
  %20 = trunc i64 %19 to i32
  %21 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 13, i32 0, i32 0
  store i32 %18, i32* %21, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 13, i32 1, i32 0
  store i32 %20, i32* %22, align 4
  store i32 8, i32* %14, align 8
  ret void
}

declare void @_ZN5blink20HTMLConstructionSite19InsertScriptElementEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLConstructionSite"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #1

declare i64 @_ZNK5blink18HTMLDocumentParser15GetTextPositionEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #1

declare void @_ZN5blink16HTMLElementStack33PopUntilForeignContentScopeMarkerEv(%"class.blink::HTMLElementStack"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL20AdjustSVGTagNameCaseEPNS_15AtomicHTMLTokenE(%"class.blink::AtomicHTMLToken"*) unnamed_addr #0 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = alloca %"class.blink::QualifiedName", align 8
  %4 = load %"class.WTF::HashMap.1361"*, %"class.WTF::HashMap.1361"** @_ZZN5blinkL20AdjustSVGTagNameCaseEPNS_15AtomicHTMLTokenEE8case_map, align 8
  %5 = icmp eq %"class.WTF::HashMap.1361"* %4, null
  br i1 %5, label %6, label %51

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 24, i8* getelementptr inbounds ([224 x i8], [224 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapINS_12AtomicStringEN5blink13QualifiedNameENS_16AtomicStringHashENS_10HashTraitsIS2_EENS6_IS4_EENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #13
  store i8* %7, i8** bitcast (%"class.WTF::HashMap.1361"** @_ZZN5blinkL20AdjustSVGTagNameCaseEPNS_15AtomicHTMLTokenEE8case_map to i8**), align 8
  %8 = tail call %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7GetTagsEv() #13
  %9 = load %"class.WTF::HashMap.1361"*, %"class.WTF::HashMap.1361"** @_ZZN5blinkL20AdjustSVGTagNameCaseEPNS_15AtomicHTMLTokenEE8case_map, align 8
  %10 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.WTF::HashMap.1361", %"class.WTF::HashMap.1361"* %9, i64 0, i32 0
  br label %13

13:                                               ; preds = %44, %6
  %14 = phi i64 [ 0, %6 ], [ %45, %44 ]
  %15 = getelementptr inbounds %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** %8, i64 %14
  %16 = bitcast %"class.blink::SVGQualifiedName"** %15 to %"class.blink::QualifiedName"**
  %17 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %11, align 8
  %21 = call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"* %20) #13
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %11, align 8
  %22 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %20, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  br i1 %24, label %28, label %25

25:                                               ; preds = %13
  %26 = call { %"struct.WTF::KeyValuePair.1365"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS1_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.1362"* %12, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %2, %"class.blink::QualifiedName"* dereferenceable(8) %17) #13
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  br label %28

28:                                               ; preds = %25, %13
  %29 = phi %"class.WTF::StringImpl"* [ %27, %25 ], [ %21, %13 ]
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #13
  br label %44

44:                                               ; preds = %43, %40, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  %45 = add nuw nsw i64 %14, 1
  %46 = icmp eq i64 %45, 64
  br i1 %46, label %47, label %13

47:                                               ; preds = %44
  %48 = icmp eq %"class.blink::SVGQualifiedName"** %8, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %47
  %50 = bitcast %"class.blink::SVGQualifiedName"** %8 to i8*
  call void @_ZdaPv(i8* %50) #14
  br label %51

51:                                               ; preds = %49, %47, %1
  %52 = bitcast %"class.blink::QualifiedName"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13
  %53 = load %"class.WTF::HashMap.1361"*, %"class.WTF::HashMap.1361"** @_ZZN5blinkL20AdjustSVGTagNameCaseEPNS_15AtomicHTMLTokenEE8case_map, align 8
  %54 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 1
  call void @_ZNK3WTF7HashMapINS_12AtomicStringEN5blink13QualifiedNameENS_16AtomicStringHashENS_10HashTraitsIS1_EENS5_IS3_EENS_18PartitionAllocatorEE2atERKS1_(%"class.blink::QualifiedName"* nonnull sret %3, %"class.WTF::HashMap.1361"* %53, %"class.WTF::AtomicString"* dereferenceable(8) %54)
  %55 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %56 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %96, label %60

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %77

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i33
  %69 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %68, i33 1) #13
  %70 = extractvalue { i33, i1 } %69, 1
  %71 = extractvalue { i33, i1 } %69, 0
  %72 = icmp slt i33 %71, 0
  %73 = or i1 %70, %72
  br i1 %73, label %74, label %75, !prof !2

74:                                               ; preds = %65
  call void @llvm.trap() #13
  unreachable

75:                                               ; preds = %65
  %76 = trunc i33 %71 to i32
  store i32 %76, i32* %66, align 4
  br label %77

77:                                               ; preds = %75, %60
  %78 = ptrtoint %"class.WTF::StringImpl"* %58 to i64
  %79 = bitcast %"class.WTF::AtomicString"* %54 to i64*
  %80 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %54, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  store i64 %78, i64* %79, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #13
  br label %96

96:                                               ; preds = %95, %92, %77, %51
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLTreeBuilder8FinishedEv(%"class.blink::HTMLTreeBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.blink::DocumentFragment"*, %"class.blink::DocumentFragment"** %2, align 8
  %4 = icmp eq %"class.blink::DocumentFragment"* %3, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink20HTMLConstructionSite15FinishedParsingEv(%"class.blink::HTMLConstructionSite"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

declare void @_ZN5blink20HTMLConstructionSite15FinishedParsingEv(%"class.blink::HTMLConstructionSite"*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"*) local_unnamed_addr #1

declare void @_ZN5blink20HTMLConstructionSite16FlushPendingTextENS_9FlushModeE(%"class.blink::HTMLConstructionSite"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm(i64 %9) #13
  %11 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %10, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9AttributeEEEPKcv, i64 0, i64 0)) #13
  %12 = ptrtoint i8* %11 to i64
  %13 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = lshr i64 %10, 4
  %15 = trunc i64 %14 to i32
  store i32 %15, i32* %6, align 8
  %16 = bitcast i8* %11 to %"class.blink::Attribute"*
  br label %17

17:                                               ; preds = %2, %8
  %18 = phi %"class.blink::Attribute"* [ null, %2 ], [ %16, %8 ]
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %22, align 8
  %24 = load i32, i32* %19, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %23, i64 %25
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %68, label %28

28:                                               ; preds = %17, %64
  %29 = phi %"class.blink::Attribute"* [ %65, %64 ], [ %18, %17 ]
  %30 = phi %"class.blink::Attribute"* [ %66, %64 ], [ %23, %17 ]
  %31 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %29, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %32, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %34 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %32, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 16777216
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %41) #13
  br label %42

42:                                               ; preds = %40, %35, %28
  %43 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %30, i64 0, i32 1, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %29, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %45, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #13
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !2

61:                                               ; preds = %52
  tail call void @llvm.trap() #13
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %62, %47, %42
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %29, i64 1
  %66 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %30, i64 1
  %67 = icmp eq %"class.blink::Attribute"* %66, %26
  br i1 %67, label %68, label %28

68:                                               ; preds = %64, %17
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #3

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #1

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %24, i64 %25
  ret %"class.blink::Attribute"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare %"class.blink::QualifiedName"** @_ZN5blink12mathml_names8GetAttrsEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF7HashMapINS_12AtomicStringEN5blink13QualifiedNameENS_16AtomicStringHashENS_10HashTraitsIS1_EENS5_IS3_EENS_18PartitionAllocatorEE2atERKS1_(%"class.blink::QualifiedName"* noalias sret, %"class.WTF::HashMap.1361"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashMap.1361", %"class.WTF::HashMap.1361"* %1, i64 0, i32 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1365"*, %"struct.WTF::KeyValuePair.1365"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1365"* %5, null
  br i1 %6, label %58, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::HashMap.1361", %"class.WTF::HashMap.1361"* %1, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = lshr i32 %15, 8
  %17 = and i32 %16, %10
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %5, i64 %18
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %58, label %23

23:                                               ; preds = %7
  %24 = xor i32 %16, -1
  %25 = lshr i32 %15, 31
  %26 = add nsw i32 %25, %24
  %27 = shl i32 %26, 12
  %28 = xor i32 %27, %26
  %29 = lshr i32 %28, 7
  %30 = xor i32 %29, %28
  %31 = shl i32 %30, 2
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 20
  %34 = xor i32 %33, %32
  %35 = or i32 %34, 1
  %36 = zext i32 %35 to i64
  br label %37

37:                                               ; preds = %47, %23
  %38 = phi %"struct.WTF::KeyValuePair.1365"* [ %19, %23 ], [ %52, %47 ]
  %39 = phi i64 [ %18, %23 ], [ %51, %47 ]
  %40 = phi i64 [ 0, %23 ], [ %49, %47 ]
  %41 = bitcast %"struct.WTF::KeyValuePair.1365"* %38 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = icmp ne i8* %42, inttoptr (i64 -1 to i8*)
  %44 = bitcast i8* %42 to %"class.WTF::StringImpl"*
  %45 = icmp eq %"class.WTF::StringImpl"* %13, %44
  %46 = and i1 %43, %45
  br i1 %46, label %56, label %47

47:                                               ; preds = %37
  %48 = icmp eq i64 %40, 0
  %49 = select i1 %48, i64 %36, i64 %40
  %50 = add i64 %49, %39
  %51 = and i64 %50, %11
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %5, i64 %51
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %58, label %37

56:                                               ; preds = %37
  %57 = icmp eq %"struct.WTF::KeyValuePair.1365"* %38, null
  br i1 %57, label %58, label %71

58:                                               ; preds = %47, %7, %3, %56
  %59 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %60 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %59, i64 0, i32 0, i32 0
  %61 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %0, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %61, %"class.blink::QualifiedName::QualifiedNameImpl"** %62, align 8
  %63 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %61, null
  br i1 %63, label %83, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %61, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = and i32 %66, 16777216
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %83

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %61, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %70) #13
  br label %83

71:                                               ; preds = %56
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %38, i64 0, i32 1, i32 0, i32 0
  %73 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %0, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %73, %"class.blink::QualifiedName::QualifiedNameImpl"** %74, align 8
  %75 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %73, null
  br i1 %75, label %83, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %73, i64 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = and i32 %78, 16777216
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %73, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %82) #13
  br label %83

83:                                               ; preds = %81, %76, %71, %69, %64, %58
  ret void
}

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1365"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS1_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.1362"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1365"*, %"struct.WTF::KeyValuePair.1365"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1365"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.1365"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1362"* %0, %"struct.WTF::KeyValuePair.1365"* null)
  %9 = load %"struct.WTF::KeyValuePair.1365"*, %"struct.WTF::KeyValuePair.1365"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.1365"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %11, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %71, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"struct.WTF::KeyValuePair.1365"* [ %23, %27 ], [ %58, %52 ]
  %43 = phi %"struct.WTF::KeyValuePair.1365"* [ null, %27 ], [ %53, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %46 = bitcast %"struct.WTF::KeyValuePair.1365"* %42 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = bitcast i8* %47 to %"class.WTF::StringImpl"*
  %51 = icmp eq %"class.WTF::StringImpl"* %17, %50
  br i1 %51, label %84, label %52

52:                                               ; preds = %41, %49
  %53 = phi %"struct.WTF::KeyValuePair.1365"* [ %43, %49 ], [ %42, %41 ]
  %54 = icmp eq i64 %45, 0
  %55 = select i1 %54, i64 %40, i64 %45
  %56 = add i64 %55, %44
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %11, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"struct.WTF::KeyValuePair.1365"* %53, null
  br i1 %63, label %71, label %64

64:                                               ; preds = %62
  tail call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS4_IN5blink13QualifiedNameEEEEENS_18PartitionAllocatorENS_12KeyValuePairIS5_S8_EEEEvRT1_(%"struct.WTF::KeyValuePair.1365"* nonnull dereferenceable(16) %53) #13
  %65 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %0, i64 0, i32 3
  %66 = load i32, i32* %65, align 8
  %67 = add i32 %66, 2147483647
  %68 = and i32 %67, 2147483647
  %69 = and i32 %66, -2147483648
  %70 = or i32 %68, %69
  store i32 %70, i32* %65, align 8
  br label %71

71:                                               ; preds = %10, %62, %64
  %72 = phi %"struct.WTF::KeyValuePair.1365"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  tail call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS2_IN5blink13QualifiedNameEEEEENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S6_EERS3_RKS6_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.1365"* dereferenceable(16) %72, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %2)
  %73 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %0, i64 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = add i32 %74, 1
  store i32 %75, i32* %73, align 4
  %76 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %0, i64 0, i32 3
  %77 = load i32, i32* %76, align 8
  %78 = add i32 %77, %75
  %79 = shl i32 %78, 1
  %80 = load i32, i32* %12, align 8
  %81 = icmp ult i32 %79, %80
  br i1 %81, label %84, label %82

82:                                               ; preds = %71
  %83 = tail call %"struct.WTF::KeyValuePair.1365"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1362"* %0, %"struct.WTF::KeyValuePair.1365"* %72)
  br label %84

84:                                               ; preds = %49, %71, %82
  %85 = phi i8 [ 1, %71 ], [ 1, %82 ], [ 0, %49 ]
  %86 = phi %"struct.WTF::KeyValuePair.1365"* [ %72, %71 ], [ %83, %82 ], [ %42, %49 ]
  %87 = insertvalue { %"struct.WTF::KeyValuePair.1365"*, i8 } undef, %"struct.WTF::KeyValuePair.1365"* %86, 0
  %88 = insertvalue { %"struct.WTF::KeyValuePair.1365"*, i8 } %87, i8 %85, 1
  ret { %"struct.WTF::KeyValuePair.1365"*, i8 } %88
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1365"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1362"*, %"struct.WTF::KeyValuePair.1365"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #13
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %22, i8* %23) #13
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringEN5blink13QualifiedNameEEEEEPKcv, i64 0, i64 0)) #13
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.1365"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %31, %38
  %39 = phi i64 [ %41, %38 ], [ 0, %31 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %36, i64 %39
  call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS4_IN5blink13QualifiedNameEEEEENS_18PartitionAllocatorENS_12KeyValuePairIS5_S8_EEEEvRT1_(%"struct.WTF::KeyValuePair.1365"* dereferenceable(16) %40) #13
  %41 = add nuw nsw i64 %39, 1
  %42 = icmp eq i64 %41, %33
  br i1 %42, label %43, label %38

43:                                               ; preds = %38, %31
  %44 = call %"struct.WTF::KeyValuePair.1365"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.1362"* %0, %"struct.WTF::KeyValuePair.1365"* %36, i32 %32, %"struct.WTF::KeyValuePair.1365"* %1) #13
  ret %"struct.WTF::KeyValuePair.1365"* %44
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS2_IN5blink13QualifiedNameEEEEENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S6_EERS3_RKS6_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.1365"* dereferenceable(16), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #13
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #13
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.WTF::KeyValuePair.1365"* %0 to i64*
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #13
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %46 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %45, align 8
  %47 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %46, null
  br i1 %47, label %55, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = and i32 %50, 16777216
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %54) #13
  br label %55

55:                                               ; preds = %53, %48, %43
  %56 = ptrtoint %"class.blink::QualifiedName::QualifiedNameImpl"* %46 to i64
  %57 = bitcast %"class.blink::QualifiedName"* %44 to i64*
  %58 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %44, i64 0, i32 0, i32 0
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  store i64 %56, i64* %57, align 8
  %60 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %59, null
  br i1 %60, label %73, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = and i32 %63, 16777216
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %73

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %67) #13
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %66
  tail call void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"* nonnull %59) #13
  %72 = bitcast %"class.blink::QualifiedName::QualifiedNameImpl"* %59 to i8*
  tail call void @free(i8* %72) #13
  br label %73

73:                                               ; preds = %55, %61, %66, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1365"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.1362"*, %"struct.WTF::KeyValuePair.1365"*, i32, %"struct.WTF::KeyValuePair.1365"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.1362", align 8
  %6 = bitcast %"class.WTF::HashTable.1362"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.1362"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.1365"* %1, %"struct.WTF::KeyValuePair.1365"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.1365"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.1362"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.1362"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.1365"*, %"struct.WTF::KeyValuePair.1365"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.1365"* %22 to i64
  br label %74

24:                                               ; preds = %92
  %25 = bitcast %"class.WTF::HashTable.1362"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.1362"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %93, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.1365"* [ null, %16 ], [ %96, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %94, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.1365"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %70, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %68, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %65, %39
  %42 = phi i64 [ 0, %39 ], [ %66, %65 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair.1365"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, inttoptr (i64 -1 to i8*)
  br i1 %46, label %65, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %35, i64 %42, i32 1
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %48) #13
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #13
  br label %65

65:                                               ; preds = %64, %61, %47, %41
  %66 = add nuw nsw i64 %42, 1
  %67 = icmp eq i64 %66, %40
  br i1 %67, label %68, label %41

68:                                               ; preds = %65, %37
  %69 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %69) #13
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %70

70:                                               ; preds = %28, %68
  %71 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %0, i64 0, i32 3
  %72 = load i32, i32* %71, align 8
  %73 = and i32 %72, -2147483648
  store i32 %73, i32* %71, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret %"struct.WTF::KeyValuePair.1365"* %33

74:                                               ; preds = %21, %92
  %75 = phi i64 [ %93, %92 ], [ %23, %21 ]
  %76 = phi i32 [ %94, %92 ], [ %13, %21 ]
  %77 = phi %"struct.WTF::KeyValuePair.1365"* [ %95, %92 ], [ %22, %21 ]
  %78 = phi %"struct.WTF::KeyValuePair.1365"* [ %96, %92 ], [ null, %21 ]
  %79 = phi i32 [ %97, %92 ], [ 0, %21 ]
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %77, i64 %80
  %82 = bitcast %"struct.WTF::KeyValuePair.1365"* %81 to i64*
  %83 = load i64, i64* %82, align 8
  switch i64 %83, label %84 [
    i64 -1, label %92
    i64 0, label %92
  ]

84:                                               ; preds = %74
  %85 = call %"struct.WTF::KeyValuePair.1365"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8ReinsertEOS5_(%"class.WTF::HashTable.1362"* nonnull %5, %"struct.WTF::KeyValuePair.1365"* dereferenceable(16) %81)
  %86 = load %"struct.WTF::KeyValuePair.1365"*, %"struct.WTF::KeyValuePair.1365"** %15, align 8
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %86, i64 %80
  %88 = icmp eq %"struct.WTF::KeyValuePair.1365"* %87, %3
  %89 = select i1 %88, %"struct.WTF::KeyValuePair.1365"* %85, %"struct.WTF::KeyValuePair.1365"* %78
  %90 = load i32, i32* %12, align 8
  %91 = ptrtoint %"struct.WTF::KeyValuePair.1365"* %86 to i64
  br label %92

92:                                               ; preds = %74, %74, %84
  %93 = phi i64 [ %75, %74 ], [ %91, %84 ], [ %75, %74 ]
  %94 = phi i32 [ %76, %74 ], [ %90, %84 ], [ %76, %74 ]
  %95 = phi %"struct.WTF::KeyValuePair.1365"* [ %77, %74 ], [ %86, %84 ], [ %77, %74 ]
  %96 = phi %"struct.WTF::KeyValuePair.1365"* [ %78, %74 ], [ %89, %84 ], [ %78, %74 ]
  %97 = add i32 %79, 1
  %98 = icmp eq i32 %97, %94
  br i1 %98, label %24, label %74
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS4_IN5blink13QualifiedNameEEEEENS_18PartitionAllocatorENS_12KeyValuePairIS5_S8_EEEEvRT1_(%"struct.WTF::KeyValuePair.1365"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.WTF::KeyValuePair.1365", align 8
  %3 = bitcast %"struct.WTF::KeyValuePair.1365"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #13
  %4 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8, !noalias !37
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8, !noalias !37
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8, !noalias !37
  %8 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8, !alias.scope !37
  %9 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4, !noalias !37
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %17 = load i32, i32* %16, align 4, !noalias !37
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #13
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #13, !noalias !37
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4, !noalias !37
  br label %27

27:                                               ; preds = %25, %10, %1
  %28 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8, !noalias !37
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %2, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %29, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8, !alias.scope !37
  %31 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %29, null
  br i1 %31, label %32, label %37

32:                                               ; preds = %27
  %33 = bitcast %"struct.WTF::KeyValuePair.1365"* %2 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"struct.WTF::KeyValuePair.1365"* %0 to i64*
  store i64 %34, i64* %35, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %8, align 8
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* null, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  br label %54

37:                                               ; preds = %27
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %29, i64 0, i32 1
  %39 = load i32, i32* %38, align 4, !noalias !37
  %40 = and i32 %39, 16777216
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %29, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %43) #13, !noalias !37
  br label %44

44:                                               ; preds = %42, %37
  %45 = bitcast %"struct.WTF::KeyValuePair.1365"* %2 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"struct.WTF::KeyValuePair.1365"* %0 to i64*
  store i64 %46, i64* %47, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %8, align 8
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %29, %"class.blink::QualifiedName::QualifiedNameImpl"** %48, align 8
  %49 = load i32, i32* %38, align 4
  %50 = and i32 %49, 16777216
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %44
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %29, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %53) #13
  br label %54

54:                                               ; preds = %32, %44, %52
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %2, i64 0, i32 1
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %55) #13
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #13
  br label %71

71:                                               ; preds = %54, %67, %70
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1365"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8ReinsertEOS5_(%"class.WTF::HashTable.1362"*, %"struct.WTF::KeyValuePair.1365"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1365"*, %"struct.WTF::KeyValuePair.1365"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = and i32 %13, %7
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %4, i64 %15
  %17 = ptrtoint %"struct.WTF::KeyValuePair.1365"* %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %2
  %22 = xor i32 %13, -1
  %23 = lshr i32 %12, 31
  %24 = add nsw i32 %23, %22
  %25 = shl i32 %24, 12
  %26 = xor i32 %25, %24
  %27 = lshr i32 %26, 7
  %28 = xor i32 %27, %26
  %29 = shl i32 %28, 2
  %30 = xor i32 %29, %28
  %31 = lshr i32 %30, 20
  %32 = xor i32 %31, %30
  %33 = or i32 %32, 1
  %34 = zext i32 %33 to i64
  br label %43

35:                                               ; preds = %55
  %36 = ptrtoint %"struct.WTF::KeyValuePair.1365"* %61 to i64
  br label %37

37:                                               ; preds = %35, %2
  %38 = phi i64 [ %17, %2 ], [ %36, %35 ]
  %39 = phi %"struct.WTF::KeyValuePair.1365"* [ null, %2 ], [ %56, %35 ]
  %40 = icmp eq %"struct.WTF::KeyValuePair.1365"* %39, null
  %41 = ptrtoint %"struct.WTF::KeyValuePair.1365"* %39 to i64
  %42 = select i1 %40, i64 %38, i64 %41
  br label %66

43:                                               ; preds = %55, %21
  %44 = phi %"struct.WTF::KeyValuePair.1365"* [ null, %21 ], [ %56, %55 ]
  %45 = phi i64 [ %17, %21 ], [ %62, %55 ]
  %46 = phi %"struct.WTF::KeyValuePair.1365"* [ %16, %21 ], [ %61, %55 ]
  %47 = phi i64 [ %15, %21 ], [ %60, %55 ]
  %48 = phi i64 [ 0, %21 ], [ %58, %55 ]
  %49 = bitcast %"struct.WTF::KeyValuePair.1365"* %46 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, inttoptr (i64 -1 to i8*)
  br i1 %51, label %55, label %52

52:                                               ; preds = %43
  %53 = bitcast i8* %50 to %"class.WTF::StringImpl"*
  %54 = icmp eq %"class.WTF::StringImpl"* %10, %53
  br i1 %54, label %66, label %55

55:                                               ; preds = %52, %43
  %56 = phi %"struct.WTF::KeyValuePair.1365"* [ %44, %52 ], [ %46, %43 ]
  %57 = icmp eq i64 %48, 0
  %58 = select i1 %57, i64 %34, i64 %48
  %59 = add i64 %58, %47
  %60 = and i64 %59, %8
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %4, i64 %60
  %62 = ptrtoint %"struct.WTF::KeyValuePair.1365"* %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %35, label %43

66:                                               ; preds = %52, %37
  %67 = phi i64 [ %42, %37 ], [ %45, %52 ]
  %68 = inttoptr i64 %67 to %"struct.WTF::KeyValuePair.1365"*
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %68, i64 0, i32 1
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %69) #13
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %68, i64 0, i32 0, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #13
  br label %86

86:                                               ; preds = %85, %82, %66
  %87 = bitcast %"struct.WTF::KeyValuePair.1365"* %1 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = inttoptr i64 %67 to i64*
  store i64 %88, i64* %89, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %1, i64 0, i32 1, i32 0, i32 0
  %91 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %90, align 8
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %68, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %91, %"class.blink::QualifiedName::QualifiedNameImpl"** %92, align 8
  %93 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %91, null
  br i1 %93, label %101, label %94

94:                                               ; preds = %86
  %95 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %91, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = and i32 %96, 16777216
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %101

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %91, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %100) #13
  br label %101

101:                                              ; preds = %86, %94, %99
  ret %"struct.WTF::KeyValuePair.1365"* %68
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #10

declare %"class.blink::QualifiedName"** @_ZN5blink11xlink_names8GetAttrsEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL18AddNamesWithPrefixEPN3WTF7HashMapINS0_12AtomicStringENS_13QualifiedNameENS0_16AtomicStringHashENS0_10HashTraitsIS2_EENS5_IS3_EENS0_18PartitionAllocatorEEERKS2_PKPKS3_m(%"class.WTF::HashMap.1361"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::QualifiedName"** nocapture readonly, i64) unnamed_addr #0 {
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = alloca %"class.WTF::StringAppend", align 8
  %7 = alloca { %"class.WTF::StringImpl"*, i8 }, align 8
  %8 = bitcast { %"class.WTF::StringImpl"*, i8 }* %7 to %"class.WTF::StringAppend.1381"*
  %9 = alloca %"class.blink::QualifiedName", align 8
  %10 = icmp eq i64 %3, 0
  br i1 %10, label %24, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.WTF::StringAppend"* %6 to i8*
  %15 = bitcast { %"class.WTF::StringImpl"*, i8 }* %7 to i8*
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds { %"class.WTF::StringImpl"*, i8 }, { %"class.WTF::StringImpl"*, i8 }* %7, i64 0, i32 0
  %18 = getelementptr inbounds { %"class.WTF::StringImpl"*, i8 }, { %"class.WTF::StringImpl"*, i8 }* %7, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.blink::QualifiedName"* %9 to i8*
  %22 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %9, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.WTF::HashMap.1361", %"class.WTF::HashMap.1361"* %0, i64 0, i32 0
  br label %25

24:                                               ; preds = %206, %4
  ret void

25:                                               ; preds = %206, %11
  %26 = phi i64 [ 0, %11 ], [ %207, %206 ]
  %27 = getelementptr inbounds %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %2, i64 %26
  %28 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #13
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %13, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #13
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %78, label %34

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %51

41:                                               ; preds = %34
  %42 = zext i32 %40 to i33
  %43 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %42, i33 1) #13
  %44 = extractvalue { i33, i1 } %43, 1
  %45 = extractvalue { i33, i1 } %43, 0
  %46 = icmp slt i33 %45, 0
  %47 = or i1 %44, %46
  br i1 %47, label %48, label %49, !prof !2

48:                                               ; preds = %41
  call void @llvm.trap() #13
  unreachable

49:                                               ; preds = %41
  %50 = trunc i33 %45 to i32
  store i32 %50, i32* %39, align 4
  br label %51

51:                                               ; preds = %34, %49
  %52 = phi i32 [ %50, %49 ], [ %40, %34 ]
  %53 = load atomic i32, i32* %35 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  br i1 %55, label %57, label %67

57:                                               ; preds = %51
  %58 = zext i32 %52 to i33
  %59 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %58, i33 1) #13
  %60 = extractvalue { i33, i1 } %59, 1
  %61 = extractvalue { i33, i1 } %59, 0
  %62 = icmp slt i33 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %65, !prof !2

64:                                               ; preds = %57
  call void @llvm.trap() #13
  unreachable

65:                                               ; preds = %57
  %66 = trunc i33 %61 to i32
  store i32 %66, i32* %56, align 4
  br label %67

67:                                               ; preds = %65, %51
  %68 = phi i32 [ %66, %65 ], [ %52, %51 ]
  %69 = load atomic i32, i32* %35 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %67
  %73 = add i32 %68, -1
  store i32 %73, i32* %56, align 4
  br label %74

74:                                               ; preds = %72, %67
  %75 = phi i32 [ %73, %72 ], [ %68, %67 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #13
  br label %78

78:                                               ; preds = %25, %74, %77
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %17, align 8
  store i8 58, i8* %18, align 8
  %79 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %31, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #13
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !2

96:                                               ; preds = %87
  call void @llvm.trap() #13
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %78, %82, %97
  call void @_ZN3WTFplINS_12AtomicStringEcS1_EENS_12StringAppendINS2_IT_T0_EET1_EERKS5_S6_(%"class.WTF::StringAppend"* nonnull sret %6, %"class.WTF::StringAppend.1381"* nonnull dereferenceable(16) %8, %"class.WTF::StringImpl"* %80)
  %100 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEcEES1_EcvNS_6StringEEv(%"class.WTF::StringAppend"* nonnull %6) #13
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %138, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 acquire, align 4
  %105 = and i32 %104, 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %123, label %107

107:                                              ; preds = %102
  %108 = load atomic i32, i32* %103 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %125

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = zext i32 %113 to i33
  %115 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %114, i33 1) #13
  %116 = extractvalue { i33, i1 } %115, 1
  %117 = extractvalue { i33, i1 } %115, 0
  %118 = icmp slt i33 %117, 0
  %119 = or i1 %116, %118
  br i1 %119, label %120, label %121, !prof !2

120:                                              ; preds = %111
  call void @llvm.trap() #13
  unreachable

121:                                              ; preds = %111
  %122 = trunc i33 %117 to i32
  store i32 %122, i32* %112, align 4
  br label %125

123:                                              ; preds = %102
  %124 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %100) #13
  br label %125

125:                                              ; preds = %123, %121, %107
  %126 = phi %"class.WTF::StringImpl"* [ %100, %121 ], [ %100, %107 ], [ %124, %123 ]
  %127 = load atomic i32, i32* %103 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #13
  br label %138

138:                                              ; preds = %99, %134, %137
  %139 = phi %"class.WTF::StringImpl"* [ %126, %134 ], [ %126, %137 ], [ null, %99 ]
  store %"class.WTF::StringImpl"* %139, %"class.WTF::StringImpl"** %13, align 8
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %140, null
  br i1 %141, label %155, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load atomic i32, i32* %143 monotonic, align 4
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  br i1 %146, label %149, label %151

149:                                              ; preds = %142
  %150 = add i32 %148, -1
  store i32 %150, i32* %147, align 4
  br label %151

151:                                              ; preds = %149, %142
  %152 = phi i32 [ %150, %149 ], [ %148, %142 ]
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %151
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %140) #13
  br label %155

155:                                              ; preds = %154, %151, %138
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %171, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #13
  br label %171

171:                                              ; preds = %155, %167, %170
  %172 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %173 = icmp eq %"class.WTF::StringImpl"* %172, null
  br i1 %173, label %187, label %174

174:                                              ; preds = %171
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 0
  %180 = load i32, i32* %179, align 4
  br i1 %178, label %181, label %183

181:                                              ; preds = %174
  %182 = add i32 %180, -1
  store i32 %182, i32* %179, align 4
  br label %183

183:                                              ; preds = %181, %174
  %184 = phi i32 [ %182, %181 ], [ %180, %174 ]
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %183
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %172) #13
  br label %187

187:                                              ; preds = %171, %183, %186
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  store %"class.blink::QualifiedName::QualifiedNameImpl"* inttoptr (i64 -6148914691236517206 to %"class.blink::QualifiedName::QualifiedNameImpl"*), %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %188 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %189 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %188, i64 0, i32 4
  call void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"* nonnull %9, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %31, %"class.WTF::AtomicString"* dereferenceable(8) %189) #13
  %190 = call { %"struct.WTF::KeyValuePair.1365"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS1_RS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.1362"* %23, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %9) #13
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %192, label %206, label %193

193:                                              ; preds = %187
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = and i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %199 = load i32, i32* %198, align 4
  br i1 %197, label %200, label %202

200:                                              ; preds = %193
  %201 = add i32 %199, -1
  store i32 %201, i32* %198, align 4
  br label %202

202:                                              ; preds = %200, %193
  %203 = phi i32 [ %201, %200 ], [ %199, %193 ]
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %202
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %191) #13
  br label %206

206:                                              ; preds = %187, %202, %205
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #13
  %207 = add nuw i64 %26, 1
  %208 = icmp eq i64 %207, %3
  br i1 %208, label %24, label %25
}

declare %"class.blink::QualifiedName"** @_ZN5blink9xml_names8GetAttrsEv() local_unnamed_addr #1

declare void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12AtomicStringEcS1_EENS_12StringAppendINS2_IT_T0_EET1_EERKS5_S6_(%"class.WTF::StringAppend"* noalias sret, %"class.WTF::StringAppend.1381"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.1381", %"class.WTF::StringAppend.1381"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #13
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #13
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend.1381", %"class.WTF::StringAppend.1381"* %1, i64 0, i32 1
  %26 = load i8, i8* %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %27, label %45, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %46

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i33
  %37 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %36, i33 1) #13
  %38 = extractvalue { i33, i1 } %37, 1
  %39 = extractvalue { i33, i1 } %37, 0
  %40 = icmp slt i33 %39, 0
  %41 = or i1 %38, %40
  br i1 %41, label %42, label %43, !prof !2

42:                                               ; preds = %33
  tail call void @llvm.trap() #13
  unreachable

43:                                               ; preds = %33
  %44 = trunc i33 %39 to i32
  store i32 %44, i32* %34, align 4
  br label %46

45:                                               ; preds = %24
  tail call void @_ZN3WTF12StringAppendINS0_INS_12AtomicStringEcEES1_EC2ES2_S1_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8 %26, %"class.WTF::StringImpl"* null)
  br label %58

46:                                               ; preds = %28, %43
  tail call void @_ZN3WTF12StringAppendINS0_INS_12AtomicStringEcEES1_EC2ES2_S1_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8 %26, %"class.WTF::StringImpl"* nonnull %2)
  %47 = load atomic i32, i32* %29 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %46
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %46
  %55 = phi i32 [ %53, %52 ], [ %51, %46 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #13
  br label %58

58:                                               ; preds = %45, %54, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_12AtomicStringEcEES1_EC2ES2_S1_(%"class.WTF::StringAppend"*, %"class.WTF::StringImpl"*, i8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %5, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #13
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #13
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %4, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  store i8 %2, i8* %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %26, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %27, label %57, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %45

35:                                               ; preds = %28
  %36 = zext i32 %34 to i33
  %37 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %36, i33 1) #13
  %38 = extractvalue { i33, i1 } %37, 1
  %39 = extractvalue { i33, i1 } %37, 0
  %40 = icmp slt i33 %39, 0
  %41 = or i1 %38, %40
  br i1 %41, label %42, label %43, !prof !2

42:                                               ; preds = %35
  tail call void @llvm.trap() #13
  unreachable

43:                                               ; preds = %35
  %44 = trunc i33 %39 to i32
  store i32 %44, i32* %33, align 4
  br label %45

45:                                               ; preds = %28, %43
  %46 = phi i32 [ %44, %43 ], [ %34, %28 ]
  %47 = load atomic i32, i32* %29 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %52 = add i32 %46, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %45
  %54 = phi i32 [ %52, %50 ], [ %46, %45 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #13
  br label %57

57:                                               ; preds = %24, %53, %56
  br i1 %6, label %71, label %58

58:                                               ; preds = %57
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #13
  br label %71

71:                                               ; preds = %57, %67, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEcEES1_EcvNS_6StringEEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.1382", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.1382", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1382", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1382", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %11 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  %14 = select i1 %13, %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"* %12
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %109, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %9, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"* %9
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %109, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %28 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEcEES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %6) #13
  %30 = load i8*, i8** %6, align 8
  %31 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %32 = bitcast %"class.WTF::StringTypeAdapter.1382"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #13
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1382", %"class.WTF::StringTypeAdapter.1382"* %5, i64 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1382", %"class.WTF::StringTypeAdapter.1382"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 24, i1 false) #13
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %26
  %38 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %45

39:                                               ; preds = %26
  %40 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 1
  %44 = bitcast %"class.WTF::StringImpl"* %43 to i8*
  br label %45

45:                                               ; preds = %39, %37
  %46 = phi i8* [ null, %37 ], [ %44, %39 ]
  %47 = phi i64 [ %38, %37 ], [ %40, %39 ]
  %48 = phi i32 [ 0, %37 ], [ %42, %39 ]
  %49 = bitcast %"class.WTF::StringTypeAdapter.1382"* %5 to i64*
  store i64 %47, i64* %49, align 8
  store i8* %46, i8** %33, align 8
  store i32 %48, i32* %34, align 8
  %50 = bitcast %"class.WTF::StringTypeAdapter.1382"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #13
  %51 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1382", %"class.WTF::StringTypeAdapter.1382"* %4, i64 0, i32 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1382", %"class.WTF::StringTypeAdapter.1382"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 24, i1 false) #13
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %55, label %57

55:                                               ; preds = %45
  %56 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %63

57:                                               ; preds = %45
  %58 = ptrtoint %"class.WTF::StringImpl"* %53 to i64
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 1
  %62 = bitcast %"class.WTF::StringImpl"* %61 to i8*
  br label %63

63:                                               ; preds = %55, %57
  %64 = phi i8* [ null, %55 ], [ %62, %57 ]
  %65 = phi i64 [ %56, %55 ], [ %58, %57 ]
  %66 = phi i32 [ 0, %55 ], [ %60, %57 ]
  %67 = bitcast %"class.WTF::StringTypeAdapter.1382"* %4 to i64*
  store i64 %65, i64* %67, align 8
  store i8* %64, i8** %51, align 8
  store i32 %66, i32* %52, align 8
  %68 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %69 = load i8, i8* %68, align 8
  %70 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1382", %"class.WTF::StringTypeAdapter.1382"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1383"* nonnull %70, i8* %30) #13
  %71 = load i32, i32* %52, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %30, i64 %72
  store i8 %69, i8* %73, align 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #13
  %74 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1382", %"class.WTF::StringTypeAdapter.1382"* %5, i64 0, i32 0
  %75 = call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEcE6lengthEv(%"class.WTF::StringAppend.1381"* %31) #13
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds i8, i8* %30, i64 %76
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1383"* nonnull %74, i8* %77) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #13
  %78 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %78, label %193, label %79

79:                                               ; preds = %63
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %96

86:                                               ; preds = %79
  %87 = zext i32 %85 to i33
  %88 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %87, i33 1) #13
  %89 = extractvalue { i33, i1 } %88, 1
  %90 = extractvalue { i33, i1 } %88, 0
  %91 = icmp slt i33 %90, 0
  %92 = or i1 %89, %91
  br i1 %92, label %93, label %94, !prof !2

93:                                               ; preds = %86
  call void @llvm.trap() #13
  unreachable

94:                                               ; preds = %86
  %95 = trunc i33 %90 to i32
  store i32 %95, i32* %84, align 4
  br label %96

96:                                               ; preds = %79, %94
  %97 = phi i32 [ %95, %94 ], [ %85, %79 ]
  %98 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %99 = load atomic i32, i32* %80 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %104 = add i32 %97, -1
  store i32 %104, i32* %103, align 4
  br label %105

105:                                              ; preds = %102, %96
  %106 = phi i32 [ %104, %102 ], [ %97, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %193

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #13
  br label %193

109:                                              ; preds = %19, %1
  %110 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #13
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %111 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEcEES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %112 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %111, i16** nonnull dereferenceable(8) %7) #13
  %113 = load i16*, i16** %7, align 8
  %114 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %115 = bitcast %"class.WTF::StringTypeAdapter.1382"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #13
  %116 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1382", %"class.WTF::StringTypeAdapter.1382"* %3, i64 0, i32 0, i32 0, i32 1
  %117 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1382", %"class.WTF::StringTypeAdapter.1382"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %115, i8 -86, i64 24, i1 false) #13
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %119, label %120, label %122

120:                                              ; preds = %109
  %121 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %128

122:                                              ; preds = %109
  %123 = ptrtoint %"class.WTF::StringImpl"* %118 to i64
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 1
  %127 = bitcast %"class.WTF::StringImpl"* %126 to i8*
  br label %128

128:                                              ; preds = %122, %120
  %129 = phi i8* [ null, %120 ], [ %127, %122 ]
  %130 = phi i64 [ %121, %120 ], [ %123, %122 ]
  %131 = phi i32 [ 0, %120 ], [ %125, %122 ]
  %132 = bitcast %"class.WTF::StringTypeAdapter.1382"* %3 to i64*
  store i64 %130, i64* %132, align 8
  store i8* %129, i8** %116, align 8
  store i32 %131, i32* %117, align 8
  %133 = bitcast %"class.WTF::StringTypeAdapter.1382"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %133) #13
  %134 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1382", %"class.WTF::StringTypeAdapter.1382"* %2, i64 0, i32 0, i32 0, i32 1
  %135 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1382", %"class.WTF::StringTypeAdapter.1382"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 -86, i64 24, i1 false) #13
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %137, label %138, label %140

138:                                              ; preds = %128
  %139 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %146

140:                                              ; preds = %128
  %141 = ptrtoint %"class.WTF::StringImpl"* %136 to i64
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 1
  %145 = bitcast %"class.WTF::StringImpl"* %144 to i8*
  br label %146

146:                                              ; preds = %138, %140
  %147 = phi i8* [ null, %138 ], [ %145, %140 ]
  %148 = phi i64 [ %139, %138 ], [ %141, %140 ]
  %149 = phi i32 [ 0, %138 ], [ %143, %140 ]
  %150 = bitcast %"class.WTF::StringTypeAdapter.1382"* %2 to i64*
  store i64 %148, i64* %150, align 8
  store i8* %147, i8** %134, align 8
  store i32 %149, i32* %135, align 8
  %151 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %152 = load i8, i8* %151, align 8
  %153 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1382", %"class.WTF::StringTypeAdapter.1382"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1383"* nonnull %153, i16* %113) #13
  %154 = load i32, i32* %135, align 8
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds i16, i16* %113, i64 %155
  %157 = zext i8 %152 to i16
  store i16 %157, i16* %156, align 2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #13
  %158 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1382", %"class.WTF::StringTypeAdapter.1382"* %3, i64 0, i32 0
  %159 = call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEcE6lengthEv(%"class.WTF::StringAppend.1381"* %114) #13
  %160 = zext i32 %159 to i64
  %161 = getelementptr inbounds i16, i16* %113, i64 %160
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1383"* nonnull %158, i16* %161) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #13
  %162 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %162, label %193, label %163

163:                                              ; preds = %146
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %180

170:                                              ; preds = %163
  %171 = zext i32 %169 to i33
  %172 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %171, i33 1) #13
  %173 = extractvalue { i33, i1 } %172, 1
  %174 = extractvalue { i33, i1 } %172, 0
  %175 = icmp slt i33 %174, 0
  %176 = or i1 %173, %175
  br i1 %176, label %177, label %178, !prof !2

177:                                              ; preds = %170
  call void @llvm.trap() #13
  unreachable

178:                                              ; preds = %170
  %179 = trunc i33 %174 to i32
  store i32 %179, i32* %168, align 4
  br label %180

180:                                              ; preds = %163, %178
  %181 = phi i32 [ %179, %178 ], [ %169, %163 ]
  %182 = ptrtoint %"class.WTF::StringImpl"* %112 to i64
  %183 = load atomic i32, i32* %164 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %189

186:                                              ; preds = %180
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %188 = add i32 %181, -1
  store i32 %188, i32* %187, align 4
  br label %189

189:                                              ; preds = %186, %180
  %190 = phi i32 [ %188, %186 ], [ %181, %180 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #13
  br label %193

193:                                              ; preds = %192, %189, %146, %108, %105, %63
  %194 = phi i8* [ %27, %63 ], [ %27, %105 ], [ %27, %108 ], [ %110, %146 ], [ %110, %189 ], [ %110, %192 ]
  %195 = phi i64 [ 0, %63 ], [ %98, %105 ], [ %98, %108 ], [ 0, %146 ], [ %182, %189 ], [ %182, %192 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %194) #13
  %196 = inttoptr i64 %195 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %196
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEcEES1_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEcE6lengthEv(%"class.WTF::StringAppend.1381"* %8) #13
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEcE6lengthEv(%"class.WTF::StringAppend.1381"* %8) #13
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #13
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i8* %26, i8* %27) #13
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.9, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #13
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #13
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #13
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0), i8* %41, i8* %42) #13
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.9, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #13
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #13
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  ret i32 %18
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEcE6lengthEv(%"class.WTF::StringAppend.1381"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1381", %"class.WTF::StringAppend.1381"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %1 ]
  %16 = add i32 %15, 1
  %17 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp eq i32 %15, -1
  br i1 %20, label %22, label %21

21:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %14
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #13
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 -1) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i8* %23, i8* %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.9, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #13
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  br label %31

31:                                               ; preds = %21, %22, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  %32 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #13
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %33, align 8
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = icmp eq i32 %16, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %33, align 8
  br label %46

37:                                               ; preds = %31
  %38 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  %39 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 1) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0), i8* %38, i8* %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %41, i8** %33, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.9, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #13
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #13
  br label %46

46:                                               ; preds = %36, %37, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  ret i32 %16
}

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1383"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1383"*, i16*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1365"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS1_RS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.1362"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1365"*, %"struct.WTF::KeyValuePair.1365"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1365"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.1365"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1362"* %0, %"struct.WTF::KeyValuePair.1365"* null)
  %9 = load %"struct.WTF::KeyValuePair.1365"*, %"struct.WTF::KeyValuePair.1365"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.1365"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %11, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %71, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"struct.WTF::KeyValuePair.1365"* [ %23, %27 ], [ %58, %52 ]
  %43 = phi %"struct.WTF::KeyValuePair.1365"* [ null, %27 ], [ %53, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %46 = bitcast %"struct.WTF::KeyValuePair.1365"* %42 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = bitcast i8* %47 to %"class.WTF::StringImpl"*
  %51 = icmp eq %"class.WTF::StringImpl"* %17, %50
  br i1 %51, label %84, label %52

52:                                               ; preds = %41, %49
  %53 = phi %"struct.WTF::KeyValuePair.1365"* [ %43, %49 ], [ %42, %41 ]
  %54 = icmp eq i64 %45, 0
  %55 = select i1 %54, i64 %40, i64 %45
  %56 = add i64 %55, %44
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %11, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"struct.WTF::KeyValuePair.1365"* %53, null
  br i1 %63, label %71, label %64

64:                                               ; preds = %62
  tail call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS4_IN5blink13QualifiedNameEEEEENS_18PartitionAllocatorENS_12KeyValuePairIS5_S8_EEEEvRT1_(%"struct.WTF::KeyValuePair.1365"* nonnull dereferenceable(16) %53) #13
  %65 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %0, i64 0, i32 3
  %66 = load i32, i32* %65, align 8
  %67 = add i32 %66, 2147483647
  %68 = and i32 %67, 2147483647
  %69 = and i32 %66, -2147483648
  %70 = or i32 %68, %69
  store i32 %70, i32* %65, align 8
  br label %71

71:                                               ; preds = %10, %62, %64
  %72 = phi %"struct.WTF::KeyValuePair.1365"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  tail call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS2_IN5blink13QualifiedNameEEEEENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S6_EERS3_RS6_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.1365"* dereferenceable(16) %72, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %2)
  %73 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %0, i64 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = add i32 %74, 1
  store i32 %75, i32* %73, align 4
  %76 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %0, i64 0, i32 3
  %77 = load i32, i32* %76, align 8
  %78 = add i32 %77, %75
  %79 = shl i32 %78, 1
  %80 = load i32, i32* %12, align 8
  %81 = icmp ult i32 %79, %80
  br i1 %81, label %84, label %82

82:                                               ; preds = %71
  %83 = tail call %"struct.WTF::KeyValuePair.1365"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1362"* %0, %"struct.WTF::KeyValuePair.1365"* %72)
  br label %84

84:                                               ; preds = %49, %71, %82
  %85 = phi i8 [ 1, %71 ], [ 1, %82 ], [ 0, %49 ]
  %86 = phi %"struct.WTF::KeyValuePair.1365"* [ %72, %71 ], [ %83, %82 ], [ %42, %49 ]
  %87 = insertvalue { %"struct.WTF::KeyValuePair.1365"*, i8 } undef, %"struct.WTF::KeyValuePair.1365"* %86, 0
  %88 = insertvalue { %"struct.WTF::KeyValuePair.1365"*, i8 } %87, i8 %85, 1
  ret { %"struct.WTF::KeyValuePair.1365"*, i8 } %88
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS2_IN5blink13QualifiedNameEEEEENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S6_EERS3_RS6_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.1365"* dereferenceable(16), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #13
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #13
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.WTF::KeyValuePair.1365"* %0 to i64*
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #13
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %46 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %45, align 8
  %47 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %46, null
  br i1 %47, label %55, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = and i32 %50, 16777216
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %54) #13
  br label %55

55:                                               ; preds = %53, %48, %43
  %56 = ptrtoint %"class.blink::QualifiedName::QualifiedNameImpl"* %46 to i64
  %57 = bitcast %"class.blink::QualifiedName"* %44 to i64*
  %58 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %44, i64 0, i32 0, i32 0
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  store i64 %56, i64* %57, align 8
  %60 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %59, null
  br i1 %60, label %73, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = and i32 %63, 16777216
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %73

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %67) #13
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %66
  tail call void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"* nonnull %59) #13
  %72 = bitcast %"class.blink::QualifiedName::QualifiedNameImpl"* %59 to i8*
  tail call void @free(i8* %72) #13
  br label %73

73:                                               ; preds = %55, %61, %66, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1365"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS1_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.1362"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1365"*, %"struct.WTF::KeyValuePair.1365"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1365"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.1365"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1362"* %0, %"struct.WTF::KeyValuePair.1365"* null)
  %9 = load %"struct.WTF::KeyValuePair.1365"*, %"struct.WTF::KeyValuePair.1365"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.1365"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %11, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %71, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"struct.WTF::KeyValuePair.1365"* [ %23, %27 ], [ %58, %52 ]
  %43 = phi %"struct.WTF::KeyValuePair.1365"* [ null, %27 ], [ %53, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %46 = bitcast %"struct.WTF::KeyValuePair.1365"* %42 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = bitcast i8* %47 to %"class.WTF::StringImpl"*
  %51 = icmp eq %"class.WTF::StringImpl"* %17, %50
  br i1 %51, label %84, label %52

52:                                               ; preds = %41, %49
  %53 = phi %"struct.WTF::KeyValuePair.1365"* [ %43, %49 ], [ %42, %41 ]
  %54 = icmp eq i64 %45, 0
  %55 = select i1 %54, i64 %40, i64 %45
  %56 = add i64 %55, %44
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %11, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"struct.WTF::KeyValuePair.1365"* %53, null
  br i1 %63, label %71, label %64

64:                                               ; preds = %62
  tail call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS4_IN5blink13QualifiedNameEEEEENS_18PartitionAllocatorENS_12KeyValuePairIS5_S8_EEEEvRT1_(%"struct.WTF::KeyValuePair.1365"* nonnull dereferenceable(16) %53) #13
  %65 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %0, i64 0, i32 3
  %66 = load i32, i32* %65, align 8
  %67 = add i32 %66, 2147483647
  %68 = and i32 %67, 2147483647
  %69 = and i32 %66, -2147483648
  %70 = or i32 %68, %69
  store i32 %70, i32* %65, align 8
  br label %71

71:                                               ; preds = %10, %62, %64
  %72 = phi %"struct.WTF::KeyValuePair.1365"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  tail call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS2_IN5blink13QualifiedNameEEEEENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S6_EERKS3_RKS6_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.1365"* dereferenceable(16) %72, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %2)
  %73 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %0, i64 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = add i32 %74, 1
  store i32 %75, i32* %73, align 4
  %76 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %0, i64 0, i32 3
  %77 = load i32, i32* %76, align 8
  %78 = add i32 %77, %75
  %79 = shl i32 %78, 1
  %80 = load i32, i32* %12, align 8
  %81 = icmp ult i32 %79, %80
  br i1 %81, label %84, label %82

82:                                               ; preds = %71
  %83 = tail call %"struct.WTF::KeyValuePair.1365"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1362"* %0, %"struct.WTF::KeyValuePair.1365"* %72)
  br label %84

84:                                               ; preds = %49, %71, %82
  %85 = phi i8 [ 1, %71 ], [ 1, %82 ], [ 0, %49 ]
  %86 = phi %"struct.WTF::KeyValuePair.1365"* [ %72, %71 ], [ %83, %82 ], [ %42, %49 ]
  %87 = insertvalue { %"struct.WTF::KeyValuePair.1365"*, i8 } undef, %"struct.WTF::KeyValuePair.1365"* %86, 0
  %88 = insertvalue { %"struct.WTF::KeyValuePair.1365"*, i8 } %87, i8 %85, 1
  ret { %"struct.WTF::KeyValuePair.1365"*, i8 } %88
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS2_IN5blink13QualifiedNameEEEEENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S6_EERKS3_RKS6_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.1365"* dereferenceable(16), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #13
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #13
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.WTF::KeyValuePair.1365"* %0 to i64*
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #13
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %46 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %45, align 8
  %47 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %46, null
  br i1 %47, label %55, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = and i32 %50, 16777216
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %54) #13
  br label %55

55:                                               ; preds = %53, %48, %43
  %56 = ptrtoint %"class.blink::QualifiedName::QualifiedNameImpl"* %46 to i64
  %57 = bitcast %"class.blink::QualifiedName"* %44 to i64*
  %58 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %44, i64 0, i32 0, i32 0
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  store i64 %56, i64* %57, align 8
  %60 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %59, null
  br i1 %60, label %73, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = and i32 %63, 16777216
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %73

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %67) #13
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %66
  tail call void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"* nonnull %59) #13
  %72 = bitcast %"class.blink::QualifiedName::QualifiedNameImpl"* %59 to i8*
  tail call void @free(i8* %72) #13
  br label %73

73:                                               ; preds = %55, %61, %66, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1365"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERA12_KcS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.1362"*, [12 x i8]* dereferenceable(12), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %0, i64 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.1365"*, %"struct.WTF::KeyValuePair.1365"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.1365"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"struct.WTF::KeyValuePair.1365"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1362"* %0, %"struct.WTF::KeyValuePair.1365"* null)
  %11 = load %"struct.WTF::KeyValuePair.1365"*, %"struct.WTF::KeyValuePair.1365"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"struct.WTF::KeyValuePair.1365"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  %19 = getelementptr inbounds [12 x i8], [12 x i8]* %1, i64 0, i64 0
  %20 = icmp eq [12 x i8]* %1, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %12
  %22 = tail call i64 @strlen(i8* nonnull %19) #15
  br label %23

23:                                               ; preds = %21, %12
  %24 = phi i64 [ %22, %21 ], [ 0, %12 ]
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %5, i8* %19, i64 %24) #13
  %25 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = lshr i32 %28, 8
  %30 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %30, label %43, label %31

31:                                               ; preds = %23
  %32 = load atomic i32, i32* %27 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %31
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %31
  %40 = phi i32 [ %38, %37 ], [ %36, %31 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #13
  br label %43

43:                                               ; preds = %23, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  %44 = and i32 %29, %16
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %13, i64 %45
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %46, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %117, label %50

50:                                               ; preds = %43
  %51 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  %52 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %53 = xor i32 %29, -1
  %54 = lshr i32 %28, 31
  %55 = add nsw i32 %54, %53
  %56 = shl i32 %55, 12
  %57 = xor i32 %56, %55
  %58 = lshr i32 %57, 7
  %59 = xor i32 %58, %57
  %60 = shl i32 %59, 2
  %61 = xor i32 %60, %59
  %62 = lshr i32 %61, 20
  %63 = xor i32 %62, %61
  %64 = or i32 %63, 1
  %65 = zext i32 %64 to i64
  br label %66

66:                                               ; preds = %50, %98
  %67 = phi %"struct.WTF::KeyValuePair.1365"* [ %46, %50 ], [ %104, %98 ]
  %68 = phi %"struct.WTF::KeyValuePair.1365"* [ null, %50 ], [ %99, %98 ]
  %69 = phi i64 [ %45, %50 ], [ %103, %98 ]
  %70 = phi i64 [ 0, %50 ], [ %101, %98 ]
  %71 = bitcast %"struct.WTF::KeyValuePair.1365"* %67 to i8**
  %72 = load i8*, i8** %71, align 8
  %73 = icmp eq i8* %72, inttoptr (i64 -1 to i8*)
  br i1 %73, label %98, label %74

74:                                               ; preds = %66
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #13
  br i1 %20, label %77, label %75

75:                                               ; preds = %74
  %76 = call i64 @strlen(i8* nonnull %19) #15
  br label %77

77:                                               ; preds = %75, %74
  %78 = phi i64 [ %76, %75 ], [ 0, %74 ]
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %4, i8* %19, i64 %78) #13
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %80, %81
  %83 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %77
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #13
  br label %97

97:                                               ; preds = %77, %93, %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #13
  br i1 %82, label %130, label %98

98:                                               ; preds = %66, %97
  %99 = phi %"struct.WTF::KeyValuePair.1365"* [ %68, %97 ], [ %67, %66 ]
  %100 = icmp eq i64 %70, 0
  %101 = select i1 %100, i64 %65, i64 %70
  %102 = add i64 %101, %69
  %103 = and i64 %102, %17
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %13, i64 %103
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %104, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %108, label %66

108:                                              ; preds = %98
  %109 = icmp eq %"struct.WTF::KeyValuePair.1365"* %99, null
  br i1 %109, label %117, label %110

110:                                              ; preds = %108
  call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS4_IN5blink13QualifiedNameEEEEENS_18PartitionAllocatorENS_12KeyValuePairIS5_S8_EEEEvRT1_(%"struct.WTF::KeyValuePair.1365"* nonnull dereferenceable(16) %99) #13
  %111 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %0, i64 0, i32 3
  %112 = load i32, i32* %111, align 8
  %113 = add i32 %112, 2147483647
  %114 = and i32 %113, 2147483647
  %115 = and i32 %112, -2147483648
  %116 = or i32 %114, %115
  store i32 %116, i32* %111, align 8
  br label %117

117:                                              ; preds = %43, %108, %110
  %118 = phi %"struct.WTF::KeyValuePair.1365"* [ %99, %110 ], [ %104, %108 ], [ %46, %43 ]
  call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS2_IN5blink13QualifiedNameEEEEENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S6_EERA12_KcS6_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.1365"* dereferenceable(16) %118, [12 x i8]* dereferenceable(12) %1, %"class.blink::QualifiedName"* dereferenceable(8) %2)
  %119 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %0, i64 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = add i32 %120, 1
  store i32 %121, i32* %119, align 4
  %122 = getelementptr inbounds %"class.WTF::HashTable.1362", %"class.WTF::HashTable.1362"* %0, i64 0, i32 3
  %123 = load i32, i32* %122, align 8
  %124 = add i32 %123, %121
  %125 = shl i32 %124, 1
  %126 = load i32, i32* %14, align 8
  %127 = icmp ult i32 %125, %126
  br i1 %127, label %130, label %128

128:                                              ; preds = %117
  %129 = call %"struct.WTF::KeyValuePair.1365"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink13QualifiedNameEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1362"* %0, %"struct.WTF::KeyValuePair.1365"* %118)
  br label %130

130:                                              ; preds = %97, %117, %128
  %131 = phi i8 [ 1, %117 ], [ 1, %128 ], [ 0, %97 ]
  %132 = phi %"struct.WTF::KeyValuePair.1365"* [ %118, %117 ], [ %129, %128 ], [ %67, %97 ]
  %133 = insertvalue { %"struct.WTF::KeyValuePair.1365"*, i8 } undef, %"struct.WTF::KeyValuePair.1365"* %132, 0
  %134 = insertvalue { %"struct.WTF::KeyValuePair.1365"*, i8 } %133, i8 %131, 1
  ret { %"struct.WTF::KeyValuePair.1365"*, i8 } %134
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS2_IN5blink13QualifiedNameEEEEENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S6_EERA12_KcS6_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.1365"* dereferenceable(16), [12 x i8]* dereferenceable(12), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds [12 x i8], [12 x i8]* %1, i64 0, i64 0
  %7 = icmp eq [12 x i8]* %1, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = tail call i64 @strlen(i8* nonnull %6) #15
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi i64 [ %9, %8 ], [ 0, %3 ]
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %4, i8* %6, i64 %11) #13
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  %14 = load i64, i64* %13, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %15 = bitcast %"struct.WTF::KeyValuePair.1365"* %0 to i64*
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  store i64 %14, i64* %15, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #13
  br label %32

32:                                               ; preds = %10, %28, %31
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #13
  br label %48

48:                                               ; preds = %32, %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.1365", %"struct.WTF::KeyValuePair.1365"* %0, i64 0, i32 1
  %50 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %51 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %50, align 8
  %52 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %51, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, 16777216
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %51, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %59) #13
  br label %60

60:                                               ; preds = %58, %53, %48
  %61 = ptrtoint %"class.blink::QualifiedName::QualifiedNameImpl"* %51 to i64
  %62 = bitcast %"class.blink::QualifiedName"* %49 to i64*
  %63 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %49, i64 0, i32 0, i32 0
  %64 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %63, align 8
  store i64 %61, i64* %62, align 8
  %65 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %64, null
  br i1 %65, label %78, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %64, i64 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = and i32 %68, 16777216
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %78

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %64, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %72) #13
  %73 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %71
  call void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"* nonnull %64) #13
  %77 = bitcast %"class.blink::QualifiedName::QualifiedNameImpl"* %64 to i8*
  call void @free(i8* %77) #13
  br label %78

78:                                               ; preds = %60, %66, %71, %76
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #1

declare %"class.blink::QualifiedName"** @_ZN5blink9svg_names8GetAttrsEv() local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #1

declare void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"*, %"class.blink::ConsoleMessage"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [5 x i8]* dereferenceable(5)) local_unnamed_addr #5 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 4
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %109, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %123, %14, %28, %109, %42, %59, %77, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %14 ], [ false, %28 ], [ false, %109 ], [ %136, %123 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  ret i1 %108

109:                                              ; preds = %28
  %110 = getelementptr inbounds i8, i8* %15, i64 2
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %115, %121
  br i1 %122, label %123, label %75

123:                                              ; preds = %109
  %124 = getelementptr inbounds i8, i8* %15, i64 3
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = icmp eq i32 %129, %135
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA125_KcEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), [125 x i8]* dereferenceable(125)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #13
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds [125 x i8], [125 x i8]* %2, i64 0, i64 0
  %11 = icmp eq [125 x i8]* %2, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = tail call i64 @strlen(i8* nonnull %10) #15
  br label %14

14:                                               ; preds = %3, %12
  %15 = phi i64 [ %13, %12 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %10, i64 %15) #13
  %16 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #13
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %16) #13
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #13
  br label %33

33:                                               ; preds = %14, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %34 = getelementptr inbounds i8, i8* %5, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #13
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i8* %21, i8* %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.17, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #13
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #3

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS8_IPKcNS7_6StringEEESA_EEEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), %"class.WTF::StringAppend.1990"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #13
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.1990"* %2)
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #13
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %12) #13
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #13
  br label %28

28:                                               ; preds = %3, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %29 = getelementptr inbounds i8, i8* %5, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.1990"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2009", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2009", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.2009"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1990", %"class.WTF::StringAppend.1990"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #13
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2009"* nonnull %3, i8* %8) #13
  %9 = bitcast %"class.WTF::StringTypeAdapter.2009"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1990", %"class.WTF::StringAppend.1990"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #13
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2009"* nonnull %2, i8* %11) #13
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1990", %"class.WTF::StringAppend.1990"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1990"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #13
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.1990"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #13
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #13
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #13
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #13
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1990"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #13
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.1990"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #13
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #13
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #13
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #13
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1990"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2009", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1990", %"class.WTF::StringAppend.1990"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2009"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2009", %"class.WTF::StringTypeAdapter.2009"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1990", %"class.WTF::StringAppend.1990"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2009"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2009"* nonnull %4, i8* %14) #13
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1991"* %9) #13
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1991"* %9) #13
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #13
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i8* %25, i8* %26) #13
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.9, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #13
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #13
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0), i8* %41, i8* %42) #13
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.9, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #13
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #13
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #13
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.1990"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2009", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2010", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2009", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1990", %"class.WTF::StringAppend.1990"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2009"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1990", %"class.WTF::StringAppend.1990"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2009"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2009"* nonnull %5, i8* %10) #13
  %11 = bitcast %"class.WTF::StringTypeAdapter.2009"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2009", %"class.WTF::StringTypeAdapter.2009"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.1990", %"class.WTF::StringAppend.1990"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #13
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2009"* nonnull %3, i8* %14) #13
  %15 = bitcast %"class.WTF::StringTypeAdapter.2010"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #13
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2010", %"class.WTF::StringTypeAdapter.2010"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2010", %"class.WTF::StringTypeAdapter.2010"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.1990", %"class.WTF::StringAppend.1990"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #13
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2010"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2009"* nonnull %3, i8* %1) #13
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2010", %"class.WTF::StringTypeAdapter.2010"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1383"* nonnull %34, i8* %37) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #13
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1991"* %6) #13
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2009"* nonnull %5, i8* %40) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.1990"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2009", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2010", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2009", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1990", %"class.WTF::StringAppend.1990"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2009"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1990", %"class.WTF::StringAppend.1990"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2009"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2009"* nonnull %5, i8* %10) #13
  %11 = bitcast %"class.WTF::StringTypeAdapter.2009"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2009", %"class.WTF::StringTypeAdapter.2009"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.1990", %"class.WTF::StringAppend.1990"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #13
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2009"* nonnull %3, i8* %14) #13
  %15 = bitcast %"class.WTF::StringTypeAdapter.2010"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #13
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2010", %"class.WTF::StringTypeAdapter.2010"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2010", %"class.WTF::StringTypeAdapter.2010"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.1990", %"class.WTF::StringAppend.1990"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #13
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2010"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2009"* nonnull %3, i16* %1) #13
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2010", %"class.WTF::StringTypeAdapter.2010"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1383"* nonnull %34, i16* %37) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #13
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1991"* %6) #13
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2009"* nonnull %5, i16* %40) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #13
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2009"*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1991"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2009", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.2009"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2009", %"class.WTF::StringTypeAdapter.2009"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.1991", %"class.WTF::StringAppend.1991"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.2009"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2009"* nonnull %4, i8* %13) #13
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1991", %"class.WTF::StringAppend.1991"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i8* %30, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.9, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0), i8* %45, i8* %46) #13
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.9, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #13
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #13
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2009"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2009"*, i16*) local_unnamed_addr #1

declare %"class.blink::HTMLStackItem"* @_ZNK5blink16HTMLElementStack11OneBelowTopEv(%"class.blink::HTMLElementStack"*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF10StringImpl9SubstringEjj(%"class.WTF::StringImpl"*, i32, i32) local_unnamed_addr #1

declare %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7GetTagsEv() local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13HTMLStackItemEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv) #13
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ContainerNode"*
  %4 = bitcast i8* %1 to void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)**, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ContainerNode"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HTMLStackItemC2EPNS_13ContainerNodeENS0_8ItemTypeE(%"class.blink::HTMLStackItem"*, %"class.blink::ContainerNode"*, i32) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::ContainerNode"* %1, %"class.blink::ContainerNode"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false)
  switch i32 %2, label %100 [
    i32 1, label %97
    i32 0, label %10
  ]

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::HTMLStackItem"* %0 to %"class.blink::Element"**
  %12 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 1, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast %"class.blink::TraceWrapperV8Reference"* %12 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %14 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %33, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %33

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i33
  %27 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %26, i33 1) #13
  %28 = extractvalue { i33, i1 } %27, 1
  %29 = extractvalue { i33, i1 } %27, 0
  %30 = icmp slt i33 %29, 0
  %31 = or i1 %28, %30
  br i1 %31, label %32, label %36, !prof !2

32:                                               ; preds = %23
  tail call void @llvm.trap() #13
  unreachable

33:                                               ; preds = %18, %10
  %34 = ptrtoint %"class.WTF::StringImpl"* %16 to i64
  %35 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  store i64 %34, i64* %35, align 8
  br label %55

36:                                               ; preds = %23
  %37 = trunc i33 %29 to i32
  store i32 %37, i32* %24, align 4
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %39 = ptrtoint %"class.WTF::StringImpl"* %16 to i64
  %40 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  store i64 %39, i64* %40, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #13
  br label %55

55:                                               ; preds = %33, %36, %51, %54
  %56 = load %"class.blink::Element"*, %"class.blink::Element"** %11, align 8
  %57 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %56, i64 0, i32 2, i32 0, i32 0
  %58 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 4, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %79, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %79

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = zext i32 %69 to i33
  %71 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %70, i33 1) #13
  %72 = extractvalue { i33, i1 } %71, 1
  %73 = extractvalue { i33, i1 } %71, 0
  %74 = icmp slt i33 %73, 0
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %77, !prof !2

76:                                               ; preds = %67
  tail call void @llvm.trap() #13
  unreachable

77:                                               ; preds = %67
  %78 = trunc i33 %73 to i32
  store i32 %78, i32* %68, align 4
  br label %79

79:                                               ; preds = %77, %62, %55
  %80 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %81 = bitcast %"class.WTF::AtomicString"* %7 to i64*
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  store i64 %80, i64* %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #13
  br label %97

97:                                               ; preds = %96, %93, %79, %3
  %98 = phi i8 [ 1, %3 ], [ 0, %79 ], [ 0, %93 ], [ 0, %96 ]
  %99 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 4
  store i8 %98, i8* %99, align 8
  br label %100

100:                                              ; preds = %97, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_13HTMLStackItemEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_13HTMLStackItemEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_13HTMLStackItemEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_13HTMLStackItemEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13HTMLStackItemEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_13HTMLStackItemEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::HTMLStackItem"*
  tail call void @_ZN5blink13HTMLStackItemD2Ev(%"class.blink::HTMLStackItem"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_13HTMLStackItemEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i8 1 }
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HTMLStackItemD2Ev(%"class.blink::HTMLStackItem"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #13
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 2
  %20 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %20, align 8
  %22 = icmp eq %"class.blink::Attribute"* %21, null
  br i1 %22, label %58, label %23, !prof !3

23:                                               ; preds = %18
  %24 = bitcast %"class.blink::Attribute"* %21 to i8*
  %25 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %56, label %28, !prof !2

28:                                               ; preds = %23
  %29 = zext i32 %26 to i64
  %30 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %21, i64 %29
  br label %31

31:                                               ; preds = %49, %28
  %32 = phi %"class.blink::Attribute"* [ %51, %49 ], [ %21, %28 ]
  %33 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %32, i64 0, i32 1, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #13
  br label %49

49:                                               ; preds = %48, %45, %31
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %32, i64 0, i32 0
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %50) #13
  %51 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %32, i64 1
  %52 = icmp eq %"class.blink::Attribute"* %51, %30
  br i1 %52, label %53, label %31

53:                                               ; preds = %49
  store i32 0, i32* %25, align 4
  %54 = bitcast %"class.WTF::Vector"* %19 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %53, %23
  %57 = phi i8* [ %55, %53 ], [ %24, %23 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %57) #13
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %20, align 8
  br label %58

58:                                               ; preds = %18, %56
  %59 = getelementptr inbounds %"class.blink::HTMLStackItem", %"class.blink::HTMLStackItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #13
  br label %75

75:                                               ; preds = %58, %71, %74
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink15HTMLTreeBuilder13InsertionModeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.91"*, i32* dereferenceable(4)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.91", %"class.WTF::Vector.91"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.91", %"class.WTF::Vector.91"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.91", %"class.WTF::Vector.91"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15HTMLTreeBuilder13InsertionModeEEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15HTMLTreeBuilder13InsertionModeEEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.91"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.91"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.91"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.91", %"class.WTF::Vector.91"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15HTMLTreeBuilder13InsertionModeEEEmm(i64 %71) #13
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15HTMLTreeBuilder13InsertionModeEEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.91"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #13
  %87 = bitcast %"class.WTF::Vector.91"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #13
  %91 = bitcast %"class.WTF::Vector.91"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15HTMLTreeBuilder13InsertionModeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16DocumentFragmentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ContainerNode"*
  %4 = bitcast i8* %1 to void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)**, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ContainerNode"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare void @_ZNK5blink20HTMLConstructionSite5TraceEPNS_7VisitorE(%"class.blink::HTMLConstructionSite"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18HTMLDocumentParserEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLDocumentParser"*
  %4 = bitcast i8* %1 to void (%"class.blink::HTMLDocumentParser"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::HTMLDocumentParser"*, %"class.blink::Visitor"*)**, void (%"class.blink::HTMLDocumentParser"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::HTMLDocumentParser"*, %"class.blink::Visitor"*)*, void (%"class.blink::HTMLDocumentParser"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::HTMLDocumentParser"*, %"class.blink::Visitor"*)*, void (%"class.blink::HTMLDocumentParser"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::HTMLDocumentParser"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN3WTF6VectorIN5blink15HTMLTreeBuilder13InsertionModeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.91"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.91", %"class.WTF::Vector.91"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.91", %"class.WTF::Vector.91"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer11TakeLeadingIXadL_ZNS_11IsHTMLSpaceIDsEEbT_EEEEN3WTF10StringViewEv: argument 0"}
!7 = distinct !{!7, !"_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer11TakeLeadingIXadL_ZNS_11IsHTMLSpaceIDsEEbT_EEEEN3WTF10StringViewEv"}
!8 = distinct !{!8, !9, !"_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer21TakeLeadingWhitespaceEv: argument 0"}
!9 = distinct !{!9, !"_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer21TakeLeadingWhitespaceEv"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer11TakeLeadingIXadL_ZNS_11IsHTMLSpaceIDsEEbT_EEEEN3WTF10StringViewEv: argument 0"}
!12 = distinct !{!12, !"_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer11TakeLeadingIXadL_ZNS_11IsHTMLSpaceIDsEEbT_EEEEN3WTF10StringViewEv"}
!13 = distinct !{!13, !14, !"_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer21TakeLeadingWhitespaceEv: argument 0"}
!14 = distinct !{!14, !"_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer21TakeLeadingWhitespaceEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer13TakeRemainingEv: argument 0"}
!17 = distinct !{!17, !"_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer13TakeRemainingEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer13TakeRemainingEv: argument 0"}
!20 = distinct !{!20, !"_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer13TakeRemainingEv"}
!21 = !{!22, !24}
!22 = distinct !{!22, !23, !"_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer11TakeLeadingIXadL_ZNS_11IsHTMLSpaceIDsEEbT_EEEEN3WTF10StringViewEv: argument 0"}
!23 = distinct !{!23, !"_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer11TakeLeadingIXadL_ZNS_11IsHTMLSpaceIDsEEbT_EEEEN3WTF10StringViewEv"}
!24 = distinct !{!24, !25, !"_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer21TakeLeadingWhitespaceEv: argument 0"}
!25 = distinct !{!25, !"_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer21TakeLeadingWhitespaceEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer13TakeRemainingEv: argument 0"}
!28 = distinct !{!28, !"_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer13TakeRemainingEv"}
!29 = !{!30, !32}
!30 = distinct !{!30, !31, !"_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer11TakeLeadingIXadL_ZNS_11IsHTMLSpaceIDsEEbT_EEEEN3WTF10StringViewEv: argument 0"}
!31 = distinct !{!31, !"_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer11TakeLeadingIXadL_ZNS_11IsHTMLSpaceIDsEEbT_EEEEN3WTF10StringViewEv"}
!32 = distinct !{!32, !33, !"_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer21TakeLeadingWhitespaceEv: argument 0"}
!33 = distinct !{!33, !"_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer21TakeLeadingWhitespaceEv"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer13TakeRemainingEv: argument 0"}
!36 = distinct !{!36, !"_ZN5blink15HTMLTreeBuilder20CharacterTokenBuffer13TakeRemainingEv"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINS_12AtomicStringEEENS1_IN5blink13QualifiedNameEEEE10EmptyValueEv: argument 0"}
!39 = distinct !{!39, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINS_12AtomicStringEEENS1_IN5blink13QualifiedNameEEEE10EmptyValueEv"}
