; ModuleID = '../../third_party/icu/source/common/usprep.cpp'
source_filename = "../../third_party/icu/source/common/usprep.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UHashtable = type { %struct.UHashElement*, i32 (i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, void (i8*)*, void (i8*)*, i32, i32, i32, i32, float, float, i8, i8 }
%struct.UHashElement = type { i32, %union.UElement, %union.UElement }
%union.UElement = type { i8* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.icu_69::UMutex" = type { [40 x i8], %"struct.std::__1::atomic", %"class.icu_69::UMutex"* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.std::__1::mutex"* }
%struct.UStringPrepProfile = type { [16 x i32], %struct.UTrie, i16*, %struct.UDataMemory*, i32, i8, i8, i8 }
%struct.UTrie = type { i16*, i32*, i32 (i32)*, i32, i32, i32, i8 }
%struct.UDataMemory = type opaque
%struct.UStringPrepKey = type { i8*, i8* }
%"struct.icu_69::UInitOnce" = type { %"struct.std::__1::atomic.5", i32 }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i32 }
%struct.UParseError = type { i32, i32, [16 x i16], [16 x i16] }
%"class.icu_69::UnicodeString" = type { %"class.icu_69::Replaceable", %"union.icu_69::UnicodeString::StackBufferOrFields" }
%"class.icu_69::Replaceable" = type { %"class.icu_69::UObject" }
%"class.icu_69::UObject" = type { i32 (...)** }
%"union.icu_69::UnicodeString::StackBufferOrFields" = type { %struct.anon.0, [32 x i8] }
%struct.anon.0 = type { i16, i32, i32, i16* }
%"class.icu_69::FilteredNormalizer2" = type { %"class.icu_69::Normalizer2", %"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeSet"* }
%"class.icu_69::Normalizer2" = type { %"class.icu_69::UObject" }
%"class.icu_69::UnicodeSet" = type <{ %"class.icu_69::UnicodeFilter", i32*, i32, i32, i8, [7 x i8], %"class.icu_69::BMPSet"*, i32*, i32, [4 x i8], i16*, i32, [4 x i8], %"class.icu_69::UVector"*, %"class.icu_69::UnicodeSetStringSpan"*, [25 x i32], [4 x i8] }>
%"class.icu_69::UnicodeFilter" = type { %"class.icu_69::UnicodeFunctor", %"class.icu_69::UnicodeMatcher" }
%"class.icu_69::UnicodeFunctor" = type { %"class.icu_69::UObject" }
%"class.icu_69::UnicodeMatcher" = type { i32 (...)** }
%"class.icu_69::BMPSet" = type opaque
%"class.icu_69::UVector" = type opaque
%"class.icu_69::UnicodeSetStringSpan" = type opaque
%"class.icu_69::Char16Ptr" = type { i16* }
%struct.anon = type { i16, [27 x i16] }
%struct.UDataSwapper = type { i8, i8, i8, i8, i16 (i16)*, i32 (i32)*, i32 (%struct.UDataSwapper*, i8*, i32, i16*, i32)*, void (i16*, i16)*, void (i32*, i32)*, {}*, {}*, {}*, {}*, void (i8*, i8*, %struct.__va_list_tag*)*, i8* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.UDataInfo = type { i16, i16, i8, i8, i8, i8, [4 x i8], [4 x i8], [4 x i8] }

@_ZL13PROFILE_NAMES = internal unnamed_addr constant [14 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i32 0, i32 0)], align 16
@.str = private unnamed_addr constant [112 x i8] c"usprep_swap(): data format %02x.%02x.%02x.%02x (format version %02x) is not recognized as StringPrep .spp data\0A\00", align 1
@.str.1 = private unnamed_addr constant [73 x i8] c"usprep_swap(): too few bytes (%d after header) for StringPrep .spp data\0A\00", align 1
@.str.2 = private unnamed_addr constant [80 x i8] c"usprep_swap(): too few bytes (%d after header) for all of StringPrep .spp data\0A\00", align 1
@_ZL21SHARED_DATA_HASHTABLE = internal unnamed_addr global %struct.UHashtable* null, align 8
@.str.3 = private unnamed_addr constant [4 x i8] c"spp\00", align 1
@_ZL19gSharedDataInitOnce = internal global { { { i32 } }, i32 } zeroinitializer, align 4
@_ZL11dataVersion = internal unnamed_addr global [4 x i8] zeroinitializer, align 4
@.str.5 = private unnamed_addr constant [8 x i8] c"rfc3491\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"rfc3530cs\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"rfc3530csci\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"rfc3530mixp\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"rfc3722\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"rfc3920node\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"rfc3920res\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"rfc4011\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"rfc4013\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"rfc4505\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"rfc4518\00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"rfc4518ci\00", align 1
@_ZL11usprepMutex = internal global { [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* } zeroinitializer, align 8
@_ZTVN6icu_6913UnicodeStringE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZTVN6icu_6919FilteredNormalizer2E = external unnamed_addr constant { [20 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UStringPrepProfile* @usprep_open_69(i8*, i8*, i32*) local_unnamed_addr #0 {
  %4 = alloca %struct.UTrie, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.UStringPrepKey, align 8
  %7 = icmp eq i32* %2, null
  br i1 %7, label %227, label %8

8:                                                ; preds = %3
  %9 = load i32, i32* %2, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %227

11:                                               ; preds = %8
  %12 = load atomic i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZL19gSharedDataInitOnce, i64 0, i32 0, i32 0, i32 0) acquire, align 4
  %13 = icmp eq i32 %12, 2
  br i1 %13, label %23, label %14

14:                                               ; preds = %11
  %15 = tail call signext i8 @_ZN6icu_6920umtx_initImplPreInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZL19gSharedDataInitOnce to %"struct.icu_69::UInitOnce"*)) #9
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %14
  %18 = tail call %struct.UHashtable* @uhash_open_69(i32 (i8*)* nonnull @_ZL9hashEntry8UElement, i8 (i8*, i8*)* nonnull @_ZL14compareEntries8UElementS_, i8 (i8*, i8*)* null, i32* nonnull %2) #9
  %19 = load i32, i32* %2, align 4
  %20 = icmp slt i32 %19, 1
  %21 = select i1 %20, %struct.UHashtable* %18, %struct.UHashtable* null
  store %struct.UHashtable* %21, %struct.UHashtable** @_ZL21SHARED_DATA_HASHTABLE, align 8
  tail call void @ucln_common_registerCleanup_69(i32 1, i8 ()* nonnull @_ZL14usprep_cleanupv) #9
  %22 = load i32, i32* %2, align 4
  store i32 %22, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZL19gSharedDataInitOnce, i64 0, i32 1), align 4
  tail call void @_ZN6icu_6921umtx_initImplPostInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZL19gSharedDataInitOnce to %"struct.icu_69::UInitOnce"*)) #9
  br label %27

23:                                               ; preds = %14, %11
  %24 = load i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZL19gSharedDataInitOnce, i64 0, i32 1), align 4
  %25 = icmp slt i32 %24, 1
  br i1 %25, label %27, label %26

26:                                               ; preds = %23
  store i32 %24, i32* %2, align 4
  br label %227

27:                                               ; preds = %23, %17
  %28 = load i32, i32* %2, align 4
  %29 = icmp slt i32 %28, 1
  br i1 %29, label %30, label %227

30:                                               ; preds = %27
  %31 = bitcast %struct.UStringPrepKey* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #9
  %32 = getelementptr inbounds %struct.UStringPrepKey, %struct.UStringPrepKey* %6, i64 0, i32 0
  %33 = getelementptr inbounds %struct.UStringPrepKey, %struct.UStringPrepKey* %6, i64 0, i32 1
  store i8* %1, i8** %32, align 8
  store i8* %0, i8** %33, align 8
  tail call void @umtx_lock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZL11usprepMutex to %"class.icu_69::UMutex"*)) #9
  %34 = load %struct.UHashtable*, %struct.UHashtable** @_ZL21SHARED_DATA_HASHTABLE, align 8
  %35 = call i8* @uhash_get_69(%struct.UHashtable* %34, i8* nonnull %31) #9
  %36 = icmp eq i8* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %30
  %38 = bitcast i8* %35 to %struct.UStringPrepProfile*
  %39 = getelementptr inbounds i8, i8* %35, i64 120
  %40 = bitcast i8* %39 to i32*
  %41 = load i32, i32* %40, align 8
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %40, align 8
  call void @umtx_unlock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZL11usprepMutex to %"class.icu_69::UMutex"*)) #9
  br label %223

43:                                               ; preds = %30
  call void @umtx_unlock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZL11usprepMutex to %"class.icu_69::UMutex"*)) #9
  %44 = call noalias i8* @uprv_malloc_69(i64 128) #10
  %45 = icmp eq i8* %44, null
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  store i32 7, i32* %2, align 4
  br label %215

47:                                               ; preds = %43
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 128, i1 false) #9
  call void @uprv_free_69(i8* null) #9
  %48 = bitcast i32* %5 to [4 x i8]*
  %49 = bitcast %struct.UTrie* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %49) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 40, i1 false) #9
  %50 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #9
  %51 = getelementptr inbounds [4 x i8], [4 x i8]* %48, i64 0, i64 1
  %52 = getelementptr inbounds [4 x i8], [4 x i8]* %48, i64 0, i64 2
  %53 = getelementptr inbounds [4 x i8], [4 x i8]* %48, i64 0, i64 3
  store i32 -1431655766, i32* %5, align 4
  %54 = load i32, i32* %2, align 4
  %55 = icmp slt i32 %54, 1
  br i1 %55, label %56, label %140

56:                                               ; preds = %47
  %57 = call %struct.UDataMemory* @udata_openChoice_69(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i8* %1, i8 (i8*, i8*, i8*, %struct.UDataInfo*)* nonnull @_ZL17isSPrepAcceptablePvPKcS1_PK9UDataInfo, i8* null, i32* nonnull %2) #9
  %58 = load i32, i32* %2, align 4
  %59 = icmp slt i32 %58, 1
  br i1 %59, label %60, label %140

60:                                               ; preds = %56
  %61 = call i8* @udata_getMemory_69(%struct.UDataMemory* %57) #9
  %62 = bitcast i8* %61 to i32*
  %63 = getelementptr inbounds i8, i8* %61, i64 64
  %64 = load i32, i32* %62, align 4
  %65 = call i32 @utrie_unserialize_69(%struct.UTrie* nonnull %4, i8* %63, i32 %64, i32* nonnull %2) #9
  %66 = getelementptr inbounds %struct.UTrie, %struct.UTrie* %4, i64 0, i32 2
  store i32 (i32)* @_ZL21getSPrepFoldingOffsetj, i32 (i32)** %66, align 8
  %67 = load i32, i32* %2, align 4
  %68 = icmp slt i32 %67, 1
  br i1 %68, label %70, label %69

69:                                               ; preds = %60
  call void @udata_close_69(%struct.UDataMemory* %57) #9
  br label %140

70:                                               ; preds = %60
  call void @umtx_lock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZL11usprepMutex to %"class.icu_69::UMutex"*)) #9
  %71 = getelementptr inbounds i8, i8* %44, i64 112
  %72 = bitcast i8* %71 to %struct.UDataMemory**
  %73 = load %struct.UDataMemory*, %struct.UDataMemory** %72, align 8
  %74 = icmp eq %struct.UDataMemory* %73, null
  br i1 %74, label %75, label %77

75:                                               ; preds = %70
  store %struct.UDataMemory* %57, %struct.UDataMemory** %72, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 4 %61, i64 64, i1 false) #9
  %76 = getelementptr inbounds i8, i8* %44, i64 64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* nonnull align 8 %49, i64 40, i1 false) #9
  br label %80

77:                                               ; preds = %70
  %78 = call i8* @udata_getMemory_69(%struct.UDataMemory* nonnull %73) #9
  %79 = bitcast i8* %78 to i32*
  br label %80

80:                                               ; preds = %77, %75
  %81 = phi %struct.UDataMemory* [ null, %75 ], [ %57, %77 ]
  %82 = phi i32* [ %62, %75 ], [ %79, %77 ]
  call void @umtx_unlock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZL11usprepMutex to %"class.icu_69::UMutex"*)) #9
  %83 = getelementptr inbounds i32, i32* %82, i64 16
  %84 = bitcast i32* %83 to i8*
  %85 = bitcast i8* %44 to i32*
  %86 = load i32, i32* %85, align 8
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %84, i64 %87
  %89 = getelementptr inbounds i8, i8* %44, i64 104
  %90 = bitcast i8* %89 to i8**
  store i8* %88, i8** %90, align 8
  call void @u_getUnicodeVersion_69(i8* nonnull %50) #9
  %91 = load i8, i8* %50, align 4
  %92 = zext i8 %91 to i32
  %93 = shl nuw i32 %92, 24
  %94 = load i8, i8* %51, align 1
  %95 = zext i8 %94 to i32
  %96 = shl nuw nsw i32 %95, 16
  %97 = or i32 %96, %93
  %98 = load i8, i8* %52, align 2
  %99 = zext i8 %98 to i32
  %100 = shl nuw nsw i32 %99, 8
  %101 = or i32 %97, %100
  %102 = load i8, i8* %53, align 1
  %103 = zext i8 %102 to i32
  %104 = or i32 %101, %103
  %105 = load i32, i32* %2, align 4
  %106 = icmp slt i32 %105, 1
  br i1 %106, label %108, label %107

107:                                              ; preds = %80
  call void @udata_close_69(%struct.UDataMemory* %81) #9
  br label %140

108:                                              ; preds = %80
  %109 = getelementptr inbounds i8, i8* %44, i64 8
  %110 = bitcast i8* %109 to i32*
  %111 = load i32, i32* %110, align 8
  %112 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZL11dataVersion, i64 0, i64 3), align 1
  %113 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZL11dataVersion, i64 0, i64 2), align 2
  %114 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZL11dataVersion, i64 0, i64 1), align 1
  %115 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZL11dataVersion, i64 0, i64 0), align 4
  %116 = zext i8 %115 to i32
  %117 = shl nuw i32 %116, 24
  %118 = zext i8 %114 to i32
  %119 = shl nuw nsw i32 %118, 16
  %120 = zext i8 %113 to i32
  %121 = shl nuw nsw i32 %120, 8
  %122 = zext i8 %112 to i32
  %123 = or i32 %121, %122
  %124 = or i32 %123, %119
  %125 = or i32 %124, %117
  %126 = icmp slt i32 %104, %125
  %127 = icmp slt i32 %104, %111
  %128 = and i1 %127, %126
  br i1 %128, label %129, label %136

129:                                              ; preds = %108
  %130 = getelementptr inbounds i8, i8* %44, i64 28
  %131 = bitcast i8* %130 to i32*
  %132 = load i32, i32* %131, align 4
  %133 = and i32 %132, 1
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %136, label %135

135:                                              ; preds = %129
  store i32 3, i32* %2, align 4
  call void @udata_close_69(%struct.UDataMemory* %81) #9
  br label %140

136:                                              ; preds = %129, %108
  %137 = getelementptr inbounds i8, i8* %44, i64 124
  store i8 1, i8* %137, align 4
  %138 = icmp eq %struct.UDataMemory* %81, null
  br i1 %138, label %139, label %141

139:                                              ; preds = %136
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %49) #9
  br label %147

140:                                              ; preds = %135, %107, %69, %56, %47
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %49) #9
  br label %215

141:                                              ; preds = %136
  call void @udata_close_69(%struct.UDataMemory* nonnull %81) #9
  %142 = load i8, i8* %137, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %49) #9
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %215, label %144

144:                                              ; preds = %141
  %145 = load i32, i32* %2, align 4
  %146 = icmp slt i32 %145, 1
  br i1 %146, label %147, label %215

147:                                              ; preds = %139, %144
  %148 = getelementptr inbounds i8, i8* %44, i64 28
  %149 = bitcast i8* %148 to i32*
  %150 = load i32, i32* %149, align 4
  %151 = trunc i32 %150 to i8
  %152 = and i8 %151, 1
  %153 = getelementptr inbounds i8, i8* %44, i64 125
  store i8 %152, i8* %153, align 1
  %154 = lshr i32 %150, 1
  %155 = trunc i32 %154 to i8
  %156 = and i8 %155, 1
  %157 = getelementptr inbounds i8, i8* %44, i64 126
  store i8 %156, i8* %157, align 2
  %158 = call noalias i8* @uprv_malloc_69(i64 16) #10
  %159 = icmp eq i8* %158, null
  br i1 %159, label %181, label %160

160:                                              ; preds = %147
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %158, i8 0, i64 16, i1 false) #9
  call void @uprv_free_69(i8* null) #9
  %161 = call i64 @strlen(i8* %1) #11
  %162 = trunc i64 %161 to i32
  %163 = add i32 %162, 1
  %164 = icmp sgt i32 %163, 0
  br i1 %164, label %165, label %181

165:                                              ; preds = %160
  %166 = sext i32 %163 to i64
  %167 = call noalias i8* @uprv_malloc_69(i64 %166) #10
  %168 = icmp eq i8* %167, null
  br i1 %168, label %181, label %169

169:                                              ; preds = %165
  call void @uprv_free_69(i8* null) #9
  %170 = icmp ne i8* %0, null
  br i1 %170, label %171, label %184

171:                                              ; preds = %169
  %172 = call i64 @strlen(i8* nonnull %0) #11
  %173 = trunc i64 %172 to i32
  %174 = add i32 %173, 1
  %175 = icmp sgt i32 %174, 0
  br i1 %175, label %176, label %181

176:                                              ; preds = %171
  %177 = sext i32 %174 to i64
  %178 = call noalias i8* @uprv_malloc_69(i64 %177) #10
  %179 = icmp eq i8* %178, null
  br i1 %179, label %181, label %180

180:                                              ; preds = %176
  call void @uprv_free_69(i8* null) #9
  br label %184

181:                                              ; preds = %176, %171, %165, %160, %147
  %182 = phi i8* [ null, %165 ], [ null, %160 ], [ %167, %176 ], [ %167, %171 ], [ null, %147 ]
  store i32 7, i32* %2, align 4
  %183 = load %struct.UDataMemory*, %struct.UDataMemory** %72, align 8
  call void @udata_close_69(%struct.UDataMemory* %183) #9
  br label %216

184:                                              ; preds = %180, %169
  %185 = phi i8* [ %178, %180 ], [ null, %169 ]
  call void @umtx_lock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZL11usprepMutex to %"class.icu_69::UMutex"*)) #9
  %186 = load %struct.UHashtable*, %struct.UHashtable** @_ZL21SHARED_DATA_HASHTABLE, align 8
  %187 = call i8* @uhash_get_69(%struct.UHashtable* %186, i8* nonnull %31) #9
  %188 = icmp eq i8* %187, null
  br i1 %188, label %195, label %189

189:                                              ; preds = %184
  %190 = getelementptr inbounds i8, i8* %187, i64 120
  %191 = bitcast i8* %190 to i32*
  %192 = load i32, i32* %191, align 8
  %193 = add nsw i32 %192, 1
  store i32 %193, i32* %191, align 8
  %194 = load %struct.UDataMemory*, %struct.UDataMemory** %72, align 8
  call void @udata_close_69(%struct.UDataMemory* %194) #9
  br label %208

195:                                              ; preds = %184
  %196 = bitcast i8* %158 to i8**
  store i8* %167, i8** %196, align 8
  %197 = call i8* @strcpy(i8* nonnull %167, i8* %1) #9
  br i1 %170, label %198, label %202

198:                                              ; preds = %195
  %199 = getelementptr inbounds i8, i8* %158, i64 8
  %200 = bitcast i8* %199 to i8**
  store i8* %185, i8** %200, align 8
  %201 = call i8* @strcpy(i8* %185, i8* nonnull %0) #9
  br label %202

202:                                              ; preds = %198, %195
  %203 = phi i8* [ null, %198 ], [ %185, %195 ]
  %204 = getelementptr inbounds i8, i8* %44, i64 120
  %205 = bitcast i8* %204 to i32*
  store i32 1, i32* %205, align 8
  %206 = load %struct.UHashtable*, %struct.UHashtable** @_ZL21SHARED_DATA_HASHTABLE, align 8
  %207 = call i8* @uhash_put_69(%struct.UHashtable* %206, i8* nonnull %158, i8* nonnull %44, i32* nonnull %2) #9
  br label %208

208:                                              ; preds = %202, %189
  %209 = phi i8* [ null, %202 ], [ %44, %189 ]
  %210 = phi i8* [ null, %202 ], [ %158, %189 ]
  %211 = phi i8* [ null, %202 ], [ %167, %189 ]
  %212 = phi i8* [ %203, %202 ], [ %185, %189 ]
  %213 = phi i8* [ %44, %202 ], [ %187, %189 ]
  %214 = bitcast i8* %213 to %struct.UStringPrepProfile*
  call void @umtx_unlock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZL11usprepMutex to %"class.icu_69::UMutex"*)) #9
  br label %216

215:                                              ; preds = %144, %141, %140, %46
  call void @uprv_free_69(i8* %44) #9
  br label %225

216:                                              ; preds = %208, %181
  %217 = phi i8* [ %44, %181 ], [ %209, %208 ]
  %218 = phi i8* [ %158, %181 ], [ %210, %208 ]
  %219 = phi i8* [ %182, %181 ], [ %211, %208 ]
  %220 = phi i8* [ null, %181 ], [ %212, %208 ]
  %221 = phi %struct.UStringPrepProfile* [ null, %181 ], [ %214, %208 ]
  %222 = phi i1 [ false, %181 ], [ true, %208 ]
  call void @uprv_free_69(i8* %220) #9
  call void @uprv_free_69(i8* %219) #9
  call void @uprv_free_69(i8* %218) #9
  call void @uprv_free_69(i8* %217) #9
  br i1 %222, label %223, label %225

223:                                              ; preds = %216, %37
  %224 = phi %struct.UStringPrepProfile* [ %221, %216 ], [ %38, %37 ]
  br label %225

225:                                              ; preds = %223, %216, %215
  %226 = phi %struct.UStringPrepProfile* [ %224, %223 ], [ null, %216 ], [ null, %215 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #9
  br label %227

227:                                              ; preds = %225, %27, %26, %3, %8
  %228 = phi %struct.UStringPrepProfile* [ null, %8 ], [ null, %3 ], [ %226, %225 ], [ null, %27 ], [ null, %26 ]
  ret %struct.UStringPrepProfile* %228
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UStringPrepProfile* @usprep_openByType_69(i32, i32*) local_unnamed_addr #0 {
  %3 = icmp eq i32* %1, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = load i32, i32* %1, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %15

7:                                                ; preds = %4
  %8 = icmp ugt i32 %0, 13
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  store i32 1, i32* %1, align 4
  br label %15

10:                                               ; preds = %7
  %11 = sext i32 %0 to i64
  %12 = getelementptr inbounds [14 x i8*], [14 x i8*]* @_ZL13PROFILE_NAMES, i64 0, i64 %11
  %13 = load i8*, i8** %12, align 8
  %14 = tail call %struct.UStringPrepProfile* @usprep_open_69(i8* null, i8* %13, i32* nonnull %1)
  br label %15

15:                                               ; preds = %9, %10, %2, %4
  %16 = phi %struct.UStringPrepProfile* [ null, %4 ], [ null, %2 ], [ null, %9 ], [ %14, %10 ]
  ret %struct.UStringPrepProfile* %16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @usprep_close_69(%struct.UStringPrepProfile*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.UStringPrepProfile* %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  tail call void @umtx_lock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZL11usprepMutex to %"class.icu_69::UMutex"*)) #9
  %4 = getelementptr inbounds %struct.UStringPrepProfile, %struct.UStringPrepProfile* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = add nsw i32 %5, -1
  store i32 %8, i32* %4, align 8
  br label %9

9:                                                ; preds = %7, %3
  tail call void @umtx_unlock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZL11usprepMutex to %"class.icu_69::UMutex"*)) #9
  br label %10

10:                                               ; preds = %1, %9
  ret void
}

declare void @umtx_lock_69(%"class.icu_69::UMutex"*) local_unnamed_addr #2

declare void @umtx_unlock_69(%"class.icu_69::UMutex"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @uprv_syntaxError_69(i16*, i32, i32, %struct.UParseError*) local_unnamed_addr #0 {
  %5 = icmp eq %struct.UParseError* %3, null
  br i1 %5, label %35, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %3, i64 0, i32 1
  store i32 %1, i32* %7, align 4
  %8 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %3, i64 0, i32 0
  store i32 0, i32* %8, align 4
  %9 = icmp slt i32 %1, 16
  %10 = add nsw i32 %1, -15
  %11 = select i1 %9, i32 0, i32 %10
  %12 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %3, i64 0, i32 2, i64 0
  %13 = sext i32 %11 to i64
  %14 = getelementptr inbounds i16, i16* %0, i64 %13
  %15 = sub nsw i32 %1, %11
  %16 = tail call i16* @u_memcpy_69(i16* %12, i16* %14, i32 %15) #9
  %17 = sext i32 %15 to i64
  %18 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %3, i64 0, i32 2, i64 %17
  store i16 0, i16* %18, align 2
  %19 = add nsw i32 %1, 15
  %20 = icmp sgt i32 %19, %2
  %21 = select i1 %20, i32 %2, i32 %19
  %22 = icmp slt i32 %1, %2
  br i1 %22, label %25, label %23

23:                                               ; preds = %6
  %24 = sub nsw i32 %21, %1
  br label %31

25:                                               ; preds = %6
  %26 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %3, i64 0, i32 3, i64 0
  %27 = sext i32 %1 to i64
  %28 = getelementptr inbounds i16, i16* %0, i64 %27
  %29 = sub nsw i32 %21, %1
  %30 = tail call i16* @u_memcpy_69(i16* %26, i16* %28, i32 %29) #9
  br label %31

31:                                               ; preds = %23, %25
  %32 = phi i32 [ %24, %23 ], [ %29, %25 ]
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %3, i64 0, i32 3, i64 %33
  store i16 0, i16* %34, align 2
  br label %35

35:                                               ; preds = %4, %31
  ret void
}

declare i16* @u_memcpy_69(i16*, i16*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @usprep_prepare_69(%struct.UStringPrepProfile* readonly, i16*, i32, i16*, i32, i32, %struct.UParseError*, i32*) local_unnamed_addr #0 {
  %9 = alloca %"class.icu_69::UnicodeString", align 8
  %10 = alloca %"class.icu_69::UnicodeString", align 8
  %11 = alloca %"class.icu_69::FilteredNormalizer2", align 8
  %12 = alloca %"class.icu_69::Char16Ptr", align 8
  %13 = load i32, i32* %7, align 4
  %14 = icmp slt i32 %13, 1
  br i1 %14, label %15, label %374

15:                                               ; preds = %8
  %16 = icmp eq %struct.UStringPrepProfile* %0, null
  br i1 %16, label %29, label %17

17:                                               ; preds = %15
  %18 = icmp eq i16* %1, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = icmp eq i32 %2, 0
  br i1 %20, label %23, label %29

21:                                               ; preds = %17
  %22 = icmp slt i32 %2, -1
  br i1 %22, label %29, label %23

23:                                               ; preds = %19, %21
  %24 = icmp eq i16* %3, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = icmp eq i32 %4, 0
  br i1 %26, label %30, label %29

27:                                               ; preds = %23
  %28 = icmp slt i32 %4, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %19, %25, %27, %21, %15
  store i32 1, i32* %7, align 4
  br label %374

30:                                               ; preds = %25, %27
  %31 = icmp slt i32 %2, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %30
  %33 = tail call i32 @u_strlen_69(i16* %1) #9
  br label %34

34:                                               ; preds = %32, %30
  %35 = phi i32 [ %33, %32 ], [ %2, %30 ]
  %36 = bitcast %"class.icu_69::UnicodeString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %36) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 64, i1 false)
  %37 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %9, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %9, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %38, align 8
  %39 = call i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"* nonnull %9, i32 %35) #9
  %40 = icmp eq i16* %39, null
  br i1 %40, label %41, label %42

41:                                               ; preds = %34
  store i32 7, i32* %7, align 4
  br label %372

42:                                               ; preds = %34
  %43 = load i16, i16* %38, align 8
  %44 = and i16 %43, 2
  %45 = icmp eq i16 %44, 0
  %46 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %9, i64 0, i32 1, i32 0, i32 2
  %47 = load i32, i32* %46, align 8
  %48 = select i1 %45, i32 %47, i32 27
  %49 = call fastcc i32 @_ZL10usprep_mapPK18UStringPrepProfilePKDsiPDsiiP11UParseErrorP10UErrorCode(%struct.UStringPrepProfile* nonnull %0, i16* %1, i32 %35, i16* nonnull %39, i32 %48, i32 %5, %struct.UParseError* %6, i32* %7)
  %50 = load i32, i32* %7, align 4
  %51 = icmp sgt i32 %50, 0
  %52 = select i1 %51, i32 0, i32 %49
  call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* nonnull %9, i32 %52) #9
  %53 = load i32, i32* %7, align 4
  %54 = icmp eq i32 %53, 15
  br i1 %54, label %55, label %70

55:                                               ; preds = %42
  %56 = call i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"* nonnull %9, i32 %49) #9
  %57 = icmp eq i16* %56, null
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  store i32 7, i32* %7, align 4
  br label %372

59:                                               ; preds = %55
  store i32 0, i32* %7, align 4
  %60 = load i16, i16* %38, align 8
  %61 = and i16 %60, 2
  %62 = icmp eq i16 %61, 0
  %63 = load i32, i32* %46, align 8
  %64 = select i1 %62, i32 %63, i32 27
  %65 = call fastcc i32 @_ZL10usprep_mapPK18UStringPrepProfilePKDsiPDsiiP11UParseErrorP10UErrorCode(%struct.UStringPrepProfile* nonnull %0, i16* %1, i32 %35, i16* nonnull %56, i32 %64, i32 %5, %struct.UParseError* %6, i32* %7)
  %66 = load i32, i32* %7, align 4
  %67 = icmp sgt i32 %66, 0
  %68 = select i1 %67, i32 0, i32 %65
  call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* nonnull %9, i32 %68) #9
  %69 = load i32, i32* %7, align 4
  br label %70

70:                                               ; preds = %59, %42
  %71 = phi i32 [ %69, %59 ], [ %53, %42 ]
  %72 = icmp slt i32 %71, 1
  br i1 %72, label %73, label %372

73:                                               ; preds = %70
  %74 = bitcast %"class.icu_69::UnicodeString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %74) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 64, i1 false)
  %75 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %10, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %75, align 8
  %76 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %10, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %76, align 8
  %77 = getelementptr inbounds %struct.UStringPrepProfile, %struct.UStringPrepProfile* %0, i64 0, i32 6
  %78 = load i8, i8* %77, align 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %93, label %80

80:                                               ; preds = %73
  %81 = call %"class.icu_69::Normalizer2"* @_ZN6icu_6911Normalizer215getNFKCInstanceER10UErrorCode(i32* dereferenceable(4) %7) #9
  %82 = bitcast %"class.icu_69::FilteredNormalizer2"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #9
  %83 = getelementptr inbounds %"class.icu_69::FilteredNormalizer2", %"class.icu_69::FilteredNormalizer2"* %11, i64 0, i32 0, i32 0, i32 0
  %84 = getelementptr inbounds %"class.icu_69::FilteredNormalizer2", %"class.icu_69::FilteredNormalizer2"* %11, i64 0, i32 1
  %85 = getelementptr inbounds %"class.icu_69::FilteredNormalizer2", %"class.icu_69::FilteredNormalizer2"* %11, i64 0, i32 2
  %86 = bitcast %"class.icu_69::FilteredNormalizer2"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false)
  %87 = call %"class.icu_69::UnicodeSet"* @uniset_getUnicode32Instance_69(i32* dereferenceable(4) %7) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN6icu_6919FilteredNormalizer2E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %83, align 8
  store %"class.icu_69::Normalizer2"* %81, %"class.icu_69::Normalizer2"** %84, align 8
  store %"class.icu_69::UnicodeSet"* %87, %"class.icu_69::UnicodeSet"** %85, align 8
  %88 = load i32, i32* %7, align 4
  %89 = icmp slt i32 %88, 1
  br i1 %89, label %90, label %92

90:                                               ; preds = %80
  %91 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6919FilteredNormalizer29normalizeERKNS_13UnicodeStringERS1_R10UErrorCode(%"class.icu_69::FilteredNormalizer2"* nonnull %11, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %9, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %10, i32* dereferenceable(4) %7) #9
  call void @_ZN6icu_6919FilteredNormalizer2D1Ev(%"class.icu_69::FilteredNormalizer2"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #9
  br label %95

92:                                               ; preds = %80
  call void @_ZN6icu_6919FilteredNormalizer2D1Ev(%"class.icu_69::FilteredNormalizer2"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #9
  br label %370

93:                                               ; preds = %73
  %94 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString12fastCopyFromERKS0_(%"class.icu_69::UnicodeString"* nonnull %10, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %9) #9
  br label %95

95:                                               ; preds = %90, %93
  %96 = load i32, i32* %7, align 4
  %97 = icmp slt i32 %96, 1
  br i1 %97, label %98, label %370

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %10, i64 0, i32 1
  %100 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %99, i64 0, i32 0, i32 0
  %101 = load i16, i16* %100, align 8
  %102 = sext i16 %101 to i32
  %103 = and i32 %102, 17
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %114

105:                                              ; preds = %98
  %106 = and i32 %102, 2
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %111, label %108

108:                                              ; preds = %105
  %109 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %99 to %struct.anon*
  %110 = getelementptr inbounds %struct.anon, %struct.anon* %109, i64 0, i32 1, i64 0
  br label %114

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %10, i64 0, i32 1, i32 0, i32 3
  %113 = load i16*, i16** %112, align 8
  br label %114

114:                                              ; preds = %98, %108, %111
  %115 = phi i16* [ %110, %108 ], [ %113, %111 ], [ null, %98 ]
  %116 = icmp slt i16 %101, 0
  %117 = lshr i16 %101, 5
  %118 = zext i16 %117 to i32
  %119 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %10, i64 0, i32 1, i32 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = select i1 %116, i32 %120, i32 %118
  %122 = icmp sgt i32 %121, 0
  br i1 %122, label %123, label %285

123:                                              ; preds = %114
  %124 = getelementptr inbounds %struct.UStringPrepProfile, %struct.UStringPrepProfile* %0, i64 0, i32 1, i32 5
  %125 = getelementptr inbounds %struct.UStringPrepProfile, %struct.UStringPrepProfile* %0, i64 0, i32 1, i32 0
  %126 = getelementptr inbounds %struct.UStringPrepProfile, %struct.UStringPrepProfile* %0, i64 0, i32 1, i32 2
  %127 = getelementptr inbounds %struct.UStringPrepProfile, %struct.UStringPrepProfile* %0, i64 0, i32 7
  br label %128

128:                                              ; preds = %123, %277
  %129 = phi i32 [ 0, %123 ], [ %223, %277 ]
  %130 = phi i32 [ -1, %123 ], [ %283, %277 ]
  %131 = phi i32 [ -1, %123 ], [ %282, %277 ]
  %132 = phi i8 [ 0, %123 ], [ %281, %277 ]
  %133 = phi i8 [ 0, %123 ], [ %280, %277 ]
  %134 = phi i32 [ 23, %123 ], [ %279, %277 ]
  %135 = phi i32 [ 23, %123 ], [ %278, %277 ]
  %136 = add nsw i32 %129, 1
  %137 = sext i32 %129 to i64
  %138 = getelementptr inbounds i16, i16* %115, i64 %137
  %139 = load i16, i16* %138, align 2
  %140 = zext i16 %139 to i32
  %141 = and i32 %140, 64512
  %142 = icmp ne i32 %141, 55296
  %143 = icmp eq i32 %136, %121
  %144 = or i1 %143, %142
  br i1 %144, label %158, label %145

145:                                              ; preds = %128
  %146 = sext i32 %136 to i64
  %147 = getelementptr inbounds i16, i16* %115, i64 %146
  %148 = load i16, i16* %147, align 2
  %149 = zext i16 %148 to i32
  %150 = and i32 %149, 64512
  %151 = icmp eq i32 %150, 56320
  br i1 %151, label %152, label %158

152:                                              ; preds = %145
  %153 = add nsw i32 %129, 2
  %154 = shl nuw nsw i32 %140, 10
  %155 = add nsw i32 %154, -56613888
  %156 = add nsw i32 %155, %149
  %157 = icmp ult i32 %156, 65536
  br i1 %157, label %158, label %177

158:                                              ; preds = %145, %128, %152
  %159 = phi i32 [ %156, %152 ], [ %140, %128 ], [ %140, %145 ]
  %160 = phi i32 [ %153, %152 ], [ %136, %128 ], [ %136, %145 ]
  %161 = load i16*, i16** %125, align 8
  %162 = and i32 %159, -1024
  %163 = icmp eq i32 %162, 55296
  %164 = select i1 %163, i32 320, i32 0
  %165 = lshr i32 %159, 5
  %166 = add nuw nsw i32 %164, %165
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds i16, i16* %161, i64 %167
  %169 = load i16, i16* %168, align 2
  %170 = zext i16 %169 to i32
  %171 = shl nuw nsw i32 %170, 2
  %172 = and i32 %159, 31
  %173 = add nuw nsw i32 %171, %172
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds i16, i16* %161, i64 %174
  %176 = load i16, i16* %175, align 2
  br label %220

177:                                              ; preds = %152
  %178 = icmp ult i32 %156, 1114112
  br i1 %178, label %179, label %217

179:                                              ; preds = %177
  %180 = lshr i32 %156, 10
  %181 = add nuw nsw i32 %180, 55232
  %182 = load i16*, i16** %125, align 8
  %183 = lshr i32 %181, 5
  %184 = and i32 %183, 2047
  %185 = zext i32 %184 to i64
  %186 = getelementptr inbounds i16, i16* %182, i64 %185
  %187 = load i16, i16* %186, align 2
  %188 = zext i16 %187 to i32
  %189 = shl nuw nsw i32 %188, 2
  %190 = and i32 %181, 31
  %191 = add nuw nsw i32 %189, %190
  %192 = zext i32 %191 to i64
  %193 = getelementptr inbounds i16, i16* %182, i64 %192
  %194 = load i16, i16* %193, align 2
  %195 = load i32 (i32)*, i32 (i32)** %126, align 8
  %196 = zext i16 %194 to i32
  %197 = call i32 %195(i32 %196) #9
  %198 = icmp sgt i32 %197, 0
  br i1 %198, label %199, label %214

199:                                              ; preds = %179
  %200 = load i16*, i16** %125, align 8
  %201 = lshr i32 %156, 5
  %202 = and i32 %201, 31
  %203 = add nuw nsw i32 %197, %202
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds i16, i16* %200, i64 %204
  %206 = load i16, i16* %205, align 2
  %207 = zext i16 %206 to i32
  %208 = shl nuw nsw i32 %207, 2
  %209 = and i32 %156, 31
  %210 = add nuw nsw i32 %208, %209
  %211 = zext i32 %210 to i64
  %212 = getelementptr inbounds i16, i16* %200, i64 %211
  %213 = load i16, i16* %212, align 2
  br label %220

214:                                              ; preds = %179
  %215 = load i32, i32* %124, align 8
  %216 = trunc i32 %215 to i16
  br label %220

217:                                              ; preds = %177
  %218 = load i32, i32* %124, align 8
  %219 = trunc i32 %218 to i16
  br label %220

220:                                              ; preds = %199, %214, %217, %158
  %221 = phi i32 [ 1, %158 ], [ 2, %217 ], [ 2, %199 ], [ 2, %214 ]
  %222 = phi i32 [ %159, %158 ], [ %156, %217 ], [ %156, %199 ], [ %156, %214 ]
  %223 = phi i32 [ %160, %158 ], [ %153, %217 ], [ %153, %199 ], [ %153, %214 ]
  %224 = phi i16 [ %176, %158 ], [ %219, %217 ], [ %213, %199 ], [ %216, %214 ]
  %225 = icmp eq i16 %224, 0
  br i1 %225, label %265, label %226

226:                                              ; preds = %220
  %227 = icmp ugt i16 %224, -17
  br i1 %227, label %231, label %228

228:                                              ; preds = %226
  %229 = and i16 %224, 1
  %230 = icmp eq i16 %229, 0
  br i1 %230, label %265, label %233

231:                                              ; preds = %226
  %232 = icmp eq i16 %224, -14
  br i1 %232, label %233, label %265

233:                                              ; preds = %228, %231
  store i32 66560, i32* %7, align 4
  %234 = sub nsw i32 %223, %221
  %235 = icmp eq %struct.UParseError* %6, null
  br i1 %235, label %370, label %236

236:                                              ; preds = %233
  %237 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %6, i64 0, i32 1
  store i32 %234, i32* %237, align 4
  %238 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %6, i64 0, i32 0
  store i32 0, i32* %238, align 4
  %239 = icmp slt i32 %234, 16
  %240 = add nsw i32 %234, -15
  %241 = select i1 %239, i32 0, i32 %240
  %242 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %6, i64 0, i32 2, i64 0
  %243 = sext i32 %241 to i64
  %244 = getelementptr inbounds i16, i16* %115, i64 %243
  %245 = sub nsw i32 %234, %241
  %246 = call i16* @u_memcpy_69(i16* %242, i16* %244, i32 %245) #9
  %247 = sext i32 %245 to i64
  %248 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %6, i64 0, i32 2, i64 %247
  store i16 0, i16* %248, align 2
  %249 = add nsw i32 %234, 15
  %250 = icmp sgt i32 %249, %121
  %251 = select i1 %250, i32 %121, i32 %249
  %252 = icmp slt i32 %234, %121
  br i1 %252, label %255, label %253

253:                                              ; preds = %236
  %254 = sub nsw i32 %251, %234
  br label %261

255:                                              ; preds = %236
  %256 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %6, i64 0, i32 3, i64 0
  %257 = sext i32 %234 to i64
  %258 = getelementptr inbounds i16, i16* %115, i64 %257
  %259 = sub nsw i32 %251, %234
  %260 = call i16* @u_memcpy_69(i16* %256, i16* %258, i32 %259) #9
  br label %261

261:                                              ; preds = %255, %253
  %262 = phi i32 [ %254, %253 ], [ %259, %255 ]
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %6, i64 0, i32 3, i64 %263
  store i16 0, i16* %264, align 2
  br label %370

265:                                              ; preds = %231, %220, %228
  %266 = load i8, i8* %127, align 2
  %267 = icmp eq i8 %266, 0
  br i1 %267, label %277, label %268

268:                                              ; preds = %265
  %269 = call i32 @ubidi_getClass_69(i32 %222) #9
  %270 = icmp eq i32 %134, 23
  %271 = select i1 %270, i32 %269, i32 %134
  %272 = icmp eq i32 %269, 0
  %273 = add nsw i32 %223, -1
  %274 = select i1 %272, i8 1, i8 %133
  %275 = select i1 %272, i32 %273, i32 %130
  switch i32 %269, label %277 [
    i32 13, label %276
    i32 1, label %276
  ]

276:                                              ; preds = %268, %268
  br label %277

277:                                              ; preds = %276, %265, %268
  %278 = phi i32 [ %269, %276 ], [ %269, %268 ], [ %135, %265 ]
  %279 = phi i32 [ %271, %276 ], [ %271, %268 ], [ %134, %265 ]
  %280 = phi i8 [ %274, %276 ], [ %274, %268 ], [ %133, %265 ]
  %281 = phi i8 [ 1, %276 ], [ %132, %268 ], [ %132, %265 ]
  %282 = phi i32 [ %273, %276 ], [ %131, %268 ], [ %131, %265 ]
  %283 = phi i32 [ %275, %276 ], [ %275, %268 ], [ %130, %265 ]
  %284 = icmp slt i32 %223, %121
  br i1 %284, label %128, label %285

285:                                              ; preds = %277, %114
  %286 = phi i32 [ 23, %114 ], [ %278, %277 ]
  %287 = phi i32 [ 23, %114 ], [ %279, %277 ]
  %288 = phi i8 [ 0, %114 ], [ %280, %277 ]
  %289 = phi i8 [ 0, %114 ], [ %281, %277 ]
  %290 = phi i32 [ -1, %114 ], [ %282, %277 ]
  %291 = phi i32 [ -1, %114 ], [ %283, %277 ]
  %292 = getelementptr inbounds %struct.UStringPrepProfile, %struct.UStringPrepProfile* %0, i64 0, i32 7
  %293 = load i8, i8* %292, align 2
  %294 = icmp eq i8 %293, 1
  br i1 %294, label %295, label %366

295:                                              ; preds = %285
  %296 = icmp eq i8 %288, 1
  %297 = icmp eq i8 %289, 1
  %298 = and i1 %296, %297
  br i1 %298, label %299, label %332

299:                                              ; preds = %295
  store i32 66562, i32* %7, align 4
  %300 = icmp sgt i32 %290, %291
  %301 = select i1 %300, i32 %290, i32 %291
  %302 = icmp eq %struct.UParseError* %6, null
  br i1 %302, label %370, label %303

303:                                              ; preds = %299
  %304 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %6, i64 0, i32 1
  store i32 %301, i32* %304, align 4
  %305 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %6, i64 0, i32 0
  store i32 0, i32* %305, align 4
  %306 = icmp slt i32 %301, 16
  %307 = add nsw i32 %301, -15
  %308 = select i1 %306, i32 0, i32 %307
  %309 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %6, i64 0, i32 2, i64 0
  %310 = sext i32 %308 to i64
  %311 = getelementptr inbounds i16, i16* %115, i64 %310
  %312 = sub nsw i32 %301, %308
  %313 = call i16* @u_memcpy_69(i16* %309, i16* %311, i32 %312) #9
  %314 = sext i32 %312 to i64
  %315 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %6, i64 0, i32 2, i64 %314
  store i16 0, i16* %315, align 2
  %316 = add nsw i32 %301, 15
  %317 = icmp sgt i32 %316, %121
  %318 = select i1 %317, i32 %121, i32 %316
  %319 = icmp slt i32 %301, %121
  br i1 %319, label %322, label %320

320:                                              ; preds = %303
  %321 = sub nsw i32 %318, %301
  br label %328

322:                                              ; preds = %303
  %323 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %6, i64 0, i32 3, i64 0
  %324 = sext i32 %301 to i64
  %325 = getelementptr inbounds i16, i16* %115, i64 %324
  %326 = sub nsw i32 %318, %301
  %327 = call i16* @u_memcpy_69(i16* %323, i16* %325, i32 %326) #9
  br label %328

328:                                              ; preds = %322, %320
  %329 = phi i32 [ %321, %320 ], [ %326, %322 ]
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %6, i64 0, i32 3, i64 %330
  store i16 0, i16* %331, align 2
  br label %370

332:                                              ; preds = %295
  br i1 %297, label %333, label %366

333:                                              ; preds = %332
  switch i32 %287, label %335 [
    i32 13, label %334
    i32 1, label %334
  ]

334:                                              ; preds = %333, %333
  switch i32 %286, label %335 [
    i32 13, label %366
    i32 1, label %366
  ]

335:                                              ; preds = %334, %333
  store i32 66562, i32* %7, align 4
  %336 = icmp eq %struct.UParseError* %6, null
  br i1 %336, label %370, label %337

337:                                              ; preds = %335
  %338 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %6, i64 0, i32 1
  store i32 %290, i32* %338, align 4
  %339 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %6, i64 0, i32 0
  store i32 0, i32* %339, align 4
  %340 = icmp slt i32 %290, 16
  %341 = add nsw i32 %290, -15
  %342 = select i1 %340, i32 0, i32 %341
  %343 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %6, i64 0, i32 2, i64 0
  %344 = sext i32 %342 to i64
  %345 = getelementptr inbounds i16, i16* %115, i64 %344
  %346 = sub nsw i32 %290, %342
  %347 = call i16* @u_memcpy_69(i16* %343, i16* %345, i32 %346) #9
  %348 = sext i32 %346 to i64
  %349 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %6, i64 0, i32 2, i64 %348
  store i16 0, i16* %349, align 2
  %350 = add nsw i32 %290, 15
  %351 = icmp sgt i32 %350, %121
  %352 = select i1 %351, i32 %121, i32 %350
  %353 = icmp slt i32 %290, %121
  br i1 %353, label %356, label %354

354:                                              ; preds = %337
  %355 = sub nsw i32 %352, %290
  br label %362

356:                                              ; preds = %337
  %357 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %6, i64 0, i32 3, i64 0
  %358 = sext i32 %290 to i64
  %359 = getelementptr inbounds i16, i16* %115, i64 %358
  %360 = sub nsw i32 %352, %290
  %361 = call i16* @u_memcpy_69(i16* %357, i16* %359, i32 %360) #9
  br label %362

362:                                              ; preds = %356, %354
  %363 = phi i32 [ %355, %354 ], [ %360, %356 ]
  %364 = sext i32 %363 to i64
  %365 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %6, i64 0, i32 3, i64 %364
  store i16 0, i16* %365, align 2
  br label %370

366:                                              ; preds = %334, %334, %332, %285
  %367 = getelementptr inbounds %"class.icu_69::Char16Ptr", %"class.icu_69::Char16Ptr"* %12, i64 0, i32 0
  store i16* %3, i16** %367, align 8
  %368 = call i32 @_ZNK6icu_6913UnicodeString7extractENS_9Char16PtrEiR10UErrorCode(%"class.icu_69::UnicodeString"* nonnull %10, %"class.icu_69::Char16Ptr"* nonnull %12, i32 %4, i32* dereferenceable(4) %7) #9
  %369 = load i16*, i16** %367, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %369) #9, !srcloc !2
  br label %370

370:                                              ; preds = %362, %335, %328, %299, %261, %233, %366, %95, %92
  %371 = phi i32 [ 0, %92 ], [ 0, %95 ], [ %368, %366 ], [ 0, %233 ], [ 0, %261 ], [ 0, %299 ], [ 0, %328 ], [ 0, %335 ], [ 0, %362 ]
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %74) #9
  br label %372

372:                                              ; preds = %58, %370, %70, %41
  %373 = phi i32 [ 0, %41 ], [ 0, %58 ], [ %371, %370 ], [ 0, %70 ]
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %36) #9
  br label %374

374:                                              ; preds = %8, %372, %29
  %375 = phi i32 [ 0, %29 ], [ %373, %372 ], [ 0, %8 ]
  ret i32 %375
}

declare i32 @u_strlen_69(i16*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL10usprep_mapPK18UStringPrepProfilePKDsiPDsiiP11UParseErrorP10UErrorCode(%struct.UStringPrepProfile* nocapture readonly, i16*, i32, i16*, i32, i32, %struct.UParseError*, i32*) unnamed_addr #0 {
  %9 = and i32 %5, 1
  %10 = icmp sgt i32 %2, 0
  br i1 %10, label %11, label %263

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.UStringPrepProfile, %struct.UStringPrepProfile* %0, i64 0, i32 1, i32 5
  %13 = getelementptr inbounds %struct.UStringPrepProfile, %struct.UStringPrepProfile* %0, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %struct.UStringPrepProfile, %struct.UStringPrepProfile* %0, i64 0, i32 1, i32 2
  %15 = getelementptr inbounds %struct.UStringPrepProfile, %struct.UStringPrepProfile* %0, i64 0, i32 0, i64 3
  %16 = getelementptr inbounds %struct.UStringPrepProfile, %struct.UStringPrepProfile* %0, i64 0, i32 0, i64 4
  %17 = getelementptr inbounds %struct.UStringPrepProfile, %struct.UStringPrepProfile* %0, i64 0, i32 0, i64 5
  %18 = getelementptr inbounds %struct.UStringPrepProfile, %struct.UStringPrepProfile* %0, i64 0, i32 0, i64 6
  %19 = getelementptr inbounds %struct.UStringPrepProfile, %struct.UStringPrepProfile* %0, i64 0, i32 2
  %20 = sext i32 %4 to i64
  br label %21

21:                                               ; preds = %11, %260
  %22 = phi i32 [ 0, %11 ], [ %111, %260 ]
  %23 = phi i32 [ 0, %11 ], [ %261, %260 ]
  %24 = add nsw i32 %22, 1
  %25 = sext i32 %22 to i64
  %26 = getelementptr inbounds i16, i16* %1, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = and i32 %28, 64512
  %30 = icmp ne i32 %29, 55296
  %31 = icmp eq i32 %24, %2
  %32 = or i1 %31, %30
  br i1 %32, label %46, label %33

33:                                               ; preds = %21
  %34 = sext i32 %24 to i64
  %35 = getelementptr inbounds i16, i16* %1, i64 %34
  %36 = load i16, i16* %35, align 2
  %37 = zext i16 %36 to i32
  %38 = and i32 %37, 64512
  %39 = icmp eq i32 %38, 56320
  br i1 %39, label %40, label %46

40:                                               ; preds = %33
  %41 = add nsw i32 %22, 2
  %42 = shl nuw nsw i32 %28, 10
  %43 = add nsw i32 %42, -56613888
  %44 = add nsw i32 %43, %37
  %45 = icmp ult i32 %44, 65536
  br i1 %45, label %46, label %65

46:                                               ; preds = %33, %21, %40
  %47 = phi i32 [ %44, %40 ], [ %28, %21 ], [ %28, %33 ]
  %48 = phi i32 [ %41, %40 ], [ %24, %21 ], [ %24, %33 ]
  %49 = load i16*, i16** %13, align 8
  %50 = and i32 %47, -1024
  %51 = icmp eq i32 %50, 55296
  %52 = select i1 %51, i32 320, i32 0
  %53 = lshr i32 %47, 5
  %54 = add nuw nsw i32 %52, %53
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %49, i64 %55
  %57 = load i16, i16* %56, align 2
  %58 = zext i16 %57 to i32
  %59 = shl nuw nsw i32 %58, 2
  %60 = and i32 %47, 31
  %61 = add nuw nsw i32 %59, %60
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds i16, i16* %49, i64 %62
  %64 = load i16, i16* %63, align 2
  br label %108

65:                                               ; preds = %40
  %66 = icmp ult i32 %44, 1114112
  br i1 %66, label %67, label %105

67:                                               ; preds = %65
  %68 = lshr i32 %44, 10
  %69 = add nuw nsw i32 %68, 55232
  %70 = load i16*, i16** %13, align 8
  %71 = lshr i32 %69, 5
  %72 = and i32 %71, 2047
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds i16, i16* %70, i64 %73
  %75 = load i16, i16* %74, align 2
  %76 = zext i16 %75 to i32
  %77 = shl nuw nsw i32 %76, 2
  %78 = and i32 %69, 31
  %79 = add nuw nsw i32 %77, %78
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds i16, i16* %70, i64 %80
  %82 = load i16, i16* %81, align 2
  %83 = load i32 (i32)*, i32 (i32)** %14, align 8
  %84 = zext i16 %82 to i32
  %85 = tail call i32 %83(i32 %84) #9
  %86 = icmp sgt i32 %85, 0
  br i1 %86, label %87, label %102

87:                                               ; preds = %67
  %88 = load i16*, i16** %13, align 8
  %89 = lshr i32 %44, 5
  %90 = and i32 %89, 31
  %91 = add nuw nsw i32 %85, %90
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i16, i16* %88, i64 %92
  %94 = load i16, i16* %93, align 2
  %95 = zext i16 %94 to i32
  %96 = shl nuw nsw i32 %95, 2
  %97 = and i32 %44, 31
  %98 = add nuw nsw i32 %96, %97
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds i16, i16* %88, i64 %99
  %101 = load i16, i16* %100, align 2
  br label %108

102:                                              ; preds = %67
  %103 = load i32, i32* %12, align 8
  %104 = trunc i32 %103 to i16
  br label %108

105:                                              ; preds = %65
  %106 = load i32, i32* %12, align 8
  %107 = trunc i32 %106 to i16
  br label %108

108:                                              ; preds = %87, %102, %105, %46
  %109 = phi i32 [ 1, %46 ], [ 2, %105 ], [ 2, %87 ], [ 2, %102 ]
  %110 = phi i32 [ %47, %46 ], [ %44, %105 ], [ %44, %87 ], [ %44, %102 ]
  %111 = phi i32 [ %48, %46 ], [ %41, %105 ], [ %41, %87 ], [ %41, %102 ]
  %112 = phi i16 [ %64, %46 ], [ %107, %105 ], [ %101, %87 ], [ %104, %102 ]
  %113 = zext i16 %112 to i32
  %114 = icmp eq i16 %112, 0
  br i1 %114, label %215, label %115

115:                                              ; preds = %108
  %116 = icmp ugt i16 %112, -17
  br i1 %116, label %125, label %117

117:                                              ; preds = %115
  %118 = and i32 %113, 2
  %119 = icmp eq i32 %118, 0
  %120 = ashr i16 %112, 2
  %121 = lshr i16 %112, 2
  %122 = select i1 %119, i16 %120, i16 %121
  %123 = and i32 %113, 65532
  %124 = icmp eq i32 %123, 65276
  br i1 %124, label %260, label %163

125:                                              ; preds = %115
  %126 = add nsw i32 %113, -65520
  %127 = or i32 %126, %9
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %162

129:                                              ; preds = %125
  %130 = sub nsw i32 %111, %109
  %131 = icmp eq %struct.UParseError* %6, null
  br i1 %131, label %161, label %132

132:                                              ; preds = %129
  %133 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %6, i64 0, i32 1
  store i32 %130, i32* %133, align 4
  %134 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %6, i64 0, i32 0
  store i32 0, i32* %134, align 4
  %135 = icmp slt i32 %130, 16
  %136 = add nsw i32 %130, -15
  %137 = select i1 %135, i32 0, i32 %136
  %138 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %6, i64 0, i32 2, i64 0
  %139 = sext i32 %137 to i64
  %140 = getelementptr inbounds i16, i16* %1, i64 %139
  %141 = sub nsw i32 %130, %137
  %142 = tail call i16* @u_memcpy_69(i16* %138, i16* %140, i32 %141) #9
  %143 = sext i32 %141 to i64
  %144 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %6, i64 0, i32 2, i64 %143
  store i16 0, i16* %144, align 2
  %145 = add nsw i32 %130, 15
  %146 = icmp sgt i32 %145, %2
  %147 = select i1 %146, i32 %2, i32 %145
  %148 = icmp slt i32 %130, %2
  br i1 %148, label %151, label %149

149:                                              ; preds = %132
  %150 = sub nsw i32 %147, %130
  br label %157

151:                                              ; preds = %132
  %152 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %6, i64 0, i32 3, i64 0
  %153 = sext i32 %130 to i64
  %154 = getelementptr inbounds i16, i16* %1, i64 %153
  %155 = sub nsw i32 %147, %130
  %156 = tail call i16* @u_memcpy_69(i16* %152, i16* %154, i32 %155) #9
  br label %157

157:                                              ; preds = %151, %149
  %158 = phi i32 [ %150, %149 ], [ %155, %151 ]
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds %struct.UParseError, %struct.UParseError* %6, i64 0, i32 3, i64 %159
  store i16 0, i16* %160, align 2
  br label %161

161:                                              ; preds = %157, %129
  store i32 66561, i32* %7, align 4
  br label %266

162:                                              ; preds = %125
  switch i16 %112, label %215 [
    i16 -15, label %212
    i16 -13, label %260
  ]

163:                                              ; preds = %117
  %164 = sext i16 %122 to i32
  br i1 %119, label %212, label %165

165:                                              ; preds = %163
  %166 = load i32, i32* %15, align 4
  %167 = icmp sle i32 %166, %164
  %168 = load i32, i32* %16, align 4
  %169 = icmp sgt i32 %168, %164
  %170 = and i1 %167, %169
  br i1 %170, label %189, label %171

171:                                              ; preds = %165
  %172 = icmp sle i32 %168, %164
  %173 = load i32, i32* %17, align 4
  %174 = icmp sgt i32 %173, %164
  %175 = and i1 %172, %174
  br i1 %175, label %189, label %176

176:                                              ; preds = %171
  %177 = icmp sgt i32 %173, %164
  br i1 %177, label %181, label %178

178:                                              ; preds = %176
  %179 = load i32, i32* %18, align 4
  %180 = icmp sgt i32 %179, %164
  br i1 %180, label %189, label %181

181:                                              ; preds = %178, %176
  %182 = load i16*, i16** %19, align 8
  %183 = add nsw i32 %164, 1
  %184 = sext i16 %122 to i64
  %185 = getelementptr inbounds i16, i16* %182, i64 %184
  %186 = load i16, i16* %185, align 2
  %187 = zext i16 %186 to i64
  %188 = icmp eq i16 %186, 0
  br i1 %188, label %260, label %189

189:                                              ; preds = %171, %165, %178, %181
  %190 = phi i64 [ %187, %181 ], [ 3, %178 ], [ 1, %165 ], [ 2, %171 ]
  %191 = phi i32 [ %183, %181 ], [ %164, %178 ], [ %164, %165 ], [ %164, %171 ]
  %192 = sext i32 %191 to i64
  %193 = sext i32 %23 to i64
  %194 = and i64 %190, 1
  %195 = icmp eq i64 %190, 1
  br i1 %195, label %242, label %196

196:                                              ; preds = %189
  %197 = sub nsw i64 %190, %194
  br label %198

198:                                              ; preds = %275, %196
  %199 = phi i64 [ %193, %196 ], [ %276, %275 ]
  %200 = phi i64 [ 0, %196 ], [ %277, %275 ]
  %201 = phi i64 [ %197, %196 ], [ %278, %275 ]
  %202 = icmp slt i64 %199, %20
  br i1 %202, label %203, label %209

203:                                              ; preds = %198
  %204 = load i16*, i16** %19, align 8
  %205 = add nsw i64 %200, %192
  %206 = getelementptr inbounds i16, i16* %204, i64 %205
  %207 = load i16, i16* %206, align 2
  %208 = getelementptr inbounds i16, i16* %3, i64 %199
  store i16 %207, i16* %208, align 2
  br label %209

209:                                              ; preds = %203, %198
  %210 = add nsw i64 %199, 1
  %211 = icmp slt i64 %210, %20
  br i1 %211, label %268, label %275

212:                                              ; preds = %162, %163
  %213 = phi i32 [ %164, %163 ], [ 0, %162 ]
  %214 = sub nsw i32 %110, %213
  br label %215

215:                                              ; preds = %108, %212, %162
  %216 = phi i32 [ %110, %162 ], [ %214, %212 ], [ %110, %108 ]
  %217 = icmp slt i32 %216, 65536
  br i1 %217, label %218, label %226

218:                                              ; preds = %215
  %219 = icmp slt i32 %23, %4
  br i1 %219, label %220, label %224

220:                                              ; preds = %218
  %221 = trunc i32 %216 to i16
  %222 = sext i32 %23 to i64
  %223 = getelementptr inbounds i16, i16* %3, i64 %222
  store i16 %221, i16* %223, align 2
  br label %224

224:                                              ; preds = %220, %218
  %225 = add nsw i32 %23, 1
  br label %260

226:                                              ; preds = %215
  %227 = add nsw i32 %23, 1
  %228 = icmp slt i32 %227, %4
  br i1 %228, label %229, label %240

229:                                              ; preds = %226
  %230 = lshr i32 %216, 10
  %231 = trunc i32 %230 to i16
  %232 = add nsw i16 %231, -10304
  %233 = sext i32 %23 to i64
  %234 = getelementptr inbounds i16, i16* %3, i64 %233
  store i16 %232, i16* %234, align 2
  %235 = trunc i32 %216 to i16
  %236 = and i16 %235, 1023
  %237 = or i16 %236, -9216
  %238 = sext i32 %227 to i64
  %239 = getelementptr inbounds i16, i16* %3, i64 %238
  store i16 %237, i16* %239, align 2
  br label %240

240:                                              ; preds = %229, %226
  %241 = add nsw i32 %23, 2
  br label %260

242:                                              ; preds = %275, %189
  %243 = phi i64 [ undef, %189 ], [ %276, %275 ]
  %244 = phi i64 [ %193, %189 ], [ %276, %275 ]
  %245 = phi i64 [ 0, %189 ], [ %277, %275 ]
  %246 = icmp eq i64 %194, 0
  br i1 %246, label %257, label %247

247:                                              ; preds = %242
  %248 = icmp slt i64 %244, %20
  br i1 %248, label %249, label %255

249:                                              ; preds = %247
  %250 = load i16*, i16** %19, align 8
  %251 = add nsw i64 %245, %192
  %252 = getelementptr inbounds i16, i16* %250, i64 %251
  %253 = load i16, i16* %252, align 2
  %254 = getelementptr inbounds i16, i16* %3, i64 %244
  store i16 %253, i16* %254, align 2
  br label %255

255:                                              ; preds = %247, %249
  %256 = add nsw i64 %244, 1
  br label %257

257:                                              ; preds = %242, %255
  %258 = phi i64 [ %243, %242 ], [ %256, %255 ]
  %259 = trunc i64 %258 to i32
  br label %260

260:                                              ; preds = %257, %181, %117, %224, %240, %162
  %261 = phi i32 [ %23, %162 ], [ %225, %224 ], [ %241, %240 ], [ %23, %117 ], [ %23, %181 ], [ %259, %257 ]
  %262 = icmp slt i32 %111, %2
  br i1 %262, label %21, label %263

263:                                              ; preds = %260, %8
  %264 = phi i32 [ 0, %8 ], [ %261, %260 ]
  %265 = tail call i32 @u_terminateUChars_69(i16* %3, i32 %4, i32 %264, i32* %7) #9
  br label %266

266:                                              ; preds = %161, %263
  %267 = phi i32 [ %265, %263 ], [ 0, %161 ]
  ret i32 %267

268:                                              ; preds = %209
  %269 = or i64 %200, 1
  %270 = load i16*, i16** %19, align 8
  %271 = add nsw i64 %269, %192
  %272 = getelementptr inbounds i16, i16* %270, i64 %271
  %273 = load i16, i16* %272, align 2
  %274 = getelementptr inbounds i16, i16* %3, i64 %210
  store i16 %273, i16* %274, align 2
  br label %275

275:                                              ; preds = %268, %209
  %276 = add nsw i64 %199, 2
  %277 = add nuw nsw i64 %200, 2
  %278 = add i64 %201, -2
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %242, label %198
}

declare void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"*, i32) local_unnamed_addr #2

declare %"class.icu_69::Normalizer2"* @_ZN6icu_6911Normalizer215getNFKCInstanceER10UErrorCode(i32* dereferenceable(4)) local_unnamed_addr #2

declare %"class.icu_69::UnicodeSet"* @uniset_getUnicode32Instance_69(i32* dereferenceable(4)) local_unnamed_addr #2

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6919FilteredNormalizer29normalizeERKNS_13UnicodeStringERS1_R10UErrorCode(%"class.icu_69::FilteredNormalizer2"*, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6icu_6919FilteredNormalizer2D1Ev(%"class.icu_69::FilteredNormalizer2"*) unnamed_addr #3

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString12fastCopyFromERKS0_(%"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"* dereferenceable(64)) local_unnamed_addr #2

declare i32 @ubidi_getClass_69(i32) local_unnamed_addr #2

declare i32 @_ZNK6icu_6913UnicodeString7extractENS_9Char16PtrEiR10UErrorCode(%"class.icu_69::UnicodeString"*, %"class.icu_69::Char16Ptr"*, i32, i32* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @usprep_swap_69(%struct.UDataSwapper*, i8*, i32, i8*, i32*) local_unnamed_addr #0 {
  %6 = tail call i32 @udata_swapDataHeader_69(%struct.UDataSwapper* %0, i8* %1, i32 %2, i8* %3, i32* %4) #9
  %7 = icmp eq i32* %4, null
  br i1 %7, label %145, label %8

8:                                                ; preds = %5
  %9 = load i32, i32* %4, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %145

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %1, i64 12
  %13 = load i8, i8* %12, align 2
  %14 = icmp eq i8 %13, 83
  %15 = getelementptr inbounds i8, i8* %1, i64 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 80
  %18 = and i1 %14, %17
  br i1 %18, label %19, label %31

19:                                               ; preds = %11
  %20 = getelementptr inbounds i8, i8* %1, i64 14
  %21 = load i8, i8* %20, align 2
  %22 = icmp eq i8 %21, 82
  br i1 %22, label %23, label %31

23:                                               ; preds = %19
  %24 = getelementptr inbounds i8, i8* %1, i64 15
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 80
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = getelementptr inbounds i8, i8* %1, i64 16
  %29 = load i8, i8* %28, align 2
  %30 = icmp eq i8 %29, 3
  br i1 %30, label %44, label %31

31:                                               ; preds = %11, %27, %23, %19
  %32 = phi i8 [ 80, %27 ], [ 80, %23 ], [ 80, %19 ], [ %16, %11 ]
  %33 = zext i8 %13 to i32
  %34 = zext i8 %32 to i32
  %35 = getelementptr inbounds i8, i8* %1, i64 14
  %36 = load i8, i8* %35, align 2
  %37 = zext i8 %36 to i32
  %38 = getelementptr inbounds i8, i8* %1, i64 15
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = getelementptr inbounds i8, i8* %1, i64 16
  %42 = load i8, i8* %41, align 2
  %43 = zext i8 %42 to i32
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @.str, i64 0, i64 0), i32 %33, i32 %34, i32 %37, i32 %40, i32 %43) #9
  store i32 16, i32* %4, align 4
  br label %145

44:                                               ; preds = %27
  %45 = sext i32 %6 to i64
  %46 = getelementptr inbounds i8, i8* %1, i64 %45
  %47 = getelementptr inbounds i8, i8* %3, i64 %45
  %48 = bitcast i8* %46 to i32*
  %49 = icmp sgt i32 %2, -1
  br i1 %49, label %50, label %54

50:                                               ; preds = %44
  %51 = sub nsw i32 %2, %6
  %52 = icmp slt i32 %51, 64
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1, i64 0, i64 0), i32 %51) #9
  store i32 8, i32* %4, align 4
  br label %145

54:                                               ; preds = %50, %44
  %55 = phi i32 [ %51, %50 ], [ %2, %44 ]
  %56 = load i32, i32* %48, align 4
  %57 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %56) #9
  %58 = getelementptr inbounds i8, i8* %46, i64 4
  %59 = bitcast i8* %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %60) #9
  %62 = getelementptr inbounds i8, i8* %46, i64 8
  %63 = bitcast i8* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %64) #9
  %66 = getelementptr inbounds i8, i8* %46, i64 12
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %68) #9
  %70 = getelementptr inbounds i8, i8* %46, i64 16
  %71 = bitcast i8* %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %72) #9
  %74 = getelementptr inbounds i8, i8* %46, i64 20
  %75 = bitcast i8* %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %76) #9
  %78 = getelementptr inbounds i8, i8* %46, i64 24
  %79 = bitcast i8* %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %80) #9
  %82 = getelementptr inbounds i8, i8* %46, i64 28
  %83 = bitcast i8* %82 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %84) #9
  %86 = getelementptr inbounds i8, i8* %46, i64 32
  %87 = bitcast i8* %86 to i32*
  %88 = load i32, i32* %87, align 4
  %89 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %88) #9
  %90 = getelementptr inbounds i8, i8* %46, i64 36
  %91 = bitcast i8* %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %92) #9
  %94 = getelementptr inbounds i8, i8* %46, i64 40
  %95 = bitcast i8* %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %96) #9
  %98 = getelementptr inbounds i8, i8* %46, i64 44
  %99 = bitcast i8* %98 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %100) #9
  %102 = getelementptr inbounds i8, i8* %46, i64 48
  %103 = bitcast i8* %102 to i32*
  %104 = load i32, i32* %103, align 4
  %105 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %104) #9
  %106 = getelementptr inbounds i8, i8* %46, i64 52
  %107 = bitcast i8* %106 to i32*
  %108 = load i32, i32* %107, align 4
  %109 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %108) #9
  %110 = getelementptr inbounds i8, i8* %46, i64 56
  %111 = bitcast i8* %110 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %112) #9
  %114 = getelementptr inbounds i8, i8* %46, i64 60
  %115 = bitcast i8* %114 to i32*
  %116 = load i32, i32* %115, align 4
  %117 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %116) #9
  %118 = add nsw i32 %57, 64
  %119 = add nsw i32 %118, %61
  %120 = icmp sgt i32 %55, -1
  br i1 %120, label %121, label %143

121:                                              ; preds = %54
  %122 = icmp slt i32 %55, %119
  br i1 %122, label %123, label %124

123:                                              ; preds = %121
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.2, i64 0, i64 0), i32 %55) #9
  store i32 8, i32* %4, align 4
  br label %145

124:                                              ; preds = %121
  %125 = icmp eq i8* %1, %3
  br i1 %125, label %128, label %126

126:                                              ; preds = %124
  %127 = sext i32 %119 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %47, i8* align 1 %46, i64 %127, i1 false)
  br label %128

128:                                              ; preds = %124, %126
  %129 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 10
  %130 = bitcast {}** %129 to i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)**
  %131 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %130, align 8
  %132 = tail call i32 %131(%struct.UDataSwapper* %0, i8* %46, i32 64, i8* %47, i32* nonnull %4) #9
  %133 = getelementptr inbounds i8, i8* %46, i64 64
  %134 = getelementptr inbounds i8, i8* %47, i64 64
  %135 = tail call i32 @utrie_swap_69(%struct.UDataSwapper* %0, i8* %133, i32 %57, i8* %134, i32* nonnull %4) #9
  %136 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 9
  %137 = bitcast {}** %136 to i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)**
  %138 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %137, align 8
  %139 = sext i32 %118 to i64
  %140 = getelementptr inbounds i8, i8* %46, i64 %139
  %141 = getelementptr inbounds i8, i8* %47, i64 %139
  %142 = tail call i32 %138(%struct.UDataSwapper* %0, i8* %140, i32 %61, i8* %141, i32* nonnull %4) #9
  br label %143

143:                                              ; preds = %128, %54
  %144 = add nsw i32 %119, %6
  br label %145

145:                                              ; preds = %5, %8, %143, %123, %53, %31
  %146 = phi i32 [ 0, %53 ], [ 0, %123 ], [ %144, %143 ], [ 0, %31 ], [ 0, %8 ], [ 0, %5 ]
  ret i32 %146
}

declare i32 @udata_swapDataHeader_69(%struct.UDataSwapper*, i8*, i32, i8*, i32*) local_unnamed_addr #2

declare void @udata_printError_69(%struct.UDataSwapper*, i8*, ...) local_unnamed_addr #2

declare i32 @udata_readInt32_69(%struct.UDataSwapper*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @utrie_swap_69(%struct.UDataSwapper*, i8*, i32, i8*, i32*) local_unnamed_addr #2

declare i8* @uhash_get_69(%struct.UHashtable*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i8* @strcpy(i8* returned, i8* nocapture readonly) local_unnamed_addr #5

declare i8* @uhash_put_69(%struct.UHashtable*, i8*, i8*, i32*) local_unnamed_addr #2

declare signext i8 @_ZN6icu_6920umtx_initImplPreInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN6icu_6921umtx_initImplPostInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8)) local_unnamed_addr #2

declare %struct.UHashtable* @uhash_open_69(i32 (i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL9hashEntry8UElement(i8* nocapture readonly) #0 {
  %2 = bitcast i8* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds i8, i8* %0, i64 8
  %5 = bitcast i8* %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = tail call i32 @uhash_hashChars_69(i8* %3) #9
  %8 = tail call i32 @uhash_hashChars_69(i8* %6) #9
  %9 = mul i32 %8, 37
  %10 = add i32 %9, %7
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal signext i8 @_ZL14compareEntries8UElementS_(i8* nocapture readonly, i8* nocapture readonly) #0 {
  %3 = bitcast i8* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = bitcast i8* %1 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = bitcast i8* %7 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds i8, i8* %1, i64 8
  %11 = bitcast i8* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = tail call signext i8 @uhash_compareChars_69(i8* %4, i8* %6) #9
  %14 = tail call signext i8 @uhash_compareChars_69(i8* %9, i8* %12) #9
  %15 = and i8 %14, %13
  ret i8 %15
}

declare void @ucln_common_registerCleanup_69(i32, i8 ()*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal signext i8 @_ZL14usprep_cleanupv() #0 {
  %1 = alloca i32, align 4
  %2 = load %struct.UHashtable*, %struct.UHashtable** @_ZL21SHARED_DATA_HASHTABLE, align 8
  %3 = icmp eq %struct.UHashtable* %2, null
  br i1 %3, label %46, label %4

4:                                                ; preds = %0
  %5 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #9
  store i32 -1, i32* %1, align 4
  tail call void @umtx_lock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZL11usprepMutex to %"class.icu_69::UMutex"*)) #9
  %6 = load %struct.UHashtable*, %struct.UHashtable** @_ZL21SHARED_DATA_HASHTABLE, align 8
  %7 = icmp eq %struct.UHashtable* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = call %struct.UHashElement* @uhash_nextElement_69(%struct.UHashtable* nonnull %6, i32* nonnull %1) #9
  %10 = icmp eq %struct.UHashElement* %9, null
  br i1 %10, label %37, label %12

11:                                               ; preds = %4
  tail call void @umtx_unlock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZL11usprepMutex to %"class.icu_69::UMutex"*)) #9
  br label %38

12:                                               ; preds = %8, %33
  %13 = phi %struct.UHashElement* [ %35, %33 ], [ %9, %8 ]
  %14 = getelementptr inbounds %struct.UHashElement, %struct.UHashElement* %13, i64 0, i32 1, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %struct.UHashElement, %struct.UHashElement* %13, i64 0, i32 2, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = load %struct.UHashtable*, %struct.UHashtable** @_ZL21SHARED_DATA_HASHTABLE, align 8
  %19 = call i8* @uhash_removeElement_69(%struct.UHashtable* %18, %struct.UHashElement* nonnull %13) #9
  %20 = getelementptr inbounds i8, i8* %15, i64 112
  %21 = bitcast i8* %20 to %struct.UDataMemory**
  %22 = load %struct.UDataMemory*, %struct.UDataMemory** %21, align 8
  call void @udata_close_69(%struct.UDataMemory* %22) #9
  %23 = bitcast i8* %17 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %12
  call void @uprv_free_69(i8* nonnull %24) #9
  store i8* null, i8** %23, align 8
  br label %27

27:                                               ; preds = %26, %12
  %28 = getelementptr inbounds i8, i8* %17, i64 8
  %29 = bitcast i8* %28 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @uprv_free_69(i8* nonnull %30) #9
  store i8* null, i8** %29, align 8
  br label %33

33:                                               ; preds = %32, %27
  call void @uprv_free_69(i8* %15) #9
  call void @uprv_free_69(i8* %17) #9
  %34 = load %struct.UHashtable*, %struct.UHashtable** @_ZL21SHARED_DATA_HASHTABLE, align 8
  %35 = call %struct.UHashElement* @uhash_nextElement_69(%struct.UHashtable* %34, i32* nonnull %1) #9
  %36 = icmp eq %struct.UHashElement* %35, null
  br i1 %36, label %37, label %12

37:                                               ; preds = %33, %8
  call void @umtx_unlock_69(%"class.icu_69::UMutex"* bitcast ({ [40 x i8], { { %"class.std::__1::mutex"* } }, %"class.icu_69::UMutex"* }* @_ZL11usprepMutex to %"class.icu_69::UMutex"*)) #9
  br label %38

38:                                               ; preds = %11, %37
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #9
  %39 = load %struct.UHashtable*, %struct.UHashtable** @_ZL21SHARED_DATA_HASHTABLE, align 8
  %40 = icmp eq %struct.UHashtable* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %38
  %42 = call i32 @uhash_count_69(%struct.UHashtable* nonnull %39) #9
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %41
  %45 = load %struct.UHashtable*, %struct.UHashtable** @_ZL21SHARED_DATA_HASHTABLE, align 8
  call void @uhash_close_69(%struct.UHashtable* %45) #9
  store %struct.UHashtable* null, %struct.UHashtable** @_ZL21SHARED_DATA_HASHTABLE, align 8
  br label %46

46:                                               ; preds = %38, %0, %41, %44
  store atomic i32 0, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZL19gSharedDataInitOnce, i64 0, i32 0, i32 0, i32 0) seq_cst, align 4
  %47 = load %struct.UHashtable*, %struct.UHashtable** @_ZL21SHARED_DATA_HASHTABLE, align 8
  %48 = icmp eq %struct.UHashtable* %47, null
  %49 = zext i1 %48 to i8
  ret i8 %49
}

declare i32 @uhash_hashChars_69(i8*) local_unnamed_addr #2

declare signext i8 @uhash_compareChars_69(i8*, i8*) local_unnamed_addr #2

declare i32 @uhash_count_69(%struct.UHashtable*) local_unnamed_addr #2

declare void @uhash_close_69(%struct.UHashtable*) local_unnamed_addr #2

declare %struct.UHashElement* @uhash_nextElement_69(%struct.UHashtable*, i32*) local_unnamed_addr #2

declare i8* @uhash_removeElement_69(%struct.UHashtable*, %struct.UHashElement*) local_unnamed_addr #2

declare void @uprv_free_69(i8*) local_unnamed_addr #2

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #6

declare %struct.UDataMemory* @udata_openChoice_69(i8*, i8*, i8*, i8 (i8*, i8*, i8*, %struct.UDataInfo*)*, i8*, i32*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal signext i8 @_ZL17isSPrepAcceptablePvPKcS1_PK9UDataInfo(i8* nocapture readnone, i8* nocapture readnone, i8* nocapture readnone, %struct.UDataInfo* nocapture readonly) #7 {
  %5 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 0
  %6 = load i16, i16* %5, align 2
  %7 = icmp ugt i16 %6, 19
  br i1 %7, label %8, label %48

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 2
  %10 = load i8, i8* %9, align 2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %48

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 3
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %48

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 6, i64 0
  %18 = load i8, i8* %17, align 2
  %19 = icmp eq i8 %18, 83
  br i1 %19, label %20, label %48

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 6, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 80
  br i1 %23, label %24, label %48

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 6, i64 2
  %26 = load i8, i8* %25, align 2
  %27 = icmp eq i8 %26, 82
  br i1 %27, label %28, label %48

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 6, i64 3
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 80
  br i1 %31, label %32, label %48

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 7, i64 0
  %34 = load i8, i8* %33, align 2
  %35 = icmp eq i8 %34, 3
  br i1 %35, label %36, label %48

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 7, i64 2
  %38 = load i8, i8* %37, align 2
  %39 = icmp eq i8 %38, 5
  br i1 %39, label %40, label %48

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 7, i64 3
  %42 = load i8, i8* %41, align 1
  %43 = icmp eq i8 %42, 2
  br i1 %43, label %44, label %48

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 8, i64 0
  %46 = bitcast i8* %45 to i32*
  %47 = load i32, i32* %46, align 2
  store i32 %47, i32* bitcast ([4 x i8]* @_ZL11dataVersion to i32*), align 4
  br label %48

48:                                               ; preds = %4, %8, %12, %16, %20, %24, %28, %32, %36, %40, %44
  %49 = phi i8 [ 1, %44 ], [ 0, %40 ], [ 0, %36 ], [ 0, %32 ], [ 0, %28 ], [ 0, %24 ], [ 0, %20 ], [ 0, %16 ], [ 0, %12 ], [ 0, %8 ], [ 0, %4 ]
  ret i8 %49
}

declare i8* @udata_getMemory_69(%struct.UDataMemory*) local_unnamed_addr #2

declare i32 @utrie_unserialize_69(%struct.UTrie*, i8*, i32, i32*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZL21getSPrepFoldingOffsetj(i32 returned) #8 {
  ret i32 %0
}

declare void @udata_close_69(%struct.UDataMemory*) local_unnamed_addr #2

declare void @u_getUnicodeVersion_69(i8*) local_unnamed_addr #2

declare i32 @u_terminateUChars_69(i16*, i32, i32, i32*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind allocsize(0) }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 -2144095749}
