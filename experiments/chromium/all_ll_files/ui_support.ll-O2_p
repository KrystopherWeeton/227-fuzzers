; ModuleID = '../../chrome/browser/vr/ui_support.cc'
source_filename = "../../chrome/browser/vr/ui_support.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::basic_string.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.7 }
%union.anon.7 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }

@_ZN13url_formatter22kFormatUrlOmitDefaultsE = external local_unnamed_addr constant i32, align 4
@_ZN13url_formatter19kFormatUrlOmitHTTPSE = external local_unnamed_addr constant i32, align 4
@_ZN13url_formatter31kFormatUrlOmitTrivialSubdomainsE = external local_unnamed_addr constant i32, align 4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2vr16UScriptGetScriptEiP10UErrorCode(i32, i32*) local_unnamed_addr #0 {
  %3 = tail call i32 @uscript_getScript_69(i32 %0, i32* %1) #2
  ret i32 %3
}

declare i32 @uscript_getScript_69(i32, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2vr14FormatUrlForVrERK4GURLPN3url6ParsedE(%"class.std::__1::basic_string.4"* noalias sret, %class.GURL* dereferenceable(120), %"struct.url::Parsed"*) local_unnamed_addr #0 {
  %4 = load i32, i32* @_ZN13url_formatter22kFormatUrlOmitDefaultsE, align 4
  %5 = load i32, i32* @_ZN13url_formatter19kFormatUrlOmitHTTPSE, align 4
  %6 = or i32 %5, %4
  %7 = load i32, i32* @_ZN13url_formatter31kFormatUrlOmitTrivialSubdomainsE, align 4
  %8 = or i32 %6, %7
  tail call void @_ZN13url_formatter9FormatUrlERK4GURLjjPN3url6ParsedEPmS6_(%"class.std::__1::basic_string.4"* sret %0, %class.GURL* dereferenceable(120) %1, i32 %8, i32 1, %"struct.url::Parsed"* %2, i64* null, i64* null) #2
  ret void
}

declare void @_ZN13url_formatter9FormatUrlERK4GURLjjPN3url6ParsedEPmS6_(%"class.std::__1::basic_string.4"* sret, %class.GURL* dereferenceable(120), i32, i32, %"struct.url::Parsed"*, i64*, i64*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
