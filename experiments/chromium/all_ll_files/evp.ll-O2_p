; ModuleID = '../../third_party/boringssl/src/crypto/evp/evp.c'
source_filename = "../../third_party/boringssl/src/crypto/evp/evp.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.evp_pkey_asn1_method_st = type { i32, [9 x i8], i8, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)* }
%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.cbs_st = type opaque
%struct.cbb_st = type opaque
%struct.rsa_st = type { %struct.rsa_meth_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.crypto_ex_data_st, i32, i32, %union.crypto_mutex_st, %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, i32, %struct.bn_blinding_st**, i8*, i64, i8 }
%struct.rsa_meth_st = type { %struct.openssl_method_common_st, i8*, i32 (%struct.rsa_st*)*, i32 (%struct.rsa_st*)*, i64 (%struct.rsa_st*)*, i32 (i32, i8*, i32, i8*, i32*, %struct.rsa_st*)*, i32 (%struct.rsa_st*, i64*, i8*, i64, i8*, i64, i32)*, i32 (%struct.rsa_st*, i64*, i8*, i64, i8*, i64, i32)*, i32 (%struct.rsa_st*, i8*, i8*, i64)*, i32 }
%struct.openssl_method_common_st = type { i32, i8 }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%struct.bn_mont_ctx_st = type opaque
%struct.bignum_st = type opaque
%struct.bn_blinding_st = type opaque
%struct.dsa_st = type { i64, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, i32, %union.crypto_mutex_st, %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st*, i32, %struct.crypto_ex_data_st }
%struct.ec_key_st = type opaque
%struct.dh_st = type opaque
%struct.engine_st = type opaque
%struct.evp_pkey_ctx_st = type { %struct.evp_pkey_method_st*, %struct.engine_st*, %struct.evp_pkey_st*, %struct.evp_pkey_st*, i32, i8* }
%struct.evp_pkey_method_st = type { i32, i32 (%struct.evp_pkey_ctx_st*)*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st*)*, void (%struct.evp_pkey_ctx_st*)*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*)*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_ctx_st*, i32, i32, i8*)* }
%struct.env_md_st = type opaque

@.str = private unnamed_addr constant [49 x i8] c"../../third_party/boringssl/src/crypto/evp/evp.c\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"algorithm %d\00", align 1
@rsa_asn1_meth = external constant %struct.evp_pkey_asn1_method_st, align 8
@ec_asn1_meth = external constant %struct.evp_pkey_asn1_method_st, align 8
@dsa_asn1_meth = external constant %struct.evp_pkey_asn1_method_st, align 8
@ed25519_asn1_meth = external constant %struct.evp_pkey_asn1_method_st, align 8
@x25519_asn1_meth = external constant %struct.evp_pkey_asn1_method_st, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %struct.evp_pkey_st* @EVP_PKEY_new() local_unnamed_addr #0 {
  %1 = tail call i8* @OPENSSL_malloc(i64 24) #5
  %2 = icmp eq i8* %1, null
  br i1 %2, label %3, label %4

3:                                                ; preds = %0
  tail call void @ERR_put_error(i32 6, i32 0, i32 65, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 88) #5
  br label %8

4:                                                ; preds = %0
  %5 = bitcast i8* %1 to %struct.evp_pkey_st*
  %6 = bitcast i8* %1 to i32*
  %7 = getelementptr inbounds i8, i8* %1, i64 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %7, i8 0, i64 20, i1 false)
  store i32 1, i32* %6, align 8
  br label %8

8:                                                ; preds = %4, %3
  %9 = phi %struct.evp_pkey_st* [ null, %3 ], [ %5, %4 ]
  ret %struct.evp_pkey_st* %9
}

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #1

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @EVP_PKEY_free(%struct.evp_pkey_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.evp_pkey_st* %0, null
  br i1 %2, label %20, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 0
  %5 = tail call i32 @CRYPTO_refcount_dec_and_test_zero(i32* %4) #5
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %20, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 3
  %9 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %8, align 8
  %10 = icmp eq %struct.evp_pkey_asn1_method_st* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %9, i64 0, i32 18
  %13 = load void (%struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)** %12, align 8
  %14 = icmp eq void (%struct.evp_pkey_st*)* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  tail call void %13(%struct.evp_pkey_st* nonnull %0) #5
  %16 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2, i32 0
  store i8* null, i8** %16, align 8
  %17 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  store i32 0, i32* %17, align 4
  br label %18

18:                                               ; preds = %7, %11, %15
  %19 = bitcast %struct.evp_pkey_st* %0 to i8*
  tail call void @OPENSSL_free(i8* nonnull %19) #5
  br label %20

20:                                               ; preds = %3, %1, %18
  ret void
}

declare i32 @CRYPTO_refcount_dec_and_test_zero(i32*) local_unnamed_addr #1

declare void @OPENSSL_free(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_up_ref(%struct.evp_pkey_st*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 0
  tail call void @CRYPTO_refcount_inc(i32* %2) #5
  ret i32 1
}

declare void @CRYPTO_refcount_inc(i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_is_opaque(%struct.evp_pkey_st*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 3
  %3 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %2, align 8
  %4 = icmp eq %struct.evp_pkey_asn1_method_st* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %3, i64 0, i32 12
  %7 = load i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)** %6, align 8
  %8 = icmp eq i32 (%struct.evp_pkey_st*)* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = tail call i32 %7(%struct.evp_pkey_st* %0) #5
  br label %11

11:                                               ; preds = %1, %5, %9
  %12 = phi i32 [ %10, %9 ], [ 0, %5 ], [ 0, %1 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_cmp(%struct.evp_pkey_st*, %struct.evp_pkey_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %28

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 3
  %10 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %9, align 8
  %11 = icmp eq %struct.evp_pkey_asn1_method_st* %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %10, i64 0, i32 17
  %14 = load i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)** %13, align 8
  %15 = icmp eq i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = tail call i32 %14(%struct.evp_pkey_st* %0, %struct.evp_pkey_st* %1) #5
  %18 = icmp slt i32 %17, 1
  br i1 %18, label %28, label %19

19:                                               ; preds = %16
  %20 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %9, align 8
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi %struct.evp_pkey_asn1_method_st* [ %20, %19 ], [ %10, %12 ]
  %23 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %22, i64 0, i32 5
  %24 = load i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)** %23, align 8
  %25 = icmp eq i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  %27 = tail call i32 %24(%struct.evp_pkey_st* %0, %struct.evp_pkey_st* %1) #5
  br label %28

28:                                               ; preds = %16, %26, %8, %21, %2
  %29 = phi i32 [ -1, %2 ], [ -2, %21 ], [ -2, %8 ], [ %17, %16 ], [ %27, %26 ]
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_copy_parameters(%struct.evp_pkey_st*, %struct.evp_pkey_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  tail call void @ERR_put_error(i32 6, i32 0, i32 103, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 157) #5
  br label %31

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %1, i64 0, i32 3
  %11 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %10, align 8
  %12 = icmp eq %struct.evp_pkey_asn1_method_st* %11, null
  br i1 %12, label %31, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %11, i64 0, i32 15
  %15 = load i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)** %14, align 8
  %16 = icmp eq i32 (%struct.evp_pkey_st*)* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %13
  %18 = tail call i32 %15(%struct.evp_pkey_st* %1) #5
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %17
  tail call void @ERR_put_error(i32 6, i32 0, i32 118, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 162) #5
  br label %31

21:                                               ; preds = %17
  %22 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %10, align 8
  %23 = icmp eq %struct.evp_pkey_asn1_method_st* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %13, %21
  %25 = phi %struct.evp_pkey_asn1_method_st* [ %22, %21 ], [ %11, %13 ]
  %26 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %25, i64 0, i32 16
  %27 = load i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)** %26, align 8
  %28 = icmp eq i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = tail call i32 %27(%struct.evp_pkey_st* %0, %struct.evp_pkey_st* %1) #5
  br label %31

31:                                               ; preds = %9, %8, %20, %21, %24, %29
  %32 = phi i32 [ %30, %29 ], [ 0, %24 ], [ 0, %21 ], [ 0, %20 ], [ 0, %8 ], [ 0, %9 ]
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_missing_parameters(%struct.evp_pkey_st*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 3
  %3 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %2, align 8
  %4 = icmp eq %struct.evp_pkey_asn1_method_st* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %3, i64 0, i32 15
  %7 = load i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)** %6, align 8
  %8 = icmp eq i32 (%struct.evp_pkey_st*)* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = tail call i32 %7(%struct.evp_pkey_st* %0) #5
  br label %11

11:                                               ; preds = %1, %5, %9
  %12 = phi i32 [ %10, %9 ], [ 0, %5 ], [ 0, %1 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_size(%struct.evp_pkey_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.evp_pkey_st* %0, null
  br i1 %2, label %13, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 3
  %5 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %4, align 8
  %6 = icmp eq %struct.evp_pkey_asn1_method_st* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %5, i64 0, i32 13
  %9 = load i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)** %8, align 8
  %10 = icmp eq i32 (%struct.evp_pkey_st*)* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = tail call i32 %9(%struct.evp_pkey_st* nonnull %0) #5
  br label %13

13:                                               ; preds = %1, %3, %7, %11
  %14 = phi i32 [ %12, %11 ], [ 0, %7 ], [ 0, %3 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_bits(%struct.evp_pkey_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.evp_pkey_st* %0, null
  br i1 %2, label %13, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 3
  %5 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %4, align 8
  %6 = icmp eq %struct.evp_pkey_asn1_method_st* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %5, i64 0, i32 14
  %9 = load i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)** %8, align 8
  %10 = icmp eq i32 (%struct.evp_pkey_st*)* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = tail call i32 %9(%struct.evp_pkey_st* nonnull %0) #5
  br label %13

13:                                               ; preds = %1, %3, %7, %11
  %14 = phi i32 [ %12, %11 ], [ 0, %7 ], [ 0, %3 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @EVP_PKEY_id(%struct.evp_pkey_st* nocapture readonly) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @EVP_PKEY_type(i32) local_unnamed_addr #2 {
  switch i32 %0, label %10 [
    i32 6, label %6
    i32 408, label %2
    i32 116, label %3
    i32 949, label %4
    i32 948, label %5
  ]

2:                                                ; preds = %1
  br label %6

3:                                                ; preds = %1
  br label %6

4:                                                ; preds = %1
  br label %6

5:                                                ; preds = %1
  br label %6

6:                                                ; preds = %5, %4, %3, %2, %1
  %7 = phi %struct.evp_pkey_asn1_method_st* [ @rsa_asn1_meth, %1 ], [ @ec_asn1_meth, %2 ], [ @dsa_asn1_meth, %3 ], [ @ed25519_asn1_meth, %4 ], [ @x25519_asn1_meth, %5 ]
  %8 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi i32 [ %9, %6 ], [ 0, %1 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_set1_RSA(%struct.evp_pkey_st*, %struct.rsa_st*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.evp_pkey_st* %0, null
  br i1 %3, label %22, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 3
  %10 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %9, align 8
  %11 = icmp eq %struct.evp_pkey_asn1_method_st* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %10, i64 0, i32 18
  %14 = load void (%struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)** %13, align 8
  %15 = icmp eq void (%struct.evp_pkey_st*)* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  tail call void %14(%struct.evp_pkey_st* nonnull %0) #5
  store i8* null, i8** %5, align 8
  %17 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  store i32 0, i32* %17, align 4
  br label %18

18:                                               ; preds = %16, %12, %8, %4
  %19 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 3
  store %struct.evp_pkey_asn1_method_st* @rsa_asn1_meth, %struct.evp_pkey_asn1_method_st** %19, align 8
  %20 = load i32, i32* getelementptr inbounds (%struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* @rsa_asn1_meth, i64 0, i32 0), align 8
  %21 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  store i32 %20, i32* %21, align 4
  br label %22

22:                                               ; preds = %2, %18
  %23 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2, i32 0
  %24 = bitcast i8** %23 to %struct.rsa_st**
  store %struct.rsa_st* %1, %struct.rsa_st** %24, align 8
  %25 = icmp eq %struct.rsa_st* %1, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = tail call i32 @RSA_up_ref(%struct.rsa_st* nonnull %1) #5
  br label %28

28:                                               ; preds = %22, %26
  %29 = phi i32 [ 1, %26 ], [ 0, %22 ]
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_assign_RSA(%struct.evp_pkey_st*, %struct.rsa_st*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.evp_pkey_st* %0, null
  br i1 %3, label %22, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 3
  %10 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %9, align 8
  %11 = icmp eq %struct.evp_pkey_asn1_method_st* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %10, i64 0, i32 18
  %14 = load void (%struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)** %13, align 8
  %15 = icmp eq void (%struct.evp_pkey_st*)* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  tail call void %14(%struct.evp_pkey_st* nonnull %0) #5
  store i8* null, i8** %5, align 8
  %17 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  store i32 0, i32* %17, align 4
  br label %18

18:                                               ; preds = %16, %12, %8, %4
  %19 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 3
  store %struct.evp_pkey_asn1_method_st* @rsa_asn1_meth, %struct.evp_pkey_asn1_method_st** %19, align 8
  %20 = load i32, i32* getelementptr inbounds (%struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* @rsa_asn1_meth, i64 0, i32 0), align 8
  %21 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  store i32 %20, i32* %21, align 4
  br label %22

22:                                               ; preds = %2, %18
  %23 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2, i32 0
  %24 = bitcast i8** %23 to %struct.rsa_st**
  store %struct.rsa_st* %1, %struct.rsa_st** %24, align 8
  %25 = icmp ne %struct.rsa_st* %1, null
  %26 = zext i1 %25 to i32
  ret i32 %26
}

declare i32 @RSA_up_ref(%struct.rsa_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_assign(%struct.evp_pkey_st*, i32, i8*) local_unnamed_addr #0 {
  %4 = icmp ne %struct.evp_pkey_st* %0, null
  br i1 %4, label %5, label %19

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %19, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 3
  %11 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %10, align 8
  %12 = icmp eq %struct.evp_pkey_asn1_method_st* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %11, i64 0, i32 18
  %15 = load void (%struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)** %14, align 8
  %16 = icmp eq void (%struct.evp_pkey_st*)* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  tail call void %15(%struct.evp_pkey_st* nonnull %0) #5
  store i8* null, i8** %6, align 8
  %18 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  store i32 0, i32* %18, align 4
  br label %19

19:                                               ; preds = %17, %13, %9, %5, %3
  switch i32 %1, label %31 [
    i32 6, label %24
    i32 408, label %20
    i32 116, label %21
    i32 949, label %22
    i32 948, label %23
  ]

20:                                               ; preds = %19
  br label %24

21:                                               ; preds = %19
  br label %24

22:                                               ; preds = %19
  br label %24

23:                                               ; preds = %19
  br label %24

24:                                               ; preds = %23, %22, %21, %20, %19
  %25 = phi %struct.evp_pkey_asn1_method_st* [ @rsa_asn1_meth, %19 ], [ @ec_asn1_meth, %20 ], [ @dsa_asn1_meth, %21 ], [ @ed25519_asn1_meth, %22 ], [ @x25519_asn1_meth, %23 ]
  br i1 %4, label %26, label %32

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 3
  store %struct.evp_pkey_asn1_method_st* %25, %struct.evp_pkey_asn1_method_st** %27, align 8
  %28 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %25, i64 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  store i32 %29, i32* %30, align 4
  br label %32

31:                                               ; preds = %19
  tail call void @ERR_put_error(i32 6, i32 0, i32 128, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 331) #5
  tail call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i32 %1) #5
  br label %36

32:                                               ; preds = %26, %24
  %33 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2, i32 0
  store i8* %2, i8** %33, align 8
  %34 = icmp ne i8* %2, null
  %35 = zext i1 %34 to i32
  br label %36

36:                                               ; preds = %31, %32
  %37 = phi i32 [ %35, %32 ], [ 0, %31 ]
  ret i32 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.rsa_st* @EVP_PKEY_get0_RSA(%struct.evp_pkey_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 6
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @ERR_put_error(i32 6, i32 0, i32 107, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 241) #5
  br label %10

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2
  %8 = bitcast %union.anon* %7 to %struct.rsa_st**
  %9 = load %struct.rsa_st*, %struct.rsa_st** %8, align 8
  br label %10

10:                                               ; preds = %6, %5
  %11 = phi %struct.rsa_st* [ null, %5 ], [ %9, %6 ]
  ret %struct.rsa_st* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.rsa_st* @EVP_PKEY_get1_RSA(%struct.evp_pkey_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 6
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @ERR_put_error(i32 6, i32 0, i32 107, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 241) #5
  br label %13

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2
  %8 = bitcast %union.anon* %7 to %struct.rsa_st**
  %9 = load %struct.rsa_st*, %struct.rsa_st** %8, align 8
  %10 = icmp eq %struct.rsa_st* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %6
  %12 = tail call i32 @RSA_up_ref(%struct.rsa_st* nonnull %9) #5
  br label %13

13:                                               ; preds = %5, %6, %11
  %14 = phi %struct.rsa_st* [ null, %5 ], [ null, %6 ], [ %9, %11 ]
  ret %struct.rsa_st* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_set1_DSA(%struct.evp_pkey_st*, %struct.dsa_st*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.evp_pkey_st* %0, null
  br i1 %3, label %22, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 3
  %10 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %9, align 8
  %11 = icmp eq %struct.evp_pkey_asn1_method_st* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %10, i64 0, i32 18
  %14 = load void (%struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)** %13, align 8
  %15 = icmp eq void (%struct.evp_pkey_st*)* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  tail call void %14(%struct.evp_pkey_st* nonnull %0) #5
  store i8* null, i8** %5, align 8
  %17 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  store i32 0, i32* %17, align 4
  br label %18

18:                                               ; preds = %16, %12, %8, %4
  %19 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 3
  store %struct.evp_pkey_asn1_method_st* @dsa_asn1_meth, %struct.evp_pkey_asn1_method_st** %19, align 8
  %20 = load i32, i32* getelementptr inbounds (%struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* @dsa_asn1_meth, i64 0, i32 0), align 8
  %21 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  store i32 %20, i32* %21, align 4
  br label %22

22:                                               ; preds = %2, %18
  %23 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2, i32 0
  %24 = bitcast i8** %23 to %struct.dsa_st**
  store %struct.dsa_st* %1, %struct.dsa_st** %24, align 8
  %25 = icmp eq %struct.dsa_st* %1, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = tail call i32 @DSA_up_ref(%struct.dsa_st* nonnull %1) #5
  br label %28

28:                                               ; preds = %22, %26
  %29 = phi i32 [ 1, %26 ], [ 0, %22 ]
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_assign_DSA(%struct.evp_pkey_st*, %struct.dsa_st*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.evp_pkey_st* %0, null
  br i1 %3, label %22, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 3
  %10 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %9, align 8
  %11 = icmp eq %struct.evp_pkey_asn1_method_st* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %10, i64 0, i32 18
  %14 = load void (%struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)** %13, align 8
  %15 = icmp eq void (%struct.evp_pkey_st*)* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  tail call void %14(%struct.evp_pkey_st* nonnull %0) #5
  store i8* null, i8** %5, align 8
  %17 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  store i32 0, i32* %17, align 4
  br label %18

18:                                               ; preds = %16, %12, %8, %4
  %19 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 3
  store %struct.evp_pkey_asn1_method_st* @dsa_asn1_meth, %struct.evp_pkey_asn1_method_st** %19, align 8
  %20 = load i32, i32* getelementptr inbounds (%struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* @dsa_asn1_meth, i64 0, i32 0), align 8
  %21 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  store i32 %20, i32* %21, align 4
  br label %22

22:                                               ; preds = %2, %18
  %23 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2, i32 0
  %24 = bitcast i8** %23 to %struct.dsa_st**
  store %struct.dsa_st* %1, %struct.dsa_st** %24, align 8
  %25 = icmp ne %struct.dsa_st* %1, null
  %26 = zext i1 %25 to i32
  ret i32 %26
}

declare i32 @DSA_up_ref(%struct.dsa_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.dsa_st* @EVP_PKEY_get0_DSA(%struct.evp_pkey_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 116
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @ERR_put_error(i32 6, i32 0, i32 108, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 269) #5
  br label %10

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2
  %8 = bitcast %union.anon* %7 to %struct.dsa_st**
  %9 = load %struct.dsa_st*, %struct.dsa_st** %8, align 8
  br label %10

10:                                               ; preds = %6, %5
  %11 = phi %struct.dsa_st* [ null, %5 ], [ %9, %6 ]
  ret %struct.dsa_st* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.dsa_st* @EVP_PKEY_get1_DSA(%struct.evp_pkey_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 116
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @ERR_put_error(i32 6, i32 0, i32 108, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 269) #5
  br label %13

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2
  %8 = bitcast %union.anon* %7 to %struct.dsa_st**
  %9 = load %struct.dsa_st*, %struct.dsa_st** %8, align 8
  %10 = icmp eq %struct.dsa_st* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %6
  %12 = tail call i32 @DSA_up_ref(%struct.dsa_st* nonnull %9) #5
  br label %13

13:                                               ; preds = %5, %6, %11
  %14 = phi %struct.dsa_st* [ null, %5 ], [ null, %6 ], [ %9, %11 ]
  ret %struct.dsa_st* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_set1_EC_KEY(%struct.evp_pkey_st*, %struct.ec_key_st*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.evp_pkey_st* %0, null
  br i1 %3, label %22, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 3
  %10 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %9, align 8
  %11 = icmp eq %struct.evp_pkey_asn1_method_st* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %10, i64 0, i32 18
  %14 = load void (%struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)** %13, align 8
  %15 = icmp eq void (%struct.evp_pkey_st*)* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  tail call void %14(%struct.evp_pkey_st* nonnull %0) #5
  store i8* null, i8** %5, align 8
  %17 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  store i32 0, i32* %17, align 4
  br label %18

18:                                               ; preds = %16, %12, %8, %4
  %19 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 3
  store %struct.evp_pkey_asn1_method_st* @ec_asn1_meth, %struct.evp_pkey_asn1_method_st** %19, align 8
  %20 = load i32, i32* getelementptr inbounds (%struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* @ec_asn1_meth, i64 0, i32 0), align 8
  %21 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  store i32 %20, i32* %21, align 4
  br label %22

22:                                               ; preds = %2, %18
  %23 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2, i32 0
  %24 = bitcast i8** %23 to %struct.ec_key_st**
  store %struct.ec_key_st* %1, %struct.ec_key_st** %24, align 8
  %25 = icmp eq %struct.ec_key_st* %1, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = tail call i32 @EC_KEY_up_ref(%struct.ec_key_st* nonnull %1) #5
  br label %28

28:                                               ; preds = %22, %26
  %29 = phi i32 [ 1, %26 ], [ 0, %22 ]
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_assign_EC_KEY(%struct.evp_pkey_st*, %struct.ec_key_st*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.evp_pkey_st* %0, null
  br i1 %3, label %22, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 3
  %10 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %9, align 8
  %11 = icmp eq %struct.evp_pkey_asn1_method_st* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %10, i64 0, i32 18
  %14 = load void (%struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)** %13, align 8
  %15 = icmp eq void (%struct.evp_pkey_st*)* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  tail call void %14(%struct.evp_pkey_st* nonnull %0) #5
  store i8* null, i8** %5, align 8
  %17 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  store i32 0, i32* %17, align 4
  br label %18

18:                                               ; preds = %16, %12, %8, %4
  %19 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 3
  store %struct.evp_pkey_asn1_method_st* @ec_asn1_meth, %struct.evp_pkey_asn1_method_st** %19, align 8
  %20 = load i32, i32* getelementptr inbounds (%struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* @ec_asn1_meth, i64 0, i32 0), align 8
  %21 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  store i32 %20, i32* %21, align 4
  br label %22

22:                                               ; preds = %2, %18
  %23 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2, i32 0
  %24 = bitcast i8** %23 to %struct.ec_key_st**
  store %struct.ec_key_st* %1, %struct.ec_key_st** %24, align 8
  %25 = icmp ne %struct.ec_key_st* %1, null
  %26 = zext i1 %25 to i32
  ret i32 %26
}

declare i32 @EC_KEY_up_ref(%struct.ec_key_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ec_key_st* @EVP_PKEY_get0_EC_KEY(%struct.evp_pkey_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 408
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @ERR_put_error(i32 6, i32 0, i32 106, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 297) #5
  br label %10

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2
  %8 = bitcast %union.anon* %7 to %struct.ec_key_st**
  %9 = load %struct.ec_key_st*, %struct.ec_key_st** %8, align 8
  br label %10

10:                                               ; preds = %6, %5
  %11 = phi %struct.ec_key_st* [ null, %5 ], [ %9, %6 ]
  ret %struct.ec_key_st* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ec_key_st* @EVP_PKEY_get1_EC_KEY(%struct.evp_pkey_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 408
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @ERR_put_error(i32 6, i32 0, i32 106, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 297) #5
  br label %13

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2
  %8 = bitcast %union.anon* %7 to %struct.ec_key_st**
  %9 = load %struct.ec_key_st*, %struct.ec_key_st** %8, align 8
  %10 = icmp eq %struct.ec_key_st* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %6
  %12 = tail call i32 @EC_KEY_up_ref(%struct.ec_key_st* nonnull %9) #5
  br label %13

13:                                               ; preds = %5, %6, %11
  %14 = phi %struct.ec_key_st* [ null, %5 ], [ null, %6 ], [ %9, %11 ]
  ret %struct.ec_key_st* %14
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %struct.dh_st* @EVP_PKEY_get0_DH(%struct.evp_pkey_st* nocapture readnone) local_unnamed_addr #3 {
  ret %struct.dh_st* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %struct.dh_st* @EVP_PKEY_get1_DH(%struct.evp_pkey_st* nocapture readnone) local_unnamed_addr #3 {
  ret %struct.dh_st* null
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_set_type(%struct.evp_pkey_st*, i32) local_unnamed_addr #0 {
  %3 = icmp ne %struct.evp_pkey_st* %0, null
  br i1 %3, label %4, label %18

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 3
  %10 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %9, align 8
  %11 = icmp eq %struct.evp_pkey_asn1_method_st* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %10, i64 0, i32 18
  %14 = load void (%struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)** %13, align 8
  %15 = icmp eq void (%struct.evp_pkey_st*)* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  tail call void %14(%struct.evp_pkey_st* nonnull %0) #5
  store i8* null, i8** %5, align 8
  %17 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  store i32 0, i32* %17, align 4
  br label %18

18:                                               ; preds = %16, %12, %8, %4, %2
  switch i32 %1, label %23 [
    i32 6, label %24
    i32 408, label %19
    i32 116, label %20
    i32 949, label %21
    i32 948, label %22
  ]

19:                                               ; preds = %18
  br label %24

20:                                               ; preds = %18
  br label %24

21:                                               ; preds = %18
  br label %24

22:                                               ; preds = %18
  br label %24

23:                                               ; preds = %18
  tail call void @ERR_put_error(i32 6, i32 0, i32 128, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 331) #5
  tail call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i32 %1) #5
  br label %31

24:                                               ; preds = %22, %21, %20, %19, %18
  %25 = phi %struct.evp_pkey_asn1_method_st* [ @rsa_asn1_meth, %18 ], [ @ec_asn1_meth, %19 ], [ @dsa_asn1_meth, %20 ], [ @ed25519_asn1_meth, %21 ], [ @x25519_asn1_meth, %22 ]
  br i1 %3, label %26, label %31

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 3
  store %struct.evp_pkey_asn1_method_st* %25, %struct.evp_pkey_asn1_method_st** %27, align 8
  %28 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %25, i64 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  store i32 %29, i32* %30, align 4
  br label %31

31:                                               ; preds = %24, %26, %23
  %32 = phi i32 [ 0, %23 ], [ 1, %26 ], [ 1, %24 ]
  ret i32 %32
}

declare void @ERR_add_error_dataf(i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.evp_pkey_st* @EVP_PKEY_new_raw_private_key(i32, %struct.engine_st* nocapture readnone, i8*, i64) local_unnamed_addr #0 {
  %5 = tail call i8* @OPENSSL_malloc(i64 24) #5
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  tail call void @ERR_put_error(i32 6, i32 0, i32 65, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 88) #5
  br label %48

8:                                                ; preds = %4
  %9 = bitcast i8* %5 to %struct.evp_pkey_st*
  %10 = bitcast i8* %5 to i32*
  %11 = getelementptr inbounds i8, i8* %5, i64 4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %11, i8 0, i64 20, i1 false) #5
  store i32 1, i32* %10, align 8
  %12 = getelementptr inbounds i8, i8* %5, i64 8
  %13 = bitcast i8* %12 to i8**
  switch i32 %0, label %18 [
    i32 6, label %19
    i32 408, label %14
    i32 116, label %15
    i32 949, label %16
    i32 948, label %17
  ]

14:                                               ; preds = %8
  br label %19

15:                                               ; preds = %8
  br label %19

16:                                               ; preds = %8
  br label %19

17:                                               ; preds = %8
  br label %19

18:                                               ; preds = %8
  tail call void @ERR_put_error(i32 6, i32 0, i32 128, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 331) #5
  tail call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i32 %0) #5
  br label %33

19:                                               ; preds = %8, %14, %15, %16, %17
  %20 = phi %struct.evp_pkey_asn1_method_st* [ @rsa_asn1_meth, %8 ], [ @ec_asn1_meth, %14 ], [ @dsa_asn1_meth, %15 ], [ @ed25519_asn1_meth, %16 ], [ @x25519_asn1_meth, %17 ]
  %21 = getelementptr inbounds i8, i8* %5, i64 16
  %22 = bitcast i8* %21 to %struct.evp_pkey_asn1_method_st**
  store %struct.evp_pkey_asn1_method_st* %20, %struct.evp_pkey_asn1_method_st** %22, align 8
  %23 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %20, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = bitcast i8* %11 to i32*
  store i32 %24, i32* %25, align 4
  %26 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %20, i64 0, i32 8
  %27 = load i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64)** %26, align 8
  %28 = icmp eq i32 (%struct.evp_pkey_st*, i8*, i64)* %27, null
  br i1 %28, label %29, label %30

29:                                               ; preds = %19
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 353) #5
  br label %33

30:                                               ; preds = %19
  %31 = tail call i32 %27(%struct.evp_pkey_st* nonnull %9, i8* %2, i64 %3) #5
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %48

33:                                               ; preds = %30, %29, %18
  %34 = tail call i32 @CRYPTO_refcount_dec_and_test_zero(i32* nonnull %10) #5
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %48, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* %5, i64 16
  %38 = bitcast i8* %37 to %struct.evp_pkey_asn1_method_st**
  %39 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %38, align 8
  %40 = icmp eq %struct.evp_pkey_asn1_method_st* %39, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %39, i64 0, i32 18
  %43 = load void (%struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)** %42, align 8
  %44 = icmp eq void (%struct.evp_pkey_st*)* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %41
  tail call void %43(%struct.evp_pkey_st* nonnull %9) #5
  store i8* null, i8** %13, align 8
  %46 = bitcast i8* %11 to i32*
  store i32 0, i32* %46, align 4
  br label %47

47:                                               ; preds = %45, %41, %36
  tail call void @OPENSSL_free(i8* nonnull %5) #5
  br label %48

48:                                               ; preds = %47, %33, %7, %30
  %49 = phi %struct.evp_pkey_st* [ %9, %30 ], [ null, %7 ], [ null, %33 ], [ null, %47 ]
  ret %struct.evp_pkey_st* %49
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.evp_pkey_st* @EVP_PKEY_new_raw_public_key(i32, %struct.engine_st* nocapture readnone, i8*, i64) local_unnamed_addr #0 {
  %5 = tail call i8* @OPENSSL_malloc(i64 24) #5
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  tail call void @ERR_put_error(i32 6, i32 0, i32 65, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 88) #5
  br label %48

8:                                                ; preds = %4
  %9 = bitcast i8* %5 to %struct.evp_pkey_st*
  %10 = bitcast i8* %5 to i32*
  %11 = getelementptr inbounds i8, i8* %5, i64 4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %11, i8 0, i64 20, i1 false) #5
  store i32 1, i32* %10, align 8
  %12 = getelementptr inbounds i8, i8* %5, i64 8
  %13 = bitcast i8* %12 to i8**
  switch i32 %0, label %18 [
    i32 6, label %19
    i32 408, label %14
    i32 116, label %15
    i32 949, label %16
    i32 948, label %17
  ]

14:                                               ; preds = %8
  br label %19

15:                                               ; preds = %8
  br label %19

16:                                               ; preds = %8
  br label %19

17:                                               ; preds = %8
  br label %19

18:                                               ; preds = %8
  tail call void @ERR_put_error(i32 6, i32 0, i32 128, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 331) #5
  tail call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i32 %0) #5
  br label %33

19:                                               ; preds = %8, %14, %15, %16, %17
  %20 = phi %struct.evp_pkey_asn1_method_st* [ @rsa_asn1_meth, %8 ], [ @ec_asn1_meth, %14 ], [ @dsa_asn1_meth, %15 ], [ @ed25519_asn1_meth, %16 ], [ @x25519_asn1_meth, %17 ]
  %21 = getelementptr inbounds i8, i8* %5, i64 16
  %22 = bitcast i8* %21 to %struct.evp_pkey_asn1_method_st**
  store %struct.evp_pkey_asn1_method_st* %20, %struct.evp_pkey_asn1_method_st** %22, align 8
  %23 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %20, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = bitcast i8* %11 to i32*
  store i32 %24, i32* %25, align 4
  %26 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %20, i64 0, i32 9
  %27 = load i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64)** %26, align 8
  %28 = icmp eq i32 (%struct.evp_pkey_st*, i8*, i64)* %27, null
  br i1 %28, label %29, label %30

29:                                               ; preds = %19
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 377) #5
  br label %33

30:                                               ; preds = %19
  %31 = tail call i32 %27(%struct.evp_pkey_st* nonnull %9, i8* %2, i64 %3) #5
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %48

33:                                               ; preds = %30, %29, %18
  %34 = tail call i32 @CRYPTO_refcount_dec_and_test_zero(i32* nonnull %10) #5
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %48, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* %5, i64 16
  %38 = bitcast i8* %37 to %struct.evp_pkey_asn1_method_st**
  %39 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %38, align 8
  %40 = icmp eq %struct.evp_pkey_asn1_method_st* %39, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %39, i64 0, i32 18
  %43 = load void (%struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)** %42, align 8
  %44 = icmp eq void (%struct.evp_pkey_st*)* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %41
  tail call void %43(%struct.evp_pkey_st* nonnull %9) #5
  store i8* null, i8** %13, align 8
  %46 = bitcast i8* %11 to i32*
  store i32 0, i32* %46, align 4
  br label %47

47:                                               ; preds = %45, %41, %36
  tail call void @OPENSSL_free(i8* nonnull %5) #5
  br label %48

48:                                               ; preds = %47, %33, %7, %30
  %49 = phi %struct.evp_pkey_st* [ %9, %30 ], [ null, %7 ], [ null, %33 ], [ null, %47 ]
  ret %struct.evp_pkey_st* %49
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_get_raw_private_key(%struct.evp_pkey_st*, i8*, i64*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 3
  %5 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %4, align 8
  %6 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %5, i64 0, i32 10
  %7 = load i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*, i8*, i64*)** %6, align 8
  %8 = icmp eq i32 (%struct.evp_pkey_st*, i8*, i64*)* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 395) #5
  br label %12

10:                                               ; preds = %3
  %11 = tail call i32 %7(%struct.evp_pkey_st* %0, i8* %1, i64* %2) #5
  br label %12

12:                                               ; preds = %10, %9
  %13 = phi i32 [ 0, %9 ], [ %11, %10 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_get_raw_public_key(%struct.evp_pkey_st*, i8*, i64*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 3
  %5 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %4, align 8
  %6 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %5, i64 0, i32 11
  %7 = load i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*, i8*, i64*)** %6, align 8
  %8 = icmp eq i32 (%struct.evp_pkey_st*, i8*, i64*)* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 405) #5
  br label %12

10:                                               ; preds = %3
  %11 = tail call i32 %7(%struct.evp_pkey_st* %0, i8* %1, i64* %2) #5
  br label %12

12:                                               ; preds = %10, %9
  %13 = phi i32 [ 0, %9 ], [ %11, %10 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_cmp_parameters(%struct.evp_pkey_st*, %struct.evp_pkey_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %18

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 3
  %10 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %9, align 8
  %11 = icmp eq %struct.evp_pkey_asn1_method_st* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %10, i64 0, i32 17
  %14 = load i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)** %13, align 8
  %15 = icmp eq i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = tail call i32 %14(%struct.evp_pkey_st* %0, %struct.evp_pkey_st* %1) #5
  br label %18

18:                                               ; preds = %8, %12, %2, %16
  %19 = phi i32 [ %17, %16 ], [ -1, %2 ], [ -2, %12 ], [ -2, %8 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_CTX_set_signature_md(%struct.evp_pkey_ctx_st*, %struct.env_md_st*) local_unnamed_addr #0 {
  %3 = bitcast %struct.env_md_st* %1 to i8*
  %4 = tail call i32 @EVP_PKEY_CTX_ctrl(%struct.evp_pkey_ctx_st* %0, i32 -1, i32 56, i32 1, i32 0, i8* %3) #5
  ret i32 %4
}

declare i32 @EVP_PKEY_CTX_ctrl(%struct.evp_pkey_ctx_st*, i32, i32, i32, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_CTX_get_signature_md(%struct.evp_pkey_ctx_st*, %struct.env_md_st**) local_unnamed_addr #0 {
  %3 = bitcast %struct.env_md_st** %1 to i8*
  %4 = tail call i32 @EVP_PKEY_CTX_ctrl(%struct.evp_pkey_ctx_st* %0, i32 -1, i32 56, i32 2, i32 0, i8* %3) #5
  ret i32 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @OpenSSL_add_all_algorithms() local_unnamed_addr #3 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @OPENSSL_add_all_algorithms_conf() local_unnamed_addr #3 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @OpenSSL_add_all_ciphers() local_unnamed_addr #3 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @OpenSSL_add_all_digests() local_unnamed_addr #3 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @EVP_cleanup() local_unnamed_addr #3 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @EVP_PKEY_base_id(%struct.evp_pkey_st* nocapture readonly) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
