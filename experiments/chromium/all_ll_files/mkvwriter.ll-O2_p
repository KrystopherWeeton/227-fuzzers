; ModuleID = '../../third_party/libwebm/source/mkvmuxer/mkvwriter.cc'
source_filename = "../../third_party/libwebm/source/mkvmuxer/mkvwriter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.mkvmuxer::MkvWriter" = type <{ %"class.mkvmuxer::IMkvWriter", %struct._IO_FILE*, i8, [7 x i8] }>
%"class.mkvmuxer::IMkvWriter" = type { i32 (...)** }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

@_ZTVN8mkvmuxer9MkvWriterE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.mkvmuxer::MkvWriter"*, i8*, i32)* @_ZN8mkvmuxer9MkvWriter5WriteEPKvj to i8*), i8* bitcast (i64 (%"class.mkvmuxer::MkvWriter"*)* @_ZNK8mkvmuxer9MkvWriter8PositionEv to i8*), i8* bitcast (i32 (%"class.mkvmuxer::MkvWriter"*, i64)* @_ZN8mkvmuxer9MkvWriter8PositionEx to i8*), i8* bitcast (i1 (%"class.mkvmuxer::MkvWriter"*)* @_ZNK8mkvmuxer9MkvWriter8SeekableEv to i8*), i8* bitcast (void (%"class.mkvmuxer::MkvWriter"*, i64, i64)* @_ZN8mkvmuxer9MkvWriter18ElementStartNotifyEyx to i8*), i8* bitcast (void (%"class.mkvmuxer::MkvWriter"*)* @_ZN8mkvmuxer9MkvWriterD2Ev to i8*), i8* bitcast (void (%"class.mkvmuxer::MkvWriter"*)* @_ZN8mkvmuxer9MkvWriterD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [3 x i8] c"wb\00", align 1

@_ZN8mkvmuxer9MkvWriterC1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::MkvWriter"*), void (%"class.mkvmuxer::MkvWriter"*)* @_ZN8mkvmuxer9MkvWriterC2Ev
@_ZN8mkvmuxer9MkvWriterC1EP8_IO_FILE = hidden unnamed_addr alias void (%"class.mkvmuxer::MkvWriter"*, %struct._IO_FILE*), void (%"class.mkvmuxer::MkvWriter"*, %struct._IO_FILE*)* @_ZN8mkvmuxer9MkvWriterC2EP8_IO_FILE
@_ZN8mkvmuxer9MkvWriterD1Ev = hidden unnamed_addr alias void (%"class.mkvmuxer::MkvWriter"*), void (%"class.mkvmuxer::MkvWriter"*)* @_ZN8mkvmuxer9MkvWriterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer9MkvWriterC2Ev(%"class.mkvmuxer::MkvWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::MkvWriter", %"class.mkvmuxer::MkvWriter"* %0, i64 0, i32 0
  tail call void @_ZN8mkvmuxer10IMkvWriterC2Ev(%"class.mkvmuxer::IMkvWriter"* %2) #7
  %3 = getelementptr inbounds %"class.mkvmuxer::MkvWriter", %"class.mkvmuxer::MkvWriter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN8mkvmuxer9MkvWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.mkvmuxer::MkvWriter", %"class.mkvmuxer::MkvWriter"* %0, i64 0, i32 1
  store %struct._IO_FILE* null, %struct._IO_FILE** %4, align 8
  %5 = getelementptr inbounds %"class.mkvmuxer::MkvWriter", %"class.mkvmuxer::MkvWriter"* %0, i64 0, i32 2
  store i8 1, i8* %5, align 8
  ret void
}

declare void @_ZN8mkvmuxer10IMkvWriterC2Ev(%"class.mkvmuxer::IMkvWriter"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer9MkvWriterC2EP8_IO_FILE(%"class.mkvmuxer::MkvWriter"*, %struct._IO_FILE*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::MkvWriter", %"class.mkvmuxer::MkvWriter"* %0, i64 0, i32 0
  tail call void @_ZN8mkvmuxer10IMkvWriterC2Ev(%"class.mkvmuxer::IMkvWriter"* %3) #7
  %4 = getelementptr inbounds %"class.mkvmuxer::MkvWriter", %"class.mkvmuxer::MkvWriter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN8mkvmuxer9MkvWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.mkvmuxer::MkvWriter", %"class.mkvmuxer::MkvWriter"* %0, i64 0, i32 1
  store %struct._IO_FILE* %1, %struct._IO_FILE** %5, align 8
  %6 = getelementptr inbounds %"class.mkvmuxer::MkvWriter", %"class.mkvmuxer::MkvWriter"* %0, i64 0, i32 2
  store i8 0, i8* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer9MkvWriterD2Ev(%"class.mkvmuxer::MkvWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::MkvWriter", %"class.mkvmuxer::MkvWriter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN8mkvmuxer9MkvWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.mkvmuxer::MkvWriter", %"class.mkvmuxer::MkvWriter"* %0, i64 0, i32 1
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %5 = icmp eq %struct._IO_FILE* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.mkvmuxer::MkvWriter", %"class.mkvmuxer::MkvWriter"* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = tail call i32 @fclose(%struct._IO_FILE* nonnull %4) #7
  br label %12

12:                                               ; preds = %1, %6, %10
  store %struct._IO_FILE* null, %struct._IO_FILE** %3, align 8
  %13 = getelementptr inbounds %"class.mkvmuxer::MkvWriter", %"class.mkvmuxer::MkvWriter"* %0, i64 0, i32 0
  tail call void @_ZN8mkvmuxer10IMkvWriterD2Ev(%"class.mkvmuxer::IMkvWriter"* %13) #7
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer9MkvWriter5CloseEv(%"class.mkvmuxer::MkvWriter"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::MkvWriter", %"class.mkvmuxer::MkvWriter"* %0, i64 0, i32 1
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = icmp eq %struct._IO_FILE* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.mkvmuxer::MkvWriter", %"class.mkvmuxer::MkvWriter"* %0, i64 0, i32 2
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = tail call i32 @fclose(%struct._IO_FILE* nonnull %3)
  br label %11

11:                                               ; preds = %5, %1, %9
  store %struct._IO_FILE* null, %struct._IO_FILE** %2, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8mkvmuxer10IMkvWriterD2Ev(%"class.mkvmuxer::IMkvWriter"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8mkvmuxer9MkvWriterD0Ev(%"class.mkvmuxer::MkvWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::MkvWriter", %"class.mkvmuxer::MkvWriter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN8mkvmuxer9MkvWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.mkvmuxer::MkvWriter", %"class.mkvmuxer::MkvWriter"* %0, i64 0, i32 1
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %5 = icmp eq %struct._IO_FILE* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.mkvmuxer::MkvWriter", %"class.mkvmuxer::MkvWriter"* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = tail call i32 @fclose(%struct._IO_FILE* nonnull %4) #7
  br label %12

12:                                               ; preds = %1, %6, %10
  store %struct._IO_FILE* null, %struct._IO_FILE** %3, align 8
  %13 = getelementptr inbounds %"class.mkvmuxer::MkvWriter", %"class.mkvmuxer::MkvWriter"* %0, i64 0, i32 0
  tail call void @_ZN8mkvmuxer10IMkvWriterD2Ev(%"class.mkvmuxer::IMkvWriter"* %13) #7
  %14 = bitcast %"class.mkvmuxer::MkvWriter"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @_ZN8mkvmuxer9MkvWriter5WriteEPKvj(%"class.mkvmuxer::MkvWriter"* nocapture readonly, i8*, i32) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.mkvmuxer::MkvWriter", %"class.mkvmuxer::MkvWriter"* %0, i64 0, i32 1
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %6 = icmp eq %struct._IO_FILE* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = icmp eq i32 %2, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %7
  %10 = icmp eq i8* %1, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %9
  %12 = zext i32 %2 to i64
  %13 = tail call i64 @fwrite(i8* nonnull %1, i64 1, i64 %12, %struct._IO_FILE* nonnull %5)
  %14 = icmp ne i64 %13, %12
  %15 = sext i1 %14 to i32
  br label %16

16:                                               ; preds = %9, %7, %3, %11
  %17 = phi i32 [ %15, %11 ], [ -1, %3 ], [ 0, %7 ], [ -1, %9 ]
  ret i32 %17
}

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #5

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN8mkvmuxer9MkvWriter4OpenEPKc(%"class.mkvmuxer::MkvWriter"* nocapture, i8* readonly) local_unnamed_addr #2 align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.mkvmuxer::MkvWriter", %"class.mkvmuxer::MkvWriter"* %0, i64 0, i32 1
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %7 = icmp eq %struct._IO_FILE* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %4
  %9 = tail call %struct._IO_FILE* @fopen64(i8* nonnull %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0))
  store %struct._IO_FILE* %9, %struct._IO_FILE** %5, align 8
  %10 = icmp ne %struct._IO_FILE* %9, null
  br label %11

11:                                               ; preds = %8, %4, %2
  %12 = phi i1 [ false, %2 ], [ false, %4 ], [ %10, %8 ]
  ret i1 %12
}

; Function Attrs: nofree nounwind
declare noalias %struct._IO_FILE* @fopen64(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #5

; Function Attrs: nofree nounwind ssp uwtable
define hidden i64 @_ZNK8mkvmuxer9MkvWriter8PositionEv(%"class.mkvmuxer::MkvWriter"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.mkvmuxer::MkvWriter", %"class.mkvmuxer::MkvWriter"* %0, i64 0, i32 1
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = icmp eq %struct._IO_FILE* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call i64 @ftell(%struct._IO_FILE* nonnull %3)
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i64 [ %6, %5 ], [ 0, %1 ]
  ret i64 %8
}

; Function Attrs: nofree nounwind
declare i64 @ftell(%struct._IO_FILE* nocapture) local_unnamed_addr #5

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @_ZN8mkvmuxer9MkvWriter8PositionEx(%"class.mkvmuxer::MkvWriter"* nocapture readonly, i64) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.mkvmuxer::MkvWriter", %"class.mkvmuxer::MkvWriter"* %0, i64 0, i32 1
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %5 = icmp eq %struct._IO_FILE* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call i32 @fseeko64(%struct._IO_FILE* nonnull %4, i64 %1, i32 0)
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi i32 [ %7, %6 ], [ -1, %2 ]
  ret i32 %9
}

; Function Attrs: nofree nounwind
declare i32 @fseeko64(%struct._IO_FILE* nocapture, i64, i32) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK8mkvmuxer9MkvWriter8SeekableEv(%"class.mkvmuxer::MkvWriter"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8mkvmuxer9MkvWriter18ElementStartNotifyEyx(%"class.mkvmuxer::MkvWriter"* nocapture, i64, i64) unnamed_addr #6 align 2 {
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
