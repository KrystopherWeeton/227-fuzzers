; ModuleID = '../../third_party/blink/renderer/core/css/properties/css_unresolved_property.cc'
source_filename = "../../third_party/blink/renderer/core/css/properties/css_unresolved_property.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" }
%"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" = type { [8 x i8] }
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.26", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.32", %"class.blink::Member.34", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.43", %"class.blink::Member.49", %"class.blink::Member.51", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.4" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.2" }
%"class.WTF::HashTable.2" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.4" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.5" }
%"class.blink::HeapHashMap.5" = type { %"class.WTF::HashMap.8" }
%"class.WTF::HashMap.8" = type { %"class.WTF::HashTable.9" }
%"class.WTF::HashTable.9" = type <{ %"struct.WTF::KeyValuePair.11"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.11" = type { i8*, %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.12" }
%"class.blink::Member.12" = type { %"class.blink::MemberBase.13" }
%"class.blink::MemberBase.13" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.15", %"class.blink::Member.21", i32, [4 x i8], %"class.WTF::HashSet.23", i32, i32 }
%class.scoped_refptr = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.23" = type { %"class.WTF::HashTable.24" }
%"class.WTF::HashTable.24" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.30"*, i32, i32 }
%"class.blink::Member.30" = type opaque
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.34" = type { %"class.blink::MemberBase.35" }
%"class.blink::MemberBase.35" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.36", i32, i32 }
%"class.blink::HeapHashMap.36" = type { %"class.WTF::HashMap.39" }
%"class.WTF::HashMap.39" = type { %"class.WTF::HashTable.40" }
%"class.WTF::HashTable.40" = type <{ %"struct.WTF::KeyValuePair.42"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.42" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::Variable" = type { %"class.blink::Longhand.base", [7 x i8] }
%"class.blink::Longhand.base" = type { %"class.blink::CSSProperty.base" }
%"class.blink::CSSProperty.base" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8 }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.53 }
%class.scoped_refptr.53 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::ComputedStyle" = type opaque
%"class.blink::LayoutObject" = type opaque
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Longhand" = type { %"class.blink::CSSProperty.base", [7 x i8] }
%"class.blink::CSSParserTokenRange" = type opaque
%"class.blink::CSSParserContext" = type opaque
%"class.blink::CSSParserLocalContext" = type opaque
%"class.blink::StyleResolverState" = type opaque
%"class.blink::ScopedCSSValue" = type { %"class.blink::CSSValue"*, %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type opaque
%"class.blink::CSSInitialValue" = type { %"class.blink::CSSValue" }

$_ZNK5blink21CSSUnresolvedProperty8ExposureEv = comdat any

$_ZNK5blink21CSSUnresolvedProperty8ExposureEPKNS_16ExecutionContextE = comdat any

$_ZNK5blink11CSSProperty18IsResolvedPropertyEv = comdat any

$_ZNK5blink8Variable15GetPropertyNameEv = comdat any

$_ZNK5blink8Variable27GetPropertyNameAtomicStringEv = comdat any

$_ZNK5blink21CSSUnresolvedProperty17GetJSPropertyNameEv = comdat any

$_ZNK5blink8Variable18GetCSSPropertyNameEv = comdat any

$_ZNK5blink8Variable15IsAffectedByAllEv = comdat any

$_ZNK5blink11CSSProperty25IsLayoutDependentPropertyEv = comdat any

$_ZNK5blink11CSSProperty17IsLayoutDependentEPKNS_13ComputedStyleEPNS_12LayoutObjectE = comdat any

$_ZNK5blink11CSSProperty33CSSValueFromComputedStyleInternalERKNS_13ComputedStyleEPKNS_12LayoutObjectEb = comdat any

$_ZNK5blink11CSSProperty29ResolveDirectionAwarePropertyENS_13TextDirectionENS_11WritingModeE = comdat any

$_ZNK5blink11CSSProperty53IsInSameLogicalPropertyGroupWithDifferentMappingLogicENS_13CSSPropertyIDE = comdat any

$_ZNK5blink11CSSProperty18GetVisitedPropertyEv = comdat any

$_ZNK5blink11CSSProperty20GetUnvisitedPropertyEv = comdat any

$_ZNK5blink11CSSProperty12SurrogateForENS_13TextDirectionENS_11WritingModeE = comdat any

$_ZNK5blink8Longhand16ParseSingleValueERNS_19CSSParserTokenRangeERKNS_16CSSParserContextERKNS_21CSSParserLocalContextE = comdat any

$_ZNK5blink8Longhand12ApplyInitialERNS_18StyleResolverStateE = comdat any

$_ZNK5blink8Longhand12ApplyInheritERNS_18StyleResolverStateE = comdat any

$_ZNK5blink8Longhand10ApplyValueERNS_18StyleResolverStateERKNS_14ScopedCSSValueE = comdat any

$_ZNK5blink8Longhand10ApplyValueERNS_18StyleResolverStateERKNS_8CSSValueE = comdat any

$_ZNK5blink8Longhand22ColorIncludingFallbackEbRKNS_13ComputedStyleE = comdat any

$_ZNK5blink8Longhand12InitialValueEv = comdat any

$_ZTVN5blink8VariableE = comdat any

$_ZZNK5blink8Variable27GetPropertyNameAtomicStringEvE6s_name = comdat any

$_ZGVZNK5blink8Variable27GetPropertyNameAtomicStringEvE6s_name = comdat any

@_ZTVN5blink8VariableE = linkonce_odr hidden unnamed_addr constant { [25 x i8*] } { [25 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.blink::CSSUnresolvedProperty"*)* @_ZNK5blink21CSSUnresolvedProperty8ExposureEv to i8*), i8* bitcast (i32 (%"class.blink::CSSUnresolvedProperty"*, %"class.blink::ExecutionContext"*)* @_ZNK5blink21CSSUnresolvedProperty8ExposureEPKNS_16ExecutionContextE to i8*), i8* bitcast (i1 (%"class.blink::CSSProperty"*)* @_ZNK5blink11CSSProperty18IsResolvedPropertyEv to i8*), i8* bitcast (i8* (%"class.blink::Variable"*)* @_ZNK5blink8Variable15GetPropertyNameEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Variable"*)* @_ZNK5blink8Variable27GetPropertyNameAtomicStringEv to i8*), i8* bitcast (i8* (%"class.blink::CSSUnresolvedProperty"*)* @_ZNK5blink21CSSUnresolvedProperty17GetJSPropertyNameEv to i8*), i8* bitcast ({ i32, %"class.WTF::StringImpl"* } (%"class.blink::Variable"*)* @_ZNK5blink8Variable18GetCSSPropertyNameEv to i8*), i8* bitcast (i1 (%"class.blink::Variable"*)* @_ZNK5blink8Variable15IsAffectedByAllEv to i8*), i8* bitcast (i1 (%"class.blink::CSSProperty"*)* @_ZNK5blink11CSSProperty25IsLayoutDependentPropertyEv to i8*), i8* bitcast (i1 (%"class.blink::CSSProperty"*, %"class.blink::ComputedStyle"*, %"class.blink::LayoutObject"*)* @_ZNK5blink11CSSProperty17IsLayoutDependentEPKNS_13ComputedStyleEPNS_12LayoutObjectE to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::CSSProperty"*, %"class.blink::ComputedStyle"*, %"class.blink::LayoutObject"*, i1)* @_ZNK5blink11CSSProperty33CSSValueFromComputedStyleInternalERKNS_13ComputedStyleEPKNS_12LayoutObjectEb to i8*), i8* bitcast (%"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)* @_ZNK5blink11CSSProperty29ResolveDirectionAwarePropertyENS_13TextDirectionENS_11WritingModeE to i8*), i8* bitcast (i1 (%"class.blink::CSSProperty"*, i32)* @_ZNK5blink11CSSProperty53IsInSameLogicalPropertyGroupWithDifferentMappingLogicENS_13CSSPropertyIDE to i8*), i8* bitcast (%"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)* @_ZNK5blink11CSSProperty18GetVisitedPropertyEv to i8*), i8* bitcast (%"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*)* @_ZNK5blink11CSSProperty20GetUnvisitedPropertyEv to i8*), i8* bitcast (%"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)* @_ZNK5blink11CSSProperty12SurrogateForENS_13TextDirectionENS_11WritingModeE to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::Longhand"*, %"class.blink::CSSParserTokenRange"*, %"class.blink::CSSParserContext"*, %"class.blink::CSSParserLocalContext"*)* @_ZNK5blink8Longhand16ParseSingleValueERNS_19CSSParserTokenRangeERKNS_16CSSParserContextERKNS_21CSSParserLocalContextE to i8*), i8* bitcast (void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*)* @_ZNK5blink8Longhand12ApplyInitialERNS_18StyleResolverStateE to i8*), i8* bitcast (void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*)* @_ZNK5blink8Longhand12ApplyInheritERNS_18StyleResolverStateE to i8*), i8* bitcast (void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*, %"class.blink::ScopedCSSValue"*)* @_ZNK5blink8Longhand10ApplyValueERNS_18StyleResolverStateERKNS_14ScopedCSSValueE to i8*), i8* bitcast (void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*, %"class.blink::CSSValue"*)* @_ZNK5blink8Longhand10ApplyValueERNS_18StyleResolverStateERKNS_8CSSValueE to i8*), i8* bitcast (i32 (%"class.blink::Longhand"*, i1, %"class.blink::ComputedStyle"*)* @_ZNK5blink8Longhand22ColorIncludingFallbackEbRKNS_13ComputedStyleE to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::Longhand"*)* @_ZNK5blink8Longhand12InitialValueEv to i8*)] }, comdat, align 8
@_ZN5blink12_GLOBAL__N_128property_csspropertyvariableE = internal constant { i8**, i32, i32, i8 } { i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN5blink8VariableE, i32 0, inrange i32 0, i32 2), i32 1, i32 1315881, i8 0 }, align 8
@.str = private unnamed_addr constant [9 x i8] c"variable\00", align 1
@_ZZNK5blink8Variable27GetPropertyNameAtomicStringEvE6s_name = linkonce_odr hidden global %"class.WTF::StaticSingleton" zeroinitializer, comdat, align 8
@_ZGVZNK5blink8Variable27GetPropertyNameAtomicStringEvE6s_name = linkonce_odr hidden global i64 0, comdat, align 8
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSUnresolvedProperty"* @_ZN5blink21CSSUnresolvedProperty16GetAliasPropertyENS_13CSSPropertyIDE(i32) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::CSSUnresolvedProperty"* @_ZN5blink24GetAliasPropertyInternalENS_13CSSPropertyIDE(i32 %0) #7
  ret %"class.blink::CSSUnresolvedProperty"* %2
}

declare %"class.blink::CSSUnresolvedProperty"* @_ZN5blink24GetAliasPropertyInternalENS_13CSSPropertyIDE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.blink::CSSUnresolvedProperty"* @_ZN5blink21CSSUnresolvedProperty19GetNonAliasPropertyENS_13CSSPropertyIDE(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = tail call dereferenceable(8) %"class.blink::CSSUnresolvedProperty"* @_ZN5blink27GetNonAliasPropertyInternalENS_13CSSPropertyIDE(i32 %0) #7
  br label %5

5:                                                ; preds = %1, %3
  %6 = phi %"class.blink::CSSUnresolvedProperty"* [ %4, %3 ], [ bitcast ({ i8**, i32, i32, i8 }* @_ZN5blink12_GLOBAL__N_128property_csspropertyvariableE to %"class.blink::CSSUnresolvedProperty"*), %1 ]
  ret %"class.blink::CSSUnresolvedProperty"* %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.blink::CSSUnresolvedProperty"* @_ZN5blink30GetCSSPropertyVariableInternalEv() local_unnamed_addr #2 {
  ret %"class.blink::CSSUnresolvedProperty"* bitcast ({ i8**, i32, i32, i8 }* @_ZN5blink12_GLOBAL__N_128property_csspropertyvariableE to %"class.blink::CSSUnresolvedProperty"*)
}

declare dereferenceable(8) %"class.blink::CSSUnresolvedProperty"* @_ZN5blink27GetNonAliasPropertyInternalENS_13CSSPropertyIDE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.blink::CSSUnresolvedProperty"* @_ZN5blink21CSSUnresolvedProperty3GetENS_13CSSPropertyIDE(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp slt i32 %0, 525
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = icmp eq i32 %0, 1
  br i1 %4, label %9, label %5

5:                                                ; preds = %3
  %6 = tail call dereferenceable(8) %"class.blink::CSSUnresolvedProperty"* @_ZN5blink27GetNonAliasPropertyInternalENS_13CSSPropertyIDE(i32 %0) #7
  br label %9

7:                                                ; preds = %1
  %8 = tail call %"class.blink::CSSUnresolvedProperty"* @_ZN5blink24GetAliasPropertyInternalENS_13CSSPropertyIDE(i32 %0) #7
  br label %9

9:                                                ; preds = %5, %3, %7
  %10 = phi %"class.blink::CSSUnresolvedProperty"* [ %8, %7 ], [ %6, %5 ], [ bitcast ({ i8**, i32, i32, i8 }* @_ZN5blink12_GLOBAL__N_128property_csspropertyvariableE to %"class.blink::CSSUnresolvedProperty"*), %3 ]
  ret %"class.blink::CSSUnresolvedProperty"* %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21CSSUnresolvedProperty8ExposureEv(%"class.blink::CSSUnresolvedProperty"*) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21CSSUnresolvedProperty8ExposureEPKNS_16ExecutionContextE(%"class.blink::CSSUnresolvedProperty"*, %"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::CSSUnresolvedProperty"* %0 to i32 (%"class.blink::CSSUnresolvedProperty"*)***
  %4 = load i32 (%"class.blink::CSSUnresolvedProperty"*)**, i32 (%"class.blink::CSSUnresolvedProperty"*)*** %3, align 8
  %5 = load i32 (%"class.blink::CSSUnresolvedProperty"*)*, i32 (%"class.blink::CSSUnresolvedProperty"*)** %4, align 8
  %6 = tail call i32 %5(%"class.blink::CSSUnresolvedProperty"* %0) #7
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11CSSProperty18IsResolvedPropertyEv(%"class.blink::CSSProperty"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink8Variable15GetPropertyNameEv(%"class.blink::Variable"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8Variable27GetPropertyNameAtomicStringEv(%"class.blink::Variable"*) unnamed_addr #0 comdat align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink8Variable27GetPropertyNameAtomicStringEvE6s_name to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink8Variable27GetPropertyNameAtomicStringEvE6s_name) #7
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink8Variable27GetPropertyNameAtomicStringEvE6s_name to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i64 8) #7
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink8Variable27GetPropertyNameAtomicStringEvE6s_name) #7
  br label %8

8:                                                ; preds = %4, %7, %1
  ret %"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink8Variable27GetPropertyNameAtomicStringEvE6s_name to %"class.WTF::AtomicString"*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink21CSSUnresolvedProperty17GetJSPropertyNameEv(%"class.blink::CSSUnresolvedProperty"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32, %"class.WTF::StringImpl"* } @_ZNK5blink8Variable18GetCSSPropertyNameEv(%"class.blink::Variable"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #7
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %40, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %26

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #7
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  call void @llvm.trap() #7
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %40, label %26

26:                                               ; preds = %7, %22
  %27 = phi %"class.WTF::StringImpl"* [ %24, %22 ], [ %5, %7 ]
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %26
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %26
  %37 = phi i32 [ %35, %34 ], [ %33, %26 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #7
  br label %40

40:                                               ; preds = %1, %22, %36, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7
  %41 = insertvalue { i32, %"class.WTF::StringImpl"* } { i32 1, %"class.WTF::StringImpl"* undef }, %"class.WTF::StringImpl"* %5, 1
  ret { i32, %"class.WTF::StringImpl"* } %41
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8Variable15IsAffectedByAllEv(%"class.blink::Variable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11CSSProperty25IsLayoutDependentPropertyEv(%"class.blink::CSSProperty"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11CSSProperty17IsLayoutDependentEPKNS_13ComputedStyleEPNS_12LayoutObjectE(%"class.blink::CSSProperty"*, %"class.blink::ComputedStyle"*, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSValue"* @_ZNK5blink11CSSProperty33CSSValueFromComputedStyleInternalERKNS_13ComputedStyleEPKNS_12LayoutObjectEb(%"class.blink::CSSProperty"*, %"class.blink::ComputedStyle"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSValue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::CSSProperty"* @_ZNK5blink11CSSProperty29ResolveDirectionAwarePropertyENS_13TextDirectionENS_11WritingModeE(%"class.blink::CSSProperty"*, i8 zeroext, i8 zeroext) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSProperty"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11CSSProperty53IsInSameLogicalPropertyGroupWithDifferentMappingLogicENS_13CSSPropertyIDE(%"class.blink::CSSProperty"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSProperty"* @_ZNK5blink11CSSProperty18GetVisitedPropertyEv(%"class.blink::CSSProperty"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSProperty"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSProperty"* @_ZNK5blink11CSSProperty20GetUnvisitedPropertyEv(%"class.blink::CSSProperty"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSProperty"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSProperty"* @_ZNK5blink11CSSProperty12SurrogateForENS_13TextDirectionENS_11WritingModeE(%"class.blink::CSSProperty"*, i8 zeroext, i8 zeroext) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSProperty"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSValue"* @_ZNK5blink8Longhand16ParseSingleValueERNS_19CSSParserTokenRangeERKNS_16CSSParserContextERKNS_21CSSParserLocalContextE(%"class.blink::Longhand"*, %"class.blink::CSSParserTokenRange"*, %"class.blink::CSSParserContext"*, %"class.blink::CSSParserLocalContext"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSValue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8Longhand12ApplyInitialERNS_18StyleResolverStateE(%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8Longhand12ApplyInheritERNS_18StyleResolverStateE(%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8Longhand10ApplyValueERNS_18StyleResolverStateERKNS_14ScopedCSSValueE(%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*, %"class.blink::ScopedCSSValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::ScopedCSSValue", %"class.blink::ScopedCSSValue"* %2, i64 0, i32 0
  %5 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %4, align 8
  %6 = bitcast %"class.blink::Longhand"* %0 to void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*, %"class.blink::CSSValue"*)***
  %7 = load void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*, %"class.blink::CSSValue"*)**, void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*, %"class.blink::CSSValue"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*, %"class.blink::CSSValue"*)*, void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*, %"class.blink::CSSValue"*)** %7, i64 20
  %9 = load void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*, %"class.blink::CSSValue"*)*, void (%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*, %"class.blink::CSSValue"*)** %8, align 8
  tail call void %9(%"class.blink::Longhand"* %0, %"class.blink::StyleResolverState"* %1, %"class.blink::CSSValue"* dereferenceable(3) %5) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8Longhand10ApplyValueERNS_18StyleResolverStateERKNS_8CSSValueE(%"class.blink::Longhand"*, %"class.blink::StyleResolverState"*, %"class.blink::CSSValue"* dereferenceable(3)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8Longhand22ColorIncludingFallbackEbRKNS_13ComputedStyleE(%"class.blink::Longhand"*, i1 zeroext, %"class.blink::ComputedStyle"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSValue"* @_ZNK5blink8Longhand12InitialValueEv(%"class.blink::Longhand"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call %"class.blink::CSSInitialValue"* @_ZN5blink15CSSInitialValue6CreateEv() #7
  %3 = getelementptr inbounds %"class.blink::CSSInitialValue", %"class.blink::CSSInitialValue"* %2, i64 0, i32 0
  ret %"class.blink::CSSValue"* %3
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare %"class.blink::CSSInitialValue"* @_ZN5blink15CSSInitialValue6CreateEv() local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 2000}
