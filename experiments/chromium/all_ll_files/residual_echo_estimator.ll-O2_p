; ModuleID = '../../third_party/webrtc/modules/audio_processing/aec3/residual_echo_estimator.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/aec3/residual_echo_estimator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::ResidualEchoEstimator" = type { %"struct.webrtc::EchoCanceller3Config", i64, float, float, float, float, i8, %"struct.std::__1::array", %"struct.std::__1::array.0", %"class.webrtc::ReverbModel" }
%"struct.webrtc::EchoCanceller3Config" = type { %"struct.webrtc::EchoCanceller3Config::Buffering", %"struct.webrtc::EchoCanceller3Config::Delay", %"struct.webrtc::EchoCanceller3Config::Filter", %"struct.webrtc::EchoCanceller3Config::Erle", %"struct.webrtc::EchoCanceller3Config::EpStrength", %"struct.webrtc::EchoCanceller3Config::EchoAudibility", %"struct.webrtc::EchoCanceller3Config::RenderLevels", %"struct.webrtc::EchoCanceller3Config::EchoRemovalControl", [6 x i8], %"struct.webrtc::EchoCanceller3Config::EchoModel", %"struct.webrtc::EchoCanceller3Config::ComfortNoise", [4 x i8], %"struct.webrtc::EchoCanceller3Config::Suppressor" }
%"struct.webrtc::EchoCanceller3Config::Buffering" = type { i64, i64 }
%"struct.webrtc::EchoCanceller3Config::Delay" = type { i64, i64, i64, i64, i64, i64, float, float, float, %"struct.webrtc::EchoCanceller3Config::Delay::DelaySelectionThresholds", i8, i8, %"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing", %"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing" }
%"struct.webrtc::EchoCanceller3Config::Delay::DelaySelectionThresholds" = type { i32, i32 }
%"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing" = type { i8, i8, float, i8 }
%"struct.webrtc::EchoCanceller3Config::Filter" = type <{ %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", i64, float, i32, i8, i8, i8, i8, i8, [3 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration" = type { i64, float, float, float, float, float }
%"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration" = type { i64, float, float }
%"struct.webrtc::EchoCanceller3Config::Erle" = type <{ float, float, float, i8, [3 x i8], i64, i8, i8, [6 x i8] }>
%"struct.webrtc::EchoCanceller3Config::EpStrength" = type <{ float, float, i8, i8, i8, i8 }>
%"struct.webrtc::EchoCanceller3Config::EchoAudibility" = type <{ float, float, float, float, float, float, i8, i8, [2 x i8] }>
%"struct.webrtc::EchoCanceller3Config::RenderLevels" = type { float, float, float, float }
%"struct.webrtc::EchoCanceller3Config::EchoRemovalControl" = type { i8, i8 }
%"struct.webrtc::EchoCanceller3Config::EchoModel" = type <{ i64, float, float, float, float, i64, i64, i8, [7 x i8] }>
%"struct.webrtc::EchoCanceller3Config::ComfortNoise" = type { float }
%"struct.webrtc::EchoCanceller3Config::Suppressor" = type <{ i64, %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::DominantNearendDetection", %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection", i8, [3 x i8], %"struct.webrtc::EchoCanceller3Config::Suppressor::HighBandsSuppression", float, i8, [7 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning" = type { %"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds", %"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds", float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds" = type { float, float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::DominantNearendDetection" = type <{ float, float, float, i32, i32, i8, [3 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection" = type { i64, %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion", %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion", float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion" = type { i64, i64 }
%"struct.webrtc::EchoCanceller3Config::Suppressor::HighBandsSuppression" = type { float, float, float, float }
%"struct.std::__1::array" = type { [65 x float] }
%"struct.std::__1::array.0" = type { [65 x i32] }
%"class.webrtc::ReverbModel" = type { %"struct.std::__1::array" }
%"class.webrtc::AecState" = type { %"class.std::__1::unique_ptr", %"struct.webrtc::EchoCanceller3Config", i64, i8, i8, i8, %"class.webrtc::AecState::InitialState", %"class.webrtc::AecState::FilterDelay", %"class.std::__1::unique_ptr.5", %"class.webrtc::AecState::FilteringQualityAnalyzer", %"class.webrtc::AecState::SaturationDetector", %"class.webrtc::ErlEstimator", %"class.webrtc::ErleEstimator", i64, i64, i8, [7 x i8], %"class.webrtc::FilterAnalyzer", %"class.webrtc::EchoAudibility", %"class.webrtc::ReverbModelEstimator", %"class.webrtc::ReverbModel", %"class.webrtc::SubtractorOutputAnalyzer" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.webrtc::ApmDataDumper"* }
%"class.webrtc::ApmDataDumper" = type { i8 }
%"class.webrtc::AecState::InitialState" = type { i8, float, i8, i8, i64 }
%"class.webrtc::AecState::FilterDelay" = type { i32, i8, %"class.std::__1::vector", i32, %"class.absl::optional" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i32* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.webrtc::DelayEstimate" }
%"struct.webrtc::DelayEstimate" = type { i32, i64, i64, i64 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.webrtc::TransparentMode"* }
%"class.webrtc::TransparentMode" = type { i32 (...)** }
%"class.webrtc::AecState::FilteringQualityAnalyzer" = type { i8, i8, i64, i64, i8, %"class.std::__1::vector.11" }
%"class.std::__1::vector.11" = type { i64*, i64, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i64 }
%"class.webrtc::AecState::SaturationDetector" = type { i8 }
%"class.webrtc::ErlEstimator" = type { i64, %"struct.std::__1::array", %"struct.std::__1::array.17", float, i32, i64 }
%"struct.std::__1::array.17" = type { [63 x i32] }
%"class.webrtc::ErleEstimator" = type { i64, %"class.webrtc::FullBandErleEstimator", %"class.webrtc::SubbandErleEstimator", %"class.std::__1::unique_ptr.66", i64 }
%"class.webrtc::FullBandErleEstimator" = type { float, float, %"class.std::__1::vector", %"class.std::__1::vector.18", %"class.std::__1::vector.25", %"class.std::__1::vector.37" }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { float*, float*, %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { float* }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"*, %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"*, %"class.std::__1::__compressed_pair.32" }
%"class.webrtc::FullBandErleEstimator::ErleInstantaneous" = type { i8, i8, %"class.absl::optional.27", float, float, float, float, float, i32 }
%"class.absl::optional.27" = type { %"class.absl::optional_internal::optional_data.28" }
%"class.absl::optional_internal::optional_data.28" = type { %"class.absl::optional_internal::optional_data_base.29" }
%"class.absl::optional_internal::optional_data_base.29" = type { %"class.absl::optional_internal::optional_data_dtor_base.30" }
%"class.absl::optional_internal::optional_data_dtor_base.30" = type { i8, %union.anon.31 }
%union.anon.31 = type { float }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"class.absl::optional.27"*, %"class.absl::optional.27"*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.absl::optional.27"* }
%"class.webrtc::SubbandErleEstimator" = type { i8, float, %"struct.std::__1::array", i8, %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra", %"class.std::__1::vector.44", %"class.std::__1::vector.44", %"class.std::__1::vector.44", %"class.std::__1::vector.51", %"class.std::__1::vector.59" }
%"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra" = type { %"class.std::__1::vector.44", %"class.std::__1::vector.44", %"class.std::__1::vector.51", %"class.std::__1::vector" }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %"struct.std::__1::array"*, %"struct.std::__1::array"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.std::__1::array"* }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { %"struct.std::__1::array.53"*, %"struct.std::__1::array.53"*, %"class.std::__1::__compressed_pair.54" }
%"struct.std::__1::array.53" = type { [65 x i8] }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.std::__1::array.53"* }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %"struct.std::__1::array.0"*, %"struct.std::__1::array.0"*, %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::array.0"* }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.webrtc::SignalDependentErleEstimator"* }
%"class.webrtc::SignalDependentErleEstimator" = type { float, i64, i64, i64, %"struct.std::__1::array.69", %"struct.std::__1::array.70", %"class.std::__1::vector.71", i8, %"class.std::__1::vector.44", %"class.std::__1::vector.44", %"class.std::__1::vector.75", %"class.std::__1::vector.82", %"class.std::__1::vector.84", %"class.std::__1::vector.82", %"class.std::__1::vector.96", %"class.std::__1::vector.104" }
%"struct.std::__1::array.69" = type { [65 x i64] }
%"struct.std::__1::array.70" = type { [6 x float] }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { i64*, i64*, %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { i64* }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"*, %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.std::__1::vector.44"* }
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { %"struct.std::__1::array.70"*, %"struct.std::__1::array.70"*, %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"struct.std::__1::array.70"* }
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { %"class.std::__1::vector.84"*, %"class.std::__1::vector.84"*, %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.std::__1::vector.84"* }
%"class.std::__1::vector.96" = type { %"class.std::__1::__vector_base.97" }
%"class.std::__1::__vector_base.97" = type { %"struct.std::__1::array.98"*, %"struct.std::__1::array.98"*, %"class.std::__1::__compressed_pair.99" }
%"struct.std::__1::array.98" = type opaque
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.std::__1::array.98"* }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %"struct.std::__1::array.69"*, %"struct.std::__1::array.69"*, %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::array.69"* }
%"class.webrtc::FilterAnalyzer" = type <{ %"class.std::__1::unique_ptr", i8, [3 x i8], float, %"class.std::__1::vector.114", i64, %"struct.webrtc::FilterAnalyzer::FilterRegion", %"class.std::__1::vector.121", %"class.std::__1::vector", i32, [4 x i8] }>
%"class.std::__1::vector.114" = type { %"class.std::__1::__vector_base.115" }
%"class.std::__1::__vector_base.115" = type { %"class.std::__1::vector.18"*, %"class.std::__1::vector.18"*, %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::vector.18"* }
%"struct.webrtc::FilterAnalyzer::FilterRegion" = type { i64, i64 }
%"class.std::__1::vector.121" = type { %"class.std::__1::__vector_base.122" }
%"class.std::__1::__vector_base.122" = type { %"struct.webrtc::FilterAnalyzer::FilterAnalysisState"*, %"struct.webrtc::FilterAnalyzer::FilterAnalysisState"*, %"class.std::__1::__compressed_pair.123" }
%"struct.webrtc::FilterAnalyzer::FilterAnalysisState" = type { float, i64, i32, i8, [3 x i8], %"class.webrtc::FilterAnalyzer::ConsistentFilterDetector" }
%"class.webrtc::FilterAnalyzer::ConsistentFilterDetector" = type <{ i8, [3 x i8], float, float, [4 x i8], i64, i64, float, [4 x i8], i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.webrtc::FilterAnalyzer::FilterAnalysisState"* }
%"class.webrtc::EchoAudibility" = type { %"class.absl::optional.128", i32, i8, i8, [2 x i8], %"class.webrtc::StationarityEstimator" }
%"class.absl::optional.128" = type { %"class.absl::optional_internal::optional_data.129" }
%"class.absl::optional_internal::optional_data.129" = type { %"class.absl::optional_internal::optional_data_base.130" }
%"class.absl::optional_internal::optional_data_base.130" = type { %"class.absl::optional_internal::optional_data_dtor_base.131" }
%"class.absl::optional_internal::optional_data_dtor_base.131" = type { i8, %union.anon.132 }
%union.anon.132 = type { i32 }
%"class.webrtc::StationarityEstimator" = type <{ %"class.std::__1::unique_ptr", %"class.webrtc::StationarityEstimator::NoiseSpectrum", %"struct.std::__1::array.0", %"struct.std::__1::array.53", [3 x i8] }>
%"class.webrtc::StationarityEstimator::NoiseSpectrum" = type { %"struct.std::__1::array", i64 }
%"class.webrtc::ReverbModelEstimator" = type { %"class.std::__1::vector.133", %"class.std::__1::vector.146" }
%"class.std::__1::vector.133" = type { %"class.std::__1::__vector_base.134" }
%"class.std::__1::__vector_base.134" = type { %"class.std::__1::unique_ptr.135"*, %"class.std::__1::unique_ptr.135"*, %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.webrtc::ReverbDecayEstimator"* }
%"class.webrtc::ReverbDecayEstimator" = type <{ i32, i32, i8, [3 x i8], %"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", i32, i32, i32, i32, i8, [7 x i8], %"class.std::__1::vector.18", float, float, float, [4 x i8] }>
%"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor" = type { float, float, float, i32, i32 }
%"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator" = type <{ %"class.std::__1::vector.18", %"class.std::__1::vector.18", i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.std::__1::unique_ptr.135"* }
%"class.std::__1::vector.146" = type { %"class.std::__1::__vector_base.147" }
%"class.std::__1::__vector_base.147" = type { %"class.webrtc::ReverbFrequencyResponse"*, %"class.webrtc::ReverbFrequencyResponse"*, %"class.std::__1::__compressed_pair.148" }
%"class.webrtc::ReverbFrequencyResponse" = type { float, %"struct.std::__1::array" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.webrtc::ReverbFrequencyResponse"* }
%"class.webrtc::SubtractorOutputAnalyzer" = type { %"class.std::__1::vector.11" }
%"class.webrtc::RenderBuffer" = type <{ %"struct.webrtc::BlockBuffer"*, %"struct.webrtc::SpectrumBuffer"*, %"struct.webrtc::FftBuffer"*, i8, [7 x i8] }>
%"struct.webrtc::BlockBuffer" = type { i32, %"class.std::__1::vector.153", i32, i32 }
%"class.std::__1::vector.153" = type { %"class.std::__1::__vector_base.154" }
%"class.std::__1::__vector_base.154" = type { %"class.std::__1::vector.155"*, %"class.std::__1::vector.155"*, %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::vector.155" = type { %"class.std::__1::__vector_base.179" }
%"class.std::__1::__vector_base.179" = type { %"class.std::__1::vector.114"*, %"class.std::__1::vector.114"*, %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.std::__1::vector.114"* }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::vector.155"* }
%"struct.webrtc::SpectrumBuffer" = type { i32, %"class.std::__1::vector.75", i32, i32 }
%"struct.webrtc::FftBuffer" = type { i32, %"class.std::__1::vector.161", i32, i32 }
%"class.std::__1::vector.161" = type { %"class.std::__1::__vector_base.162" }
%"class.std::__1::__vector_base.162" = type { %"class.std::__1::vector.163"*, %"class.std::__1::vector.163"*, %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::vector.163" = type { %"class.std::__1::__vector_base.185" }
%"class.std::__1::__vector_base.185" = type { %"struct.webrtc::FftData"*, %"struct.webrtc::FftData"*, %"class.std::__1::__compressed_pair.186" }
%"struct.webrtc::FftData" = type { %"struct.std::__1::array", %"struct.std::__1::array" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.webrtc::FftData"* }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.std::__1::vector.163"* }
%"class.rtc::ArrayView" = type { %"class.rtc::impl::ArrayViewBase" }
%"class.rtc::impl::ArrayViewBase" = type { %"struct.std::__1::array"*, i64 }
%"class.rtc::ArrayView.169" = type { %"class.rtc::impl::ArrayViewBase.170" }
%"class.rtc::impl::ArrayViewBase.170" = type { %"struct.std::__1::array"*, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.193 }
%union.anon.193 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN6webrtc11field_trial9IsEnabledEPKc = comdat any

@.str = private unnamed_addr constant [45 x i8] c"WebRTC-Aec3UseLowEarlyReflectionsDefaultGain\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"Enabled\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"WebRTC-Aec3UseLowLateReflectionsDefaultGain\00", align 1
@.str.4 = private unnamed_addr constant [53 x i8] c"WebRTC-Aec3UseErleOnsetCompensationInDominantNearend\00", align 1

@_ZN6webrtc21ResidualEchoEstimatorC1ERKNS_20EchoCanceller3ConfigEm = hidden unnamed_addr alias void (%"class.webrtc::ResidualEchoEstimator"*, %"struct.webrtc::EchoCanceller3Config"*, i64), void (%"class.webrtc::ResidualEchoEstimator"*, %"struct.webrtc::EchoCanceller3Config"*, i64)* @_ZN6webrtc21ResidualEchoEstimatorC2ERKNS_20EchoCanceller3ConfigEm
@_ZN6webrtc21ResidualEchoEstimatorD1Ev = hidden unnamed_addr alias void (%"class.webrtc::ResidualEchoEstimator"*), void (%"class.webrtc::ResidualEchoEstimator"*)* @_ZN6webrtc21ResidualEchoEstimatorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21ResidualEchoEstimatorC2ERKNS_20EchoCanceller3ConfigEm(%"class.webrtc::ResidualEchoEstimator"*, %"struct.webrtc::EchoCanceller3Config"* dereferenceable(560), i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc20EchoCanceller3ConfigC1ERKS0_(%"struct.webrtc::EchoCanceller3Config"* %4, %"struct.webrtc::EchoCanceller3Config"* dereferenceable(560) %1) #11
  %5 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 1
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 2
  store float 0x3F847AE140000000, float* %6, align 8
  %7 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 3
  store float 0x3F847AE140000000, float* %7, align 4
  %8 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 0, i32 4
  %10 = tail call zeroext i1 @_ZN6webrtc11field_trial9IsEnabledEPKc(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0)) #11
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config::EpStrength", %"struct.webrtc::EchoCanceller3Config::EpStrength"* %9, i64 0, i32 0
  %13 = load float, float* %12, align 4
  br label %14

14:                                               ; preds = %3, %11
  %15 = phi float [ %13, %11 ], [ 0x3FB99999A0000000, %3 ]
  store float %15, float* %8, align 8
  %16 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 5
  %17 = tail call zeroext i1 @_ZN6webrtc11field_trial9IsEnabledEPKc(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0)) #11
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config::EpStrength", %"struct.webrtc::EchoCanceller3Config::EpStrength"* %9, i64 0, i32 0
  %20 = load float, float* %19, align 4
  br label %21

21:                                               ; preds = %14, %18
  %22 = phi float [ %20, %18 ], [ 0x3FB99999A0000000, %14 ]
  store float %22, float* %16, align 4
  %23 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 6
  %24 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 0, i32 4, i32 4
  %25 = load i8, i8* %24, align 2, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %21
  %28 = tail call zeroext i1 @_ZN6webrtc11field_trial9IsEnabledEPKc(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.4, i64 0, i64 0)) #11
  %29 = zext i1 %28 to i8
  br label %30

30:                                               ; preds = %21, %27
  %31 = phi i8 [ 1, %21 ], [ %29, %27 ]
  store i8 %31, i8* %23, align 8
  %32 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 9
  tail call void @_ZN6webrtc11ReverbModelC1Ev(%"class.webrtc::ReverbModel"* %32) #11
  tail call void @_ZN6webrtc21ResidualEchoEstimator5ResetEv(%"class.webrtc::ResidualEchoEstimator"* %0)
  ret void
}

declare void @_ZN6webrtc20EchoCanceller3ConfigC1ERKS0_(%"struct.webrtc::EchoCanceller3Config"*, %"struct.webrtc::EchoCanceller3Config"* dereferenceable(560)) unnamed_addr #1

declare void @_ZN6webrtc11ReverbModelC1Ev(%"class.webrtc::ReverbModel"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21ResidualEchoEstimator5ResetEv(%"class.webrtc::ResidualEchoEstimator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 9
  tail call void @_ZN6webrtc11ReverbModel5ResetEv(%"class.webrtc::ReverbModel"* %2) #11
  %3 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 0, i32 9, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %4 to i32
  %6 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 8, i32 0, i64 0
  %7 = insertelement <4 x i32> undef, i32 %5, i32 0
  %8 = shufflevector <4 x i32> %7, <4 x i32> undef, <4 x i32> zeroinitializer
  %9 = bitcast i32* %6 to <4 x i32>*
  store <4 x i32> %8, <4 x i32>* %9, align 4
  %10 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 8, i32 0, i64 4
  %11 = bitcast i32* %10 to <4 x i32>*
  store <4 x i32> %8, <4 x i32>* %11, align 4
  %12 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 8, i32 0, i64 8
  %13 = bitcast i32* %12 to <4 x i32>*
  store <4 x i32> %8, <4 x i32>* %13, align 4
  %14 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 8, i32 0, i64 12
  %15 = bitcast i32* %14 to <4 x i32>*
  store <4 x i32> %8, <4 x i32>* %15, align 4
  %16 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 8, i32 0, i64 16
  %17 = bitcast i32* %16 to <4 x i32>*
  store <4 x i32> %8, <4 x i32>* %17, align 4
  %18 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 8, i32 0, i64 20
  %19 = bitcast i32* %18 to <4 x i32>*
  store <4 x i32> %8, <4 x i32>* %19, align 4
  %20 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 8, i32 0, i64 24
  %21 = bitcast i32* %20 to <4 x i32>*
  store <4 x i32> %8, <4 x i32>* %21, align 4
  %22 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 8, i32 0, i64 28
  %23 = bitcast i32* %22 to <4 x i32>*
  store <4 x i32> %8, <4 x i32>* %23, align 4
  %24 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 8, i32 0, i64 32
  %25 = bitcast i32* %24 to <4 x i32>*
  store <4 x i32> %8, <4 x i32>* %25, align 4
  %26 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 8, i32 0, i64 36
  %27 = bitcast i32* %26 to <4 x i32>*
  store <4 x i32> %8, <4 x i32>* %27, align 4
  %28 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 8, i32 0, i64 40
  %29 = bitcast i32* %28 to <4 x i32>*
  store <4 x i32> %8, <4 x i32>* %29, align 4
  %30 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 8, i32 0, i64 44
  %31 = bitcast i32* %30 to <4 x i32>*
  store <4 x i32> %8, <4 x i32>* %31, align 4
  %32 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 8, i32 0, i64 48
  %33 = bitcast i32* %32 to <4 x i32>*
  store <4 x i32> %8, <4 x i32>* %33, align 4
  %34 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 8, i32 0, i64 52
  %35 = bitcast i32* %34 to <4 x i32>*
  store <4 x i32> %8, <4 x i32>* %35, align 4
  %36 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 8, i32 0, i64 56
  %37 = bitcast i32* %36 to <4 x i32>*
  store <4 x i32> %8, <4 x i32>* %37, align 4
  %38 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 8, i32 0, i64 60
  %39 = bitcast i32* %38 to <4 x i32>*
  store <4 x i32> %8, <4 x i32>* %39, align 4
  %40 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 8, i32 0, i64 64
  store i32 %5, i32* %40, align 4
  %41 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 0, i32 9, i32 1
  %42 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 7, i32 0, i64 0
  %43 = bitcast float* %41 to i32*
  br label %44

44:                                               ; preds = %44, %1
  %45 = phi float* [ %42, %1 ], [ %61, %44 ]
  %46 = phi i64 [ 65, %1 ], [ %62, %44 ]
  %47 = load i32, i32* %43, align 4
  %48 = bitcast float* %45 to i32*
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds float, float* %45, i64 1
  %50 = load i32, i32* %43, align 4
  %51 = bitcast float* %49 to i32*
  store i32 %50, i32* %51, align 4
  %52 = getelementptr inbounds float, float* %45, i64 2
  %53 = load i32, i32* %43, align 4
  %54 = bitcast float* %52 to i32*
  store i32 %53, i32* %54, align 4
  %55 = getelementptr inbounds float, float* %45, i64 3
  %56 = load i32, i32* %43, align 4
  %57 = bitcast float* %55 to i32*
  store i32 %56, i32* %57, align 4
  %58 = getelementptr inbounds float, float* %45, i64 4
  %59 = load i32, i32* %43, align 4
  %60 = bitcast float* %58 to i32*
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds float, float* %45, i64 5
  %62 = add nsw i64 %46, -5
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %44

64:                                               ; preds = %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21ResidualEchoEstimatorD2Ev(%"class.webrtc::ResidualEchoEstimator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 9
  tail call void @_ZN6webrtc11ReverbModelD1Ev(%"class.webrtc::ReverbModel"* %2) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6webrtc11ReverbModelD1Ev(%"class.webrtc::ReverbModel"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21ResidualEchoEstimator8EstimateERKNS_8AecStateERKNS_12RenderBufferEN3rtc9ArrayViewIKNSt3__15arrayIfLm65EEELln4711EEESD_bNS8_ISB_Lln4711EEE(%"class.webrtc::ResidualEchoEstimator"*, %"class.webrtc::AecState"* dereferenceable(3016), %"class.webrtc::RenderBuffer"* nocapture readonly dereferenceable(32), %"struct.std::__1::array"*, i64, %"class.rtc::ArrayView"* nocapture readonly byval(%"class.rtc::ArrayView") align 8, i1 zeroext, %"class.rtc::ArrayView.169"* nocapture readonly byval(%"class.rtc::ArrayView.169") align 8) local_unnamed_addr #0 align 2 {
  %9 = alloca %"struct.std::__1::array", align 16
  %10 = alloca float, align 4
  %11 = alloca float, align 4
  %12 = alloca %"struct.std::__1::array", align 16
  %13 = alloca float, align 4
  %14 = alloca %"struct.std::__1::array", align 16
  %15 = bitcast %"struct.std::__1::array"* %14 to i8*
  %16 = getelementptr inbounds %"class.rtc::ArrayView.169", %"class.rtc::ArrayView.169"* %7, i64 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  tail call void @_ZN6webrtc21ResidualEchoEstimator22UpdateRenderNoisePowerERKNS_12RenderBufferE(%"class.webrtc::ResidualEchoEstimator"* %0, %"class.webrtc::RenderBuffer"* dereferenceable(32) %2)
  %18 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %1, i64 0, i32 9, i32 1
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %198, label %21

21:                                               ; preds = %8
  %22 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %1, i64 0, i32 1, i32 2, i32 9
  %23 = load i8, i8* %22, align 2, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %198, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %1, i64 0, i32 10, i32 0
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %69, label %29

29:                                               ; preds = %25
  %30 = icmp eq i64 %17, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.rtc::ArrayView.169", %"class.rtc::ArrayView.169"* %7, i64 0, i32 0, i32 0
  %33 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %32, align 8
  br label %194

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.rtc::ArrayView", %"class.rtc::ArrayView"* %5, i64 0, i32 0, i32 0
  %36 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %35, align 8
  %37 = getelementptr inbounds %"class.rtc::ArrayView.169", %"class.rtc::ArrayView.169"* %7, i64 0, i32 0, i32 0
  %38 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %37, align 8
  %39 = add i64 %17, -1
  %40 = and i64 %17, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %181, label %42

42:                                               ; preds = %34
  %43 = sub i64 %17, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %66, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %67, %44 ]
  %47 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %36, i64 %45
  %48 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %38, i64 %45, i32 0, i64 0
  %49 = bitcast float* %48 to i8*
  %50 = bitcast %"struct.std::__1::array"* %47 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %49, i8* align 4 %50, i64 260, i1 false) #11
  %51 = or i64 %45, 1
  %52 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %36, i64 %51
  %53 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %38, i64 %51, i32 0, i64 0
  %54 = bitcast float* %53 to i8*
  %55 = bitcast %"struct.std::__1::array"* %52 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %54, i8* align 4 %55, i64 260, i1 false) #11
  %56 = or i64 %45, 2
  %57 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %36, i64 %56
  %58 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %38, i64 %56, i32 0, i64 0
  %59 = bitcast float* %58 to i8*
  %60 = bitcast %"struct.std::__1::array"* %57 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %60, i64 260, i1 false) #11
  %61 = or i64 %45, 3
  %62 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %36, i64 %61
  %63 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %38, i64 %61, i32 0, i64 0
  %64 = bitcast float* %63 to i8*
  %65 = bitcast %"struct.std::__1::array"* %62 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %64, i8* align 4 %65, i64 260, i1 false) #11
  %66 = add nuw i64 %45, 4
  %67 = add i64 %46, -4
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %181, label %44

69:                                               ; preds = %25
  %70 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 6
  %71 = load i8, i8* %70, align 8, !range !2
  %72 = icmp ne i8 %71, 0
  %73 = xor i1 %6, true
  %74 = or i1 %72, %73
  %75 = icmp eq i64 %4, 0
  %76 = select i1 %75, %"struct.std::__1::array"* null, %"struct.std::__1::array"* %3
  %77 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %1, i64 0, i32 12, i32 3, i32 0, i32 0, i32 0
  %78 = load %"class.webrtc::SignalDependentErleEstimator"*, %"class.webrtc::SignalDependentErleEstimator"** %77, align 8
  %79 = icmp eq %"class.webrtc::SignalDependentErleEstimator"* %78, null
  br i1 %79, label %89, label %80

80:                                               ; preds = %69
  br i1 %74, label %81, label %87

81:                                               ; preds = %80
  %82 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %78, i64 0, i32 7
  %83 = load i8, i8* %82, align 8, !range !2
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %78, i64 0, i32 9
  br label %98

87:                                               ; preds = %81, %80
  %88 = getelementptr inbounds %"class.webrtc::SignalDependentErleEstimator", %"class.webrtc::SignalDependentErleEstimator"* %78, i64 0, i32 8
  br label %98

89:                                               ; preds = %69
  br i1 %74, label %90, label %96

90:                                               ; preds = %89
  %91 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %1, i64 0, i32 12, i32 2, i32 0
  %92 = load i8, i8* %91, align 8, !range !2
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %96, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %1, i64 0, i32 12, i32 2, i32 6
  br label %98

96:                                               ; preds = %90, %89
  %97 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %1, i64 0, i32 12, i32 2, i32 5
  br label %98

98:                                               ; preds = %94, %96, %85, %87
  %99 = phi %"class.std::__1::vector.44"* [ %86, %85 ], [ %88, %87 ], [ %95, %94 ], [ %97, %96 ]
  %100 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %99, i64 0, i32 0, i32 0
  %101 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %99, i64 0, i32 0, i32 1
  %103 = bitcast %"struct.std::__1::array"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = ptrtoint %"struct.std::__1::array"* %101 to i64
  %106 = icmp eq i64 %104, %105
  %107 = select i1 %106, %"struct.std::__1::array"* null, %"struct.std::__1::array"* %101
  %108 = getelementptr inbounds %"class.rtc::ArrayView.169", %"class.rtc::ArrayView.169"* %7, i64 0, i32 0, i32 0
  %109 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %108, align 8
  %110 = icmp eq i64 %17, 0
  %111 = select i1 %110, %"struct.std::__1::array"* null, %"struct.std::__1::array"* %109
  br i1 %110, label %194, label %112

112:                                              ; preds = %98, %161
  %113 = phi i64 [ %162, %161 ], [ 0, %98 ]
  %114 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %111, i64 %113
  %115 = add i64 %113, 1
  %116 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %111, i64 %115
  %117 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %107, i64 %115
  %118 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %107, i64 %113
  %119 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %76, i64 %115
  %120 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %76, i64 %113
  %121 = icmp ult %"struct.std::__1::array"* %114, %119
  %122 = icmp ult %"struct.std::__1::array"* %120, %116
  %123 = and i1 %121, %122
  %124 = icmp ult %"struct.std::__1::array"* %114, %117
  %125 = icmp ult %"struct.std::__1::array"* %118, %116
  %126 = and i1 %124, %125
  %127 = or i1 %123, %126
  br i1 %127, label %128, label %138

128:                                              ; preds = %138, %112
  %129 = phi i64 [ 0, %112 ], [ 64, %138 ]
  %130 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %76, i64 %113, i32 0, i64 %129
  %131 = load float, float* %130, align 4
  %132 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %107, i64 %113, i32 0, i64 %129
  %133 = load float, float* %132, align 4
  %134 = fdiv float %131, %133
  %135 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %111, i64 %113, i32 0, i64 %129
  store float %134, float* %135, align 4
  %136 = or i64 %129, 1
  %137 = icmp eq i64 %129, 64
  br i1 %137, label %161, label %164

138:                                              ; preds = %112, %138
  %139 = phi i64 [ %159, %138 ], [ 0, %112 ]
  %140 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %76, i64 %113, i32 0, i64 %139
  %141 = bitcast float* %140 to <4 x float>*
  %142 = load <4 x float>, <4 x float>* %141, align 4, !alias.scope !3
  %143 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %107, i64 %113, i32 0, i64 %139
  %144 = bitcast float* %143 to <4 x float>*
  %145 = load <4 x float>, <4 x float>* %144, align 4, !alias.scope !6
  %146 = fdiv <4 x float> %142, %145
  %147 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %111, i64 %113, i32 0, i64 %139
  %148 = bitcast float* %147 to <4 x float>*
  store <4 x float> %146, <4 x float>* %148, align 4, !alias.scope !8, !noalias !10
  %149 = or i64 %139, 4
  %150 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %76, i64 %113, i32 0, i64 %149
  %151 = bitcast float* %150 to <4 x float>*
  %152 = load <4 x float>, <4 x float>* %151, align 4, !alias.scope !3
  %153 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %107, i64 %113, i32 0, i64 %149
  %154 = bitcast float* %153 to <4 x float>*
  %155 = load <4 x float>, <4 x float>* %154, align 4, !alias.scope !6
  %156 = fdiv <4 x float> %152, %155
  %157 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %111, i64 %113, i32 0, i64 %149
  %158 = bitcast float* %157 to <4 x float>*
  store <4 x float> %156, <4 x float>* %158, align 4, !alias.scope !8, !noalias !10
  %159 = add nuw nsw i64 %139, 8
  %160 = icmp eq i64 %159, 64
  br i1 %160, label %128, label %138, !llvm.loop !11

161:                                              ; preds = %164, %128
  %162 = add nuw i64 %113, 1
  %163 = icmp eq i64 %162, %17
  br i1 %163, label %194, label %112

164:                                              ; preds = %128, %164
  %165 = phi i64 [ %179, %164 ], [ %136, %128 ]
  %166 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %76, i64 %113, i32 0, i64 %165
  %167 = load float, float* %166, align 4
  %168 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %107, i64 %113, i32 0, i64 %165
  %169 = load float, float* %168, align 4
  %170 = fdiv float %167, %169
  %171 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %111, i64 %113, i32 0, i64 %165
  store float %170, float* %171, align 4
  %172 = add nuw nsw i64 %165, 1
  %173 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %76, i64 %113, i32 0, i64 %172
  %174 = load float, float* %173, align 4
  %175 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %107, i64 %113, i32 0, i64 %172
  %176 = load float, float* %175, align 4
  %177 = fdiv float %174, %176
  %178 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %111, i64 %113, i32 0, i64 %172
  store float %177, float* %178, align 4
  %179 = add nuw nsw i64 %165, 2
  %180 = icmp eq i64 %179, 65
  br i1 %180, label %161, label %164, !llvm.loop !13

181:                                              ; preds = %44, %34
  %182 = phi i64 [ 0, %34 ], [ %66, %44 ]
  %183 = icmp eq i64 %40, 0
  br i1 %183, label %194, label %184

184:                                              ; preds = %181, %184
  %185 = phi i64 [ %191, %184 ], [ %182, %181 ]
  %186 = phi i64 [ %192, %184 ], [ %40, %181 ]
  %187 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %36, i64 %185
  %188 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %38, i64 %185, i32 0, i64 0
  %189 = bitcast float* %188 to i8*
  %190 = bitcast %"struct.std::__1::array"* %187 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %189, i8* align 4 %190, i64 260, i1 false) #11
  %191 = add nuw i64 %185, 1
  %192 = add i64 %186, -1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %184, !llvm.loop !14

194:                                              ; preds = %181, %184, %161, %31, %98
  %195 = phi %"struct.std::__1::array"* [ %33, %31 ], [ %109, %98 ], [ %109, %161 ], [ %38, %184 ], [ %38, %181 ]
  %196 = icmp eq i64 %17, 0
  %197 = select i1 %196, %"struct.std::__1::array"* null, %"struct.std::__1::array"* %195
  tail call void @_ZN6webrtc21ResidualEchoEstimator9AddReverbENS0_10ReverbTypeERKNS_8AecStateERKNS_12RenderBufferEN3rtc9ArrayViewINSt3__15arrayIfLm65EEELln4711EEE(%"class.webrtc::ResidualEchoEstimator"* %0, i32 0, %"class.webrtc::AecState"* dereferenceable(3016) %1, %"class.webrtc::RenderBuffer"* dereferenceable(32) %2, %"struct.std::__1::array"* %197, i64 %17)
  br label %941

198:                                              ; preds = %21, %8
  %199 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %1, i64 0, i32 8, i32 0, i32 0, i32 0
  %200 = load %"class.webrtc::TransparentMode"*, %"class.webrtc::TransparentMode"** %199, align 8
  %201 = icmp eq %"class.webrtc::TransparentMode"* %200, null
  br i1 %201, label %202, label %204

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 4
  br label %213

204:                                              ; preds = %198
  %205 = bitcast %"class.webrtc::TransparentMode"* %200 to i1 (%"class.webrtc::TransparentMode"*)***
  %206 = load i1 (%"class.webrtc::TransparentMode"*)**, i1 (%"class.webrtc::TransparentMode"*)*** %205, align 8
  %207 = getelementptr inbounds i1 (%"class.webrtc::TransparentMode"*)*, i1 (%"class.webrtc::TransparentMode"*)** %206, i64 2
  %208 = load i1 (%"class.webrtc::TransparentMode"*)*, i1 (%"class.webrtc::TransparentMode"*)** %207, align 8
  %209 = tail call zeroext i1 %208(%"class.webrtc::TransparentMode"* nonnull %200) #11
  %210 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 2
  %211 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 4
  %212 = select i1 %209, float* %210, float* %211
  br label %213

213:                                              ; preds = %202, %204
  %214 = phi float* [ %203, %202 ], [ %212, %204 ]
  %215 = load float, float* %214, align 4
  %216 = fmul float %215, %215
  %217 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %1, i64 0, i32 10, i32 0
  %218 = load i8, i8* %217, align 1, !range !2
  %219 = icmp eq i8 %218, 0
  br i1 %219, label %257, label %220

220:                                              ; preds = %213
  %221 = icmp eq i64 %17, 0
  br i1 %221, label %923, label %222

222:                                              ; preds = %220
  %223 = getelementptr inbounds %"class.rtc::ArrayView", %"class.rtc::ArrayView"* %5, i64 0, i32 0, i32 0
  %224 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %223, align 8
  %225 = getelementptr inbounds %"class.rtc::ArrayView.169", %"class.rtc::ArrayView.169"* %7, i64 0, i32 0, i32 0
  %226 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %225, align 8
  %227 = add i64 %17, -1
  %228 = and i64 %17, 3
  %229 = icmp ult i64 %227, 3
  br i1 %229, label %910, label %230

230:                                              ; preds = %222
  %231 = sub i64 %17, %228
  br label %232

232:                                              ; preds = %232, %230
  %233 = phi i64 [ 0, %230 ], [ %254, %232 ]
  %234 = phi i64 [ %231, %230 ], [ %255, %232 ]
  %235 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %224, i64 %233
  %236 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %226, i64 %233, i32 0, i64 0
  %237 = bitcast float* %236 to i8*
  %238 = bitcast %"struct.std::__1::array"* %235 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %237, i8* align 4 %238, i64 260, i1 false) #11
  %239 = or i64 %233, 1
  %240 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %224, i64 %239
  %241 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %226, i64 %239, i32 0, i64 0
  %242 = bitcast float* %241 to i8*
  %243 = bitcast %"struct.std::__1::array"* %240 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %242, i8* align 4 %243, i64 260, i1 false) #11
  %244 = or i64 %233, 2
  %245 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %224, i64 %244
  %246 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %226, i64 %244, i32 0, i64 0
  %247 = bitcast float* %246 to i8*
  %248 = bitcast %"struct.std::__1::array"* %245 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %247, i8* align 4 %248, i64 260, i1 false) #11
  %249 = or i64 %233, 3
  %250 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %224, i64 %249
  %251 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %226, i64 %249, i32 0, i64 0
  %252 = bitcast float* %251 to i8*
  %253 = bitcast %"struct.std::__1::array"* %250 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %252, i8* align 4 %253, i64 260, i1 false) #11
  %254 = add nuw i64 %233, 4
  %255 = add i64 %234, -4
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %910, label %232

257:                                              ; preds = %213
  %258 = bitcast %"struct.std::__1::array"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 260, i8* nonnull %258) #11
  %259 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 1
  %260 = load i64, i64* %259, align 8
  %261 = getelementptr inbounds %"class.webrtc::RenderBuffer", %"class.webrtc::RenderBuffer"* %2, i64 0, i32 1
  %262 = load %"struct.webrtc::SpectrumBuffer"*, %"struct.webrtc::SpectrumBuffer"** %261, align 8
  %263 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %1, i64 0, i32 7, i32 3
  %264 = load i32, i32* %263, align 8
  %265 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 0, i32 9, i32 5
  %266 = load i64, i64* %265, align 8
  %267 = trunc i64 %266 to i32
  %268 = sub nsw i32 %264, %267
  %269 = icmp sgt i32 %268, 0
  %270 = select i1 %269, i32 %268, i32 0
  %271 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 0, i32 9, i32 6
  %272 = load i64, i64* %271, align 8
  %273 = trunc i64 %272 to i32
  %274 = getelementptr inbounds %"struct.webrtc::SpectrumBuffer", %"struct.webrtc::SpectrumBuffer"* %262, i64 0, i32 3
  %275 = load i32, i32* %274, align 4
  %276 = getelementptr inbounds %"struct.webrtc::SpectrumBuffer", %"struct.webrtc::SpectrumBuffer"* %262, i64 0, i32 0
  %277 = load i32, i32* %276, align 8
  %278 = add i32 %277, %275
  %279 = add i32 %278, %270
  %280 = add i32 %264, 1
  %281 = add i32 %280, %273
  %282 = add i32 %281, %278
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %258, i8 0, i64 260, i1 false) #11
  %283 = bitcast %"struct.std::__1::array"* %9 to i8*
  %284 = srem i32 %279, %277
  %285 = srem i32 %282, %277
  %286 = icmp eq i64 %260, 1
  %287 = icmp eq i32 %284, %285
  br i1 %286, label %421, label %288

288:                                              ; preds = %257
  br i1 %287, label %751, label %289

289:                                              ; preds = %288
  %290 = icmp eq i64 %260, 0
  %291 = getelementptr inbounds %"struct.webrtc::SpectrumBuffer", %"struct.webrtc::SpectrumBuffer"* %262, i64 0, i32 1, i32 0, i32 0
  %292 = add nsw i32 %277, -1
  %293 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 64
  %294 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 64
  %295 = bitcast %"struct.std::__1::array"* %9 to <4 x float>*
  %296 = bitcast %"struct.std::__1::array"* %9 to <4 x float>*
  %297 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 4
  %298 = bitcast float* %297 to <4 x float>*
  %299 = bitcast float* %297 to <4 x float>*
  %300 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 8
  %301 = bitcast float* %300 to <4 x float>*
  %302 = bitcast float* %300 to <4 x float>*
  %303 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 12
  %304 = bitcast float* %303 to <4 x float>*
  %305 = bitcast float* %303 to <4 x float>*
  %306 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 16
  %307 = bitcast float* %306 to <4 x float>*
  %308 = bitcast float* %306 to <4 x float>*
  %309 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 20
  %310 = bitcast float* %309 to <4 x float>*
  %311 = bitcast float* %309 to <4 x float>*
  %312 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 24
  %313 = bitcast float* %312 to <4 x float>*
  %314 = bitcast float* %312 to <4 x float>*
  %315 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 28
  %316 = bitcast float* %315 to <4 x float>*
  %317 = bitcast float* %315 to <4 x float>*
  %318 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 32
  %319 = bitcast float* %318 to <4 x float>*
  %320 = bitcast float* %318 to <4 x float>*
  %321 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 36
  %322 = bitcast float* %321 to <4 x float>*
  %323 = bitcast float* %321 to <4 x float>*
  %324 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 40
  %325 = bitcast float* %324 to <4 x float>*
  %326 = bitcast float* %324 to <4 x float>*
  %327 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 44
  %328 = bitcast float* %327 to <4 x float>*
  %329 = bitcast float* %327 to <4 x float>*
  %330 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 48
  %331 = bitcast float* %330 to <4 x float>*
  %332 = bitcast float* %330 to <4 x float>*
  %333 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 52
  %334 = bitcast float* %333 to <4 x float>*
  %335 = bitcast float* %333 to <4 x float>*
  %336 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 56
  %337 = bitcast float* %336 to <4 x float>*
  %338 = bitcast float* %336 to <4 x float>*
  %339 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 60
  %340 = bitcast float* %339 to <4 x float>*
  %341 = bitcast float* %339 to <4 x float>*
  %342 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 64
  %343 = bitcast %"struct.std::__1::array"* %12 to <4 x float>*
  %344 = bitcast %"struct.std::__1::array"* %9 to <4 x float>*
  %345 = bitcast %"struct.std::__1::array"* %12 to <4 x float>*
  %346 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 4
  %347 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 4
  %348 = bitcast float* %346 to <4 x float>*
  %349 = bitcast float* %347 to <4 x float>*
  %350 = bitcast float* %346 to <4 x float>*
  %351 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 8
  %352 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 8
  %353 = bitcast float* %351 to <4 x float>*
  %354 = bitcast float* %352 to <4 x float>*
  %355 = bitcast float* %351 to <4 x float>*
  %356 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 12
  %357 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 12
  %358 = bitcast float* %356 to <4 x float>*
  %359 = bitcast float* %357 to <4 x float>*
  %360 = bitcast float* %356 to <4 x float>*
  %361 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 16
  %362 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 16
  %363 = bitcast float* %361 to <4 x float>*
  %364 = bitcast float* %362 to <4 x float>*
  %365 = bitcast float* %361 to <4 x float>*
  %366 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 20
  %367 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 20
  %368 = bitcast float* %366 to <4 x float>*
  %369 = bitcast float* %367 to <4 x float>*
  %370 = bitcast float* %366 to <4 x float>*
  %371 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 24
  %372 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 24
  %373 = bitcast float* %371 to <4 x float>*
  %374 = bitcast float* %372 to <4 x float>*
  %375 = bitcast float* %371 to <4 x float>*
  %376 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 28
  %377 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 28
  %378 = bitcast float* %376 to <4 x float>*
  %379 = bitcast float* %377 to <4 x float>*
  %380 = bitcast float* %376 to <4 x float>*
  %381 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 32
  %382 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 32
  %383 = bitcast float* %381 to <4 x float>*
  %384 = bitcast float* %382 to <4 x float>*
  %385 = bitcast float* %381 to <4 x float>*
  %386 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 36
  %387 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 36
  %388 = bitcast float* %386 to <4 x float>*
  %389 = bitcast float* %387 to <4 x float>*
  %390 = bitcast float* %386 to <4 x float>*
  %391 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 40
  %392 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 40
  %393 = bitcast float* %391 to <4 x float>*
  %394 = bitcast float* %392 to <4 x float>*
  %395 = bitcast float* %391 to <4 x float>*
  %396 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 44
  %397 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 44
  %398 = bitcast float* %396 to <4 x float>*
  %399 = bitcast float* %397 to <4 x float>*
  %400 = bitcast float* %396 to <4 x float>*
  %401 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 48
  %402 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 48
  %403 = bitcast float* %401 to <4 x float>*
  %404 = bitcast float* %402 to <4 x float>*
  %405 = bitcast float* %401 to <4 x float>*
  %406 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 52
  %407 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 52
  %408 = bitcast float* %406 to <4 x float>*
  %409 = bitcast float* %407 to <4 x float>*
  %410 = bitcast float* %406 to <4 x float>*
  %411 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 56
  %412 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 56
  %413 = bitcast float* %411 to <4 x float>*
  %414 = bitcast float* %412 to <4 x float>*
  %415 = bitcast float* %411 to <4 x float>*
  %416 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 60
  %417 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 60
  %418 = bitcast float* %416 to <4 x float>*
  %419 = bitcast float* %417 to <4 x float>*
  %420 = bitcast float* %416 to <4 x float>*
  br label %583

421:                                              ; preds = %257
  br i1 %287, label %751, label %422

422:                                              ; preds = %421
  %423 = getelementptr inbounds %"struct.webrtc::SpectrumBuffer", %"struct.webrtc::SpectrumBuffer"* %262, i64 0, i32 1, i32 0, i32 0
  %424 = add nsw i32 %277, -1
  %425 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %423, align 8
  %426 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 64
  %427 = bitcast %"struct.std::__1::array"* %12 to <4 x float>*
  %428 = bitcast %"struct.std::__1::array"* %12 to <4 x float>*
  %429 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 4
  %430 = bitcast float* %429 to <4 x float>*
  %431 = bitcast float* %429 to <4 x float>*
  %432 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 8
  %433 = bitcast float* %432 to <4 x float>*
  %434 = bitcast float* %432 to <4 x float>*
  %435 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 12
  %436 = bitcast float* %435 to <4 x float>*
  %437 = bitcast float* %435 to <4 x float>*
  %438 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 16
  %439 = bitcast float* %438 to <4 x float>*
  %440 = bitcast float* %438 to <4 x float>*
  %441 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 20
  %442 = bitcast float* %441 to <4 x float>*
  %443 = bitcast float* %441 to <4 x float>*
  %444 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 24
  %445 = bitcast float* %444 to <4 x float>*
  %446 = bitcast float* %444 to <4 x float>*
  %447 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 28
  %448 = bitcast float* %447 to <4 x float>*
  %449 = bitcast float* %447 to <4 x float>*
  %450 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 32
  %451 = bitcast float* %450 to <4 x float>*
  %452 = bitcast float* %450 to <4 x float>*
  %453 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 36
  %454 = bitcast float* %453 to <4 x float>*
  %455 = bitcast float* %453 to <4 x float>*
  %456 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 40
  %457 = bitcast float* %456 to <4 x float>*
  %458 = bitcast float* %456 to <4 x float>*
  %459 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 44
  %460 = bitcast float* %459 to <4 x float>*
  %461 = bitcast float* %459 to <4 x float>*
  %462 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 48
  %463 = bitcast float* %462 to <4 x float>*
  %464 = bitcast float* %462 to <4 x float>*
  %465 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 52
  %466 = bitcast float* %465 to <4 x float>*
  %467 = bitcast float* %465 to <4 x float>*
  %468 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 56
  %469 = bitcast float* %468 to <4 x float>*
  %470 = bitcast float* %468 to <4 x float>*
  %471 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 60
  %472 = bitcast float* %471 to <4 x float>*
  %473 = bitcast float* %471 to <4 x float>*
  br label %474

474:                                              ; preds = %474, %422
  %475 = phi i32 [ %284, %422 ], [ %581, %474 ]
  %476 = sext i32 %475 to i64
  %477 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %425, i64 %476, i32 0, i32 0
  %478 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %477, align 8
  %479 = load <4 x float>, <4 x float>* %427, align 16
  %480 = bitcast %"struct.std::__1::array"* %478 to <4 x float>*
  %481 = load <4 x float>, <4 x float>* %480, align 4
  %482 = fcmp olt <4 x float> %479, %481
  %483 = select <4 x i1> %482, <4 x float> %481, <4 x float> %479
  store <4 x float> %483, <4 x float>* %428, align 16
  %484 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %478, i64 0, i32 0, i64 4
  %485 = load <4 x float>, <4 x float>* %430, align 16
  %486 = bitcast float* %484 to <4 x float>*
  %487 = load <4 x float>, <4 x float>* %486, align 4
  %488 = fcmp olt <4 x float> %485, %487
  %489 = select <4 x i1> %488, <4 x float> %487, <4 x float> %485
  store <4 x float> %489, <4 x float>* %431, align 16
  %490 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %478, i64 0, i32 0, i64 8
  %491 = load <4 x float>, <4 x float>* %433, align 16
  %492 = bitcast float* %490 to <4 x float>*
  %493 = load <4 x float>, <4 x float>* %492, align 4
  %494 = fcmp olt <4 x float> %491, %493
  %495 = select <4 x i1> %494, <4 x float> %493, <4 x float> %491
  store <4 x float> %495, <4 x float>* %434, align 16
  %496 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %478, i64 0, i32 0, i64 12
  %497 = load <4 x float>, <4 x float>* %436, align 16
  %498 = bitcast float* %496 to <4 x float>*
  %499 = load <4 x float>, <4 x float>* %498, align 4
  %500 = fcmp olt <4 x float> %497, %499
  %501 = select <4 x i1> %500, <4 x float> %499, <4 x float> %497
  store <4 x float> %501, <4 x float>* %437, align 16
  %502 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %478, i64 0, i32 0, i64 16
  %503 = load <4 x float>, <4 x float>* %439, align 16
  %504 = bitcast float* %502 to <4 x float>*
  %505 = load <4 x float>, <4 x float>* %504, align 4
  %506 = fcmp olt <4 x float> %503, %505
  %507 = select <4 x i1> %506, <4 x float> %505, <4 x float> %503
  store <4 x float> %507, <4 x float>* %440, align 16
  %508 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %478, i64 0, i32 0, i64 20
  %509 = load <4 x float>, <4 x float>* %442, align 16
  %510 = bitcast float* %508 to <4 x float>*
  %511 = load <4 x float>, <4 x float>* %510, align 4
  %512 = fcmp olt <4 x float> %509, %511
  %513 = select <4 x i1> %512, <4 x float> %511, <4 x float> %509
  store <4 x float> %513, <4 x float>* %443, align 16
  %514 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %478, i64 0, i32 0, i64 24
  %515 = load <4 x float>, <4 x float>* %445, align 16
  %516 = bitcast float* %514 to <4 x float>*
  %517 = load <4 x float>, <4 x float>* %516, align 4
  %518 = fcmp olt <4 x float> %515, %517
  %519 = select <4 x i1> %518, <4 x float> %517, <4 x float> %515
  store <4 x float> %519, <4 x float>* %446, align 16
  %520 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %478, i64 0, i32 0, i64 28
  %521 = load <4 x float>, <4 x float>* %448, align 16
  %522 = bitcast float* %520 to <4 x float>*
  %523 = load <4 x float>, <4 x float>* %522, align 4
  %524 = fcmp olt <4 x float> %521, %523
  %525 = select <4 x i1> %524, <4 x float> %523, <4 x float> %521
  store <4 x float> %525, <4 x float>* %449, align 16
  %526 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %478, i64 0, i32 0, i64 32
  %527 = load <4 x float>, <4 x float>* %451, align 16
  %528 = bitcast float* %526 to <4 x float>*
  %529 = load <4 x float>, <4 x float>* %528, align 4
  %530 = fcmp olt <4 x float> %527, %529
  %531 = select <4 x i1> %530, <4 x float> %529, <4 x float> %527
  store <4 x float> %531, <4 x float>* %452, align 16
  %532 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %478, i64 0, i32 0, i64 36
  %533 = load <4 x float>, <4 x float>* %454, align 16
  %534 = bitcast float* %532 to <4 x float>*
  %535 = load <4 x float>, <4 x float>* %534, align 4
  %536 = fcmp olt <4 x float> %533, %535
  %537 = select <4 x i1> %536, <4 x float> %535, <4 x float> %533
  store <4 x float> %537, <4 x float>* %455, align 16
  %538 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %478, i64 0, i32 0, i64 40
  %539 = load <4 x float>, <4 x float>* %457, align 16
  %540 = bitcast float* %538 to <4 x float>*
  %541 = load <4 x float>, <4 x float>* %540, align 4
  %542 = fcmp olt <4 x float> %539, %541
  %543 = select <4 x i1> %542, <4 x float> %541, <4 x float> %539
  store <4 x float> %543, <4 x float>* %458, align 16
  %544 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %478, i64 0, i32 0, i64 44
  %545 = load <4 x float>, <4 x float>* %460, align 16
  %546 = bitcast float* %544 to <4 x float>*
  %547 = load <4 x float>, <4 x float>* %546, align 4
  %548 = fcmp olt <4 x float> %545, %547
  %549 = select <4 x i1> %548, <4 x float> %547, <4 x float> %545
  store <4 x float> %549, <4 x float>* %461, align 16
  %550 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %478, i64 0, i32 0, i64 48
  %551 = load <4 x float>, <4 x float>* %463, align 16
  %552 = bitcast float* %550 to <4 x float>*
  %553 = load <4 x float>, <4 x float>* %552, align 4
  %554 = fcmp olt <4 x float> %551, %553
  %555 = select <4 x i1> %554, <4 x float> %553, <4 x float> %551
  store <4 x float> %555, <4 x float>* %464, align 16
  %556 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %478, i64 0, i32 0, i64 52
  %557 = load <4 x float>, <4 x float>* %466, align 16
  %558 = bitcast float* %556 to <4 x float>*
  %559 = load <4 x float>, <4 x float>* %558, align 4
  %560 = fcmp olt <4 x float> %557, %559
  %561 = select <4 x i1> %560, <4 x float> %559, <4 x float> %557
  store <4 x float> %561, <4 x float>* %467, align 16
  %562 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %478, i64 0, i32 0, i64 56
  %563 = load <4 x float>, <4 x float>* %469, align 16
  %564 = bitcast float* %562 to <4 x float>*
  %565 = load <4 x float>, <4 x float>* %564, align 4
  %566 = fcmp olt <4 x float> %563, %565
  %567 = select <4 x i1> %566, <4 x float> %565, <4 x float> %563
  store <4 x float> %567, <4 x float>* %470, align 16
  %568 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %478, i64 0, i32 0, i64 60
  %569 = load <4 x float>, <4 x float>* %472, align 16
  %570 = bitcast float* %568 to <4 x float>*
  %571 = load <4 x float>, <4 x float>* %570, align 4
  %572 = fcmp olt <4 x float> %569, %571
  %573 = select <4 x i1> %572, <4 x float> %571, <4 x float> %569
  store <4 x float> %573, <4 x float>* %473, align 16
  %574 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %478, i64 0, i32 0, i64 64
  %575 = load float, float* %426, align 16
  %576 = load float, float* %574, align 4
  %577 = fcmp olt float %575, %576
  %578 = select i1 %577, float %576, float %575
  store float %578, float* %426, align 16
  %579 = icmp sgt i32 %424, %475
  %580 = add nsw i32 %475, 1
  %581 = select i1 %579, i32 %580, i32 0
  %582 = icmp eq i32 %581, %285
  br i1 %582, label %751, label %474

583:                                              ; preds = %678, %289
  %584 = phi i32 [ %284, %289 ], [ %749, %678 ]
  call void @llvm.lifetime.start.p0i8(i64 260, i8* nonnull %283) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %283, i8 0, i64 260, i1 false) #11
  br i1 %290, label %678, label %585

585:                                              ; preds = %583
  %586 = sext i32 %584 to i64
  %587 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %291, align 8
  %588 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %587, i64 %586, i32 0, i32 0
  %589 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %588, align 8
  br label %590

590:                                              ; preds = %585, %590
  %591 = phi i64 [ 0, %585 ], [ %676, %590 ]
  %592 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %589, i64 %591, i32 0, i64 0
  %593 = bitcast float* %592 to <4 x float>*
  %594 = load <4 x float>, <4 x float>* %593, align 4
  %595 = load <4 x float>, <4 x float>* %295, align 16
  %596 = fadd <4 x float> %594, %595
  store <4 x float> %596, <4 x float>* %296, align 16
  %597 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %589, i64 %591, i32 0, i64 4
  %598 = bitcast float* %597 to <4 x float>*
  %599 = load <4 x float>, <4 x float>* %598, align 4
  %600 = load <4 x float>, <4 x float>* %298, align 16
  %601 = fadd <4 x float> %599, %600
  store <4 x float> %601, <4 x float>* %299, align 16
  %602 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %589, i64 %591, i32 0, i64 8
  %603 = bitcast float* %602 to <4 x float>*
  %604 = load <4 x float>, <4 x float>* %603, align 4
  %605 = load <4 x float>, <4 x float>* %301, align 16
  %606 = fadd <4 x float> %604, %605
  store <4 x float> %606, <4 x float>* %302, align 16
  %607 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %589, i64 %591, i32 0, i64 12
  %608 = bitcast float* %607 to <4 x float>*
  %609 = load <4 x float>, <4 x float>* %608, align 4
  %610 = load <4 x float>, <4 x float>* %304, align 16
  %611 = fadd <4 x float> %609, %610
  store <4 x float> %611, <4 x float>* %305, align 16
  %612 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %589, i64 %591, i32 0, i64 16
  %613 = bitcast float* %612 to <4 x float>*
  %614 = load <4 x float>, <4 x float>* %613, align 4
  %615 = load <4 x float>, <4 x float>* %307, align 16
  %616 = fadd <4 x float> %614, %615
  store <4 x float> %616, <4 x float>* %308, align 16
  %617 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %589, i64 %591, i32 0, i64 20
  %618 = bitcast float* %617 to <4 x float>*
  %619 = load <4 x float>, <4 x float>* %618, align 4
  %620 = load <4 x float>, <4 x float>* %310, align 16
  %621 = fadd <4 x float> %619, %620
  store <4 x float> %621, <4 x float>* %311, align 16
  %622 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %589, i64 %591, i32 0, i64 24
  %623 = bitcast float* %622 to <4 x float>*
  %624 = load <4 x float>, <4 x float>* %623, align 4
  %625 = load <4 x float>, <4 x float>* %313, align 16
  %626 = fadd <4 x float> %624, %625
  store <4 x float> %626, <4 x float>* %314, align 16
  %627 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %589, i64 %591, i32 0, i64 28
  %628 = bitcast float* %627 to <4 x float>*
  %629 = load <4 x float>, <4 x float>* %628, align 4
  %630 = load <4 x float>, <4 x float>* %316, align 16
  %631 = fadd <4 x float> %629, %630
  store <4 x float> %631, <4 x float>* %317, align 16
  %632 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %589, i64 %591, i32 0, i64 32
  %633 = bitcast float* %632 to <4 x float>*
  %634 = load <4 x float>, <4 x float>* %633, align 4
  %635 = load <4 x float>, <4 x float>* %319, align 16
  %636 = fadd <4 x float> %634, %635
  store <4 x float> %636, <4 x float>* %320, align 16
  %637 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %589, i64 %591, i32 0, i64 36
  %638 = bitcast float* %637 to <4 x float>*
  %639 = load <4 x float>, <4 x float>* %638, align 4
  %640 = load <4 x float>, <4 x float>* %322, align 16
  %641 = fadd <4 x float> %639, %640
  store <4 x float> %641, <4 x float>* %323, align 16
  %642 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %589, i64 %591, i32 0, i64 40
  %643 = bitcast float* %642 to <4 x float>*
  %644 = load <4 x float>, <4 x float>* %643, align 4
  %645 = load <4 x float>, <4 x float>* %325, align 16
  %646 = fadd <4 x float> %644, %645
  store <4 x float> %646, <4 x float>* %326, align 16
  %647 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %589, i64 %591, i32 0, i64 44
  %648 = bitcast float* %647 to <4 x float>*
  %649 = load <4 x float>, <4 x float>* %648, align 4
  %650 = load <4 x float>, <4 x float>* %328, align 16
  %651 = fadd <4 x float> %649, %650
  store <4 x float> %651, <4 x float>* %329, align 16
  %652 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %589, i64 %591, i32 0, i64 48
  %653 = bitcast float* %652 to <4 x float>*
  %654 = load <4 x float>, <4 x float>* %653, align 4
  %655 = load <4 x float>, <4 x float>* %331, align 16
  %656 = fadd <4 x float> %654, %655
  store <4 x float> %656, <4 x float>* %332, align 16
  %657 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %589, i64 %591, i32 0, i64 52
  %658 = bitcast float* %657 to <4 x float>*
  %659 = load <4 x float>, <4 x float>* %658, align 4
  %660 = load <4 x float>, <4 x float>* %334, align 16
  %661 = fadd <4 x float> %659, %660
  store <4 x float> %661, <4 x float>* %335, align 16
  %662 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %589, i64 %591, i32 0, i64 56
  %663 = bitcast float* %662 to <4 x float>*
  %664 = load <4 x float>, <4 x float>* %663, align 4
  %665 = load <4 x float>, <4 x float>* %337, align 16
  %666 = fadd <4 x float> %664, %665
  store <4 x float> %666, <4 x float>* %338, align 16
  %667 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %589, i64 %591, i32 0, i64 60
  %668 = bitcast float* %667 to <4 x float>*
  %669 = load <4 x float>, <4 x float>* %668, align 4
  %670 = load <4 x float>, <4 x float>* %340, align 16
  %671 = fadd <4 x float> %669, %670
  store <4 x float> %671, <4 x float>* %341, align 16
  %672 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %589, i64 %591, i32 0, i64 64
  %673 = load float, float* %672, align 4
  %674 = load float, float* %342, align 16
  %675 = fadd float %673, %674
  store float %675, float* %342, align 16
  %676 = add nuw i64 %591, 1
  %677 = icmp eq i64 %676, %260
  br i1 %677, label %678, label %590

678:                                              ; preds = %590, %583
  %679 = load <4 x float>, <4 x float>* %343, align 16
  %680 = load <4 x float>, <4 x float>* %344, align 16
  %681 = fcmp olt <4 x float> %679, %680
  %682 = select <4 x i1> %681, <4 x float> %680, <4 x float> %679
  store <4 x float> %682, <4 x float>* %345, align 16
  %683 = load <4 x float>, <4 x float>* %348, align 16
  %684 = load <4 x float>, <4 x float>* %349, align 16
  %685 = fcmp olt <4 x float> %683, %684
  %686 = select <4 x i1> %685, <4 x float> %684, <4 x float> %683
  store <4 x float> %686, <4 x float>* %350, align 16
  %687 = load <4 x float>, <4 x float>* %353, align 16
  %688 = load <4 x float>, <4 x float>* %354, align 16
  %689 = fcmp olt <4 x float> %687, %688
  %690 = select <4 x i1> %689, <4 x float> %688, <4 x float> %687
  store <4 x float> %690, <4 x float>* %355, align 16
  %691 = load <4 x float>, <4 x float>* %358, align 16
  %692 = load <4 x float>, <4 x float>* %359, align 16
  %693 = fcmp olt <4 x float> %691, %692
  %694 = select <4 x i1> %693, <4 x float> %692, <4 x float> %691
  store <4 x float> %694, <4 x float>* %360, align 16
  %695 = load <4 x float>, <4 x float>* %363, align 16
  %696 = load <4 x float>, <4 x float>* %364, align 16
  %697 = fcmp olt <4 x float> %695, %696
  %698 = select <4 x i1> %697, <4 x float> %696, <4 x float> %695
  store <4 x float> %698, <4 x float>* %365, align 16
  %699 = load <4 x float>, <4 x float>* %368, align 16
  %700 = load <4 x float>, <4 x float>* %369, align 16
  %701 = fcmp olt <4 x float> %699, %700
  %702 = select <4 x i1> %701, <4 x float> %700, <4 x float> %699
  store <4 x float> %702, <4 x float>* %370, align 16
  %703 = load <4 x float>, <4 x float>* %373, align 16
  %704 = load <4 x float>, <4 x float>* %374, align 16
  %705 = fcmp olt <4 x float> %703, %704
  %706 = select <4 x i1> %705, <4 x float> %704, <4 x float> %703
  store <4 x float> %706, <4 x float>* %375, align 16
  %707 = load <4 x float>, <4 x float>* %378, align 16
  %708 = load <4 x float>, <4 x float>* %379, align 16
  %709 = fcmp olt <4 x float> %707, %708
  %710 = select <4 x i1> %709, <4 x float> %708, <4 x float> %707
  store <4 x float> %710, <4 x float>* %380, align 16
  %711 = load <4 x float>, <4 x float>* %383, align 16
  %712 = load <4 x float>, <4 x float>* %384, align 16
  %713 = fcmp olt <4 x float> %711, %712
  %714 = select <4 x i1> %713, <4 x float> %712, <4 x float> %711
  store <4 x float> %714, <4 x float>* %385, align 16
  %715 = load <4 x float>, <4 x float>* %388, align 16
  %716 = load <4 x float>, <4 x float>* %389, align 16
  %717 = fcmp olt <4 x float> %715, %716
  %718 = select <4 x i1> %717, <4 x float> %716, <4 x float> %715
  store <4 x float> %718, <4 x float>* %390, align 16
  %719 = load <4 x float>, <4 x float>* %393, align 16
  %720 = load <4 x float>, <4 x float>* %394, align 16
  %721 = fcmp olt <4 x float> %719, %720
  %722 = select <4 x i1> %721, <4 x float> %720, <4 x float> %719
  store <4 x float> %722, <4 x float>* %395, align 16
  %723 = load <4 x float>, <4 x float>* %398, align 16
  %724 = load <4 x float>, <4 x float>* %399, align 16
  %725 = fcmp olt <4 x float> %723, %724
  %726 = select <4 x i1> %725, <4 x float> %724, <4 x float> %723
  store <4 x float> %726, <4 x float>* %400, align 16
  %727 = load <4 x float>, <4 x float>* %403, align 16
  %728 = load <4 x float>, <4 x float>* %404, align 16
  %729 = fcmp olt <4 x float> %727, %728
  %730 = select <4 x i1> %729, <4 x float> %728, <4 x float> %727
  store <4 x float> %730, <4 x float>* %405, align 16
  %731 = load <4 x float>, <4 x float>* %408, align 16
  %732 = load <4 x float>, <4 x float>* %409, align 16
  %733 = fcmp olt <4 x float> %731, %732
  %734 = select <4 x i1> %733, <4 x float> %732, <4 x float> %731
  store <4 x float> %734, <4 x float>* %410, align 16
  %735 = load <4 x float>, <4 x float>* %413, align 16
  %736 = load <4 x float>, <4 x float>* %414, align 16
  %737 = fcmp olt <4 x float> %735, %736
  %738 = select <4 x i1> %737, <4 x float> %736, <4 x float> %735
  store <4 x float> %738, <4 x float>* %415, align 16
  %739 = load <4 x float>, <4 x float>* %418, align 16
  %740 = load <4 x float>, <4 x float>* %419, align 16
  %741 = fcmp olt <4 x float> %739, %740
  %742 = select <4 x i1> %741, <4 x float> %740, <4 x float> %739
  store <4 x float> %742, <4 x float>* %420, align 16
  %743 = load float, float* %293, align 16
  %744 = load float, float* %294, align 16
  %745 = fcmp olt float %743, %744
  %746 = select i1 %745, float %744, float %743
  store float %746, float* %293, align 16
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %283) #11
  %747 = icmp sgt i32 %292, %584
  %748 = add nsw i32 %584, 1
  %749 = select i1 %747, i32 %748, i32 0
  %750 = icmp eq i32 %749, %285
  br i1 %750, label %751, label %583

751:                                              ; preds = %678, %474, %288, %421
  %752 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %1, i64 0, i32 1, i32 5, i32 6
  %753 = load i8, i8* %752, align 4, !range !2
  %754 = icmp eq i8 %753, 0
  br i1 %754, label %755, label %779

755:                                              ; preds = %751
  %756 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 0, i32 9, i32 3
  %757 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 0, i32 9, i32 4
  %758 = load float, float* %756, align 8
  %759 = bitcast float* %10 to i8*
  %760 = bitcast float* %11 to i8*
  br label %761

761:                                              ; preds = %776, %755
  %762 = phi i64 [ 0, %755 ], [ %777, %776 ]
  %763 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 %762
  %764 = load float, float* %763, align 4
  %765 = fcmp ogt float %758, %764
  br i1 %765, label %766, label %776

766:                                              ; preds = %761
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %759)
  store float 0.000000e+00, float* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %760)
  %767 = load float, float* %757, align 4
  %768 = fsub float %758, %764
  %769 = fmul float %768, %767
  %770 = fsub float %764, %769
  store float %770, float* %11, align 4
  %771 = fcmp ogt float %770, 0.000000e+00
  %772 = select i1 %771, float* %11, float* %10
  %773 = bitcast float* %772 to i32*
  %774 = load i32, i32* %773, align 4
  %775 = bitcast float* %763 to i32*
  store i32 %774, i32* %775, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %760)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %759)
  br label %776

776:                                              ; preds = %766, %761
  %777 = add nuw nsw i64 %762, 1
  %778 = icmp eq i64 %777, 65
  br i1 %778, label %779, label %761

779:                                              ; preds = %776, %751
  %780 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 0, i32 9, i32 2
  %781 = load float, float* %780, align 4
  %782 = bitcast float* %13 to i8*
  br label %895

783:                                              ; preds = %895
  %784 = getelementptr inbounds %"class.rtc::ArrayView.169", %"class.rtc::ArrayView.169"* %7, i64 0, i32 0, i32 0
  %785 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %784, align 8
  %786 = icmp eq i64 %17, 0
  %787 = select i1 %786, %"struct.std::__1::array"* null, %"struct.std::__1::array"* %785
  br i1 %786, label %894, label %788

788:                                              ; preds = %783
  %789 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 64
  %790 = insertelement <4 x float> undef, float %216, i32 0
  %791 = shufflevector <4 x float> %790, <4 x float> undef, <4 x i32> zeroinitializer
  %792 = bitcast %"struct.std::__1::array"* %12 to <4 x float>*
  %793 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 4
  %794 = bitcast float* %793 to <4 x float>*
  %795 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 8
  %796 = bitcast float* %795 to <4 x float>*
  %797 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 12
  %798 = bitcast float* %797 to <4 x float>*
  %799 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 16
  %800 = bitcast float* %799 to <4 x float>*
  %801 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 20
  %802 = bitcast float* %801 to <4 x float>*
  %803 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 24
  %804 = bitcast float* %803 to <4 x float>*
  %805 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 28
  %806 = bitcast float* %805 to <4 x float>*
  %807 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 32
  %808 = bitcast float* %807 to <4 x float>*
  %809 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 36
  %810 = bitcast float* %809 to <4 x float>*
  %811 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 40
  %812 = bitcast float* %811 to <4 x float>*
  %813 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 44
  %814 = bitcast float* %813 to <4 x float>*
  %815 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 48
  %816 = bitcast float* %815 to <4 x float>*
  %817 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 52
  %818 = bitcast float* %817 to <4 x float>*
  %819 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 56
  %820 = bitcast float* %819 to <4 x float>*
  %821 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 60
  %822 = bitcast float* %821 to <4 x float>*
  br label %823

823:                                              ; preds = %788, %823
  %824 = phi i64 [ %892, %823 ], [ 0, %788 ]
  %825 = load <4 x float>, <4 x float>* %792, align 16
  %826 = fmul <4 x float> %791, %825
  %827 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %787, i64 %824, i32 0, i64 0
  %828 = bitcast float* %827 to <4 x float>*
  store <4 x float> %826, <4 x float>* %828, align 4
  %829 = load <4 x float>, <4 x float>* %794, align 16
  %830 = fmul <4 x float> %791, %829
  %831 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %787, i64 %824, i32 0, i64 4
  %832 = bitcast float* %831 to <4 x float>*
  store <4 x float> %830, <4 x float>* %832, align 4
  %833 = load <4 x float>, <4 x float>* %796, align 16
  %834 = fmul <4 x float> %791, %833
  %835 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %787, i64 %824, i32 0, i64 8
  %836 = bitcast float* %835 to <4 x float>*
  store <4 x float> %834, <4 x float>* %836, align 4
  %837 = load <4 x float>, <4 x float>* %798, align 16
  %838 = fmul <4 x float> %791, %837
  %839 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %787, i64 %824, i32 0, i64 12
  %840 = bitcast float* %839 to <4 x float>*
  store <4 x float> %838, <4 x float>* %840, align 4
  %841 = load <4 x float>, <4 x float>* %800, align 16
  %842 = fmul <4 x float> %791, %841
  %843 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %787, i64 %824, i32 0, i64 16
  %844 = bitcast float* %843 to <4 x float>*
  store <4 x float> %842, <4 x float>* %844, align 4
  %845 = load <4 x float>, <4 x float>* %802, align 16
  %846 = fmul <4 x float> %791, %845
  %847 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %787, i64 %824, i32 0, i64 20
  %848 = bitcast float* %847 to <4 x float>*
  store <4 x float> %846, <4 x float>* %848, align 4
  %849 = load <4 x float>, <4 x float>* %804, align 16
  %850 = fmul <4 x float> %791, %849
  %851 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %787, i64 %824, i32 0, i64 24
  %852 = bitcast float* %851 to <4 x float>*
  store <4 x float> %850, <4 x float>* %852, align 4
  %853 = load <4 x float>, <4 x float>* %806, align 16
  %854 = fmul <4 x float> %791, %853
  %855 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %787, i64 %824, i32 0, i64 28
  %856 = bitcast float* %855 to <4 x float>*
  store <4 x float> %854, <4 x float>* %856, align 4
  %857 = load <4 x float>, <4 x float>* %808, align 16
  %858 = fmul <4 x float> %791, %857
  %859 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %787, i64 %824, i32 0, i64 32
  %860 = bitcast float* %859 to <4 x float>*
  store <4 x float> %858, <4 x float>* %860, align 4
  %861 = load <4 x float>, <4 x float>* %810, align 16
  %862 = fmul <4 x float> %791, %861
  %863 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %787, i64 %824, i32 0, i64 36
  %864 = bitcast float* %863 to <4 x float>*
  store <4 x float> %862, <4 x float>* %864, align 4
  %865 = load <4 x float>, <4 x float>* %812, align 16
  %866 = fmul <4 x float> %791, %865
  %867 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %787, i64 %824, i32 0, i64 40
  %868 = bitcast float* %867 to <4 x float>*
  store <4 x float> %866, <4 x float>* %868, align 4
  %869 = load <4 x float>, <4 x float>* %814, align 16
  %870 = fmul <4 x float> %791, %869
  %871 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %787, i64 %824, i32 0, i64 44
  %872 = bitcast float* %871 to <4 x float>*
  store <4 x float> %870, <4 x float>* %872, align 4
  %873 = load <4 x float>, <4 x float>* %816, align 16
  %874 = fmul <4 x float> %791, %873
  %875 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %787, i64 %824, i32 0, i64 48
  %876 = bitcast float* %875 to <4 x float>*
  store <4 x float> %874, <4 x float>* %876, align 4
  %877 = load <4 x float>, <4 x float>* %818, align 16
  %878 = fmul <4 x float> %791, %877
  %879 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %787, i64 %824, i32 0, i64 52
  %880 = bitcast float* %879 to <4 x float>*
  store <4 x float> %878, <4 x float>* %880, align 4
  %881 = load <4 x float>, <4 x float>* %820, align 16
  %882 = fmul <4 x float> %791, %881
  %883 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %787, i64 %824, i32 0, i64 56
  %884 = bitcast float* %883 to <4 x float>*
  store <4 x float> %882, <4 x float>* %884, align 4
  %885 = load <4 x float>, <4 x float>* %822, align 16
  %886 = fmul <4 x float> %791, %885
  %887 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %787, i64 %824, i32 0, i64 60
  %888 = bitcast float* %887 to <4 x float>*
  store <4 x float> %886, <4 x float>* %888, align 4
  %889 = load float, float* %789, align 16
  %890 = fmul float %216, %889
  %891 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %787, i64 %824, i32 0, i64 64
  store float %890, float* %891, align 4
  %892 = add nuw i64 %824, 1
  %893 = icmp eq i64 %892, %17
  br i1 %893, label %894, label %823

894:                                              ; preds = %823, %783
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %258) #11
  br label %923

895:                                              ; preds = %1117, %779
  %896 = phi i64 [ 0, %779 ], [ %1129, %1117 ]
  %897 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 7, i32 0, i64 %896
  %898 = load float, float* %897, align 4
  %899 = fmul float %781, %898
  %900 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 %896
  %901 = load float, float* %900, align 8
  %902 = fsub float %901, %899
  store float %902, float* %900, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %782)
  store float 0.000000e+00, float* %13, align 4
  %903 = fcmp ogt float %902, 0.000000e+00
  %904 = select i1 %903, float* %900, float* %13
  %905 = bitcast float* %904 to i32*
  %906 = load i32, i32* %905, align 4
  %907 = bitcast float* %900 to i32*
  store i32 %906, i32* %907, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %782)
  %908 = or i64 %896, 1
  %909 = icmp eq i64 %908, 65
  br i1 %909, label %783, label %1117

910:                                              ; preds = %232, %222
  %911 = phi i64 [ 0, %222 ], [ %254, %232 ]
  %912 = icmp eq i64 %228, 0
  br i1 %912, label %923, label %913

913:                                              ; preds = %910, %913
  %914 = phi i64 [ %920, %913 ], [ %911, %910 ]
  %915 = phi i64 [ %921, %913 ], [ %228, %910 ]
  %916 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %224, i64 %914
  %917 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %226, i64 %914, i32 0, i64 0
  %918 = bitcast float* %917 to i8*
  %919 = bitcast %"struct.std::__1::array"* %916 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %918, i8* align 4 %919, i64 260, i1 false) #11
  %920 = add nuw i64 %914, 1
  %921 = add i64 %915, -1
  %922 = icmp eq i64 %921, 0
  br i1 %922, label %923, label %913, !llvm.loop !16

923:                                              ; preds = %910, %913, %220, %894
  %924 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 0, i32 9, i32 7
  %925 = load i8, i8* %924, align 8, !range !2
  %926 = icmp eq i8 %925, 0
  br i1 %926, label %941, label %927

927:                                              ; preds = %923
  %928 = load %"class.webrtc::TransparentMode"*, %"class.webrtc::TransparentMode"** %199, align 8
  %929 = icmp eq %"class.webrtc::TransparentMode"* %928, null
  br i1 %929, label %936, label %930

930:                                              ; preds = %927
  %931 = bitcast %"class.webrtc::TransparentMode"* %928 to i1 (%"class.webrtc::TransparentMode"*)***
  %932 = load i1 (%"class.webrtc::TransparentMode"*)**, i1 (%"class.webrtc::TransparentMode"*)*** %931, align 8
  %933 = getelementptr inbounds i1 (%"class.webrtc::TransparentMode"*)*, i1 (%"class.webrtc::TransparentMode"*)** %932, i64 2
  %934 = load i1 (%"class.webrtc::TransparentMode"*)*, i1 (%"class.webrtc::TransparentMode"*)** %933, align 8
  %935 = tail call zeroext i1 %934(%"class.webrtc::TransparentMode"* nonnull %928) #11
  br i1 %935, label %941, label %936

936:                                              ; preds = %927, %930
  %937 = getelementptr inbounds %"class.rtc::ArrayView.169", %"class.rtc::ArrayView.169"* %7, i64 0, i32 0, i32 0
  %938 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %937, align 8
  %939 = icmp eq i64 %17, 0
  %940 = select i1 %939, %"struct.std::__1::array"* null, %"struct.std::__1::array"* %938
  tail call void @_ZN6webrtc21ResidualEchoEstimator9AddReverbENS0_10ReverbTypeERKNS_8AecStateERKNS_12RenderBufferEN3rtc9ArrayViewINSt3__15arrayIfLm65EEELln4711EEE(%"class.webrtc::ResidualEchoEstimator"* %0, i32 1, %"class.webrtc::AecState"* dereferenceable(3016) %1, %"class.webrtc::RenderBuffer"* dereferenceable(32) %2, %"struct.std::__1::array"* %940, i64 %17)
  br label %941

941:                                              ; preds = %930, %936, %923, %194
  %942 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %1, i64 0, i32 1, i32 5, i32 6
  %943 = load i8, i8* %942, align 4, !range !2
  %944 = icmp eq i8 %943, 0
  br i1 %944, label %1116, label %945

945:                                              ; preds = %941
  call void @llvm.lifetime.start.p0i8(i64 260, i8* nonnull %15) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 -1, i64 260, i1 false)
  %946 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %14, i64 0, i32 0, i64 0
  call void @_ZNK6webrtc8AecState22GetResidualEchoScalingEN3rtc9ArrayViewIfLln4711EEE(%"class.webrtc::AecState"* %1, float* nonnull %946, i64 65) #11
  %947 = icmp eq i64 %17, 0
  br i1 %947, label %1097, label %948

948:                                              ; preds = %945
  %949 = getelementptr inbounds %"class.rtc::ArrayView.169", %"class.rtc::ArrayView.169"* %7, i64 0, i32 0, i32 0
  %950 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %949, align 8
  %951 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %14, i64 1
  %952 = bitcast %"struct.std::__1::array"* %14 to <4 x float>*
  %953 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %14, i64 0, i32 0, i64 4
  %954 = bitcast float* %953 to <4 x float>*
  %955 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %14, i64 0, i32 0, i64 8
  %956 = bitcast float* %955 to <4 x float>*
  %957 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %14, i64 0, i32 0, i64 12
  %958 = bitcast float* %957 to <4 x float>*
  %959 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %14, i64 0, i32 0, i64 16
  %960 = bitcast float* %959 to <4 x float>*
  %961 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %14, i64 0, i32 0, i64 20
  %962 = bitcast float* %961 to <4 x float>*
  %963 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %14, i64 0, i32 0, i64 24
  %964 = bitcast float* %963 to <4 x float>*
  %965 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %14, i64 0, i32 0, i64 28
  %966 = bitcast float* %965 to <4 x float>*
  %967 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %14, i64 0, i32 0, i64 32
  %968 = bitcast float* %967 to <4 x float>*
  %969 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %14, i64 0, i32 0, i64 36
  %970 = bitcast float* %969 to <4 x float>*
  %971 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %14, i64 0, i32 0, i64 40
  %972 = bitcast float* %971 to <4 x float>*
  %973 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %14, i64 0, i32 0, i64 44
  %974 = bitcast float* %973 to <4 x float>*
  %975 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %14, i64 0, i32 0, i64 48
  %976 = bitcast float* %975 to <4 x float>*
  %977 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %14, i64 0, i32 0, i64 52
  %978 = bitcast float* %977 to <4 x float>*
  %979 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %14, i64 0, i32 0, i64 56
  %980 = bitcast float* %979 to <4 x float>*
  %981 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %14, i64 0, i32 0, i64 60
  %982 = bitcast float* %981 to <4 x float>*
  br label %983

983:                                              ; preds = %948, %1098
  %984 = phi i64 [ 0, %948 ], [ %1099, %1098 ]
  %985 = add i64 %984, 1
  %986 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %950, i64 %985
  %987 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %950, i64 %984
  %988 = icmp ult %"struct.std::__1::array"* %987, %951
  %989 = icmp ult %"struct.std::__1::array"* %14, %986
  %990 = and i1 %988, %989
  br i1 %990, label %991, label %1000

991:                                              ; preds = %1000, %983
  %992 = phi i64 [ 0, %983 ], [ 64, %1000 ]
  %993 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %14, i64 0, i32 0, i64 %992
  %994 = load float, float* %993, align 16
  %995 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %950, i64 %984, i32 0, i64 %992
  %996 = load float, float* %995, align 4
  %997 = fmul float %994, %996
  store float %997, float* %995, align 4
  %998 = or i64 %992, 1
  %999 = icmp eq i64 %992, 64
  br i1 %999, label %1098, label %1101

1000:                                             ; preds = %983
  %1001 = load <4 x float>, <4 x float>* %952, align 16, !alias.scope !17
  %1002 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %950, i64 %984, i32 0, i64 0
  %1003 = bitcast float* %1002 to <4 x float>*
  %1004 = load <4 x float>, <4 x float>* %1003, align 4, !alias.scope !20, !noalias !17
  %1005 = fmul <4 x float> %1001, %1004
  %1006 = bitcast float* %1002 to <4 x float>*
  store <4 x float> %1005, <4 x float>* %1006, align 4, !alias.scope !20, !noalias !17
  %1007 = load <4 x float>, <4 x float>* %954, align 16, !alias.scope !17
  %1008 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %950, i64 %984, i32 0, i64 4
  %1009 = bitcast float* %1008 to <4 x float>*
  %1010 = load <4 x float>, <4 x float>* %1009, align 4, !alias.scope !20, !noalias !17
  %1011 = fmul <4 x float> %1007, %1010
  %1012 = bitcast float* %1008 to <4 x float>*
  store <4 x float> %1011, <4 x float>* %1012, align 4, !alias.scope !20, !noalias !17
  %1013 = load <4 x float>, <4 x float>* %956, align 16, !alias.scope !17
  %1014 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %950, i64 %984, i32 0, i64 8
  %1015 = bitcast float* %1014 to <4 x float>*
  %1016 = load <4 x float>, <4 x float>* %1015, align 4, !alias.scope !20, !noalias !17
  %1017 = fmul <4 x float> %1013, %1016
  %1018 = bitcast float* %1014 to <4 x float>*
  store <4 x float> %1017, <4 x float>* %1018, align 4, !alias.scope !20, !noalias !17
  %1019 = load <4 x float>, <4 x float>* %958, align 16, !alias.scope !17
  %1020 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %950, i64 %984, i32 0, i64 12
  %1021 = bitcast float* %1020 to <4 x float>*
  %1022 = load <4 x float>, <4 x float>* %1021, align 4, !alias.scope !20, !noalias !17
  %1023 = fmul <4 x float> %1019, %1022
  %1024 = bitcast float* %1020 to <4 x float>*
  store <4 x float> %1023, <4 x float>* %1024, align 4, !alias.scope !20, !noalias !17
  %1025 = load <4 x float>, <4 x float>* %960, align 16, !alias.scope !17
  %1026 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %950, i64 %984, i32 0, i64 16
  %1027 = bitcast float* %1026 to <4 x float>*
  %1028 = load <4 x float>, <4 x float>* %1027, align 4, !alias.scope !20, !noalias !17
  %1029 = fmul <4 x float> %1025, %1028
  %1030 = bitcast float* %1026 to <4 x float>*
  store <4 x float> %1029, <4 x float>* %1030, align 4, !alias.scope !20, !noalias !17
  %1031 = load <4 x float>, <4 x float>* %962, align 16, !alias.scope !17
  %1032 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %950, i64 %984, i32 0, i64 20
  %1033 = bitcast float* %1032 to <4 x float>*
  %1034 = load <4 x float>, <4 x float>* %1033, align 4, !alias.scope !20, !noalias !17
  %1035 = fmul <4 x float> %1031, %1034
  %1036 = bitcast float* %1032 to <4 x float>*
  store <4 x float> %1035, <4 x float>* %1036, align 4, !alias.scope !20, !noalias !17
  %1037 = load <4 x float>, <4 x float>* %964, align 16, !alias.scope !17
  %1038 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %950, i64 %984, i32 0, i64 24
  %1039 = bitcast float* %1038 to <4 x float>*
  %1040 = load <4 x float>, <4 x float>* %1039, align 4, !alias.scope !20, !noalias !17
  %1041 = fmul <4 x float> %1037, %1040
  %1042 = bitcast float* %1038 to <4 x float>*
  store <4 x float> %1041, <4 x float>* %1042, align 4, !alias.scope !20, !noalias !17
  %1043 = load <4 x float>, <4 x float>* %966, align 16, !alias.scope !17
  %1044 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %950, i64 %984, i32 0, i64 28
  %1045 = bitcast float* %1044 to <4 x float>*
  %1046 = load <4 x float>, <4 x float>* %1045, align 4, !alias.scope !20, !noalias !17
  %1047 = fmul <4 x float> %1043, %1046
  %1048 = bitcast float* %1044 to <4 x float>*
  store <4 x float> %1047, <4 x float>* %1048, align 4, !alias.scope !20, !noalias !17
  %1049 = load <4 x float>, <4 x float>* %968, align 16, !alias.scope !17
  %1050 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %950, i64 %984, i32 0, i64 32
  %1051 = bitcast float* %1050 to <4 x float>*
  %1052 = load <4 x float>, <4 x float>* %1051, align 4, !alias.scope !20, !noalias !17
  %1053 = fmul <4 x float> %1049, %1052
  %1054 = bitcast float* %1050 to <4 x float>*
  store <4 x float> %1053, <4 x float>* %1054, align 4, !alias.scope !20, !noalias !17
  %1055 = load <4 x float>, <4 x float>* %970, align 16, !alias.scope !17
  %1056 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %950, i64 %984, i32 0, i64 36
  %1057 = bitcast float* %1056 to <4 x float>*
  %1058 = load <4 x float>, <4 x float>* %1057, align 4, !alias.scope !20, !noalias !17
  %1059 = fmul <4 x float> %1055, %1058
  %1060 = bitcast float* %1056 to <4 x float>*
  store <4 x float> %1059, <4 x float>* %1060, align 4, !alias.scope !20, !noalias !17
  %1061 = load <4 x float>, <4 x float>* %972, align 16, !alias.scope !17
  %1062 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %950, i64 %984, i32 0, i64 40
  %1063 = bitcast float* %1062 to <4 x float>*
  %1064 = load <4 x float>, <4 x float>* %1063, align 4, !alias.scope !20, !noalias !17
  %1065 = fmul <4 x float> %1061, %1064
  %1066 = bitcast float* %1062 to <4 x float>*
  store <4 x float> %1065, <4 x float>* %1066, align 4, !alias.scope !20, !noalias !17
  %1067 = load <4 x float>, <4 x float>* %974, align 16, !alias.scope !17
  %1068 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %950, i64 %984, i32 0, i64 44
  %1069 = bitcast float* %1068 to <4 x float>*
  %1070 = load <4 x float>, <4 x float>* %1069, align 4, !alias.scope !20, !noalias !17
  %1071 = fmul <4 x float> %1067, %1070
  %1072 = bitcast float* %1068 to <4 x float>*
  store <4 x float> %1071, <4 x float>* %1072, align 4, !alias.scope !20, !noalias !17
  %1073 = load <4 x float>, <4 x float>* %976, align 16, !alias.scope !17
  %1074 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %950, i64 %984, i32 0, i64 48
  %1075 = bitcast float* %1074 to <4 x float>*
  %1076 = load <4 x float>, <4 x float>* %1075, align 4, !alias.scope !20, !noalias !17
  %1077 = fmul <4 x float> %1073, %1076
  %1078 = bitcast float* %1074 to <4 x float>*
  store <4 x float> %1077, <4 x float>* %1078, align 4, !alias.scope !20, !noalias !17
  %1079 = load <4 x float>, <4 x float>* %978, align 16, !alias.scope !17
  %1080 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %950, i64 %984, i32 0, i64 52
  %1081 = bitcast float* %1080 to <4 x float>*
  %1082 = load <4 x float>, <4 x float>* %1081, align 4, !alias.scope !20, !noalias !17
  %1083 = fmul <4 x float> %1079, %1082
  %1084 = bitcast float* %1080 to <4 x float>*
  store <4 x float> %1083, <4 x float>* %1084, align 4, !alias.scope !20, !noalias !17
  %1085 = load <4 x float>, <4 x float>* %980, align 16, !alias.scope !17
  %1086 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %950, i64 %984, i32 0, i64 56
  %1087 = bitcast float* %1086 to <4 x float>*
  %1088 = load <4 x float>, <4 x float>* %1087, align 4, !alias.scope !20, !noalias !17
  %1089 = fmul <4 x float> %1085, %1088
  %1090 = bitcast float* %1086 to <4 x float>*
  store <4 x float> %1089, <4 x float>* %1090, align 4, !alias.scope !20, !noalias !17
  %1091 = load <4 x float>, <4 x float>* %982, align 16, !alias.scope !17
  %1092 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %950, i64 %984, i32 0, i64 60
  %1093 = bitcast float* %1092 to <4 x float>*
  %1094 = load <4 x float>, <4 x float>* %1093, align 4, !alias.scope !20, !noalias !17
  %1095 = fmul <4 x float> %1091, %1094
  %1096 = bitcast float* %1092 to <4 x float>*
  store <4 x float> %1095, <4 x float>* %1096, align 4, !alias.scope !20, !noalias !17
  br label %991

1097:                                             ; preds = %1098, %945
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %15) #11
  br label %1116

1098:                                             ; preds = %1101, %991
  %1099 = add nuw i64 %984, 1
  %1100 = icmp eq i64 %1099, %17
  br i1 %1100, label %1097, label %983

1101:                                             ; preds = %991, %1101
  %1102 = phi i64 [ %1114, %1101 ], [ %998, %991 ]
  %1103 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %14, i64 0, i32 0, i64 %1102
  %1104 = load float, float* %1103, align 4
  %1105 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %950, i64 %984, i32 0, i64 %1102
  %1106 = load float, float* %1105, align 4
  %1107 = fmul float %1104, %1106
  store float %1107, float* %1105, align 4
  %1108 = add nuw nsw i64 %1102, 1
  %1109 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %14, i64 0, i32 0, i64 %1108
  %1110 = load float, float* %1109, align 4
  %1111 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %950, i64 %984, i32 0, i64 %1108
  %1112 = load float, float* %1111, align 4
  %1113 = fmul float %1110, %1112
  store float %1113, float* %1111, align 4
  %1114 = add nuw nsw i64 %1102, 2
  %1115 = icmp eq i64 %1114, 65
  br i1 %1115, label %1098, label %1101, !llvm.loop !22

1116:                                             ; preds = %941, %1097
  ret void

1117:                                             ; preds = %895
  %1118 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 7, i32 0, i64 %908
  %1119 = load float, float* %1118, align 4
  %1120 = fmul float %781, %1119
  %1121 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %12, i64 0, i32 0, i64 %908
  %1122 = load float, float* %1121, align 4
  %1123 = fsub float %1122, %1120
  store float %1123, float* %1121, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %782)
  store float 0.000000e+00, float* %13, align 4
  %1124 = fcmp ogt float %1123, 0.000000e+00
  %1125 = select i1 %1124, float* %1121, float* %13
  %1126 = bitcast float* %1125 to i32*
  %1127 = load i32, i32* %1126, align 4
  %1128 = bitcast float* %1121 to i32*
  store i32 %1127, i32* %1128, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %782)
  %1129 = add nuw nsw i64 %896, 2
  br label %895
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21ResidualEchoEstimator22UpdateRenderNoisePowerERKNS_12RenderBufferE(%"class.webrtc::ResidualEchoEstimator"* nocapture, %"class.webrtc::RenderBuffer"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::array", align 16
  %4 = bitcast %"struct.std::__1::array"* %3 to i8*
  %5 = alloca float, align 4
  call void @llvm.lifetime.start.p0i8(i64 260, i8* nonnull %4) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -1, i64 260, i1 false)
  %6 = getelementptr inbounds %"class.webrtc::RenderBuffer", %"class.webrtc::RenderBuffer"* %1, i64 0, i32 1
  %7 = load %"struct.webrtc::SpectrumBuffer"*, %"struct.webrtc::SpectrumBuffer"** %6, align 8
  %8 = getelementptr inbounds %"struct.webrtc::SpectrumBuffer", %"struct.webrtc::SpectrumBuffer"* %7, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"struct.webrtc::SpectrumBuffer", %"struct.webrtc::SpectrumBuffer"* %7, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, %9
  %13 = srem i32 %12, %11
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.webrtc::SpectrumBuffer", %"struct.webrtc::SpectrumBuffer"* %7, i64 0, i32 1, i32 0, i32 0
  %16 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %16, i64 %14, i32 0, i32 0
  %18 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %16, i64 %14, i32 0, i32 1
  %20 = bitcast %"struct.std::__1::array"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = ptrtoint %"struct.std::__1::array"* %18 to i64
  %23 = icmp eq i64 %21, %22
  %24 = select i1 %23, %"struct.std::__1::array"* null, %"struct.std::__1::array"* %18
  %25 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %28, label %167

28:                                               ; preds = %2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 0, i64 260, i1 false)
  %29 = bitcast %"struct.std::__1::array"* %3 to <4 x float>*
  %30 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 0, i32 0, i64 4
  %31 = bitcast float* %30 to <4 x float>*
  %32 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 0, i32 0, i64 8
  %33 = bitcast float* %32 to <4 x float>*
  %34 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 0, i32 0, i64 12
  %35 = bitcast float* %34 to <4 x float>*
  %36 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 0, i32 0, i64 16
  %37 = bitcast float* %36 to <4 x float>*
  %38 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 0, i32 0, i64 20
  %39 = bitcast float* %38 to <4 x float>*
  %40 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 0, i32 0, i64 24
  %41 = bitcast float* %40 to <4 x float>*
  %42 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 0, i32 0, i64 28
  %43 = bitcast float* %42 to <4 x float>*
  %44 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 0, i32 0, i64 32
  %45 = bitcast float* %44 to <4 x float>*
  %46 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 0, i32 0, i64 36
  %47 = bitcast float* %46 to <4 x float>*
  %48 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 0, i32 0, i64 40
  %49 = bitcast float* %48 to <4 x float>*
  %50 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 0, i32 0, i64 44
  %51 = bitcast float* %50 to <4 x float>*
  %52 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 0, i32 0, i64 48
  %53 = bitcast float* %52 to <4 x float>*
  %54 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 0, i32 0, i64 52
  %55 = bitcast float* %54 to <4 x float>*
  %56 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 0, i32 0, i64 56
  %57 = bitcast float* %56 to <4 x float>*
  %58 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 0, i32 0, i64 60
  %59 = bitcast float* %58 to <4 x float>*
  %60 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 0, i32 0, i64 64
  %61 = load <4 x float>, <4 x float>* %29, align 16
  %62 = load <4 x float>, <4 x float>* %31, align 16
  %63 = load <4 x float>, <4 x float>* %33, align 16
  %64 = load <4 x float>, <4 x float>* %35, align 16
  %65 = load <4 x float>, <4 x float>* %37, align 16
  %66 = load <4 x float>, <4 x float>* %39, align 16
  %67 = load <4 x float>, <4 x float>* %41, align 16
  %68 = load <4 x float>, <4 x float>* %43, align 16
  %69 = load <4 x float>, <4 x float>* %45, align 16
  %70 = load <4 x float>, <4 x float>* %47, align 16
  %71 = load <4 x float>, <4 x float>* %49, align 16
  %72 = load <4 x float>, <4 x float>* %51, align 16
  %73 = load <4 x float>, <4 x float>* %53, align 16
  %74 = load <4 x float>, <4 x float>* %55, align 16
  %75 = load <4 x float>, <4 x float>* %57, align 16
  %76 = load <4 x float>, <4 x float>* %59, align 16
  %77 = load float, float* %60, align 16
  br label %78

78:                                               ; preds = %78, %28
  %79 = phi float [ %77, %28 ], [ %163, %78 ]
  %80 = phi <4 x float> [ %76, %28 ], [ %160, %78 ]
  %81 = phi <4 x float> [ %75, %28 ], [ %156, %78 ]
  %82 = phi <4 x float> [ %74, %28 ], [ %152, %78 ]
  %83 = phi <4 x float> [ %73, %28 ], [ %148, %78 ]
  %84 = phi <4 x float> [ %72, %28 ], [ %144, %78 ]
  %85 = phi <4 x float> [ %71, %28 ], [ %140, %78 ]
  %86 = phi <4 x float> [ %70, %28 ], [ %136, %78 ]
  %87 = phi <4 x float> [ %69, %28 ], [ %132, %78 ]
  %88 = phi <4 x float> [ %68, %28 ], [ %128, %78 ]
  %89 = phi <4 x float> [ %67, %28 ], [ %124, %78 ]
  %90 = phi <4 x float> [ %66, %28 ], [ %120, %78 ]
  %91 = phi <4 x float> [ %65, %28 ], [ %116, %78 ]
  %92 = phi <4 x float> [ %64, %28 ], [ %112, %78 ]
  %93 = phi <4 x float> [ %63, %28 ], [ %108, %78 ]
  %94 = phi <4 x float> [ %62, %28 ], [ %104, %78 ]
  %95 = phi <4 x float> [ %61, %28 ], [ %100, %78 ]
  %96 = phi i64 [ 0, %28 ], [ %164, %78 ]
  %97 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %24, i64 %96, i32 0, i64 0
  %98 = bitcast float* %97 to <4 x float>*
  %99 = load <4 x float>, <4 x float>* %98, align 4
  %100 = fadd <4 x float> %99, %95
  %101 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %24, i64 %96, i32 0, i64 4
  %102 = bitcast float* %101 to <4 x float>*
  %103 = load <4 x float>, <4 x float>* %102, align 4
  %104 = fadd <4 x float> %103, %94
  %105 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %24, i64 %96, i32 0, i64 8
  %106 = bitcast float* %105 to <4 x float>*
  %107 = load <4 x float>, <4 x float>* %106, align 4
  %108 = fadd <4 x float> %107, %93
  %109 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %24, i64 %96, i32 0, i64 12
  %110 = bitcast float* %109 to <4 x float>*
  %111 = load <4 x float>, <4 x float>* %110, align 4
  %112 = fadd <4 x float> %111, %92
  %113 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %24, i64 %96, i32 0, i64 16
  %114 = bitcast float* %113 to <4 x float>*
  %115 = load <4 x float>, <4 x float>* %114, align 4
  %116 = fadd <4 x float> %115, %91
  %117 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %24, i64 %96, i32 0, i64 20
  %118 = bitcast float* %117 to <4 x float>*
  %119 = load <4 x float>, <4 x float>* %118, align 4
  %120 = fadd <4 x float> %119, %90
  %121 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %24, i64 %96, i32 0, i64 24
  %122 = bitcast float* %121 to <4 x float>*
  %123 = load <4 x float>, <4 x float>* %122, align 4
  %124 = fadd <4 x float> %123, %89
  %125 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %24, i64 %96, i32 0, i64 28
  %126 = bitcast float* %125 to <4 x float>*
  %127 = load <4 x float>, <4 x float>* %126, align 4
  %128 = fadd <4 x float> %127, %88
  %129 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %24, i64 %96, i32 0, i64 32
  %130 = bitcast float* %129 to <4 x float>*
  %131 = load <4 x float>, <4 x float>* %130, align 4
  %132 = fadd <4 x float> %131, %87
  %133 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %24, i64 %96, i32 0, i64 36
  %134 = bitcast float* %133 to <4 x float>*
  %135 = load <4 x float>, <4 x float>* %134, align 4
  %136 = fadd <4 x float> %135, %86
  %137 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %24, i64 %96, i32 0, i64 40
  %138 = bitcast float* %137 to <4 x float>*
  %139 = load <4 x float>, <4 x float>* %138, align 4
  %140 = fadd <4 x float> %139, %85
  %141 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %24, i64 %96, i32 0, i64 44
  %142 = bitcast float* %141 to <4 x float>*
  %143 = load <4 x float>, <4 x float>* %142, align 4
  %144 = fadd <4 x float> %143, %84
  %145 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %24, i64 %96, i32 0, i64 48
  %146 = bitcast float* %145 to <4 x float>*
  %147 = load <4 x float>, <4 x float>* %146, align 4
  %148 = fadd <4 x float> %147, %83
  %149 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %24, i64 %96, i32 0, i64 52
  %150 = bitcast float* %149 to <4 x float>*
  %151 = load <4 x float>, <4 x float>* %150, align 4
  %152 = fadd <4 x float> %151, %82
  %153 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %24, i64 %96, i32 0, i64 56
  %154 = bitcast float* %153 to <4 x float>*
  %155 = load <4 x float>, <4 x float>* %154, align 4
  %156 = fadd <4 x float> %155, %81
  %157 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %24, i64 %96, i32 0, i64 60
  %158 = bitcast float* %157 to <4 x float>*
  %159 = load <4 x float>, <4 x float>* %158, align 4
  %160 = fadd <4 x float> %159, %80
  %161 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %24, i64 %96, i32 0, i64 64
  %162 = load float, float* %161, align 4
  %163 = fadd float %162, %79
  %164 = add nuw i64 %96, 1
  %165 = icmp ult i64 %164, %26
  br i1 %165, label %78, label %166

166:                                              ; preds = %78
  store <4 x float> %100, <4 x float>* %29, align 16
  store <4 x float> %104, <4 x float>* %31, align 16
  store <4 x float> %108, <4 x float>* %33, align 16
  store <4 x float> %112, <4 x float>* %35, align 16
  store <4 x float> %116, <4 x float>* %37, align 16
  store <4 x float> %120, <4 x float>* %39, align 16
  store <4 x float> %124, <4 x float>* %41, align 16
  store <4 x float> %128, <4 x float>* %43, align 16
  store <4 x float> %132, <4 x float>* %45, align 16
  store <4 x float> %136, <4 x float>* %47, align 16
  store <4 x float> %140, <4 x float>* %49, align 16
  store <4 x float> %144, <4 x float>* %51, align 16
  store <4 x float> %148, <4 x float>* %53, align 16
  store <4 x float> %152, <4 x float>* %55, align 16
  store <4 x float> %156, <4 x float>* %57, align 16
  store <4 x float> %160, <4 x float>* %59, align 16
  store float %163, float* %60, align 16
  br label %167

167:                                              ; preds = %166, %2
  %168 = phi %"struct.std::__1::array"* [ %24, %2 ], [ %3, %166 ]
  %169 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 0, i32 9, i32 0
  %170 = bitcast float* %5 to i8*
  %171 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 0, i32 9, i32 1
  br label %173

172:                                              ; preds = %198
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %4) #11
  ret void

173:                                              ; preds = %198, %167
  %174 = phi i64 [ 0, %167 ], [ %199, %198 ]
  %175 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %168, i64 0, i32 0, i64 %174
  %176 = load float, float* %175, align 4
  %177 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 7, i32 0, i64 %174
  %178 = load float, float* %177, align 4
  %179 = fcmp olt float %176, %178
  br i1 %179, label %180, label %182

180:                                              ; preds = %173
  store float %176, float* %177, align 4
  %181 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 8, i32 0, i64 %174
  store i32 0, i32* %181, align 4
  br label %198

182:                                              ; preds = %173
  %183 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 8, i32 0, i64 %174
  %184 = load i32, i32* %183, align 4
  %185 = load i64, i64* %169, align 8
  %186 = trunc i64 %185 to i32
  %187 = icmp slt i32 %184, %186
  br i1 %187, label %196, label %188

188:                                              ; preds = %182
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %170)
  %189 = fmul float %178, 0x3FF19999A0000000
  store float %189, float* %5, align 4
  %190 = load float, float* %171, align 4
  %191 = fcmp olt float %189, %190
  %192 = select i1 %191, float* %171, float* %5
  %193 = bitcast float* %192 to i32*
  %194 = load i32, i32* %193, align 4
  %195 = bitcast float* %177 to i32*
  store i32 %194, i32* %195, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %170)
  br label %198

196:                                              ; preds = %182
  %197 = add nsw i32 %184, 1
  store i32 %197, i32* %183, align 4
  br label %198

198:                                              ; preds = %180, %196, %188
  %199 = add nuw nsw i64 %174, 1
  %200 = icmp eq i64 %199, 65
  br i1 %200, label %172, label %173
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21ResidualEchoEstimator9AddReverbENS0_10ReverbTypeERKNS_8AecStateERKNS_12RenderBufferEN3rtc9ArrayViewINSt3__15arrayIfLm65EEELln4711EEE(%"class.webrtc::ResidualEchoEstimator"*, i32, %"class.webrtc::AecState"* nocapture readonly dereferenceable(3016), %"class.webrtc::RenderBuffer"* nocapture readonly dereferenceable(32), %"struct.std::__1::array"*, i64) local_unnamed_addr #0 align 2 {
  %7 = alloca %"struct.std::__1::array", align 16
  %8 = bitcast %"struct.std::__1::array"* %7 to i8*
  %9 = icmp eq i32 %1, 0
  %10 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %2, i64 0, i32 17, i32 7, i32 0, i32 0
  %11 = load %"struct.webrtc::FilterAnalyzer::FilterAnalysisState"*, %"struct.webrtc::FilterAnalyzer::FilterAnalysisState"** %10, align 8
  %12 = getelementptr inbounds %"struct.webrtc::FilterAnalyzer::FilterAnalysisState", %"struct.webrtc::FilterAnalyzer::FilterAnalysisState"* %11, i64 0, i32 2
  %13 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %2, i64 0, i32 7, i32 3
  %14 = select i1 %9, i32* %12, i32* %13
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, 1
  call void @llvm.lifetime.start.p0i8(i64 260, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -1, i64 260, i1 false)
  %17 = getelementptr inbounds %"class.webrtc::RenderBuffer", %"class.webrtc::RenderBuffer"* %3, i64 0, i32 1
  %18 = load %"struct.webrtc::SpectrumBuffer"*, %"struct.webrtc::SpectrumBuffer"** %17, align 8
  %19 = getelementptr inbounds %"struct.webrtc::SpectrumBuffer", %"struct.webrtc::SpectrumBuffer"* %18, i64 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.webrtc::SpectrumBuffer", %"struct.webrtc::SpectrumBuffer"* %18, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = add i32 %16, %20
  %24 = add i32 %23, %22
  %25 = srem i32 %24, %22
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.webrtc::SpectrumBuffer", %"struct.webrtc::SpectrumBuffer"* %18, i64 0, i32 1, i32 0, i32 0
  %28 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %28, i64 %26, i32 0, i32 0
  %30 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %28, i64 %26, i32 0, i32 1
  %32 = bitcast %"struct.std::__1::array"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = ptrtoint %"struct.std::__1::array"* %30 to i64
  %35 = icmp eq i64 %33, %34
  %36 = select i1 %35, %"struct.std::__1::array"* null, %"struct.std::__1::array"* %30
  %37 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp ugt i64 %38, 1
  br i1 %39, label %40, label %205

40:                                               ; preds = %6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 0, i64 260, i1 false)
  %41 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 1
  %42 = bitcast %"struct.std::__1::array"* %7 to <4 x float>*
  %43 = bitcast %"struct.std::__1::array"* %7 to <4 x float>*
  %44 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 4
  %45 = bitcast float* %44 to <4 x float>*
  %46 = bitcast float* %44 to <4 x float>*
  %47 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 8
  %48 = bitcast float* %47 to <4 x float>*
  %49 = bitcast float* %47 to <4 x float>*
  %50 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 12
  %51 = bitcast float* %50 to <4 x float>*
  %52 = bitcast float* %50 to <4 x float>*
  %53 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 16
  %54 = bitcast float* %53 to <4 x float>*
  %55 = bitcast float* %53 to <4 x float>*
  %56 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 20
  %57 = bitcast float* %56 to <4 x float>*
  %58 = bitcast float* %56 to <4 x float>*
  %59 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 24
  %60 = bitcast float* %59 to <4 x float>*
  %61 = bitcast float* %59 to <4 x float>*
  %62 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 28
  %63 = bitcast float* %62 to <4 x float>*
  %64 = bitcast float* %62 to <4 x float>*
  %65 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 32
  %66 = bitcast float* %65 to <4 x float>*
  %67 = bitcast float* %65 to <4 x float>*
  %68 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 36
  %69 = bitcast float* %68 to <4 x float>*
  %70 = bitcast float* %68 to <4 x float>*
  %71 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 40
  %72 = bitcast float* %71 to <4 x float>*
  %73 = bitcast float* %71 to <4 x float>*
  %74 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 44
  %75 = bitcast float* %74 to <4 x float>*
  %76 = bitcast float* %74 to <4 x float>*
  %77 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 48
  %78 = bitcast float* %77 to <4 x float>*
  %79 = bitcast float* %77 to <4 x float>*
  %80 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 52
  %81 = bitcast float* %80 to <4 x float>*
  %82 = bitcast float* %80 to <4 x float>*
  %83 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 56
  %84 = bitcast float* %83 to <4 x float>*
  %85 = bitcast float* %83 to <4 x float>*
  %86 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 60
  %87 = bitcast float* %86 to <4 x float>*
  %88 = bitcast float* %86 to <4 x float>*
  br label %89

89:                                               ; preds = %187, %40
  %90 = phi i64 [ %188, %187 ], [ 0, %40 ]
  %91 = add i64 %90, 1
  %92 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %36, i64 %91
  %93 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %36, i64 %90
  %94 = icmp ult %"struct.std::__1::array"* %7, %92
  %95 = icmp ult %"struct.std::__1::array"* %93, %41
  %96 = and i1 %94, %95
  br i1 %96, label %97, label %106

97:                                               ; preds = %106, %89
  %98 = phi i64 [ 0, %89 ], [ 64, %106 ]
  %99 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %36, i64 %90, i32 0, i64 %98
  %100 = load float, float* %99, align 4
  %101 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 %98
  %102 = load float, float* %101, align 16
  %103 = fadd float %100, %102
  store float %103, float* %101, align 16
  %104 = or i64 %98, 1
  %105 = icmp eq i64 %98, 64
  br i1 %105, label %187, label %190

106:                                              ; preds = %89
  %107 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %36, i64 %90, i32 0, i64 0
  %108 = bitcast float* %107 to <4 x float>*
  %109 = load <4 x float>, <4 x float>* %108, align 4, !alias.scope !23
  %110 = load <4 x float>, <4 x float>* %42, align 16, !alias.scope !26, !noalias !23
  %111 = fadd <4 x float> %109, %110
  store <4 x float> %111, <4 x float>* %43, align 16, !alias.scope !26, !noalias !23
  %112 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %36, i64 %90, i32 0, i64 4
  %113 = bitcast float* %112 to <4 x float>*
  %114 = load <4 x float>, <4 x float>* %113, align 4, !alias.scope !23
  %115 = load <4 x float>, <4 x float>* %45, align 16, !alias.scope !26, !noalias !23
  %116 = fadd <4 x float> %114, %115
  store <4 x float> %116, <4 x float>* %46, align 16, !alias.scope !26, !noalias !23
  %117 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %36, i64 %90, i32 0, i64 8
  %118 = bitcast float* %117 to <4 x float>*
  %119 = load <4 x float>, <4 x float>* %118, align 4, !alias.scope !23
  %120 = load <4 x float>, <4 x float>* %48, align 16, !alias.scope !26, !noalias !23
  %121 = fadd <4 x float> %119, %120
  store <4 x float> %121, <4 x float>* %49, align 16, !alias.scope !26, !noalias !23
  %122 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %36, i64 %90, i32 0, i64 12
  %123 = bitcast float* %122 to <4 x float>*
  %124 = load <4 x float>, <4 x float>* %123, align 4, !alias.scope !23
  %125 = load <4 x float>, <4 x float>* %51, align 16, !alias.scope !26, !noalias !23
  %126 = fadd <4 x float> %124, %125
  store <4 x float> %126, <4 x float>* %52, align 16, !alias.scope !26, !noalias !23
  %127 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %36, i64 %90, i32 0, i64 16
  %128 = bitcast float* %127 to <4 x float>*
  %129 = load <4 x float>, <4 x float>* %128, align 4, !alias.scope !23
  %130 = load <4 x float>, <4 x float>* %54, align 16, !alias.scope !26, !noalias !23
  %131 = fadd <4 x float> %129, %130
  store <4 x float> %131, <4 x float>* %55, align 16, !alias.scope !26, !noalias !23
  %132 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %36, i64 %90, i32 0, i64 20
  %133 = bitcast float* %132 to <4 x float>*
  %134 = load <4 x float>, <4 x float>* %133, align 4, !alias.scope !23
  %135 = load <4 x float>, <4 x float>* %57, align 16, !alias.scope !26, !noalias !23
  %136 = fadd <4 x float> %134, %135
  store <4 x float> %136, <4 x float>* %58, align 16, !alias.scope !26, !noalias !23
  %137 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %36, i64 %90, i32 0, i64 24
  %138 = bitcast float* %137 to <4 x float>*
  %139 = load <4 x float>, <4 x float>* %138, align 4, !alias.scope !23
  %140 = load <4 x float>, <4 x float>* %60, align 16, !alias.scope !26, !noalias !23
  %141 = fadd <4 x float> %139, %140
  store <4 x float> %141, <4 x float>* %61, align 16, !alias.scope !26, !noalias !23
  %142 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %36, i64 %90, i32 0, i64 28
  %143 = bitcast float* %142 to <4 x float>*
  %144 = load <4 x float>, <4 x float>* %143, align 4, !alias.scope !23
  %145 = load <4 x float>, <4 x float>* %63, align 16, !alias.scope !26, !noalias !23
  %146 = fadd <4 x float> %144, %145
  store <4 x float> %146, <4 x float>* %64, align 16, !alias.scope !26, !noalias !23
  %147 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %36, i64 %90, i32 0, i64 32
  %148 = bitcast float* %147 to <4 x float>*
  %149 = load <4 x float>, <4 x float>* %148, align 4, !alias.scope !23
  %150 = load <4 x float>, <4 x float>* %66, align 16, !alias.scope !26, !noalias !23
  %151 = fadd <4 x float> %149, %150
  store <4 x float> %151, <4 x float>* %67, align 16, !alias.scope !26, !noalias !23
  %152 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %36, i64 %90, i32 0, i64 36
  %153 = bitcast float* %152 to <4 x float>*
  %154 = load <4 x float>, <4 x float>* %153, align 4, !alias.scope !23
  %155 = load <4 x float>, <4 x float>* %69, align 16, !alias.scope !26, !noalias !23
  %156 = fadd <4 x float> %154, %155
  store <4 x float> %156, <4 x float>* %70, align 16, !alias.scope !26, !noalias !23
  %157 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %36, i64 %90, i32 0, i64 40
  %158 = bitcast float* %157 to <4 x float>*
  %159 = load <4 x float>, <4 x float>* %158, align 4, !alias.scope !23
  %160 = load <4 x float>, <4 x float>* %72, align 16, !alias.scope !26, !noalias !23
  %161 = fadd <4 x float> %159, %160
  store <4 x float> %161, <4 x float>* %73, align 16, !alias.scope !26, !noalias !23
  %162 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %36, i64 %90, i32 0, i64 44
  %163 = bitcast float* %162 to <4 x float>*
  %164 = load <4 x float>, <4 x float>* %163, align 4, !alias.scope !23
  %165 = load <4 x float>, <4 x float>* %75, align 16, !alias.scope !26, !noalias !23
  %166 = fadd <4 x float> %164, %165
  store <4 x float> %166, <4 x float>* %76, align 16, !alias.scope !26, !noalias !23
  %167 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %36, i64 %90, i32 0, i64 48
  %168 = bitcast float* %167 to <4 x float>*
  %169 = load <4 x float>, <4 x float>* %168, align 4, !alias.scope !23
  %170 = load <4 x float>, <4 x float>* %78, align 16, !alias.scope !26, !noalias !23
  %171 = fadd <4 x float> %169, %170
  store <4 x float> %171, <4 x float>* %79, align 16, !alias.scope !26, !noalias !23
  %172 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %36, i64 %90, i32 0, i64 52
  %173 = bitcast float* %172 to <4 x float>*
  %174 = load <4 x float>, <4 x float>* %173, align 4, !alias.scope !23
  %175 = load <4 x float>, <4 x float>* %81, align 16, !alias.scope !26, !noalias !23
  %176 = fadd <4 x float> %174, %175
  store <4 x float> %176, <4 x float>* %82, align 16, !alias.scope !26, !noalias !23
  %177 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %36, i64 %90, i32 0, i64 56
  %178 = bitcast float* %177 to <4 x float>*
  %179 = load <4 x float>, <4 x float>* %178, align 4, !alias.scope !23
  %180 = load <4 x float>, <4 x float>* %84, align 16, !alias.scope !26, !noalias !23
  %181 = fadd <4 x float> %179, %180
  store <4 x float> %181, <4 x float>* %85, align 16, !alias.scope !26, !noalias !23
  %182 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %36, i64 %90, i32 0, i64 60
  %183 = bitcast float* %182 to <4 x float>*
  %184 = load <4 x float>, <4 x float>* %183, align 4, !alias.scope !23
  %185 = load <4 x float>, <4 x float>* %87, align 16, !alias.scope !26, !noalias !23
  %186 = fadd <4 x float> %184, %185
  store <4 x float> %186, <4 x float>* %88, align 16, !alias.scope !26, !noalias !23
  br label %97

187:                                              ; preds = %190, %97
  %188 = add nuw i64 %90, 1
  %189 = icmp ult i64 %188, %38
  br i1 %189, label %89, label %205

190:                                              ; preds = %97, %190
  %191 = phi i64 [ %203, %190 ], [ %104, %97 ]
  %192 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %36, i64 %90, i32 0, i64 %191
  %193 = load float, float* %192, align 4
  %194 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 %191
  %195 = load float, float* %194, align 4
  %196 = fadd float %193, %195
  store float %196, float* %194, align 4
  %197 = add nuw nsw i64 %191, 1
  %198 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %36, i64 %90, i32 0, i64 %197
  %199 = load float, float* %198, align 4
  %200 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 %197
  %201 = load float, float* %200, align 4
  %202 = fadd float %199, %201
  store float %202, float* %200, align 4
  %203 = add nuw nsw i64 %191, 2
  %204 = icmp eq i64 %203, 65
  br i1 %204, label %187, label %190, !llvm.loop !28

205:                                              ; preds = %187, %6
  %206 = phi %"struct.std::__1::array"* [ %36, %6 ], [ %7, %187 ]
  br i1 %9, label %207, label %219

207:                                              ; preds = %205
  %208 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 9
  %209 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %2, i64 0, i32 19, i32 1, i32 0, i32 0
  %210 = load %"class.webrtc::ReverbFrequencyResponse"*, %"class.webrtc::ReverbFrequencyResponse"** %209, align 8
  %211 = getelementptr inbounds %"class.webrtc::ReverbFrequencyResponse", %"class.webrtc::ReverbFrequencyResponse"* %210, i64 0, i32 1, i32 0, i64 0
  %212 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %2, i64 0, i32 19, i32 0, i32 0, i32 0
  %213 = load %"class.std::__1::unique_ptr.135"*, %"class.std::__1::unique_ptr.135"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.135"* %213, i64 0, i32 0, i32 0, i32 0
  %215 = load %"class.webrtc::ReverbDecayEstimator"*, %"class.webrtc::ReverbDecayEstimator"** %214, align 8
  %216 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %215, i64 0, i32 13
  %217 = load float, float* %216, align 8
  %218 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %206, i64 0, i32 0, i64 0
  call void @_ZN6webrtc11ReverbModel12UpdateReverbEN3rtc9ArrayViewIKfLln4711EEES4_f(%"class.webrtc::ReverbModel"* %208, float* %218, i64 65, float* %211, i64 65, float %217) #11
  br label %246

219:                                              ; preds = %205
  %220 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %2, i64 0, i32 8, i32 0, i32 0, i32 0
  %221 = load %"class.webrtc::TransparentMode"*, %"class.webrtc::TransparentMode"** %220, align 8
  %222 = icmp eq %"class.webrtc::TransparentMode"* %221, null
  br i1 %222, label %223, label %225

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 5
  br label %234

225:                                              ; preds = %219
  %226 = bitcast %"class.webrtc::TransparentMode"* %221 to i1 (%"class.webrtc::TransparentMode"*)***
  %227 = load i1 (%"class.webrtc::TransparentMode"*)**, i1 (%"class.webrtc::TransparentMode"*)*** %226, align 8
  %228 = getelementptr inbounds i1 (%"class.webrtc::TransparentMode"*)*, i1 (%"class.webrtc::TransparentMode"*)** %227, i64 2
  %229 = load i1 (%"class.webrtc::TransparentMode"*)*, i1 (%"class.webrtc::TransparentMode"*)** %228, align 8
  %230 = tail call zeroext i1 %229(%"class.webrtc::TransparentMode"* nonnull %221) #11
  %231 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 3
  %232 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 5
  %233 = select i1 %230, float* %231, float* %232
  br label %234

234:                                              ; preds = %223, %225
  %235 = phi float* [ %224, %223 ], [ %233, %225 ]
  %236 = load float, float* %235, align 4
  %237 = fmul float %236, %236
  %238 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 9
  %239 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %2, i64 0, i32 19, i32 0, i32 0, i32 0
  %240 = load %"class.std::__1::unique_ptr.135"*, %"class.std::__1::unique_ptr.135"** %239, align 8
  %241 = getelementptr inbounds %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.135"* %240, i64 0, i32 0, i32 0, i32 0
  %242 = load %"class.webrtc::ReverbDecayEstimator"*, %"class.webrtc::ReverbDecayEstimator"** %241, align 8
  %243 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %242, i64 0, i32 13
  %244 = load float, float* %243, align 8
  %245 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %206, i64 0, i32 0, i64 0
  call void @_ZN6webrtc11ReverbModel25UpdateReverbNoFreqShapingEN3rtc9ArrayViewIKfLln4711EEEff(%"class.webrtc::ReverbModel"* %238, float* %245, i64 65, float %237, float %244) #11
  br label %246

246:                                              ; preds = %234, %207
  %247 = icmp eq i64 %5, 0
  br i1 %247, label %398, label %248

248:                                              ; preds = %246
  %249 = getelementptr %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 9, i32 0, i32 0, i64 0
  %250 = getelementptr %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 1
  %251 = bitcast %"class.webrtc::ResidualEchoEstimator"* %250 to %"struct.std::__1::array"*
  %252 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 9, i32 0, i32 0, i64 0
  %253 = bitcast float* %252 to <4 x float>*
  %254 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 9, i32 0, i32 0, i64 4
  %255 = bitcast float* %254 to <4 x float>*
  %256 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 9, i32 0, i32 0, i64 8
  %257 = bitcast float* %256 to <4 x float>*
  %258 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 9, i32 0, i32 0, i64 12
  %259 = bitcast float* %258 to <4 x float>*
  %260 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 9, i32 0, i32 0, i64 16
  %261 = bitcast float* %260 to <4 x float>*
  %262 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 9, i32 0, i32 0, i64 20
  %263 = bitcast float* %262 to <4 x float>*
  %264 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 9, i32 0, i32 0, i64 24
  %265 = bitcast float* %264 to <4 x float>*
  %266 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 9, i32 0, i32 0, i64 28
  %267 = bitcast float* %266 to <4 x float>*
  %268 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 9, i32 0, i32 0, i64 32
  %269 = bitcast float* %268 to <4 x float>*
  %270 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 9, i32 0, i32 0, i64 36
  %271 = bitcast float* %270 to <4 x float>*
  %272 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 9, i32 0, i32 0, i64 40
  %273 = bitcast float* %272 to <4 x float>*
  %274 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 9, i32 0, i32 0, i64 44
  %275 = bitcast float* %274 to <4 x float>*
  %276 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 9, i32 0, i32 0, i64 48
  %277 = bitcast float* %276 to <4 x float>*
  %278 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 9, i32 0, i32 0, i64 52
  %279 = bitcast float* %278 to <4 x float>*
  %280 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 9, i32 0, i32 0, i64 56
  %281 = bitcast float* %280 to <4 x float>*
  %282 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 9, i32 0, i32 0, i64 60
  %283 = bitcast float* %282 to <4 x float>*
  br label %284

284:                                              ; preds = %399, %248
  %285 = phi i64 [ %400, %399 ], [ 0, %248 ]
  %286 = add i64 %285, 1
  %287 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %285
  %288 = icmp ult %"struct.std::__1::array"* %287, %251
  %289 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %286, i32 0, i64 0
  %290 = icmp ult float* %249, %289
  %291 = and i1 %288, %290
  br i1 %291, label %292, label %301

292:                                              ; preds = %301, %284
  %293 = phi i64 [ 0, %284 ], [ 64, %301 ]
  %294 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 9, i32 0, i32 0, i64 %293
  %295 = load float, float* %294, align 4
  %296 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %285, i32 0, i64 %293
  %297 = load float, float* %296, align 4
  %298 = fadd float %295, %297
  store float %298, float* %296, align 4
  %299 = or i64 %293, 1
  %300 = icmp eq i64 %293, 64
  br i1 %300, label %399, label %402

301:                                              ; preds = %284
  %302 = load <4 x float>, <4 x float>* %253, align 4, !alias.scope !29
  %303 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %285, i32 0, i64 0
  %304 = bitcast float* %303 to <4 x float>*
  %305 = load <4 x float>, <4 x float>* %304, align 4, !alias.scope !32, !noalias !29
  %306 = fadd <4 x float> %302, %305
  %307 = bitcast float* %303 to <4 x float>*
  store <4 x float> %306, <4 x float>* %307, align 4, !alias.scope !32, !noalias !29
  %308 = load <4 x float>, <4 x float>* %255, align 4, !alias.scope !29
  %309 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %285, i32 0, i64 4
  %310 = bitcast float* %309 to <4 x float>*
  %311 = load <4 x float>, <4 x float>* %310, align 4, !alias.scope !32, !noalias !29
  %312 = fadd <4 x float> %308, %311
  %313 = bitcast float* %309 to <4 x float>*
  store <4 x float> %312, <4 x float>* %313, align 4, !alias.scope !32, !noalias !29
  %314 = load <4 x float>, <4 x float>* %257, align 4, !alias.scope !29
  %315 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %285, i32 0, i64 8
  %316 = bitcast float* %315 to <4 x float>*
  %317 = load <4 x float>, <4 x float>* %316, align 4, !alias.scope !32, !noalias !29
  %318 = fadd <4 x float> %314, %317
  %319 = bitcast float* %315 to <4 x float>*
  store <4 x float> %318, <4 x float>* %319, align 4, !alias.scope !32, !noalias !29
  %320 = load <4 x float>, <4 x float>* %259, align 4, !alias.scope !29
  %321 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %285, i32 0, i64 12
  %322 = bitcast float* %321 to <4 x float>*
  %323 = load <4 x float>, <4 x float>* %322, align 4, !alias.scope !32, !noalias !29
  %324 = fadd <4 x float> %320, %323
  %325 = bitcast float* %321 to <4 x float>*
  store <4 x float> %324, <4 x float>* %325, align 4, !alias.scope !32, !noalias !29
  %326 = load <4 x float>, <4 x float>* %261, align 4, !alias.scope !29
  %327 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %285, i32 0, i64 16
  %328 = bitcast float* %327 to <4 x float>*
  %329 = load <4 x float>, <4 x float>* %328, align 4, !alias.scope !32, !noalias !29
  %330 = fadd <4 x float> %326, %329
  %331 = bitcast float* %327 to <4 x float>*
  store <4 x float> %330, <4 x float>* %331, align 4, !alias.scope !32, !noalias !29
  %332 = load <4 x float>, <4 x float>* %263, align 4, !alias.scope !29
  %333 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %285, i32 0, i64 20
  %334 = bitcast float* %333 to <4 x float>*
  %335 = load <4 x float>, <4 x float>* %334, align 4, !alias.scope !32, !noalias !29
  %336 = fadd <4 x float> %332, %335
  %337 = bitcast float* %333 to <4 x float>*
  store <4 x float> %336, <4 x float>* %337, align 4, !alias.scope !32, !noalias !29
  %338 = load <4 x float>, <4 x float>* %265, align 4, !alias.scope !29
  %339 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %285, i32 0, i64 24
  %340 = bitcast float* %339 to <4 x float>*
  %341 = load <4 x float>, <4 x float>* %340, align 4, !alias.scope !32, !noalias !29
  %342 = fadd <4 x float> %338, %341
  %343 = bitcast float* %339 to <4 x float>*
  store <4 x float> %342, <4 x float>* %343, align 4, !alias.scope !32, !noalias !29
  %344 = load <4 x float>, <4 x float>* %267, align 4, !alias.scope !29
  %345 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %285, i32 0, i64 28
  %346 = bitcast float* %345 to <4 x float>*
  %347 = load <4 x float>, <4 x float>* %346, align 4, !alias.scope !32, !noalias !29
  %348 = fadd <4 x float> %344, %347
  %349 = bitcast float* %345 to <4 x float>*
  store <4 x float> %348, <4 x float>* %349, align 4, !alias.scope !32, !noalias !29
  %350 = load <4 x float>, <4 x float>* %269, align 4, !alias.scope !29
  %351 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %285, i32 0, i64 32
  %352 = bitcast float* %351 to <4 x float>*
  %353 = load <4 x float>, <4 x float>* %352, align 4, !alias.scope !32, !noalias !29
  %354 = fadd <4 x float> %350, %353
  %355 = bitcast float* %351 to <4 x float>*
  store <4 x float> %354, <4 x float>* %355, align 4, !alias.scope !32, !noalias !29
  %356 = load <4 x float>, <4 x float>* %271, align 4, !alias.scope !29
  %357 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %285, i32 0, i64 36
  %358 = bitcast float* %357 to <4 x float>*
  %359 = load <4 x float>, <4 x float>* %358, align 4, !alias.scope !32, !noalias !29
  %360 = fadd <4 x float> %356, %359
  %361 = bitcast float* %357 to <4 x float>*
  store <4 x float> %360, <4 x float>* %361, align 4, !alias.scope !32, !noalias !29
  %362 = load <4 x float>, <4 x float>* %273, align 4, !alias.scope !29
  %363 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %285, i32 0, i64 40
  %364 = bitcast float* %363 to <4 x float>*
  %365 = load <4 x float>, <4 x float>* %364, align 4, !alias.scope !32, !noalias !29
  %366 = fadd <4 x float> %362, %365
  %367 = bitcast float* %363 to <4 x float>*
  store <4 x float> %366, <4 x float>* %367, align 4, !alias.scope !32, !noalias !29
  %368 = load <4 x float>, <4 x float>* %275, align 4, !alias.scope !29
  %369 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %285, i32 0, i64 44
  %370 = bitcast float* %369 to <4 x float>*
  %371 = load <4 x float>, <4 x float>* %370, align 4, !alias.scope !32, !noalias !29
  %372 = fadd <4 x float> %368, %371
  %373 = bitcast float* %369 to <4 x float>*
  store <4 x float> %372, <4 x float>* %373, align 4, !alias.scope !32, !noalias !29
  %374 = load <4 x float>, <4 x float>* %277, align 4, !alias.scope !29
  %375 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %285, i32 0, i64 48
  %376 = bitcast float* %375 to <4 x float>*
  %377 = load <4 x float>, <4 x float>* %376, align 4, !alias.scope !32, !noalias !29
  %378 = fadd <4 x float> %374, %377
  %379 = bitcast float* %375 to <4 x float>*
  store <4 x float> %378, <4 x float>* %379, align 4, !alias.scope !32, !noalias !29
  %380 = load <4 x float>, <4 x float>* %279, align 4, !alias.scope !29
  %381 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %285, i32 0, i64 52
  %382 = bitcast float* %381 to <4 x float>*
  %383 = load <4 x float>, <4 x float>* %382, align 4, !alias.scope !32, !noalias !29
  %384 = fadd <4 x float> %380, %383
  %385 = bitcast float* %381 to <4 x float>*
  store <4 x float> %384, <4 x float>* %385, align 4, !alias.scope !32, !noalias !29
  %386 = load <4 x float>, <4 x float>* %281, align 4, !alias.scope !29
  %387 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %285, i32 0, i64 56
  %388 = bitcast float* %387 to <4 x float>*
  %389 = load <4 x float>, <4 x float>* %388, align 4, !alias.scope !32, !noalias !29
  %390 = fadd <4 x float> %386, %389
  %391 = bitcast float* %387 to <4 x float>*
  store <4 x float> %390, <4 x float>* %391, align 4, !alias.scope !32, !noalias !29
  %392 = load <4 x float>, <4 x float>* %283, align 4, !alias.scope !29
  %393 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %285, i32 0, i64 60
  %394 = bitcast float* %393 to <4 x float>*
  %395 = load <4 x float>, <4 x float>* %394, align 4, !alias.scope !32, !noalias !29
  %396 = fadd <4 x float> %392, %395
  %397 = bitcast float* %393 to <4 x float>*
  store <4 x float> %396, <4 x float>* %397, align 4, !alias.scope !32, !noalias !29
  br label %292

398:                                              ; preds = %399, %246
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %8) #11
  ret void

399:                                              ; preds = %402, %292
  %400 = add nuw i64 %285, 1
  %401 = icmp eq i64 %400, %5
  br i1 %401, label %398, label %284

402:                                              ; preds = %292, %402
  %403 = phi i64 [ %415, %402 ], [ %299, %292 ]
  %404 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 9, i32 0, i32 0, i64 %403
  %405 = load float, float* %404, align 4
  %406 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %285, i32 0, i64 %403
  %407 = load float, float* %406, align 4
  %408 = fadd float %405, %407
  store float %408, float* %406, align 4
  %409 = add nuw nsw i64 %403, 1
  %410 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 9, i32 0, i32 0, i64 %409
  %411 = load float, float* %410, align 4
  %412 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %285, i32 0, i64 %409
  %413 = load float, float* %412, align 4
  %414 = fadd float %411, %413
  store float %414, float* %412, align 4
  %415 = add nuw nsw i64 %403, 2
  %416 = icmp eq i64 %415, 65
  br i1 %416, label %399, label %402, !llvm.loop !34
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK6webrtc21ResidualEchoEstimator15GetEchoPathGainERKNS_8AecStateEb(%"class.webrtc::ResidualEchoEstimator"* nocapture readonly, %"class.webrtc::AecState"* nocapture readonly dereferenceable(3016), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %1, i64 0, i32 8, i32 0, i32 0, i32 0
  %5 = load %"class.webrtc::TransparentMode"*, %"class.webrtc::TransparentMode"** %4, align 8
  %6 = icmp eq %"class.webrtc::TransparentMode"* %5, null
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 5
  %10 = select i1 %2, float* %8, float* %9
  br label %24

11:                                               ; preds = %3
  %12 = bitcast %"class.webrtc::TransparentMode"* %5 to i1 (%"class.webrtc::TransparentMode"*)***
  %13 = load i1 (%"class.webrtc::TransparentMode"*)**, i1 (%"class.webrtc::TransparentMode"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.webrtc::TransparentMode"*)*, i1 (%"class.webrtc::TransparentMode"*)** %13, i64 2
  %15 = load i1 (%"class.webrtc::TransparentMode"*)*, i1 (%"class.webrtc::TransparentMode"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.webrtc::TransparentMode"* nonnull %5) #11
  %17 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 2
  %18 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 3
  %19 = select i1 %2, float* %17, float* %18
  %20 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 4
  %21 = getelementptr inbounds %"class.webrtc::ResidualEchoEstimator", %"class.webrtc::ResidualEchoEstimator"* %0, i64 0, i32 5
  %22 = select i1 %2, float* %20, float* %21
  %23 = select i1 %16, float* %19, float* %22
  br label %24

24:                                               ; preds = %11, %7
  %25 = phi float* [ %10, %7 ], [ %23, %11 ]
  %26 = load float, float* %25, align 4
  %27 = fmul float %26, %26
  ret float %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZNK6webrtc8AecState22GetResidualEchoScalingEN3rtc9ArrayViewIfLln4711EEE(%"class.webrtc::AecState"*, float*, i64) local_unnamed_addr #1

declare void @_ZN6webrtc11ReverbModel5ResetEv(%"class.webrtc::ReverbModel"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN6webrtc11ReverbModel12UpdateReverbEN3rtc9ArrayViewIKfLln4711EEES4_f(%"class.webrtc::ReverbModel"*, float*, i64, float*, i64, float) local_unnamed_addr #1

declare void @_ZN6webrtc11ReverbModel25UpdateReverbNoFreqShapingEN3rtc9ArrayViewIKfLln4711EEEff(%"class.webrtc::ReverbModel"*, float*, i64, float, float) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6webrtc11field_trial9IsEnabledEPKc(i8*) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #11
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = tail call i64 @strlen(i8* %0) #11
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %9) #12
  unreachable

10:                                               ; preds = %1
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %20, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #13
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  br label %25

20:                                               ; preds = %10
  %21 = trunc i64 %6 to i8
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = icmp eq i64 %6, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20, %12
  %26 = phi i8* [ %15, %12 ], [ %5, %20 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 %0, i64 %6, i1 false) #11
  br label %27

27:                                               ; preds = %20, %25
  %28 = phi i8* [ %5, %20 ], [ %26, %25 ]
  %29 = getelementptr inbounds i8, i8* %28, i64 %6
  store i8 0, i8* %29, align 1
  call void @_ZN6webrtc11field_trial12FindFullNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #11
  %30 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = select i1 %33, i8* %35, i8* %4
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %32 to i64
  %40 = select i1 %33, i64 %38, i64 %39
  %41 = getelementptr inbounds i8, i8* %36, i64 %40
  %42 = ptrtoint i8* %41 to i64
  %43 = ptrtoint i8* %36 to i64
  %44 = icmp slt i64 %40, 7
  br i1 %44, label %63, label %45

45:                                               ; preds = %27, %58
  %46 = phi i64 [ %61, %58 ], [ %40, %27 ]
  %47 = phi i8* [ %59, %58 ], [ %36, %27 ]
  %48 = add nsw i64 %46, -6
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %63, label %50

50:                                               ; preds = %45
  %51 = call i8* @memchr(i8* %47, i32 69, i64 %48) #11
  %52 = icmp eq i8* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %50
  %54 = call i32 @bcmp(i8* nonnull %51, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7) #11
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %53
  %57 = ptrtoint i8* %51 to i64
  br label %63

58:                                               ; preds = %53
  %59 = getelementptr inbounds i8, i8* %51, i64 1
  %60 = ptrtoint i8* %59 to i64
  %61 = sub i64 %42, %60
  %62 = icmp slt i64 %61, 7
  br i1 %62, label %63, label %45

63:                                               ; preds = %58, %50, %45, %56, %27
  %64 = phi i64 [ %42, %27 ], [ %57, %56 ], [ %42, %45 ], [ %42, %50 ], [ %42, %58 ]
  %65 = phi i8* [ %41, %27 ], [ %51, %56 ], [ %41, %45 ], [ %41, %50 ], [ %41, %58 ]
  %66 = icmp ne i8* %65, %41
  %67 = icmp eq i64 %64, %43
  %68 = and i1 %67, %66
  br i1 %33, label %69, label %70

69:                                               ; preds = %63
  call void @_ZdlPv(i8* %35) #13
  br label %70

70:                                               ; preds = %63, %69
  %71 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %77) #13
  br label %78

78:                                               ; preds = %70, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #11
  ret i1 %68
}

declare void @_ZN6webrtc11field_trial12FindFullNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = !{!9}
!9 = distinct !{!9, !5}
!10 = !{!4, !7}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.isvectorized", i32 1}
!13 = distinct !{!13, !12}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.unroll.disable"}
!16 = distinct !{!16, !15}
!17 = !{!18}
!18 = distinct !{!18, !19}
!19 = distinct !{!19, !"LVerDomain"}
!20 = !{!21}
!21 = distinct !{!21, !19}
!22 = distinct !{!22, !12}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !12}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !12}
